<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/321/321.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:14"><decl pos:start="4:1" pos:end="4:13"><type pos:start="4:1" pos:end="4:6"><name pos:start="4:1" pos:end="4:6">string</name></type> <name pos:start="4:8" pos:end="4:13"><name pos:start="4:8" pos:end="4:8">q</name><index pos:start="4:9" pos:end="4:13">[<expr pos:start="4:10" pos:end="4:12"><literal type="number" pos:start="4:10" pos:end="4:12">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:17"><decl pos:start="5:1" pos:end="5:9"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:5">l</name> <init pos:start="5:7" pos:end="5:9">= <expr pos:start="5:9" pos:end="5:9"><literal type="number" pos:start="5:9" pos:end="5:9">0</literal></expr></init></decl>, <decl pos:start="5:12" pos:end="5:16"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:12" pos:end="5:12">r</name> <init pos:start="5:14" pos:end="5:16">= <expr pos:start="5:16" pos:end="5:16"><literal type="number" pos:start="5:16" pos:end="5:16">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="13:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">flag</name><parameter_list pos:start="6:9" pos:end="6:21">(<parameter pos:start="6:10" pos:end="6:20"><decl pos:start="6:10" pos:end="6:20"><type pos:start="6:10" pos:end="6:15"><name pos:start="6:10" pos:end="6:15">string</name></type> <name pos:start="6:17" pos:end="6:20">name</name></decl></parameter>)</parameter_list> <block pos:start="6:23" pos:end="13:1">{<block_content pos:start="7:5" pos:end="12:14">
    <for pos:start="7:5" pos:end="11:5">for <control pos:start="7:9" pos:end="7:31">(<init pos:start="7:10" pos:end="7:19"><decl pos:start="7:10" pos:end="7:18"><type pos:start="7:10" pos:end="7:12"><name pos:start="7:10" pos:end="7:12">int</name></type> <name pos:start="7:14" pos:end="7:14">i</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><name pos:start="7:18" pos:end="7:18">l</name></expr></init></decl>;</init> <condition pos:start="7:21" pos:end="7:26"><expr pos:start="7:21" pos:end="7:25"><name pos:start="7:21" pos:end="7:21">i</name> <operator pos:start="7:23" pos:end="7:23">&lt;</operator> <name pos:start="7:25" pos:end="7:25">r</name></expr>;</condition> <incr pos:start="7:28" pos:end="7:30"><expr pos:start="7:28" pos:end="7:30"><name pos:start="7:28" pos:end="7:28">i</name><operator pos:start="7:29" pos:end="7:30">++</operator></expr></incr>)</control> <block pos:start="7:33" pos:end="11:5">{<block_content pos:start="8:9" pos:end="10:9">
        <if_stmt pos:start="8:9" pos:end="10:9"><if pos:start="8:9" pos:end="10:9">if <condition pos:start="8:12" pos:end="8:31">(<expr pos:start="8:13" pos:end="8:30"><name pos:start="8:13" pos:end="8:19"><name pos:start="8:13" pos:end="8:16">name</name><index pos:start="8:17" pos:end="8:19">[<expr pos:start="8:18" pos:end="8:18"><literal type="number" pos:start="8:18" pos:end="8:18">0</literal></expr>]</index></name> <operator pos:start="8:21" pos:end="8:22">==</operator> <name pos:start="8:24" pos:end="8:30"><name pos:start="8:24" pos:end="8:24">q</name><index pos:start="8:25" pos:end="8:27">[<expr pos:start="8:26" pos:end="8:26"><name pos:start="8:26" pos:end="8:26">i</name></expr>]</index><index pos:start="8:28" pos:end="8:30">[<expr pos:start="8:29" pos:end="8:29"><literal type="number" pos:start="8:29" pos:end="8:29">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="8:33" pos:end="10:9">{<block_content pos:start="9:13" pos:end="9:21">
            <return pos:start="9:13" pos:end="9:21">return <expr pos:start="9:20" pos:end="9:20"><name pos:start="9:20" pos:end="9:20">i</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="12:5" pos:end="12:14">return <expr pos:start="12:12" pos:end="12:13"><operator pos:start="12:12" pos:end="12:12">-</operator><literal type="number" pos:start="12:13" pos:end="12:13">1</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="14:1" pos:end="38:1"><type pos:start="14:1" pos:end="14:3"><name pos:start="14:1" pos:end="14:3">int</name></type> <name pos:start="14:5" pos:end="14:8">main</name><parameter_list pos:start="14:9" pos:end="14:10">()</parameter_list> <block pos:start="14:12" pos:end="38:1">{<block_content pos:start="15:5" pos:end="37:13">
    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:13"><expr pos:start="16:5" pos:end="16:12"><name pos:start="16:5" pos:end="16:7">cin</name> <operator pos:start="16:9" pos:end="16:10">&gt;&gt;</operator> <name pos:start="16:12" pos:end="16:12">n</name></expr>;</expr_stmt>
    <while pos:start="17:5" pos:end="36:5">while <condition pos:start="17:11" pos:end="17:15">(<expr pos:start="17:12" pos:end="17:14"><name pos:start="17:12" pos:end="17:12">n</name><operator pos:start="17:13" pos:end="17:14">--</operator></expr>)</condition> <block pos:start="17:17" pos:end="36:5">{<block_content pos:start="18:9" pos:end="35:9">
        <decl_stmt pos:start="18:9" pos:end="18:14"><decl pos:start="18:9" pos:end="18:13"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">k</name></decl>;</decl_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:17"><expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:11">cin</name> <operator pos:start="19:13" pos:end="19:14">&gt;&gt;</operator> <name pos:start="19:16" pos:end="19:16">k</name></expr>;</expr_stmt>
        <if_stmt pos:start="20:9" pos:end="35:9"><if pos:start="20:9" pos:end="32:9">if <condition pos:start="20:12" pos:end="20:19">(<expr pos:start="20:13" pos:end="20:18"><name pos:start="20:13" pos:end="20:13">k</name> <operator pos:start="20:15" pos:end="20:16">==</operator> <literal type="number" pos:start="20:18" pos:end="20:18">1</literal></expr>)</condition> <block pos:start="20:21" pos:end="32:9">{<block_content pos:start="21:13" pos:end="31:16">
            <decl_stmt pos:start="21:13" pos:end="21:24"><decl pos:start="21:13" pos:end="21:23"><type pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:18">string</name></type> <name pos:start="21:20" pos:end="21:23">name</name></decl>;</decl_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:24"><expr pos:start="22:13" pos:end="22:23"><name pos:start="22:13" pos:end="22:15">cin</name> <operator pos:start="22:17" pos:end="22:18">&gt;&gt;</operator> <name pos:start="22:20" pos:end="22:23">name</name></expr>;</expr_stmt>
            <if_stmt pos:start="23:13" pos:end="30:13"><if pos:start="23:13" pos:end="28:13">if <condition pos:start="23:16" pos:end="23:33">(<expr pos:start="23:17" pos:end="23:32"><call pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:20">flag</name><argument_list pos:start="23:21" pos:end="23:26">(<argument pos:start="23:22" pos:end="23:25"><expr pos:start="23:22" pos:end="23:25"><name pos:start="23:22" pos:end="23:25">name</name></expr></argument>)</argument_list></call> <operator pos:start="23:28" pos:end="23:29">!=</operator> <operator pos:start="23:31" pos:end="23:31">-</operator><literal type="number" pos:start="23:32" pos:end="23:32">1</literal></expr>)</condition> <block pos:start="23:35" pos:end="28:13">{<block_content pos:start="24:17" pos:end="27:41">
                <for pos:start="24:17" pos:end="26:17">for <control pos:start="24:21" pos:end="24:56">(<init pos:start="24:22" pos:end="24:31"><decl pos:start="24:22" pos:end="24:30"><type pos:start="24:22" pos:end="24:24"><name pos:start="24:22" pos:end="24:24">int</name></type> <name pos:start="24:26" pos:end="24:26">i</name> <init pos:start="24:28" pos:end="24:30">= <expr pos:start="24:30" pos:end="24:30"><name pos:start="24:30" pos:end="24:30">r</name></expr></init></decl>;</init> <condition pos:start="24:33" pos:end="24:51"><expr pos:start="24:33" pos:end="24:50"><name pos:start="24:33" pos:end="24:33">i</name> <operator pos:start="24:35" pos:end="24:35">&gt;</operator> <call pos:start="24:37" pos:end="24:46"><name pos:start="24:37" pos:end="24:40">flag</name><argument_list pos:start="24:41" pos:end="24:46">(<argument pos:start="24:42" pos:end="24:45"><expr pos:start="24:42" pos:end="24:45"><name pos:start="24:42" pos:end="24:45">name</name></expr></argument>)</argument_list></call> <operator pos:start="24:48" pos:end="24:48">+</operator> <literal type="number" pos:start="24:50" pos:end="24:50">1</literal></expr>;</condition> <incr pos:start="24:53" pos:end="24:55"><expr pos:start="24:53" pos:end="24:55"><name pos:start="24:53" pos:end="24:53">i</name><operator pos:start="24:54" pos:end="24:55">--</operator></expr></incr>)</control> <block pos:start="24:58" pos:end="26:17">{<block_content pos:start="25:21" pos:end="25:34">
                    <expr_stmt pos:start="25:21" pos:end="25:34"><expr pos:start="25:21" pos:end="25:33"><name pos:start="25:21" pos:end="25:24"><name pos:start="25:21" pos:end="25:21">q</name><index pos:start="25:22" pos:end="25:24">[<expr pos:start="25:23" pos:end="25:23"><name pos:start="25:23" pos:end="25:23">i</name></expr>]</index></name> <operator pos:start="25:26" pos:end="25:26">=</operator> <name pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:28">q</name><index pos:start="25:29" pos:end="25:33">[<expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:30">i</name><operator pos:start="25:31" pos:end="25:31">-</operator><literal type="number" pos:start="25:32" pos:end="25:32">1</literal></expr>]</index></name></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt pos:start="27:17" pos:end="27:41"><expr pos:start="27:17" pos:end="27:40"><name pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:17">q</name><index pos:start="27:18" pos:end="27:33">[<expr pos:start="27:19" pos:end="27:32"><call pos:start="27:19" pos:end="27:28"><name pos:start="27:19" pos:end="27:22">flag</name><argument_list pos:start="27:23" pos:end="27:28">(<argument pos:start="27:24" pos:end="27:27"><expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">name</name></expr></argument>)</argument_list></call> <operator pos:start="27:30" pos:end="27:30">+</operator> <literal type="number" pos:start="27:32" pos:end="27:32">1</literal></expr>]</index></name> <operator pos:start="27:35" pos:end="27:35">=</operator> <name pos:start="27:37" pos:end="27:40">name</name></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="28:15" pos:end="30:13">else <block pos:start="28:20" pos:end="30:13">{<block_content pos:start="29:17" pos:end="29:28">
                <expr_stmt pos:start="29:17" pos:end="29:28"><expr pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:20"><name pos:start="29:17" pos:end="29:17">q</name><index pos:start="29:18" pos:end="29:20">[<expr pos:start="29:19" pos:end="29:19"><name pos:start="29:19" pos:end="29:19">r</name></expr>]</index></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:27">name</name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
            <expr_stmt pos:start="31:13" pos:end="31:16"><expr pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:13">r</name><operator pos:start="31:14" pos:end="31:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="32:11" pos:end="35:9">else <block pos:start="32:16" pos:end="35:9">{<block_content pos:start="33:13" pos:end="34:16">
            <expr_stmt pos:start="33:13" pos:end="33:33"><expr pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:16">cout</name> <operator pos:start="33:18" pos:end="33:19">&lt;&lt;</operator> <name pos:start="33:21" pos:end="33:24"><name pos:start="33:21" pos:end="33:21">q</name><index pos:start="33:22" pos:end="33:24">[<expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">l</name></expr>]</index></name> <operator pos:start="33:26" pos:end="33:27">&lt;&lt;</operator> <name pos:start="33:29" pos:end="33:32">endl</name></expr>;</expr_stmt>
            <expr_stmt pos:start="34:13" pos:end="34:16"><expr pos:start="34:13" pos:end="34:15"><name pos:start="34:13" pos:end="34:13">l</name><operator pos:start="34:14" pos:end="34:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
