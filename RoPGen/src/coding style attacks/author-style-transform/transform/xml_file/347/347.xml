<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/347/347.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>

<function pos:start="4:1" pos:end="70:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="70:1">{<block_content pos:start="5:5" pos:end="69:13">
    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">op</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:12"><expr pos:start="6:5" pos:end="6:11"><name pos:start="6:5" pos:end="6:7">cin</name><operator pos:start="6:8" pos:end="6:9">&gt;&gt;</operator><name pos:start="6:10" pos:end="6:11">op</name></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:9">stack</name><argument_list type="generic" pos:start="7:10" pos:end="7:14">&lt;<argument pos:start="7:11" pos:end="7:13"><expr pos:start="7:11" pos:end="7:13"><name pos:start="7:11" pos:end="7:13">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="7:16" pos:end="7:18">sk1</name></decl>,<decl pos:start="7:20" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:14"/><name pos:start="7:20" pos:end="7:22">sk2</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:30"><decl pos:start="8:5" pos:end="8:19"><type pos:start="8:5" pos:end="8:15"><name pos:start="8:5" pos:end="8:15"><name pos:start="8:5" pos:end="8:10">vector</name><argument_list type="generic" pos:start="8:11" pos:end="8:15">&lt;<argument pos:start="8:12" pos:end="8:14"><expr pos:start="8:12" pos:end="8:14"><name pos:start="8:12" pos:end="8:14">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="8:17" pos:end="8:19">vec</name></decl>,<decl pos:start="8:21" pos:end="8:24"><type ref="prev" pos:start="8:5" pos:end="8:15"/><name pos:start="8:21" pos:end="8:24">ans1</name></decl>,<decl pos:start="8:26" pos:end="8:29"><type ref="prev" pos:start="8:5" pos:end="8:15"/><name pos:start="8:26" pos:end="8:29">ans2</name></decl>;</decl_stmt>
    <for pos:start="9:5" pos:end="11:5">for<control pos:start="9:8" pos:end="9:27">(<init pos:start="9:9" pos:end="9:16"><decl pos:start="9:9" pos:end="9:15"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">i</name><init pos:start="9:14" pos:end="9:15">=<expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</init><condition pos:start="9:17" pos:end="9:23"><expr pos:start="9:17" pos:end="9:22"><name pos:start="9:17" pos:end="9:17">i</name><operator pos:start="9:18" pos:end="9:19">&lt;=</operator><literal type="number" pos:start="9:20" pos:end="9:22">110</literal></expr>;</condition><incr pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><name pos:start="9:24" pos:end="9:24">i</name><operator pos:start="9:25" pos:end="9:26">++</operator></expr></incr>)</control><block pos:start="9:28" pos:end="11:5">{<block_content pos:start="10:9" pos:end="10:25">
        <expr_stmt pos:start="10:9" pos:end="10:25"><expr pos:start="10:9" pos:end="10:24"><call pos:start="10:9" pos:end="10:24"><name pos:start="10:9" pos:end="10:21"><name pos:start="10:9" pos:end="10:11">vec</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:21">push_back</name></name><argument_list pos:start="10:22" pos:end="10:24">(<argument pos:start="10:23" pos:end="10:23"><expr pos:start="10:23" pos:end="10:23"><literal type="number" pos:start="10:23" pos:end="10:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <while pos:start="12:5" pos:end="54:5">while<condition pos:start="12:10" pos:end="12:15">(<expr pos:start="12:11" pos:end="12:14"><name pos:start="12:11" pos:end="12:12">op</name><operator pos:start="12:13" pos:end="12:14">--</operator></expr>)</condition><block pos:start="12:16" pos:end="54:5">{<block_content pos:start="13:9" pos:end="53:9">
        <decl_stmt pos:start="13:9" pos:end="13:15"><decl pos:start="13:9" pos:end="13:14"><type pos:start="13:9" pos:end="13:12"><name pos:start="13:9" pos:end="13:12">char</name></type> <name pos:start="13:14" pos:end="13:14">c</name></decl>;</decl_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:15"><expr pos:start="14:9" pos:end="14:14"><name pos:start="14:9" pos:end="14:11">cin</name><operator pos:start="14:12" pos:end="14:13">&gt;&gt;</operator><name pos:start="14:14" pos:end="14:14">c</name></expr>;</expr_stmt>
        <decl_stmt pos:start="15:9" pos:end="15:15"><decl pos:start="15:9" pos:end="15:14"><type pos:start="15:9" pos:end="15:12"><name pos:start="15:9" pos:end="15:12">char</name></type> <name pos:start="15:14" pos:end="15:14">x</name></decl>;</decl_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:15"><expr pos:start="16:9" pos:end="16:14"><name pos:start="16:9" pos:end="16:11">cin</name><operator pos:start="16:12" pos:end="16:13">&gt;&gt;</operator><name pos:start="16:14" pos:end="16:14">x</name></expr>;</expr_stmt>
        <if_stmt pos:start="17:9" pos:end="53:9"><if pos:start="17:9" pos:end="35:9">if<condition pos:start="17:11" pos:end="17:18">(<expr pos:start="17:12" pos:end="17:17"><name pos:start="17:12" pos:end="17:12">c</name><operator pos:start="17:13" pos:end="17:14">==</operator><literal type="char" pos:start="17:15" pos:end="17:17">'A'</literal></expr>)</condition><block pos:start="17:19" pos:end="35:9">{<block_content pos:start="18:13" pos:end="34:13">
            <if_stmt pos:start="18:13" pos:end="34:13"><if pos:start="18:13" pos:end="22:13">if<condition pos:start="18:15" pos:end="18:22">(<expr pos:start="18:16" pos:end="18:21"><name pos:start="18:16" pos:end="18:16">x</name><operator pos:start="18:17" pos:end="18:18">==</operator><literal type="char" pos:start="18:19" pos:end="18:21">'I'</literal></expr>)</condition><block pos:start="18:23" pos:end="22:13">{<block_content pos:start="19:17" pos:end="21:32">
                <decl_stmt pos:start="19:17" pos:end="19:26"><decl pos:start="19:17" pos:end="19:25"><type pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">int</name></type> <name pos:start="19:21" pos:end="19:25">data1</name></decl>;</decl_stmt>
                <expr_stmt pos:start="20:17" pos:end="20:27"><expr pos:start="20:17" pos:end="20:26"><name pos:start="20:17" pos:end="20:19">cin</name><operator pos:start="20:20" pos:end="20:21">&gt;&gt;</operator><name pos:start="20:22" pos:end="20:26">data1</name></expr>;</expr_stmt>
                <expr_stmt pos:start="21:17" pos:end="21:32"><expr pos:start="21:17" pos:end="21:31"><call pos:start="21:17" pos:end="21:31"><name pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:19">sk1</name><operator pos:start="21:20" pos:end="21:20">.</operator><name pos:start="21:21" pos:end="21:24">push</name></name><argument_list pos:start="21:25" pos:end="21:31">(<argument pos:start="21:26" pos:end="21:30"><expr pos:start="21:26" pos:end="21:30"><name pos:start="21:26" pos:end="21:30">data1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="22:14" pos:end="24:13">else if<condition pos:start="22:21" pos:end="22:28">(<expr pos:start="22:22" pos:end="22:27"><name pos:start="22:22" pos:end="22:22">x</name><operator pos:start="22:23" pos:end="22:24">==</operator><literal type="char" pos:start="22:25" pos:end="22:27">'D'</literal></expr>)</condition><block pos:start="22:29" pos:end="24:13">{<block_content pos:start="23:17" pos:end="23:43">
                <if_stmt pos:start="23:17" pos:end="23:43"><if pos:start="23:17" pos:end="23:43">if<condition pos:start="23:19" pos:end="23:32">(<expr pos:start="23:20" pos:end="23:31"><operator pos:start="23:20" pos:end="23:20">!</operator><call pos:start="23:21" pos:end="23:31"><name pos:start="23:21" pos:end="23:29"><name pos:start="23:21" pos:end="23:23">sk1</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:29">empty</name></name><argument_list pos:start="23:30" pos:end="23:31">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:34" pos:end="23:43"><block_content pos:start="23:34" pos:end="23:43"> <expr_stmt pos:start="23:34" pos:end="23:43"><expr pos:start="23:34" pos:end="23:42"><call pos:start="23:34" pos:end="23:42"><name pos:start="23:34" pos:end="23:40"><name pos:start="23:34" pos:end="23:36">sk1</name><operator pos:start="23:37" pos:end="23:37">.</operator><name pos:start="23:38" pos:end="23:40">pop</name></name><argument_list pos:start="23:41" pos:end="23:42">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if><else pos:start="24:14" pos:end="34:13">else<block pos:start="24:18" pos:end="34:13">{<block_content pos:start="25:17" pos:end="33:17">
                <decl_stmt pos:start="25:17" pos:end="25:27"><decl pos:start="25:17" pos:end="25:26"><type pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">int</name></type> <name pos:start="25:21" pos:end="25:24">top1</name><init pos:start="25:25" pos:end="25:26">=<expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">0</literal></expr></init></decl>;</decl_stmt>
                <while pos:start="26:17" pos:end="30:17">while<condition pos:start="26:22" pos:end="26:35">(<expr pos:start="26:23" pos:end="26:34"><operator pos:start="26:23" pos:end="26:23">!</operator><call pos:start="26:24" pos:end="26:34"><name pos:start="26:24" pos:end="26:32"><name pos:start="26:24" pos:end="26:26">sk2</name><operator pos:start="26:27" pos:end="26:27">.</operator><name pos:start="26:28" pos:end="26:32">empty</name></name><argument_list pos:start="26:33" pos:end="26:34">()</argument_list></call></expr>)</condition><block pos:start="26:36" pos:end="30:17">{<block_content pos:start="27:21" pos:end="29:27">
                    <expr_stmt pos:start="27:21" pos:end="27:40"><expr pos:start="27:21" pos:end="27:39"><name pos:start="27:21" pos:end="27:29"><name pos:start="27:21" pos:end="27:23">vec</name><index pos:start="27:24" pos:end="27:29">[<expr pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:28">top1</name></expr>]</index></name><operator pos:start="27:30" pos:end="27:30">=</operator><call pos:start="27:31" pos:end="27:39"><name pos:start="27:31" pos:end="27:37"><name pos:start="27:31" pos:end="27:33">sk2</name><operator pos:start="27:34" pos:end="27:34">.</operator><name pos:start="27:35" pos:end="27:37">top</name></name><argument_list pos:start="27:38" pos:end="27:39">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="28:21" pos:end="28:30"><expr pos:start="28:21" pos:end="28:29"><call pos:start="28:21" pos:end="28:29"><name pos:start="28:21" pos:end="28:27"><name pos:start="28:21" pos:end="28:23">sk2</name><operator pos:start="28:24" pos:end="28:24">.</operator><name pos:start="28:25" pos:end="28:27">pop</name></name><argument_list pos:start="28:28" pos:end="28:29">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="29:21" pos:end="29:27"><expr pos:start="29:21" pos:end="29:26"><name pos:start="29:21" pos:end="29:24">top1</name><operator pos:start="29:25" pos:end="29:26">++</operator></expr>;</expr_stmt>
                </block_content>}</block></while>
                <for pos:start="31:17" pos:end="33:17">for<control pos:start="31:20" pos:end="31:42">(<init pos:start="31:21" pos:end="31:33"><decl pos:start="31:21" pos:end="31:32"><type pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:23">int</name></type> <name pos:start="31:25" pos:end="31:25">i</name><init pos:start="31:26" pos:end="31:32">=<expr pos:start="31:27" pos:end="31:32"><name pos:start="31:27" pos:end="31:30">top1</name><operator pos:start="31:31" pos:end="31:31">-</operator><literal type="number" pos:start="31:32" pos:end="31:32">1</literal></expr></init></decl>;</init><condition pos:start="31:34" pos:end="31:38"><expr pos:start="31:34" pos:end="31:37"><name pos:start="31:34" pos:end="31:34">i</name><operator pos:start="31:35" pos:end="31:36">&gt;=</operator><literal type="number" pos:start="31:37" pos:end="31:37">0</literal></expr>;</condition><incr pos:start="31:39" pos:end="31:41"><expr pos:start="31:39" pos:end="31:41"><name pos:start="31:39" pos:end="31:39">i</name><operator pos:start="31:40" pos:end="31:41">--</operator></expr></incr>)</control><block pos:start="31:43" pos:end="33:17">{<block_content pos:start="32:21" pos:end="32:37">
                    <expr_stmt pos:start="32:21" pos:end="32:37"><expr pos:start="32:21" pos:end="32:36"><call pos:start="32:21" pos:end="32:36"><name pos:start="32:21" pos:end="32:28"><name pos:start="32:21" pos:end="32:23">sk1</name><operator pos:start="32:24" pos:end="32:24">.</operator><name pos:start="32:25" pos:end="32:28">push</name></name><argument_list pos:start="32:29" pos:end="32:36">(<argument pos:start="32:30" pos:end="32:35"><expr pos:start="32:30" pos:end="32:35"><name pos:start="32:30" pos:end="32:35"><name pos:start="32:30" pos:end="32:32">vec</name><index pos:start="32:33" pos:end="32:35">[<expr pos:start="32:34" pos:end="32:34"><name pos:start="32:34" pos:end="32:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></for>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if><else pos:start="35:10" pos:end="53:9">else<block pos:start="35:14" pos:end="53:9">{<block_content pos:start="36:13" pos:end="52:13">
            <if_stmt pos:start="36:13" pos:end="52:13"><if pos:start="36:13" pos:end="40:13">if<condition pos:start="36:15" pos:end="36:22">(<expr pos:start="36:16" pos:end="36:21"><name pos:start="36:16" pos:end="36:16">x</name><operator pos:start="36:17" pos:end="36:18">==</operator><literal type="char" pos:start="36:19" pos:end="36:21">'I'</literal></expr>)</condition><block pos:start="36:23" pos:end="40:13">{<block_content pos:start="37:17" pos:end="39:32">
                <decl_stmt pos:start="37:17" pos:end="37:26"><decl pos:start="37:17" pos:end="37:25"><type pos:start="37:17" pos:end="37:19"><name pos:start="37:17" pos:end="37:19">int</name></type> <name pos:start="37:21" pos:end="37:25">data2</name></decl>;</decl_stmt>
                <expr_stmt pos:start="38:17" pos:end="38:27"><expr pos:start="38:17" pos:end="38:26"><name pos:start="38:17" pos:end="38:19">cin</name><operator pos:start="38:20" pos:end="38:21">&gt;&gt;</operator><name pos:start="38:22" pos:end="38:26">data2</name></expr>;</expr_stmt>
                <expr_stmt pos:start="39:17" pos:end="39:32"><expr pos:start="39:17" pos:end="39:31"><call pos:start="39:17" pos:end="39:31"><name pos:start="39:17" pos:end="39:24"><name pos:start="39:17" pos:end="39:19">sk2</name><operator pos:start="39:20" pos:end="39:20">.</operator><name pos:start="39:21" pos:end="39:24">push</name></name><argument_list pos:start="39:25" pos:end="39:31">(<argument pos:start="39:26" pos:end="39:30"><expr pos:start="39:26" pos:end="39:30"><name pos:start="39:26" pos:end="39:30">data2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="40:14" pos:end="42:13">else if<condition pos:start="40:21" pos:end="40:28">(<expr pos:start="40:22" pos:end="40:27"><name pos:start="40:22" pos:end="40:22">x</name><operator pos:start="40:23" pos:end="40:24">==</operator><literal type="char" pos:start="40:25" pos:end="40:27">'D'</literal></expr>)</condition><block pos:start="40:29" pos:end="42:13">{<block_content pos:start="41:17" pos:end="41:43">
                <if_stmt pos:start="41:17" pos:end="41:43"><if pos:start="41:17" pos:end="41:43">if<condition pos:start="41:19" pos:end="41:32">(<expr pos:start="41:20" pos:end="41:31"><operator pos:start="41:20" pos:end="41:20">!</operator><call pos:start="41:21" pos:end="41:31"><name pos:start="41:21" pos:end="41:29"><name pos:start="41:21" pos:end="41:23">sk2</name><operator pos:start="41:24" pos:end="41:24">.</operator><name pos:start="41:25" pos:end="41:29">empty</name></name><argument_list pos:start="41:30" pos:end="41:31">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:34" pos:end="41:43"><block_content pos:start="41:34" pos:end="41:43"> <expr_stmt pos:start="41:34" pos:end="41:43"><expr pos:start="41:34" pos:end="41:42"><call pos:start="41:34" pos:end="41:42"><name pos:start="41:34" pos:end="41:40"><name pos:start="41:34" pos:end="41:36">sk2</name><operator pos:start="41:37" pos:end="41:37">.</operator><name pos:start="41:38" pos:end="41:40">pop</name></name><argument_list pos:start="41:41" pos:end="41:42">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if><else pos:start="42:14" pos:end="52:13">else<block pos:start="42:18" pos:end="52:13">{<block_content pos:start="43:17" pos:end="51:17">
                <decl_stmt pos:start="43:17" pos:end="43:27"><decl pos:start="43:17" pos:end="43:26"><type pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">int</name></type> <name pos:start="43:21" pos:end="43:24">top2</name><init pos:start="43:25" pos:end="43:26">=<expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">0</literal></expr></init></decl>;</decl_stmt>
                <while pos:start="44:17" pos:end="48:17">while<condition pos:start="44:22" pos:end="44:35">(<expr pos:start="44:23" pos:end="44:34"><operator pos:start="44:23" pos:end="44:23">!</operator><call pos:start="44:24" pos:end="44:34"><name pos:start="44:24" pos:end="44:32"><name pos:start="44:24" pos:end="44:26">sk1</name><operator pos:start="44:27" pos:end="44:27">.</operator><name pos:start="44:28" pos:end="44:32">empty</name></name><argument_list pos:start="44:33" pos:end="44:34">()</argument_list></call></expr>)</condition><block pos:start="44:36" pos:end="48:17">{<block_content pos:start="45:21" pos:end="47:27">
                    <expr_stmt pos:start="45:21" pos:end="45:40"><expr pos:start="45:21" pos:end="45:39"><name pos:start="45:21" pos:end="45:29"><name pos:start="45:21" pos:end="45:23">vec</name><index pos:start="45:24" pos:end="45:29">[<expr pos:start="45:25" pos:end="45:28"><name pos:start="45:25" pos:end="45:28">top2</name></expr>]</index></name><operator pos:start="45:30" pos:end="45:30">=</operator><call pos:start="45:31" pos:end="45:39"><name pos:start="45:31" pos:end="45:37"><name pos:start="45:31" pos:end="45:33">sk1</name><operator pos:start="45:34" pos:end="45:34">.</operator><name pos:start="45:35" pos:end="45:37">top</name></name><argument_list pos:start="45:38" pos:end="45:39">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="46:21" pos:end="46:30"><expr pos:start="46:21" pos:end="46:29"><call pos:start="46:21" pos:end="46:29"><name pos:start="46:21" pos:end="46:27"><name pos:start="46:21" pos:end="46:23">sk1</name><operator pos:start="46:24" pos:end="46:24">.</operator><name pos:start="46:25" pos:end="46:27">pop</name></name><argument_list pos:start="46:28" pos:end="46:29">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="47:21" pos:end="47:27"><expr pos:start="47:21" pos:end="47:26"><name pos:start="47:21" pos:end="47:24">top2</name><operator pos:start="47:25" pos:end="47:26">++</operator></expr>;</expr_stmt>
                </block_content>}</block></while>
                <for pos:start="49:17" pos:end="51:17">for<control pos:start="49:20" pos:end="49:48">(<init pos:start="49:21" pos:end="49:39"><decl pos:start="49:21" pos:end="49:38"><type pos:start="49:21" pos:end="49:23"><name pos:start="49:21" pos:end="49:23">int</name></type> <name pos:start="49:25" pos:end="49:25">i</name><init pos:start="49:26" pos:end="49:38">=<expr pos:start="49:27" pos:end="49:38"><call pos:start="49:27" pos:end="49:36"><name pos:start="49:27" pos:end="49:34"><name pos:start="49:27" pos:end="49:29">vec</name><operator pos:start="49:30" pos:end="49:30">.</operator><name pos:start="49:31" pos:end="49:34">size</name></name><argument_list pos:start="49:35" pos:end="49:36">()</argument_list></call><operator pos:start="49:37" pos:end="49:37">-</operator><literal type="number" pos:start="49:38" pos:end="49:38">1</literal></expr></init></decl>;</init><condition pos:start="49:40" pos:end="49:44"><expr pos:start="49:40" pos:end="49:43"><name pos:start="49:40" pos:end="49:40">i</name><operator pos:start="49:41" pos:end="49:42">&gt;=</operator><literal type="number" pos:start="49:43" pos:end="49:43">0</literal></expr>;</condition><incr pos:start="49:45" pos:end="49:47"><expr pos:start="49:45" pos:end="49:47"><name pos:start="49:45" pos:end="49:45">i</name><operator pos:start="49:46" pos:end="49:47">--</operator></expr></incr>)</control><block pos:start="49:49" pos:end="51:17">{<block_content pos:start="50:21" pos:end="50:37">
                    <expr_stmt pos:start="50:21" pos:end="50:37"><expr pos:start="50:21" pos:end="50:36"><call pos:start="50:21" pos:end="50:36"><name pos:start="50:21" pos:end="50:28"><name pos:start="50:21" pos:end="50:23">sk2</name><operator pos:start="50:24" pos:end="50:24">.</operator><name pos:start="50:25" pos:end="50:28">push</name></name><argument_list pos:start="50:29" pos:end="50:36">(<argument pos:start="50:30" pos:end="50:35"><expr pos:start="50:30" pos:end="50:35"><name pos:start="50:30" pos:end="50:35"><name pos:start="50:30" pos:end="50:32">vec</name><index pos:start="50:33" pos:end="50:35">[<expr pos:start="50:34" pos:end="50:34"><name pos:start="50:34" pos:end="50:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></for>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <while pos:start="55:5" pos:end="58:5">while<condition pos:start="55:10" pos:end="55:23">(<expr pos:start="55:11" pos:end="55:22"><operator pos:start="55:11" pos:end="55:11">!</operator><call pos:start="55:12" pos:end="55:22"><name pos:start="55:12" pos:end="55:20"><name pos:start="55:12" pos:end="55:14">sk1</name><operator pos:start="55:15" pos:end="55:15">.</operator><name pos:start="55:16" pos:end="55:20">empty</name></name><argument_list pos:start="55:21" pos:end="55:22">()</argument_list></call></expr>)</condition><block pos:start="55:24" pos:end="58:5">{<block_content pos:start="56:9" pos:end="57:18">
        <expr_stmt pos:start="56:9" pos:end="56:34"><expr pos:start="56:9" pos:end="56:33"><call pos:start="56:9" pos:end="56:33"><name pos:start="56:9" pos:end="56:22"><name pos:start="56:9" pos:end="56:12">ans1</name><operator pos:start="56:13" pos:end="56:13">.</operator><name pos:start="56:14" pos:end="56:22">push_back</name></name><argument_list pos:start="56:23" pos:end="56:33">(<argument pos:start="56:24" pos:end="56:32"><expr pos:start="56:24" pos:end="56:32"><call pos:start="56:24" pos:end="56:32"><name pos:start="56:24" pos:end="56:30"><name pos:start="56:24" pos:end="56:26">sk1</name><operator pos:start="56:27" pos:end="56:27">.</operator><name pos:start="56:28" pos:end="56:30">top</name></name><argument_list pos:start="56:31" pos:end="56:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="57:9" pos:end="57:18"><expr pos:start="57:9" pos:end="57:17"><call pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">sk1</name><operator pos:start="57:12" pos:end="57:12">.</operator><name pos:start="57:13" pos:end="57:15">pop</name></name><argument_list pos:start="57:16" pos:end="57:17">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="59:5" pos:end="62:5">while<condition pos:start="59:10" pos:end="59:23">(<expr pos:start="59:11" pos:end="59:22"><operator pos:start="59:11" pos:end="59:11">!</operator><call pos:start="59:12" pos:end="59:22"><name pos:start="59:12" pos:end="59:20"><name pos:start="59:12" pos:end="59:14">sk2</name><operator pos:start="59:15" pos:end="59:15">.</operator><name pos:start="59:16" pos:end="59:20">empty</name></name><argument_list pos:start="59:21" pos:end="59:22">()</argument_list></call></expr>)</condition><block pos:start="59:24" pos:end="62:5">{<block_content pos:start="60:9" pos:end="61:18">
        <expr_stmt pos:start="60:9" pos:end="60:34"><expr pos:start="60:9" pos:end="60:33"><call pos:start="60:9" pos:end="60:33"><name pos:start="60:9" pos:end="60:22"><name pos:start="60:9" pos:end="60:12">ans2</name><operator pos:start="60:13" pos:end="60:13">.</operator><name pos:start="60:14" pos:end="60:22">push_back</name></name><argument_list pos:start="60:23" pos:end="60:33">(<argument pos:start="60:24" pos:end="60:32"><expr pos:start="60:24" pos:end="60:32"><call pos:start="60:24" pos:end="60:32"><name pos:start="60:24" pos:end="60:30"><name pos:start="60:24" pos:end="60:26">sk2</name><operator pos:start="60:27" pos:end="60:27">.</operator><name pos:start="60:28" pos:end="60:30">top</name></name><argument_list pos:start="60:31" pos:end="60:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="61:9" pos:end="61:18"><expr pos:start="61:9" pos:end="61:17"><call pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:11">sk2</name><operator pos:start="61:12" pos:end="61:12">.</operator><name pos:start="61:13" pos:end="61:15">pop</name></name><argument_list pos:start="61:16" pos:end="61:17">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <for pos:start="63:5" pos:end="65:5">for<control pos:start="63:8" pos:end="63:37">(<init pos:start="63:9" pos:end="63:28"><decl pos:start="63:9" pos:end="63:27"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:13">i</name><init pos:start="63:14" pos:end="63:27">=<expr pos:start="63:15" pos:end="63:27"><call pos:start="63:15" pos:end="63:25"><name pos:start="63:15" pos:end="63:23"><name pos:start="63:15" pos:end="63:18">ans1</name><operator pos:start="63:19" pos:end="63:19">.</operator><name pos:start="63:20" pos:end="63:23">size</name></name><argument_list pos:start="63:24" pos:end="63:25">()</argument_list></call><operator pos:start="63:26" pos:end="63:26">-</operator><literal type="number" pos:start="63:27" pos:end="63:27">1</literal></expr></init></decl>;</init><condition pos:start="63:29" pos:end="63:33"><expr pos:start="63:29" pos:end="63:32"><name pos:start="63:29" pos:end="63:29">i</name><operator pos:start="63:30" pos:end="63:31">&gt;=</operator><literal type="number" pos:start="63:32" pos:end="63:32">0</literal></expr>;</condition><incr pos:start="63:34" pos:end="63:36"><expr pos:start="63:34" pos:end="63:36"><name pos:start="63:34" pos:end="63:34">i</name><operator pos:start="63:35" pos:end="63:36">--</operator></expr></incr>)</control><block pos:start="63:38" pos:end="65:5">{<block_content pos:start="64:9" pos:end="64:27">
        <expr_stmt pos:start="64:9" pos:end="64:27"><expr pos:start="64:9" pos:end="64:26"><name pos:start="64:9" pos:end="64:12">cout</name><operator pos:start="64:13" pos:end="64:14">&lt;&lt;</operator><name pos:start="64:15" pos:end="64:21"><name pos:start="64:15" pos:end="64:18">ans1</name><index pos:start="64:19" pos:end="64:21">[<expr pos:start="64:20" pos:end="64:20"><name pos:start="64:20" pos:end="64:20">i</name></expr>]</index></name><operator pos:start="64:22" pos:end="64:23">&lt;&lt;</operator><literal type="char" pos:start="64:24" pos:end="64:26">' '</literal></expr>;</expr_stmt>
    </block_content>}</block></for><expr_stmt pos:start="65:6" pos:end="65:16"><expr pos:start="65:6" pos:end="65:15"><name pos:start="65:6" pos:end="65:9">cout</name><operator pos:start="65:10" pos:end="65:11">&lt;&lt;</operator><name pos:start="65:12" pos:end="65:15">endl</name></expr>;</expr_stmt>
    <for pos:start="66:5" pos:end="68:5">for<control pos:start="66:8" pos:end="66:37">(<init pos:start="66:9" pos:end="66:28"><decl pos:start="66:9" pos:end="66:27"><type pos:start="66:9" pos:end="66:11"><name pos:start="66:9" pos:end="66:11">int</name></type> <name pos:start="66:13" pos:end="66:13">i</name><init pos:start="66:14" pos:end="66:27">=<expr pos:start="66:15" pos:end="66:27"><call pos:start="66:15" pos:end="66:25"><name pos:start="66:15" pos:end="66:23"><name pos:start="66:15" pos:end="66:18">ans2</name><operator pos:start="66:19" pos:end="66:19">.</operator><name pos:start="66:20" pos:end="66:23">size</name></name><argument_list pos:start="66:24" pos:end="66:25">()</argument_list></call><operator pos:start="66:26" pos:end="66:26">-</operator><literal type="number" pos:start="66:27" pos:end="66:27">1</literal></expr></init></decl>;</init><condition pos:start="66:29" pos:end="66:33"><expr pos:start="66:29" pos:end="66:32"><name pos:start="66:29" pos:end="66:29">i</name><operator pos:start="66:30" pos:end="66:31">&gt;=</operator><literal type="number" pos:start="66:32" pos:end="66:32">0</literal></expr>;</condition><incr pos:start="66:34" pos:end="66:36"><expr pos:start="66:34" pos:end="66:36"><name pos:start="66:34" pos:end="66:34">i</name><operator pos:start="66:35" pos:end="66:36">--</operator></expr></incr>)</control><block pos:start="66:38" pos:end="68:5">{<block_content pos:start="67:9" pos:end="67:27">
        <expr_stmt pos:start="67:9" pos:end="67:27"><expr pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:12">cout</name><operator pos:start="67:13" pos:end="67:14">&lt;&lt;</operator><name pos:start="67:15" pos:end="67:21"><name pos:start="67:15" pos:end="67:18">ans2</name><index pos:start="67:19" pos:end="67:21">[<expr pos:start="67:20" pos:end="67:20"><name pos:start="67:20" pos:end="67:20">i</name></expr>]</index></name><operator pos:start="67:22" pos:end="67:23">&lt;&lt;</operator><literal type="char" pos:start="67:24" pos:end="67:26">' '</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
