<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/578/578.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="46:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="46:1">{<block_content pos:start="5:5" pos:end="45:13">
    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:17"><name pos:start="5:12" pos:end="5:12">q</name><index pos:start="5:13" pos:end="5:17">[<expr pos:start="5:14" pos:end="5:16"><literal type="number" pos:start="5:14" pos:end="5:16">105</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:21"><decl pos:start="6:5" pos:end="6:13"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">l</name> <init pos:start="6:11" pos:end="6:13">= <expr pos:start="6:13" pos:end="6:13"><literal type="number" pos:start="6:13" pos:end="6:13">0</literal></expr></init></decl>, <decl pos:start="6:16" pos:end="6:20"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:16" pos:end="6:16">r</name> <init pos:start="6:18" pos:end="6:20">= <expr pos:start="6:20" pos:end="6:20"><literal type="number" pos:start="6:20" pos:end="6:20">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:13"><expr pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:7">cin</name> <operator pos:start="8:9" pos:end="8:10">&gt;&gt;</operator> <name pos:start="8:12" pos:end="8:12">n</name></expr>;</expr_stmt>
    <while pos:start="9:5" pos:end="44:5">while <condition pos:start="9:11" pos:end="9:15">(<expr pos:start="9:12" pos:end="9:14"><name pos:start="9:12" pos:end="9:12">n</name><operator pos:start="9:13" pos:end="9:14">--</operator></expr>)</condition> <block pos:start="9:17" pos:end="44:5">{<block_content pos:start="10:9" pos:end="43:9">
        <decl_stmt pos:start="10:9" pos:end="10:14"><decl pos:start="10:9" pos:end="10:13"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">k</name></decl>;</decl_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:17"><expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:11">cin</name> <operator pos:start="11:13" pos:end="11:14">&gt;&gt;</operator> <name pos:start="11:16" pos:end="11:16">k</name></expr>;</expr_stmt>
        <if_stmt pos:start="12:9" pos:end="43:9"><if pos:start="12:9" pos:end="17:9">if <condition pos:start="12:12" pos:end="12:19">(<expr pos:start="12:13" pos:end="12:18"><name pos:start="12:13" pos:end="12:13">k</name> <operator pos:start="12:15" pos:end="12:16">==</operator> <literal type="number" pos:start="12:18" pos:end="12:18">1</literal></expr>)</condition> <block pos:start="12:21" pos:end="17:9">{<block_content pos:start="13:13" pos:end="16:16">
            <decl_stmt pos:start="13:13" pos:end="13:24"><decl pos:start="13:13" pos:end="13:23"><type pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:18">string</name></type> <name pos:start="13:20" pos:end="13:23">name</name></decl>;</decl_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:24"><expr pos:start="14:13" pos:end="14:23"><name pos:start="14:13" pos:end="14:15">cin</name> <operator pos:start="14:17" pos:end="14:18">&gt;&gt;</operator> <name pos:start="14:20" pos:end="14:23">name</name></expr>;</expr_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:24"><expr pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:13">q</name><index pos:start="15:14" pos:end="15:16">[<expr pos:start="15:15" pos:end="15:15"><name pos:start="15:15" pos:end="15:15">r</name></expr>]</index></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <name pos:start="15:20" pos:end="15:23">name</name></expr>;</expr_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:16"><expr pos:start="16:13" pos:end="16:15"><name pos:start="16:13" pos:end="16:13">r</name><operator pos:start="16:14" pos:end="16:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="17:11" pos:end="25:9">else if <condition pos:start="17:19" pos:end="17:26">(<expr pos:start="17:20" pos:end="17:25"><name pos:start="17:20" pos:end="17:20">k</name> <operator pos:start="17:22" pos:end="17:23">==</operator> <literal type="number" pos:start="17:25" pos:end="17:25">2</literal></expr>)</condition> <block pos:start="17:28" pos:end="25:9">{<block_content pos:start="18:13" pos:end="24:13">
            <if_stmt pos:start="18:13" pos:end="24:13"><if pos:start="18:13" pos:end="21:13">if <condition pos:start="18:16" pos:end="18:22">(<expr pos:start="18:17" pos:end="18:21"><name pos:start="18:17" pos:end="18:17">l</name> <operator pos:start="18:19" pos:end="18:19">&lt;</operator> <name pos:start="18:21" pos:end="18:21">r</name></expr>)</condition> <block pos:start="18:24" pos:end="21:13">{<block_content pos:start="19:17" pos:end="20:20">
                <expr_stmt pos:start="19:17" pos:end="19:37"><expr pos:start="19:17" pos:end="19:36"><name pos:start="19:17" pos:end="19:20">cout</name> <operator pos:start="19:22" pos:end="19:23">&lt;&lt;</operator> <name pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:25">q</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><name pos:start="19:27" pos:end="19:27">l</name></expr>]</index></name> <operator pos:start="19:30" pos:end="19:31">&lt;&lt;</operator> <name pos:start="19:33" pos:end="19:36">endl</name></expr>;</expr_stmt>
                <expr_stmt pos:start="20:17" pos:end="20:20"><expr pos:start="20:17" pos:end="20:19"><name pos:start="20:17" pos:end="20:17">l</name><operator pos:start="20:18" pos:end="20:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="22:13" pos:end="24:13">else <block pos:start="22:18" pos:end="24:13">{<block_content pos:start="23:17" pos:end="23:34">
                <expr_stmt pos:start="23:17" pos:end="23:34"><expr pos:start="23:17" pos:end="23:33"><name pos:start="23:17" pos:end="23:20">cout</name> <operator pos:start="23:22" pos:end="23:23">&lt;&lt;</operator> <literal type="number" pos:start="23:25" pos:end="23:25">0</literal> <operator pos:start="23:27" pos:end="23:28">&lt;&lt;</operator> <name pos:start="23:30" pos:end="23:33">endl</name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if> <else pos:start="25:11" pos:end="43:9">else <block pos:start="25:16" pos:end="43:9">{<block_content pos:start="26:13" pos:end="42:13">
            <decl_stmt pos:start="26:13" pos:end="26:24"><decl pos:start="26:13" pos:end="26:23"><type pos:start="26:13" pos:end="26:18"><name pos:start="26:13" pos:end="26:18">string</name></type> <name pos:start="26:20" pos:end="26:23">name</name></decl>;</decl_stmt>
            <expr_stmt pos:start="27:13" pos:end="27:24"><expr pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:15">cin</name> <operator pos:start="27:17" pos:end="27:18">&gt;&gt;</operator> <name pos:start="27:20" pos:end="27:23">name</name></expr>;</expr_stmt>
            <decl_stmt pos:start="28:13" pos:end="28:26"><decl pos:start="28:13" pos:end="28:25"><type pos:start="28:13" pos:end="28:16"><name pos:start="28:13" pos:end="28:16">bool</name></type> <name pos:start="28:18" pos:end="28:21">flag</name> <init pos:start="28:23" pos:end="28:25">= <expr pos:start="28:25" pos:end="28:25"><literal type="number" pos:start="28:25" pos:end="28:25">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="29:13" pos:end="39:13">for <control pos:start="29:17" pos:end="29:39">(<init pos:start="29:18" pos:end="29:27"><decl pos:start="29:18" pos:end="29:26"><type pos:start="29:18" pos:end="29:20"><name pos:start="29:18" pos:end="29:20">int</name></type> <name pos:start="29:22" pos:end="29:22">i</name> <init pos:start="29:24" pos:end="29:26">= <expr pos:start="29:26" pos:end="29:26"><name pos:start="29:26" pos:end="29:26">l</name></expr></init></decl>;</init> <condition pos:start="29:29" pos:end="29:34"><expr pos:start="29:29" pos:end="29:33"><name pos:start="29:29" pos:end="29:29">i</name> <operator pos:start="29:31" pos:end="29:31">&lt;</operator> <name pos:start="29:33" pos:end="29:33">r</name></expr>;</condition> <incr pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:36">i</name><operator pos:start="29:37" pos:end="29:38">++</operator></expr></incr>)</control> <block pos:start="29:41" pos:end="39:13">{<block_content pos:start="30:17" pos:end="38:17">
                <if_stmt pos:start="30:17" pos:end="38:17"><if pos:start="30:17" pos:end="38:17">if <condition pos:start="30:20" pos:end="30:33">(<expr pos:start="30:21" pos:end="30:32"><name pos:start="30:21" pos:end="30:24"><name pos:start="30:21" pos:end="30:21">q</name><index pos:start="30:22" pos:end="30:24">[<expr pos:start="30:23" pos:end="30:23"><name pos:start="30:23" pos:end="30:23">i</name></expr>]</index></name> <operator pos:start="30:26" pos:end="30:27">==</operator> <name pos:start="30:29" pos:end="30:32">name</name></expr>)</condition> <block pos:start="30:35" pos:end="38:17">{<block_content pos:start="31:21" pos:end="37:26">
                    <expr_stmt pos:start="31:21" pos:end="31:42"><expr pos:start="31:21" pos:end="31:41"><name pos:start="31:21" pos:end="31:24">cout</name> <operator pos:start="31:26" pos:end="31:27">&lt;&lt;</operator> <name pos:start="31:29" pos:end="31:29">i</name> <operator pos:start="31:31" pos:end="31:31">+</operator> <literal type="number" pos:start="31:33" pos:end="31:33">1</literal> <operator pos:start="31:35" pos:end="31:36">&lt;&lt;</operator> <name pos:start="31:38" pos:end="31:41">endl</name></expr>;</expr_stmt>
                    <for pos:start="32:21" pos:end="34:21">for <control pos:start="32:25" pos:end="32:51">(<init pos:start="32:26" pos:end="32:35"><decl pos:start="32:26" pos:end="32:34"><type pos:start="32:26" pos:end="32:28"><name pos:start="32:26" pos:end="32:28">int</name></type> <name pos:start="32:30" pos:end="32:30">j</name> <init pos:start="32:32" pos:end="32:34">= <expr pos:start="32:34" pos:end="32:34"><name pos:start="32:34" pos:end="32:34">i</name></expr></init></decl>;</init> <condition pos:start="32:37" pos:end="32:46"><expr pos:start="32:37" pos:end="32:45"><name pos:start="32:37" pos:end="32:37">j</name> <operator pos:start="32:39" pos:end="32:39">&lt;</operator> <name pos:start="32:41" pos:end="32:41">r</name> <operator pos:start="32:43" pos:end="32:43">-</operator> <literal type="number" pos:start="32:45" pos:end="32:45">1</literal></expr>;</condition> <incr pos:start="32:48" pos:end="32:50"><expr pos:start="32:48" pos:end="32:50"><name pos:start="32:48" pos:end="32:48">j</name><operator pos:start="32:49" pos:end="32:50">++</operator></expr></incr>)</control> <block pos:start="32:53" pos:end="34:21">{<block_content pos:start="33:25" pos:end="33:40">
                        <expr_stmt pos:start="33:25" pos:end="33:40"><expr pos:start="33:25" pos:end="33:39"><name pos:start="33:25" pos:end="33:28"><name pos:start="33:25" pos:end="33:25">q</name><index pos:start="33:26" pos:end="33:28">[<expr pos:start="33:27" pos:end="33:27"><name pos:start="33:27" pos:end="33:27">j</name></expr>]</index></name> <operator pos:start="33:30" pos:end="33:30">=</operator> <name pos:start="33:32" pos:end="33:39"><name pos:start="33:32" pos:end="33:32">q</name><index pos:start="33:33" pos:end="33:39">[<expr pos:start="33:34" pos:end="33:38"><name pos:start="33:34" pos:end="33:34">j</name> <operator pos:start="33:36" pos:end="33:36">+</operator> <literal type="number" pos:start="33:38" pos:end="33:38">1</literal></expr>]</index></name></expr>;</expr_stmt>
                    </block_content>}</block></for>
                    <expr_stmt pos:start="35:21" pos:end="35:24"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:21">r</name><operator pos:start="35:22" pos:end="35:23">--</operator></expr>;</expr_stmt>
                    <expr_stmt pos:start="36:21" pos:end="36:29"><expr pos:start="36:21" pos:end="36:28"><name pos:start="36:21" pos:end="36:24">flag</name> <operator pos:start="36:26" pos:end="36:26">=</operator> <literal type="number" pos:start="36:28" pos:end="36:28">1</literal></expr>;</expr_stmt>
                    <break pos:start="37:21" pos:end="37:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="40:13" pos:end="42:13"><if pos:start="40:13" pos:end="42:13">if <condition pos:start="40:16" pos:end="40:26">(<expr pos:start="40:17" pos:end="40:25"><name pos:start="40:17" pos:end="40:20">flag</name> <operator pos:start="40:22" pos:end="40:23">==</operator> <literal type="number" pos:start="40:25" pos:end="40:25">0</literal></expr>)</condition> <block pos:start="40:28" pos:end="42:13">{<block_content pos:start="41:17" pos:end="41:34">
                <expr_stmt pos:start="41:17" pos:end="41:34"><expr pos:start="41:17" pos:end="41:33"><name pos:start="41:17" pos:end="41:20">cout</name> <operator pos:start="41:22" pos:end="41:23">&lt;&lt;</operator> <literal type="number" pos:start="41:25" pos:end="41:25">0</literal> <operator pos:start="41:27" pos:end="41:28">&lt;&lt;</operator> <name pos:start="41:30" pos:end="41:33">endl</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
