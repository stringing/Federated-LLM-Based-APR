<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/445/445.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<struct pos:start="3:1" pos:end="6:2">struct <name pos:start="3:8" pos:end="3:11">node</name> <block pos:start="3:13" pos:end="6:1">{<public type="default" pos:start="4:5" pos:end="5:10">
    <decl_stmt pos:start="4:5" pos:end="4:16"><decl pos:start="4:5" pos:end="4:15"><type pos:start="4:5" pos:end="4:10"><name pos:start="4:5" pos:end="4:10">string</name></type> <name pos:start="4:12" pos:end="4:15">name</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">t</name></decl>;</decl_stmt>
</public>}</block>;</struct>
<function pos:start="7:1" pos:end="32:1"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:8">main</name><parameter_list pos:start="7:9" pos:end="7:10">()</parameter_list> <block pos:start="7:12" pos:end="32:1">{<block_content pos:start="8:5" pos:end="31:13">
    <decl_stmt pos:start="8:5" pos:end="8:24"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">n</name></decl> , <decl pos:start="8:13" pos:end="8:19"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:13" pos:end="8:15">sum</name> <init pos:start="8:17" pos:end="8:19">= <expr pos:start="8:19" pos:end="8:19"><literal type="number" pos:start="8:19" pos:end="8:19">0</literal></expr></init></decl> , <decl pos:start="8:23" pos:end="8:23"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:23" pos:end="8:23">t</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:10">vector</name> <argument_list type="generic" pos:start="9:12" pos:end="9:16">&lt;<argument pos:start="9:13" pos:end="9:15"><expr pos:start="9:13" pos:end="9:15"><name pos:start="9:13" pos:end="9:15">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="9:18" pos:end="9:18">a</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:13"><expr pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:7">cin</name> <operator pos:start="10:9" pos:end="10:10">&gt;&gt;</operator> <name pos:start="10:12" pos:end="10:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:11"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">node</name></type> <name pos:start="11:10" pos:end="11:10">x</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:13"><decl pos:start="12:5" pos:end="12:12"><type pos:start="12:5" pos:end="12:10"><name pos:start="12:5" pos:end="12:10">string</name></type> <name pos:start="12:12" pos:end="12:12">s</name></decl>;</decl_stmt>
    <while pos:start="13:5" pos:end="29:5">while <condition pos:start="13:11" pos:end="13:25">(<expr pos:start="13:12" pos:end="13:24"><name pos:start="13:12" pos:end="13:14">cin</name> <operator pos:start="13:16" pos:end="13:17">&gt;&gt;</operator> <name pos:start="13:19" pos:end="13:24"><name pos:start="13:19" pos:end="13:19">x</name><operator pos:start="13:20" pos:end="13:20">.</operator><name pos:start="13:21" pos:end="13:24">name</name></name></expr>)</condition> <block pos:start="13:27" pos:end="29:5">{<block_content pos:start="14:9" pos:end="28:9">
        <if_stmt pos:start="14:9" pos:end="28:9"><if pos:start="14:9" pos:end="17:9">if <condition pos:start="14:12" pos:end="14:37">(<expr pos:start="14:13" pos:end="14:36"><name pos:start="14:13" pos:end="14:18"><name pos:start="14:13" pos:end="14:13">x</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:18">name</name></name> <operator pos:start="14:20" pos:end="14:21">==</operator> <literal type="string" pos:start="14:23" pos:end="14:36">"tingtingting"</literal></expr>)</condition> <block pos:start="14:39" pos:end="17:9">{<block_content pos:start="15:13" pos:end="16:34">
            <expr_stmt pos:start="15:13" pos:end="15:25"><expr pos:start="15:13" pos:end="15:24"><call pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:13">a</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:22">pop_back</name></name><argument_list pos:start="15:23" pos:end="15:24">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:34"><expr pos:start="16:13" pos:end="16:33"><name pos:start="16:13" pos:end="16:15">sum</name> <operator pos:start="16:17" pos:end="16:17">=</operator> <name pos:start="16:19" pos:end="16:33"><name pos:start="16:19" pos:end="16:19">a</name><index pos:start="16:20" pos:end="16:33">[<expr pos:start="16:21" pos:end="16:32"><call pos:start="16:21" pos:end="16:28"><name pos:start="16:21" pos:end="16:26"><name pos:start="16:21" pos:end="16:21">a</name><operator pos:start="16:22" pos:end="16:22">.</operator><name pos:start="16:23" pos:end="16:26">size</name></name><argument_list pos:start="16:27" pos:end="16:28">()</argument_list></call> <operator pos:start="16:30" pos:end="16:30">-</operator> <literal type="number" pos:start="16:32" pos:end="16:32">1</literal></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="17:11" pos:end="25:9">else if <condition pos:start="17:19" pos:end="17:42">(<expr pos:start="17:20" pos:end="17:41"><name pos:start="17:20" pos:end="17:25"><name pos:start="17:20" pos:end="17:20">x</name><operator pos:start="17:21" pos:end="17:21">.</operator><name pos:start="17:22" pos:end="17:25">name</name></name> <operator pos:start="17:27" pos:end="17:28">==</operator> <literal type="string" pos:start="17:30" pos:end="17:41">"kaomianjin"</literal></expr>)</condition> <block pos:start="17:44" pos:end="25:9">{<block_content pos:start="18:13" pos:end="24:21">
            <expr_stmt pos:start="18:13" pos:end="18:21"><expr pos:start="18:13" pos:end="18:20"><name pos:start="18:13" pos:end="18:15">cin</name> <operator pos:start="18:17" pos:end="18:18">&gt;&gt;</operator> <name pos:start="18:20" pos:end="18:20">t</name></expr>;</expr_stmt>
            <if_stmt pos:start="19:13" pos:end="22:13"><if pos:start="19:13" pos:end="22:13">if <condition pos:start="19:16" pos:end="19:48">(<expr pos:start="19:17" pos:end="19:47"><name pos:start="19:17" pos:end="19:19">cin</name> <operator pos:start="19:21" pos:end="19:22">&gt;&gt;</operator> <name pos:start="19:24" pos:end="19:24">s</name> <operator pos:start="19:26" pos:end="19:27">&amp;&amp;</operator> <name pos:start="19:29" pos:end="19:29">s</name> <operator pos:start="19:31" pos:end="19:32">==</operator> <literal type="string" pos:start="19:34" pos:end="19:47">"tingtingting"</literal></expr>)</condition> <block pos:start="19:50" pos:end="22:13">{<block_content pos:start="20:17" pos:end="21:25">
                <expr_stmt pos:start="20:17" pos:end="20:34"><expr pos:start="20:17" pos:end="20:33"><name pos:start="20:17" pos:end="20:20">cout</name> <operator pos:start="20:22" pos:end="20:23">&lt;&lt;</operator> <literal type="string" pos:start="20:25" pos:end="20:33">"Hahaha."</literal></expr>;</expr_stmt>
                <return pos:start="21:17" pos:end="21:25">return <expr pos:start="21:24" pos:end="21:24"><literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:39"><expr pos:start="23:13" pos:end="23:38"><name pos:start="23:13" pos:end="23:16">cout</name> <operator pos:start="23:18" pos:end="23:19">&lt;&lt;</operator> <literal type="string" pos:start="23:21" pos:end="23:38">"Congratulations!"</literal></expr>;</expr_stmt>
            <return pos:start="24:13" pos:end="24:21">return <expr pos:start="24:20" pos:end="24:20"><literal type="number" pos:start="24:20" pos:end="24:20">0</literal></expr>;</return>
        </block_content>}</block></if> <else pos:start="25:11" pos:end="28:9">else <block pos:start="25:16" pos:end="28:9">{<block_content pos:start="26:13" pos:end="27:21">
            <expr_stmt pos:start="26:13" pos:end="26:21"><expr pos:start="26:13" pos:end="26:20"><name pos:start="26:13" pos:end="26:15">cin</name> <operator pos:start="26:17" pos:end="26:18">&gt;&gt;</operator> <name pos:start="26:20" pos:end="26:20">t</name></expr>;</expr_stmt>
            <expr_stmt pos:start="27:13" pos:end="27:21"><expr pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:15">sum</name> <operator pos:start="27:17" pos:end="27:18">+=</operator> <name pos:start="27:20" pos:end="27:20">t</name></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <if_stmt pos:start="30:5" pos:end="30:41"><if pos:start="30:5" pos:end="30:41">if <condition pos:start="30:8" pos:end="30:16">(<expr pos:start="30:9" pos:end="30:15"><name pos:start="30:9" pos:end="30:11">sum</name> <operator pos:start="30:13" pos:end="30:13">&gt;</operator> <name pos:start="30:15" pos:end="30:15">n</name></expr>)</condition><block type="pseudo" pos:start="30:18" pos:end="30:41"><block_content pos:start="30:18" pos:end="30:41"> <expr_stmt pos:start="30:18" pos:end="30:41"><expr pos:start="30:18" pos:end="30:40"><name pos:start="30:18" pos:end="30:21">cout</name> <operator pos:start="30:23" pos:end="30:24">&lt;&lt;</operator><literal type="string" pos:start="30:25" pos:end="30:40">"Unfortunately."</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
