<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/80/80.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="37:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="37:1">{<block_content pos:start="4:5" pos:end="36:13">
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:13"><expr pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:7">cin</name> <operator pos:start="5:9" pos:end="5:10">&gt;&gt;</operator> <name pos:start="5:12" pos:end="5:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:18"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:17"><name pos:start="6:12" pos:end="6:12">q</name><index pos:start="6:13" pos:end="6:17">[<expr pos:start="6:14" pos:end="6:16"><literal type="number" pos:start="6:14" pos:end="6:16">105</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">l</name> <init pos:start="7:11" pos:end="7:13">= <expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr></init></decl>,<decl pos:start="7:15" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">r</name><init pos:start="7:16" pos:end="7:17">=<expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="8:5" pos:end="35:5">while<condition pos:start="8:10" pos:end="8:14">(<expr pos:start="8:11" pos:end="8:13"><name pos:start="8:11" pos:end="8:11">n</name><operator pos:start="8:12" pos:end="8:13">--</operator></expr>)</condition><block pos:start="8:15" pos:end="35:5">{<block_content pos:start="9:9" pos:end="34:5">
        <decl_stmt pos:start="9:9" pos:end="9:14"><decl pos:start="9:9" pos:end="9:13"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">k</name></decl>;</decl_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:17"><expr pos:start="10:9" pos:end="10:16"><name pos:start="10:9" pos:end="10:11">cin</name> <operator pos:start="10:13" pos:end="10:14">&gt;&gt;</operator> <name pos:start="10:16" pos:end="10:16">k</name></expr>;</expr_stmt>
        <if_stmt pos:start="11:9" pos:end="34:5"><if pos:start="11:9" pos:end="29:9">if<condition pos:start="11:11" pos:end="11:16">(<expr pos:start="11:12" pos:end="11:15"><name pos:start="11:12" pos:end="11:12">k</name><operator pos:start="11:13" pos:end="11:14">==</operator><literal type="number" pos:start="11:15" pos:end="11:15">1</literal></expr>)</condition><block pos:start="11:17" pos:end="29:9">{<block_content pos:start="12:13" pos:end="28:16">
            <decl_stmt pos:start="12:13" pos:end="12:24"><decl pos:start="12:13" pos:end="12:23"><type pos:start="12:13" pos:end="12:18"><name pos:start="12:13" pos:end="12:18">string</name></type> <name pos:start="12:20" pos:end="12:23">name</name></decl>;</decl_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:24"><expr pos:start="13:13" pos:end="13:23"><name pos:start="13:13" pos:end="13:15">cin</name> <operator pos:start="13:17" pos:end="13:18">&gt;&gt;</operator> <name pos:start="13:20" pos:end="13:23">name</name></expr>;</expr_stmt>
            <decl_stmt pos:start="14:13" pos:end="14:26"><decl pos:start="14:13" pos:end="14:25"><type pos:start="14:13" pos:end="14:16"><name pos:start="14:13" pos:end="14:16">bool</name></type> <name pos:start="14:18" pos:end="14:21">flag</name> <init pos:start="14:23" pos:end="14:25">= <expr pos:start="14:25" pos:end="14:25"><literal type="number" pos:start="14:25" pos:end="14:25">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="15:13" pos:end="24:13">for<control pos:start="15:16" pos:end="15:36">(<init pos:start="15:17" pos:end="15:26"><decl pos:start="15:17" pos:end="15:25"><type pos:start="15:17" pos:end="15:19"><name pos:start="15:17" pos:end="15:19">int</name></type> <name pos:start="15:21" pos:end="15:21">i</name> <init pos:start="15:23" pos:end="15:25">= <expr pos:start="15:25" pos:end="15:25"><name pos:start="15:25" pos:end="15:25">l</name></expr></init></decl>;</init><condition pos:start="15:27" pos:end="15:32"><expr pos:start="15:27" pos:end="15:31"><name pos:start="15:27" pos:end="15:27">i</name> <operator pos:start="15:29" pos:end="15:29">&lt;</operator> <name pos:start="15:31" pos:end="15:31">r</name></expr>;</condition><incr pos:start="15:33" pos:end="15:35"><expr pos:start="15:33" pos:end="15:35"><name pos:start="15:33" pos:end="15:33">i</name><operator pos:start="15:34" pos:end="15:35">++</operator></expr></incr>)</control><block pos:start="15:37" pos:end="24:13">{<block_content pos:start="16:17" pos:end="23:17">
                <if_stmt pos:start="16:17" pos:end="23:17"><if pos:start="16:17" pos:end="23:17">if<condition pos:start="16:19" pos:end="16:38">(<expr pos:start="16:20" pos:end="16:37"><name pos:start="16:20" pos:end="16:26"><name pos:start="16:20" pos:end="16:20">q</name><index pos:start="16:21" pos:end="16:23">[<expr pos:start="16:22" pos:end="16:22"><name pos:start="16:22" pos:end="16:22">i</name></expr>]</index><index pos:start="16:24" pos:end="16:26">[<expr pos:start="16:25" pos:end="16:25"><literal type="number" pos:start="16:25" pos:end="16:25">0</literal></expr>]</index></name> <operator pos:start="16:28" pos:end="16:29">==</operator> <name pos:start="16:31" pos:end="16:37"><name pos:start="16:31" pos:end="16:34">name</name><index pos:start="16:35" pos:end="16:37">[<expr pos:start="16:36" pos:end="16:36"><literal type="number" pos:start="16:36" pos:end="16:36">0</literal></expr>]</index></name></expr>)</condition><block pos:start="16:39" pos:end="23:17">{<block_content pos:start="17:21" pos:end="22:26">
                    <for pos:start="17:21" pos:end="19:21">for<control pos:start="17:24" pos:end="17:44">(<init pos:start="17:25" pos:end="17:34"><decl pos:start="17:25" pos:end="17:33"><type pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">int</name></type> <name pos:start="17:29" pos:end="17:29">j</name> <init pos:start="17:31" pos:end="17:33">= <expr pos:start="17:33" pos:end="17:33"><name pos:start="17:33" pos:end="17:33">r</name></expr></init></decl>;</init><condition pos:start="17:35" pos:end="17:40"><expr pos:start="17:35" pos:end="17:39"><name pos:start="17:35" pos:end="17:35">j</name><operator pos:start="17:36" pos:end="17:36">+</operator><name pos:start="17:37" pos:end="17:37">i</name><operator pos:start="17:38" pos:end="17:38">+</operator><literal type="number" pos:start="17:39" pos:end="17:39">1</literal></expr>;</condition><incr pos:start="17:41" pos:end="17:43"><expr pos:start="17:41" pos:end="17:43"><name pos:start="17:41" pos:end="17:41">j</name><operator pos:start="17:42" pos:end="17:43">--</operator></expr></incr>)</control><block pos:start="17:45" pos:end="19:21">{<block_content pos:start="18:25" pos:end="18:37">
                        <expr_stmt pos:start="18:25" pos:end="18:37"><expr pos:start="18:25" pos:end="18:36"><name pos:start="18:25" pos:end="18:28"><name pos:start="18:25" pos:end="18:25">q</name><index pos:start="18:26" pos:end="18:28">[<expr pos:start="18:27" pos:end="18:27"><name pos:start="18:27" pos:end="18:27">j</name></expr>]</index></name><operator pos:start="18:29" pos:end="18:29">=</operator> <name pos:start="18:31" pos:end="18:36"><name pos:start="18:31" pos:end="18:31">q</name><index pos:start="18:32" pos:end="18:36">[<expr pos:start="18:33" pos:end="18:35"><name pos:start="18:33" pos:end="18:33">j</name><operator pos:start="18:34" pos:end="18:34">-</operator><literal type="number" pos:start="18:35" pos:end="18:35">1</literal></expr>]</index></name></expr>;</expr_stmt>
                    </block_content>}</block></for>
                    <expr_stmt pos:start="20:21" pos:end="20:32"><expr pos:start="20:21" pos:end="20:31"><name pos:start="20:21" pos:end="20:26"><name pos:start="20:21" pos:end="20:21">q</name><index pos:start="20:22" pos:end="20:26">[<expr pos:start="20:23" pos:end="20:25"><name pos:start="20:23" pos:end="20:23">i</name><operator pos:start="20:24" pos:end="20:24">+</operator><literal type="number" pos:start="20:25" pos:end="20:25">1</literal></expr>]</index></name><operator pos:start="20:27" pos:end="20:27">=</operator><name pos:start="20:28" pos:end="20:31">name</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="21:21" pos:end="21:29"><expr pos:start="21:21" pos:end="21:28"><name pos:start="21:21" pos:end="21:24">flag</name> <operator pos:start="21:26" pos:end="21:26">=</operator> <literal type="number" pos:start="21:28" pos:end="21:28">1</literal></expr>;</expr_stmt>
                    <break pos:start="22:21" pos:end="22:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="25:13" pos:end="27:13"><if pos:start="25:13" pos:end="27:13">if<condition pos:start="25:15" pos:end="25:21">(<expr pos:start="25:16" pos:end="25:20"><operator pos:start="25:16" pos:end="25:16">!</operator><name pos:start="25:17" pos:end="25:20">flag</name></expr>)</condition><block pos:start="25:22" pos:end="27:13">{<block_content pos:start="26:17" pos:end="26:27">
                <expr_stmt pos:start="26:17" pos:end="26:27"><expr pos:start="26:17" pos:end="26:26"><name pos:start="26:17" pos:end="26:20"><name pos:start="26:17" pos:end="26:17">q</name><index pos:start="26:18" pos:end="26:20">[<expr pos:start="26:19" pos:end="26:19"><name pos:start="26:19" pos:end="26:19">r</name></expr>]</index></name><operator pos:start="26:21" pos:end="26:21">=</operator> <name pos:start="26:23" pos:end="26:26">name</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="28:13" pos:end="28:16"><expr pos:start="28:13" pos:end="28:15"><name pos:start="28:13" pos:end="28:13">r</name><operator pos:start="28:14" pos:end="28:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if>
    <else pos:start="30:5" pos:end="34:5">else<block pos:start="30:9" pos:end="34:5">{<block_content pos:start="31:9" pos:end="33:16">
        <expr_stmt pos:start="31:9" pos:end="31:26"><expr pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:12">cout</name> <operator pos:start="31:14" pos:end="31:15">&lt;&lt;</operator> <name pos:start="31:17" pos:end="31:17">q</name> <operator pos:start="31:19" pos:end="31:20">&lt;&lt;</operator> <name pos:start="31:22" pos:end="31:25">endl</name></expr>;</expr_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:12"><expr pos:start="32:9" pos:end="32:11"><name pos:start="32:9" pos:end="32:9">l</name><operator pos:start="32:10" pos:end="32:11">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="33:9" pos:end="33:16"><expr pos:start="33:9" pos:end="33:15"><call pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:9">q</name><operator pos:start="33:10" pos:end="33:10">.</operator><name pos:start="33:11" pos:end="33:13">pop</name></name><argument_list pos:start="33:14" pos:end="33:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <return pos:start="36:5" pos:end="36:13">return <expr pos:start="36:12" pos:end="36:12"><literal type="number" pos:start="36:12" pos:end="36:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
