<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/603/603.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="23:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="23:1">{<block_content pos:start="5:5" pos:end="22:13">
    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:12">t</name></decl>,<decl pos:start="5:14" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:10"/><name pos:start="5:14" pos:end="5:14">s</name><init pos:start="5:15" pos:end="5:17">=<expr pos:start="5:16" pos:end="5:17"><literal type="string" pos:start="5:16" pos:end="5:17">""</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:14"><decl pos:start="6:5" pos:end="6:13"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">sum</name><init pos:start="6:12" pos:end="6:13">=<expr pos:start="6:13" pos:end="6:13"><literal type="number" pos:start="6:13" pos:end="6:13">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:11">op</name><init pos:start="7:12" pos:end="7:15">=<expr pos:start="7:13" pos:end="7:15"><literal type="char" pos:start="7:13" pos:end="7:15">'1'</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:11"><expr pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:10">t</name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:8">cout</name><operator pos:start="9:9" pos:end="9:10">&lt;&lt;</operator><call pos:start="9:11" pos:end="9:18"><name pos:start="9:11" pos:end="9:16"><name pos:start="9:11" pos:end="9:11">t</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:16">size</name></name><argument_list pos:start="9:17" pos:end="9:18">()</argument_list></call><operator pos:start="9:19" pos:end="9:20">&lt;&lt;</operator><literal type="string" pos:start="9:21" pos:end="9:23">" "</literal></expr>;</expr_stmt>
    <while pos:start="10:5" pos:end="12:5">while<condition pos:start="10:10" pos:end="10:17">(<expr pos:start="10:11" pos:end="10:16"><name pos:start="10:11" pos:end="10:13">cin</name><operator pos:start="10:14" pos:end="10:15">&gt;&gt;</operator><name pos:start="10:16" pos:end="10:16">t</name></expr>)</condition><block pos:start="10:18" pos:end="12:5">{<block_content pos:start="11:9" pos:end="11:13">
        <expr_stmt pos:start="11:9" pos:end="11:13"><expr pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">+=</operator><name pos:start="11:12" pos:end="11:12">t</name></expr>;</expr_stmt>
    </block_content>}</block></while><for pos:start="12:6" pos:end="20:5">for<control pos:start="12:9" pos:end="12:32">(<init pos:start="12:10" pos:end="12:17"><decl pos:start="12:10" pos:end="12:16"><type pos:start="12:10" pos:end="12:12"><name pos:start="12:10" pos:end="12:12">int</name></type> <name pos:start="12:14" pos:end="12:14">i</name><init pos:start="12:15" pos:end="12:16">=<expr pos:start="12:16" pos:end="12:16"><literal type="number" pos:start="12:16" pos:end="12:16">0</literal></expr></init></decl>;</init><condition pos:start="12:18" pos:end="12:28"><expr pos:start="12:18" pos:end="12:27"><name pos:start="12:18" pos:end="12:18">i</name><operator pos:start="12:19" pos:end="12:19">&lt;</operator><call pos:start="12:20" pos:end="12:27"><name pos:start="12:20" pos:end="12:25"><name pos:start="12:20" pos:end="12:20">s</name><operator pos:start="12:21" pos:end="12:21">.</operator><name pos:start="12:22" pos:end="12:25">size</name></name><argument_list pos:start="12:26" pos:end="12:27">()</argument_list></call></expr>;</condition><incr pos:start="12:29" pos:end="12:31"><expr pos:start="12:29" pos:end="12:31"><name pos:start="12:29" pos:end="12:29">i</name><operator pos:start="12:30" pos:end="12:31">++</operator></expr></incr>)</control><block pos:start="12:33" pos:end="20:5">{<block_content pos:start="13:10" pos:end="19:10">
         <if_stmt pos:start="13:10" pos:end="19:10"><if pos:start="13:10" pos:end="15:10">if<condition pos:start="13:12" pos:end="13:21">(<expr pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:13">s</name><index pos:start="13:14" pos:end="13:16">[<expr pos:start="13:15" pos:end="13:15"><name pos:start="13:15" pos:end="13:15">i</name></expr>]</index></name><operator pos:start="13:17" pos:end="13:18">==</operator><name pos:start="13:19" pos:end="13:20">op</name></expr>)</condition><block pos:start="13:22" pos:end="15:10">{<block_content pos:start="14:14" pos:end="14:19">
             <expr_stmt pos:start="14:14" pos:end="14:19"><expr pos:start="14:14" pos:end="14:18"><name pos:start="14:14" pos:end="14:16">sum</name><operator pos:start="14:17" pos:end="14:18">++</operator></expr>;</expr_stmt>
         </block_content>}</block></if><else pos:start="15:11" pos:end="19:10">else<block pos:start="15:15" pos:end="19:10">{<block_content pos:start="16:13" pos:end="18:18">
            <expr_stmt pos:start="16:13" pos:end="16:20"><expr pos:start="16:13" pos:end="16:19"><name pos:start="16:13" pos:end="16:14">op</name><operator pos:start="16:15" pos:end="16:15">=</operator><name pos:start="16:16" pos:end="16:19"><name pos:start="16:16" pos:end="16:16">s</name><index pos:start="16:17" pos:end="16:19">[<expr pos:start="16:18" pos:end="16:18"><name pos:start="16:18" pos:end="16:18">i</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:27"><expr pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:16">cout</name><operator pos:start="17:17" pos:end="17:18">&lt;&lt;</operator><name pos:start="17:19" pos:end="17:21">sum</name><operator pos:start="17:22" pos:end="17:23">&lt;&lt;</operator><literal type="string" pos:start="17:24" pos:end="17:26">" "</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:18"><expr pos:start="18:13" pos:end="18:17"><name pos:start="18:13" pos:end="18:15">sum</name><operator pos:start="18:16" pos:end="18:16">=</operator><literal type="number" pos:start="18:17" pos:end="18:17">1</literal></expr>;</expr_stmt>
         </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:8">cout</name><operator pos:start="21:9" pos:end="21:10">&lt;&lt;</operator><name pos:start="21:11" pos:end="21:13">sum</name><operator pos:start="21:14" pos:end="21:15">&lt;&lt;</operator><literal type="string" pos:start="21:16" pos:end="21:18">" "</literal></expr>;</expr_stmt>
    <return pos:start="22:5" pos:end="22:13">return <expr pos:start="22:12" pos:end="22:12"><literal type="number" pos:start="22:12" pos:end="22:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
