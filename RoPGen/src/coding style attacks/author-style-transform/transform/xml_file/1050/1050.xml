<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1050/1050.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:6"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:9"><decl pos:start="4:1" pos:end="4:8"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">flor</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:20"><decl pos:start="5:1" pos:end="5:19"><type pos:start="5:1" pos:end="5:9"><name pos:start="5:1" pos:end="5:4">long</name> <name pos:start="5:6" pos:end="5:9">long</name></type> <name pos:start="5:11" pos:end="5:19"><name pos:start="5:11" pos:end="5:11">a</name><index pos:start="5:12" pos:end="5:19">[<expr pos:start="5:13" pos:end="5:18"><literal type="number" pos:start="5:13" pos:end="5:18">100005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:7"><decl pos:start="6:1" pos:end="6:6"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:6">od</name></decl>;</decl_stmt> 
<decl_stmt pos:start="7:1" pos:end="7:13"><decl pos:start="7:1" pos:end="7:12"><type pos:start="7:1" pos:end="7:9"><name pos:start="7:1" pos:end="7:4">long</name> <name pos:start="7:6" pos:end="7:9">long</name></type> <name pos:start="7:11" pos:end="7:12">mf</name></decl>;</decl_stmt> 
<function pos:start="8:1" pos:end="28:1"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:8">main</name><parameter_list pos:start="8:9" pos:end="8:10">()</parameter_list><block pos:start="8:11" pos:end="28:1">{<block_content pos:start="9:5" pos:end="27:13">
    <expr_stmt pos:start="9:5" pos:end="9:41"><expr pos:start="9:5" pos:end="9:40"><call pos:start="9:5" pos:end="9:40"><name pos:start="9:5" pos:end="9:11">freopen</name><argument_list pos:start="9:12" pos:end="9:40">(<argument pos:start="9:13" pos:end="9:26"><expr pos:start="9:13" pos:end="9:26"><literal type="string" pos:start="9:13" pos:end="9:26">"elevator.out"</literal></expr></argument>, <argument pos:start="9:29" pos:end="9:31"><expr pos:start="9:29" pos:end="9:31"><literal type="string" pos:start="9:29" pos:end="9:31">"w"</literal></expr></argument>, <argument pos:start="9:34" pos:end="9:39"><expr pos:start="9:34" pos:end="9:39"><name pos:start="9:34" pos:end="9:39">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:41"><expr pos:start="10:5" pos:end="10:40"><call pos:start="10:5" pos:end="10:40"><name pos:start="10:5" pos:end="10:11">freopen</name><argument_list pos:start="10:12" pos:end="10:40">(<argument pos:start="10:13" pos:end="10:26"><expr pos:start="10:13" pos:end="10:26"><literal type="string" pos:start="10:13" pos:end="10:26">"elevator.out"</literal></expr></argument>, <argument pos:start="10:29" pos:end="10:31"><expr pos:start="10:29" pos:end="10:31"><literal type="string" pos:start="10:29" pos:end="10:31">"w"</literal></expr></argument>, <argument pos:start="10:34" pos:end="10:39"><expr pos:start="10:34" pos:end="10:39"><name pos:start="10:34" pos:end="10:39">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:13"><expr pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:7">cin</name> <operator pos:start="11:9" pos:end="11:10">&gt;&gt;</operator> <name pos:start="11:12" pos:end="11:12">n</name></expr>;</expr_stmt>
    <for pos:start="12:5" pos:end="14:5">for <control pos:start="12:9" pos:end="12:32">(<init pos:start="12:10" pos:end="12:19"><decl pos:start="12:10" pos:end="12:18"><type pos:start="12:10" pos:end="12:12"><name pos:start="12:10" pos:end="12:12">int</name></type> <name pos:start="12:14" pos:end="12:14">i</name> <init pos:start="12:16" pos:end="12:18">= <expr pos:start="12:18" pos:end="12:18"><literal type="number" pos:start="12:18" pos:end="12:18">1</literal></expr></init></decl>;</init> <condition pos:start="12:21" pos:end="12:27"><expr pos:start="12:21" pos:end="12:26"><name pos:start="12:21" pos:end="12:21">i</name> <operator pos:start="12:23" pos:end="12:24">&lt;=</operator> <name pos:start="12:26" pos:end="12:26">n</name></expr>;</condition> <incr pos:start="12:29" pos:end="12:31"><expr pos:start="12:29" pos:end="12:31"><name pos:start="12:29" pos:end="12:29">i</name><operator pos:start="12:30" pos:end="12:31">++</operator></expr></incr>)</control> <block pos:start="12:34" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:20">
        <expr_stmt pos:start="13:9" pos:end="13:20"><expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">cin</name> <operator pos:start="13:13" pos:end="13:14">&gt;&gt;</operator> <name pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:16">a</name><index pos:start="13:17" pos:end="13:19">[<expr pos:start="13:18" pos:end="13:18"><name pos:start="13:18" pos:end="13:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for> 
    <for pos:start="15:5" pos:end="25:5">for <control pos:start="15:9" pos:end="15:32">(<init pos:start="15:10" pos:end="15:19"><decl pos:start="15:10" pos:end="15:18"><type pos:start="15:10" pos:end="15:12"><name pos:start="15:10" pos:end="15:12">int</name></type> <name pos:start="15:14" pos:end="15:14">i</name> <init pos:start="15:16" pos:end="15:18">= <expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">1</literal></expr></init></decl>;</init> <condition pos:start="15:21" pos:end="15:27"><expr pos:start="15:21" pos:end="15:26"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:24">&lt;=</operator> <name pos:start="15:26" pos:end="15:26">n</name></expr>;</condition> <incr pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:29">i</name><operator pos:start="15:30" pos:end="15:31">++</operator></expr></incr>)</control> <block pos:start="15:34" pos:end="25:5">{<block_content pos:start="16:9" pos:end="24:27">
        <decl_stmt pos:start="16:9" pos:end="16:22"><decl pos:start="16:9" pos:end="16:21"><type pos:start="16:9" pos:end="16:12"><name pos:start="16:9" pos:end="16:12">bool</name></type> <name pos:start="16:14" pos:end="16:17">flag</name> <init pos:start="16:19" pos:end="16:21">= <expr pos:start="16:21" pos:end="16:21"><literal type="number" pos:start="16:21" pos:end="16:21">1</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="17:9" pos:end="22:9">for <control pos:start="17:13" pos:end="17:36">(<init pos:start="17:14" pos:end="17:23"><decl pos:start="17:14" pos:end="17:22"><type pos:start="17:14" pos:end="17:16"><name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:18">j</name> <init pos:start="17:20" pos:end="17:22">= <expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">1</literal></expr></init></decl>;</init> <condition pos:start="17:25" pos:end="17:31"><expr pos:start="17:25" pos:end="17:30"><name pos:start="17:25" pos:end="17:25">j</name> <operator pos:start="17:27" pos:end="17:28">&lt;=</operator> <name pos:start="17:30" pos:end="17:30">n</name></expr>;</condition> <incr pos:start="17:33" pos:end="17:35"><expr pos:start="17:33" pos:end="17:35"><name pos:start="17:33" pos:end="17:33">j</name><operator pos:start="17:34" pos:end="17:35">++</operator></expr></incr>)</control> <block pos:start="17:38" pos:end="22:9">{<block_content pos:start="18:13" pos:end="21:13">
            <if_stmt pos:start="18:13" pos:end="21:13"><if pos:start="18:13" pos:end="21:13">if <condition pos:start="18:16" pos:end="18:29">(<expr pos:start="18:17" pos:end="18:28"><name pos:start="18:17" pos:end="18:20"><name pos:start="18:17" pos:end="18:17">a</name><index pos:start="18:18" pos:end="18:20">[<expr pos:start="18:19" pos:end="18:19"><name pos:start="18:19" pos:end="18:19">j</name></expr>]</index></name> <operator pos:start="18:22" pos:end="18:23">==</operator> <name pos:start="18:25" pos:end="18:28"><name pos:start="18:25" pos:end="18:25">a</name><index pos:start="18:26" pos:end="18:28">[<expr pos:start="18:27" pos:end="18:27"><name pos:start="18:27" pos:end="18:27">i</name></expr>]</index></name></expr>)</condition> <block pos:start="18:31" pos:end="21:13">{<block_content pos:start="19:17" pos:end="20:22">
                <expr_stmt pos:start="19:17" pos:end="19:25"><expr pos:start="19:17" pos:end="19:24"><name pos:start="19:17" pos:end="19:20">flag</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr>;</expr_stmt>
                <break pos:start="20:17" pos:end="20:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="23:9" pos:end="23:19"><expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:10">od</name> <operator pos:start="23:12" pos:end="23:13">+=</operator> <name pos:start="23:15" pos:end="23:18">flag</name></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:27"><expr pos:start="24:9" pos:end="24:26"><name pos:start="24:9" pos:end="24:10">mf</name> <operator pos:start="24:12" pos:end="24:12">=</operator> <call pos:start="24:14" pos:end="24:26"><name pos:start="24:14" pos:end="24:16">max</name><argument_list pos:start="24:17" pos:end="24:26">(<argument pos:start="24:18" pos:end="24:19"><expr pos:start="24:18" pos:end="24:19"><name pos:start="24:18" pos:end="24:19">mf</name></expr></argument>, <argument pos:start="24:22" pos:end="24:25"><expr pos:start="24:22" pos:end="24:25"><name pos:start="24:22" pos:end="24:25"><name pos:start="24:22" pos:end="24:22">a</name><index pos:start="24:23" pos:end="24:25">[<expr pos:start="24:24" pos:end="24:24"><name pos:start="24:24" pos:end="24:24">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="26:5" pos:end="26:60"><expr pos:start="26:5" pos:end="26:59"><name pos:start="26:5" pos:end="26:8">cout</name> <operator pos:start="26:10" pos:end="26:11">&lt;&lt;</operator> <literal type="number" pos:start="26:13" pos:end="26:15">1ll</literal> <operator pos:start="26:17" pos:end="26:17">*</operator> <name pos:start="26:19" pos:end="26:20">mf</name> <operator pos:start="26:22" pos:end="26:22">*</operator> <operator pos:start="26:24" pos:end="26:24">(</operator><literal type="number" pos:start="26:25" pos:end="26:27">4</literal> <operator pos:start="26:27" pos:end="26:27">+</operator> <literal type="number" pos:start="26:29" pos:end="26:29">5</literal><operator pos:start="26:30" pos:end="26:30">)</operator> <operator pos:start="26:32" pos:end="26:32">+</operator> <literal type="number" pos:start="26:34" pos:end="26:36">1ll</literal> <operator pos:start="26:38" pos:end="26:38">*</operator> <name pos:start="26:40" pos:end="26:41">od</name> <operator pos:start="26:43" pos:end="26:43">*</operator> <literal type="number" pos:start="26:45" pos:end="26:47">3</literal> <operator pos:start="26:47" pos:end="26:47">+</operator> <literal type="number" pos:start="26:49" pos:end="26:51">1ll</literal> <operator pos:start="26:53" pos:end="26:53">*</operator> <name pos:start="26:55" pos:end="26:55">n</name> <operator pos:start="26:57" pos:end="26:57">*</operator> <literal type="number" pos:start="26:59" pos:end="26:59">2</literal></expr>;</expr_stmt>
    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
