<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/594/594.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:18">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:18">&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:16">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:16">&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:20">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive> <cpp:file pos:start="5:10" pos:end="5:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="6:1" pos:end="6:20">using <namespace pos:start="6:7" pos:end="6:20">namespace <name pos:start="6:17" pos:end="6:19">std</name>;</namespace></using>

<decl_stmt pos:start="8:1" pos:end="8:11"><decl pos:start="8:1" pos:end="8:10"><type pos:start="8:1" pos:end="8:6"><name pos:start="8:1" pos:end="8:6">string</name></type> <name pos:start="8:8" pos:end="8:10">str</name></decl>;</decl_stmt>

<function pos:start="10:1" pos:end="18:1"><type pos:start="10:1" pos:end="10:3"><name pos:start="10:1" pos:end="10:3">int</name></type> <name pos:start="10:5" pos:end="10:8">bina</name><parameter_list pos:start="10:9" pos:end="10:18">(<parameter pos:start="10:10" pos:end="10:17"><decl pos:start="10:10" pos:end="10:17"><type pos:start="10:10" pos:end="10:15"><name pos:start="10:10" pos:end="10:15">string</name></type> <name pos:start="10:17" pos:end="10:17">s</name></decl></parameter>)</parameter_list> <block pos:start="10:20" pos:end="18:1">{<block_content pos:start="11:5" pos:end="17:15">
    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">sum</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:23"><decl pos:start="12:5" pos:end="12:22"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:11">len</name> <init pos:start="12:13" pos:end="12:22">= <expr pos:start="12:15" pos:end="12:22"><call pos:start="12:15" pos:end="12:22"><name pos:start="12:15" pos:end="12:20"><name pos:start="12:15" pos:end="12:15">s</name><operator pos:start="12:16" pos:end="12:16">.</operator><name pos:start="12:17" pos:end="12:20">size</name></name><argument_list pos:start="12:21" pos:end="12:22">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for pos:start="13:5" pos:end="16:5">for <control pos:start="13:9" pos:end="13:33">(<init pos:start="13:10" pos:end="13:19"><decl pos:start="13:10" pos:end="13:18"><type pos:start="13:10" pos:end="13:12"><name pos:start="13:10" pos:end="13:12">int</name></type> <name pos:start="13:14" pos:end="13:14">i</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>;</init> <condition pos:start="13:21" pos:end="13:28"><expr pos:start="13:21" pos:end="13:27"><name pos:start="13:21" pos:end="13:21">i</name> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <name pos:start="13:25" pos:end="13:27">len</name></expr>;</condition> <incr pos:start="13:30" pos:end="13:32"><expr pos:start="13:30" pos:end="13:32"><name pos:start="13:30" pos:end="13:30">i</name><operator pos:start="13:31" pos:end="13:32">++</operator></expr></incr>)</control> <block pos:start="13:35" pos:end="16:5">{<block_content pos:start="14:9" pos:end="15:40">
        <decl_stmt pos:start="14:9" pos:end="14:28"><decl pos:start="14:9" pos:end="14:27"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:13">p</name> <init pos:start="14:15" pos:end="14:27">= <expr pos:start="14:17" pos:end="14:27"><name pos:start="14:17" pos:end="14:19">len</name> <operator pos:start="14:21" pos:end="14:21">-</operator> <name pos:start="14:23" pos:end="14:23">i</name> <operator pos:start="14:25" pos:end="14:25">-</operator> <literal type="number" pos:start="14:27" pos:end="14:27">1</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:40"><expr pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:11">sum</name> <operator pos:start="15:13" pos:end="15:14">+=</operator> <operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:20"><name pos:start="15:17" pos:end="15:17">s</name><index pos:start="15:18" pos:end="15:20">[<expr pos:start="15:19" pos:end="15:19"><name pos:start="15:19" pos:end="15:19">i</name></expr>]</index></name> <operator pos:start="15:22" pos:end="15:22">-</operator> <literal type="char" pos:start="15:24" pos:end="15:26">'0'</literal><operator pos:start="15:27" pos:end="15:27">)</operator> <operator pos:start="15:29" pos:end="15:29">*</operator> <call pos:start="15:31" pos:end="15:39"><name pos:start="15:31" pos:end="15:33">pow</name><argument_list pos:start="15:34" pos:end="15:39">(<argument pos:start="15:35" pos:end="15:35"><expr pos:start="15:35" pos:end="15:35"><literal type="number" pos:start="15:35" pos:end="15:35">2</literal></expr></argument>, <argument pos:start="15:38" pos:end="15:38"><expr pos:start="15:38" pos:end="15:38"><name pos:start="15:38" pos:end="15:38">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="17:5" pos:end="17:15">return <expr pos:start="17:12" pos:end="17:14"><name pos:start="17:12" pos:end="17:14">sum</name></expr>;</return>
</block_content>}</block></function> 


<function pos:start="21:1" pos:end="52:1"><type pos:start="21:1" pos:end="21:4"><name pos:start="21:1" pos:end="21:4">bool</name></type>  <name pos:start="21:7" pos:end="21:11">check</name><parameter_list pos:start="21:12" pos:end="21:13">()</parameter_list> <block pos:start="21:15" pos:end="52:1">{<block_content pos:start="22:5" pos:end="51:16">
    <if_stmt pos:start="22:5" pos:end="24:5"><if pos:start="22:5" pos:end="24:5">if <condition pos:start="22:8" pos:end="22:23">(<expr pos:start="22:9" pos:end="22:22"><call pos:start="22:9" pos:end="22:18"><name pos:start="22:9" pos:end="22:16"><name pos:start="22:9" pos:end="22:11">str</name><operator pos:start="22:12" pos:end="22:12">.</operator><name pos:start="22:13" pos:end="22:16">size</name></name><argument_list pos:start="22:17" pos:end="22:18">()</argument_list></call> <operator pos:start="22:20" pos:end="22:20">&lt;</operator> <literal type="number" pos:start="22:22" pos:end="22:22">8</literal></expr>)</condition> <block pos:start="22:25" pos:end="24:5">{<block_content pos:start="23:9" pos:end="23:21"> 
        <return pos:start="23:9" pos:end="23:21">return <expr pos:start="23:16" pos:end="23:20"><literal type="boolean" pos:start="23:16" pos:end="23:20">false</literal></expr>;</return> 
    </block_content>}</block></if></if_stmt>
    <for pos:start="25:5" pos:end="29:5">for <control pos:start="25:9" pos:end="25:41">(<init pos:start="25:10" pos:end="25:20"><decl pos:start="25:10" pos:end="25:18"><type pos:start="25:10" pos:end="25:12"><name pos:start="25:10" pos:end="25:12">int</name></type> <name pos:start="25:14" pos:end="25:14">i</name> <init pos:start="25:16" pos:end="25:18">= <expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr></init></decl> ;</init> <condition pos:start="25:22" pos:end="25:36"><expr pos:start="25:22" pos:end="25:35"><name pos:start="25:22" pos:end="25:22">i</name> <operator pos:start="25:24" pos:end="25:24">&lt;</operator> <call pos:start="25:26" pos:end="25:35"><name pos:start="25:26" pos:end="25:33"><name pos:start="25:26" pos:end="25:28">str</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:33">size</name></name><argument_list pos:start="25:34" pos:end="25:35">()</argument_list></call></expr>;</condition> <incr pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:38">i</name><operator pos:start="25:39" pos:end="25:40">++</operator></expr></incr>)</control> <block pos:start="25:43" pos:end="29:5">{<block_content pos:start="26:9" pos:end="28:9">
        <if_stmt pos:start="26:9" pos:end="28:9"><if pos:start="26:9" pos:end="28:9">if <condition pos:start="26:12" pos:end="26:43">(<expr pos:start="26:13" pos:end="26:42"><name pos:start="26:13" pos:end="26:18"><name pos:start="26:13" pos:end="26:15">str</name><index pos:start="26:16" pos:end="26:18">[<expr pos:start="26:17" pos:end="26:17"><name pos:start="26:17" pos:end="26:17">i</name></expr>]</index></name> <operator pos:start="26:20" pos:end="26:21">!=</operator> <literal type="char" pos:start="26:23" pos:end="26:25">'0'</literal> <operator pos:start="26:27" pos:end="26:28">&amp;&amp;</operator> <name pos:start="26:30" pos:end="26:35"><name pos:start="26:30" pos:end="26:32">str</name><index pos:start="26:33" pos:end="26:35">[<expr pos:start="26:34" pos:end="26:34"><name pos:start="26:34" pos:end="26:34">i</name></expr>]</index></name> <operator pos:start="26:37" pos:end="26:38">!=</operator> <literal type="char" pos:start="26:40" pos:end="26:42">'1'</literal></expr>)</condition> <block pos:start="26:45" pos:end="28:9">{<block_content pos:start="27:13" pos:end="27:25">
            <return pos:start="27:13" pos:end="27:25">return <expr pos:start="27:20" pos:end="27:24"><literal type="boolean" pos:start="27:20" pos:end="27:24">false</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    
    <for pos:start="31:5" pos:end="50:5">for <control pos:start="31:9" pos:end="31:41">(<init pos:start="31:10" pos:end="31:19"><decl pos:start="31:10" pos:end="31:18"><type pos:start="31:10" pos:end="31:12"><name pos:start="31:10" pos:end="31:12">int</name></type> <name pos:start="31:14" pos:end="31:14">i</name> <init pos:start="31:16" pos:end="31:18">= <expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr></init></decl>;</init> <condition pos:start="31:21" pos:end="31:35"><expr pos:start="31:21" pos:end="31:34"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <call pos:start="31:25" pos:end="31:34"><name pos:start="31:25" pos:end="31:32"><name pos:start="31:25" pos:end="31:27">str</name><operator pos:start="31:28" pos:end="31:28">.</operator><name pos:start="31:29" pos:end="31:32">size</name></name><argument_list pos:start="31:33" pos:end="31:34">()</argument_list></call></expr>;</condition> <incr pos:start="31:37" pos:end="31:40"><expr pos:start="31:37" pos:end="31:40"><name pos:start="31:37" pos:end="31:37">i</name><operator pos:start="31:38" pos:end="31:39">+=</operator><literal type="number" pos:start="31:40" pos:end="31:40">8</literal></expr></incr>)</control> <block pos:start="31:43" pos:end="50:5">{<block_content pos:start="32:9" pos:end="49:9">
        <decl_stmt pos:start="32:9" pos:end="32:18"><decl pos:start="32:9" pos:end="32:17"><type pos:start="32:9" pos:end="32:11"><name pos:start="32:9" pos:end="32:11">int</name></type> <name pos:start="32:13" pos:end="32:13">m</name> <init pos:start="32:15" pos:end="32:17">= <expr pos:start="32:17" pos:end="32:17"><name pos:start="32:17" pos:end="32:17">i</name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="33:9" pos:end="35:9"><if pos:start="33:9" pos:end="35:9">if <condition pos:start="33:12" pos:end="33:68">(<expr pos:start="33:13" pos:end="33:67"><name pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:15">str</name><index pos:start="33:16" pos:end="33:18">[<expr pos:start="33:17" pos:end="33:17"><name pos:start="33:17" pos:end="33:17">m</name></expr>]</index></name> <operator pos:start="33:20" pos:end="33:21">==</operator> <literal type="char" pos:start="33:23" pos:end="33:25">'1'</literal> <operator pos:start="33:27" pos:end="33:28">&amp;&amp;</operator> <name pos:start="33:30" pos:end="33:39"><name pos:start="33:30" pos:end="33:32">str</name><index pos:start="33:33" pos:end="33:39">[<expr pos:start="33:34" pos:end="33:38"><name pos:start="33:34" pos:end="33:34">m</name> <operator pos:start="33:36" pos:end="33:36">+</operator> <literal type="number" pos:start="33:38" pos:end="33:38">1</literal></expr>]</index></name> <operator pos:start="33:41" pos:end="33:42">==</operator> <literal type="char" pos:start="33:44" pos:end="33:46">'0'</literal> <operator pos:start="33:48" pos:end="33:49">&amp;&amp;</operator> <name pos:start="33:51" pos:end="33:60"><name pos:start="33:51" pos:end="33:53">str</name><index pos:start="33:54" pos:end="33:60">[<expr pos:start="33:55" pos:end="33:59"><name pos:start="33:55" pos:end="33:55">m</name> <operator pos:start="33:57" pos:end="33:57">+</operator> <literal type="number" pos:start="33:59" pos:end="33:59">2</literal></expr>]</index></name> <operator pos:start="33:62" pos:end="33:63">==</operator> <literal type="char" pos:start="33:65" pos:end="33:67">'0'</literal></expr>)</condition> <block pos:start="33:70" pos:end="35:9">{<block_content pos:start="34:13" pos:end="34:25">
            <return pos:start="34:13" pos:end="34:25">return <expr pos:start="34:20" pos:end="34:24"><literal type="boolean" pos:start="34:20" pos:end="34:24">false</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="36:9" pos:end="38:9"><if pos:start="36:9" pos:end="38:9">if <condition pos:start="36:12" pos:end="36:68">(<expr pos:start="36:13" pos:end="36:67"><name pos:start="36:13" pos:end="36:18"><name pos:start="36:13" pos:end="36:15">str</name><index pos:start="36:16" pos:end="36:18">[<expr pos:start="36:17" pos:end="36:17"><name pos:start="36:17" pos:end="36:17">m</name></expr>]</index></name> <operator pos:start="36:20" pos:end="36:21">==</operator> <literal type="char" pos:start="36:23" pos:end="36:25">'1'</literal> <operator pos:start="36:27" pos:end="36:28">&amp;&amp;</operator> <name pos:start="36:30" pos:end="36:39"><name pos:start="36:30" pos:end="36:32">str</name><index pos:start="36:33" pos:end="36:39">[<expr pos:start="36:34" pos:end="36:38"><name pos:start="36:34" pos:end="36:34">m</name> <operator pos:start="36:36" pos:end="36:36">+</operator> <literal type="number" pos:start="36:38" pos:end="36:38">1</literal></expr>]</index></name> <operator pos:start="36:41" pos:end="36:42">==</operator> <literal type="char" pos:start="36:44" pos:end="36:46">'1'</literal> <operator pos:start="36:48" pos:end="36:49">&amp;&amp;</operator> <name pos:start="36:51" pos:end="36:60"><name pos:start="36:51" pos:end="36:53">str</name><index pos:start="36:54" pos:end="36:60">[<expr pos:start="36:55" pos:end="36:59"><name pos:start="36:55" pos:end="36:55">m</name> <operator pos:start="36:57" pos:end="36:57">+</operator> <literal type="number" pos:start="36:59" pos:end="36:59">2</literal></expr>]</index></name> <operator pos:start="36:62" pos:end="36:63">==</operator> <literal type="char" pos:start="36:65" pos:end="36:67">'0'</literal></expr>)</condition> <block pos:start="36:70" pos:end="38:9">{<block_content pos:start="37:13" pos:end="37:25">
            <return pos:start="37:13" pos:end="37:25">return <expr pos:start="37:20" pos:end="37:24"><literal type="boolean" pos:start="37:20" pos:end="37:24">false</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="39:9" pos:end="44:9"><if pos:start="39:9" pos:end="44:9">if <condition pos:start="39:12" pos:end="39:68">(<expr pos:start="39:13" pos:end="39:67"><name pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:15">str</name><index pos:start="39:16" pos:end="39:18">[<expr pos:start="39:17" pos:end="39:17"><name pos:start="39:17" pos:end="39:17">m</name></expr>]</index></name> <operator pos:start="39:20" pos:end="39:21">==</operator> <literal type="char" pos:start="39:23" pos:end="39:25">'1'</literal> <operator pos:start="39:27" pos:end="39:28">&amp;&amp;</operator> <name pos:start="39:30" pos:end="39:39"><name pos:start="39:30" pos:end="39:32">str</name><index pos:start="39:33" pos:end="39:39">[<expr pos:start="39:34" pos:end="39:38"><name pos:start="39:34" pos:end="39:34">m</name> <operator pos:start="39:36" pos:end="39:36">+</operator> <literal type="number" pos:start="39:38" pos:end="39:38">1</literal></expr>]</index></name> <operator pos:start="39:41" pos:end="39:42">==</operator> <literal type="char" pos:start="39:44" pos:end="39:46">'0'</literal> <operator pos:start="39:48" pos:end="39:49">&amp;&amp;</operator> <name pos:start="39:51" pos:end="39:60"><name pos:start="39:51" pos:end="39:53">str</name><index pos:start="39:54" pos:end="39:60">[<expr pos:start="39:55" pos:end="39:59"><name pos:start="39:55" pos:end="39:55">m</name> <operator pos:start="39:57" pos:end="39:57">+</operator> <literal type="number" pos:start="39:59" pos:end="39:59">2</literal></expr>]</index></name> <operator pos:start="39:62" pos:end="39:63">==</operator> <literal type="char" pos:start="39:65" pos:end="39:67">'1'</literal></expr>)</condition> <block pos:start="39:70" pos:end="44:9">{<block_content pos:start="40:13" pos:end="43:13">
            <decl_stmt pos:start="40:13" pos:end="40:44"><decl pos:start="40:13" pos:end="40:43"><type pos:start="40:13" pos:end="40:18"><name pos:start="40:13" pos:end="40:18">string</name></type> <name pos:start="40:20" pos:end="40:20">s</name> <init pos:start="40:22" pos:end="40:43">= <expr pos:start="40:24" pos:end="40:43"><call pos:start="40:24" pos:end="40:43"><name pos:start="40:24" pos:end="40:33"><name pos:start="40:24" pos:end="40:26">str</name><operator pos:start="40:27" pos:end="40:27">.</operator><name pos:start="40:28" pos:end="40:33">substr</name></name><argument_list pos:start="40:34" pos:end="40:43">(<argument pos:start="40:35" pos:end="40:39"><expr pos:start="40:35" pos:end="40:39"><name pos:start="40:35" pos:end="40:35">m</name> <operator pos:start="40:37" pos:end="40:37">+</operator> <literal type="number" pos:start="40:39" pos:end="40:39">3</literal></expr></argument>, <argument pos:start="40:42" pos:end="40:42"><expr pos:start="40:42" pos:end="40:42"><literal type="number" pos:start="40:42" pos:end="40:42">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="41:13" pos:end="43:13"><if pos:start="41:13" pos:end="43:13">if <condition pos:start="41:16" pos:end="41:29">(<expr pos:start="41:17" pos:end="41:28"><call pos:start="41:17" pos:end="41:23"><name pos:start="41:17" pos:end="41:20">bina</name><argument_list pos:start="41:21" pos:end="41:23">(<argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><name pos:start="41:22" pos:end="41:22">s</name></expr></argument>)</argument_list></call> <operator pos:start="41:25" pos:end="41:25">&gt;</operator> <literal type="number" pos:start="41:27" pos:end="41:28">25</literal></expr>)</condition> <block pos:start="41:31" pos:end="43:13">{<block_content pos:start="42:17" pos:end="42:29">
                <return pos:start="42:17" pos:end="42:29">return <expr pos:start="42:24" pos:end="42:28"><literal type="boolean" pos:start="42:24" pos:end="42:28">false</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="47:9">if <condition pos:start="45:12" pos:end="45:47">(<expr pos:start="45:13" pos:end="45:46"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:15">str</name><index pos:start="45:16" pos:end="45:18">[<expr pos:start="45:17" pos:end="45:17"><name pos:start="45:17" pos:end="45:17">m</name></expr>]</index></name> <operator pos:start="45:20" pos:end="45:21">==</operator> <literal type="char" pos:start="45:23" pos:end="45:25">'0'</literal> <operator pos:start="45:27" pos:end="45:28">&amp;&amp;</operator> <name pos:start="45:30" pos:end="45:39"><name pos:start="45:30" pos:end="45:32">str</name><index pos:start="45:33" pos:end="45:39">[<expr pos:start="45:34" pos:end="45:38"><name pos:start="45:34" pos:end="45:34">m</name> <operator pos:start="45:36" pos:end="45:36">+</operator> <literal type="number" pos:start="45:38" pos:end="45:38">8</literal></expr>]</index></name> <operator pos:start="45:41" pos:end="45:42">!=</operator> <literal type="char" pos:start="45:44" pos:end="45:46">'0'</literal></expr>)</condition> <block pos:start="45:49" pos:end="47:9">{<block_content pos:start="46:13" pos:end="46:25">
            <return pos:start="46:13" pos:end="46:25">return <expr pos:start="46:20" pos:end="46:24"><literal type="boolean" pos:start="46:20" pos:end="46:24">false</literal></expr>;</return>
        </block_content>}</block></if> <else pos:start="47:11" pos:end="49:9">else<block pos:start="47:15" pos:end="49:9">{<block_content pos:start="48:13" pos:end="48:17">
            <expr_stmt pos:start="48:13" pos:end="48:17"><expr pos:start="48:13" pos:end="48:16"><name pos:start="48:13" pos:end="48:13">i</name><operator pos:start="48:14" pos:end="48:15">+=</operator><literal type="number" pos:start="48:16" pos:end="48:16">8</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <return pos:start="51:5" pos:end="51:16">return <expr pos:start="51:12" pos:end="51:15"><literal type="boolean" pos:start="51:12" pos:end="51:15">true</literal></expr>;</return>
</block_content>}</block></function>

<function pos:start="54:1" pos:end="85:1"><type pos:start="54:1" pos:end="54:3"><name pos:start="54:1" pos:end="54:3">int</name></type> <name pos:start="54:5" pos:end="54:8">main</name><parameter_list pos:start="54:9" pos:end="54:10">()</parameter_list> <block pos:start="54:12" pos:end="85:1">{<block_content pos:start="55:5" pos:end="84:13">
    <expr_stmt pos:start="55:5" pos:end="55:42"><expr pos:start="55:5" pos:end="55:41"><call pos:start="55:5" pos:end="55:41"><name pos:start="55:5" pos:end="55:11">freopen</name><argument_list pos:start="55:12" pos:end="55:41">(<argument pos:start="55:13" pos:end="55:28"><expr pos:start="55:13" pos:end="55:28"><literal type="string" pos:start="55:13" pos:end="55:28">"information.in"</literal></expr></argument>, <argument pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><literal type="string" pos:start="55:31" pos:end="55:33">"r"</literal></expr></argument>, <argument pos:start="55:36" pos:end="55:40"><expr pos:start="55:36" pos:end="55:40"><name pos:start="55:36" pos:end="55:40">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="56:5" pos:end="56:44"><expr pos:start="56:5" pos:end="56:43"><call pos:start="56:5" pos:end="56:43"><name pos:start="56:5" pos:end="56:11">freopen</name><argument_list pos:start="56:12" pos:end="56:43">(<argument pos:start="56:13" pos:end="56:29"><expr pos:start="56:13" pos:end="56:29"><literal type="string" pos:start="56:13" pos:end="56:29">"information.out"</literal></expr></argument>, <argument pos:start="56:32" pos:end="56:34"><expr pos:start="56:32" pos:end="56:34"><literal type="string" pos:start="56:32" pos:end="56:34">"w"</literal></expr></argument>, <argument pos:start="56:37" pos:end="56:42"><expr pos:start="56:37" pos:end="56:42"><name pos:start="56:37" pos:end="56:42">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="57:5" pos:end="57:15"><expr pos:start="57:5" pos:end="57:14"><name pos:start="57:5" pos:end="57:7">cin</name> <operator pos:start="57:9" pos:end="57:10">&gt;&gt;</operator> <name pos:start="57:12" pos:end="57:14">str</name></expr>;</expr_stmt>
    
    <if_stmt pos:start="59:5" pos:end="62:5"><if pos:start="59:5" pos:end="62:5">if <condition pos:start="59:8" pos:end="59:17">(<expr pos:start="59:9" pos:end="59:16"><operator pos:start="59:9" pos:end="59:9">!</operator><call pos:start="59:10" pos:end="59:16"><name pos:start="59:10" pos:end="59:14">check</name><argument_list pos:start="59:15" pos:end="59:16">()</argument_list></call></expr>)</condition> <block pos:start="59:19" pos:end="62:5">{<block_content pos:start="60:9" pos:end="61:17">
        <expr_stmt pos:start="60:9" pos:end="60:32"><expr pos:start="60:9" pos:end="60:31"><name pos:start="60:9" pos:end="60:12">cout</name> <operator pos:start="60:14" pos:end="60:15">&lt;&lt;</operator> <literal type="string" pos:start="60:17" pos:end="60:23">"Error"</literal> <operator pos:start="60:25" pos:end="60:26">&lt;&lt;</operator> <name pos:start="60:28" pos:end="60:31">endl</name></expr>;</expr_stmt>
        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    
    <for pos:start="64:5" pos:end="83:5">for <control pos:start="64:9" pos:end="64:41">(<init pos:start="64:10" pos:end="64:19"><decl pos:start="64:10" pos:end="64:18"><type pos:start="64:10" pos:end="64:12"><name pos:start="64:10" pos:end="64:12">int</name></type> <name pos:start="64:14" pos:end="64:14">i</name> <init pos:start="64:16" pos:end="64:18">= <expr pos:start="64:18" pos:end="64:18"><literal type="number" pos:start="64:18" pos:end="64:18">0</literal></expr></init></decl>;</init> <condition pos:start="64:21" pos:end="64:35"><expr pos:start="64:21" pos:end="64:34"><name pos:start="64:21" pos:end="64:21">i</name> <operator pos:start="64:23" pos:end="64:23">&lt;</operator> <call pos:start="64:25" pos:end="64:34"><name pos:start="64:25" pos:end="64:32"><name pos:start="64:25" pos:end="64:27">str</name><operator pos:start="64:28" pos:end="64:28">.</operator><name pos:start="64:29" pos:end="64:32">size</name></name><argument_list pos:start="64:33" pos:end="64:34">()</argument_list></call></expr>;</condition> <incr pos:start="64:37" pos:end="64:40"><expr pos:start="64:37" pos:end="64:40"><name pos:start="64:37" pos:end="64:37">i</name><operator pos:start="64:38" pos:end="64:39">+=</operator><literal type="number" pos:start="64:40" pos:end="64:40">8</literal></expr></incr>)</control> <block pos:start="64:43" pos:end="83:5">{<block_content pos:start="65:9" pos:end="82:9">
        <decl_stmt pos:start="65:9" pos:end="65:18"><decl pos:start="65:9" pos:end="65:17"><type pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">int</name></type> <name pos:start="65:13" pos:end="65:13">m</name> <init pos:start="65:15" pos:end="65:17">= <expr pos:start="65:17" pos:end="65:17"><name pos:start="65:17" pos:end="65:17">i</name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="66:9" pos:end="69:9"><if pos:start="66:9" pos:end="69:9">if <condition pos:start="66:12" pos:end="66:68">(<expr pos:start="66:13" pos:end="66:67"><name pos:start="66:13" pos:end="66:18"><name pos:start="66:13" pos:end="66:15">str</name><index pos:start="66:16" pos:end="66:18">[<expr pos:start="66:17" pos:end="66:17"><name pos:start="66:17" pos:end="66:17">m</name></expr>]</index></name> <operator pos:start="66:20" pos:end="66:21">==</operator> <literal type="char" pos:start="66:23" pos:end="66:25">'1'</literal> <operator pos:start="66:27" pos:end="66:28">&amp;&amp;</operator> <name pos:start="66:30" pos:end="66:39"><name pos:start="66:30" pos:end="66:32">str</name><index pos:start="66:33" pos:end="66:39">[<expr pos:start="66:34" pos:end="66:38"><name pos:start="66:34" pos:end="66:34">m</name> <operator pos:start="66:36" pos:end="66:36">+</operator> <literal type="number" pos:start="66:38" pos:end="66:38">1</literal></expr>]</index></name> <operator pos:start="66:41" pos:end="66:42">==</operator> <literal type="char" pos:start="66:44" pos:end="66:46">'0'</literal> <operator pos:start="66:48" pos:end="66:49">&amp;&amp;</operator> <name pos:start="66:51" pos:end="66:60"><name pos:start="66:51" pos:end="66:53">str</name><index pos:start="66:54" pos:end="66:60">[<expr pos:start="66:55" pos:end="66:59"><name pos:start="66:55" pos:end="66:55">m</name> <operator pos:start="66:57" pos:end="66:57">+</operator> <literal type="number" pos:start="66:59" pos:end="66:59">2</literal></expr>]</index></name> <operator pos:start="66:62" pos:end="66:63">==</operator> <literal type="char" pos:start="66:65" pos:end="66:67">'1'</literal></expr>)</condition> <block pos:start="66:70" pos:end="69:9">{<block_content pos:start="67:13" pos:end="68:42">
            <decl_stmt pos:start="67:13" pos:end="67:44"><decl pos:start="67:13" pos:end="67:43"><type pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:18">string</name></type> <name pos:start="67:20" pos:end="67:20">s</name> <init pos:start="67:22" pos:end="67:43">= <expr pos:start="67:24" pos:end="67:43"><call pos:start="67:24" pos:end="67:43"><name pos:start="67:24" pos:end="67:33"><name pos:start="67:24" pos:end="67:26">str</name><operator pos:start="67:27" pos:end="67:27">.</operator><name pos:start="67:28" pos:end="67:33">substr</name></name><argument_list pos:start="67:34" pos:end="67:43">(<argument pos:start="67:35" pos:end="67:39"><expr pos:start="67:35" pos:end="67:39"><name pos:start="67:35" pos:end="67:35">m</name> <operator pos:start="67:37" pos:end="67:37">+</operator> <literal type="number" pos:start="67:39" pos:end="67:39">3</literal></expr></argument>, <argument pos:start="67:42" pos:end="67:42"><expr pos:start="67:42" pos:end="67:42"><literal type="number" pos:start="67:42" pos:end="67:42">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="68:13" pos:end="68:42"><expr pos:start="68:13" pos:end="68:41"><name pos:start="68:13" pos:end="68:16">cout</name> <operator pos:start="68:18" pos:end="68:19">&lt;&lt;</operator> <operator pos:start="68:21" pos:end="68:21">(</operator><name pos:start="68:22" pos:end="68:25">char</name><operator pos:start="68:26" pos:end="68:26">)</operator><operator pos:start="68:27" pos:end="68:27">(</operator><literal type="char" pos:start="68:28" pos:end="68:30">'A'</literal> <operator pos:start="68:32" pos:end="68:32">+</operator> <call pos:start="68:34" pos:end="68:40"><name pos:start="68:34" pos:end="68:37">bina</name><argument_list pos:start="68:38" pos:end="68:40">(<argument pos:start="68:39" pos:end="68:39"><expr pos:start="68:39" pos:end="68:39"><name pos:start="68:39" pos:end="68:39">s</name></expr></argument>)</argument_list></call><operator pos:start="68:41" pos:end="68:41">)</operator></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="70:9" pos:end="72:9"><if pos:start="70:9" pos:end="72:9">if <condition pos:start="70:12" pos:end="70:68">(<expr pos:start="70:13" pos:end="70:67"><name pos:start="70:13" pos:end="70:18"><name pos:start="70:13" pos:end="70:15">str</name><index pos:start="70:16" pos:end="70:18">[<expr pos:start="70:17" pos:end="70:17"><name pos:start="70:17" pos:end="70:17">m</name></expr>]</index></name> <operator pos:start="70:20" pos:end="70:21">==</operator> <literal type="char" pos:start="70:23" pos:end="70:25">'1'</literal> <operator pos:start="70:27" pos:end="70:28">&amp;&amp;</operator> <name pos:start="70:30" pos:end="70:39"><name pos:start="70:30" pos:end="70:32">str</name><index pos:start="70:33" pos:end="70:39">[<expr pos:start="70:34" pos:end="70:38"><name pos:start="70:34" pos:end="70:34">m</name> <operator pos:start="70:36" pos:end="70:36">+</operator> <literal type="number" pos:start="70:38" pos:end="70:38">1</literal></expr>]</index></name> <operator pos:start="70:41" pos:end="70:42">==</operator> <literal type="char" pos:start="70:44" pos:end="70:46">'1'</literal> <operator pos:start="70:48" pos:end="70:49">&amp;&amp;</operator> <name pos:start="70:51" pos:end="70:60"><name pos:start="70:51" pos:end="70:53">str</name><index pos:start="70:54" pos:end="70:60">[<expr pos:start="70:55" pos:end="70:59"><name pos:start="70:55" pos:end="70:55">m</name> <operator pos:start="70:57" pos:end="70:57">+</operator> <literal type="number" pos:start="70:59" pos:end="70:59">2</literal></expr>]</index></name> <operator pos:start="70:62" pos:end="70:63">==</operator> <literal type="char" pos:start="70:65" pos:end="70:67">'1'</literal></expr>)</condition> <block pos:start="70:70" pos:end="72:9">{<block_content pos:start="71:13" pos:end="71:24">
            <expr_stmt pos:start="71:13" pos:end="71:24"><expr pos:start="71:13" pos:end="71:23"><name pos:start="71:13" pos:end="71:16">cout</name> <operator pos:start="71:18" pos:end="71:19">&lt;&lt;</operator> <literal type="char" pos:start="71:21" pos:end="71:23">' '</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="73:9" pos:end="82:9"><if pos:start="73:9" pos:end="82:9">if <condition pos:start="73:12" pos:end="73:26">(<expr pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:18"><name pos:start="73:13" pos:end="73:15">str</name><index pos:start="73:16" pos:end="73:18">[<expr pos:start="73:17" pos:end="73:17"><name pos:start="73:17" pos:end="73:17">m</name></expr>]</index></name> <operator pos:start="73:20" pos:end="73:21">==</operator> <literal type="char" pos:start="73:23" pos:end="73:25">'0'</literal></expr>)</condition> <block pos:start="73:28" pos:end="82:9">{<block_content pos:start="74:13" pos:end="81:24">
            <expr_stmt pos:start="74:13" pos:end="74:19"><expr pos:start="74:13" pos:end="74:18"><name pos:start="74:13" pos:end="74:13">i</name> <operator pos:start="74:15" pos:end="74:16">+=</operator> <literal type="number" pos:start="74:18" pos:end="74:18">8</literal></expr>;</expr_stmt>
            <decl_stmt pos:start="75:13" pos:end="75:41"><decl pos:start="75:13" pos:end="75:40"><type pos:start="75:13" pos:end="75:18"><name pos:start="75:13" pos:end="75:18">string</name></type> <name pos:start="75:20" pos:end="75:21">s1</name> <init pos:start="75:23" pos:end="75:40">= <expr pos:start="75:25" pos:end="75:40"><call pos:start="75:25" pos:end="75:40"><name pos:start="75:25" pos:end="75:34"><name pos:start="75:25" pos:end="75:27">str</name><operator pos:start="75:28" pos:end="75:28">.</operator><name pos:start="75:29" pos:end="75:34">substr</name></name><argument_list pos:start="75:35" pos:end="75:40">(<argument pos:start="75:36" pos:end="75:36"><expr pos:start="75:36" pos:end="75:36"><name pos:start="75:36" pos:end="75:36">m</name></expr></argument>, <argument pos:start="75:39" pos:end="75:39"><expr pos:start="75:39" pos:end="75:39"><literal type="number" pos:start="75:39" pos:end="75:39">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="76:13" pos:end="76:45"><decl pos:start="76:13" pos:end="76:44"><type pos:start="76:13" pos:end="76:18"><name pos:start="76:13" pos:end="76:18">string</name></type> <name pos:start="76:20" pos:end="76:21">s2</name> <init pos:start="76:23" pos:end="76:44">= <expr pos:start="76:25" pos:end="76:44"><call pos:start="76:25" pos:end="76:44"><name pos:start="76:25" pos:end="76:34"><name pos:start="76:25" pos:end="76:27">str</name><operator pos:start="76:28" pos:end="76:28">.</operator><name pos:start="76:29" pos:end="76:34">substr</name></name><argument_list pos:start="76:35" pos:end="76:44">(<argument pos:start="76:36" pos:end="76:40"><expr pos:start="76:36" pos:end="76:40"><name pos:start="76:36" pos:end="76:36">m</name> <operator pos:start="76:38" pos:end="76:38">+</operator> <literal type="number" pos:start="76:40" pos:end="76:40">8</literal></expr></argument>, <argument pos:start="76:43" pos:end="76:43"><expr pos:start="76:43" pos:end="76:43"><literal type="number" pos:start="76:43" pos:end="76:43">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="77:13" pos:end="77:32"><decl pos:start="77:13" pos:end="77:31"><type pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:15">int</name></type> <name pos:start="77:17" pos:end="77:20">num1</name> <init pos:start="77:22" pos:end="77:31">= <expr pos:start="77:24" pos:end="77:31"><call pos:start="77:24" pos:end="77:31"><name pos:start="77:24" pos:end="77:27">bina</name><argument_list pos:start="77:28" pos:end="77:31">(<argument pos:start="77:29" pos:end="77:30"><expr pos:start="77:29" pos:end="77:30"><name pos:start="77:29" pos:end="77:30">s1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="78:13" pos:end="78:32"><decl pos:start="78:13" pos:end="78:31"><type pos:start="78:13" pos:end="78:15"><name pos:start="78:13" pos:end="78:15">int</name></type> <name pos:start="78:17" pos:end="78:20">num2</name> <init pos:start="78:22" pos:end="78:31">= <expr pos:start="78:24" pos:end="78:31"><call pos:start="78:24" pos:end="78:31"><name pos:start="78:24" pos:end="78:27">bina</name><argument_list pos:start="78:28" pos:end="78:31">(<argument pos:start="78:29" pos:end="78:30"><expr pos:start="78:29" pos:end="78:30"><name pos:start="78:29" pos:end="78:30">s2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="79:13" pos:end="79:32"><expr pos:start="79:13" pos:end="79:21"><name pos:start="79:13" pos:end="79:16">num1</name> <operator pos:start="79:18" pos:end="79:19">/=</operator> <literal type="number" pos:start="79:21" pos:end="79:21">2</literal></expr><operator pos:start="79:22" pos:end="79:22">,</operator> <expr pos:start="79:24" pos:end="79:31"><name pos:start="79:24" pos:end="79:27">num2</name><operator pos:start="79:28" pos:end="79:29">/=</operator> <literal type="number" pos:start="79:31" pos:end="79:31">2</literal></expr>;</expr_stmt>
            <decl_stmt pos:start="80:13" pos:end="80:34"><decl pos:start="80:13" pos:end="80:33"><type pos:start="80:13" pos:end="80:15"><name pos:start="80:13" pos:end="80:15">int</name></type> <name pos:start="80:17" pos:end="80:19">add</name> <init pos:start="80:21" pos:end="80:33">= <expr pos:start="80:23" pos:end="80:33"><name pos:start="80:23" pos:end="80:26">num1</name> <operator pos:start="80:28" pos:end="80:28">+</operator> <name pos:start="80:30" pos:end="80:33">num2</name></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="81:13" pos:end="81:24"><expr pos:start="81:13" pos:end="81:23"><name pos:start="81:13" pos:end="81:16">cout</name> <operator pos:start="81:18" pos:end="81:19">&lt;&lt;</operator> <name pos:start="81:21" pos:end="81:23">add</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="84:5" pos:end="84:13">return <expr pos:start="84:12" pos:end="84:12"><literal type="number" pos:start="84:12" pos:end="84:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
