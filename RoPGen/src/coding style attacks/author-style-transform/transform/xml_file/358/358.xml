<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/358/358.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:18">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:18">&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:16">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive> <cpp:file pos:start="5:10" pos:end="5:16">&lt;queue&gt;</cpp:file></cpp:include>
<using pos:start="6:1" pos:end="6:20">using <namespace pos:start="6:7" pos:end="6:20">namespace <name pos:start="6:17" pos:end="6:19">std</name>;</namespace></using>
<decl_stmt pos:start="7:1" pos:end="7:28"><decl pos:start="7:1" pos:end="7:27"><type pos:start="7:1" pos:end="7:9"><name pos:start="7:1" pos:end="7:4">long</name> <name pos:start="7:6" pos:end="7:9">long</name></type> <name pos:start="7:11" pos:end="7:27"><name pos:start="7:11" pos:end="7:12">dp</name><index pos:start="7:13" pos:end="7:27">[<expr pos:start="7:14" pos:end="7:26"><operator pos:start="7:14" pos:end="7:14">(</operator><literal type="number" pos:start="7:15" pos:end="7:15">1</literal> <operator pos:start="7:17" pos:end="7:18">&lt;&lt;</operator> <literal type="number" pos:start="7:20" pos:end="7:21">19</literal><operator pos:start="7:22" pos:end="7:22">)</operator> <operator pos:start="7:24" pos:end="7:24">-</operator> <literal type="number" pos:start="7:26" pos:end="7:26">1</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:18"><decl pos:start="8:1" pos:end="8:17"><type pos:start="8:1" pos:end="8:9"><name pos:start="8:1" pos:end="8:4">long</name> <name pos:start="8:6" pos:end="8:9">long</name></type> <name pos:start="8:11" pos:end="8:17"><name pos:start="8:11" pos:end="8:11">a</name><index pos:start="8:12" pos:end="8:17">[<expr pos:start="8:13" pos:end="8:16"><literal type="number" pos:start="8:13" pos:end="8:16">1000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="9:1" pos:end="9:20"><decl pos:start="9:1" pos:end="9:19"><type pos:start="9:1" pos:end="9:9"><name pos:start="9:1" pos:end="9:4">long</name> <name pos:start="9:6" pos:end="9:9">long</name></type> <name pos:start="9:11" pos:end="9:19"><name pos:start="9:11" pos:end="9:11">g</name><index pos:start="9:12" pos:end="9:15">[<expr pos:start="9:13" pos:end="9:14"><literal type="number" pos:start="9:13" pos:end="9:14">50</literal></expr>]</index><index pos:start="9:16" pos:end="9:19">[<expr pos:start="9:17" pos:end="9:18"><literal type="number" pos:start="9:17" pos:end="9:18">50</literal></expr>]</index></name></decl>;</decl_stmt>
<struct pos:start="10:1" pos:end="12:2">struct <name pos:start="10:8" pos:end="10:11">node</name><block pos:start="10:12" pos:end="12:1">{<public type="default" pos:start="11:5" pos:end="11:22">
    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:8">long</name> <name pos:start="11:10" pos:end="11:13">long</name></type> <name pos:start="11:15" pos:end="11:16">u1</name></decl>, <decl pos:start="11:19" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:13"/><name pos:start="11:19" pos:end="11:21">len</name></decl>;</decl_stmt>
</public>}</block>;</struct>
<function pos:start="13:1" pos:end="20:1"><type pos:start="13:1" pos:end="13:9"><name pos:start="13:1" pos:end="13:4">long</name> <name pos:start="13:6" pos:end="13:9">long</name></type> <name pos:start="13:11" pos:end="13:15">count</name><parameter_list pos:start="13:16" pos:end="13:28">(<parameter pos:start="13:17" pos:end="13:27"><decl pos:start="13:17" pos:end="13:27"><type pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:20">long</name> <name pos:start="13:22" pos:end="13:25">long</name></type> <name pos:start="13:27" pos:end="13:27">x</name></decl></parameter>)</parameter_list> <block pos:start="13:30" pos:end="20:1">{<block_content pos:start="14:5" pos:end="19:15">
    <decl_stmt pos:start="14:5" pos:end="14:22"><decl pos:start="14:5" pos:end="14:21"><type pos:start="14:5" pos:end="14:13"><name pos:start="14:5" pos:end="14:8">long</name> <name pos:start="14:10" pos:end="14:13">long</name></type> <name pos:start="14:15" pos:end="14:17">cnt</name> <init pos:start="14:19" pos:end="14:21">= <expr pos:start="14:21" pos:end="14:21"><literal type="number" pos:start="14:21" pos:end="14:21">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="15:5" pos:end="18:5">while <condition pos:start="15:11" pos:end="15:13">(<expr pos:start="15:12" pos:end="15:12"><name pos:start="15:12" pos:end="15:12">x</name></expr>)</condition> <block pos:start="15:15" pos:end="18:5">{<block_content pos:start="16:9" pos:end="17:16">
        <expr_stmt pos:start="16:9" pos:end="16:21"><expr pos:start="16:9" pos:end="16:20"><name pos:start="16:9" pos:end="16:11">cnt</name> <operator pos:start="16:13" pos:end="16:14">+=</operator> <name pos:start="16:16" pos:end="16:16">x</name> <operator pos:start="16:18" pos:end="16:18">&amp;</operator> <literal type="number" pos:start="16:20" pos:end="16:20">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:16"><expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:9">x</name> <operator pos:start="17:11" pos:end="17:13">&gt;&gt;=</operator> <literal type="number" pos:start="17:15" pos:end="17:15">1</literal></expr>;</expr_stmt> 
    </block_content>}</block></while>
    <return pos:start="19:5" pos:end="19:15">return <expr pos:start="19:12" pos:end="19:14"><name pos:start="19:12" pos:end="19:14">cnt</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="21:1" pos:end="59:1"><type pos:start="21:1" pos:end="21:3"><name pos:start="21:1" pos:end="21:3">int</name></type> <name pos:start="21:5" pos:end="21:8">main</name><parameter_list pos:start="21:9" pos:end="21:10">()</parameter_list> <block pos:start="21:12" pos:end="59:1">{<block_content pos:start="22:5" pos:end="58:13">
    <expr_stmt pos:start="22:5" pos:end="22:35"><expr pos:start="22:5" pos:end="22:34"><call pos:start="22:5" pos:end="22:34"><name pos:start="22:5" pos:end="22:11">freopen</name><argument_list pos:start="22:12" pos:end="22:34">(<argument pos:start="22:13" pos:end="22:21"><expr pos:start="22:13" pos:end="22:21"><literal type="string" pos:start="22:13" pos:end="22:21">"meal.in"</literal></expr></argument>, <argument pos:start="22:24" pos:end="22:26"><expr pos:start="22:24" pos:end="22:26"><literal type="string" pos:start="22:24" pos:end="22:26">"r"</literal></expr></argument>, <argument pos:start="22:29" pos:end="22:33"><expr pos:start="22:29" pos:end="22:33"><name pos:start="22:29" pos:end="22:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><call pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:11">freopen</name><argument_list pos:start="23:12" pos:end="23:36">(<argument pos:start="23:13" pos:end="23:22"><expr pos:start="23:13" pos:end="23:22"><literal type="string" pos:start="23:13" pos:end="23:22">"meal.out"</literal></expr></argument>, <argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><literal type="string" pos:start="23:25" pos:end="23:27">"w"</literal></expr></argument>, <argument pos:start="23:30" pos:end="23:35"><expr pos:start="23:30" pos:end="23:35"><name pos:start="23:30" pos:end="23:35">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="24:5" pos:end="24:20"><decl pos:start="24:5" pos:end="24:15"><type pos:start="24:5" pos:end="24:13"><name pos:start="24:5" pos:end="24:8">long</name> <name pos:start="24:10" pos:end="24:13">long</name></type> <name pos:start="24:15" pos:end="24:15">n</name></decl>,<decl pos:start="24:17" pos:end="24:17"><type ref="prev" pos:start="24:5" pos:end="24:13"/><name pos:start="24:17" pos:end="24:17">m</name></decl>,<decl pos:start="24:19" pos:end="24:19"><type ref="prev" pos:start="24:5" pos:end="24:13"/><name pos:start="24:19" pos:end="24:19">k</name></decl>;</decl_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:7">cin</name> <operator pos:start="25:9" pos:end="25:10">&gt;&gt;</operator> <name pos:start="25:12" pos:end="25:12">n</name> <operator pos:start="25:14" pos:end="25:15">&gt;&gt;</operator> <name pos:start="25:17" pos:end="25:17">m</name> <operator pos:start="25:19" pos:end="25:20">&gt;&gt;</operator> <name pos:start="25:22" pos:end="25:22">k</name></expr>;</expr_stmt>
    <decl_stmt pos:start="26:5" pos:end="26:18"><decl pos:start="26:5" pos:end="26:17"><type pos:start="26:5" pos:end="26:15"><name pos:start="26:5" pos:end="26:15"><name pos:start="26:5" pos:end="26:9">queue</name><argument_list type="generic" pos:start="26:10" pos:end="26:15">&lt;<argument pos:start="26:11" pos:end="26:14"><expr pos:start="26:11" pos:end="26:14"><name pos:start="26:11" pos:end="26:14">node</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="26:17" pos:end="26:17">q</name></decl>;</decl_stmt>
    <for pos:start="27:5" pos:end="31:5">for<control pos:start="27:8" pos:end="27:36">(<init pos:start="27:9" pos:end="27:24"><decl pos:start="27:9" pos:end="27:23"><type pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">long</name> <name pos:start="27:14" pos:end="27:17">long</name></type> <name pos:start="27:19" pos:end="27:19">i</name> <init pos:start="27:21" pos:end="27:23">= <expr pos:start="27:23" pos:end="27:23"><literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr></init></decl>;</init> <condition pos:start="27:26" pos:end="27:31"><expr pos:start="27:26" pos:end="27:30"><name pos:start="27:26" pos:end="27:26">i</name> <operator pos:start="27:28" pos:end="27:28">&lt;</operator> <name pos:start="27:30" pos:end="27:30">n</name></expr>;</condition> <incr pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:33">i</name><operator pos:start="27:34" pos:end="27:35">++</operator></expr></incr>)</control> <block pos:start="27:38" pos:end="31:5">{<block_content pos:start="28:9" pos:end="30:29">
        <expr_stmt pos:start="28:9" pos:end="28:20"><expr pos:start="28:9" pos:end="28:19"><name pos:start="28:9" pos:end="28:11">cin</name> <operator pos:start="28:13" pos:end="28:14">&gt;&gt;</operator> <name pos:start="28:16" pos:end="28:19"><name pos:start="28:16" pos:end="28:16">a</name><index pos:start="28:17" pos:end="28:19">[<expr pos:start="28:18" pos:end="28:18"><name pos:start="28:18" pos:end="28:18">i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:10">dp</name><index pos:start="29:11" pos:end="29:20">[<expr pos:start="29:12" pos:end="29:19"><operator pos:start="29:12" pos:end="29:12">(</operator><literal type="number" pos:start="29:13" pos:end="29:13">1</literal> <operator pos:start="29:15" pos:end="29:16">&lt;&lt;</operator> <name pos:start="29:18" pos:end="29:18">i</name><operator pos:start="29:19" pos:end="29:19">)</operator></expr>]</index></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:24">a</name><index pos:start="29:25" pos:end="29:27">[<expr pos:start="29:26" pos:end="29:26"><name pos:start="29:26" pos:end="29:26">i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="30:9" pos:end="30:29"><expr pos:start="30:9" pos:end="30:28"><call pos:start="30:9" pos:end="30:28"><name pos:start="30:9" pos:end="30:14"><name pos:start="30:9" pos:end="30:9">q</name><operator pos:start="30:10" pos:end="30:10">.</operator><name pos:start="30:11" pos:end="30:14">push</name></name><argument_list pos:start="30:15" pos:end="30:28">(<argument pos:start="30:16" pos:end="30:27"><expr pos:start="30:16" pos:end="30:27"><operator pos:start="30:16" pos:end="30:16">(</operator><name pos:start="30:17" pos:end="30:20">node</name><operator pos:start="30:21" pos:end="30:21">)</operator><block pos:start="30:22" pos:end="30:27">{<expr pos:start="30:23" pos:end="30:23"><name pos:start="30:23" pos:end="30:23">i</name></expr>, <expr pos:start="30:26" pos:end="30:26"><literal type="number" pos:start="30:26" pos:end="30:26">1</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="32:5" pos:end="36:5">for <control pos:start="32:9" pos:end="32:37">(<init pos:start="32:10" pos:end="32:25"><decl pos:start="32:10" pos:end="32:24"><type pos:start="32:10" pos:end="32:18"><name pos:start="32:10" pos:end="32:13">long</name> <name pos:start="32:15" pos:end="32:18">long</name></type> <name pos:start="32:20" pos:end="32:20">i</name> <init pos:start="32:22" pos:end="32:24">= <expr pos:start="32:24" pos:end="32:24"><literal type="number" pos:start="32:24" pos:end="32:24">0</literal></expr></init></decl>;</init> <condition pos:start="32:27" pos:end="32:32"><expr pos:start="32:27" pos:end="32:31"><name pos:start="32:27" pos:end="32:27">i</name> <operator pos:start="32:29" pos:end="32:29">&lt;</operator> <name pos:start="32:31" pos:end="32:31">k</name></expr>;</condition> <incr pos:start="32:34" pos:end="32:36"><expr pos:start="32:34" pos:end="32:36"><name pos:start="32:34" pos:end="32:34">i</name><operator pos:start="32:35" pos:end="32:36">++</operator></expr></incr>)</control> <block pos:start="32:39" pos:end="36:5">{<block_content pos:start="33:9" pos:end="35:28">
        <decl_stmt pos:start="33:9" pos:end="33:24"><decl pos:start="33:9" pos:end="33:19"><type pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:12">long</name> <name pos:start="33:14" pos:end="33:17">long</name></type> <name pos:start="33:19" pos:end="33:19">u</name></decl>,<decl pos:start="33:21" pos:end="33:21"><type ref="prev" pos:start="33:9" pos:end="33:17"/><name pos:start="33:21" pos:end="33:21">v</name></decl>,<decl pos:start="33:23" pos:end="33:23"><type ref="prev" pos:start="33:9" pos:end="33:17"/><name pos:start="33:23" pos:end="33:23">w</name></decl>;</decl_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:27"><expr pos:start="34:9" pos:end="34:26"><name pos:start="34:9" pos:end="34:11">cin</name> <operator pos:start="34:13" pos:end="34:14">&gt;&gt;</operator> <name pos:start="34:16" pos:end="34:16">u</name> <operator pos:start="34:18" pos:end="34:19">&gt;&gt;</operator> <name pos:start="34:21" pos:end="34:21">v</name> <operator pos:start="34:23" pos:end="34:24">&gt;&gt;</operator> <name pos:start="34:26" pos:end="34:26">w</name></expr>;</expr_stmt>
        <expr_stmt pos:start="35:9" pos:end="35:28"><expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:9">g</name><index pos:start="35:10" pos:end="35:16">[<expr pos:start="35:11" pos:end="35:15"><name pos:start="35:11" pos:end="35:11">u</name> <operator pos:start="35:13" pos:end="35:13">-</operator> <literal type="number" pos:start="35:15" pos:end="35:15">1</literal></expr>]</index><index pos:start="35:17" pos:end="35:23">[<expr pos:start="35:18" pos:end="35:22"><name pos:start="35:18" pos:end="35:18">v</name> <operator pos:start="35:20" pos:end="35:20">-</operator> <literal type="number" pos:start="35:22" pos:end="35:22">1</literal></expr>]</index></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:27">w</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <while pos:start="37:5" pos:end="50:5">while <condition pos:start="37:11" pos:end="37:22">(<expr pos:start="37:12" pos:end="37:21"><operator pos:start="37:12" pos:end="37:12">!</operator><call pos:start="37:13" pos:end="37:21"><name pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:13">q</name><operator pos:start="37:14" pos:end="37:14">.</operator><name pos:start="37:15" pos:end="37:19">empty</name></name><argument_list pos:start="37:20" pos:end="37:21">()</argument_list></call></expr>)</condition> <block pos:start="37:24" pos:end="50:5">{<block_content pos:start="38:9" pos:end="49:9">
        <decl_stmt pos:start="38:9" pos:end="38:35"><decl pos:start="38:9" pos:end="38:34"><type pos:start="38:9" pos:end="38:17"><name pos:start="38:9" pos:end="38:12">long</name> <name pos:start="38:14" pos:end="38:17">long</name></type> <name pos:start="38:19" pos:end="38:19">u</name> <init pos:start="38:21" pos:end="38:34">= <expr pos:start="38:23" pos:end="38:34"><call pos:start="38:23" pos:end="38:31"><name pos:start="38:23" pos:end="38:29"><name pos:start="38:23" pos:end="38:23">q</name><operator pos:start="38:24" pos:end="38:24">.</operator><name pos:start="38:25" pos:end="38:29">front</name></name><argument_list pos:start="38:30" pos:end="38:31">()</argument_list></call><operator pos:start="38:32" pos:end="38:32">.</operator><name pos:start="38:33" pos:end="38:34">u1</name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="39:9" pos:end="39:36"><decl pos:start="39:9" pos:end="39:35"><type pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:12">long</name> <name pos:start="39:14" pos:end="39:17">long</name></type> <name pos:start="39:19" pos:end="39:19">l</name> <init pos:start="39:21" pos:end="39:35">= <expr pos:start="39:23" pos:end="39:35"><call pos:start="39:23" pos:end="39:31"><name pos:start="39:23" pos:end="39:29"><name pos:start="39:23" pos:end="39:23">q</name><operator pos:start="39:24" pos:end="39:24">.</operator><name pos:start="39:25" pos:end="39:29">front</name></name><argument_list pos:start="39:30" pos:end="39:31">()</argument_list></call><operator pos:start="39:32" pos:end="39:32">.</operator><name pos:start="39:33" pos:end="39:35">len</name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="40:9" pos:end="40:16"><expr pos:start="40:9" pos:end="40:15"><call pos:start="40:9" pos:end="40:15"><name pos:start="40:9" pos:end="40:13"><name pos:start="40:9" pos:end="40:9">q</name><operator pos:start="40:10" pos:end="40:10">.</operator><name pos:start="40:11" pos:end="40:13">pop</name></name><argument_list pos:start="40:14" pos:end="40:15">()</argument_list></call></expr>;</expr_stmt>
        <for pos:start="41:9" pos:end="49:9">for <control pos:start="41:13" pos:end="41:41">(<init pos:start="41:14" pos:end="41:29"><decl pos:start="41:14" pos:end="41:28"><type pos:start="41:14" pos:end="41:22"><name pos:start="41:14" pos:end="41:17">long</name> <name pos:start="41:19" pos:end="41:22">long</name></type> <name pos:start="41:24" pos:end="41:24">i</name> <init pos:start="41:26" pos:end="41:28">= <expr pos:start="41:28" pos:end="41:28"><literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr></init></decl>;</init> <condition pos:start="41:31" pos:end="41:36"><expr pos:start="41:31" pos:end="41:35"><name pos:start="41:31" pos:end="41:31">i</name> <operator pos:start="41:33" pos:end="41:33">&lt;</operator> <name pos:start="41:35" pos:end="41:35">n</name></expr>;</condition> <incr pos:start="41:38" pos:end="41:40"><expr pos:start="41:38" pos:end="41:40"><name pos:start="41:38" pos:end="41:38">i</name><operator pos:start="41:39" pos:end="41:40">++</operator></expr></incr>)</control> <block pos:start="41:43" pos:end="49:9">{<block_content pos:start="42:13" pos:end="48:37">
            <if_stmt pos:start="42:13" pos:end="42:33"><if pos:start="42:13" pos:end="42:33">if <condition pos:start="42:16" pos:end="42:23">(<expr pos:start="42:17" pos:end="42:22"><name pos:start="42:17" pos:end="42:17">i</name> <operator pos:start="42:19" pos:end="42:20">==</operator> <name pos:start="42:22" pos:end="42:22">u</name></expr>)</condition><block type="pseudo" pos:start="42:25" pos:end="42:33"><block_content pos:start="42:25" pos:end="42:33"> <continue pos:start="42:25" pos:end="42:33">continue;</continue></block_content></block></if></if_stmt>
            <if_stmt pos:start="43:13" pos:end="43:30"><if pos:start="43:13" pos:end="43:30">if <condition pos:start="43:16" pos:end="43:23">(<expr pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:17">l</name> <operator pos:start="43:19" pos:end="43:20">&gt;=</operator> <name pos:start="43:22" pos:end="43:22">m</name></expr>)</condition><block type="pseudo" pos:start="43:25" pos:end="43:30"><block_content pos:start="43:25" pos:end="43:30"> <break pos:start="43:25" pos:end="43:30">break;</break></block_content></block></if></if_stmt>
            <decl_stmt pos:start="44:13" pos:end="44:46"><decl pos:start="44:13" pos:end="44:45"><type pos:start="44:13" pos:end="44:21"><name pos:start="44:13" pos:end="44:16">long</name> <name pos:start="44:18" pos:end="44:21">long</name></type> <name pos:start="44:23" pos:end="44:23">z</name> <init pos:start="44:25" pos:end="44:45">= <expr pos:start="44:27" pos:end="44:45"><operator pos:start="44:27" pos:end="44:27">(</operator><literal type="number" pos:start="44:28" pos:end="44:28">1</literal> <operator pos:start="44:30" pos:end="44:31">&lt;&lt;</operator> <name pos:start="44:33" pos:end="44:33">i</name><operator pos:start="44:34" pos:end="44:34">)</operator> <operator pos:start="44:36" pos:end="44:36">+</operator> <operator pos:start="44:38" pos:end="44:38">(</operator><literal type="number" pos:start="44:39" pos:end="44:39">1</literal> <operator pos:start="44:41" pos:end="44:42">&lt;&lt;</operator> <name pos:start="44:44" pos:end="44:44">u</name><operator pos:start="44:45" pos:end="44:45">)</operator></expr></init></decl>;</decl_stmt> 
            <for pos:start="45:13" pos:end="47:13">for <control pos:start="45:17" pos:end="45:66">(<init pos:start="45:18" pos:end="45:33"><decl pos:start="45:18" pos:end="45:32"><type pos:start="45:18" pos:end="45:26"><name pos:start="45:18" pos:end="45:21">long</name> <name pos:start="45:23" pos:end="45:26">long</name></type> <name pos:start="45:28" pos:end="45:28">j</name> <init pos:start="45:30" pos:end="45:32">= <expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">z</name></expr></init></decl>;</init> <condition pos:start="45:35" pos:end="45:47"><expr pos:start="45:35" pos:end="45:46"><name pos:start="45:35" pos:end="45:35">j</name> <operator pos:start="45:37" pos:end="45:37">&lt;</operator> <operator pos:start="45:39" pos:end="45:39">(</operator><literal type="number" pos:start="45:40" pos:end="45:40">1</literal> <operator pos:start="45:42" pos:end="45:43">&lt;&lt;</operator> <name pos:start="45:45" pos:end="45:45">n</name><operator pos:start="45:46" pos:end="45:46">)</operator></expr>;</condition> <incr pos:start="45:49" pos:end="45:65"><expr pos:start="45:49" pos:end="45:65"><name pos:start="45:49" pos:end="45:49">j</name> <operator pos:start="45:51" pos:end="45:51">=</operator> <operator pos:start="45:53" pos:end="45:53">(</operator><operator pos:start="45:54" pos:end="45:54">(</operator><name pos:start="45:55" pos:end="45:55">j</name> <operator pos:start="45:57" pos:end="45:57">+</operator> <literal type="number" pos:start="45:59" pos:end="45:59">1</literal><operator pos:start="45:60" pos:end="45:60">)</operator> <operator pos:start="45:62" pos:end="45:62">|</operator> <name pos:start="45:64" pos:end="45:64">z</name><operator pos:start="45:65" pos:end="45:65">)</operator></expr></incr>)</control> <block pos:start="45:68" pos:end="47:13">{<block_content pos:start="46:17" pos:end="46:70">
                <expr_stmt pos:start="46:17" pos:end="46:70"><expr pos:start="46:17" pos:end="46:69"><name pos:start="46:17" pos:end="46:21"><name pos:start="46:17" pos:end="46:18">dp</name><index pos:start="46:19" pos:end="46:21">[<expr pos:start="46:20" pos:end="46:20"><name pos:start="46:20" pos:end="46:20">j</name></expr>]</index></name> <operator pos:start="46:23" pos:end="46:23">=</operator> <call pos:start="46:25" pos:end="46:69"><name pos:start="46:25" pos:end="46:27">max</name><argument_list pos:start="46:28" pos:end="46:69">(<argument pos:start="46:29" pos:end="46:33"><expr pos:start="46:29" pos:end="46:33"><name pos:start="46:29" pos:end="46:33"><name pos:start="46:29" pos:end="46:30">dp</name><index pos:start="46:31" pos:end="46:33">[<expr pos:start="46:32" pos:end="46:32"><name pos:start="46:32" pos:end="46:32">j</name></expr>]</index></name></expr></argument>, <argument pos:start="46:36" pos:end="46:68"><expr pos:start="46:36" pos:end="46:68"><name pos:start="46:36" pos:end="46:42"><name pos:start="46:36" pos:end="46:36">g</name><index pos:start="46:37" pos:end="46:39">[<expr pos:start="46:38" pos:end="46:38"><name pos:start="46:38" pos:end="46:38">u</name></expr>]</index><index pos:start="46:40" pos:end="46:42">[<expr pos:start="46:41" pos:end="46:41"><name pos:start="46:41" pos:end="46:41">i</name></expr>]</index></name> <operator pos:start="46:44" pos:end="46:44">+</operator> <name pos:start="46:46" pos:end="46:49"><name pos:start="46:46" pos:end="46:46">a</name><index pos:start="46:47" pos:end="46:49">[<expr pos:start="46:48" pos:end="46:48"><name pos:start="46:48" pos:end="46:48">i</name></expr>]</index></name> <operator pos:start="46:51" pos:end="46:51">+</operator> <name pos:start="46:53" pos:end="46:68"><name pos:start="46:53" pos:end="46:54">dp</name><index pos:start="46:55" pos:end="46:68">[<expr pos:start="46:56" pos:end="46:67"><name pos:start="46:56" pos:end="46:56">j</name> <operator pos:start="46:58" pos:end="46:58">^</operator> <operator pos:start="46:60" pos:end="46:60">(</operator><literal type="number" pos:start="46:61" pos:end="46:61">1</literal> <operator pos:start="46:63" pos:end="46:64">&lt;&lt;</operator> <name pos:start="46:66" pos:end="46:66">i</name><operator pos:start="46:67" pos:end="46:67">)</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="48:13" pos:end="48:37"><expr pos:start="48:13" pos:end="48:36"><call pos:start="48:13" pos:end="48:36"><name pos:start="48:13" pos:end="48:18"><name pos:start="48:13" pos:end="48:13">q</name><operator pos:start="48:14" pos:end="48:14">.</operator><name pos:start="48:15" pos:end="48:18">push</name></name><argument_list pos:start="48:19" pos:end="48:36">(<argument pos:start="48:20" pos:end="48:35"><expr pos:start="48:20" pos:end="48:35"><operator pos:start="48:20" pos:end="48:20">(</operator><name pos:start="48:21" pos:end="48:24">node</name><operator pos:start="48:25" pos:end="48:25">)</operator><block pos:start="48:26" pos:end="48:35">{<expr pos:start="48:27" pos:end="48:27"><name pos:start="48:27" pos:end="48:27">i</name></expr>, <expr pos:start="48:30" pos:end="48:34"><name pos:start="48:30" pos:end="48:30">l</name> <operator pos:start="48:32" pos:end="48:32">+</operator> <literal type="number" pos:start="48:34" pos:end="48:34">1</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></while>
    <decl_stmt pos:start="51:5" pos:end="51:23"><decl pos:start="51:5" pos:end="51:22"><type pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:8">long</name> <name pos:start="51:10" pos:end="51:13">long</name></type> <name pos:start="51:15" pos:end="51:17">ans</name> <init pos:start="51:19" pos:end="51:22">= <expr pos:start="51:21" pos:end="51:22"><operator pos:start="51:21" pos:end="51:21">-</operator><literal type="number" pos:start="51:22" pos:end="51:22">1</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="52:5" pos:end="56:5">for <control pos:start="52:9" pos:end="52:44">(<init pos:start="52:10" pos:end="52:25"><decl pos:start="52:10" pos:end="52:24"><type pos:start="52:10" pos:end="52:18"><name pos:start="52:10" pos:end="52:13">long</name> <name pos:start="52:15" pos:end="52:18">long</name></type> <name pos:start="52:20" pos:end="52:20">i</name> <init pos:start="52:22" pos:end="52:24">= <expr pos:start="52:24" pos:end="52:24"><literal type="number" pos:start="52:24" pos:end="52:24">0</literal></expr></init></decl>;</init> <condition pos:start="52:27" pos:end="52:39"><expr pos:start="52:27" pos:end="52:38"><name pos:start="52:27" pos:end="52:27">i</name> <operator pos:start="52:29" pos:end="52:29">&lt;</operator> <operator pos:start="52:31" pos:end="52:31">(</operator><literal type="number" pos:start="52:32" pos:end="52:32">1</literal> <operator pos:start="52:34" pos:end="52:35">&lt;&lt;</operator> <name pos:start="52:37" pos:end="52:37">n</name><operator pos:start="52:38" pos:end="52:38">)</operator></expr>;</condition> <incr pos:start="52:41" pos:end="52:43"><expr pos:start="52:41" pos:end="52:43"><name pos:start="52:41" pos:end="52:41">i</name><operator pos:start="52:42" pos:end="52:43">++</operator></expr></incr>)</control> <block pos:start="52:46" pos:end="56:5">{<block_content pos:start="53:9" pos:end="55:9">
        <if_stmt pos:start="53:9" pos:end="55:9"><if pos:start="53:9" pos:end="55:9">if <condition pos:start="53:12" pos:end="53:26">(<expr pos:start="53:13" pos:end="53:25"><call pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:17">count</name><argument_list pos:start="53:18" pos:end="53:20">(<argument pos:start="53:19" pos:end="53:19"><expr pos:start="53:19" pos:end="53:19"><name pos:start="53:19" pos:end="53:19">i</name></expr></argument>)</argument_list></call> <operator pos:start="53:22" pos:end="53:23">==</operator> <name pos:start="53:25" pos:end="53:25">m</name></expr>)</condition> <block pos:start="53:28" pos:end="55:9">{<block_content pos:start="54:13" pos:end="54:34">
            <expr_stmt pos:start="54:13" pos:end="54:34"><expr pos:start="54:13" pos:end="54:33"><name pos:start="54:13" pos:end="54:15">ans</name> <operator pos:start="54:17" pos:end="54:17">=</operator> <call pos:start="54:19" pos:end="54:33"><name pos:start="54:19" pos:end="54:21">max</name><argument_list pos:start="54:22" pos:end="54:33">(<argument pos:start="54:23" pos:end="54:25"><expr pos:start="54:23" pos:end="54:25"><name pos:start="54:23" pos:end="54:25">ans</name></expr></argument>, <argument pos:start="54:28" pos:end="54:32"><expr pos:start="54:28" pos:end="54:32"><name pos:start="54:28" pos:end="54:32"><name pos:start="54:28" pos:end="54:29">dp</name><index pos:start="54:30" pos:end="54:32">[<expr pos:start="54:31" pos:end="54:31"><name pos:start="54:31" pos:end="54:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="57:5" pos:end="57:23"><expr pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:8">cout</name> <operator pos:start="57:10" pos:end="57:11">&lt;&lt;</operator><name pos:start="57:12" pos:end="57:14">ans</name> <operator pos:start="57:16" pos:end="57:17">&lt;&lt;</operator> <name pos:start="57:19" pos:end="57:22">endl</name></expr>;</expr_stmt>
    <return pos:start="58:5" pos:end="58:13">return <expr pos:start="58:12" pos:end="58:12"><literal type="number" pos:start="58:12" pos:end="58:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
