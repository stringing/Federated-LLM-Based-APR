<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/616/616.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:6"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">t</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:8"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">m</name></decl>,<decl pos:start="4:7" pos:end="4:7"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:7" pos:end="4:7">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:17"><decl pos:start="5:1" pos:end="5:16"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">char</name></type> <name pos:start="5:6" pos:end="5:16"><name pos:start="5:6" pos:end="5:6">p</name><index pos:start="5:7" pos:end="5:11">[<expr pos:start="5:8" pos:end="5:10"><literal type="number" pos:start="5:8" pos:end="5:10">105</literal></expr>]</index><index pos:start="5:12" pos:end="5:16">[<expr pos:start="5:13" pos:end="5:15"><literal type="number" pos:start="5:13" pos:end="5:15">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:21"><decl pos:start="6:1" pos:end="6:20"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:20"><name pos:start="6:5" pos:end="6:7">vis</name><index pos:start="6:8" pos:end="6:12">[<expr pos:start="6:9" pos:end="6:11"><literal type="number" pos:start="6:9" pos:end="6:11">105</literal></expr>]</index><index pos:start="6:13" pos:end="6:17">[<expr pos:start="6:14" pos:end="6:16"><literal type="number" pos:start="6:14" pos:end="6:16">105</literal></expr>]</index><index pos:start="6:18" pos:end="6:20">[<expr pos:start="6:19" pos:end="6:19"><literal type="number" pos:start="6:19" pos:end="6:19">4</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt pos:start="7:1" pos:end="7:18"><decl pos:start="7:1" pos:end="7:5"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:5">k</name></decl>,<decl pos:start="7:7" pos:end="7:8"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:7" pos:end="7:8">x1</name></decl>,<decl pos:start="7:10" pos:end="7:11"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:10" pos:end="7:11">x2</name></decl>,<decl pos:start="7:13" pos:end="7:14"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:13" pos:end="7:14">yo</name></decl>,<decl pos:start="7:16" pos:end="7:17"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:16" pos:end="7:17">yt</name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:12"><decl pos:start="8:1" pos:end="8:11"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:7">num</name> <init pos:start="8:9" pos:end="8:11">= <expr pos:start="8:11" pos:end="8:11"><literal type="number" pos:start="8:11" pos:end="8:11">0</literal></expr></init></decl>;</decl_stmt>
<struct pos:start="9:1" pos:end="15:2">struct <name pos:start="9:8" pos:end="9:11">node</name><block pos:start="9:12" pos:end="15:1">{<public type="default" pos:start="10:5" pos:end="14:5">
    <decl_stmt pos:start="10:5" pos:end="10:16"><decl pos:start="10:5" pos:end="10:9"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">x</name></decl>,<decl pos:start="10:11" pos:end="10:11"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:11" pos:end="10:11">y</name></decl>,<decl pos:start="10:13" pos:end="10:13"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:13" pos:end="10:13">f</name></decl>,<decl pos:start="10:15" pos:end="10:15"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:15" pos:end="10:15">p</name></decl>;</decl_stmt>
    
    <function type="operator" pos:start="12:5" pos:end="14:5"><type pos:start="12:5" pos:end="12:8"><name pos:start="12:5" pos:end="12:8">bool</name></type> <name pos:start="12:10" pos:end="12:19">operator <name pos:start="12:19" pos:end="12:19">&lt;</name></name> <parameter_list pos:start="12:21" pos:end="12:37">(<parameter pos:start="12:22" pos:end="12:36"><decl pos:start="12:22" pos:end="12:36"><type pos:start="12:22" pos:end="12:33"><specifier pos:start="12:22" pos:end="12:26">const</specifier> <name pos:start="12:28" pos:end="12:31">node</name> <modifier pos:start="12:33" pos:end="12:33">&amp;</modifier></type><name pos:start="12:34" pos:end="12:36">que</name></decl></parameter>)</parameter_list> <specifier pos:start="12:39" pos:end="12:43">const</specifier> <block pos:start="12:45" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:25">
        <return pos:start="13:9" pos:end="13:25">return <expr pos:start="13:16" pos:end="13:24"><name pos:start="13:16" pos:end="13:16">p</name> <operator pos:start="13:18" pos:end="13:18">&gt;</operator> <name pos:start="13:20" pos:end="13:24"><name pos:start="13:20" pos:end="13:22">que</name><operator pos:start="13:23" pos:end="13:23">.</operator><name pos:start="13:24" pos:end="13:24">p</name></name></expr>;</return>
    </block_content>}</block></function>
</public>}</block>;</struct>
<decl_stmt pos:start="16:1" pos:end="16:25"><decl pos:start="16:1" pos:end="16:24"><type pos:start="16:1" pos:end="16:20"><name pos:start="16:1" pos:end="16:20"><name pos:start="16:1" pos:end="16:14">priority_queue</name><argument_list type="generic" pos:start="16:15" pos:end="16:20">&lt;<argument pos:start="16:16" pos:end="16:19"><expr pos:start="16:16" pos:end="16:19"><name pos:start="16:16" pos:end="16:19">node</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="16:22" pos:end="16:24">que</name></decl>;</decl_stmt>
<decl_stmt pos:start="17:1" pos:end="17:9"><decl pos:start="17:1" pos:end="17:8"><type pos:start="17:1" pos:end="17:4"><name pos:start="17:1" pos:end="17:4">node</name></type> <name pos:start="17:6" pos:end="17:8">cur</name></decl>;</decl_stmt>
<decl_stmt pos:start="18:1" pos:end="18:7"><decl pos:start="18:1" pos:end="18:6"><type pos:start="18:1" pos:end="18:4"><name pos:start="18:1" pos:end="18:4">node</name></type> <name pos:start="18:6" pos:end="18:6">q</name></decl>;</decl_stmt>
<function pos:start="19:1" pos:end="50:1"><type pos:start="19:1" pos:end="19:4"><name pos:start="19:1" pos:end="19:4">void</name></type> <name pos:start="19:6" pos:end="19:8">bfs</name><parameter_list pos:start="19:9" pos:end="19:10">()</parameter_list><block pos:start="19:11" pos:end="50:1">{<block_content pos:start="21:5" pos:end="49:10">
    
    <if_stmt pos:start="21:5" pos:end="26:5"><if pos:start="21:5" pos:end="24:5">if<condition pos:start="21:7" pos:end="21:20">(<expr pos:start="21:8" pos:end="21:19"><operator pos:start="21:8" pos:end="21:8">!</operator><call pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:11">que</name><operator pos:start="21:12" pos:end="21:12">.</operator><name pos:start="21:13" pos:end="21:17">empty</name></name><argument_list pos:start="21:18" pos:end="21:19">()</argument_list></call></expr>)</condition><block pos:start="21:21" pos:end="24:5">{<block_content pos:start="22:9" pos:end="23:18">
        <expr_stmt pos:start="22:9" pos:end="22:28"><expr pos:start="22:9" pos:end="22:27"><name pos:start="22:9" pos:end="22:13"><name pos:start="22:9" pos:end="22:11">cur</name><operator pos:start="22:12" pos:end="22:12">.</operator><name pos:start="22:13" pos:end="22:13">p</name></name> <operator pos:start="22:15" pos:end="22:15">=</operator> <call pos:start="22:17" pos:end="22:25"><name pos:start="22:17" pos:end="22:23"><name pos:start="22:17" pos:end="22:19">que</name><operator pos:start="22:20" pos:end="22:20">.</operator><name pos:start="22:21" pos:end="22:23">top</name></name><argument_list pos:start="22:24" pos:end="22:25">()</argument_list></call><operator pos:start="22:26" pos:end="22:26">.</operator><name pos:start="22:27" pos:end="22:27">p</name></expr>;</expr_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><call pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">que</name><operator pos:start="23:12" pos:end="23:12">.</operator><name pos:start="23:13" pos:end="23:15">pop</name></name><argument_list pos:start="23:16" pos:end="23:17">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="24:7" pos:end="26:5">else <block pos:start="24:12" pos:end="26:5">{<block_content pos:start="25:9" pos:end="25:15">
        <return pos:start="25:9" pos:end="25:15">return;</return>
    </block_content>}</block></else></if_stmt>
    <if_stmt pos:start="27:5" pos:end="30:5"><if pos:start="27:5" pos:end="30:5">if<condition pos:start="27:7" pos:end="27:34">(<expr pos:start="27:8" pos:end="27:33"><name pos:start="27:8" pos:end="27:12"><name pos:start="27:8" pos:end="27:10">cur</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:12">x</name></name> <operator pos:start="27:14" pos:end="27:15">==</operator> <name pos:start="27:17" pos:end="27:18">x2</name> <operator pos:start="27:20" pos:end="27:21">&amp;&amp;</operator> <name pos:start="27:23" pos:end="27:27"><name pos:start="27:23" pos:end="27:25">cur</name><operator pos:start="27:26" pos:end="27:26">.</operator><name pos:start="27:27" pos:end="27:27">y</name></name> <operator pos:start="27:29" pos:end="27:30">==</operator> <name pos:start="27:32" pos:end="27:33">yt</name></expr>)</condition><block pos:start="27:35" pos:end="30:5">{<block_content pos:start="28:9" pos:end="29:14">
        <expr_stmt pos:start="28:9" pos:end="28:30"><expr pos:start="28:9" pos:end="28:29"><name pos:start="28:9" pos:end="28:12">cout</name> <operator pos:start="28:14" pos:end="28:15">&lt;&lt;</operator> <literal type="string" pos:start="28:17" pos:end="28:21">"yes"</literal> <operator pos:start="28:23" pos:end="28:24">&lt;&lt;</operator> <name pos:start="28:26" pos:end="28:29">endl</name></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:14"><expr pos:start="29:9" pos:end="29:13"><name pos:start="29:9" pos:end="29:11">num</name><operator pos:start="29:12" pos:end="29:13">++</operator></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <for pos:start="31:5" pos:end="48:5">for<control pos:start="31:8" pos:end="31:30">(<init pos:start="31:9" pos:end="31:18"><decl pos:start="31:9" pos:end="31:17"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name> <init pos:start="31:15" pos:end="31:17">= <expr pos:start="31:17" pos:end="31:17"><literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr></init></decl>;</init> <condition pos:start="31:20" pos:end="31:25"><expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:20">i</name> <operator pos:start="31:22" pos:end="31:22">&lt;</operator> <literal type="number" pos:start="31:24" pos:end="31:24">4</literal></expr>;</condition> <incr pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:27">i</name><operator pos:start="31:28" pos:end="31:29">++</operator></expr></incr>)</control><block pos:start="31:31" pos:end="48:5">{<block_content pos:start="32:9" pos:end="47:9">
        <expr_stmt pos:start="32:9" pos:end="32:26"><expr pos:start="32:9" pos:end="32:25"><name pos:start="32:9" pos:end="32:11"><name pos:start="32:9" pos:end="32:9">q</name><operator pos:start="32:10" pos:end="32:10">.</operator><name pos:start="32:11" pos:end="32:11">x</name></name> <operator pos:start="32:13" pos:end="32:13">=</operator> <call pos:start="32:15" pos:end="32:23"><name pos:start="32:15" pos:end="32:21"><name pos:start="32:15" pos:end="32:17">que</name><operator pos:start="32:18" pos:end="32:18">.</operator><name pos:start="32:19" pos:end="32:21">top</name></name><argument_list pos:start="32:22" pos:end="32:23">()</argument_list></call><operator pos:start="32:24" pos:end="32:24">.</operator><name pos:start="32:25" pos:end="32:25">x</name></expr>;</expr_stmt>
        <expr_stmt pos:start="33:9" pos:end="33:26"><expr pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:9">q</name><operator pos:start="33:10" pos:end="33:10">.</operator><name pos:start="33:11" pos:end="33:11">y</name></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:23"><name pos:start="33:15" pos:end="33:21"><name pos:start="33:15" pos:end="33:17">que</name><operator pos:start="33:18" pos:end="33:18">.</operator><name pos:start="33:19" pos:end="33:21">top</name></name><argument_list pos:start="33:22" pos:end="33:23">()</argument_list></call><operator pos:start="33:24" pos:end="33:24">.</operator><name pos:start="33:25" pos:end="33:25">y</name></expr>;</expr_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:16"><expr pos:start="34:9" pos:end="34:15"><name pos:start="34:9" pos:end="34:11"><name pos:start="34:9" pos:end="34:9">q</name><operator pos:start="34:10" pos:end="34:10">.</operator><name pos:start="34:11" pos:end="34:11">f</name></name> <operator pos:start="34:13" pos:end="34:13">=</operator> <name pos:start="34:15" pos:end="34:15">i</name></expr>;</expr_stmt>
        <expr_stmt pos:start="35:9" pos:end="35:20"><expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:9">q</name><operator pos:start="35:10" pos:end="35:10">.</operator><name pos:start="35:11" pos:end="35:11">p</name></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:19"><name pos:start="35:15" pos:end="35:17">cur</name><operator pos:start="35:18" pos:end="35:18">.</operator><name pos:start="35:19" pos:end="35:19">p</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="36:9" pos:end="47:9"><if pos:start="36:9" pos:end="47:9">if<condition pos:start="36:11" pos:end="36:78">(<expr pos:start="36:12" pos:end="36:77"><literal type="number" pos:start="36:12" pos:end="36:12">1</literal> <operator pos:start="36:14" pos:end="36:15">&lt;=</operator> <name pos:start="36:17" pos:end="36:19"><name pos:start="36:17" pos:end="36:17">q</name><operator pos:start="36:18" pos:end="36:18">.</operator><name pos:start="36:19" pos:end="36:19">x</name></name> <operator pos:start="36:21" pos:end="36:22">&amp;&amp;</operator> <name pos:start="36:24" pos:end="36:26"><name pos:start="36:24" pos:end="36:24">q</name><operator pos:start="36:25" pos:end="36:25">.</operator><name pos:start="36:26" pos:end="36:26">x</name></name> <operator pos:start="36:28" pos:end="36:29">&lt;=</operator> <name pos:start="36:31" pos:end="36:31">m</name> <operator pos:start="36:33" pos:end="36:34">&amp;&amp;</operator> <literal type="number" pos:start="36:36" pos:end="36:36">1</literal> <operator pos:start="36:38" pos:end="36:39">&lt;=</operator> <name pos:start="36:41" pos:end="36:43"><name pos:start="36:41" pos:end="36:41">q</name><operator pos:start="36:42" pos:end="36:42">.</operator><name pos:start="36:43" pos:end="36:43">y</name></name> <operator pos:start="36:45" pos:end="36:46">&amp;&amp;</operator> <name pos:start="36:48" pos:end="36:50"><name pos:start="36:48" pos:end="36:48">q</name><operator pos:start="36:49" pos:end="36:49">.</operator><name pos:start="36:50" pos:end="36:50">y</name></name> <operator pos:start="36:52" pos:end="36:53">&lt;=</operator> <name pos:start="36:55" pos:end="36:55">n</name> <operator pos:start="36:57" pos:end="36:58">&amp;&amp;</operator> <name pos:start="36:60" pos:end="36:70"><name pos:start="36:60" pos:end="36:60">p</name><index pos:start="36:61" pos:end="36:65">[<expr pos:start="36:62" pos:end="36:64"><name pos:start="36:62" pos:end="36:64"><name pos:start="36:62" pos:end="36:62">q</name><operator pos:start="36:63" pos:end="36:63">.</operator><name pos:start="36:64" pos:end="36:64">x</name></name></expr>]</index><index pos:start="36:66" pos:end="36:70">[<expr pos:start="36:67" pos:end="36:69"><name pos:start="36:67" pos:end="36:69"><name pos:start="36:67" pos:end="36:67">q</name><operator pos:start="36:68" pos:end="36:68">.</operator><name pos:start="36:69" pos:end="36:69">y</name></name></expr>]</index></name> <operator pos:start="36:72" pos:end="36:73">!=</operator> <literal type="char" pos:start="36:75" pos:end="36:77">'*'</literal></expr>)</condition><block pos:start="36:79" pos:end="47:9">{<block_content pos:start="37:13" pos:end="46:13">
            <if_stmt pos:start="37:13" pos:end="39:13"><if pos:start="37:13" pos:end="39:13">if<condition pos:start="37:15" pos:end="37:47">(<expr pos:start="37:16" pos:end="37:46"><name pos:start="37:16" pos:end="37:18">num</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal> <operator pos:start="37:24" pos:end="37:25">&amp;&amp;</operator> <call pos:start="37:27" pos:end="37:35"><name pos:start="37:27" pos:end="37:33"><name pos:start="37:27" pos:end="37:29">que</name><operator pos:start="37:30" pos:end="37:30">.</operator><name pos:start="37:31" pos:end="37:33">top</name></name><argument_list pos:start="37:34" pos:end="37:35">()</argument_list></call><operator pos:start="37:36" pos:end="37:36">.</operator><name pos:start="37:37" pos:end="37:37">f</name> <operator pos:start="37:39" pos:end="37:40">!=</operator> <name pos:start="37:42" pos:end="37:46"><name pos:start="37:42" pos:end="37:44">cur</name><operator pos:start="37:45" pos:end="37:45">.</operator><name pos:start="37:46" pos:end="37:46">f</name></name></expr>)</condition><block pos:start="37:48" pos:end="39:13">{<block_content pos:start="38:17" pos:end="38:36">
                <expr_stmt pos:start="38:17" pos:end="38:36"><expr pos:start="38:17" pos:end="38:35"><name pos:start="38:17" pos:end="38:21"><name pos:start="38:17" pos:end="38:19">cur</name><operator pos:start="38:20" pos:end="38:20">.</operator><name pos:start="38:21" pos:end="38:21">f</name></name> <operator pos:start="38:23" pos:end="38:23">=</operator> <call pos:start="38:25" pos:end="38:33"><name pos:start="38:25" pos:end="38:31"><name pos:start="38:25" pos:end="38:27">que</name><operator pos:start="38:28" pos:end="38:28">.</operator><name pos:start="38:29" pos:end="38:31">top</name></name><argument_list pos:start="38:32" pos:end="38:33">()</argument_list></call><operator pos:start="38:34" pos:end="38:34">.</operator><name pos:start="38:35" pos:end="38:35">f</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="40:13" pos:end="42:13"><if pos:start="40:13" pos:end="42:13">if<condition pos:start="40:15" pos:end="40:36">(<expr pos:start="40:16" pos:end="40:35"><call pos:start="40:16" pos:end="40:24"><name pos:start="40:16" pos:end="40:22"><name pos:start="40:16" pos:end="40:18">que</name><operator pos:start="40:19" pos:end="40:19">.</operator><name pos:start="40:20" pos:end="40:22">top</name></name><argument_list pos:start="40:23" pos:end="40:24">()</argument_list></call><operator pos:start="40:25" pos:end="40:25">.</operator><name pos:start="40:26" pos:end="40:26">f</name> <operator pos:start="40:28" pos:end="40:29">!=</operator> <name pos:start="40:31" pos:end="40:35"><name pos:start="40:31" pos:end="40:33">cur</name><operator pos:start="40:34" pos:end="40:34">.</operator><name pos:start="40:35" pos:end="40:35">f</name></name></expr>)</condition><block pos:start="40:37" pos:end="42:13">{<block_content pos:start="41:17" pos:end="41:24">
                <expr_stmt pos:start="41:17" pos:end="41:24"><expr pos:start="41:17" pos:end="41:23"><name pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:19">cur</name><operator pos:start="41:20" pos:end="41:20">.</operator><name pos:start="41:21" pos:end="41:21">p</name></name><operator pos:start="41:22" pos:end="41:23">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="43:13" pos:end="46:13"><if pos:start="43:13" pos:end="46:13">if<condition pos:start="43:15" pos:end="43:51">(<expr pos:start="43:16" pos:end="43:50"><name pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:18">cur</name><operator pos:start="43:19" pos:end="43:19">.</operator><name pos:start="43:20" pos:end="43:20">p</name></name> <operator pos:start="43:22" pos:end="43:23">&lt;=</operator> <name pos:start="43:25" pos:end="43:25">k</name> <operator pos:start="43:27" pos:end="43:28">&amp;&amp;</operator> <operator pos:start="43:30" pos:end="43:30">!</operator><name pos:start="43:31" pos:end="43:50"><name pos:start="43:31" pos:end="43:33">vis</name><index pos:start="43:34" pos:end="43:40">[<expr pos:start="43:35" pos:end="43:39"><name pos:start="43:35" pos:end="43:39"><name pos:start="43:35" pos:end="43:37">cur</name><operator pos:start="43:38" pos:end="43:38">.</operator><name pos:start="43:39" pos:end="43:39">x</name></name></expr>]</index><index pos:start="43:41" pos:end="43:47">[<expr pos:start="43:42" pos:end="43:46"><name pos:start="43:42" pos:end="43:46"><name pos:start="43:42" pos:end="43:44">cur</name><operator pos:start="43:45" pos:end="43:45">.</operator><name pos:start="43:46" pos:end="43:46">y</name></name></expr>]</index><index pos:start="43:48" pos:end="43:50">[<expr pos:start="43:49" pos:end="43:49"><name pos:start="43:49" pos:end="43:49">i</name></expr>]</index></name></expr>)</condition><block pos:start="43:52" pos:end="46:13">{<block_content pos:start="44:17" pos:end="45:44">
                <expr_stmt pos:start="44:17" pos:end="44:30"><expr pos:start="44:17" pos:end="44:29"><call pos:start="44:17" pos:end="44:29"><name pos:start="44:17" pos:end="44:24"><name pos:start="44:17" pos:end="44:19">que</name><operator pos:start="44:20" pos:end="44:20">.</operator><name pos:start="44:21" pos:end="44:24">push</name></name><argument_list pos:start="44:25" pos:end="44:29">(<argument pos:start="44:26" pos:end="44:28"><expr pos:start="44:26" pos:end="44:28"><name pos:start="44:26" pos:end="44:28">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="45:17" pos:end="45:44"><expr pos:start="45:17" pos:end="45:43"><name pos:start="45:17" pos:end="45:36"><name pos:start="45:17" pos:end="45:19">vis</name><index pos:start="45:20" pos:end="45:26">[<expr pos:start="45:21" pos:end="45:25"><name pos:start="45:21" pos:end="45:25"><name pos:start="45:21" pos:end="45:23">cur</name><operator pos:start="45:24" pos:end="45:24">.</operator><name pos:start="45:25" pos:end="45:25">x</name></name></expr>]</index><index pos:start="45:27" pos:end="45:33">[<expr pos:start="45:28" pos:end="45:32"><name pos:start="45:28" pos:end="45:32"><name pos:start="45:28" pos:end="45:30">cur</name><operator pos:start="45:31" pos:end="45:31">.</operator><name pos:start="45:32" pos:end="45:32">y</name></name></expr>]</index><index pos:start="45:34" pos:end="45:36">[<expr pos:start="45:35" pos:end="45:35"><name pos:start="45:35" pos:end="45:35">i</name></expr>]</index></name> <operator pos:start="45:38" pos:end="45:38">=</operator> <literal type="boolean" pos:start="45:40" pos:end="45:43">true</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="49:5" pos:end="49:10"><expr pos:start="49:5" pos:end="49:9"><call pos:start="49:5" pos:end="49:9"><name pos:start="49:5" pos:end="49:7">bfs</name><argument_list pos:start="49:8" pos:end="49:9">()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="51:1" pos:end="86:1"><type pos:start="51:1" pos:end="51:3"><name pos:start="51:1" pos:end="51:3">int</name></type> <name pos:start="51:5" pos:end="51:8">main</name><parameter_list pos:start="51:9" pos:end="51:10">()</parameter_list><block pos:start="51:11" pos:end="86:1">{<block_content pos:start="52:5" pos:end="85:13">
    <expr_stmt pos:start="52:5" pos:end="52:33"><expr pos:start="52:5" pos:end="52:32"><call pos:start="52:5" pos:end="52:32"><name pos:start="52:5" pos:end="52:11">freopen</name><argument_list pos:start="52:12" pos:end="52:32">(<argument pos:start="52:13" pos:end="52:21"><expr pos:start="52:13" pos:end="52:21"><literal type="string" pos:start="52:13" pos:end="52:21">"maze.in"</literal></expr></argument>,<argument pos:start="52:23" pos:end="52:25"><expr pos:start="52:23" pos:end="52:25"><literal type="string" pos:start="52:23" pos:end="52:25">"r"</literal></expr></argument>,<argument pos:start="52:27" pos:end="52:31"><expr pos:start="52:27" pos:end="52:31"><name pos:start="52:27" pos:end="52:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="53:5" pos:end="53:35"><expr pos:start="53:5" pos:end="53:34"><call pos:start="53:5" pos:end="53:34"><name pos:start="53:5" pos:end="53:11">freopen</name><argument_list pos:start="53:12" pos:end="53:34">(<argument pos:start="53:13" pos:end="53:22"><expr pos:start="53:13" pos:end="53:22"><literal type="string" pos:start="53:13" pos:end="53:22">"maze.out"</literal></expr></argument>,<argument pos:start="53:24" pos:end="53:26"><expr pos:start="53:24" pos:end="53:26"><literal type="string" pos:start="53:24" pos:end="53:26">"w"</literal></expr></argument>,<argument pos:start="53:28" pos:end="53:33"><expr pos:start="53:28" pos:end="53:33"><name pos:start="53:28" pos:end="53:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="54:5" pos:end="54:13"><expr pos:start="54:5" pos:end="54:12"><name pos:start="54:5" pos:end="54:7">cin</name> <operator pos:start="54:9" pos:end="54:10">&gt;&gt;</operator> <name pos:start="54:12" pos:end="54:12">t</name></expr>;</expr_stmt>
    <for pos:start="55:5" pos:end="84:5">for<control pos:start="55:8" pos:end="55:31">(<init pos:start="55:9" pos:end="55:18"><decl pos:start="55:9" pos:end="55:17"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:13">a</name> <init pos:start="55:15" pos:end="55:17">= <expr pos:start="55:17" pos:end="55:17"><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr></init></decl>;</init> <condition pos:start="55:20" pos:end="55:26"><expr pos:start="55:20" pos:end="55:25"><name pos:start="55:20" pos:end="55:20">a</name> <operator pos:start="55:22" pos:end="55:23">&lt;=</operator> <name pos:start="55:25" pos:end="55:25">t</name></expr>;</condition> <incr pos:start="55:28" pos:end="55:30"><expr pos:start="55:28" pos:end="55:30"><name pos:start="55:28" pos:end="55:28">a</name><operator pos:start="55:29" pos:end="55:30">++</operator></expr></incr>)</control><block pos:start="55:32" pos:end="84:5">{<block_content pos:start="56:9" pos:end="83:9">
        <expr_stmt pos:start="56:9" pos:end="56:30"><expr pos:start="56:9" pos:end="56:29"><call pos:start="56:9" pos:end="56:29"><name pos:start="56:9" pos:end="56:14">memset</name><argument_list pos:start="56:15" pos:end="56:29">(<argument pos:start="56:16" pos:end="56:16"><expr pos:start="56:16" pos:end="56:16"><name pos:start="56:16" pos:end="56:16">p</name></expr></argument>,<argument pos:start="56:18" pos:end="56:18"><expr pos:start="56:18" pos:end="56:18"><literal type="number" pos:start="56:18" pos:end="56:18">0</literal></expr></argument>,<argument pos:start="56:20" pos:end="56:28"><expr pos:start="56:20" pos:end="56:28"><sizeof pos:start="56:20" pos:end="56:28">sizeof<argument_list pos:start="56:26" pos:end="56:28">(<argument pos:start="56:27" pos:end="56:27"><expr pos:start="56:27" pos:end="56:27"><name pos:start="56:27" pos:end="56:27">p</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="57:9" pos:end="57:14"><expr pos:start="57:9" pos:end="57:13"><name pos:start="57:9" pos:end="57:9">m</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <literal type="number" pos:start="57:13" pos:end="57:13">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="58:9" pos:end="58:14"><expr pos:start="58:9" pos:end="58:13"><name pos:start="58:9" pos:end="58:9">n</name> <operator pos:start="58:11" pos:end="58:11">=</operator> <literal type="number" pos:start="58:13" pos:end="58:13">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:11">cin</name> <operator pos:start="59:13" pos:end="59:14">&gt;&gt;</operator> <name pos:start="59:16" pos:end="59:16">m</name> <operator pos:start="59:18" pos:end="59:19">&gt;&gt;</operator> <name pos:start="59:21" pos:end="59:21">n</name></expr>;</expr_stmt>
        <for pos:start="60:9" pos:end="64:9">for<control pos:start="60:12" pos:end="60:35">(<init pos:start="60:13" pos:end="60:22"><decl pos:start="60:13" pos:end="60:21"><type pos:start="60:13" pos:end="60:15"><name pos:start="60:13" pos:end="60:15">int</name></type> <name pos:start="60:17" pos:end="60:17">b</name> <init pos:start="60:19" pos:end="60:21">= <expr pos:start="60:21" pos:end="60:21"><literal type="number" pos:start="60:21" pos:end="60:21">1</literal></expr></init></decl>;</init> <condition pos:start="60:24" pos:end="60:30"><expr pos:start="60:24" pos:end="60:29"><name pos:start="60:24" pos:end="60:24">b</name> <operator pos:start="60:26" pos:end="60:27">&lt;=</operator> <name pos:start="60:29" pos:end="60:29">m</name></expr>;</condition> <incr pos:start="60:32" pos:end="60:34"><expr pos:start="60:32" pos:end="60:34"><name pos:start="60:32" pos:end="60:32">b</name><operator pos:start="60:33" pos:end="60:34">++</operator></expr></incr>)</control><block pos:start="60:36" pos:end="64:9">{<block_content pos:start="61:13" pos:end="63:13">
            <for pos:start="61:13" pos:end="63:13">for<control pos:start="61:16" pos:end="61:39">(<init pos:start="61:17" pos:end="61:26"><decl pos:start="61:17" pos:end="61:25"><type pos:start="61:17" pos:end="61:19"><name pos:start="61:17" pos:end="61:19">int</name></type> <name pos:start="61:21" pos:end="61:21">c</name> <init pos:start="61:23" pos:end="61:25">= <expr pos:start="61:25" pos:end="61:25"><literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr></init></decl>;</init> <condition pos:start="61:28" pos:end="61:34"><expr pos:start="61:28" pos:end="61:33"><name pos:start="61:28" pos:end="61:28">c</name> <operator pos:start="61:30" pos:end="61:31">&lt;=</operator> <name pos:start="61:33" pos:end="61:33">n</name></expr>;</condition> <incr pos:start="61:36" pos:end="61:38"><expr pos:start="61:36" pos:end="61:38"><name pos:start="61:36" pos:end="61:36">c</name><operator pos:start="61:37" pos:end="61:38">++</operator></expr></incr>)</control><block pos:start="61:40" pos:end="63:13">{<block_content pos:start="62:17" pos:end="62:31">
                <expr_stmt pos:start="62:17" pos:end="62:31"><expr pos:start="62:17" pos:end="62:30"><name pos:start="62:17" pos:end="62:19">cin</name> <operator pos:start="62:21" pos:end="62:22">&gt;&gt;</operator> <name pos:start="62:24" pos:end="62:30"><name pos:start="62:24" pos:end="62:24">p</name><index pos:start="62:25" pos:end="62:27">[<expr pos:start="62:26" pos:end="62:26"><name pos:start="62:26" pos:end="62:26">b</name></expr>]</index><index pos:start="62:28" pos:end="62:30">[<expr pos:start="62:29" pos:end="62:29"><name pos:start="62:29" pos:end="62:29">c</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>
        <expr_stmt pos:start="65:9" pos:end="65:14"><expr pos:start="65:9" pos:end="65:13"><name pos:start="65:9" pos:end="65:9">k</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <literal type="number" pos:start="65:13" pos:end="65:13">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="66:9" pos:end="66:15"><expr pos:start="66:9" pos:end="66:14"><name pos:start="66:9" pos:end="66:10">x1</name> <operator pos:start="66:12" pos:end="66:12">=</operator> <literal type="number" pos:start="66:14" pos:end="66:14">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="67:9" pos:end="67:15"><expr pos:start="67:9" pos:end="67:14"><name pos:start="67:9" pos:end="67:10">x2</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="68:9" pos:end="68:15"><expr pos:start="68:9" pos:end="68:14"><name pos:start="68:9" pos:end="68:10">yo</name> <operator pos:start="68:12" pos:end="68:12">=</operator> <literal type="number" pos:start="68:14" pos:end="68:14">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="69:9" pos:end="69:15"><expr pos:start="69:9" pos:end="69:14"><name pos:start="69:9" pos:end="69:10">yt</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="70:9" pos:end="70:41"><expr pos:start="70:9" pos:end="70:40"><name pos:start="70:9" pos:end="70:11">cin</name> <operator pos:start="70:13" pos:end="70:14">&gt;&gt;</operator> <name pos:start="70:16" pos:end="70:16">k</name> <operator pos:start="70:18" pos:end="70:19">&gt;&gt;</operator> <name pos:start="70:21" pos:end="70:22">x1</name> <operator pos:start="70:24" pos:end="70:25">&gt;&gt;</operator> <name pos:start="70:27" pos:end="70:28">yo</name> <operator pos:start="70:30" pos:end="70:31">&gt;&gt;</operator> <name pos:start="70:33" pos:end="70:34">x2</name> <operator pos:start="70:36" pos:end="70:37">&gt;&gt;</operator> <name pos:start="70:39" pos:end="70:40">yt</name></expr>;</expr_stmt>
        <while pos:start="71:9" pos:end="73:9">while<condition pos:start="71:14" pos:end="71:27">(<expr pos:start="71:15" pos:end="71:26"><operator pos:start="71:15" pos:end="71:15">!</operator><call pos:start="71:16" pos:end="71:26"><name pos:start="71:16" pos:end="71:24"><name pos:start="71:16" pos:end="71:18">que</name><operator pos:start="71:19" pos:end="71:19">.</operator><name pos:start="71:20" pos:end="71:24">empty</name></name><argument_list pos:start="71:25" pos:end="71:26">()</argument_list></call></expr>)</condition><block pos:start="71:28" pos:end="73:9">{<block_content pos:start="72:13" pos:end="72:22">
            <expr_stmt pos:start="72:13" pos:end="72:22"><expr pos:start="72:13" pos:end="72:21"><call pos:start="72:13" pos:end="72:21"><name pos:start="72:13" pos:end="72:19"><name pos:start="72:13" pos:end="72:15">que</name><operator pos:start="72:16" pos:end="72:16">.</operator><name pos:start="72:17" pos:end="72:19">pop</name></name><argument_list pos:start="72:20" pos:end="72:21">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>
        <expr_stmt pos:start="74:9" pos:end="74:19"><expr pos:start="74:9" pos:end="74:18"><name pos:start="74:9" pos:end="74:13"><name pos:start="74:9" pos:end="74:11">cur</name><operator pos:start="74:12" pos:end="74:12">.</operator><name pos:start="74:13" pos:end="74:13">x</name></name> <operator pos:start="74:15" pos:end="74:15">=</operator> <name pos:start="74:17" pos:end="74:18">x1</name></expr>;</expr_stmt>
        <expr_stmt pos:start="75:9" pos:end="75:19"><expr pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:13"><name pos:start="75:9" pos:end="75:11">cur</name><operator pos:start="75:12" pos:end="75:12">.</operator><name pos:start="75:13" pos:end="75:13">y</name></name> <operator pos:start="75:15" pos:end="75:15">=</operator> <name pos:start="75:17" pos:end="75:18">yo</name></expr>;</expr_stmt>
        <expr_stmt pos:start="76:9" pos:end="76:18"><expr pos:start="76:9" pos:end="76:17"><name pos:start="76:9" pos:end="76:13"><name pos:start="76:9" pos:end="76:11">cur</name><operator pos:start="76:12" pos:end="76:12">.</operator><name pos:start="76:13" pos:end="76:13">p</name></name> <operator pos:start="76:15" pos:end="76:15">=</operator> <literal type="number" pos:start="76:17" pos:end="76:17">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="77:9" pos:end="77:18"><expr pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:13"><name pos:start="77:9" pos:end="77:11">cur</name><operator pos:start="77:12" pos:end="77:12">.</operator><name pos:start="77:13" pos:end="77:13">f</name></name> <operator pos:start="77:15" pos:end="77:15">=</operator> <literal type="number" pos:start="77:17" pos:end="77:17">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="78:9" pos:end="78:22"><expr pos:start="78:9" pos:end="78:21"><call pos:start="78:9" pos:end="78:21"><name pos:start="78:9" pos:end="78:16"><name pos:start="78:9" pos:end="78:11">que</name><operator pos:start="78:12" pos:end="78:12">.</operator><name pos:start="78:13" pos:end="78:16">push</name></name><argument_list pos:start="78:17" pos:end="78:21">(<argument pos:start="78:18" pos:end="78:20"><expr pos:start="78:18" pos:end="78:20"><name pos:start="78:18" pos:end="78:20">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="79:9" pos:end="79:14"><expr pos:start="79:9" pos:end="79:13"><call pos:start="79:9" pos:end="79:13"><name pos:start="79:9" pos:end="79:11">bfs</name><argument_list pos:start="79:12" pos:end="79:13">()</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="80:9" pos:end="83:9"><if pos:start="80:9" pos:end="83:9">if<condition pos:start="80:11" pos:end="80:19">(<expr pos:start="80:12" pos:end="80:18"><name pos:start="80:12" pos:end="80:14">num</name> <operator pos:start="80:16" pos:end="80:16">&lt;</operator> <name pos:start="80:18" pos:end="80:18">a</name></expr>)</condition><block pos:start="80:20" pos:end="83:9">{<block_content pos:start="81:13" pos:end="82:18">
            <expr_stmt pos:start="81:13" pos:end="81:33"><expr pos:start="81:13" pos:end="81:32"><name pos:start="81:13" pos:end="81:16">cout</name> <operator pos:start="81:18" pos:end="81:19">&lt;&lt;</operator> <literal type="string" pos:start="81:21" pos:end="81:24">"no"</literal> <operator pos:start="81:26" pos:end="81:27">&lt;&lt;</operator> <name pos:start="81:29" pos:end="81:32">endl</name></expr>;</expr_stmt>
            <expr_stmt pos:start="82:13" pos:end="82:18"><expr pos:start="82:13" pos:end="82:17"><name pos:start="82:13" pos:end="82:15">num</name><operator pos:start="82:16" pos:end="82:17">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
