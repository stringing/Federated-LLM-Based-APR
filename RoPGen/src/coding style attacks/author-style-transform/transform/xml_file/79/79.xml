<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/79/79.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:22"><decl pos:start="5:1" pos:end="5:21"><type pos:start="5:1" pos:end="5:9"><specifier pos:start="5:1" pos:end="5:5">const</specifier> <name pos:start="5:7" pos:end="5:9">int</name></type> <name pos:start="5:11" pos:end="5:14">maxn</name> <init pos:start="5:16" pos:end="5:21">= <expr pos:start="5:18" pos:end="5:21"><literal type="number" pos:start="5:18" pos:end="5:21">1005</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:25"><decl pos:start="6:1" pos:end="6:24"><type pos:start="6:1" pos:end="6:11"><name pos:start="6:1" pos:end="6:11"><name pos:start="6:1" pos:end="6:6">vector</name><argument_list type="generic" pos:start="6:7" pos:end="6:11">&lt;<argument pos:start="6:8" pos:end="6:10"><expr pos:start="6:8" pos:end="6:10"><name pos:start="6:8" pos:end="6:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:13" pos:end="6:24"><name pos:start="6:13" pos:end="6:13">G</name><index pos:start="6:14" pos:end="6:18">[<expr pos:start="6:15" pos:end="6:17"><literal type="number" pos:start="6:15" pos:end="6:17">105</literal></expr>]</index><index pos:start="6:19" pos:end="6:24">[<expr pos:start="6:20" pos:end="6:23"><name pos:start="6:20" pos:end="6:23">maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:17"><decl pos:start="7:1" pos:end="7:16"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:5">F</name><index pos:start="7:6" pos:end="7:10">[<expr pos:start="7:7" pos:end="7:9"><literal type="number" pos:start="7:7" pos:end="7:9">105</literal></expr>]</index><index pos:start="7:11" pos:end="7:16">[<expr pos:start="7:12" pos:end="7:15"><literal type="number" pos:start="7:12" pos:end="7:15">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="8:1" pos:end="38:1"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:8">main</name><parameter_list pos:start="8:9" pos:end="8:10">()</parameter_list> <block pos:start="8:12" pos:end="38:1">{<block_content pos:start="9:5" pos:end="37:13">
    <expr_stmt pos:start="9:5" pos:end="9:30"><expr pos:start="9:5" pos:end="9:29"><call pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:11">freopen</name><argument_list pos:start="9:12" pos:end="9:29">(<argument pos:start="9:13" pos:end="9:18"><expr pos:start="9:13" pos:end="9:18"><literal type="string" pos:start="9:13" pos:end="9:18">"p.in"</literal></expr></argument>,<argument pos:start="9:20" pos:end="9:22"><expr pos:start="9:20" pos:end="9:22"><literal type="string" pos:start="9:20" pos:end="9:22">"r"</literal></expr></argument>,<argument pos:start="9:24" pos:end="9:28"><expr pos:start="9:24" pos:end="9:28"><name pos:start="9:24" pos:end="9:28">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:32"><expr pos:start="10:5" pos:end="10:31"><call pos:start="10:5" pos:end="10:31"><name pos:start="10:5" pos:end="10:11">freopen</name><argument_list pos:start="10:12" pos:end="10:31">(<argument pos:start="10:13" pos:end="10:19"><expr pos:start="10:13" pos:end="10:19"><literal type="string" pos:start="10:13" pos:end="10:19">"p.out"</literal></expr></argument>,<argument pos:start="10:21" pos:end="10:23"><expr pos:start="10:21" pos:end="10:23"><literal type="string" pos:start="10:21" pos:end="10:23">"w"</literal></expr></argument>,<argument pos:start="10:25" pos:end="10:30"><expr pos:start="10:25" pos:end="10:30"><name pos:start="10:25" pos:end="10:30">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">n</name></decl>,<decl pos:start="11:11" pos:end="11:11"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:11" pos:end="11:11">m</name></decl>,<decl pos:start="11:13" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:15">ans</name><init pos:start="11:16" pos:end="11:17">=<expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>,<decl pos:start="11:19" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:20">ii</name><init pos:start="11:21" pos:end="11:22">=<expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:11"><expr pos:start="12:5" pos:end="12:10"><name pos:start="12:5" pos:end="12:7">cin</name><operator pos:start="12:8" pos:end="12:9">&gt;&gt;</operator><name pos:start="12:10" pos:end="12:10">n</name></expr>;</expr_stmt>
    <while pos:start="13:5" pos:end="35:5">while<condition pos:start="13:10" pos:end="13:14">(<expr pos:start="13:11" pos:end="13:13"><name pos:start="13:11" pos:end="13:11">n</name><operator pos:start="13:12" pos:end="13:13">--</operator></expr>)</condition><block pos:start="13:15" pos:end="35:5">{<block_content pos:start="14:9" pos:end="34:13">
        <expr_stmt pos:start="14:9" pos:end="14:15"><expr pos:start="14:9" pos:end="14:14"><name pos:start="14:9" pos:end="14:11">cin</name><operator pos:start="14:12" pos:end="14:13">&gt;&gt;</operator><name pos:start="14:14" pos:end="14:14">m</name></expr>;</expr_stmt>
        <for pos:start="15:9" pos:end="20:9">for<control pos:start="15:12" pos:end="15:30">(<init pos:start="15:13" pos:end="15:20"><decl pos:start="15:13" pos:end="15:19"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:17">i</name><init pos:start="15:18" pos:end="15:19">=<expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr></init></decl>;</init><condition pos:start="15:21" pos:end="15:26"><expr pos:start="15:21" pos:end="15:25"><name pos:start="15:21" pos:end="15:21">i</name><operator pos:start="15:22" pos:end="15:22">&lt;</operator><name pos:start="15:23" pos:end="15:23">m</name><operator pos:start="15:24" pos:end="15:24">-</operator><literal type="number" pos:start="15:25" pos:end="15:25">1</literal></expr>;</condition><incr pos:start="15:27" pos:end="15:29"><expr pos:start="15:27" pos:end="15:29"><name pos:start="15:27" pos:end="15:27">i</name><operator pos:start="15:28" pos:end="15:29">++</operator></expr></incr>)</control><block pos:start="15:31" pos:end="20:9">{<block_content pos:start="16:13" pos:end="19:23">
            <decl_stmt pos:start="16:13" pos:end="16:20"><decl pos:start="16:13" pos:end="16:17"><type pos:start="16:13" pos:end="16:15"><name pos:start="16:13" pos:end="16:15">int</name></type> <name pos:start="16:17" pos:end="16:17">x</name></decl>,<decl pos:start="16:19" pos:end="16:19"><type ref="prev" pos:start="16:13" pos:end="16:15"/><name pos:start="16:19" pos:end="16:19">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:22"><expr pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:15">cin</name><operator pos:start="17:16" pos:end="17:17">&gt;&gt;</operator><name pos:start="17:18" pos:end="17:18">x</name><operator pos:start="17:19" pos:end="17:20">&gt;&gt;</operator><name pos:start="17:21" pos:end="17:21">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:34"><expr pos:start="18:13" pos:end="18:33"><name pos:start="18:13" pos:end="18:20"><name pos:start="18:13" pos:end="18:13">G</name><index pos:start="18:14" pos:end="18:17">[<expr pos:start="18:15" pos:end="18:16"><name pos:start="18:15" pos:end="18:16">ii</name></expr>]</index><index pos:start="18:18" pos:end="18:20">[<expr pos:start="18:19" pos:end="18:19"><name pos:start="18:19" pos:end="18:19">x</name></expr>]</index></name><operator pos:start="18:21" pos:end="18:21">.</operator><call pos:start="18:22" pos:end="18:33"><name pos:start="18:22" pos:end="18:30">push_back</name><argument_list pos:start="18:31" pos:end="18:33">(<argument pos:start="18:32" pos:end="18:32"><expr pos:start="18:32" pos:end="18:32"><name pos:start="18:32" pos:end="18:32">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:23"><expr pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:13">F</name><index pos:start="19:14" pos:end="19:17">[<expr pos:start="19:15" pos:end="19:16"><name pos:start="19:15" pos:end="19:16">ii</name></expr>]</index><index pos:start="19:18" pos:end="19:20">[<expr pos:start="19:19" pos:end="19:19"><name pos:start="19:19" pos:end="19:19">y</name></expr>]</index></name><operator pos:start="19:21" pos:end="19:21">=</operator><name pos:start="19:22" pos:end="19:22">x</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="21:9" pos:end="33:9">for<control pos:start="21:12" pos:end="21:28">(<init pos:start="21:13" pos:end="21:20"><decl pos:start="21:13" pos:end="21:19"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:17">i</name><init pos:start="21:18" pos:end="21:19">=<expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr></init></decl>;</init><condition pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:21">i</name><operator pos:start="21:22" pos:end="21:22">&lt;</operator><name pos:start="21:23" pos:end="21:23">m</name></expr>;</condition><incr pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:25">i</name><operator pos:start="21:26" pos:end="21:27">++</operator></expr></incr>)</control><block pos:start="21:29" pos:end="33:9">{<block_content pos:start="22:13" pos:end="32:13">
            <decl_stmt pos:start="22:13" pos:end="22:27"><decl pos:start="22:13" pos:end="22:26"><type pos:start="22:13" pos:end="22:16"><name pos:start="22:13" pos:end="22:16">bool</name></type> <name pos:start="22:18" pos:end="22:21">flag</name><init pos:start="22:22" pos:end="22:26">=<expr pos:start="22:23" pos:end="22:26"><literal type="boolean" pos:start="22:23" pos:end="22:26">true</literal></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="23:13" pos:end="29:14"><if pos:start="23:13" pos:end="29:14">if<condition pos:start="23:15" pos:end="23:61">(<expr pos:start="23:16" pos:end="23:60"><name pos:start="23:16" pos:end="23:16">i</name><operator pos:start="23:17" pos:end="23:18">!=</operator><literal type="number" pos:start="23:19" pos:end="23:19">0</literal><operator pos:start="23:20" pos:end="23:21">&amp;&amp;</operator><name pos:start="23:22" pos:end="23:29"><name pos:start="23:22" pos:end="23:22">G</name><index pos:start="23:23" pos:end="23:26">[<expr pos:start="23:24" pos:end="23:25"><name pos:start="23:24" pos:end="23:25">ii</name></expr>]</index><index pos:start="23:27" pos:end="23:29">[<expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">i</name></expr>]</index></name><operator pos:start="23:30" pos:end="23:30">.</operator><call pos:start="23:31" pos:end="23:36"><name pos:start="23:31" pos:end="23:34">size</name><argument_list pos:start="23:35" pos:end="23:36">()</argument_list></call><operator pos:start="23:37" pos:end="23:38">&gt;=</operator><name pos:start="23:39" pos:end="23:53"><name pos:start="23:39" pos:end="23:39">G</name><index pos:start="23:40" pos:end="23:43">[<expr pos:start="23:41" pos:end="23:42"><name pos:start="23:41" pos:end="23:42">ii</name></expr>]</index><index pos:start="23:44" pos:end="23:53">[<expr pos:start="23:45" pos:end="23:52"><name pos:start="23:45" pos:end="23:52"><name pos:start="23:45" pos:end="23:45">F</name><index pos:start="23:46" pos:end="23:49">[<expr pos:start="23:47" pos:end="23:48"><name pos:start="23:47" pos:end="23:48">ii</name></expr>]</index><index pos:start="23:50" pos:end="23:52">[<expr pos:start="23:51" pos:end="23:51"><name pos:start="23:51" pos:end="23:51">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="23:54" pos:end="23:54">.</operator><call pos:start="23:55" pos:end="23:60"><name pos:start="23:55" pos:end="23:58">size</name><argument_list pos:start="23:59" pos:end="23:60">()</argument_list></call></expr>)</condition><block pos:start="23:62" pos:end="29:14">{<block_content pos:start="24:18" pos:end="28:18">
                 <for pos:start="24:18" pos:end="28:18">for<control pos:start="24:21" pos:end="24:51">(<init pos:start="24:22" pos:end="24:29"><decl pos:start="24:22" pos:end="24:28"><type pos:start="24:22" pos:end="24:24"><name pos:start="24:22" pos:end="24:24">int</name></type> <name pos:start="24:26" pos:end="24:26">j</name><init pos:start="24:27" pos:end="24:28">=<expr pos:start="24:28" pos:end="24:28"><literal type="number" pos:start="24:28" pos:end="24:28">0</literal></expr></init></decl>;</init><condition pos:start="24:30" pos:end="24:47"><expr pos:start="24:30" pos:end="24:46"><name pos:start="24:30" pos:end="24:30">j</name><operator pos:start="24:31" pos:end="24:31">&lt;</operator><name pos:start="24:32" pos:end="24:39"><name pos:start="24:32" pos:end="24:32">G</name><index pos:start="24:33" pos:end="24:36">[<expr pos:start="24:34" pos:end="24:35"><name pos:start="24:34" pos:end="24:35">ii</name></expr>]</index><index pos:start="24:37" pos:end="24:39">[<expr pos:start="24:38" pos:end="24:38"><name pos:start="24:38" pos:end="24:38">i</name></expr>]</index></name><operator pos:start="24:40" pos:end="24:40">.</operator><call pos:start="24:41" pos:end="24:46"><name pos:start="24:41" pos:end="24:44">size</name><argument_list pos:start="24:45" pos:end="24:46">()</argument_list></call></expr>;</condition><incr pos:start="24:48" pos:end="24:50"><expr pos:start="24:48" pos:end="24:50"><name pos:start="24:48" pos:end="24:48">j</name><operator pos:start="24:49" pos:end="24:50">++</operator></expr></incr>)</control><block pos:start="24:52" pos:end="28:18">{<block_content pos:start="25:22" pos:end="27:22">
                     <if_stmt pos:start="25:22" pos:end="27:22"><if pos:start="25:22" pos:end="27:22">if<condition pos:start="25:24" pos:end="25:66">(<expr pos:start="25:25" pos:end="25:65"><name pos:start="25:25" pos:end="25:42"><name pos:start="25:25" pos:end="25:25">G</name><index pos:start="25:26" pos:end="25:29">[<expr pos:start="25:27" pos:end="25:28"><name pos:start="25:27" pos:end="25:28">ii</name></expr>]</index><index pos:start="25:30" pos:end="25:42">[<expr pos:start="25:31" pos:end="25:41"><name pos:start="25:31" pos:end="25:41"><name pos:start="25:31" pos:end="25:31">G</name><index pos:start="25:32" pos:end="25:35">[<expr pos:start="25:33" pos:end="25:34"><name pos:start="25:33" pos:end="25:34">ii</name></expr>]</index><index pos:start="25:36" pos:end="25:38">[<expr pos:start="25:37" pos:end="25:37"><name pos:start="25:37" pos:end="25:37">i</name></expr>]</index><index pos:start="25:39" pos:end="25:41">[<expr pos:start="25:40" pos:end="25:40"><name pos:start="25:40" pos:end="25:40">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="25:43" pos:end="25:43">.</operator><call pos:start="25:44" pos:end="25:49"><name pos:start="25:44" pos:end="25:47">size</name><argument_list pos:start="25:48" pos:end="25:49">()</argument_list></call><operator pos:start="25:50" pos:end="25:50">&gt;</operator><name pos:start="25:51" pos:end="25:58"><name pos:start="25:51" pos:end="25:51">G</name><index pos:start="25:52" pos:end="25:55">[<expr pos:start="25:53" pos:end="25:54"><name pos:start="25:53" pos:end="25:54">ii</name></expr>]</index><index pos:start="25:56" pos:end="25:58">[<expr pos:start="25:57" pos:end="25:57"><name pos:start="25:57" pos:end="25:57">i</name></expr>]</index></name><operator pos:start="25:59" pos:end="25:59">.</operator><call pos:start="25:60" pos:end="25:65"><name pos:start="25:60" pos:end="25:63">size</name><argument_list pos:start="25:64" pos:end="25:65">()</argument_list></call></expr>)</condition><block pos:start="25:67" pos:end="27:22">{<block_content pos:start="26:26" pos:end="26:36">
                         <expr_stmt pos:start="26:26" pos:end="26:36"><expr pos:start="26:26" pos:end="26:35"><name pos:start="26:26" pos:end="26:29">flag</name><operator pos:start="26:30" pos:end="26:30">=</operator><literal type="boolean" pos:start="26:31" pos:end="26:35">false</literal></expr>;</expr_stmt>
                     </block_content>}</block></if></if_stmt>
                 </block_content>}</block></for>
             </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="30:13" pos:end="32:13"><if pos:start="30:13" pos:end="32:13">if<condition pos:start="30:15" pos:end="30:20">(<expr pos:start="30:16" pos:end="30:19"><name pos:start="30:16" pos:end="30:19">flag</name></expr>)</condition><block pos:start="30:21" pos:end="32:13">{<block_content pos:start="31:17" pos:end="31:22">
                <expr_stmt pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:19">ans</name><operator pos:start="31:20" pos:end="31:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="34:9" pos:end="34:13"><expr pos:start="34:9" pos:end="34:12"><name pos:start="34:9" pos:end="34:10">ii</name><operator pos:start="34:11" pos:end="34:12">++</operator></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="36:5" pos:end="36:20"><expr pos:start="36:5" pos:end="36:19"><name pos:start="36:5" pos:end="36:8">cout</name><operator pos:start="36:9" pos:end="36:10">&lt;&lt;</operator><name pos:start="36:11" pos:end="36:13">ans</name><operator pos:start="36:14" pos:end="36:15">&lt;&lt;</operator><name pos:start="36:16" pos:end="36:19">endl</name></expr>;</expr_stmt>
    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
