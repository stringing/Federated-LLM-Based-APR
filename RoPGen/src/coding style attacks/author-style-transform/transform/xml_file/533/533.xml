<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/533/533.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:20">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>

<function pos:start="6:1" pos:end="22:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list>
<block pos:start="7:1" pos:end="22:1">{<block_content pos:start="8:5" pos:end="21:13">
    <decl_stmt pos:start="8:5" pos:end="8:13"><decl pos:start="8:5" pos:end="8:12"><type pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:10">string</name></type> <name pos:start="8:12" pos:end="8:12">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:19"><expr pos:start="9:5" pos:end="9:18"><call pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:11">getline</name><argument_list pos:start="9:12" pos:end="9:18">(<argument pos:start="9:13" pos:end="9:15"><expr pos:start="9:13" pos:end="9:15"><name pos:start="9:13" pos:end="9:15">cin</name></expr></argument>,<argument pos:start="9:17" pos:end="9:17"><expr pos:start="9:17" pos:end="9:17"><name pos:start="9:17" pos:end="9:17">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:30"><decl pos:start="10:5" pos:end="10:13"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">l</name> <init pos:start="10:11" pos:end="10:13">= <expr pos:start="10:13" pos:end="10:13"><literal type="number" pos:start="10:13" pos:end="10:13">0</literal></expr></init></decl>,<decl pos:start="10:15" pos:end="10:19"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:15" pos:end="10:15">r</name> <init pos:start="10:17" pos:end="10:19">= <expr pos:start="10:19" pos:end="10:19"><literal type="number" pos:start="10:19" pos:end="10:19">0</literal></expr></init></decl>,<decl pos:start="10:21" pos:end="10:29"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:21" pos:end="10:24">maxn</name> <init pos:start="10:26" pos:end="10:29">= <expr pos:start="10:28" pos:end="10:29"><operator pos:start="10:28" pos:end="10:28">-</operator><literal type="number" pos:start="10:29" pos:end="10:29">8</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="11:5" pos:end="19:5">for<control pos:start="11:8" pos:end="11:44">(<init pos:start="11:9" pos:end="11:18"><decl pos:start="11:9" pos:end="11:17"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>;</init> <condition pos:start="11:20" pos:end="11:39"><expr pos:start="11:20" pos:end="11:38"><name pos:start="11:20" pos:end="11:20">i</name> <operator pos:start="11:22" pos:end="11:23">&lt;=</operator> <call pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:32"><name pos:start="11:25" pos:end="11:25">t</name><operator pos:start="11:26" pos:end="11:26">.</operator><name pos:start="11:27" pos:end="11:32">length</name></name><argument_list pos:start="11:33" pos:end="11:34">()</argument_list></call> <operator pos:start="11:36" pos:end="11:36">-</operator> <literal type="number" pos:start="11:38" pos:end="11:38">1</literal></expr>;</condition> <incr pos:start="11:41" pos:end="11:43"><expr pos:start="11:41" pos:end="11:43"><name pos:start="11:41" pos:end="11:41">i</name><operator pos:start="11:42" pos:end="11:43">++</operator></expr></incr>)</control>
    <block pos:start="12:5" pos:end="19:5">{<block_content pos:start="13:9" pos:end="18:12">
        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if<condition pos:start="13:11" pos:end="13:20">(<expr pos:start="13:12" pos:end="13:19"><name pos:start="13:12" pos:end="13:12">i</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <literal type="char" pos:start="13:17" pos:end="13:19">' '</literal></expr>)</condition>
        <block pos:start="14:9" pos:end="17:9">{<block_content pos:start="15:13" pos:end="16:18">
            <expr_stmt pos:start="15:13" pos:end="15:31"><expr pos:start="15:13" pos:end="15:30"><name pos:start="15:13" pos:end="15:16">maxn</name> <operator pos:start="15:18" pos:end="15:18">=</operator> <call pos:start="15:20" pos:end="15:30"><name pos:start="15:20" pos:end="15:22">max</name><argument_list pos:start="15:23" pos:end="15:30">(<argument pos:start="15:24" pos:end="15:27"><expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">maxn</name></expr></argument>,<argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><name pos:start="15:29" pos:end="15:29">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:18"><expr pos:start="16:13" pos:end="16:17"><name pos:start="16:13" pos:end="16:13">l</name> <operator pos:start="16:15" pos:end="16:15">=</operator> <name pos:start="16:17" pos:end="16:17">r</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="18:9" pos:end="18:12"><expr pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:9">r</name><operator pos:start="18:10" pos:end="18:11">++</operator></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="20:5" pos:end="20:38"><expr pos:start="20:5" pos:end="20:37"><name pos:start="20:5" pos:end="20:8">cout</name> <operator pos:start="20:10" pos:end="20:11">&lt;&lt;</operator> <call pos:start="20:13" pos:end="20:28"><name pos:start="20:13" pos:end="20:20"><name pos:start="20:13" pos:end="20:13">t</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:20">substr</name></name><argument_list pos:start="20:21" pos:end="20:28">(<argument pos:start="20:22" pos:end="20:22"><expr pos:start="20:22" pos:end="20:22"><name pos:start="20:22" pos:end="20:22">l</name></expr></argument>,<argument pos:start="20:24" pos:end="20:27"><expr pos:start="20:24" pos:end="20:27"><name pos:start="20:24" pos:end="20:27">maxn</name></expr></argument>)</argument_list></call> <operator pos:start="20:30" pos:end="20:31">&lt;&lt;</operator> <literal type="string" pos:start="20:33" pos:end="20:37">" \n"</literal></expr>;</expr_stmt>
    <return pos:start="21:5" pos:end="21:13">return <expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
