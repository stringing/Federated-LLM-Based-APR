<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/531/531.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:12"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:7"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:7">a</name></decl>,<decl pos:start="3:9" pos:end="3:11"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:9" pos:end="3:11">ans</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:16"><decl pos:start="4:1" pos:end="4:15"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:15"><name pos:start="4:5" pos:end="4:7">sum</name><index pos:start="4:8" pos:end="4:15">[<expr pos:start="4:9" pos:end="4:14"><literal type="number" pos:start="4:9" pos:end="4:14">100005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:21"><decl pos:start="5:1" pos:end="5:20"><type pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:6">vector</name><argument_list type="generic" pos:start="5:7" pos:end="5:11">&lt;<argument pos:start="5:8" pos:end="5:10"><expr pos:start="5:8" pos:end="5:10"><name pos:start="5:8" pos:end="5:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="5:13" pos:end="5:20"><name pos:start="5:13" pos:end="5:13">v</name><index pos:start="5:14" pos:end="5:20">[<expr pos:start="5:15" pos:end="5:19"><literal type="number" pos:start="5:15" pos:end="5:19">20005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="29:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list><block pos:start="6:11" pos:end="29:1">{<block_content pos:start="7:5" pos:end="28:13">
    <expr_stmt pos:start="7:5" pos:end="7:34"><expr pos:start="7:5" pos:end="7:33"><call pos:start="7:5" pos:end="7:33"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:33">(<argument pos:start="7:13" pos:end="7:22"><expr pos:start="7:13" pos:end="7:22"><literal type="string" pos:start="7:13" pos:end="7:22">"match.in"</literal></expr></argument>,<argument pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><literal type="string" pos:start="7:24" pos:end="7:26">"r"</literal></expr></argument>,<argument pos:start="7:28" pos:end="7:32"><expr pos:start="7:28" pos:end="7:32"><name pos:start="7:28" pos:end="7:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:36"><expr pos:start="8:5" pos:end="8:35"><call pos:start="8:5" pos:end="8:35"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:35">(<argument pos:start="8:13" pos:end="8:23"><expr pos:start="8:13" pos:end="8:23"><literal type="string" pos:start="8:13" pos:end="8:23">"match.out"</literal></expr></argument>,<argument pos:start="8:25" pos:end="8:27"><expr pos:start="8:25" pos:end="8:27"><literal type="string" pos:start="8:25" pos:end="8:27">"w"</literal></expr></argument>,<argument pos:start="8:29" pos:end="8:34"><expr pos:start="8:29" pos:end="8:34"><name pos:start="8:29" pos:end="8:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:13"><expr pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:7">cin</name> <operator pos:start="9:9" pos:end="9:10">&gt;&gt;</operator> <name pos:start="9:12" pos:end="9:12">n</name></expr>;</expr_stmt>
    <for pos:start="10:5" pos:end="21:5">for<control pos:start="10:8" pos:end="10:31">(<init pos:start="10:9" pos:end="10:18"><decl pos:start="10:9" pos:end="10:17"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">i</name> <init pos:start="10:15" pos:end="10:17">= <expr pos:start="10:17" pos:end="10:17"><literal type="number" pos:start="10:17" pos:end="10:17">1</literal></expr></init></decl>;</init> <condition pos:start="10:20" pos:end="10:26"><expr pos:start="10:20" pos:end="10:25"><name pos:start="10:20" pos:end="10:20">i</name> <operator pos:start="10:22" pos:end="10:23">&lt;=</operator> <name pos:start="10:25" pos:end="10:25">n</name></expr>;</condition> <incr pos:start="10:28" pos:end="10:30"><expr pos:start="10:28" pos:end="10:30"><name pos:start="10:28" pos:end="10:28">i</name><operator pos:start="10:29" pos:end="10:30">++</operator></expr></incr>)</control><block pos:start="10:32" pos:end="21:5">{<block_content pos:start="11:9" pos:end="20:9">
        <expr_stmt pos:start="11:9" pos:end="11:23"><expr pos:start="11:9" pos:end="11:22"><call pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:13">scanf</name><argument_list pos:start="11:14" pos:end="11:22">(<argument pos:start="11:15" pos:end="11:18"><expr pos:start="11:15" pos:end="11:18"><literal type="string" pos:start="11:15" pos:end="11:18">"%d"</literal></expr></argument>,<argument pos:start="11:20" pos:end="11:21"><expr pos:start="11:20" pos:end="11:21"><operator pos:start="11:20" pos:end="11:20">&amp;</operator><name pos:start="11:21" pos:end="11:21">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="12:9" pos:end="16:9"><if pos:start="12:9" pos:end="14:9">if<condition pos:start="12:11" pos:end="12:17">(<expr pos:start="12:12" pos:end="12:16"><name pos:start="12:12" pos:end="12:12">a</name><operator pos:start="12:13" pos:end="12:14">==</operator> <literal type="number" pos:start="12:16" pos:end="12:16">0</literal></expr>)</condition><block pos:start="12:18" pos:end="14:9">{<block_content pos:start="13:13" pos:end="13:36">
            <expr_stmt pos:start="13:13" pos:end="13:36"><expr pos:start="13:13" pos:end="13:35"><name pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:15">sum</name><index pos:start="13:16" pos:end="13:18">[<expr pos:start="13:17" pos:end="13:17"><name pos:start="13:17" pos:end="13:17">i</name></expr>]</index></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <name pos:start="13:22" pos:end="13:31"><name pos:start="13:22" pos:end="13:24">sum</name><index pos:start="13:25" pos:end="13:31">[<expr pos:start="13:26" pos:end="13:30"><name pos:start="13:26" pos:end="13:26">i</name> <operator pos:start="13:28" pos:end="13:28">-</operator> <literal type="number" pos:start="13:30" pos:end="13:30">1</literal></expr>]</index></name> <operator pos:start="13:33" pos:end="13:33">+</operator> <literal type="number" pos:start="13:35" pos:end="13:35">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="14:10" pos:end="16:9">else<block pos:start="14:14" pos:end="16:9">{<block_content pos:start="15:13" pos:end="15:36">
            <expr_stmt pos:start="15:13" pos:end="15:36"><expr pos:start="15:13" pos:end="15:35"><name pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:15">sum</name><index pos:start="15:16" pos:end="15:18">[<expr pos:start="15:17" pos:end="15:17"><name pos:start="15:17" pos:end="15:17">i</name></expr>]</index></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <name pos:start="15:22" pos:end="15:31"><name pos:start="15:22" pos:end="15:24">sum</name><index pos:start="15:25" pos:end="15:31">[<expr pos:start="15:26" pos:end="15:30"><name pos:start="15:26" pos:end="15:26">i</name> <operator pos:start="15:28" pos:end="15:28">-</operator> <literal type="number" pos:start="15:30" pos:end="15:30">1</literal></expr>]</index></name> <operator pos:start="15:33" pos:end="15:33">-</operator> <literal type="number" pos:start="15:35" pos:end="15:35">1</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:40"><expr pos:start="17:9" pos:end="17:39"><name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:9">v</name><index pos:start="17:10" pos:end="17:26">[<expr pos:start="17:11" pos:end="17:25"><name pos:start="17:11" pos:end="17:16"><name pos:start="17:11" pos:end="17:13">sum</name><index pos:start="17:14" pos:end="17:16">[<expr pos:start="17:15" pos:end="17:15"><name pos:start="17:15" pos:end="17:15">i</name></expr>]</index></name> <operator pos:start="17:18" pos:end="17:18">+</operator> <literal type="number" pos:start="17:20" pos:end="17:25">100001</literal></expr>]</index></name><operator pos:start="17:27" pos:end="17:27">.</operator><call pos:start="17:28" pos:end="17:39"><name pos:start="17:28" pos:end="17:36">push_back</name><argument_list pos:start="17:37" pos:end="17:39">(<argument pos:start="17:38" pos:end="17:38"><expr pos:start="17:38" pos:end="17:38"><name pos:start="17:38" pos:end="17:38">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="18:9" pos:end="20:9"><if pos:start="18:9" pos:end="20:9">if<condition pos:start="18:11" pos:end="18:23">(<expr pos:start="18:12" pos:end="18:22"><name pos:start="18:12" pos:end="18:17"><name pos:start="18:12" pos:end="18:14">sum</name><index pos:start="18:15" pos:end="18:17">[<expr pos:start="18:16" pos:end="18:16"><name pos:start="18:16" pos:end="18:16">i</name></expr>]</index></name> <operator pos:start="18:19" pos:end="18:20">==</operator> <literal type="number" pos:start="18:22" pos:end="18:22">0</literal></expr>)</condition><block pos:start="18:24" pos:end="20:9">{<block_content pos:start="19:13" pos:end="19:20">
            <expr_stmt pos:start="19:13" pos:end="19:20"><expr pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:15">ans</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:19">i</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="22:5" pos:end="26:5">for<control pos:start="22:8" pos:end="22:34">(<init pos:start="22:9" pos:end="22:19"><decl pos:start="22:9" pos:end="22:17"><type pos:start="22:9" pos:end="22:11"><name pos:start="22:9" pos:end="22:11">int</name></type> <name pos:start="22:13" pos:end="22:13">i</name> <init pos:start="22:15" pos:end="22:17">= <expr pos:start="22:17" pos:end="22:17"><literal type="number" pos:start="22:17" pos:end="22:17">0</literal></expr></init></decl> ;</init><condition pos:start="22:20" pos:end="22:30"><expr pos:start="22:20" pos:end="22:29"><name pos:start="22:20" pos:end="22:20">i</name> <operator pos:start="22:22" pos:end="22:22">&lt;</operator> <literal type="number" pos:start="22:24" pos:end="22:29">200005</literal></expr>;</condition><incr pos:start="22:31" pos:end="22:33"><expr pos:start="22:31" pos:end="22:33"><name pos:start="22:31" pos:end="22:31">i</name><operator pos:start="22:32" pos:end="22:33">++</operator></expr></incr>)</control><block pos:start="22:35" pos:end="26:5">{<block_content pos:start="23:9" pos:end="25:9">
        <if_stmt pos:start="23:9" pos:end="25:9"><if pos:start="23:9" pos:end="25:9">if<condition pos:start="23:11" pos:end="23:27">(<expr pos:start="23:12" pos:end="23:26"><name pos:start="23:12" pos:end="23:15"><name pos:start="23:12" pos:end="23:12">v</name><index pos:start="23:13" pos:end="23:15">[<expr pos:start="23:14" pos:end="23:14"><name pos:start="23:14" pos:end="23:14">i</name></expr>]</index></name><operator pos:start="23:16" pos:end="23:16">.</operator><call pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:20">size</name><argument_list pos:start="23:21" pos:end="23:22">()</argument_list></call> <operator pos:start="23:24" pos:end="23:24">&gt;</operator> <literal type="number" pos:start="23:26" pos:end="23:26">1</literal></expr>)</condition><block pos:start="23:28" pos:end="25:9">{<block_content pos:start="24:13" pos:end="24:59">
            <expr_stmt pos:start="24:13" pos:end="24:59"><expr pos:start="24:13" pos:end="24:58"><name pos:start="24:13" pos:end="24:15">ans</name> <operator pos:start="24:17" pos:end="24:17">=</operator> <call pos:start="24:19" pos:end="24:58"><name pos:start="24:19" pos:end="24:21">max</name><argument_list pos:start="24:22" pos:end="24:58">(<argument pos:start="24:23" pos:end="24:25"><expr pos:start="24:23" pos:end="24:25"><name pos:start="24:23" pos:end="24:25">ans</name></expr></argument>,<argument pos:start="24:27" pos:end="24:57"><expr pos:start="24:27" pos:end="24:57"><name pos:start="24:27" pos:end="24:47"><name pos:start="24:27" pos:end="24:27">v</name><index pos:start="24:28" pos:end="24:30">[<expr pos:start="24:29" pos:end="24:29"><name pos:start="24:29" pos:end="24:29">i</name></expr>]</index><index pos:start="24:31" pos:end="24:47">[<expr pos:start="24:32" pos:end="24:46"><name pos:start="24:32" pos:end="24:35"><name pos:start="24:32" pos:end="24:32">v</name><index pos:start="24:33" pos:end="24:35">[<expr pos:start="24:34" pos:end="24:34"><name pos:start="24:34" pos:end="24:34">i</name></expr>]</index></name><operator pos:start="24:36" pos:end="24:36">.</operator><call pos:start="24:37" pos:end="24:42"><name pos:start="24:37" pos:end="24:40">size</name><argument_list pos:start="24:41" pos:end="24:42">()</argument_list></call> <operator pos:start="24:44" pos:end="24:44">-</operator> <literal type="number" pos:start="24:46" pos:end="24:46">1</literal></expr>]</index></name> <operator pos:start="24:49" pos:end="24:49">-</operator> <name pos:start="24:51" pos:end="24:57"><name pos:start="24:51" pos:end="24:51">v</name><index pos:start="24:52" pos:end="24:54">[<expr pos:start="24:53" pos:end="24:53"><name pos:start="24:53" pos:end="24:53">i</name></expr>]</index><index pos:start="24:55" pos:end="24:57">[<expr pos:start="24:56" pos:end="24:56"><literal type="number" pos:start="24:56" pos:end="24:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:8">cout</name> <operator pos:start="27:10" pos:end="27:11">&lt;&lt;</operator> <name pos:start="27:13" pos:end="27:15">ans</name> <operator pos:start="27:17" pos:end="27:18">&lt;&lt;</operator> <name pos:start="27:20" pos:end="27:23">endl</name></expr>;</expr_stmt>
    <return pos:start="28:5" pos:end="28:13">return <expr pos:start="28:12" pos:end="28:12"><literal type="number" pos:start="28:12" pos:end="28:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
