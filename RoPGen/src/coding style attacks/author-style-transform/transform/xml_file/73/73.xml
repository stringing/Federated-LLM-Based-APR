<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/73/73.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:62"><decl pos:start="3:1" pos:end="3:50"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:13"><name pos:start="3:5" pos:end="3:7">dir</name><index pos:start="3:8" pos:end="3:10">[<expr pos:start="3:9" pos:end="3:9"><literal type="number" pos:start="3:9" pos:end="3:9">4</literal></expr>]</index><index pos:start="3:11" pos:end="3:13">[<expr pos:start="3:12" pos:end="3:12"><literal type="number" pos:start="3:12" pos:end="3:12">2</literal></expr>]</index></name> <init pos:start="3:15" pos:end="3:50">= <expr pos:start="3:17" pos:end="3:50"><block pos:start="3:17" pos:end="3:50">{<expr pos:start="3:18" pos:end="3:24"><block pos:start="3:18" pos:end="3:24">{<expr pos:start="3:19" pos:end="3:20"><operator pos:start="3:19" pos:end="3:19">-</operator><literal type="number" pos:start="3:20" pos:end="3:20">1</literal></expr>, <expr pos:start="3:23" pos:end="3:23"><literal type="number" pos:start="3:23" pos:end="3:23">0</literal></expr>}</block></expr>, <expr pos:start="3:27" pos:end="3:32"><block pos:start="3:27" pos:end="3:32">{<expr pos:start="3:28" pos:end="3:28"><literal type="number" pos:start="3:28" pos:end="3:28">1</literal></expr>, <expr pos:start="3:31" pos:end="3:31"><literal type="number" pos:start="3:31" pos:end="3:31">0</literal></expr>}</block></expr>, <expr pos:start="3:35" pos:end="3:41"><block pos:start="3:35" pos:end="3:41">{<expr pos:start="3:36" pos:end="3:36"><literal type="number" pos:start="3:36" pos:end="3:36">0</literal></expr>, <expr pos:start="3:39" pos:end="3:40"><operator pos:start="3:39" pos:end="3:39">-</operator><literal type="number" pos:start="3:40" pos:end="3:40">1</literal></expr>}</block></expr>, <expr pos:start="3:44" pos:end="3:49"><block pos:start="3:44" pos:end="3:49">{<expr pos:start="3:45" pos:end="3:45"><literal type="number" pos:start="3:45" pos:end="3:45">0</literal></expr>, <expr pos:start="3:48" pos:end="3:48"><literal type="number" pos:start="3:48" pos:end="3:48">1</literal></expr>}</block></expr>}</block></expr></init></decl>, <decl pos:start="3:53" pos:end="3:53"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:53" pos:end="3:53">n</name></decl>, <decl pos:start="3:56" pos:end="3:56"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:56" pos:end="3:56">m</name></decl>, <decl pos:start="3:59" pos:end="3:61"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:59" pos:end="3:61">ans</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:22"><decl pos:start="4:1" pos:end="4:21"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">char</name></type> <name pos:start="4:6" pos:end="4:21"><name pos:start="4:6" pos:end="4:9">maze</name><index pos:start="4:10" pos:end="4:15">[<expr pos:start="4:11" pos:end="4:14"><literal type="number" pos:start="4:11" pos:end="4:14">1005</literal></expr>]</index><index pos:start="4:16" pos:end="4:21">[<expr pos:start="4:17" pos:end="4:20"><literal type="number" pos:start="4:17" pos:end="4:20">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:21"><decl pos:start="5:1" pos:end="5:20"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:20"><name pos:start="5:6" pos:end="5:8">vis</name><index pos:start="5:9" pos:end="5:14">[<expr pos:start="5:10" pos:end="5:13"><literal type="number" pos:start="5:10" pos:end="5:13">1005</literal></expr>]</index><index pos:start="5:15" pos:end="5:20">[<expr pos:start="5:16" pos:end="5:19"><literal type="number" pos:start="5:16" pos:end="5:19">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="9:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">bool</name></type> <name pos:start="6:6" pos:end="6:7">in</name><parameter_list pos:start="6:8" pos:end="6:21">(<parameter pos:start="6:9" pos:end="6:13"><decl pos:start="6:9" pos:end="6:13"><type pos:start="6:9" pos:end="6:13"><name pos:start="6:9" pos:end="6:11">int</name></type> <name pos:start="6:13" pos:end="6:13">x</name></decl></parameter>, <parameter pos:start="6:16" pos:end="6:20"><decl pos:start="6:16" pos:end="6:20"><type pos:start="6:16" pos:end="6:20"><name pos:start="6:16" pos:end="6:18">int</name></type> <name pos:start="6:20" pos:end="6:20">y</name></decl></parameter>)</parameter_list>
<block pos:start="7:1" pos:end="9:1">{<block_content pos:start="8:5" pos:end="8:46">
    <return pos:start="8:5" pos:end="8:46">return <expr pos:start="8:12" pos:end="8:45"><literal type="number" pos:start="8:12" pos:end="8:12">0</literal> <operator pos:start="8:14" pos:end="8:15">&lt;=</operator> <name pos:start="8:17" pos:end="8:17">x</name> <operator pos:start="8:19" pos:end="8:20">&amp;&amp;</operator> <name pos:start="8:22" pos:end="8:22">x</name> <operator pos:start="8:24" pos:end="8:24">&lt;</operator> <name pos:start="8:26" pos:end="8:26">n</name> <operator pos:start="8:28" pos:end="8:29">&amp;&amp;</operator> <literal type="number" pos:start="8:31" pos:end="8:31">0</literal> <operator pos:start="8:33" pos:end="8:34">&lt;=</operator> <name pos:start="8:36" pos:end="8:36">y</name> <operator pos:start="8:38" pos:end="8:39">&amp;&amp;</operator> <name pos:start="8:41" pos:end="8:41">y</name> <operator pos:start="8:43" pos:end="8:43">&lt;</operator> <name pos:start="8:45" pos:end="8:45">m</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="10:1" pos:end="22:1"><type pos:start="10:1" pos:end="10:4"><name pos:start="10:1" pos:end="10:4">void</name></type> <name pos:start="10:6" pos:end="10:8">dfs</name><parameter_list pos:start="10:9" pos:end="10:22">(<parameter pos:start="10:10" pos:end="10:14"><decl pos:start="10:10" pos:end="10:14"><type pos:start="10:10" pos:end="10:14"><name pos:start="10:10" pos:end="10:12">int</name></type> <name pos:start="10:14" pos:end="10:14">x</name></decl></parameter>, <parameter pos:start="10:17" pos:end="10:21"><decl pos:start="10:17" pos:end="10:21"><type pos:start="10:17" pos:end="10:21"><name pos:start="10:17" pos:end="10:19">int</name></type> <name pos:start="10:21" pos:end="10:21">y</name></decl></parameter>)</parameter_list>
<block pos:start="11:1" pos:end="22:1">{<block_content pos:start="12:5" pos:end="21:5">
    <expr_stmt pos:start="12:5" pos:end="12:21"><expr pos:start="12:5" pos:end="12:20"><name pos:start="12:5" pos:end="12:13"><name pos:start="12:5" pos:end="12:7">vis</name><index pos:start="12:8" pos:end="12:10">[<expr pos:start="12:9" pos:end="12:9"><name pos:start="12:9" pos:end="12:9">x</name></expr>]</index><index pos:start="12:11" pos:end="12:13">[<expr pos:start="12:12" pos:end="12:12"><name pos:start="12:12" pos:end="12:12">y</name></expr>]</index></name> <operator pos:start="12:15" pos:end="12:15">=</operator> <literal type="boolean" pos:start="12:17" pos:end="12:20">true</literal></expr>;</expr_stmt>
    <for pos:start="13:5" pos:end="21:5">for <control pos:start="13:9" pos:end="13:31">(<init pos:start="13:10" pos:end="13:19"><decl pos:start="13:10" pos:end="13:18"><type pos:start="13:10" pos:end="13:12"><name pos:start="13:10" pos:end="13:12">int</name></type> <name pos:start="13:14" pos:end="13:14">i</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>;</init> <condition pos:start="13:21" pos:end="13:26"><expr pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:21">i</name> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <literal type="number" pos:start="13:25" pos:end="13:25">4</literal></expr>;</condition> <incr pos:start="13:28" pos:end="13:30"><expr pos:start="13:28" pos:end="13:30"><name pos:start="13:28" pos:end="13:28">i</name><operator pos:start="13:29" pos:end="13:30">++</operator></expr></incr>)</control>
    <block pos:start="14:5" pos:end="21:5">{<block_content pos:start="15:9" pos:end="20:9">
        <decl_stmt pos:start="15:9" pos:end="15:31"><decl pos:start="15:9" pos:end="15:30"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:14">tx</name> <init pos:start="15:16" pos:end="15:30">= <expr pos:start="15:18" pos:end="15:30"><name pos:start="15:18" pos:end="15:18">x</name> <operator pos:start="15:20" pos:end="15:20">+</operator> <name pos:start="15:22" pos:end="15:30"><name pos:start="15:22" pos:end="15:24">dir</name><index pos:start="15:25" pos:end="15:27">[<expr pos:start="15:26" pos:end="15:26"><name pos:start="15:26" pos:end="15:26">i</name></expr>]</index><index pos:start="15:28" pos:end="15:30">[<expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="16:9" pos:end="16:31"><decl pos:start="16:9" pos:end="16:30"><type pos:start="16:9" pos:end="16:11"><name pos:start="16:9" pos:end="16:11">int</name></type> <name pos:start="16:13" pos:end="16:14">ty</name> <init pos:start="16:16" pos:end="16:30">= <expr pos:start="16:18" pos:end="16:30"><name pos:start="16:18" pos:end="16:18">y</name> <operator pos:start="16:20" pos:end="16:20">+</operator> <name pos:start="16:22" pos:end="16:30"><name pos:start="16:22" pos:end="16:24">dir</name><index pos:start="16:25" pos:end="16:27">[<expr pos:start="16:26" pos:end="16:26"><name pos:start="16:26" pos:end="16:26">i</name></expr>]</index><index pos:start="16:28" pos:end="16:30">[<expr pos:start="16:29" pos:end="16:29"><literal type="number" pos:start="16:29" pos:end="16:29">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="17:9" pos:end="20:9"><if pos:start="17:9" pos:end="20:9">if <condition pos:start="17:12" pos:end="17:62">(<expr pos:start="17:13" pos:end="17:61"><call pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:14">in</name><argument_list pos:start="17:15" pos:end="17:22">(<argument pos:start="17:16" pos:end="17:17"><expr pos:start="17:16" pos:end="17:17"><name pos:start="17:16" pos:end="17:17">tx</name></expr></argument>, <argument pos:start="17:20" pos:end="17:21"><expr pos:start="17:20" pos:end="17:21"><name pos:start="17:20" pos:end="17:21">ty</name></expr></argument>)</argument_list></call> <operator pos:start="17:24" pos:end="17:25">&amp;&amp;</operator> <operator pos:start="17:27" pos:end="17:27">!</operator><name pos:start="17:28" pos:end="17:38"><name pos:start="17:28" pos:end="17:30">vis</name><index pos:start="17:31" pos:end="17:34">[<expr pos:start="17:32" pos:end="17:33"><name pos:start="17:32" pos:end="17:33">tx</name></expr>]</index><index pos:start="17:35" pos:end="17:38">[<expr pos:start="17:36" pos:end="17:37"><name pos:start="17:36" pos:end="17:37">ty</name></expr>]</index></name> <operator pos:start="17:40" pos:end="17:41">&amp;&amp;</operator> <name pos:start="17:43" pos:end="17:54"><name pos:start="17:43" pos:end="17:46">maze</name><index pos:start="17:47" pos:end="17:50">[<expr pos:start="17:48" pos:end="17:49"><name pos:start="17:48" pos:end="17:49">tx</name></expr>]</index><index pos:start="17:51" pos:end="17:54">[<expr pos:start="17:52" pos:end="17:53"><name pos:start="17:52" pos:end="17:53">ty</name></expr>]</index></name> <operator pos:start="17:56" pos:end="17:57">==</operator> <literal type="char" pos:start="17:59" pos:end="17:61">'#'</literal></expr>)</condition>
        <block pos:start="18:9" pos:end="20:9">{<block_content pos:start="19:13" pos:end="19:24">
            <expr_stmt pos:start="19:13" pos:end="19:24"><expr pos:start="19:13" pos:end="19:23"><call pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:15">dfs</name><argument_list pos:start="19:16" pos:end="19:23">(<argument pos:start="19:17" pos:end="19:18"><expr pos:start="19:17" pos:end="19:18"><name pos:start="19:17" pos:end="19:18">tx</name></expr></argument>, <argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">ty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="23:1" pos:end="48:1"><type pos:start="23:1" pos:end="23:3"><name pos:start="23:1" pos:end="23:3">int</name></type> <name pos:start="23:5" pos:end="23:8">main</name> <parameter_list pos:start="23:10" pos:end="23:11">()</parameter_list>
<block pos:start="24:1" pos:end="48:1">{<block_content pos:start="25:5" pos:end="47:13">
    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><call pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:11">freopen</name><argument_list pos:start="25:12" pos:end="25:36">(<argument pos:start="25:13" pos:end="25:23"><expr pos:start="25:13" pos:end="25:23"><literal type="string" pos:start="25:13" pos:end="25:23">"hiking.in"</literal></expr></argument>, <argument pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><literal type="string" pos:start="25:26" pos:end="25:28">"r"</literal></expr></argument>, <argument pos:start="25:31" pos:end="25:35"><expr pos:start="25:31" pos:end="25:35"><name pos:start="25:31" pos:end="25:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:39"><expr pos:start="26:5" pos:end="26:38"><call pos:start="26:5" pos:end="26:38"><name pos:start="26:5" pos:end="26:11">freopen</name><argument_list pos:start="26:12" pos:end="26:38">(<argument pos:start="26:13" pos:end="26:24"><expr pos:start="26:13" pos:end="26:24"><literal type="string" pos:start="26:13" pos:end="26:24">"hiking.out"</literal></expr></argument>, <argument pos:start="26:27" pos:end="26:29"><expr pos:start="26:27" pos:end="26:29"><literal type="string" pos:start="26:27" pos:end="26:29">"w"</literal></expr></argument>, <argument pos:start="26:32" pos:end="26:37"><expr pos:start="26:32" pos:end="26:37"><name pos:start="26:32" pos:end="26:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:18"><expr pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:7">cin</name> <operator pos:start="27:9" pos:end="27:10">&gt;&gt;</operator> <name pos:start="27:12" pos:end="27:12">n</name> <operator pos:start="27:14" pos:end="27:15">&gt;&gt;</operator> <name pos:start="27:17" pos:end="27:17">m</name></expr>;</expr_stmt>
    <for pos:start="28:5" pos:end="34:5">for <control pos:start="28:9" pos:end="28:31">(<init pos:start="28:10" pos:end="28:19"><decl pos:start="28:10" pos:end="28:18"><type pos:start="28:10" pos:end="28:12"><name pos:start="28:10" pos:end="28:12">int</name></type> <name pos:start="28:14" pos:end="28:14">i</name> <init pos:start="28:16" pos:end="28:18">= <expr pos:start="28:18" pos:end="28:18"><literal type="number" pos:start="28:18" pos:end="28:18">0</literal></expr></init></decl>;</init> <condition pos:start="28:21" pos:end="28:26"><expr pos:start="28:21" pos:end="28:25"><name pos:start="28:21" pos:end="28:21">i</name> <operator pos:start="28:23" pos:end="28:23">&lt;</operator> <name pos:start="28:25" pos:end="28:25">n</name></expr>;</condition> <incr pos:start="28:28" pos:end="28:30"><expr pos:start="28:28" pos:end="28:30"><name pos:start="28:28" pos:end="28:28">i</name><operator pos:start="28:29" pos:end="28:30">++</operator></expr></incr>)</control>
    <block pos:start="29:5" pos:end="34:5">{<block_content pos:start="30:9" pos:end="33:9">
        <for pos:start="30:9" pos:end="33:9">for <control pos:start="30:13" pos:end="30:35">(<init pos:start="30:14" pos:end="30:23"><decl pos:start="30:14" pos:end="30:22"><type pos:start="30:14" pos:end="30:16"><name pos:start="30:14" pos:end="30:16">int</name></type> <name pos:start="30:18" pos:end="30:18">j</name> <init pos:start="30:20" pos:end="30:22">= <expr pos:start="30:22" pos:end="30:22"><literal type="number" pos:start="30:22" pos:end="30:22">0</literal></expr></init></decl>;</init> <condition pos:start="30:25" pos:end="30:30"><expr pos:start="30:25" pos:end="30:29"><name pos:start="30:25" pos:end="30:25">j</name> <operator pos:start="30:27" pos:end="30:27">&lt;</operator> <name pos:start="30:29" pos:end="30:29">m</name></expr>;</condition> <incr pos:start="30:32" pos:end="30:34"><expr pos:start="30:32" pos:end="30:34"><name pos:start="30:32" pos:end="30:32">j</name><operator pos:start="30:33" pos:end="30:34">++</operator></expr></incr>)</control>
        <block pos:start="31:9" pos:end="33:9">{<block_content pos:start="32:13" pos:end="32:30">
            <expr_stmt pos:start="32:13" pos:end="32:30"><expr pos:start="32:13" pos:end="32:29"><name pos:start="32:13" pos:end="32:15">cin</name> <operator pos:start="32:17" pos:end="32:18">&gt;&gt;</operator> <name pos:start="32:20" pos:end="32:29"><name pos:start="32:20" pos:end="32:23">maze</name><index pos:start="32:24" pos:end="32:26">[<expr pos:start="32:25" pos:end="32:25"><name pos:start="32:25" pos:end="32:25">i</name></expr>]</index><index pos:start="32:27" pos:end="32:29">[<expr pos:start="32:28" pos:end="32:28"><name pos:start="32:28" pos:end="32:28">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="35:5" pos:end="45:5">for <control pos:start="35:9" pos:end="35:31">(<init pos:start="35:10" pos:end="35:19"><decl pos:start="35:10" pos:end="35:18"><type pos:start="35:10" pos:end="35:12"><name pos:start="35:10" pos:end="35:12">int</name></type> <name pos:start="35:14" pos:end="35:14">i</name> <init pos:start="35:16" pos:end="35:18">= <expr pos:start="35:18" pos:end="35:18"><literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr></init></decl>;</init> <condition pos:start="35:21" pos:end="35:26"><expr pos:start="35:21" pos:end="35:25"><name pos:start="35:21" pos:end="35:21">i</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <name pos:start="35:25" pos:end="35:25">n</name></expr>;</condition> <incr pos:start="35:28" pos:end="35:30"><expr pos:start="35:28" pos:end="35:30"><name pos:start="35:28" pos:end="35:28">i</name><operator pos:start="35:29" pos:end="35:30">++</operator></expr></incr>)</control>
    <block pos:start="36:5" pos:end="45:5">{<block_content pos:start="37:9" pos:end="44:9">
        <for pos:start="37:9" pos:end="44:9">for <control pos:start="37:13" pos:end="37:35">(<init pos:start="37:14" pos:end="37:23"><decl pos:start="37:14" pos:end="37:22"><type pos:start="37:14" pos:end="37:16"><name pos:start="37:14" pos:end="37:16">int</name></type> <name pos:start="37:18" pos:end="37:18">j</name> <init pos:start="37:20" pos:end="37:22">= <expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr></init></decl>;</init> <condition pos:start="37:25" pos:end="37:30"><expr pos:start="37:25" pos:end="37:29"><name pos:start="37:25" pos:end="37:25">j</name> <operator pos:start="37:27" pos:end="37:27">&lt;</operator> <name pos:start="37:29" pos:end="37:29">m</name></expr>;</condition> <incr pos:start="37:32" pos:end="37:34"><expr pos:start="37:32" pos:end="37:34"><name pos:start="37:32" pos:end="37:32">i</name><operator pos:start="37:33" pos:end="37:34">++</operator></expr></incr>)</control>
        <block pos:start="38:9" pos:end="44:9">{<block_content pos:start="39:13" pos:end="43:13">
            <if_stmt pos:start="39:13" pos:end="43:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:48">(<expr pos:start="39:17" pos:end="39:47"><operator pos:start="39:17" pos:end="39:17">!</operator><name pos:start="39:18" pos:end="39:26"><name pos:start="39:18" pos:end="39:20">vis</name><index pos:start="39:21" pos:end="39:23">[<expr pos:start="39:22" pos:end="39:22"><name pos:start="39:22" pos:end="39:22">i</name></expr>]</index><index pos:start="39:24" pos:end="39:26">[<expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">j</name></expr>]</index></name> <operator pos:start="39:28" pos:end="39:29">&amp;&amp;</operator> <name pos:start="39:31" pos:end="39:40"><name pos:start="39:31" pos:end="39:34">maze</name><index pos:start="39:35" pos:end="39:37">[<expr pos:start="39:36" pos:end="39:36"><name pos:start="39:36" pos:end="39:36">i</name></expr>]</index><index pos:start="39:38" pos:end="39:40">[<expr pos:start="39:39" pos:end="39:39"><name pos:start="39:39" pos:end="39:39">j</name></expr>]</index></name> <operator pos:start="39:42" pos:end="39:43">==</operator> <literal type="char" pos:start="39:45" pos:end="39:47">'#'</literal></expr>)</condition>
            <block pos:start="40:13" pos:end="43:13">{<block_content pos:start="41:17" pos:end="42:22">
                <expr_stmt pos:start="41:17" pos:end="41:26"><expr pos:start="41:17" pos:end="41:25"><call pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:19">dfs</name><argument_list pos:start="41:20" pos:end="41:25">(<argument pos:start="41:21" pos:end="41:21"><expr pos:start="41:21" pos:end="41:21"><name pos:start="41:21" pos:end="41:21">i</name></expr></argument>, <argument pos:start="41:24" pos:end="41:24"><expr pos:start="41:24" pos:end="41:24"><name pos:start="41:24" pos:end="41:24">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="42:17" pos:end="42:22"><expr pos:start="42:17" pos:end="42:21"><name pos:start="42:17" pos:end="42:19">ans</name><operator pos:start="42:20" pos:end="42:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="46:5" pos:end="46:24"><expr pos:start="46:5" pos:end="46:23"><name pos:start="46:5" pos:end="46:8">cout</name> <operator pos:start="46:10" pos:end="46:11">&lt;&lt;</operator> <name pos:start="46:13" pos:end="46:15">ans</name> <operator pos:start="46:17" pos:end="46:18">&lt;&lt;</operator> <name pos:start="46:20" pos:end="46:23">endl</name></expr>;</expr_stmt>
    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
