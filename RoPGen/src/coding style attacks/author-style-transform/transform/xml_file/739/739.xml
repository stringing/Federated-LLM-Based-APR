<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/739/739.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:20"><decl pos:start="3:1" pos:end="3:19"><type pos:start="3:1" pos:end="3:11"><name pos:start="3:1" pos:end="3:11"><name pos:start="3:1" pos:end="3:6">vector</name><argument_list type="generic" pos:start="3:7" pos:end="3:11">&lt;<argument pos:start="3:8" pos:end="3:10"><expr pos:start="3:8" pos:end="3:10"><name pos:start="3:8" pos:end="3:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="3:13" pos:end="3:19"><name pos:start="3:13" pos:end="3:13">G</name><index pos:start="3:14" pos:end="3:19">[<expr pos:start="3:15" pos:end="3:18"><literal type="number" pos:start="3:15" pos:end="3:18">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:34"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">t</name></decl>, <decl pos:start="4:8" pos:end="4:8"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:8" pos:end="4:8">n</name></decl>, <decl pos:start="4:11" pos:end="4:11"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:11" pos:end="4:11">x</name></decl>, <decl pos:start="4:14" pos:end="4:14"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:14" pos:end="4:14">y</name></decl>, <decl pos:start="4:17" pos:end="4:24"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:17" pos:end="4:24"><name pos:start="4:17" pos:end="4:18">fa</name><index pos:start="4:19" pos:end="4:24">[<expr pos:start="4:20" pos:end="4:23"><literal type="number" pos:start="4:20" pos:end="4:23">1005</literal></expr>]</index></name></decl>, <decl pos:start="4:27" pos:end="4:33"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:27" pos:end="4:29">cnt</name> <init pos:start="4:31" pos:end="4:33">= <expr pos:start="4:33" pos:end="4:33"><literal type="number" pos:start="4:33" pos:end="4:33">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:9"><decl pos:start="5:1" pos:end="5:8"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type>  <name pos:start="5:6" pos:end="5:8">son</name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="40:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list> <block pos:start="6:12" pos:end="40:1">{<block_content pos:start="7:5" pos:end="39:13">
    <expr_stmt pos:start="7:5" pos:end="7:31"><expr pos:start="7:5" pos:end="7:30"><call pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:30">(<argument pos:start="7:13" pos:end="7:18"><expr pos:start="7:13" pos:end="7:18"><literal type="string" pos:start="7:13" pos:end="7:18">"p.in"</literal></expr></argument>, <argument pos:start="7:21" pos:end="7:23"><expr pos:start="7:21" pos:end="7:23"><literal type="string" pos:start="7:21" pos:end="7:23">"r"</literal></expr></argument>,<argument pos:start="7:25" pos:end="7:29"><expr pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:29">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:34"><expr pos:start="8:5" pos:end="8:33"><call pos:start="8:5" pos:end="8:33"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:33">(<argument pos:start="8:13" pos:end="8:19"><expr pos:start="8:13" pos:end="8:19"><literal type="string" pos:start="8:13" pos:end="8:19">"p.out"</literal></expr></argument>, <argument pos:start="8:22" pos:end="8:24"><expr pos:start="8:22" pos:end="8:24"><literal type="string" pos:start="8:22" pos:end="8:24">"w"</literal></expr></argument>, <argument pos:start="8:27" pos:end="8:32"><expr pos:start="8:27" pos:end="8:32"><name pos:start="8:27" pos:end="8:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:18"><expr pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:7">cin</name> <operator pos:start="9:9" pos:end="9:10">&gt;&gt;</operator> <name pos:start="9:12" pos:end="9:12">t</name> <operator pos:start="9:14" pos:end="9:15">&gt;&gt;</operator> <name pos:start="9:17" pos:end="9:17">n</name></expr>;</expr_stmt>
    <while pos:start="10:5" pos:end="35:5">while<condition pos:start="10:10" pos:end="10:14">(<expr pos:start="10:11" pos:end="10:13"><name pos:start="10:11" pos:end="10:11">t</name><operator pos:start="10:12" pos:end="10:13">--</operator></expr>)</condition> <block pos:start="10:16" pos:end="35:5">{<block_content pos:start="11:9" pos:end="34:9">
        <expr_stmt pos:start="11:9" pos:end="11:16"><expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">cnt</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>;</expr_stmt>
        <for pos:start="12:9" pos:end="16:9">for<control pos:start="12:12" pos:end="12:38">(<init pos:start="12:13" pos:end="12:22"><decl pos:start="12:13" pos:end="12:21"><type pos:start="12:13" pos:end="12:15"><name pos:start="12:13" pos:end="12:15">int</name></type> <name pos:start="12:17" pos:end="12:17">i</name> <init pos:start="12:19" pos:end="12:21">= <expr pos:start="12:21" pos:end="12:21"><literal type="number" pos:start="12:21" pos:end="12:21">0</literal></expr></init></decl>;</init> <condition pos:start="12:24" pos:end="12:33"><expr pos:start="12:24" pos:end="12:32"><name pos:start="12:24" pos:end="12:24">i</name> <operator pos:start="12:26" pos:end="12:26">&lt;</operator> <name pos:start="12:28" pos:end="12:28">n</name> <operator pos:start="12:30" pos:end="12:30">-</operator> <literal type="number" pos:start="12:32" pos:end="12:32">1</literal></expr>;</condition> <incr pos:start="12:35" pos:end="12:37"><expr pos:start="12:35" pos:end="12:37"><name pos:start="12:35" pos:end="12:35">i</name><operator pos:start="12:36" pos:end="12:37">++</operator></expr></incr>)</control> <block pos:start="12:40" pos:end="16:9">{<block_content pos:start="13:13" pos:end="15:22">
            <expr_stmt pos:start="13:13" pos:end="13:26"><expr pos:start="13:13" pos:end="13:25"><name pos:start="13:13" pos:end="13:15">cin</name> <operator pos:start="13:17" pos:end="13:18">&gt;&gt;</operator> <name pos:start="13:20" pos:end="13:20">x</name> <operator pos:start="13:22" pos:end="13:23">&gt;&gt;</operator> <name pos:start="13:25" pos:end="13:25">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:30"><expr pos:start="14:13" pos:end="14:29"><name pos:start="14:13" pos:end="14:16"><name pos:start="14:13" pos:end="14:13">G</name><index pos:start="14:14" pos:end="14:16">[<expr pos:start="14:15" pos:end="14:15"><name pos:start="14:15" pos:end="14:15">x</name></expr>]</index></name><operator pos:start="14:17" pos:end="14:17">.</operator><call pos:start="14:18" pos:end="14:29"><name pos:start="14:18" pos:end="14:26">push_back</name><argument_list pos:start="14:27" pos:end="14:29">(<argument pos:start="14:28" pos:end="14:28"><expr pos:start="14:28" pos:end="14:28"><name pos:start="14:28" pos:end="14:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:22"><expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:17"><name pos:start="15:13" pos:end="15:14">fa</name><index pos:start="15:15" pos:end="15:17">[<expr pos:start="15:16" pos:end="15:16"><name pos:start="15:16" pos:end="15:16">y</name></expr>]</index></name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:21">x</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="17:9" pos:end="28:9">for<control pos:start="17:12" pos:end="17:35">(<init pos:start="17:13" pos:end="17:22"><decl pos:start="17:13" pos:end="17:21"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:17">i</name> <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr></init></decl>;</init> <condition pos:start="17:24" pos:end="17:30"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:24">i</name> <operator pos:start="17:26" pos:end="17:27">&lt;=</operator> <name pos:start="17:29" pos:end="17:29">n</name></expr>;</condition> <incr pos:start="17:32" pos:end="17:34"><expr pos:start="17:32" pos:end="17:34"><name pos:start="17:32" pos:end="17:32">i</name><operator pos:start="17:33" pos:end="17:34">++</operator></expr></incr>)</control> <block pos:start="17:37" pos:end="28:9">{<block_content pos:start="18:13" pos:end="27:13">
            <decl_stmt pos:start="18:13" pos:end="18:26"><decl pos:start="18:13" pos:end="18:25"><type pos:start="18:13" pos:end="18:16"><name pos:start="18:13" pos:end="18:16">bool</name></type> <name pos:start="18:18" pos:end="18:18">f</name> <init pos:start="18:20" pos:end="18:25">= <expr pos:start="18:22" pos:end="18:25"><literal type="boolean" pos:start="18:22" pos:end="18:25">true</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="19:13" pos:end="24:13">for<control pos:start="19:16" pos:end="19:48">(<init pos:start="19:17" pos:end="19:26"><decl pos:start="19:17" pos:end="19:25"><type pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">int</name></type> <name pos:start="19:21" pos:end="19:21">j</name> <init pos:start="19:23" pos:end="19:25">= <expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">0</literal></expr></init></decl>;</init> <condition pos:start="19:28" pos:end="19:43"><expr pos:start="19:28" pos:end="19:42"><name pos:start="19:28" pos:end="19:28">j</name> <operator pos:start="19:30" pos:end="19:30">&lt;</operator> <name pos:start="19:32" pos:end="19:35"><name pos:start="19:32" pos:end="19:32">G</name><index pos:start="19:33" pos:end="19:35">[<expr pos:start="19:34" pos:end="19:34"><name pos:start="19:34" pos:end="19:34">i</name></expr>]</index></name><operator pos:start="19:36" pos:end="19:36">.</operator><call pos:start="19:37" pos:end="19:42"><name pos:start="19:37" pos:end="19:40">size</name><argument_list pos:start="19:41" pos:end="19:42">()</argument_list></call></expr>;</condition> <incr pos:start="19:45" pos:end="19:47"><expr pos:start="19:45" pos:end="19:47"><name pos:start="19:45" pos:end="19:45">j</name><operator pos:start="19:46" pos:end="19:47">++</operator></expr></incr>)</control> <block pos:start="19:50" pos:end="24:13">{<block_content pos:start="20:17" pos:end="23:17">
                <if_stmt pos:start="20:17" pos:end="23:17"><if pos:start="20:17" pos:end="23:17">if<condition pos:start="20:19" pos:end="20:51">(<expr pos:start="20:20" pos:end="20:50"><name pos:start="20:20" pos:end="20:23"><name pos:start="20:20" pos:end="20:20">G</name><index pos:start="20:21" pos:end="20:23">[<expr pos:start="20:22" pos:end="20:22"><name pos:start="20:22" pos:end="20:22">i</name></expr>]</index></name><operator pos:start="20:24" pos:end="20:24">.</operator><call pos:start="20:25" pos:end="20:30"><name pos:start="20:25" pos:end="20:28">size</name><argument_list pos:start="20:29" pos:end="20:30">()</argument_list></call> <operator pos:start="20:32" pos:end="20:32">&lt;</operator> <name pos:start="20:34" pos:end="20:43"><name pos:start="20:34" pos:end="20:34">G</name><index pos:start="20:35" pos:end="20:43">[<expr pos:start="20:36" pos:end="20:42"><name pos:start="20:36" pos:end="20:42"><name pos:start="20:36" pos:end="20:36">G</name><index pos:start="20:37" pos:end="20:39">[<expr pos:start="20:38" pos:end="20:38"><name pos:start="20:38" pos:end="20:38">i</name></expr>]</index><index pos:start="20:40" pos:end="20:42">[<expr pos:start="20:41" pos:end="20:41"><name pos:start="20:41" pos:end="20:41">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="20:44" pos:end="20:44">.</operator><call pos:start="20:45" pos:end="20:50"><name pos:start="20:45" pos:end="20:48">size</name><argument_list pos:start="20:49" pos:end="20:50">()</argument_list></call></expr>)</condition> <block pos:start="20:53" pos:end="23:17">{<block_content pos:start="21:21" pos:end="22:26">
                    <expr_stmt pos:start="21:21" pos:end="21:30"><expr pos:start="21:21" pos:end="21:29"><name pos:start="21:21" pos:end="21:21">f</name> <operator pos:start="21:23" pos:end="21:23">=</operator> <literal type="boolean" pos:start="21:25" pos:end="21:29">false</literal></expr>;</expr_stmt>
                    <break pos:start="22:21" pos:end="22:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="25:13" pos:end="27:13"><if pos:start="25:13" pos:end="27:13">if<condition pos:start="25:15" pos:end="25:53">(<expr pos:start="25:16" pos:end="25:52"><name pos:start="25:16" pos:end="25:16">f</name> <operator pos:start="25:18" pos:end="25:19">&amp;&amp;</operator> <operator pos:start="25:21" pos:end="25:21">(</operator><name pos:start="25:22" pos:end="25:25"><name pos:start="25:22" pos:end="25:22">G</name><index pos:start="25:23" pos:end="25:25">[<expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">i</name></expr>]</index></name><operator pos:start="25:26" pos:end="25:26">.</operator><call pos:start="25:27" pos:end="25:32"><name pos:start="25:27" pos:end="25:30">size</name><argument_list pos:start="25:31" pos:end="25:32">()</argument_list></call> <operator pos:start="25:34" pos:end="25:35">&gt;=</operator> <name pos:start="25:37" pos:end="25:44"><name pos:start="25:37" pos:end="25:37">G</name><index pos:start="25:38" pos:end="25:44">[<expr pos:start="25:39" pos:end="25:43"><name pos:start="25:39" pos:end="25:43"><name pos:start="25:39" pos:end="25:40">fa</name><index pos:start="25:41" pos:end="25:43">[<expr pos:start="25:42" pos:end="25:42"><name pos:start="25:42" pos:end="25:42">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="25:45" pos:end="25:45">.</operator><call pos:start="25:46" pos:end="25:51"><name pos:start="25:46" pos:end="25:49">size</name><argument_list pos:start="25:50" pos:end="25:51">()</argument_list></call><operator pos:start="25:52" pos:end="25:52">)</operator></expr>)</condition> <block pos:start="25:55" pos:end="27:13">{<block_content pos:start="26:17" pos:end="26:22">
                <expr_stmt pos:start="26:17" pos:end="26:22"><expr pos:start="26:17" pos:end="26:21"><name pos:start="26:17" pos:end="26:19">cnt</name><operator pos:start="26:20" pos:end="26:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:12">cout</name> <operator pos:start="29:14" pos:end="29:15">&lt;&lt;</operator> <name pos:start="29:17" pos:end="29:19">cnt</name> <operator pos:start="29:21" pos:end="29:22">&lt;&lt;</operator> <name pos:start="29:24" pos:end="29:27">endl</name></expr>;</expr_stmt>
        <for pos:start="30:9" pos:end="34:9">for<control pos:start="30:12" pos:end="30:35">(<init pos:start="30:13" pos:end="30:22"><decl pos:start="30:13" pos:end="30:21"><type pos:start="30:13" pos:end="30:15"><name pos:start="30:13" pos:end="30:15">int</name></type> <name pos:start="30:17" pos:end="30:17">i</name> <init pos:start="30:19" pos:end="30:21">= <expr pos:start="30:21" pos:end="30:21"><literal type="number" pos:start="30:21" pos:end="30:21">0</literal></expr></init></decl>;</init> <condition pos:start="30:24" pos:end="30:30"><expr pos:start="30:24" pos:end="30:29"><name pos:start="30:24" pos:end="30:24">i</name> <operator pos:start="30:26" pos:end="30:27">&lt;=</operator> <name pos:start="30:29" pos:end="30:29">n</name></expr>;</condition> <incr pos:start="30:32" pos:end="30:34"><expr pos:start="30:32" pos:end="30:34"><name pos:start="30:32" pos:end="30:32">i</name><operator pos:start="30:33" pos:end="30:34">++</operator></expr></incr>)</control> <block pos:start="30:37" pos:end="34:9">{<block_content pos:start="31:13" pos:end="33:37">
            <expr_stmt pos:start="31:13" pos:end="31:38"><expr pos:start="31:13" pos:end="31:37"><call pos:start="31:13" pos:end="31:37"><name pos:start="31:13" pos:end="31:18">memset</name><argument_list pos:start="31:19" pos:end="31:37">(<argument pos:start="31:20" pos:end="31:21"><expr pos:start="31:20" pos:end="31:21"><name pos:start="31:20" pos:end="31:21">fa</name></expr></argument>, <argument pos:start="31:24" pos:end="31:24"><expr pos:start="31:24" pos:end="31:24"><literal type="number" pos:start="31:24" pos:end="31:24">0</literal></expr></argument>, <argument pos:start="31:27" pos:end="31:36"><expr pos:start="31:27" pos:end="31:36"><sizeof pos:start="31:27" pos:end="31:36">sizeof<argument_list pos:start="31:33" pos:end="31:36">(<argument pos:start="31:34" pos:end="31:35"><expr pos:start="31:34" pos:end="31:35"><name pos:start="31:34" pos:end="31:35">fa</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="32:13" pos:end="32:25"><expr pos:start="32:13" pos:end="32:24"><name pos:start="32:13" pos:end="32:16"><name pos:start="32:13" pos:end="32:13">G</name><index pos:start="32:14" pos:end="32:16">[<expr pos:start="32:15" pos:end="32:15"><name pos:start="32:15" pos:end="32:15">i</name></expr>]</index></name><operator pos:start="32:17" pos:end="32:17">.</operator><call pos:start="32:18" pos:end="32:24"><name pos:start="32:18" pos:end="32:22">clear</name><argument_list pos:start="32:23" pos:end="32:24">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="33:13" pos:end="33:37"><expr pos:start="33:13" pos:end="33:36"><call pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:18">vector</name><argument_list type="generic" pos:start="33:19" pos:end="33:23">&lt;<argument pos:start="33:20" pos:end="33:22"><expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:start="33:24" pos:end="33:25">()</argument_list></call><operator pos:start="33:26" pos:end="33:26">.</operator><call pos:start="33:27" pos:end="33:36"><name pos:start="33:27" pos:end="33:30">swap</name><argument_list pos:start="33:31" pos:end="33:36">(<argument pos:start="33:32" pos:end="33:35"><expr pos:start="33:32" pos:end="33:35"><name pos:start="33:32" pos:end="33:35"><name pos:start="33:32" pos:end="33:32">G</name><index pos:start="33:33" pos:end="33:35">[<expr pos:start="33:34" pos:end="33:34"><name pos:start="33:34" pos:end="33:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></while>
    
    
    
    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
