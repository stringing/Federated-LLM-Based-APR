<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/797/797.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<struct pos:start="3:1" pos:end="5:7">struct <name pos:start="3:8" pos:end="3:8">p</name><block pos:start="3:9" pos:end="5:1">{<public type="default" pos:start="4:5" pos:end="4:16">
    <decl_stmt pos:start="4:5" pos:end="4:16"><decl pos:start="4:5" pos:end="4:11"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:11">mad</name></decl>,<decl pos:start="4:13" pos:end="4:15"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:13" pos:end="4:15">bao</name></decl>;</decl_stmt>
</public>}</block><decl pos:start="5:2" pos:end="5:6"><name pos:start="5:2" pos:end="5:6"><name pos:start="5:2" pos:end="5:2">a</name><index pos:start="5:3" pos:end="5:6">[<expr pos:start="5:4" pos:end="5:5"><literal type="number" pos:start="5:4" pos:end="5:5">12</literal></expr>]</index></name></decl>;</struct>
<function pos:start="6:1" pos:end="17:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:5">g</name><parameter_list pos:start="6:6" pos:end="6:13">(<parameter pos:start="6:7" pos:end="6:12"><decl pos:start="6:7" pos:end="6:12"><type pos:start="6:7" pos:end="6:9"><name pos:start="6:7" pos:end="6:9">int</name></type> <name pos:start="6:11" pos:end="6:12">hh</name></decl></parameter>)</parameter_list><block pos:start="6:14" pos:end="17:1">{<block_content pos:start="7:5" pos:end="16:20">
    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name><init pos:start="7:10" pos:end="7:12">=<expr pos:start="7:11" pos:end="7:12"><name pos:start="7:11" pos:end="7:12">hh</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:20"><decl pos:start="8:5" pos:end="8:11"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">i</name><init pos:start="8:10" pos:end="8:11">=<expr pos:start="8:11" pos:end="8:11"><literal type="number" pos:start="8:11" pos:end="8:11">0</literal></expr></init></decl>,<decl pos:start="8:13" pos:end="8:15"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:13" pos:end="8:13">m</name><init pos:start="8:14" pos:end="8:15">=<expr pos:start="8:15" pos:end="8:15"><literal type="number" pos:start="8:15" pos:end="8:15">1</literal></expr></init></decl>,<decl pos:start="8:17" pos:end="8:19"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:17" pos:end="8:17">b</name><init pos:start="8:18" pos:end="8:19">=<expr pos:start="8:19" pos:end="8:19"><literal type="number" pos:start="8:19" pos:end="8:19">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="9:5" pos:end="15:5">while<condition pos:start="9:10" pos:end="9:14">(<expr pos:start="9:11" pos:end="9:13"><name pos:start="9:11" pos:end="9:11">x</name><operator pos:start="9:12" pos:end="9:12">&gt;</operator><literal type="number" pos:start="9:13" pos:end="9:13">0</literal></expr>)</condition><block pos:start="9:15" pos:end="15:5">{<block_content pos:start="10:9" pos:end="14:46">
        <if_stmt pos:start="10:9" pos:end="14:46"><if pos:start="10:9" pos:end="13:9">if<condition pos:start="10:11" pos:end="10:18">(<expr pos:start="10:12" pos:end="10:17"><name pos:start="10:12" pos:end="10:12">x</name><operator pos:start="10:13" pos:end="10:13">%</operator><literal type="number" pos:start="10:14" pos:end="10:14">2</literal><operator pos:start="10:15" pos:end="10:16">==</operator><literal type="number" pos:start="10:17" pos:end="10:17">0</literal></expr>)</condition><block pos:start="10:19" pos:end="13:9">{<block_content pos:start="11:13" pos:end="12:21">
            <expr_stmt pos:start="11:13" pos:end="11:21"><expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:13">x</name><operator pos:start="11:14" pos:end="11:15">/=</operator><literal type="number" pos:start="11:16" pos:end="11:16">2</literal></expr><operator pos:start="11:17" pos:end="11:17">,</operator><expr pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:18">i</name><operator pos:start="11:19" pos:end="11:20">++</operator></expr>;</expr_stmt>
            <continue pos:start="12:13" pos:end="12:21">continue;</continue>
        </block_content>}</block></if>
        <else pos:start="14:9" pos:end="14:46">else<block type="pseudo" pos:start="14:14" pos:end="14:46"><block_content pos:start="14:14" pos:end="14:46"> <expr_stmt pos:start="14:14" pos:end="14:46"><expr pos:start="14:14" pos:end="14:17"><name pos:start="14:14" pos:end="14:14">x</name><operator pos:start="14:15" pos:end="14:16">/=</operator><literal type="number" pos:start="14:17" pos:end="14:17">2</literal></expr><operator pos:start="14:18" pos:end="14:18">,</operator><expr pos:start="14:19" pos:end="14:29"><name pos:start="14:19" pos:end="14:19">m</name><operator pos:start="14:20" pos:end="14:21">*=</operator><name pos:start="14:22" pos:end="14:25"><name pos:start="14:22" pos:end="14:22">a</name><index pos:start="14:23" pos:end="14:25">[<expr pos:start="14:24" pos:end="14:24"><name pos:start="14:24" pos:end="14:24">i</name></expr>]</index></name><operator pos:start="14:26" pos:end="14:26">.</operator><name pos:start="14:27" pos:end="14:29">mad</name></expr><operator pos:start="14:30" pos:end="14:30">,</operator><expr pos:start="14:31" pos:end="14:41"><name pos:start="14:31" pos:end="14:31">b</name><operator pos:start="14:32" pos:end="14:33">+=</operator><name pos:start="14:34" pos:end="14:37"><name pos:start="14:34" pos:end="14:34">a</name><index pos:start="14:35" pos:end="14:37">[<expr pos:start="14:36" pos:end="14:36"><name pos:start="14:36" pos:end="14:36">i</name></expr>]</index></name><operator pos:start="14:38" pos:end="14:38">.</operator><name pos:start="14:39" pos:end="14:41">bao</name></expr><operator pos:start="14:42" pos:end="14:42">,</operator><expr pos:start="14:43" pos:end="14:45"><name pos:start="14:43" pos:end="14:43">i</name><operator pos:start="14:44" pos:end="14:45">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></while>
    <return pos:start="16:5" pos:end="16:20">return <expr pos:start="16:12" pos:end="16:19"><call pos:start="16:12" pos:end="16:19"><name pos:start="16:12" pos:end="16:14">abs</name><argument_list pos:start="16:15" pos:end="16:19">(<argument pos:start="16:16" pos:end="16:18"><expr pos:start="16:16" pos:end="16:18"><name pos:start="16:16" pos:end="16:16">m</name><operator pos:start="16:17" pos:end="16:17">-</operator><name pos:start="16:18" pos:end="16:18">b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function pos:start="18:1" pos:end="29:1"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:8">main</name><parameter_list pos:start="18:9" pos:end="18:10">()</parameter_list><block pos:start="18:11" pos:end="29:1">{<block_content pos:start="19:5" pos:end="28:13">
    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><call pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:11">freopen</name><argument_list pos:start="19:12" pos:end="19:35">(<argument pos:start="19:13" pos:end="19:22"><expr pos:start="19:13" pos:end="19:22"><literal type="string" pos:start="19:13" pos:end="19:22">"stone.in"</literal></expr></argument>, <argument pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><literal type="string" pos:start="19:25" pos:end="19:27">"r"</literal></expr></argument>, <argument pos:start="19:30" pos:end="19:34"><expr pos:start="19:30" pos:end="19:34"><name pos:start="19:30" pos:end="19:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:38"><expr pos:start="20:5" pos:end="20:37"><call pos:start="20:5" pos:end="20:37"><name pos:start="20:5" pos:end="20:11">freopen</name><argument_list pos:start="20:12" pos:end="20:37">(<argument pos:start="20:13" pos:end="20:23"><expr pos:start="20:13" pos:end="20:23"><literal type="string" pos:start="20:13" pos:end="20:23">"stone.out"</literal></expr></argument>, <argument pos:start="20:26" pos:end="20:28"><expr pos:start="20:26" pos:end="20:28"><literal type="string" pos:start="20:26" pos:end="20:28">"w"</literal></expr></argument>, <argument pos:start="20:31" pos:end="20:36"><expr pos:start="20:31" pos:end="20:36"><name pos:start="20:31" pos:end="20:36">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">n</name></decl>,<decl pos:start="21:11" pos:end="21:24"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:11" pos:end="21:13">ans</name><init pos:start="21:14" pos:end="21:24">=<expr pos:start="21:15" pos:end="21:24"><literal type="number" pos:start="21:15" pos:end="21:24">0x3f3f3f3f</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:11"><expr pos:start="22:5" pos:end="22:10"><name pos:start="22:5" pos:end="22:7">cin</name><operator pos:start="22:8" pos:end="22:9">&gt;&gt;</operator><name pos:start="22:10" pos:end="22:10">n</name></expr>;</expr_stmt>
    <for pos:start="23:5" pos:end="23:48">for<control pos:start="23:8" pos:end="23:24">(<init pos:start="23:9" pos:end="23:16"><decl pos:start="23:9" pos:end="23:15"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">i</name><init pos:start="23:14" pos:end="23:15">=<expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr></init></decl>;</init><condition pos:start="23:17" pos:end="23:20"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:17">i</name><operator pos:start="23:18" pos:end="23:18">&lt;</operator><name pos:start="23:19" pos:end="23:19">n</name></expr>;</condition><incr pos:start="23:21" pos:end="23:23"><expr pos:start="23:21" pos:end="23:23"><name pos:start="23:21" pos:end="23:21">i</name><operator pos:start="23:22" pos:end="23:23">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:25" pos:end="23:48"><block_content pos:start="23:25" pos:end="23:48"><expr_stmt pos:start="23:25" pos:end="23:48"><expr pos:start="23:25" pos:end="23:47"><name pos:start="23:25" pos:end="23:27">cin</name><operator pos:start="23:28" pos:end="23:29">&gt;&gt;</operator><name pos:start="23:30" pos:end="23:33"><name pos:start="23:30" pos:end="23:30">a</name><index pos:start="23:31" pos:end="23:33">[<expr pos:start="23:32" pos:end="23:32"><name pos:start="23:32" pos:end="23:32">i</name></expr>]</index></name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:37">mad</name><operator pos:start="23:38" pos:end="23:39">&gt;&gt;</operator><name pos:start="23:40" pos:end="23:43"><name pos:start="23:40" pos:end="23:40">a</name><index pos:start="23:41" pos:end="23:43">[<expr pos:start="23:42" pos:end="23:42"><name pos:start="23:42" pos:end="23:42">i</name></expr>]</index></name><operator pos:start="23:44" pos:end="23:44">.</operator><name pos:start="23:45" pos:end="23:47">bao</name></expr>;</expr_stmt></block_content></block></for>
    <for pos:start="24:5" pos:end="26:5">for<control pos:start="24:8" pos:end="24:32">(<init pos:start="24:9" pos:end="24:16"><decl pos:start="24:9" pos:end="24:15"><type pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:11">int</name></type> <name pos:start="24:13" pos:end="24:13">i</name><init pos:start="24:14" pos:end="24:15">=<expr pos:start="24:15" pos:end="24:15"><literal type="number" pos:start="24:15" pos:end="24:15">1</literal></expr></init></decl>;</init><condition pos:start="24:17" pos:end="24:28"><expr pos:start="24:17" pos:end="24:27"><name pos:start="24:17" pos:end="24:17">i</name><operator pos:start="24:18" pos:end="24:19">&lt;=</operator><literal type="number" pos:start="24:20" pos:end="24:20">1</literal><operator pos:start="24:21" pos:end="24:22">&lt;&lt;</operator><operator pos:start="24:23" pos:end="24:23">(</operator><name pos:start="24:24" pos:end="24:24">n</name><operator pos:start="24:25" pos:end="24:25">+</operator><literal type="number" pos:start="24:26" pos:end="24:26">2</literal><operator pos:start="24:27" pos:end="24:27">)</operator></expr>;</condition><incr pos:start="24:29" pos:end="24:31"><expr pos:start="24:29" pos:end="24:31"><name pos:start="24:29" pos:end="24:29">i</name><operator pos:start="24:30" pos:end="24:31">++</operator></expr></incr>)</control><block pos:start="24:33" pos:end="26:5">{<block_content pos:start="25:9" pos:end="25:26">
        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:11">ans</name><operator pos:start="25:12" pos:end="25:12">=</operator><call pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:15">min</name><argument_list pos:start="25:16" pos:end="25:25">(<argument pos:start="25:17" pos:end="25:19"><expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">ans</name></expr></argument>,<argument pos:start="25:21" pos:end="25:24"><expr pos:start="25:21" pos:end="25:24"><call pos:start="25:21" pos:end="25:24"><name pos:start="25:21" pos:end="25:21">g</name><argument_list pos:start="25:22" pos:end="25:24">(<argument pos:start="25:23" pos:end="25:23"><expr pos:start="25:23" pos:end="25:23"><name pos:start="25:23" pos:end="25:23">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="27:5" pos:end="27:14"><expr pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:8">cout</name><operator pos:start="27:9" pos:end="27:10">&lt;&lt;</operator><name pos:start="27:11" pos:end="27:13">ans</name></expr>;</expr_stmt>
    <return pos:start="28:5" pos:end="28:13">return <expr pos:start="28:12" pos:end="28:12"><literal type="number" pos:start="28:12" pos:end="28:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
