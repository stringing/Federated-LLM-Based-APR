<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/406/406.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="12:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list> <block pos:start="3:12" pos:end="12:1">{<block_content pos:start="4:5" pos:end="11:13">
    <expr_stmt pos:start="4:5" pos:end="4:37"><expr pos:start="4:5" pos:end="4:36"><call pos:start="4:5" pos:end="4:36"><name pos:start="4:5" pos:end="4:11">freopen</name><argument_list pos:start="4:12" pos:end="4:36">(<argument pos:start="4:13" pos:end="4:23"><expr pos:start="4:13" pos:end="4:23"><literal type="string" pos:start="4:13" pos:end="4:23">"bigadd.in"</literal></expr></argument>, <argument pos:start="4:26" pos:end="4:28"><expr pos:start="4:26" pos:end="4:28"><literal type="string" pos:start="4:26" pos:end="4:28">"r"</literal></expr></argument>, <argument pos:start="4:31" pos:end="4:35"><expr pos:start="4:31" pos:end="4:35"><name pos:start="4:31" pos:end="4:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:39"><expr pos:start="5:5" pos:end="5:38"><call pos:start="5:5" pos:end="5:38"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:38">(<argument pos:start="5:13" pos:end="5:24"><expr pos:start="5:13" pos:end="5:24"><literal type="string" pos:start="5:13" pos:end="5:24">"bigadd.out"</literal></expr></argument>, <argument pos:start="5:27" pos:end="5:29"><expr pos:start="5:27" pos:end="5:29"><literal type="string" pos:start="5:27" pos:end="5:29">"w"</literal></expr></argument>, <argument pos:start="5:32" pos:end="5:37"><expr pos:start="5:32" pos:end="5:37"><name pos:start="5:32" pos:end="5:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:16"><decl pos:start="6:5" pos:end="6:15"><type pos:start="6:5" pos:end="6:13"><name pos:start="6:5" pos:end="6:8">long</name> <name pos:start="6:10" pos:end="6:13">long</name></type> <name pos:start="6:15" pos:end="6:15">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:13"><expr pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">cin</name> <operator pos:start="7:9" pos:end="7:10">&gt;&gt;</operator> <name pos:start="7:12" pos:end="7:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:21"><expr pos:start="8:5" pos:end="8:20"><name pos:start="8:5" pos:end="8:8">cout</name> <operator pos:start="8:10" pos:end="8:11">&lt;&lt;</operator> <name pos:start="8:13" pos:end="8:13">n</name> <operator pos:start="8:15" pos:end="8:15">+</operator> <literal type="number" pos:start="8:17" pos:end="8:20">2018</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:18"><expr pos:start="9:5" pos:end="9:17"><call pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:10">fclose</name><argument_list pos:start="9:11" pos:end="9:17">(<argument pos:start="9:12" pos:end="9:16"><expr pos:start="9:12" pos:end="9:16"><name pos:start="9:12" pos:end="9:16">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:19"><expr pos:start="10:5" pos:end="10:18"><call pos:start="10:5" pos:end="10:18"><name pos:start="10:5" pos:end="10:10">fclose</name><argument_list pos:start="10:11" pos:end="10:18">(<argument pos:start="10:12" pos:end="10:17"><expr pos:start="10:12" pos:end="10:17"><name pos:start="10:12" pos:end="10:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="11:5" pos:end="11:13">return <expr pos:start="11:12" pos:end="11:12"><literal type="number" pos:start="11:12" pos:end="11:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
