<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1115/1115.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<function pos:start="5:1" pos:end="37:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list> <block pos:start="5:12" pos:end="37:1">{<block_content pos:start="6:5" pos:end="36:13">
    <decl_stmt pos:start="6:5" pos:end="6:12"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">a</name></decl>,<decl pos:start="6:11" pos:end="6:11"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:11" pos:end="6:11">c</name></decl>;</decl_stmt>
  <decl_stmt pos:start="7:3" pos:end="7:11"><decl pos:start="7:3" pos:end="7:10"><type pos:start="7:3" pos:end="7:8"><name pos:start="7:3" pos:end="7:8">string</name></type> <name pos:start="7:10" pos:end="7:10">b</name></decl>;</decl_stmt>
    
  <decl_stmt pos:start="9:3" pos:end="9:19"><decl pos:start="9:3" pos:end="9:18"><type pos:start="9:3" pos:end="9:16"><name pos:start="9:3" pos:end="9:16"><name pos:start="9:3" pos:end="9:8">vector</name><argument_list type="generic" pos:start="9:9" pos:end="9:16">&lt;<argument pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:15"><name pos:start="9:10" pos:end="9:15">string</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="9:18" pos:end="9:18">v</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:14"><expr pos:start="10:5" pos:end="10:13"><name pos:start="10:5" pos:end="10:7">cin</name> <operator pos:start="10:9" pos:end="10:10">&gt;&gt;</operator>  <name pos:start="10:13" pos:end="10:13">a</name></expr>;</expr_stmt>
  <while pos:start="11:3" pos:end="14:3">while <condition pos:start="11:9" pos:end="11:23">(<expr pos:start="11:10" pos:end="11:22"><name pos:start="11:10" pos:end="11:12">cin</name> <operator pos:start="11:14" pos:end="11:15">&gt;&gt;</operator> <name pos:start="11:17" pos:end="11:17">b</name> <operator pos:start="11:19" pos:end="11:20">&gt;&gt;</operator> <name pos:start="11:22" pos:end="11:22">c</name></expr>)</condition> <block pos:start="11:25" pos:end="14:3">{<block_content pos:start="12:5" pos:end="13:14">
    <expr_stmt pos:start="12:5" pos:end="12:19"><expr pos:start="12:5" pos:end="12:18"><call pos:start="12:5" pos:end="12:18"><name pos:start="12:5" pos:end="12:15"><name pos:start="12:5" pos:end="12:5">v</name><operator pos:start="12:6" pos:end="12:6">.</operator><name pos:start="12:7" pos:end="12:15">push_back</name></name><argument_list pos:start="12:16" pos:end="12:18">(<argument pos:start="12:17" pos:end="12:17"><expr pos:start="12:17" pos:end="12:17"><name pos:start="12:17" pos:end="12:17">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:14"><expr pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:8">cout</name> <operator pos:start="13:10" pos:end="13:11">&lt;&lt;</operator> <name pos:start="13:13" pos:end="13:13">b</name></expr>;</expr_stmt>
  </block_content>}</block></while>
  <for pos:start="15:3" pos:end="34:3">for<control pos:start="15:6" pos:end="15:35">(<init pos:start="15:7" pos:end="15:16"><decl pos:start="15:7" pos:end="15:15"><type pos:start="15:7" pos:end="15:9"><name pos:start="15:7" pos:end="15:9">int</name></type> <name pos:start="15:11" pos:end="15:11">i</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</init> <condition pos:start="15:18" pos:end="15:30"><expr pos:start="15:18" pos:end="15:29"><name pos:start="15:18" pos:end="15:18">i</name> <operator pos:start="15:20" pos:end="15:20">&lt;</operator> <call pos:start="15:22" pos:end="15:29"><name pos:start="15:22" pos:end="15:27"><name pos:start="15:22" pos:end="15:22">v</name><operator pos:start="15:23" pos:end="15:23">.</operator><name pos:start="15:24" pos:end="15:27">size</name></name><argument_list pos:start="15:28" pos:end="15:29">()</argument_list></call></expr>;</condition> <incr pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:32">i</name><operator pos:start="15:33" pos:end="15:34">++</operator></expr></incr>)</control><block pos:start="15:36" pos:end="34:3">{<block_content pos:start="16:7" pos:end="33:8">
      <if_stmt pos:start="16:7" pos:end="33:8"><if pos:start="16:7" pos:end="23:8">if <condition pos:start="16:10" pos:end="16:31">(<expr pos:start="16:11" pos:end="16:30"><name pos:start="16:11" pos:end="16:14"><name pos:start="16:11" pos:end="16:11">v</name><index pos:start="16:12" pos:end="16:14">[<expr pos:start="16:13" pos:end="16:13"><name pos:start="16:13" pos:end="16:13">i</name></expr>]</index></name> <operator pos:start="16:16" pos:end="16:17">==</operator> <literal type="string" pos:start="16:19" pos:end="16:30">"kaomianjin"</literal></expr>)</condition> <block pos:start="16:33" pos:end="23:8">{<block_content pos:start="17:10" pos:end="22:18">
         <if_stmt pos:start="17:10" pos:end="21:10"><if pos:start="17:10" pos:end="19:10">if <condition pos:start="17:13" pos:end="17:50">(<expr pos:start="17:14" pos:end="17:49"><name pos:start="17:14" pos:end="17:14">a</name> <operator pos:start="17:16" pos:end="17:17">&gt;=</operator> <literal type="number" pos:start="17:19" pos:end="17:19">0</literal> <operator pos:start="17:21" pos:end="17:22">&amp;&amp;</operator> <name pos:start="17:24" pos:end="17:31"><name pos:start="17:24" pos:end="17:24">v</name><index pos:start="17:25" pos:end="17:31">[<expr pos:start="17:26" pos:end="17:30"><name pos:start="17:26" pos:end="17:26">i</name> <operator pos:start="17:28" pos:end="17:28">+</operator> <literal type="number" pos:start="17:30" pos:end="17:30">1</literal></expr>]</index></name> <operator pos:start="17:33" pos:end="17:34">!=</operator> <literal type="string" pos:start="17:36" pos:end="17:49">"tingtingting"</literal></expr>)</condition> <block pos:start="17:52" pos:end="19:10">{<block_content pos:start="18:12" pos:end="18:38">
           <expr_stmt pos:start="18:12" pos:end="18:38"><expr pos:start="18:12" pos:end="18:37"><name pos:start="18:12" pos:end="18:15">cout</name> <operator pos:start="18:17" pos:end="18:18">&lt;&lt;</operator> <literal type="string" pos:start="18:20" pos:end="18:37">"Congratulations!"</literal></expr>;</expr_stmt>
         </block_content>}</block></if> <else pos:start="19:12" pos:end="21:10">else <block pos:start="19:17" pos:end="21:10">{<block_content pos:start="20:12" pos:end="20:30">
           <expr_stmt pos:start="20:12" pos:end="20:30"><expr pos:start="20:12" pos:end="20:29"><name pos:start="20:12" pos:end="20:15">cout</name> <operator pos:start="20:17" pos:end="20:18">&lt;&lt;</operator> <literal type="string" pos:start="20:20" pos:end="20:29">"Hahaha.2"</literal></expr>;</expr_stmt>
         </block_content>}</block></else></if_stmt>
         <return pos:start="22:10" pos:end="22:18">return <expr pos:start="22:17" pos:end="22:17"><literal type="number" pos:start="22:17" pos:end="22:17">0</literal></expr>;</return>
       </block_content>}</block></if> <if type="elseif" pos:start="23:10" pos:end="25:8">else if<condition pos:start="23:17" pos:end="23:71">(<expr pos:start="23:18" pos:end="23:69"><name pos:start="23:18" pos:end="23:25"><name pos:start="23:18" pos:end="23:18">v</name><index pos:start="23:19" pos:end="23:25">[<expr pos:start="23:20" pos:end="23:24"><name pos:start="23:20" pos:end="23:20">i</name> <operator pos:start="23:22" pos:end="23:22">+</operator> <literal type="number" pos:start="23:24" pos:end="23:24">1</literal></expr>]</index></name> <operator pos:start="23:27" pos:end="23:28">==</operator> <literal type="string" pos:start="23:30" pos:end="23:43">"tingtingting"</literal> <operator pos:start="23:45" pos:end="23:46">||</operator> <name pos:start="23:48" pos:end="23:51"><name pos:start="23:48" pos:end="23:48">v</name><index pos:start="23:49" pos:end="23:51">[<expr pos:start="23:50" pos:end="23:50"><name pos:start="23:50" pos:end="23:50">i</name></expr>]</index></name> <operator pos:start="23:53" pos:end="23:54">==</operator> <literal type="string" pos:start="23:56" pos:end="23:69">"tingtingting"</literal></expr> )</condition> <block pos:start="23:73" pos:end="25:8">{<block_content>

       </block_content>}</block></if><else pos:start="25:9" pos:end="33:8">else <block pos:start="25:14" pos:end="33:8">{<block_content pos:start="26:10" pos:end="32:10">
         <decl_stmt pos:start="26:10" pos:end="26:15"><decl pos:start="26:10" pos:end="26:14"><type pos:start="26:10" pos:end="26:12"><name pos:start="26:10" pos:end="26:12">int</name></type> <name pos:start="26:14" pos:end="26:14">s</name></decl>;</decl_stmt>
         <expr_stmt pos:start="27:10" pos:end="27:18"><expr pos:start="27:10" pos:end="27:17"><name pos:start="27:10" pos:end="27:12">cin</name> <operator pos:start="27:14" pos:end="27:15">&gt;&gt;</operator> <name pos:start="27:17" pos:end="27:17">s</name></expr>;</expr_stmt>
         <expr_stmt pos:start="28:10" pos:end="28:16"><expr pos:start="28:10" pos:end="28:15"><name pos:start="28:10" pos:end="28:10">a</name> <operator pos:start="28:12" pos:end="28:13">-=</operator> <name pos:start="28:15" pos:end="28:15">s</name></expr>;</expr_stmt>
         <if_stmt pos:start="29:10" pos:end="32:10"><if pos:start="29:10" pos:end="32:10">if <condition pos:start="29:13" pos:end="29:19">(<expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">a</name> <operator pos:start="29:16" pos:end="29:16">&lt;</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>)</condition> <block pos:start="29:21" pos:end="32:10">{<block_content pos:start="30:11" pos:end="30:29">
          <expr_stmt pos:start="30:11" pos:end="30:29"><expr pos:start="30:11" pos:end="30:28"><name pos:start="30:11" pos:end="30:14">cout</name> <operator pos:start="30:16" pos:end="30:17">&lt;&lt;</operator> <literal type="string" pos:start="30:19" pos:end="30:28">"Hahaha.1"</literal></expr>;</expr_stmt>
           
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></else></if_stmt>
  </block_content>}</block></for>

    <return pos:start="36:5" pos:end="36:13">return <expr pos:start="36:12" pos:end="36:12"><literal type="number" pos:start="36:12" pos:end="36:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
