<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1055/1055.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="38:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="38:1">{<block_content pos:start="4:5" pos:end="37:13">
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:11"><expr pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:7">cin</name><operator pos:start="5:8" pos:end="5:9">&gt;&gt;</operator><name pos:start="5:10" pos:end="5:10">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:14"><expr pos:start="6:5" pos:end="6:13"><call pos:start="6:5" pos:end="6:13"><name pos:start="6:5" pos:end="6:11">getchar</name><argument_list pos:start="6:12" pos:end="6:13">()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">string</name></type> <name pos:start="7:12" pos:end="7:12">s</name></decl>;</decl_stmt>
    <while pos:start="8:5" pos:end="36:5">while<condition pos:start="8:10" pos:end="8:14">(<expr pos:start="8:11" pos:end="8:13"><name pos:start="8:11" pos:end="8:11">n</name><operator pos:start="8:12" pos:end="8:13">--</operator></expr>)</condition><block pos:start="8:15" pos:end="36:5">{<block_content pos:start="9:9" pos:end="35:19">
        <expr_stmt pos:start="9:9" pos:end="9:23"><expr pos:start="9:9" pos:end="9:22"><call pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:15">getline</name><argument_list pos:start="9:16" pos:end="9:22">(<argument pos:start="9:17" pos:end="9:19"><expr pos:start="9:17" pos:end="9:19"><name pos:start="9:17" pos:end="9:19">cin</name></expr></argument>,<argument pos:start="9:21" pos:end="9:21"><expr pos:start="9:21" pos:end="9:21"><name pos:start="9:21" pos:end="9:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="10:9" pos:end="10:26"><decl pos:start="10:9" pos:end="10:25"><type pos:start="10:9" pos:end="10:14"><name pos:start="10:9" pos:end="10:14">string</name></type> <name pos:start="10:16" pos:end="10:22"><name pos:start="10:16" pos:end="10:16">f</name><index pos:start="10:17" pos:end="10:22">[<expr pos:start="10:18" pos:end="10:21"><literal type="number" pos:start="10:18" pos:end="10:21">1005</literal></expr>]</index></name><init pos:start="10:23" pos:end="10:25">=<expr pos:start="10:24" pos:end="10:25"><block pos:start="10:24" pos:end="10:25">{}</block></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="11:9" pos:end="11:16"><decl pos:start="11:9" pos:end="11:15"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">x</name><init pos:start="11:14" pos:end="11:15">=<expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="12:9" pos:end="24:9">for<control pos:start="12:12" pos:end="12:35">(<init pos:start="12:13" pos:end="12:20"><decl pos:start="12:13" pos:end="12:19"><type pos:start="12:13" pos:end="12:15"><name pos:start="12:13" pos:end="12:15">int</name></type> <name pos:start="12:17" pos:end="12:17">i</name><init pos:start="12:18" pos:end="12:19">=<expr pos:start="12:19" pos:end="12:19"><literal type="number" pos:start="12:19" pos:end="12:19">0</literal></expr></init></decl>;</init><condition pos:start="12:21" pos:end="12:31"><expr pos:start="12:21" pos:end="12:30"><name pos:start="12:21" pos:end="12:21">i</name><operator pos:start="12:22" pos:end="12:22">&lt;</operator><call pos:start="12:23" pos:end="12:30"><name pos:start="12:23" pos:end="12:28"><name pos:start="12:23" pos:end="12:23">s</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:28">size</name></name><argument_list pos:start="12:29" pos:end="12:30">()</argument_list></call></expr>;</condition><incr pos:start="12:32" pos:end="12:34"><expr pos:start="12:32" pos:end="12:34"><name pos:start="12:32" pos:end="12:32">i</name><operator pos:start="12:33" pos:end="12:34">++</operator></expr></incr>)</control><block pos:start="12:36" pos:end="24:9">{<block_content pos:start="13:13" pos:end="23:13">
            <if_stmt pos:start="13:13" pos:end="15:13"><if pos:start="13:13" pos:end="15:13">if<condition pos:start="13:15" pos:end="13:47">(<expr pos:start="13:16" pos:end="13:46"><name pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:16">s</name><index pos:start="13:17" pos:end="13:19">[<expr pos:start="13:18" pos:end="13:18"><name pos:start="13:18" pos:end="13:18">i</name></expr>]</index></name><operator pos:start="13:20" pos:end="13:21">!=</operator><literal type="char" pos:start="13:22" pos:end="13:24">'I'</literal><operator pos:start="13:25" pos:end="13:26">&amp;&amp;</operator><name pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:27">s</name><index pos:start="13:28" pos:end="13:30">[<expr pos:start="13:29" pos:end="13:29"><name pos:start="13:29" pos:end="13:29">i</name></expr>]</index></name><operator pos:start="13:31" pos:end="13:32">&gt;=</operator><literal type="char" pos:start="13:33" pos:end="13:35">'a'</literal><operator pos:start="13:36" pos:end="13:37">&amp;&amp;</operator><name pos:start="13:38" pos:end="13:41"><name pos:start="13:38" pos:end="13:38">s</name><index pos:start="13:39" pos:end="13:41">[<expr pos:start="13:40" pos:end="13:40"><name pos:start="13:40" pos:end="13:40">i</name></expr>]</index></name><operator pos:start="13:42" pos:end="13:43">&lt;=</operator><literal type="char" pos:start="13:44" pos:end="13:46">'Z'</literal></expr>)</condition><block pos:start="13:48" pos:end="15:13">{<block_content pos:start="14:17" pos:end="14:25">
                <expr_stmt pos:start="14:17" pos:end="14:25"><expr pos:start="14:17" pos:end="14:24"><name pos:start="14:17" pos:end="14:20"><name pos:start="14:17" pos:end="14:17">s</name><index pos:start="14:18" pos:end="14:20">[<expr pos:start="14:19" pos:end="14:19"><name pos:start="14:19" pos:end="14:19">i</name></expr>]</index></name><operator pos:start="14:21" pos:end="14:22">+=</operator><literal type="number" pos:start="14:23" pos:end="14:24">32</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="16:13" pos:end="18:13"><if pos:start="16:13" pos:end="18:13">if<condition pos:start="16:15" pos:end="16:25">(<expr pos:start="16:16" pos:end="16:24"><name pos:start="16:16" pos:end="16:19"><name pos:start="16:16" pos:end="16:16">s</name><index pos:start="16:17" pos:end="16:19">[<expr pos:start="16:18" pos:end="16:18"><name pos:start="16:18" pos:end="16:18">i</name></expr>]</index></name><operator pos:start="16:20" pos:end="16:21">==</operator><literal type="char" pos:start="16:22" pos:end="16:24">'?'</literal></expr>)</condition><block pos:start="16:26" pos:end="18:13">{<block_content pos:start="17:17" pos:end="17:25">
                <expr_stmt pos:start="17:17" pos:end="17:25"><expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:20"><name pos:start="17:17" pos:end="17:17">s</name><index pos:start="17:18" pos:end="17:20">[<expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">i</name></expr>]</index></name><operator pos:start="17:21" pos:end="17:21">=</operator><literal type="char" pos:start="17:22" pos:end="17:24">'!'</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="19:13" pos:end="23:13"><if pos:start="19:13" pos:end="21:13">if<condition pos:start="19:15" pos:end="19:25">(<expr pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:16">s</name><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><name pos:start="19:18" pos:end="19:18">i</name></expr>]</index></name><operator pos:start="19:20" pos:end="19:21">!=</operator><literal type="char" pos:start="19:22" pos:end="19:24">' '</literal></expr>)</condition><block pos:start="19:26" pos:end="21:13">{<block_content pos:start="20:17" pos:end="20:27">
                <expr_stmt pos:start="20:17" pos:end="20:27"><expr pos:start="20:17" pos:end="20:26"><name pos:start="20:17" pos:end="20:20"><name pos:start="20:17" pos:end="20:17">f</name><index pos:start="20:18" pos:end="20:20">[<expr pos:start="20:19" pos:end="20:19"><name pos:start="20:19" pos:end="20:19">x</name></expr>]</index></name><operator pos:start="20:21" pos:end="20:22">+=</operator><name pos:start="20:23" pos:end="20:26"><name pos:start="20:23" pos:end="20:23">s</name><index pos:start="20:24" pos:end="20:26">[<expr pos:start="20:25" pos:end="20:25"><name pos:start="20:25" pos:end="20:25">i</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if><else pos:start="21:14" pos:end="23:13">else<block pos:start="21:18" pos:end="23:13">{<block_content pos:start="22:17" pos:end="22:20">
                <expr_stmt pos:start="22:17" pos:end="22:20"><expr pos:start="22:17" pos:end="22:19"><name pos:start="22:17" pos:end="22:17">x</name><operator pos:start="22:18" pos:end="22:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    <for pos:start="25:5" pos:end="34:5">for<control pos:start="25:8" pos:end="25:25">(<init pos:start="25:9" pos:end="25:16"><decl pos:start="25:9" pos:end="25:15"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">i</name><init pos:start="25:14" pos:end="25:15">=<expr pos:start="25:15" pos:end="25:15"><literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr></init></decl>;</init><condition pos:start="25:17" pos:end="25:21"><expr pos:start="25:17" pos:end="25:20"><name pos:start="25:17" pos:end="25:17">i</name><operator pos:start="25:18" pos:end="25:19">&lt;=</operator><name pos:start="25:20" pos:end="25:20">x</name></expr>;</condition><incr pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:22">i</name><operator pos:start="25:23" pos:end="25:24">++</operator></expr></incr>)</control><block pos:start="25:26" pos:end="34:5">{<block_content pos:start="26:9" pos:end="33:9">
        <if_stmt pos:start="26:9" pos:end="33:9"><if pos:start="26:9" pos:end="29:9">if<condition pos:start="26:11" pos:end="26:55">(<expr pos:start="26:12" pos:end="26:54"><operator pos:start="26:12" pos:end="26:12">(</operator><name pos:start="26:13" pos:end="26:16"><name pos:start="26:13" pos:end="26:13">f</name><index pos:start="26:14" pos:end="26:16">[<expr pos:start="26:15" pos:end="26:15"><name pos:start="26:15" pos:end="26:15">i</name></expr>]</index></name><operator pos:start="26:17" pos:end="26:18">==</operator><literal type="string" pos:start="26:19" pos:end="26:23">"can"</literal><operator pos:start="26:24" pos:end="26:25">||</operator><name pos:start="26:26" pos:end="26:29"><name pos:start="26:26" pos:end="26:26">f</name><index pos:start="26:27" pos:end="26:29">[<expr pos:start="26:28" pos:end="26:28"><name pos:start="26:28" pos:end="26:28">i</name></expr>]</index></name><operator pos:start="26:30" pos:end="26:31">==</operator><literal type="string" pos:start="26:32" pos:end="26:38">"could"</literal><operator pos:start="26:39" pos:end="26:39">)</operator><operator pos:start="26:40" pos:end="26:41">&amp;&amp;</operator><name pos:start="26:42" pos:end="26:47"><name pos:start="26:42" pos:end="26:42">f</name><index pos:start="26:43" pos:end="26:47">[<expr pos:start="26:44" pos:end="26:46"><name pos:start="26:44" pos:end="26:44">i</name><operator pos:start="26:45" pos:end="26:45">+</operator><literal type="number" pos:start="26:46" pos:end="26:46">1</literal></expr>]</index></name><operator pos:start="26:48" pos:end="26:49">==</operator><literal type="string" pos:start="26:50" pos:end="26:54">"you"</literal></expr>)</condition><block pos:start="26:56" pos:end="29:9">{<block_content pos:start="27:13" pos:end="28:16">
            <expr_stmt pos:start="27:13" pos:end="27:38"><expr pos:start="27:13" pos:end="27:37"><name pos:start="27:13" pos:end="27:16">cout</name><operator pos:start="27:17" pos:end="27:18">&lt;&lt;</operator><literal type="string" pos:start="27:19" pos:end="27:21">"I"</literal><operator pos:start="27:22" pos:end="27:23">&lt;&lt;</operator><literal type="string" pos:start="27:24" pos:end="27:26">" "</literal><operator pos:start="27:27" pos:end="27:28">&lt;&lt;</operator><name pos:start="27:29" pos:end="27:32"><name pos:start="27:29" pos:end="27:29">f</name><index pos:start="27:30" pos:end="27:32">[<expr pos:start="27:31" pos:end="27:31"><name pos:start="27:31" pos:end="27:31">i</name></expr>]</index></name><operator pos:start="27:33" pos:end="27:34">&lt;&lt;</operator><literal type="string" pos:start="27:35" pos:end="27:37">" "</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="28:13" pos:end="28:16"><expr pos:start="28:13" pos:end="28:15"><name pos:start="28:13" pos:end="28:13">i</name><operator pos:start="28:14" pos:end="28:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="29:10" pos:end="31:9">else if<condition pos:start="29:17" pos:end="29:39">(<expr pos:start="29:18" pos:end="29:38"><name pos:start="29:18" pos:end="29:21"><name pos:start="29:18" pos:end="29:18">f</name><index pos:start="29:19" pos:end="29:21">[<expr pos:start="29:20" pos:end="29:20"><name pos:start="29:20" pos:end="29:20">i</name></expr>]</index></name><operator pos:start="29:22" pos:end="29:23">==</operator><literal type="string" pos:start="29:24" pos:end="29:26">"I"</literal><operator pos:start="29:27" pos:end="29:28">||</operator><name pos:start="29:29" pos:end="29:32"><name pos:start="29:29" pos:end="29:29">f</name><index pos:start="29:30" pos:end="29:32">[<expr pos:start="29:31" pos:end="29:31"><name pos:start="29:31" pos:end="29:31">i</name></expr>]</index></name><operator pos:start="29:33" pos:end="29:34">==</operator><literal type="string" pos:start="29:35" pos:end="29:38">"me"</literal></expr>)</condition><block pos:start="29:40" pos:end="31:9">{<block_content pos:start="30:13" pos:end="30:29">
            <expr_stmt pos:start="30:13" pos:end="30:29"><expr pos:start="30:13" pos:end="30:28"><name pos:start="30:13" pos:end="30:16">cout</name><operator pos:start="30:17" pos:end="30:18">&lt;&lt;</operator><literal type="string" pos:start="30:19" pos:end="30:23">"you"</literal><operator pos:start="30:24" pos:end="30:25">&lt;&lt;</operator><literal type="string" pos:start="30:26" pos:end="30:28">" "</literal></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="31:10" pos:end="33:9">else<block pos:start="31:14" pos:end="33:9">{<block_content pos:start="32:13" pos:end="32:28">
            <expr_stmt pos:start="32:13" pos:end="32:28"><expr pos:start="32:13" pos:end="32:27"><name pos:start="32:13" pos:end="32:16">cout</name><operator pos:start="32:17" pos:end="32:18">&lt;&lt;</operator><name pos:start="32:19" pos:end="32:22"><name pos:start="32:19" pos:end="32:19">f</name><index pos:start="32:20" pos:end="32:22">[<expr pos:start="32:21" pos:end="32:21"><name pos:start="32:21" pos:end="32:21">i</name></expr>]</index></name><operator pos:start="32:23" pos:end="32:24">&lt;&lt;</operator><literal type="string" pos:start="32:25" pos:end="32:27">" "</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
        <expr_stmt pos:start="35:9" pos:end="35:19"><expr pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:12">cout</name><operator pos:start="35:13" pos:end="35:14">&lt;&lt;</operator><name pos:start="35:15" pos:end="35:18">endl</name></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
