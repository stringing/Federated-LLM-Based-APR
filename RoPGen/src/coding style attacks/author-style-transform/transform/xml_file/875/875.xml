<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/875/875.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="25:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list> <block pos:start="3:12" pos:end="25:1">{<block_content pos:start="4:5" pos:end="24:25">
    <expr_stmt pos:start="4:5" pos:end="4:39"><expr pos:start="4:5" pos:end="4:38"><call pos:start="4:5" pos:end="4:38"><name pos:start="4:5" pos:end="4:11">freopen</name><argument_list pos:start="4:12" pos:end="4:38">(<argument pos:start="4:13" pos:end="4:25"><expr pos:start="4:13" pos:end="4:25"><literal type="string" pos:start="4:13" pos:end="4:25">"elevator.in"</literal></expr></argument>, <argument pos:start="4:28" pos:end="4:30"><expr pos:start="4:28" pos:end="4:30"><literal type="string" pos:start="4:28" pos:end="4:30">"r"</literal></expr></argument>, <argument pos:start="4:33" pos:end="4:37"><expr pos:start="4:33" pos:end="4:37"><name pos:start="4:33" pos:end="4:37">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:41"><expr pos:start="5:5" pos:end="5:40"><call pos:start="5:5" pos:end="5:40"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:40">(<argument pos:start="5:13" pos:end="5:26"><expr pos:start="5:13" pos:end="5:26"><literal type="string" pos:start="5:13" pos:end="5:26">"elevator.out"</literal></expr></argument>, <argument pos:start="5:29" pos:end="5:31"><expr pos:start="5:29" pos:end="5:31"><literal type="string" pos:start="5:29" pos:end="5:31">"w"</literal></expr></argument>, <argument pos:start="5:34" pos:end="5:39"><expr pos:start="5:34" pos:end="5:39"><name pos:start="5:34" pos:end="5:39">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:33"><decl pos:start="6:5" pos:end="6:23"><type pos:start="6:5" pos:end="6:13"><name pos:start="6:5" pos:end="6:8">long</name> <name pos:start="6:10" pos:end="6:13">long</name></type> <name pos:start="6:15" pos:end="6:23"><name pos:start="6:15" pos:end="6:15">a</name><index pos:start="6:16" pos:end="6:23">[<expr pos:start="6:17" pos:end="6:22"><literal type="number" pos:start="6:17" pos:end="6:22">100005</literal></expr>]</index></name></decl>, <decl pos:start="6:26" pos:end="6:26"><type ref="prev" pos:start="6:5" pos:end="6:13"/><name pos:start="6:26" pos:end="6:26">n</name></decl>, <decl pos:start="6:29" pos:end="6:32"><type ref="prev" pos:start="6:5" pos:end="6:13"/><name pos:start="6:29" pos:end="6:32">maxn</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:13"><expr pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">cin</name> <operator pos:start="7:9" pos:end="7:10">&gt;&gt;</operator> <name pos:start="7:12" pos:end="7:12">n</name></expr>;</expr_stmt>
    <for pos:start="8:5" pos:end="10:5">for <control pos:start="8:9" pos:end="8:31">(<init pos:start="8:10" pos:end="8:19"><decl pos:start="8:10" pos:end="8:18"><type pos:start="8:10" pos:end="8:12"><name pos:start="8:10" pos:end="8:12">int</name></type> <name pos:start="8:14" pos:end="8:14">i</name> <init pos:start="8:16" pos:end="8:18">= <expr pos:start="8:18" pos:end="8:18"><literal type="number" pos:start="8:18" pos:end="8:18">0</literal></expr></init></decl>;</init> <condition pos:start="8:21" pos:end="8:26"><expr pos:start="8:21" pos:end="8:25"><name pos:start="8:21" pos:end="8:21">i</name> <operator pos:start="8:23" pos:end="8:23">&lt;</operator> <name pos:start="8:25" pos:end="8:25">n</name></expr>;</condition> <incr pos:start="8:28" pos:end="8:30"><expr pos:start="8:28" pos:end="8:30"><name pos:start="8:28" pos:end="8:28">i</name><operator pos:start="8:29" pos:end="8:30">++</operator></expr></incr>)</control> <block pos:start="8:33" pos:end="10:5">{<block_content pos:start="9:9" pos:end="9:20">
        <expr_stmt pos:start="9:9" pos:end="9:20"><expr pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:11">cin</name> <operator pos:start="9:13" pos:end="9:14">&gt;&gt;</operator> <name pos:start="9:16" pos:end="9:19"><name pos:start="9:16" pos:end="9:16">a</name><index pos:start="9:17" pos:end="9:19">[<expr pos:start="9:18" pos:end="9:18"><name pos:start="9:18" pos:end="9:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="11:5" pos:end="11:19"><expr pos:start="11:5" pos:end="11:18"><call pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:8">sort</name><argument_list pos:start="11:9" pos:end="11:18">(<argument pos:start="11:10" pos:end="11:10"><expr pos:start="11:10" pos:end="11:10"><name pos:start="11:10" pos:end="11:10">a</name></expr></argument>, <argument pos:start="11:13" pos:end="11:17"><expr pos:start="11:13" pos:end="11:17"><name pos:start="11:13" pos:end="11:13">a</name> <operator pos:start="11:15" pos:end="11:15">+</operator> <name pos:start="11:17" pos:end="11:17">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:20"><expr pos:start="12:5" pos:end="12:19"><name pos:start="12:5" pos:end="12:8">maxn</name> <operator pos:start="12:10" pos:end="12:10">=</operator> <name pos:start="12:12" pos:end="12:19"><name pos:start="12:12" pos:end="12:12">a</name><index pos:start="12:13" pos:end="12:19">[<expr pos:start="12:14" pos:end="12:18"><name pos:start="12:14" pos:end="12:14">n</name> <operator pos:start="12:16" pos:end="12:16">-</operator> <literal type="number" pos:start="12:18" pos:end="12:18">1</literal></expr>]</index></name></expr>;</expr_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ptr</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>, <decl pos:start="13:18" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:21">time</name> <init pos:start="13:23" pos:end="13:25">= <expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="14:5" pos:end="23:5">for <control pos:start="14:9" pos:end="14:35">(<init pos:start="14:10" pos:end="14:19"><decl pos:start="14:10" pos:end="14:18"><type pos:start="14:10" pos:end="14:12"><name pos:start="14:10" pos:end="14:12">int</name></type> <name pos:start="14:14" pos:end="14:14">i</name> <init pos:start="14:16" pos:end="14:18">= <expr pos:start="14:18" pos:end="14:18"><literal type="number" pos:start="14:18" pos:end="14:18">1</literal></expr></init></decl>;</init> <condition pos:start="14:21" pos:end="14:30"><expr pos:start="14:21" pos:end="14:29"><name pos:start="14:21" pos:end="14:21">i</name> <operator pos:start="14:23" pos:end="14:24">&lt;=</operator> <name pos:start="14:26" pos:end="14:29">maxn</name></expr>;</condition> <incr pos:start="14:32" pos:end="14:34"><expr pos:start="14:32" pos:end="14:34"><name pos:start="14:32" pos:end="14:32">i</name><operator pos:start="14:33" pos:end="14:34">++</operator></expr></incr>)</control> <block pos:start="14:37" pos:end="23:5">{<block_content pos:start="15:9" pos:end="22:9">
        <expr_stmt pos:start="15:9" pos:end="15:18"><expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:12">time</name> <operator pos:start="15:14" pos:end="15:15">+=</operator> <literal type="number" pos:start="15:17" pos:end="15:17">5</literal></expr>;</expr_stmt>
        <if_stmt pos:start="16:9" pos:end="22:9"><if pos:start="16:9" pos:end="22:9">if <condition pos:start="16:12" pos:end="16:24">(<expr pos:start="16:13" pos:end="16:23"><name pos:start="16:13" pos:end="16:18"><name pos:start="16:13" pos:end="16:13">a</name><index pos:start="16:14" pos:end="16:18">[<expr pos:start="16:15" pos:end="16:17"><name pos:start="16:15" pos:end="16:17">ptr</name></expr>]</index></name> <operator pos:start="16:20" pos:end="16:21">==</operator> <name pos:start="16:23" pos:end="16:23">i</name></expr>)</condition> <block pos:start="16:26" pos:end="22:9">{<block_content pos:start="17:13" pos:end="21:13">
            <expr_stmt pos:start="17:13" pos:end="17:22"><expr pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:16">time</name> <operator pos:start="17:18" pos:end="17:19">+=</operator> <literal type="number" pos:start="17:21" pos:end="17:21">3</literal></expr>;</expr_stmt>
            <while pos:start="18:13" pos:end="21:13">while <condition pos:start="18:19" pos:end="18:31">(<expr pos:start="18:20" pos:end="18:30"><name pos:start="18:20" pos:end="18:25"><name pos:start="18:20" pos:end="18:20">a</name><index pos:start="18:21" pos:end="18:25">[<expr pos:start="18:22" pos:end="18:24"><name pos:start="18:22" pos:end="18:24">ptr</name></expr>]</index></name> <operator pos:start="18:27" pos:end="18:28">==</operator> <name pos:start="18:30" pos:end="18:30">i</name></expr>)</condition> <block pos:start="18:33" pos:end="21:13">{<block_content pos:start="19:17" pos:end="20:23">
                <expr_stmt pos:start="19:17" pos:end="19:26"><expr pos:start="19:17" pos:end="19:25"><name pos:start="19:17" pos:end="19:20">time</name> <operator pos:start="19:22" pos:end="19:23">+=</operator> <literal type="number" pos:start="19:25" pos:end="19:25">2</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="20:17" pos:end="20:23"><expr pos:start="20:17" pos:end="20:22"><name pos:start="20:17" pos:end="20:19">ptr</name> <operator pos:start="20:21" pos:end="20:22">++</operator></expr>;</expr_stmt>
            </block_content>}</block></while>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="24:5" pos:end="24:25"><expr pos:start="24:5" pos:end="24:24"><name pos:start="24:5" pos:end="24:8">cout</name> <operator pos:start="24:10" pos:end="24:11">&lt;&lt;</operator> <name pos:start="24:13" pos:end="24:16">time</name> <operator pos:start="24:18" pos:end="24:19">&lt;&lt;</operator> <name pos:start="24:21" pos:end="24:24">endl</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
