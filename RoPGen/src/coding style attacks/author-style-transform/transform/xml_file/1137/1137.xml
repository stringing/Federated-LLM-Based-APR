<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1137/1137.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="34:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list> <block pos:start="3:12" pos:end="34:1">{<block_content pos:start="4:5" pos:end="33:13">
    <decl_stmt pos:start="4:5" pos:end="4:15"><decl pos:start="4:5" pos:end="4:14"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:14"><name pos:start="4:9" pos:end="4:9">q</name><index pos:start="4:10" pos:end="4:14">[<expr pos:start="4:11" pos:end="4:13"><literal type="number" pos:start="4:11" pos:end="4:13">105</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">m</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:18"><expr pos:start="6:5" pos:end="6:17"><name pos:start="6:5" pos:end="6:7">cin</name> <operator pos:start="6:9" pos:end="6:10">&gt;&gt;</operator> <name pos:start="6:12" pos:end="6:12">n</name> <operator pos:start="6:14" pos:end="6:15">&gt;&gt;</operator> <name pos:start="6:17" pos:end="6:17">m</name></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">l</name> <init pos:start="7:11" pos:end="7:13">= <expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr></init></decl>, <decl pos:start="7:16" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:16">r</name> <init pos:start="7:18" pos:end="7:20">= <expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="8:5" pos:end="28:5">for<control pos:start="8:8" pos:end="8:30">(<init pos:start="8:9" pos:end="8:18"><decl pos:start="8:9" pos:end="8:17"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:13">i</name> <init pos:start="8:15" pos:end="8:17">= <expr pos:start="8:17" pos:end="8:17"><literal type="number" pos:start="8:17" pos:end="8:17">0</literal></expr></init></decl>;</init> <condition pos:start="8:20" pos:end="8:25"><expr pos:start="8:20" pos:end="8:24"><name pos:start="8:20" pos:end="8:20">i</name> <operator pos:start="8:22" pos:end="8:22">&lt;</operator> <name pos:start="8:24" pos:end="8:24">n</name></expr>;</condition> <incr pos:start="8:27" pos:end="8:29"><expr pos:start="8:27" pos:end="8:29"><name pos:start="8:27" pos:end="8:27">i</name><operator pos:start="8:28" pos:end="8:29">++</operator></expr></incr>)</control> <block pos:start="8:32" pos:end="28:5">{<block_content pos:start="9:9" pos:end="27:9">
        <decl_stmt pos:start="9:9" pos:end="9:14"><decl pos:start="9:9" pos:end="9:13"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">x</name></decl>;</decl_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:17"><expr pos:start="10:9" pos:end="10:16"><name pos:start="10:9" pos:end="10:11">cin</name> <operator pos:start="10:13" pos:end="10:14">&gt;&gt;</operator> <name pos:start="10:16" pos:end="10:16">x</name></expr>;</expr_stmt>
        <decl_stmt pos:start="11:9" pos:end="11:21"><decl pos:start="11:9" pos:end="11:20"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:16">flag</name> <init pos:start="11:18" pos:end="11:20">= <expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="12:9" pos:end="17:9">for <control pos:start="12:13" pos:end="12:35">(<init pos:start="12:14" pos:end="12:23"><decl pos:start="12:14" pos:end="12:22"><type pos:start="12:14" pos:end="12:16"><name pos:start="12:14" pos:end="12:16">int</name></type> <name pos:start="12:18" pos:end="12:18">j</name> <init pos:start="12:20" pos:end="12:22">= <expr pos:start="12:22" pos:end="12:22"><name pos:start="12:22" pos:end="12:22">l</name></expr></init></decl>;</init> <condition pos:start="12:25" pos:end="12:30"><expr pos:start="12:25" pos:end="12:29"><name pos:start="12:25" pos:end="12:25">j</name> <operator pos:start="12:27" pos:end="12:27">&lt;</operator> <name pos:start="12:29" pos:end="12:29">r</name></expr>;</condition> <incr pos:start="12:32" pos:end="12:34"><expr pos:start="12:32" pos:end="12:34"><name pos:start="12:32" pos:end="12:32">j</name><operator pos:start="12:33" pos:end="12:34">++</operator></expr></incr>)</control> <block pos:start="12:37" pos:end="17:9">{<block_content pos:start="13:13" pos:end="16:13">
            <if_stmt pos:start="13:13" pos:end="16:13"><if pos:start="13:13" pos:end="16:13">if <condition pos:start="13:16" pos:end="13:26">(<expr pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:20"><name pos:start="13:17" pos:end="13:17">q</name><index pos:start="13:18" pos:end="13:20">[<expr pos:start="13:19" pos:end="13:19"><name pos:start="13:19" pos:end="13:19">j</name></expr>]</index></name> <operator pos:start="13:22" pos:end="13:23">==</operator> <name pos:start="13:25" pos:end="13:25">x</name></expr>)</condition><block pos:start="13:27" pos:end="16:13">{<block_content pos:start="14:17" pos:end="15:22">
                <expr_stmt pos:start="14:17" pos:end="14:25"><expr pos:start="14:17" pos:end="14:24"><name pos:start="14:17" pos:end="14:20">flag</name> <operator pos:start="14:22" pos:end="14:22">=</operator> <literal type="number" pos:start="14:24" pos:end="14:24">1</literal></expr>;</expr_stmt>
                <break pos:start="15:17" pos:end="15:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <if_stmt pos:start="18:9" pos:end="27:9"><if pos:start="18:9" pos:end="27:9">if <condition pos:start="18:12" pos:end="18:18">(<expr pos:start="18:13" pos:end="18:17"><operator pos:start="18:13" pos:end="18:13">!</operator><name pos:start="18:14" pos:end="18:17">flag</name></expr>)</condition> <block pos:start="18:20" pos:end="27:9">{<block_content pos:start="19:13" pos:end="26:13">
            <if_stmt pos:start="19:13" pos:end="26:13"><if pos:start="19:13" pos:end="22:13">if<condition pos:start="19:15" pos:end="19:25">(<expr pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:16">r</name> <operator pos:start="19:18" pos:end="19:18">-</operator> <name pos:start="19:20" pos:end="19:20">l</name> <operator pos:start="19:22" pos:end="19:22">&lt;</operator> <name pos:start="19:24" pos:end="19:24">m</name></expr>)</condition><block pos:start="19:26" pos:end="22:13">{<block_content pos:start="20:17" pos:end="21:20">
                <expr_stmt pos:start="20:17" pos:end="20:25"><expr pos:start="20:17" pos:end="20:24"><name pos:start="20:17" pos:end="20:20"><name pos:start="20:17" pos:end="20:17">q</name><index pos:start="20:18" pos:end="20:20">[<expr pos:start="20:19" pos:end="20:19"><name pos:start="20:19" pos:end="20:19">r</name></expr>]</index></name> <operator pos:start="20:22" pos:end="20:22">=</operator> <name pos:start="20:24" pos:end="20:24">x</name></expr>;</expr_stmt>
                <expr_stmt pos:start="21:17" pos:end="21:20"><expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:17">r</name><operator pos:start="21:18" pos:end="21:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="22:15" pos:end="26:13">else <block pos:start="22:20" pos:end="26:13">{<block_content pos:start="23:17" pos:end="25:20">
                <expr_stmt pos:start="23:17" pos:end="23:20"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:17">l</name><operator pos:start="23:18" pos:end="23:19">++</operator></expr>;</expr_stmt>
                <expr_stmt pos:start="24:17" pos:end="24:25"><expr pos:start="24:17" pos:end="24:24"><name pos:start="24:17" pos:end="24:20"><name pos:start="24:17" pos:end="24:17">q</name><index pos:start="24:18" pos:end="24:20">[<expr pos:start="24:19" pos:end="24:19"><name pos:start="24:19" pos:end="24:19">r</name></expr>]</index></name> <operator pos:start="24:22" pos:end="24:22">=</operator> <name pos:start="24:24" pos:end="24:24">x</name></expr>;</expr_stmt>
                <expr_stmt pos:start="25:17" pos:end="25:20"><expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:17">r</name><operator pos:start="25:18" pos:end="25:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="29:5" pos:end="31:5">for <control pos:start="29:9" pos:end="29:30">(<init pos:start="29:10" pos:end="29:19"><decl pos:start="29:10" pos:end="29:18"><type pos:start="29:10" pos:end="29:12"><name pos:start="29:10" pos:end="29:12">int</name></type> <name pos:start="29:14" pos:end="29:14">i</name> <init pos:start="29:16" pos:end="29:18">= <expr pos:start="29:18" pos:end="29:18"><name pos:start="29:18" pos:end="29:18">l</name></expr></init></decl>;</init><condition pos:start="29:20" pos:end="29:25"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:20">i</name> <operator pos:start="29:22" pos:end="29:22">&lt;</operator> <name pos:start="29:24" pos:end="29:24">r</name></expr>;</condition> <incr pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:27">i</name><operator pos:start="29:28" pos:end="29:29">++</operator></expr></incr>)</control> <block pos:start="29:32" pos:end="31:5">{<block_content pos:start="30:9" pos:end="30:29">
        <expr_stmt pos:start="30:9" pos:end="30:29"><expr pos:start="30:9" pos:end="30:28"><name pos:start="30:9" pos:end="30:12">cout</name> <operator pos:start="30:14" pos:end="30:15">&lt;&lt;</operator> <name pos:start="30:17" pos:end="30:20"><name pos:start="30:17" pos:end="30:17">q</name><index pos:start="30:18" pos:end="30:20">[<expr pos:start="30:19" pos:end="30:19"><name pos:start="30:19" pos:end="30:19">i</name></expr>]</index></name> <operator pos:start="30:22" pos:end="30:23">&lt;&lt;</operator> <name pos:start="30:25" pos:end="30:28">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    
    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
