<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/514/514.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:16"><decl pos:start="3:1" pos:end="3:9"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:9"><name pos:start="3:5" pos:end="3:5">m</name><index pos:start="3:6" pos:end="3:9">[<expr pos:start="3:7" pos:end="3:8"><literal type="number" pos:start="3:7" pos:end="3:8">35</literal></expr>]</index></name></decl>,<decl pos:start="3:11" pos:end="3:15"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:11" pos:end="3:15"><name pos:start="3:11" pos:end="3:11">b</name><index pos:start="3:12" pos:end="3:15">[<expr pos:start="3:13" pos:end="3:14"><literal type="number" pos:start="3:13" pos:end="3:14">35</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:24"><decl pos:start="4:1" pos:end="4:13"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:13"><name pos:start="4:5" pos:end="4:9">treel</name><index pos:start="4:10" pos:end="4:13">[<expr pos:start="4:11" pos:end="4:12"><literal type="number" pos:start="4:11" pos:end="4:12">35</literal></expr>]</index></name></decl>,<decl pos:start="4:15" pos:end="4:23"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:15" pos:end="4:23"><name pos:start="4:15" pos:end="4:19">treer</name><index pos:start="4:20" pos:end="4:23">[<expr pos:start="4:21" pos:end="4:22"><literal type="number" pos:start="4:21" pos:end="4:22">35</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:6"><decl pos:start="5:1" pos:end="5:5"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:5">n</name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="19:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">void</name></type> <name pos:start="6:6" pos:end="6:8">dfs</name><parameter_list pos:start="6:9" pos:end="6:21">(<parameter pos:start="6:10" pos:end="6:14"><decl pos:start="6:10" pos:end="6:14"><type pos:start="6:10" pos:end="6:14"><name pos:start="6:10" pos:end="6:12">int</name></type> <name pos:start="6:14" pos:end="6:14">l</name></decl></parameter>,<parameter pos:start="6:16" pos:end="6:20"><decl pos:start="6:16" pos:end="6:20"><type pos:start="6:16" pos:end="6:20"><name pos:start="6:16" pos:end="6:18">int</name></type> <name pos:start="6:20" pos:end="6:20">r</name></decl></parameter>)</parameter_list><block pos:start="6:22" pos:end="19:1">{<block_content pos:start="7:5" pos:end="18:11">
    <if_stmt pos:start="7:5" pos:end="17:5"><if pos:start="7:5" pos:end="17:5">if<condition pos:start="7:7" pos:end="7:12">(<expr pos:start="7:8" pos:end="7:11"><name pos:start="7:8" pos:end="7:8">l</name><operator pos:start="7:9" pos:end="7:10">&lt;=</operator><name pos:start="7:11" pos:end="7:11">r</name></expr>)</condition><block pos:start="7:13" pos:end="17:5">{<block_content pos:start="8:9" pos:end="16:9">
        <for pos:start="8:9" pos:end="16:9">for<control pos:start="8:12" pos:end="8:29">(<init pos:start="8:13" pos:end="8:20"><decl pos:start="8:13" pos:end="8:19"><type pos:start="8:13" pos:end="8:15"><name pos:start="8:13" pos:end="8:15">int</name></type> <name pos:start="8:17" pos:end="8:17">i</name><init pos:start="8:18" pos:end="8:19">=<expr pos:start="8:19" pos:end="8:19"><name pos:start="8:19" pos:end="8:19">l</name></expr></init></decl>;</init><condition pos:start="8:21" pos:end="8:25"><expr pos:start="8:21" pos:end="8:24"><name pos:start="8:21" pos:end="8:21">i</name><operator pos:start="8:22" pos:end="8:23">&lt;=</operator><name pos:start="8:24" pos:end="8:24">r</name></expr>;</condition><incr pos:start="8:26" pos:end="8:28"><expr pos:start="8:26" pos:end="8:28"><name pos:start="8:26" pos:end="8:26">i</name><operator pos:start="8:27" pos:end="8:28">++</operator></expr></incr>)</control><block pos:start="8:30" pos:end="16:9">{<block_content pos:start="9:13" pos:end="15:13">
            <if_stmt pos:start="9:13" pos:end="15:13"><if pos:start="9:13" pos:end="15:13">if<condition pos:start="9:15" pos:end="9:26">(<expr pos:start="9:16" pos:end="9:25"><name pos:start="9:16" pos:end="9:19"><name pos:start="9:16" pos:end="9:16">m</name><index pos:start="9:17" pos:end="9:19">[<expr pos:start="9:18" pos:end="9:18"><name pos:start="9:18" pos:end="9:18">i</name></expr>]</index></name><operator pos:start="9:20" pos:end="9:21">==</operator><name pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:22">b</name><index pos:start="9:23" pos:end="9:25">[<expr pos:start="9:24" pos:end="9:24"><name pos:start="9:24" pos:end="9:24">r</name></expr>]</index></name></expr>)</condition><block pos:start="9:27" pos:end="15:13">{<block_content pos:start="10:17" pos:end="14:22">
                <expr_stmt pos:start="10:17" pos:end="10:35"><expr pos:start="10:17" pos:end="10:34"><name pos:start="10:17" pos:end="10:27"><name pos:start="10:17" pos:end="10:21">treel</name><index pos:start="10:22" pos:end="10:27">[<expr pos:start="10:23" pos:end="10:26"><name pos:start="10:23" pos:end="10:26"><name pos:start="10:23" pos:end="10:23">m</name><index pos:start="10:24" pos:end="10:26">[<expr pos:start="10:25" pos:end="10:25"><name pos:start="10:25" pos:end="10:25">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="10:28" pos:end="10:28">=</operator><name pos:start="10:29" pos:end="10:34"><name pos:start="10:29" pos:end="10:29">b</name><index pos:start="10:30" pos:end="10:34">[<expr pos:start="10:31" pos:end="10:33"><name pos:start="10:31" pos:end="10:31">i</name><operator pos:start="10:32" pos:end="10:32">-</operator><literal type="number" pos:start="10:33" pos:end="10:33">1</literal></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="11:17" pos:end="11:35"><expr pos:start="11:17" pos:end="11:34"><name pos:start="11:17" pos:end="11:27"><name pos:start="11:17" pos:end="11:21">treer</name><index pos:start="11:22" pos:end="11:27">[<expr pos:start="11:23" pos:end="11:26"><name pos:start="11:23" pos:end="11:26"><name pos:start="11:23" pos:end="11:23">m</name><index pos:start="11:24" pos:end="11:26">[<expr pos:start="11:25" pos:end="11:25"><name pos:start="11:25" pos:end="11:25">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="11:28" pos:end="11:28">=</operator><name pos:start="11:29" pos:end="11:34"><name pos:start="11:29" pos:end="11:29">b</name><index pos:start="11:30" pos:end="11:34">[<expr pos:start="11:31" pos:end="11:33"><name pos:start="11:31" pos:end="11:31">r</name><operator pos:start="11:32" pos:end="11:32">-</operator><literal type="number" pos:start="11:33" pos:end="11:33">1</literal></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="12:17" pos:end="12:27"><expr pos:start="12:17" pos:end="12:26"><call pos:start="12:17" pos:end="12:26"><name pos:start="12:17" pos:end="12:19">dfs</name><argument_list pos:start="12:20" pos:end="12:26">(<argument pos:start="12:21" pos:end="12:21"><expr pos:start="12:21" pos:end="12:21"><name pos:start="12:21" pos:end="12:21">l</name></expr></argument>,<argument pos:start="12:23" pos:end="12:25"><expr pos:start="12:23" pos:end="12:25"><name pos:start="12:23" pos:end="12:23">i</name><operator pos:start="12:24" pos:end="12:24">-</operator><literal type="number" pos:start="12:25" pos:end="12:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="13:17" pos:end="13:27"><expr pos:start="13:17" pos:end="13:26"><call pos:start="13:17" pos:end="13:26"><name pos:start="13:17" pos:end="13:19">dfs</name><argument_list pos:start="13:20" pos:end="13:26">(<argument pos:start="13:21" pos:end="13:23"><expr pos:start="13:21" pos:end="13:23"><name pos:start="13:21" pos:end="13:21">i</name><operator pos:start="13:22" pos:end="13:22">+</operator><literal type="number" pos:start="13:23" pos:end="13:23">1</literal></expr></argument>,<argument pos:start="13:25" pos:end="13:25"><expr pos:start="13:25" pos:end="13:25"><name pos:start="13:25" pos:end="13:25">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="14:17" pos:end="14:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></if></if_stmt> 
    <return pos:start="18:5" pos:end="18:11">return;</return>
</block_content>}</block></function> 
<function pos:start="20:1" pos:end="35:1"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:8">main</name><parameter_list pos:start="20:9" pos:end="20:10">()</parameter_list><block pos:start="20:11" pos:end="35:1">{<block_content pos:start="21:5" pos:end="34:13">
    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:11">freopen</name><argument_list pos:start="21:12" pos:end="21:32">(<argument pos:start="21:13" pos:end="21:21"><expr pos:start="21:13" pos:end="21:21"><literal type="string" pos:start="21:13" pos:end="21:21">"sort.in"</literal></expr></argument>,<argument pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><literal type="string" pos:start="21:23" pos:end="21:25">"r"</literal></expr></argument>,<argument pos:start="21:27" pos:end="21:31"><expr pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:35"><expr pos:start="22:5" pos:end="22:34"><call pos:start="22:5" pos:end="22:34"><name pos:start="22:5" pos:end="22:11">freopen</name><argument_list pos:start="22:12" pos:end="22:34">(<argument pos:start="22:13" pos:end="22:22"><expr pos:start="22:13" pos:end="22:22"><literal type="string" pos:start="22:13" pos:end="22:22">"sort.out"</literal></expr></argument>,<argument pos:start="22:24" pos:end="22:26"><expr pos:start="22:24" pos:end="22:26"><literal type="string" pos:start="22:24" pos:end="22:26">"w"</literal></expr></argument>,<argument pos:start="22:28" pos:end="22:33"><expr pos:start="22:28" pos:end="22:33"><name pos:start="22:28" pos:end="22:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:13"><expr pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:7">cin</name> <operator pos:start="23:9" pos:end="23:10">&gt;&gt;</operator> <name pos:start="23:12" pos:end="23:12">n</name></expr>;</expr_stmt>
    <for pos:start="24:5" pos:end="26:5">for<control pos:start="24:8" pos:end="24:25">(<init pos:start="24:9" pos:end="24:16"><decl pos:start="24:9" pos:end="24:15"><type pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:11">int</name></type> <name pos:start="24:13" pos:end="24:13">i</name><init pos:start="24:14" pos:end="24:15">=<expr pos:start="24:15" pos:end="24:15"><literal type="number" pos:start="24:15" pos:end="24:15">1</literal></expr></init></decl>;</init><condition pos:start="24:17" pos:end="24:21"><expr pos:start="24:17" pos:end="24:20"><name pos:start="24:17" pos:end="24:17">i</name><operator pos:start="24:18" pos:end="24:19">&lt;=</operator><name pos:start="24:20" pos:end="24:20">n</name></expr>;</condition><incr pos:start="24:22" pos:end="24:24"><expr pos:start="24:22" pos:end="24:24"><name pos:start="24:22" pos:end="24:22">i</name><operator pos:start="24:23" pos:end="24:24">++</operator></expr></incr>)</control><block pos:start="24:26" pos:end="26:5">{<block_content pos:start="25:9" pos:end="25:20">
        <expr_stmt pos:start="25:9" pos:end="25:20"><expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:11">cin</name> <operator pos:start="25:13" pos:end="25:14">&gt;&gt;</operator> <name pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:16">b</name><index pos:start="25:17" pos:end="25:19">[<expr pos:start="25:18" pos:end="25:18"><name pos:start="25:18" pos:end="25:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="27:5" pos:end="29:5">for<control pos:start="27:8" pos:end="27:25">(<init pos:start="27:9" pos:end="27:16"><decl pos:start="27:9" pos:end="27:15"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">i</name><init pos:start="27:14" pos:end="27:15">=<expr pos:start="27:15" pos:end="27:15"><literal type="number" pos:start="27:15" pos:end="27:15">1</literal></expr></init></decl>;</init><condition pos:start="27:17" pos:end="27:21"><expr pos:start="27:17" pos:end="27:20"><name pos:start="27:17" pos:end="27:17">i</name><operator pos:start="27:18" pos:end="27:19">&lt;=</operator><name pos:start="27:20" pos:end="27:20">n</name></expr>;</condition><incr pos:start="27:22" pos:end="27:24"><expr pos:start="27:22" pos:end="27:24"><name pos:start="27:22" pos:end="27:22">i</name><operator pos:start="27:23" pos:end="27:24">++</operator></expr></incr>)</control><block pos:start="27:26" pos:end="29:5">{<block_content pos:start="28:9" pos:end="28:20">
        <expr_stmt pos:start="28:9" pos:end="28:20"><expr pos:start="28:9" pos:end="28:19"><name pos:start="28:9" pos:end="28:11">cin</name> <operator pos:start="28:13" pos:end="28:14">&gt;&gt;</operator> <name pos:start="28:16" pos:end="28:19"><name pos:start="28:16" pos:end="28:16">m</name><index pos:start="28:17" pos:end="28:19">[<expr pos:start="28:18" pos:end="28:18"><name pos:start="28:18" pos:end="28:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="30:5" pos:end="30:13"><expr pos:start="30:5" pos:end="30:12"><call pos:start="30:5" pos:end="30:12"><name pos:start="30:5" pos:end="30:7">dfs</name><argument_list pos:start="30:8" pos:end="30:12">(<argument pos:start="30:9" pos:end="30:9"><expr pos:start="30:9" pos:end="30:9"><literal type="number" pos:start="30:9" pos:end="30:9">1</literal></expr></argument>,<argument pos:start="30:11" pos:end="30:11"><expr pos:start="30:11" pos:end="30:11"><name pos:start="30:11" pos:end="30:11">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="31:5" pos:end="33:5">for<control pos:start="31:8" pos:end="31:25">(<init pos:start="31:9" pos:end="31:16"><decl pos:start="31:9" pos:end="31:15"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name><init pos:start="31:14" pos:end="31:15">=<expr pos:start="31:15" pos:end="31:15"><literal type="number" pos:start="31:15" pos:end="31:15">1</literal></expr></init></decl>;</init><condition pos:start="31:17" pos:end="31:21"><expr pos:start="31:17" pos:end="31:20"><name pos:start="31:17" pos:end="31:17">i</name><operator pos:start="31:18" pos:end="31:19">&lt;=</operator><name pos:start="31:20" pos:end="31:20">n</name></expr>;</condition><incr pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:22">i</name><operator pos:start="31:23" pos:end="31:24">++</operator></expr></incr>)</control><block pos:start="31:26" pos:end="33:5">{<block_content pos:start="32:9" pos:end="32:52">
        <expr_stmt pos:start="32:9" pos:end="32:52"><expr pos:start="32:9" pos:end="32:51"><name pos:start="32:9" pos:end="32:12">cout</name> <operator pos:start="32:14" pos:end="32:15">&lt;&lt;</operator> <name pos:start="32:17" pos:end="32:24"><name pos:start="32:17" pos:end="32:21">treel</name><index pos:start="32:22" pos:end="32:24">[<expr pos:start="32:23" pos:end="32:23"><name pos:start="32:23" pos:end="32:23">i</name></expr>]</index></name> <operator pos:start="32:26" pos:end="32:27">&lt;&lt;</operator> <literal type="char" pos:start="32:29" pos:end="32:31">' '</literal> <operator pos:start="32:33" pos:end="32:34">&lt;&lt;</operator> <name pos:start="32:36" pos:end="32:43"><name pos:start="32:36" pos:end="32:40">treer</name><index pos:start="32:41" pos:end="32:43">[<expr pos:start="32:42" pos:end="32:42"><name pos:start="32:42" pos:end="32:42">i</name></expr>]</index></name> <operator pos:start="32:45" pos:end="32:46">&lt;&lt;</operator> <name pos:start="32:48" pos:end="32:51">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="34:5" pos:end="34:13">return <expr pos:start="34:12" pos:end="34:12"><literal type="number" pos:start="34:12" pos:end="34:12">0</literal></expr>;</return>
</block_content>}</block></function> 
</unit>
