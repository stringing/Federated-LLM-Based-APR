<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/677/677.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>

<function pos:start="5:1" pos:end="15:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list> <block pos:start="5:12" pos:end="15:1">{<block_content pos:start="6:5" pos:end="14:13">
    <decl_stmt pos:start="6:5" pos:end="6:24"><decl pos:start="6:5" pos:end="6:14"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:14"><name pos:start="6:12" pos:end="6:12">a</name><index pos:start="6:13" pos:end="6:14">[]</index></name></decl>, <decl pos:start="6:17" pos:end="6:23"><type ref="prev" pos:start="6:5" pos:end="6:10"/><name pos:start="6:17" pos:end="6:17">c</name> <init pos:start="6:19" pos:end="6:23">= <expr pos:start="6:21" pos:end="6:23"><literal type="string" pos:start="6:21" pos:end="6:23">"a"</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:20"><expr pos:start="7:5" pos:end="7:19"><call pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:11">getline</name><argument_list pos:start="7:12" pos:end="7:19">(<argument pos:start="7:13" pos:end="7:15"><expr pos:start="7:13" pos:end="7:15"><name pos:start="7:13" pos:end="7:15">cin</name></expr></argument>, <argument pos:start="7:18" pos:end="7:18"><expr pos:start="7:18" pos:end="7:18"><name pos:start="7:18" pos:end="7:18">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="8:5" pos:end="12:5">for<control pos:start="8:8" pos:end="8:36">(<init pos:start="8:9" pos:end="8:18"><decl pos:start="8:9" pos:end="8:17"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:13">i</name> <init pos:start="8:15" pos:end="8:17">= <expr pos:start="8:17" pos:end="8:17"><literal type="number" pos:start="8:17" pos:end="8:17">0</literal></expr></init></decl>;</init><condition pos:start="8:19" pos:end="8:31"><expr pos:start="8:19" pos:end="8:30"><name pos:start="8:19" pos:end="8:19">i</name> <operator pos:start="8:21" pos:end="8:21">&lt;</operator> <call pos:start="8:23" pos:end="8:30"><name pos:start="8:23" pos:end="8:28"><name pos:start="8:23" pos:end="8:23">a</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:28">size</name></name><argument_list pos:start="8:29" pos:end="8:30">()</argument_list></call></expr>;</condition> <incr pos:start="8:33" pos:end="8:35"><expr pos:start="8:33" pos:end="8:35"><name pos:start="8:33" pos:end="8:33">i</name><operator pos:start="8:34" pos:end="8:35">++</operator></expr></incr>)</control><block pos:start="8:37" pos:end="12:5">{<block_content pos:start="9:9" pos:end="11:9">
        <if_stmt pos:start="9:9" pos:end="11:9"><if pos:start="9:9" pos:end="11:9">if<condition pos:start="9:11" pos:end="9:30">(<expr pos:start="9:12" pos:end="9:29"><name pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:12">a</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><name pos:start="9:14" pos:end="9:14">i</name></expr>]</index></name><operator pos:start="9:16" pos:end="9:16">.</operator><name pos:start="9:17" pos:end="9:20">size</name> <operator pos:start="9:22" pos:end="9:22">&gt;</operator> <name pos:start="9:24" pos:end="9:29"><name pos:start="9:24" pos:end="9:24">c</name><operator pos:start="9:25" pos:end="9:25">.</operator><name pos:start="9:26" pos:end="9:29">size</name></name></expr>)</condition><block pos:start="9:31" pos:end="11:9">{<block_content pos:start="10:13" pos:end="10:21">
            <expr_stmt pos:start="10:13" pos:end="10:21"><expr pos:start="10:13" pos:end="10:20"><name pos:start="10:13" pos:end="10:13">c</name> <operator pos:start="10:15" pos:end="10:15">=</operator> <name pos:start="10:17" pos:end="10:20"><name pos:start="10:17" pos:end="10:17">a</name><index pos:start="10:18" pos:end="10:20">[<expr pos:start="10:19" pos:end="10:19"><name pos:start="10:19" pos:end="10:19">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="13:5" pos:end="13:14"><expr pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:8">cout</name> <operator pos:start="13:10" pos:end="13:11">&lt;&lt;</operator> <name pos:start="13:13" pos:end="13:13">c</name></expr>;</expr_stmt>
    <return pos:start="14:5" pos:end="14:13">return <expr pos:start="14:12" pos:end="14:12"><literal type="number" pos:start="14:12" pos:end="14:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
