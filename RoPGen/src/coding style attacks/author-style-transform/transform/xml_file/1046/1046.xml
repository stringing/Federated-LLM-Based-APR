<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1046/1046.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="19:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="19:1">{<block_content pos:start="5:5" pos:end="18:13">
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:12">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:13"><expr pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:7">cin</name> <operator pos:start="6:9" pos:end="6:10">&gt;&gt;</operator> <name pos:start="6:12" pos:end="6:12">s</name></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:20"><expr pos:start="7:5" pos:end="7:19"><call pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:11">getline</name><argument_list pos:start="7:12" pos:end="7:19">(<argument pos:start="7:13" pos:end="7:15"><expr pos:start="7:13" pos:end="7:15"><name pos:start="7:13" pos:end="7:15">cin</name></expr></argument>, <argument pos:start="7:18" pos:end="7:18"><expr pos:start="7:18" pos:end="7:18"><name pos:start="7:18" pos:end="7:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:19"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">r</name></decl>, <decl pos:start="8:12" pos:end="8:18"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:12" pos:end="8:14">ans</name> <init pos:start="8:16" pos:end="8:18">= <expr pos:start="8:18" pos:end="8:18"><literal type="number" pos:start="8:18" pos:end="8:18">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="9:5" pos:end="14:5">for <control pos:start="9:9" pos:end="9:38">(<init pos:start="9:10" pos:end="9:19"><decl pos:start="9:10" pos:end="9:18"><type pos:start="9:10" pos:end="9:12"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:14">i</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</init> <condition pos:start="9:21" pos:end="9:33"><expr pos:start="9:21" pos:end="9:32"><name pos:start="9:21" pos:end="9:21">i</name> <operator pos:start="9:23" pos:end="9:23">&lt;</operator> <call pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:30"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:26">.</operator><name pos:start="9:27" pos:end="9:30">size</name></name><argument_list pos:start="9:31" pos:end="9:32">()</argument_list></call></expr>;</condition> <incr pos:start="9:35" pos:end="9:37"><expr pos:start="9:35" pos:end="9:37"><name pos:start="9:35" pos:end="9:35">i</name><operator pos:start="9:36" pos:end="9:37">++</operator></expr></incr>)</control> <block pos:start="9:40" pos:end="14:5">{<block_content pos:start="10:9" pos:end="13:9">
        <if_stmt pos:start="10:9" pos:end="13:9"><if pos:start="10:9" pos:end="13:9">if <condition pos:start="10:12" pos:end="10:24">(<expr pos:start="10:13" pos:end="10:23"><name pos:start="10:13" pos:end="10:16"><name pos:start="10:13" pos:end="10:13">s</name><index pos:start="10:14" pos:end="10:16">[<expr pos:start="10:15" pos:end="10:15"><name pos:start="10:15" pos:end="10:15">i</name></expr>]</index></name> <operator pos:start="10:18" pos:end="10:19">==</operator> <literal type="char" pos:start="10:21" pos:end="10:23">' '</literal></expr>)</condition> <block pos:start="10:26" pos:end="13:9">{<block_content pos:start="11:13" pos:end="12:22">
            <expr_stmt pos:start="11:13" pos:end="11:20"><expr pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:15">ans</name> <operator pos:start="11:17" pos:end="11:17">=</operator> <literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="12:13" pos:end="12:22"><expr pos:start="12:13" pos:end="12:21"><name pos:start="12:13" pos:end="12:13">r</name> <operator pos:start="12:15" pos:end="12:15">=</operator> <name pos:start="12:17" pos:end="12:17">r</name> <operator pos:start="12:19" pos:end="12:19">+</operator> <literal type="number" pos:start="12:21" pos:end="12:21">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="15:5" pos:end="17:5">for <control pos:start="15:9" pos:end="15:38">(<init pos:start="15:10" pos:end="15:19"><decl pos:start="15:10" pos:end="15:18"><type pos:start="15:10" pos:end="15:12"><name pos:start="15:10" pos:end="15:12">int</name></type> <name pos:start="15:14" pos:end="15:14">i</name> <init pos:start="15:16" pos:end="15:18">= <expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr></init></decl>;</init> <condition pos:start="15:21" pos:end="15:33"><expr pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <call pos:start="15:25" pos:end="15:32"><name pos:start="15:25" pos:end="15:30"><name pos:start="15:25" pos:end="15:25">s</name><operator pos:start="15:26" pos:end="15:26">.</operator><name pos:start="15:27" pos:end="15:30">size</name></name><argument_list pos:start="15:31" pos:end="15:32">()</argument_list></call></expr>;</condition> <incr pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:35">i</name><operator pos:start="15:36" pos:end="15:37">++</operator></expr></incr>)</control> <block pos:start="15:40" pos:end="17:5">{<block_content>
        
    </block_content>}</block></for>
    <return pos:start="18:5" pos:end="18:13">return <expr pos:start="18:12" pos:end="18:12"><literal type="number" pos:start="18:12" pos:end="18:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
