<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1142/1142.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:15">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:15">&lt;stack&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="78:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="78:1">{<block_content pos:start="5:5" pos:end="77:13">
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:11"><expr pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:7">cin</name><operator pos:start="6:8" pos:end="6:9">&gt;&gt;</operator><name pos:start="6:10" pos:end="6:10">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:9">stack</name><argument_list type="generic" pos:start="7:10" pos:end="7:14">&lt;<argument pos:start="7:11" pos:end="7:13"><expr pos:start="7:11" pos:end="7:13"><name pos:start="7:11" pos:end="7:13">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="7:16" pos:end="7:16">a</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:17"><decl pos:start="8:5" pos:end="8:16"><type pos:start="8:5" pos:end="8:14"><name pos:start="8:5" pos:end="8:14"><name pos:start="8:5" pos:end="8:9">stack</name><argument_list type="generic" pos:start="8:10" pos:end="8:14">&lt;<argument pos:start="8:11" pos:end="8:13"><expr pos:start="8:11" pos:end="8:13"><name pos:start="8:11" pos:end="8:13">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="8:16" pos:end="8:16">b</name></decl>;</decl_stmt>
    <while pos:start="9:5" pos:end="58:5">while<condition pos:start="9:10" pos:end="9:14">(<expr pos:start="9:11" pos:end="9:13"><name pos:start="9:11" pos:end="9:11">n</name><operator pos:start="9:12" pos:end="9:13">--</operator></expr>)</condition><block pos:start="9:15" pos:end="58:5">{<block_content pos:start="10:9" pos:end="57:9">
        <decl_stmt pos:start="10:9" pos:end="10:15"><decl pos:start="10:9" pos:end="10:14"><type pos:start="10:9" pos:end="10:12"><name pos:start="10:9" pos:end="10:12">char</name></type> <name pos:start="10:14" pos:end="10:14">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:15"><expr pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:11">cin</name><operator pos:start="11:12" pos:end="11:13">&gt;&gt;</operator><name pos:start="11:14" pos:end="11:14">s</name></expr>;</expr_stmt>
        <if_stmt pos:start="12:9" pos:end="34:9"><if pos:start="12:9" pos:end="34:9">if<condition pos:start="12:11" pos:end="12:18">(<expr pos:start="12:12" pos:end="12:17"><name pos:start="12:12" pos:end="12:12">s</name><operator pos:start="12:13" pos:end="12:14">==</operator><literal type="char" pos:start="12:15" pos:end="12:17">'A'</literal></expr>)</condition><block pos:start="12:19" pos:end="34:9">{<block_content pos:start="13:12" pos:end="33:12">
           <decl_stmt pos:start="13:12" pos:end="13:18"><decl pos:start="13:12" pos:end="13:17"><type pos:start="13:12" pos:end="13:15"><name pos:start="13:12" pos:end="13:15">char</name></type> <name pos:start="13:17" pos:end="13:17">d</name></decl>;</decl_stmt>
           <expr_stmt pos:start="14:12" pos:end="14:18"><expr pos:start="14:12" pos:end="14:17"><name pos:start="14:12" pos:end="14:14">cin</name><operator pos:start="14:15" pos:end="14:16">&gt;&gt;</operator><name pos:start="14:17" pos:end="14:17">d</name></expr>;</expr_stmt>
           <if_stmt pos:start="15:12" pos:end="33:12"><if pos:start="15:12" pos:end="19:12">if<condition pos:start="15:14" pos:end="15:21">(<expr pos:start="15:15" pos:end="15:20"><name pos:start="15:15" pos:end="15:15">d</name><operator pos:start="15:16" pos:end="15:17">==</operator><literal type="char" pos:start="15:18" pos:end="15:20">'I'</literal></expr>)</condition><block pos:start="15:22" pos:end="19:12">{<block_content pos:start="16:15" pos:end="18:27">
              <decl_stmt pos:start="16:15" pos:end="16:23"><decl pos:start="16:15" pos:end="16:22"><type pos:start="16:15" pos:end="16:17"><name pos:start="16:15" pos:end="16:17">int</name></type> <name pos:start="16:19" pos:end="16:22">data</name></decl>;</decl_stmt>
              <expr_stmt pos:start="17:15" pos:end="17:24"><expr pos:start="17:15" pos:end="17:23"><name pos:start="17:15" pos:end="17:17">cin</name><operator pos:start="17:18" pos:end="17:19">&gt;&gt;</operator><name pos:start="17:20" pos:end="17:23">data</name></expr>;</expr_stmt>
              <expr_stmt pos:start="18:15" pos:end="18:27"><expr pos:start="18:15" pos:end="18:26"><call pos:start="18:15" pos:end="18:26"><name pos:start="18:15" pos:end="18:20"><name pos:start="18:15" pos:end="18:15">a</name><operator pos:start="18:16" pos:end="18:16">.</operator><name pos:start="18:17" pos:end="18:20">push</name></name><argument_list pos:start="18:21" pos:end="18:26">(<argument pos:start="18:22" pos:end="18:25"><expr pos:start="18:22" pos:end="18:25"><name pos:start="18:22" pos:end="18:25">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></if><if type="elseif" pos:start="19:13" pos:end="23:12">else if<condition pos:start="19:20" pos:end="19:27">(<expr pos:start="19:21" pos:end="19:26"><name pos:start="19:21" pos:end="19:21">d</name><operator pos:start="19:22" pos:end="19:23">==</operator><literal type="char" pos:start="19:24" pos:end="19:26">'D'</literal></expr>)</condition><block pos:start="19:28" pos:end="23:12">{<block_content pos:start="20:15" pos:end="22:15">
              <if_stmt pos:start="20:15" pos:end="22:15"><if pos:start="20:15" pos:end="22:15">if<condition pos:start="20:17" pos:end="20:28">(<expr pos:start="20:18" pos:end="20:27"><operator pos:start="20:18" pos:end="20:18">!</operator><call pos:start="20:19" pos:end="20:27"><name pos:start="20:19" pos:end="20:25"><name pos:start="20:19" pos:end="20:19">a</name><operator pos:start="20:20" pos:end="20:20">.</operator><name pos:start="20:21" pos:end="20:25">empty</name></name><argument_list pos:start="20:26" pos:end="20:27">()</argument_list></call></expr>)</condition><block pos:start="20:29" pos:end="22:15">{<block_content pos:start="21:18" pos:end="21:25">
                 <expr_stmt pos:start="21:18" pos:end="21:25"><expr pos:start="21:18" pos:end="21:24"><call pos:start="21:18" pos:end="21:24"><name pos:start="21:18" pos:end="21:22"><name pos:start="21:18" pos:end="21:18">a</name><operator pos:start="21:19" pos:end="21:19">.</operator><name pos:start="21:20" pos:end="21:22">pop</name></name><argument_list pos:start="21:23" pos:end="21:24">()</argument_list></call></expr>;</expr_stmt>
              </block_content>}</block></if></if_stmt>
           </block_content>}</block></if><else pos:start="23:13" pos:end="33:12">else<block pos:start="23:17" pos:end="33:12">{<block_content pos:start="24:15" pos:end="32:15">
              <decl_stmt pos:start="24:15" pos:end="24:27"><decl pos:start="24:15" pos:end="24:26"><type pos:start="24:15" pos:end="24:24"><name pos:start="24:15" pos:end="24:24"><name pos:start="24:15" pos:end="24:19">stack</name><argument_list type="generic" pos:start="24:20" pos:end="24:24">&lt;<argument pos:start="24:21" pos:end="24:23"><expr pos:start="24:21" pos:end="24:23"><name pos:start="24:21" pos:end="24:23">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="24:26" pos:end="24:26">c</name></decl>;</decl_stmt>
              <while pos:start="25:15" pos:end="28:15">while<condition pos:start="25:20" pos:end="25:31">(<expr pos:start="25:21" pos:end="25:30"><operator pos:start="25:21" pos:end="25:21">!</operator><call pos:start="25:22" pos:end="25:30"><name pos:start="25:22" pos:end="25:28"><name pos:start="25:22" pos:end="25:22">b</name><operator pos:start="25:23" pos:end="25:23">.</operator><name pos:start="25:24" pos:end="25:28">empty</name></name><argument_list pos:start="25:29" pos:end="25:30">()</argument_list></call></expr>)</condition><block pos:start="25:32" pos:end="28:15">{<block_content pos:start="26:18" pos:end="27:25">
                 <expr_stmt pos:start="26:18" pos:end="26:33"><expr pos:start="26:18" pos:end="26:32"><call pos:start="26:18" pos:end="26:32"><name pos:start="26:18" pos:end="26:23"><name pos:start="26:18" pos:end="26:18">c</name><operator pos:start="26:19" pos:end="26:19">.</operator><name pos:start="26:20" pos:end="26:23">push</name></name><argument_list pos:start="26:24" pos:end="26:32">(<argument pos:start="26:25" pos:end="26:31"><expr pos:start="26:25" pos:end="26:31"><call pos:start="26:25" pos:end="26:31"><name pos:start="26:25" pos:end="26:29"><name pos:start="26:25" pos:end="26:25">b</name><operator pos:start="26:26" pos:end="26:26">.</operator><name pos:start="26:27" pos:end="26:29">top</name></name><argument_list pos:start="26:30" pos:end="26:31">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt pos:start="27:18" pos:end="27:25"><expr pos:start="27:18" pos:end="27:24"><call pos:start="27:18" pos:end="27:24"><name pos:start="27:18" pos:end="27:22"><name pos:start="27:18" pos:end="27:18">b</name><operator pos:start="27:19" pos:end="27:19">.</operator><name pos:start="27:20" pos:end="27:22">pop</name></name><argument_list pos:start="27:23" pos:end="27:24">()</argument_list></call></expr>;</expr_stmt>
              </block_content>}</block></while>
              <while pos:start="29:15" pos:end="32:15">while<condition pos:start="29:20" pos:end="29:31">(<expr pos:start="29:21" pos:end="29:30"><operator pos:start="29:21" pos:end="29:21">!</operator><call pos:start="29:22" pos:end="29:30"><name pos:start="29:22" pos:end="29:28"><name pos:start="29:22" pos:end="29:22">c</name><operator pos:start="29:23" pos:end="29:23">.</operator><name pos:start="29:24" pos:end="29:28">empty</name></name><argument_list pos:start="29:29" pos:end="29:30">()</argument_list></call></expr>)</condition><block pos:start="29:32" pos:end="32:15">{<block_content pos:start="30:18" pos:end="31:25">
                 <expr_stmt pos:start="30:18" pos:end="30:33"><expr pos:start="30:18" pos:end="30:32"><call pos:start="30:18" pos:end="30:32"><name pos:start="30:18" pos:end="30:23"><name pos:start="30:18" pos:end="30:18">a</name><operator pos:start="30:19" pos:end="30:19">.</operator><name pos:start="30:20" pos:end="30:23">push</name></name><argument_list pos:start="30:24" pos:end="30:32">(<argument pos:start="30:25" pos:end="30:31"><expr pos:start="30:25" pos:end="30:31"><call pos:start="30:25" pos:end="30:31"><name pos:start="30:25" pos:end="30:29"><name pos:start="30:25" pos:end="30:25">c</name><operator pos:start="30:26" pos:end="30:26">.</operator><name pos:start="30:27" pos:end="30:29">top</name></name><argument_list pos:start="30:30" pos:end="30:31">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt pos:start="31:18" pos:end="31:25"><expr pos:start="31:18" pos:end="31:24"><call pos:start="31:18" pos:end="31:24"><name pos:start="31:18" pos:end="31:22"><name pos:start="31:18" pos:end="31:18">c</name><operator pos:start="31:19" pos:end="31:19">.</operator><name pos:start="31:20" pos:end="31:22">pop</name></name><argument_list pos:start="31:23" pos:end="31:24">()</argument_list></call></expr>;</expr_stmt>
              </block_content>}</block></while>
           </block_content>}</block></else></if_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="35:9" pos:end="57:9"><if pos:start="35:9" pos:end="57:9">if<condition pos:start="35:11" pos:end="35:18">(<expr pos:start="35:12" pos:end="35:17"><name pos:start="35:12" pos:end="35:12">s</name><operator pos:start="35:13" pos:end="35:14">==</operator><literal type="char" pos:start="35:15" pos:end="35:17">'B'</literal></expr>)</condition><block pos:start="35:19" pos:end="57:9">{<block_content pos:start="36:12" pos:end="56:12">
           <decl_stmt pos:start="36:12" pos:end="36:18"><decl pos:start="36:12" pos:end="36:17"><type pos:start="36:12" pos:end="36:15"><name pos:start="36:12" pos:end="36:15">char</name></type> <name pos:start="36:17" pos:end="36:17">d</name></decl>;</decl_stmt>
           <expr_stmt pos:start="37:12" pos:end="37:18"><expr pos:start="37:12" pos:end="37:17"><name pos:start="37:12" pos:end="37:14">cin</name><operator pos:start="37:15" pos:end="37:16">&gt;&gt;</operator><name pos:start="37:17" pos:end="37:17">d</name></expr>;</expr_stmt>
           <if_stmt pos:start="38:12" pos:end="56:12"><if pos:start="38:12" pos:end="42:12">if<condition pos:start="38:14" pos:end="38:21">(<expr pos:start="38:15" pos:end="38:20"><name pos:start="38:15" pos:end="38:15">d</name><operator pos:start="38:16" pos:end="38:17">==</operator><literal type="char" pos:start="38:18" pos:end="38:20">'I'</literal></expr>)</condition><block pos:start="38:22" pos:end="42:12">{<block_content pos:start="39:15" pos:end="41:24">
              <decl_stmt pos:start="39:15" pos:end="39:20"><decl pos:start="39:15" pos:end="39:19"><type pos:start="39:15" pos:end="39:17"><name pos:start="39:15" pos:end="39:17">int</name></type> <name pos:start="39:19" pos:end="39:19">y</name></decl>;</decl_stmt>
              <expr_stmt pos:start="40:15" pos:end="40:21"><expr pos:start="40:15" pos:end="40:20"><name pos:start="40:15" pos:end="40:17">cin</name><operator pos:start="40:18" pos:end="40:19">&gt;&gt;</operator><name pos:start="40:20" pos:end="40:20">y</name></expr>;</expr_stmt>
              <expr_stmt pos:start="41:15" pos:end="41:24"><expr pos:start="41:15" pos:end="41:23"><call pos:start="41:15" pos:end="41:23"><name pos:start="41:15" pos:end="41:20"><name pos:start="41:15" pos:end="41:15">b</name><operator pos:start="41:16" pos:end="41:16">.</operator><name pos:start="41:17" pos:end="41:20">push</name></name><argument_list pos:start="41:21" pos:end="41:23">(<argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><name pos:start="41:22" pos:end="41:22">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></if><if type="elseif" pos:start="42:13" pos:end="46:12">else if<condition pos:start="42:20" pos:end="42:27">(<expr pos:start="42:21" pos:end="42:26"><name pos:start="42:21" pos:end="42:21">d</name><operator pos:start="42:22" pos:end="42:23">==</operator><literal type="char" pos:start="42:24" pos:end="42:26">'D'</literal></expr>)</condition><block pos:start="42:28" pos:end="46:12">{<block_content pos:start="43:15" pos:end="45:15">
              <if_stmt pos:start="43:15" pos:end="45:15"><if pos:start="43:15" pos:end="45:15">if<condition pos:start="43:17" pos:end="43:28">(<expr pos:start="43:18" pos:end="43:27"><operator pos:start="43:18" pos:end="43:18">!</operator><call pos:start="43:19" pos:end="43:27"><name pos:start="43:19" pos:end="43:25"><name pos:start="43:19" pos:end="43:19">a</name><operator pos:start="43:20" pos:end="43:20">.</operator><name pos:start="43:21" pos:end="43:25">empty</name></name><argument_list pos:start="43:26" pos:end="43:27">()</argument_list></call></expr>)</condition><block pos:start="43:29" pos:end="45:15">{<block_content pos:start="44:18" pos:end="44:25">
                 <expr_stmt pos:start="44:18" pos:end="44:25"><expr pos:start="44:18" pos:end="44:24"><call pos:start="44:18" pos:end="44:24"><name pos:start="44:18" pos:end="44:22"><name pos:start="44:18" pos:end="44:18">b</name><operator pos:start="44:19" pos:end="44:19">.</operator><name pos:start="44:20" pos:end="44:22">pop</name></name><argument_list pos:start="44:23" pos:end="44:24">()</argument_list></call></expr>;</expr_stmt>
              </block_content>}</block></if></if_stmt>
           </block_content>}</block></if><else pos:start="46:13" pos:end="56:12">else<block pos:start="46:17" pos:end="56:12">{<block_content pos:start="47:15" pos:end="55:15">
              <decl_stmt pos:start="47:15" pos:end="47:27"><decl pos:start="47:15" pos:end="47:26"><type pos:start="47:15" pos:end="47:24"><name pos:start="47:15" pos:end="47:24"><name pos:start="47:15" pos:end="47:19">stack</name><argument_list type="generic" pos:start="47:20" pos:end="47:24">&lt;<argument pos:start="47:21" pos:end="47:23"><expr pos:start="47:21" pos:end="47:23"><name pos:start="47:21" pos:end="47:23">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="47:26" pos:end="47:26">c</name></decl>;</decl_stmt>
              <while pos:start="48:15" pos:end="51:15">while<condition pos:start="48:20" pos:end="48:31">(<expr pos:start="48:21" pos:end="48:30"><operator pos:start="48:21" pos:end="48:21">!</operator><call pos:start="48:22" pos:end="48:30"><name pos:start="48:22" pos:end="48:28"><name pos:start="48:22" pos:end="48:22">a</name><operator pos:start="48:23" pos:end="48:23">.</operator><name pos:start="48:24" pos:end="48:28">empty</name></name><argument_list pos:start="48:29" pos:end="48:30">()</argument_list></call></expr>)</condition><block pos:start="48:32" pos:end="51:15">{<block_content pos:start="49:19" pos:end="50:26">
                  <expr_stmt pos:start="49:19" pos:end="49:34"><expr pos:start="49:19" pos:end="49:33"><call pos:start="49:19" pos:end="49:33"><name pos:start="49:19" pos:end="49:24"><name pos:start="49:19" pos:end="49:19">c</name><operator pos:start="49:20" pos:end="49:20">.</operator><name pos:start="49:21" pos:end="49:24">push</name></name><argument_list pos:start="49:25" pos:end="49:33">(<argument pos:start="49:26" pos:end="49:32"><expr pos:start="49:26" pos:end="49:32"><call pos:start="49:26" pos:end="49:32"><name pos:start="49:26" pos:end="49:30"><name pos:start="49:26" pos:end="49:26">a</name><operator pos:start="49:27" pos:end="49:27">.</operator><name pos:start="49:28" pos:end="49:30">top</name></name><argument_list pos:start="49:31" pos:end="49:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                  <expr_stmt pos:start="50:19" pos:end="50:26"><expr pos:start="50:19" pos:end="50:25"><call pos:start="50:19" pos:end="50:25"><name pos:start="50:19" pos:end="50:23"><name pos:start="50:19" pos:end="50:19">a</name><operator pos:start="50:20" pos:end="50:20">.</operator><name pos:start="50:21" pos:end="50:23">pop</name></name><argument_list pos:start="50:24" pos:end="50:25">()</argument_list></call></expr>;</expr_stmt>
              </block_content>}</block></while>
              <while pos:start="52:15" pos:end="55:15">while<condition pos:start="52:20" pos:end="52:31">(<expr pos:start="52:21" pos:end="52:30"><operator pos:start="52:21" pos:end="52:21">!</operator><call pos:start="52:22" pos:end="52:30"><name pos:start="52:22" pos:end="52:28"><name pos:start="52:22" pos:end="52:22">c</name><operator pos:start="52:23" pos:end="52:23">.</operator><name pos:start="52:24" pos:end="52:28">empty</name></name><argument_list pos:start="52:29" pos:end="52:30">()</argument_list></call></expr>)</condition><block pos:start="52:32" pos:end="55:15">{<block_content pos:start="53:18" pos:end="54:25">
                 <expr_stmt pos:start="53:18" pos:end="53:33"><expr pos:start="53:18" pos:end="53:32"><call pos:start="53:18" pos:end="53:32"><name pos:start="53:18" pos:end="53:23"><name pos:start="53:18" pos:end="53:18">b</name><operator pos:start="53:19" pos:end="53:19">.</operator><name pos:start="53:20" pos:end="53:23">push</name></name><argument_list pos:start="53:24" pos:end="53:32">(<argument pos:start="53:25" pos:end="53:31"><expr pos:start="53:25" pos:end="53:31"><call pos:start="53:25" pos:end="53:31"><name pos:start="53:25" pos:end="53:29"><name pos:start="53:25" pos:end="53:25">c</name><operator pos:start="53:26" pos:end="53:26">.</operator><name pos:start="53:27" pos:end="53:29">top</name></name><argument_list pos:start="53:30" pos:end="53:31">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt pos:start="54:18" pos:end="54:25"><expr pos:start="54:18" pos:end="54:24"><call pos:start="54:18" pos:end="54:24"><name pos:start="54:18" pos:end="54:22"><name pos:start="54:18" pos:end="54:18">c</name><operator pos:start="54:19" pos:end="54:19">.</operator><name pos:start="54:20" pos:end="54:22">pop</name></name><argument_list pos:start="54:23" pos:end="54:24">()</argument_list></call></expr>;</expr_stmt>
              </block_content>}</block></while>
           </block_content>}</block></else></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></while>
    <decl_stmt pos:start="59:5" pos:end="59:17"><decl pos:start="59:5" pos:end="59:16"><type pos:start="59:5" pos:end="59:14"><name pos:start="59:5" pos:end="59:14"><name pos:start="59:5" pos:end="59:9">stack</name><argument_list type="generic" pos:start="59:10" pos:end="59:14">&lt;<argument pos:start="59:11" pos:end="59:13"><expr pos:start="59:11" pos:end="59:13"><name pos:start="59:11" pos:end="59:13">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="59:16" pos:end="59:16">c</name></decl>;</decl_stmt>
    <while pos:start="60:5" pos:end="63:5">while<condition pos:start="60:10" pos:end="60:21">(<expr pos:start="60:11" pos:end="60:20"><operator pos:start="60:11" pos:end="60:11">!</operator><call pos:start="60:12" pos:end="60:20"><name pos:start="60:12" pos:end="60:18"><name pos:start="60:12" pos:end="60:12">a</name><operator pos:start="60:13" pos:end="60:13">.</operator><name pos:start="60:14" pos:end="60:18">empty</name></name><argument_list pos:start="60:19" pos:end="60:20">()</argument_list></call></expr>)</condition><block pos:start="60:22" pos:end="63:5">{<block_content pos:start="61:8" pos:end="62:15">
       <expr_stmt pos:start="61:8" pos:end="61:23"><expr pos:start="61:8" pos:end="61:22"><call pos:start="61:8" pos:end="61:22"><name pos:start="61:8" pos:end="61:13"><name pos:start="61:8" pos:end="61:8">c</name><operator pos:start="61:9" pos:end="61:9">.</operator><name pos:start="61:10" pos:end="61:13">push</name></name><argument_list pos:start="61:14" pos:end="61:22">(<argument pos:start="61:15" pos:end="61:21"><expr pos:start="61:15" pos:end="61:21"><call pos:start="61:15" pos:end="61:21"><name pos:start="61:15" pos:end="61:19"><name pos:start="61:15" pos:end="61:15">a</name><operator pos:start="61:16" pos:end="61:16">.</operator><name pos:start="61:17" pos:end="61:19">top</name></name><argument_list pos:start="61:20" pos:end="61:21">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt pos:start="62:8" pos:end="62:15"><expr pos:start="62:8" pos:end="62:14"><call pos:start="62:8" pos:end="62:14"><name pos:start="62:8" pos:end="62:12"><name pos:start="62:8" pos:end="62:8">a</name><operator pos:start="62:9" pos:end="62:9">.</operator><name pos:start="62:10" pos:end="62:12">pop</name></name><argument_list pos:start="62:13" pos:end="62:14">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="64:5" pos:end="67:5">while<condition pos:start="64:10" pos:end="64:21">(<expr pos:start="64:11" pos:end="64:20"><operator pos:start="64:11" pos:end="64:11">!</operator><call pos:start="64:12" pos:end="64:20"><name pos:start="64:12" pos:end="64:18"><name pos:start="64:12" pos:end="64:12">c</name><operator pos:start="64:13" pos:end="64:13">.</operator><name pos:start="64:14" pos:end="64:18">empty</name></name><argument_list pos:start="64:19" pos:end="64:20">()</argument_list></call></expr>)</condition><block pos:start="64:22" pos:end="67:5">{<block_content pos:start="65:8" pos:end="66:15">
       <expr_stmt pos:start="65:8" pos:end="65:26"><expr pos:start="65:8" pos:end="65:25"><name pos:start="65:8" pos:end="65:11">cout</name><operator pos:start="65:12" pos:end="65:13">&lt;&lt;</operator><call pos:start="65:14" pos:end="65:20"><name pos:start="65:14" pos:end="65:18"><name pos:start="65:14" pos:end="65:14">c</name><operator pos:start="65:15" pos:end="65:15">.</operator><name pos:start="65:16" pos:end="65:18">top</name></name><argument_list pos:start="65:19" pos:end="65:20">()</argument_list></call><operator pos:start="65:21" pos:end="65:22">&lt;&lt;</operator><literal type="string" pos:start="65:23" pos:end="65:25">" "</literal></expr>;</expr_stmt>
       <expr_stmt pos:start="66:8" pos:end="66:15"><expr pos:start="66:8" pos:end="66:14"><call pos:start="66:8" pos:end="66:14"><name pos:start="66:8" pos:end="66:12"><name pos:start="66:8" pos:end="66:8">c</name><operator pos:start="66:9" pos:end="66:9">.</operator><name pos:start="66:10" pos:end="66:12">pop</name></name><argument_list pos:start="66:13" pos:end="66:14">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="68:5" pos:end="68:15"><expr pos:start="68:5" pos:end="68:14"><name pos:start="68:5" pos:end="68:8">cout</name><operator pos:start="68:9" pos:end="68:10">&lt;&lt;</operator><name pos:start="68:11" pos:end="68:14">endl</name></expr>;</expr_stmt>
    <while pos:start="69:5" pos:end="72:5">while<condition pos:start="69:10" pos:end="69:21">(<expr pos:start="69:11" pos:end="69:20"><operator pos:start="69:11" pos:end="69:11">!</operator><call pos:start="69:12" pos:end="69:20"><name pos:start="69:12" pos:end="69:18"><name pos:start="69:12" pos:end="69:12">b</name><operator pos:start="69:13" pos:end="69:13">.</operator><name pos:start="69:14" pos:end="69:18">empty</name></name><argument_list pos:start="69:19" pos:end="69:20">()</argument_list></call></expr>)</condition><block pos:start="69:22" pos:end="72:5">{<block_content pos:start="70:8" pos:end="71:15">
       <expr_stmt pos:start="70:8" pos:end="70:23"><expr pos:start="70:8" pos:end="70:22"><call pos:start="70:8" pos:end="70:22"><name pos:start="70:8" pos:end="70:13"><name pos:start="70:8" pos:end="70:8">c</name><operator pos:start="70:9" pos:end="70:9">.</operator><name pos:start="70:10" pos:end="70:13">push</name></name><argument_list pos:start="70:14" pos:end="70:22">(<argument pos:start="70:15" pos:end="70:21"><expr pos:start="70:15" pos:end="70:21"><call pos:start="70:15" pos:end="70:21"><name pos:start="70:15" pos:end="70:19"><name pos:start="70:15" pos:end="70:15">b</name><operator pos:start="70:16" pos:end="70:16">.</operator><name pos:start="70:17" pos:end="70:19">top</name></name><argument_list pos:start="70:20" pos:end="70:21">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt pos:start="71:8" pos:end="71:15"><expr pos:start="71:8" pos:end="71:14"><call pos:start="71:8" pos:end="71:14"><name pos:start="71:8" pos:end="71:12"><name pos:start="71:8" pos:end="71:8">b</name><operator pos:start="71:9" pos:end="71:9">.</operator><name pos:start="71:10" pos:end="71:12">pop</name></name><argument_list pos:start="71:13" pos:end="71:14">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="73:5" pos:end="76:5">while<condition pos:start="73:10" pos:end="73:21">(<expr pos:start="73:11" pos:end="73:20"><operator pos:start="73:11" pos:end="73:11">!</operator><call pos:start="73:12" pos:end="73:20"><name pos:start="73:12" pos:end="73:18"><name pos:start="73:12" pos:end="73:12">c</name><operator pos:start="73:13" pos:end="73:13">.</operator><name pos:start="73:14" pos:end="73:18">empty</name></name><argument_list pos:start="73:19" pos:end="73:20">()</argument_list></call></expr>)</condition><block pos:start="73:22" pos:end="76:5">{<block_content pos:start="74:8" pos:end="75:15">
       <expr_stmt pos:start="74:8" pos:end="74:26"><expr pos:start="74:8" pos:end="74:25"><name pos:start="74:8" pos:end="74:11">cout</name><operator pos:start="74:12" pos:end="74:13">&lt;&lt;</operator><call pos:start="74:14" pos:end="74:20"><name pos:start="74:14" pos:end="74:18"><name pos:start="74:14" pos:end="74:14">c</name><operator pos:start="74:15" pos:end="74:15">.</operator><name pos:start="74:16" pos:end="74:18">top</name></name><argument_list pos:start="74:19" pos:end="74:20">()</argument_list></call><operator pos:start="74:21" pos:end="74:22">&lt;&lt;</operator><literal type="string" pos:start="74:23" pos:end="74:25">" "</literal></expr>;</expr_stmt>
       <expr_stmt pos:start="75:8" pos:end="75:15"><expr pos:start="75:8" pos:end="75:14"><call pos:start="75:8" pos:end="75:14"><name pos:start="75:8" pos:end="75:12"><name pos:start="75:8" pos:end="75:8">c</name><operator pos:start="75:9" pos:end="75:9">.</operator><name pos:start="75:10" pos:end="75:12">pop</name></name><argument_list pos:start="75:13" pos:end="75:14">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
