<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/239/239.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="11:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="11:1">{<block_content pos:start="5:5" pos:end="10:13">
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:12">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:20"><expr pos:start="6:5" pos:end="6:19"><call pos:start="6:5" pos:end="6:19"><name pos:start="6:5" pos:end="6:11">getline</name><argument_list pos:start="6:12" pos:end="6:19">(<argument pos:start="6:13" pos:end="6:15"><expr pos:start="6:13" pos:end="6:15"><name pos:start="6:13" pos:end="6:15">cin</name></expr></argument>, <argument pos:start="6:18" pos:end="6:18"><expr pos:start="6:18" pos:end="6:18"><name pos:start="6:18" pos:end="6:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="7:5" pos:end="9:5">for <control pos:start="7:9" pos:end="7:38">(<init pos:start="7:10" pos:end="7:19"><decl pos:start="7:10" pos:end="7:18"><type pos:start="7:10" pos:end="7:12"><name pos:start="7:10" pos:end="7:12">int</name></type> <name pos:start="7:14" pos:end="7:14">i</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</init> <condition pos:start="7:21" pos:end="7:33"><expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">i</name> <operator pos:start="7:23" pos:end="7:23">&lt;</operator> <call pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:26">.</operator><name pos:start="7:27" pos:end="7:30">size</name></name><argument_list pos:start="7:31" pos:end="7:32">()</argument_list></call></expr>;</condition> <incr pos:start="7:35" pos:end="7:37"><expr pos:start="7:35" pos:end="7:37"><name pos:start="7:35" pos:end="7:35">i</name><operator pos:start="7:36" pos:end="7:37">++</operator></expr></incr>)</control> <block pos:start="7:40" pos:end="9:5">{<block_content pos:start="8:9" pos:end="8:18">
        <if_stmt pos:start="8:9" pos:end="8:18"><if pos:start="8:9" pos:end="8:18">if <condition pos:start="8:12" pos:end="8:18">(<expr pos:start="8:13" pos:end="8:16"><name pos:start="8:13" pos:end="8:16"><name pos:start="8:13" pos:end="8:13">s</name><index pos:start="8:14" pos:end="8:16">[<expr pos:start="8:15" pos:end="8:15"><name pos:start="8:15" pos:end="8:15">i</name></expr>]</index></name></expr> )</condition><block type="pseudo"><block_content/></block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="10:5" pos:end="10:13">return <expr pos:start="10:12" pos:end="10:12"><literal type="number" pos:start="10:12" pos:end="10:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
