<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/270/270.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="16:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list> <block pos:start="3:12" pos:end="16:1">{<block_content pos:start="4:5" pos:end="15:13">
    <decl_stmt pos:start="4:5" pos:end="4:18"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">n</name></decl> , <decl pos:start="4:13" pos:end="4:13"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:13" pos:end="4:13">a</name></decl> , <decl pos:start="4:17" pos:end="4:17"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:17" pos:end="4:17">b</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:23"><expr pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:7">cin</name> <operator pos:start="5:9" pos:end="5:10">&gt;&gt;</operator> <name pos:start="5:12" pos:end="5:12">n</name> <operator pos:start="5:14" pos:end="5:15">&gt;&gt;</operator> <name pos:start="5:17" pos:end="5:17">a</name> <operator pos:start="5:19" pos:end="5:20">&gt;&gt;</operator> <name pos:start="5:22" pos:end="5:22">b</name></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:12"><decl pos:start="6:5" pos:end="6:11"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">min</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:38"><expr pos:start="7:5" pos:end="7:37"><name pos:start="7:5" pos:end="7:7">min</name> <operator pos:start="7:9" pos:end="7:9">=</operator> <literal type="number" pos:start="7:11" pos:end="7:13">1.0</literal> <operator pos:start="7:15" pos:end="7:15">*</operator> <operator pos:start="7:17" pos:end="7:17">(</operator><name pos:start="7:18" pos:end="7:18">n</name> <operator pos:start="7:20" pos:end="7:20">*</operator> <name pos:start="7:22" pos:end="7:22">a</name> <operator pos:start="7:24" pos:end="7:24">-</operator> <literal type="number" pos:start="7:26" pos:end="7:28">600</literal><operator pos:start="7:29" pos:end="7:29">)</operator> <operator pos:start="7:31" pos:end="7:31">/</operator> <name pos:start="7:33" pos:end="7:33">b</name> <operator pos:start="7:35" pos:end="7:35">-</operator> <name pos:start="7:37" pos:end="7:37">a</name></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:28"><decl pos:start="8:5" pos:end="8:27"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:15">min_int</name> <init pos:start="8:17" pos:end="8:27">= <expr pos:start="8:19" pos:end="8:27"><call pos:start="8:19" pos:end="8:27"><name pos:start="8:19" pos:end="8:21">int</name> <argument_list pos:start="8:23" pos:end="8:27">(<argument pos:start="8:24" pos:end="8:26"><expr pos:start="8:24" pos:end="8:26"><name pos:start="8:24" pos:end="8:26">min</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="9:5" pos:end="14:5"><if pos:start="9:5" pos:end="12:5">if <condition pos:start="9:8" pos:end="9:23">(<expr pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:15">min_int</name> <operator pos:start="9:17" pos:end="9:18">!=</operator> <name pos:start="9:20" pos:end="9:22">min</name></expr>)</condition> <block pos:start="9:25" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:24">
        <expr_stmt pos:start="10:9" pos:end="10:19"><expr pos:start="10:9" pos:end="10:18"><name pos:start="10:9" pos:end="10:15">min_int</name> <operator pos:start="10:17" pos:end="10:18">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:24"><expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:12">cout</name> <operator pos:start="11:14" pos:end="11:15">&lt;&lt;</operator> <name pos:start="11:17" pos:end="11:23">min_int</name></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="12:6" pos:end="14:5">else <block pos:start="12:11" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:20">
        <expr_stmt pos:start="13:9" pos:end="13:20"><expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:12">cout</name> <operator pos:start="13:14" pos:end="13:15">&lt;&lt;</operator> <name pos:start="13:17" pos:end="13:19">min</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return pos:start="15:5" pos:end="15:13">return <expr pos:start="15:12" pos:end="15:12"><literal type="number" pos:start="15:12" pos:end="15:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
