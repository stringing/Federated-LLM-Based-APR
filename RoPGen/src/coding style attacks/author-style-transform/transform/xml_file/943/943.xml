<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/943/943.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<struct pos:start="3:1" pos:end="6:2">struct <name pos:start="3:8" pos:end="3:11">stru</name><block pos:start="3:12" pos:end="6:1">{<public type="default" pos:start="4:5" pos:end="5:14">
    <decl_stmt pos:start="4:5" pos:end="4:27"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">r</name></decl>, <decl pos:start="4:12" pos:end="4:12"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:12" pos:end="4:12">p</name></decl>, <decl pos:start="4:15" pos:end="4:17"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:15" pos:end="4:17">id0</name></decl>, <decl pos:start="4:20" pos:end="4:22"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:20" pos:end="4:22">id1</name></decl>, <decl pos:start="4:25" pos:end="4:26"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:25" pos:end="4:26">pc</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">double</name></type> <name pos:start="5:12" pos:end="5:13">pj</name></decl>;</decl_stmt>
</public>}</block>;</struct>
<struct pos:start="7:1" pos:end="10:2">struct <name pos:start="7:8" pos:end="7:12">stru2</name><block pos:start="7:13" pos:end="10:1">{<public type="default" pos:start="8:5" pos:end="9:21">
    <decl_stmt pos:start="8:5" pos:end="8:15"><decl pos:start="8:5" pos:end="8:14"><type pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:10">double</name></type> <name pos:start="8:12" pos:end="8:14">pj0</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">dr</name></decl>, <decl pos:start="9:13" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:15">s_p</name></decl>, <decl pos:start="9:18" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:20">s_k</name></decl>;</decl_stmt>
</public>}</block>;</struct>
<function pos:start="11:1" pos:end="25:1"><type pos:start="11:1" pos:end="11:4"><name pos:start="11:1" pos:end="11:4">bool</name></type> <name pos:start="11:6" pos:end="11:8">cmp</name><parameter_list pos:start="11:9" pos:end="11:24">(<parameter pos:start="11:10" pos:end="11:15"><decl pos:start="11:10" pos:end="11:15"><type pos:start="11:10" pos:end="11:15"><name pos:start="11:10" pos:end="11:13">stru</name></type> <name pos:start="11:15" pos:end="11:15">a</name></decl></parameter>, <parameter pos:start="11:18" pos:end="11:23"><decl pos:start="11:18" pos:end="11:23"><type pos:start="11:18" pos:end="11:23"><name pos:start="11:18" pos:end="11:21">stru</name></type> <name pos:start="11:23" pos:end="11:23">b</name></decl></parameter>)</parameter_list><block pos:start="11:25" pos:end="25:1">{<block_content pos:start="12:5" pos:end="24:18">
    <if_stmt pos:start="12:5" pos:end="24:18"><if pos:start="12:5" pos:end="12:26">if<condition pos:start="12:7" pos:end="12:17">(<expr pos:start="12:8" pos:end="12:16"><name pos:start="12:8" pos:end="12:11"><name pos:start="12:8" pos:end="12:8">a</name><operator pos:start="12:9" pos:end="12:9">.</operator><name pos:start="12:10" pos:end="12:11">pj</name></name><operator pos:start="12:12" pos:end="12:12">&gt;</operator><name pos:start="12:13" pos:end="12:16"><name pos:start="12:13" pos:end="12:13">b</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:16">pj</name></name></expr>)</condition><block type="pseudo" pos:start="12:18" pos:end="12:26"><block_content pos:start="12:18" pos:end="12:26"><return pos:start="12:18" pos:end="12:26">return <expr pos:start="12:25" pos:end="12:25"><literal type="number" pos:start="12:25" pos:end="12:25">1</literal></expr>;</return></block_content></block></if>
    <if type="elseif" pos:start="13:5" pos:end="23:5">else if<condition pos:start="13:12" pos:end="13:25">(<expr pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:13">a</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:16">pj</name></name> <operator pos:start="13:18" pos:end="13:19">==</operator> <name pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:21">b</name><operator pos:start="13:22" pos:end="13:22">.</operator><name pos:start="13:23" pos:end="13:24">pj</name></name></expr>)</condition><block pos:start="13:26" pos:end="23:5">{<block_content pos:start="14:9" pos:end="22:22">
        <if_stmt pos:start="14:9" pos:end="22:22"><if pos:start="14:9" pos:end="15:21">if<condition pos:start="14:11" pos:end="14:21">(<expr pos:start="14:12" pos:end="14:20"><name pos:start="14:12" pos:end="14:14"><name pos:start="14:12" pos:end="14:12">a</name><operator pos:start="14:13" pos:end="14:13">.</operator><name pos:start="14:14" pos:end="14:14">p</name></name> <operator pos:start="14:16" pos:end="14:16">&gt;</operator> <name pos:start="14:18" pos:end="14:20"><name pos:start="14:18" pos:end="14:18">b</name><operator pos:start="14:19" pos:end="14:19">.</operator><name pos:start="14:20" pos:end="14:20">p</name></name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:21"><block_content pos:start="15:13" pos:end="15:21">
            <return pos:start="15:13" pos:end="15:21">return <expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">1</literal></expr>;</return></block_content></block></if>
        <if type="elseif" pos:start="16:9" pos:end="21:9">else if<condition pos:start="16:16" pos:end="16:27">(<expr pos:start="16:17" pos:end="16:26"><name pos:start="16:17" pos:end="16:19"><name pos:start="16:17" pos:end="16:17">a</name><operator pos:start="16:18" pos:end="16:18">.</operator><name pos:start="16:19" pos:end="16:19">p</name></name> <operator pos:start="16:21" pos:end="16:22">==</operator> <name pos:start="16:24" pos:end="16:26"><name pos:start="16:24" pos:end="16:24">b</name><operator pos:start="16:25" pos:end="16:25">.</operator><name pos:start="16:26" pos:end="16:26">p</name></name></expr>)</condition><block pos:start="16:28" pos:end="21:9">{<block_content pos:start="17:13" pos:end="20:25">
            <if_stmt pos:start="17:13" pos:end="20:25"><if pos:start="17:13" pos:end="18:25">if<condition pos:start="17:15" pos:end="17:27">(<expr pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:16">a</name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:19">pc</name></name> <operator pos:start="17:21" pos:end="17:21">&lt;</operator> <name pos:start="17:23" pos:end="17:26"><name pos:start="17:23" pos:end="17:23">b</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:26">pc</name></name></expr>)</condition><block type="pseudo" pos:start="18:17" pos:end="18:25"><block_content pos:start="18:17" pos:end="18:25">
                <return pos:start="18:17" pos:end="18:25">return <expr pos:start="18:24" pos:end="18:24"><literal type="number" pos:start="18:24" pos:end="18:24">1</literal></expr>;</return></block_content></block></if>
            <else pos:start="19:13" pos:end="20:25">else<block type="pseudo" pos:start="20:17" pos:end="20:25"><block_content pos:start="20:17" pos:end="20:25">
                <return pos:start="20:17" pos:end="20:25">return <expr pos:start="20:24" pos:end="20:24"><literal type="number" pos:start="20:24" pos:end="20:24">0</literal></expr>;</return></block_content></block></else></if_stmt>
        </block_content>}</block></if>
        <else pos:start="22:9" pos:end="22:22">else<block type="pseudo" pos:start="22:14" pos:end="22:22"><block_content pos:start="22:14" pos:end="22:22"> <return pos:start="22:14" pos:end="22:22">return <expr pos:start="22:21" pos:end="22:21"><literal type="number" pos:start="22:21" pos:end="22:21">0</literal></expr>;</return></block_content></block></else></if_stmt>  
    </block_content>}</block></if>
    <else pos:start="24:5" pos:end="24:18">else<block type="pseudo" pos:start="24:10" pos:end="24:18"><block_content pos:start="24:10" pos:end="24:18"> <return pos:start="24:10" pos:end="24:18">return <expr pos:start="24:17" pos:end="24:17"><literal type="number" pos:start="24:17" pos:end="24:17">0</literal></expr>;</return></block_content></block></else></if_stmt>
</block_content>}</block></function>
<decl_stmt pos:start="26:1" pos:end="26:16"><decl pos:start="26:1" pos:end="26:15"><type pos:start="26:1" pos:end="26:13"><name pos:start="26:1" pos:end="26:13"><name pos:start="26:1" pos:end="26:6">vector</name><argument_list type="generic" pos:start="26:7" pos:end="26:13">&lt;<argument pos:start="26:8" pos:end="26:12"><expr pos:start="26:8" pos:end="26:12"><name pos:start="26:8" pos:end="26:12">stru2</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="26:15" pos:end="26:15">d</name></decl>;</decl_stmt>
<function pos:start="27:1" pos:end="77:1"><type pos:start="27:1" pos:end="27:3"><name pos:start="27:1" pos:end="27:3">int</name></type> <name pos:start="27:5" pos:end="27:8">main</name><parameter_list pos:start="27:9" pos:end="27:10">()</parameter_list><block pos:start="27:11" pos:end="77:1">{<block_content pos:start="28:5" pos:end="76:13">
    <decl_stmt pos:start="28:5" pos:end="28:19"><decl pos:start="28:5" pos:end="28:18"><type pos:start="28:5" pos:end="28:16"><name pos:start="28:5" pos:end="28:16"><name pos:start="28:5" pos:end="28:10">vector</name><argument_list type="generic" pos:start="28:11" pos:end="28:16">&lt;<argument pos:start="28:12" pos:end="28:15"><expr pos:start="28:12" pos:end="28:15"><name pos:start="28:12" pos:end="28:15">stru</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="28:18" pos:end="28:18">v</name></decl>;</decl_stmt> 
    <decl_stmt pos:start="29:5" pos:end="29:10"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:13"><expr pos:start="30:5" pos:end="30:12"><name pos:start="30:5" pos:end="30:7">cin</name> <operator pos:start="30:9" pos:end="30:10">&gt;&gt;</operator> <name pos:start="30:12" pos:end="30:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="31:5" pos:end="31:29"><decl pos:start="31:5" pos:end="31:17"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:13">index</name> <init pos:start="31:15" pos:end="31:17">= <expr pos:start="31:17" pos:end="31:17"><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr></init></decl>, <decl pos:start="31:20" pos:end="31:21"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:20" pos:end="31:21">r0</name></decl>, <decl pos:start="31:24" pos:end="31:25"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:24" pos:end="31:25">p0</name></decl>, <decl pos:start="31:28" pos:end="31:28"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:28" pos:end="31:28">x</name></decl>;</decl_stmt>
    
    <for pos:start="33:5" pos:end="58:5">for<control pos:start="33:8" pos:end="33:31">(<init pos:start="33:9" pos:end="33:18"><decl pos:start="33:9" pos:end="33:17"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:13">i</name> <init pos:start="33:15" pos:end="33:17">= <expr pos:start="33:17" pos:end="33:17"><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr></init></decl>;</init> <condition pos:start="33:20" pos:end="33:26"><expr pos:start="33:20" pos:end="33:25"><name pos:start="33:20" pos:end="33:20">i</name> <operator pos:start="33:22" pos:end="33:23">&lt;=</operator> <name pos:start="33:25" pos:end="33:25">n</name></expr>;</condition> <incr pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:28">i</name><operator pos:start="33:29" pos:end="33:30">++</operator></expr></incr>)</control><block pos:start="33:32" pos:end="58:5">{<block_content pos:start="34:9" pos:end="57:9">
        <expr_stmt pos:start="34:9" pos:end="34:29"><expr pos:start="34:9" pos:end="34:28"><name pos:start="34:9" pos:end="34:11">cin</name> <operator pos:start="34:13" pos:end="34:14">&gt;&gt;</operator> <name pos:start="34:16" pos:end="34:17">r0</name> <operator pos:start="34:19" pos:end="34:20">&gt;&gt;</operator> <name pos:start="34:22" pos:end="34:23">p0</name> <operator pos:start="34:25" pos:end="34:26">&gt;&gt;</operator> <name pos:start="34:28" pos:end="34:28">x</name></expr>;</expr_stmt>
        <decl_stmt pos:start="35:9" pos:end="35:40"><decl pos:start="35:9" pos:end="35:20"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:16">flag</name> <init pos:start="35:18" pos:end="35:20">= <expr pos:start="35:20" pos:end="35:20"><literal type="number" pos:start="35:20" pos:end="35:20">1</literal></expr></init></decl>, <decl pos:start="35:23" pos:end="35:36"><type ref="prev" pos:start="35:9" pos:end="35:11"/><name pos:start="35:23" pos:end="35:25">len</name> <init pos:start="35:27" pos:end="35:36">= <expr pos:start="35:29" pos:end="35:36"><call pos:start="35:29" pos:end="35:36"><name pos:start="35:29" pos:end="35:34"><name pos:start="35:29" pos:end="35:29">d</name><operator pos:start="35:30" pos:end="35:30">.</operator><name pos:start="35:31" pos:end="35:34">size</name></name><argument_list pos:start="35:35" pos:end="35:36">()</argument_list></call></expr></init></decl>, <decl pos:start="35:39" pos:end="35:39"><type ref="prev" pos:start="35:9" pos:end="35:11"/><name pos:start="35:39" pos:end="35:39">m</name></decl>;</decl_stmt>
        <for pos:start="36:9" pos:end="42:9">for<control pos:start="36:12" pos:end="36:32">(<init pos:start="36:13" pos:end="36:18"><expr pos:start="36:13" pos:end="36:17"><name pos:start="36:13" pos:end="36:13">m</name> <operator pos:start="36:15" pos:end="36:15">=</operator> <literal type="number" pos:start="36:17" pos:end="36:17">0</literal></expr>;</init> <condition pos:start="36:20" pos:end="36:27"><expr pos:start="36:20" pos:end="36:26"><name pos:start="36:20" pos:end="36:20">m</name> <operator pos:start="36:22" pos:end="36:22">&lt;</operator> <name pos:start="36:24" pos:end="36:26">len</name></expr>;</condition> <incr pos:start="36:29" pos:end="36:31"><expr pos:start="36:29" pos:end="36:31"><name pos:start="36:29" pos:end="36:29">m</name><operator pos:start="36:30" pos:end="36:31">++</operator></expr></incr>)</control><block pos:start="36:33" pos:end="42:9">{<block_content pos:start="37:13" pos:end="41:13">
            <if_stmt pos:start="37:13" pos:end="41:13"><if pos:start="37:13" pos:end="41:13">if<condition pos:start="37:15" pos:end="37:29">(<expr pos:start="37:16" pos:end="37:28"><name pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:16">d</name><index pos:start="37:17" pos:end="37:19">[<expr pos:start="37:18" pos:end="37:18"><name pos:start="37:18" pos:end="37:18">m</name></expr>]</index></name><operator pos:start="37:20" pos:end="37:20">.</operator><name pos:start="37:21" pos:end="37:22">dr</name> <operator pos:start="37:24" pos:end="37:25">==</operator> <name pos:start="37:27" pos:end="37:28">r0</name></expr>)</condition><block pos:start="37:30" pos:end="41:13">{<block_content pos:start="38:17" pos:end="40:30">
                <expr_stmt pos:start="38:17" pos:end="38:25"><expr pos:start="38:17" pos:end="38:24"><name pos:start="38:17" pos:end="38:20">flag</name> <operator pos:start="38:22" pos:end="38:22">=</operator> <literal type="number" pos:start="38:24" pos:end="38:24">0</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="39:17" pos:end="39:33"><expr pos:start="39:17" pos:end="39:32"><name pos:start="39:17" pos:end="39:20"><name pos:start="39:17" pos:end="39:17">d</name><index pos:start="39:18" pos:end="39:20">[<expr pos:start="39:19" pos:end="39:19"><name pos:start="39:19" pos:end="39:19">m</name></expr>]</index></name><operator pos:start="39:21" pos:end="39:21">.</operator><name pos:start="39:22" pos:end="39:24">s_p</name> <operator pos:start="39:26" pos:end="39:27">+=</operator> <name pos:start="39:29" pos:end="39:30">p0</name><operator pos:start="39:31" pos:end="39:31">*</operator><name pos:start="39:32" pos:end="39:32">x</name></expr>;</expr_stmt>
                <expr_stmt pos:start="40:17" pos:end="40:30"><expr pos:start="40:17" pos:end="40:29"><name pos:start="40:17" pos:end="40:20"><name pos:start="40:17" pos:end="40:17">d</name><index pos:start="40:18" pos:end="40:20">[<expr pos:start="40:19" pos:end="40:19"><name pos:start="40:19" pos:end="40:19">m</name></expr>]</index></name><operator pos:start="40:21" pos:end="40:21">.</operator><name pos:start="40:22" pos:end="40:24">s_k</name> <operator pos:start="40:26" pos:end="40:27">+=</operator> <name pos:start="40:29" pos:end="40:29">x</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if<condition pos:start="43:11" pos:end="43:16">(<expr pos:start="43:12" pos:end="43:15"><name pos:start="43:12" pos:end="43:15">flag</name></expr>)</condition><block pos:start="43:17" pos:end="49:9">{<block_content pos:start="44:13" pos:end="48:29">
            <decl_stmt pos:start="44:13" pos:end="44:22"><decl pos:start="44:13" pos:end="44:21"><type pos:start="44:13" pos:end="44:17"><name pos:start="44:13" pos:end="44:17">stru2</name></type> <name pos:start="44:19" pos:end="44:21">tmp</name></decl>;</decl_stmt>
            <expr_stmt pos:start="45:13" pos:end="45:24"><expr pos:start="45:13" pos:end="45:23"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:15">tmp</name><operator pos:start="45:16" pos:end="45:16">.</operator><name pos:start="45:17" pos:end="45:18">dr</name></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:23">r0</name></expr>;</expr_stmt>
            <expr_stmt pos:start="46:13" pos:end="46:24"><expr pos:start="46:13" pos:end="46:23"><name pos:start="46:13" pos:end="46:19"><name pos:start="46:13" pos:end="46:15">tmp</name><operator pos:start="46:16" pos:end="46:16">.</operator><name pos:start="46:17" pos:end="46:19">s_k</name></name> <operator pos:start="46:21" pos:end="46:21">=</operator> <name pos:start="46:23" pos:end="46:23">x</name></expr>;</expr_stmt>
            <expr_stmt pos:start="47:13" pos:end="47:27"><expr pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:15">tmp</name><operator pos:start="47:16" pos:end="47:16">.</operator><name pos:start="47:17" pos:end="47:19">s_p</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:24">p0</name><operator pos:start="47:25" pos:end="47:25">*</operator><name pos:start="47:26" pos:end="47:26">x</name></expr>;</expr_stmt> 
            <expr_stmt pos:start="48:13" pos:end="48:29"><expr pos:start="48:13" pos:end="48:28"><call pos:start="48:13" pos:end="48:28"><name pos:start="48:13" pos:end="48:23"><name pos:start="48:13" pos:end="48:13">d</name><operator pos:start="48:14" pos:end="48:14">.</operator><name pos:start="48:15" pos:end="48:23">push_back</name></name><argument_list pos:start="48:24" pos:end="48:28">(<argument pos:start="48:25" pos:end="48:27"><expr pos:start="48:25" pos:end="48:27"><name pos:start="48:25" pos:end="48:27">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <for pos:start="50:9" pos:end="57:9">for<control pos:start="50:12" pos:end="50:35">(<init pos:start="50:13" pos:end="50:22"><decl pos:start="50:13" pos:end="50:21"><type pos:start="50:13" pos:end="50:15"><name pos:start="50:13" pos:end="50:15">int</name></type> <name pos:start="50:17" pos:end="50:17">j</name> <init pos:start="50:19" pos:end="50:21">= <expr pos:start="50:21" pos:end="50:21"><literal type="number" pos:start="50:21" pos:end="50:21">1</literal></expr></init></decl>;</init> <condition pos:start="50:24" pos:end="50:30"><expr pos:start="50:24" pos:end="50:29"><name pos:start="50:24" pos:end="50:24">j</name> <operator pos:start="50:26" pos:end="50:27">&lt;=</operator> <name pos:start="50:29" pos:end="50:29">x</name></expr>;</condition> <incr pos:start="50:32" pos:end="50:34"><expr pos:start="50:32" pos:end="50:34"><name pos:start="50:32" pos:end="50:32">j</name><operator pos:start="50:33" pos:end="50:34">++</operator></expr></incr>)</control><block pos:start="50:36" pos:end="57:9">{<block_content pos:start="51:13" pos:end="56:28">
            <decl_stmt pos:start="51:13" pos:end="51:20"><decl pos:start="51:13" pos:end="51:19"><type pos:start="51:13" pos:end="51:16"><name pos:start="51:13" pos:end="51:16">stru</name></type> <name pos:start="51:18" pos:end="51:19">ts</name></decl>;</decl_stmt>
            <expr_stmt pos:start="52:13" pos:end="52:29"><expr pos:start="52:13" pos:end="52:28"><name pos:start="52:13" pos:end="52:18"><name pos:start="52:13" pos:end="52:14">ts</name><operator pos:start="52:15" pos:end="52:15">.</operator><name pos:start="52:16" pos:end="52:18">id0</name></name> <operator pos:start="52:20" pos:end="52:20">=</operator> <name pos:start="52:22" pos:end="52:26">index</name><operator pos:start="52:27" pos:end="52:28">++</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="53:13" pos:end="53:22"><expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:16"><name pos:start="53:13" pos:end="53:14">ts</name><operator pos:start="53:15" pos:end="53:15">.</operator><name pos:start="53:16" pos:end="53:16">p</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:21">p0</name></expr>;</expr_stmt>
            <expr_stmt pos:start="54:13" pos:end="54:22"><expr pos:start="54:13" pos:end="54:21"><name pos:start="54:13" pos:end="54:16"><name pos:start="54:13" pos:end="54:14">ts</name><operator pos:start="54:15" pos:end="54:15">.</operator><name pos:start="54:16" pos:end="54:16">r</name></name> <operator pos:start="54:18" pos:end="54:18">=</operator> <name pos:start="54:20" pos:end="54:21">r0</name></expr>;</expr_stmt>
            <expr_stmt pos:start="55:13" pos:end="55:22"><expr pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:17"><name pos:start="55:13" pos:end="55:14">ts</name><operator pos:start="55:15" pos:end="55:15">.</operator><name pos:start="55:16" pos:end="55:17">pc</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:21">i</name></expr>;</expr_stmt>
            <expr_stmt pos:start="56:13" pos:end="56:28"><expr pos:start="56:13" pos:end="56:27"><call pos:start="56:13" pos:end="56:27"><name pos:start="56:13" pos:end="56:23"><name pos:start="56:13" pos:end="56:13">v</name><operator pos:start="56:14" pos:end="56:14">.</operator><name pos:start="56:15" pos:end="56:23">push_back</name></name><argument_list pos:start="56:24" pos:end="56:27">(<argument pos:start="56:25" pos:end="56:26"><expr pos:start="56:25" pos:end="56:26"><name pos:start="56:25" pos:end="56:26">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <decl_stmt pos:start="59:5" pos:end="59:25"><decl pos:start="59:5" pos:end="59:24"><type pos:start="59:5" pos:end="59:7"><name pos:start="59:5" pos:end="59:7">int</name></type> <name pos:start="59:9" pos:end="59:13">len_d</name> <init pos:start="59:15" pos:end="59:24">= <expr pos:start="59:17" pos:end="59:24"><call pos:start="59:17" pos:end="59:24"><name pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:17">d</name><operator pos:start="59:18" pos:end="59:18">.</operator><name pos:start="59:19" pos:end="59:22">size</name></name><argument_list pos:start="59:23" pos:end="59:24">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for pos:start="60:5" pos:end="67:5">for<control pos:start="60:8" pos:end="60:37">(<init pos:start="60:9" pos:end="60:18"><decl pos:start="60:9" pos:end="60:17"><type pos:start="60:9" pos:end="60:11"><name pos:start="60:9" pos:end="60:11">int</name></type> <name pos:start="60:13" pos:end="60:13">i</name> <init pos:start="60:15" pos:end="60:17">= <expr pos:start="60:17" pos:end="60:17"><literal type="number" pos:start="60:17" pos:end="60:17">0</literal></expr></init></decl>;</init> <condition pos:start="60:20" pos:end="60:32"><expr pos:start="60:20" pos:end="60:31"><name pos:start="60:20" pos:end="60:20">i</name> <operator pos:start="60:22" pos:end="60:22">&lt;</operator> <call pos:start="60:24" pos:end="60:31"><name pos:start="60:24" pos:end="60:29"><name pos:start="60:24" pos:end="60:24">v</name><operator pos:start="60:25" pos:end="60:25">.</operator><name pos:start="60:26" pos:end="60:29">size</name></name><argument_list pos:start="60:30" pos:end="60:31">()</argument_list></call></expr>;</condition> <incr pos:start="60:34" pos:end="60:36"><expr pos:start="60:34" pos:end="60:36"><name pos:start="60:34" pos:end="60:34">i</name><operator pos:start="60:35" pos:end="60:36">++</operator></expr></incr>)</control><block pos:start="60:38" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:13">
        <for pos:start="61:9" pos:end="65:13">for<control pos:start="61:12" pos:end="61:38">(<init pos:start="61:13" pos:end="61:22"><decl pos:start="61:13" pos:end="61:21"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:17">j</name> <init pos:start="61:19" pos:end="61:21">= <expr pos:start="61:21" pos:end="61:21"><literal type="number" pos:start="61:21" pos:end="61:21">0</literal></expr></init></decl>;</init> <condition pos:start="61:24" pos:end="61:33"><expr pos:start="61:24" pos:end="61:32"><name pos:start="61:24" pos:end="61:24">j</name> <operator pos:start="61:26" pos:end="61:26">&lt;</operator> <name pos:start="61:28" pos:end="61:32">len_d</name></expr>;</condition> <incr pos:start="61:35" pos:end="61:37"><expr pos:start="61:35" pos:end="61:37"><name pos:start="61:35" pos:end="61:35">j</name><operator pos:start="61:36" pos:end="61:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="62:13" pos:end="65:13"><block_content pos:start="62:13" pos:end="65:13">
            <if_stmt pos:start="62:13" pos:end="65:13"><if pos:start="62:13" pos:end="65:13">if<condition pos:start="62:15" pos:end="62:33">(<expr pos:start="62:16" pos:end="62:32"><name pos:start="62:16" pos:end="62:19"><name pos:start="62:16" pos:end="62:16">v</name><index pos:start="62:17" pos:end="62:19">[<expr pos:start="62:18" pos:end="62:18"><name pos:start="62:18" pos:end="62:18">i</name></expr>]</index></name><operator pos:start="62:20" pos:end="62:20">.</operator><name pos:start="62:21" pos:end="62:21">r</name> <operator pos:start="62:23" pos:end="62:24">==</operator> <name pos:start="62:26" pos:end="62:29"><name pos:start="62:26" pos:end="62:26">d</name><index pos:start="62:27" pos:end="62:29">[<expr pos:start="62:28" pos:end="62:28"><name pos:start="62:28" pos:end="62:28">j</name></expr>]</index></name><operator pos:start="62:30" pos:end="62:30">.</operator><name pos:start="62:31" pos:end="62:32">dr</name></expr>)</condition><block pos:start="62:34" pos:end="65:13">{<block_content pos:start="63:17" pos:end="64:22">
                <expr_stmt pos:start="63:17" pos:end="63:48"><expr pos:start="63:17" pos:end="63:47"><name pos:start="63:17" pos:end="63:20"><name pos:start="63:17" pos:end="63:17">v</name><index pos:start="63:18" pos:end="63:20">[<expr pos:start="63:19" pos:end="63:19"><name pos:start="63:19" pos:end="63:19">i</name></expr>]</index></name><operator pos:start="63:21" pos:end="63:21">.</operator><name pos:start="63:22" pos:end="63:23">pj</name> <operator pos:start="63:25" pos:end="63:25">=</operator> <literal type="number" pos:start="63:27" pos:end="63:29">1.0</literal><operator pos:start="63:30" pos:end="63:30">*</operator><name pos:start="63:31" pos:end="63:34"><name pos:start="63:31" pos:end="63:31">d</name><index pos:start="63:32" pos:end="63:34">[<expr pos:start="63:33" pos:end="63:33"><name pos:start="63:33" pos:end="63:33">j</name></expr>]</index></name><operator pos:start="63:35" pos:end="63:35">.</operator><name pos:start="63:36" pos:end="63:38">s_p</name><operator pos:start="63:39" pos:end="63:39">/</operator><name pos:start="63:40" pos:end="63:43"><name pos:start="63:40" pos:end="63:40">d</name><index pos:start="63:41" pos:end="63:43">[<expr pos:start="63:42" pos:end="63:42"><name pos:start="63:42" pos:end="63:42">j</name></expr>]</index></name><operator pos:start="63:44" pos:end="63:44">.</operator><name pos:start="63:45" pos:end="63:47">s_k</name></expr>;</expr_stmt>
                <break pos:start="64:17" pos:end="64:22">break;</break>
            </block_content>}</block></if></if_stmt></block_content></block></for>
    
    </block_content>}</block></for>
    <expr_stmt pos:start="68:5" pos:end="68:34"><expr pos:start="68:5" pos:end="68:33"><call pos:start="68:5" pos:end="68:33"><name pos:start="68:5" pos:end="68:8">sort</name><argument_list pos:start="68:9" pos:end="68:33">(<argument pos:start="68:10" pos:end="68:18"><expr pos:start="68:10" pos:end="68:18"><call pos:start="68:10" pos:end="68:18"><name pos:start="68:10" pos:end="68:16"><name pos:start="68:10" pos:end="68:10">v</name><operator pos:start="68:11" pos:end="68:11">.</operator><name pos:start="68:12" pos:end="68:16">begin</name></name><argument_list pos:start="68:17" pos:end="68:18">()</argument_list></call></expr></argument>, <argument pos:start="68:21" pos:end="68:27"><expr pos:start="68:21" pos:end="68:27"><call pos:start="68:21" pos:end="68:27"><name pos:start="68:21" pos:end="68:25"><name pos:start="68:21" pos:end="68:21">v</name><operator pos:start="68:22" pos:end="68:22">.</operator><name pos:start="68:23" pos:end="68:25">end</name></name><argument_list pos:start="68:26" pos:end="68:27">()</argument_list></call></expr></argument>, <argument pos:start="68:30" pos:end="68:32"><expr pos:start="68:30" pos:end="68:32"><name pos:start="68:30" pos:end="68:32">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="69:5" pos:end="69:17"><decl pos:start="69:5" pos:end="69:16"><type pos:start="69:5" pos:end="69:7"><name pos:start="69:5" pos:end="69:7">int</name></type> <name pos:start="69:9" pos:end="69:12">summ</name> <init pos:start="69:14" pos:end="69:16">= <expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="70:5" pos:end="74:5">for<control pos:start="70:8" pos:end="70:37">(<init pos:start="70:9" pos:end="70:18"><decl pos:start="70:9" pos:end="70:17"><type pos:start="70:9" pos:end="70:11"><name pos:start="70:9" pos:end="70:11">int</name></type> <name pos:start="70:13" pos:end="70:13">i</name> <init pos:start="70:15" pos:end="70:17">= <expr pos:start="70:17" pos:end="70:17"><literal type="number" pos:start="70:17" pos:end="70:17">0</literal></expr></init></decl>;</init> <condition pos:start="70:20" pos:end="70:32"><expr pos:start="70:20" pos:end="70:31"><name pos:start="70:20" pos:end="70:20">i</name> <operator pos:start="70:22" pos:end="70:22">&lt;</operator> <call pos:start="70:24" pos:end="70:31"><name pos:start="70:24" pos:end="70:29"><name pos:start="70:24" pos:end="70:24">v</name><operator pos:start="70:25" pos:end="70:25">.</operator><name pos:start="70:26" pos:end="70:29">size</name></name><argument_list pos:start="70:30" pos:end="70:31">()</argument_list></call></expr>;</condition> <incr pos:start="70:34" pos:end="70:36"><expr pos:start="70:34" pos:end="70:36"><name pos:start="70:34" pos:end="70:34">i</name><operator pos:start="70:35" pos:end="70:36">++</operator></expr></incr>)</control><block pos:start="70:38" pos:end="74:5">{<block_content pos:start="71:9" pos:end="72:39">
        <expr_stmt pos:start="71:9" pos:end="71:23"><expr pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:12"><name pos:start="71:9" pos:end="71:9">v</name><index pos:start="71:10" pos:end="71:12">[<expr pos:start="71:11" pos:end="71:11"><name pos:start="71:11" pos:end="71:11">i</name></expr>]</index></name><operator pos:start="71:13" pos:end="71:13">.</operator><name pos:start="71:14" pos:end="71:16">id1</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:20">i</name><operator pos:start="71:21" pos:end="71:21">+</operator><literal type="number" pos:start="71:22" pos:end="71:22">1</literal></expr>;</expr_stmt> 
        <expr_stmt pos:start="72:9" pos:end="72:39"><expr pos:start="72:9" pos:end="72:38"><name pos:start="72:9" pos:end="72:12">summ</name> <operator pos:start="72:14" pos:end="72:15">+=</operator> <call pos:start="72:17" pos:end="72:38"><name pos:start="72:17" pos:end="72:19">abs</name><argument_list pos:start="72:20" pos:end="72:38">(<argument pos:start="72:21" pos:end="72:37"><expr pos:start="72:21" pos:end="72:37"><name pos:start="72:21" pos:end="72:24"><name pos:start="72:21" pos:end="72:21">v</name><index pos:start="72:22" pos:end="72:24">[<expr pos:start="72:23" pos:end="72:23"><name pos:start="72:23" pos:end="72:23">i</name></expr>]</index></name><operator pos:start="72:25" pos:end="72:25">.</operator><name pos:start="72:26" pos:end="72:28">id0</name><operator pos:start="72:29" pos:end="72:29">-</operator><name pos:start="72:30" pos:end="72:33"><name pos:start="72:30" pos:end="72:30">v</name><index pos:start="72:31" pos:end="72:33">[<expr pos:start="72:32" pos:end="72:32"><name pos:start="72:32" pos:end="72:32">i</name></expr>]</index></name><operator pos:start="72:34" pos:end="72:34">.</operator><name pos:start="72:35" pos:end="72:37">id1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    </block_content>}</block></for>
    <expr_stmt pos:start="75:5" pos:end="75:17"><expr pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:8">cout</name> <operator pos:start="75:10" pos:end="75:11">&lt;&lt;</operator> <name pos:start="75:13" pos:end="75:16">summ</name></expr>;</expr_stmt>
    <return pos:start="76:5" pos:end="76:13">return <expr pos:start="76:12" pos:end="76:12"><literal type="number" pos:start="76:12" pos:end="76:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
