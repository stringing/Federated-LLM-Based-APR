<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/632/632.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="43:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list>
<block pos:start="4:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="42:5">
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:18"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:17"><name pos:start="6:12" pos:end="6:12">q</name><index pos:start="6:13" pos:end="6:17">[<expr pos:start="6:14" pos:end="6:16"><literal type="number" pos:start="6:14" pos:end="6:16">105</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">l</name><init pos:start="7:10" pos:end="7:11">=<expr pos:start="7:11" pos:end="7:11"><literal type="number" pos:start="7:11" pos:end="7:11">0</literal></expr></init></decl>,<decl pos:start="7:13" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:13">r</name><init pos:start="7:14" pos:end="7:15">=<expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:11"><expr pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:10">n</name></expr>;</expr_stmt>
    <while pos:start="9:5" pos:end="42:5">while<condition pos:start="9:10" pos:end="9:14">(<expr pos:start="9:11" pos:end="9:13"><name pos:start="9:11" pos:end="9:11">n</name><operator pos:start="9:12" pos:end="9:13">--</operator></expr>)</condition>
    <block pos:start="10:5" pos:end="42:5">{<block_content pos:start="11:9" pos:end="41:9">
        <decl_stmt pos:start="11:9" pos:end="11:14"><decl pos:start="11:9" pos:end="11:13"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">k</name></decl>;</decl_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:15"><expr pos:start="12:9" pos:end="12:14"><name pos:start="12:9" pos:end="12:11">cin</name><operator pos:start="12:12" pos:end="12:13">&gt;&gt;</operator><name pos:start="12:14" pos:end="12:14">k</name></expr>;</expr_stmt>
        <if_stmt pos:start="13:9" pos:end="41:9"><if pos:start="13:9" pos:end="36:9">if<condition pos:start="13:11" pos:end="13:16">(<expr pos:start="13:12" pos:end="13:15"><name pos:start="13:12" pos:end="13:12">k</name><operator pos:start="13:13" pos:end="13:14">==</operator><literal type="number" pos:start="13:15" pos:end="13:15">1</literal></expr>)</condition>
        <block pos:start="14:9" pos:end="36:9">{<block_content pos:start="15:13" pos:end="35:16">
            <decl_stmt pos:start="15:13" pos:end="15:24"><decl pos:start="15:13" pos:end="15:23"><type pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:18">string</name></type> <name pos:start="15:20" pos:end="15:23">name</name></decl>;</decl_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:22"><expr pos:start="16:13" pos:end="16:21"><name pos:start="16:13" pos:end="16:15">cin</name><operator pos:start="16:16" pos:end="16:17">&gt;&gt;</operator><name pos:start="16:18" pos:end="16:21">name</name></expr>;</expr_stmt>
            <decl_stmt pos:start="17:13" pos:end="17:24"><decl pos:start="17:13" pos:end="17:23"><type pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:16">bool</name></type> <name pos:start="17:18" pos:end="17:21">flag</name><init pos:start="17:22" pos:end="17:23">=<expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="18:13" pos:end="30:13">for<control pos:start="18:16" pos:end="18:32">(<init pos:start="18:17" pos:end="18:24"><decl pos:start="18:17" pos:end="18:23"><type pos:start="18:17" pos:end="18:19"><name pos:start="18:17" pos:end="18:19">int</name></type> <name pos:start="18:21" pos:end="18:21">i</name><init pos:start="18:22" pos:end="18:23">=<expr pos:start="18:23" pos:end="18:23"><name pos:start="18:23" pos:end="18:23">l</name></expr></init></decl>;</init><condition pos:start="18:25" pos:end="18:28"><expr pos:start="18:25" pos:end="18:27"><name pos:start="18:25" pos:end="18:25">i</name><operator pos:start="18:26" pos:end="18:26">&lt;</operator><name pos:start="18:27" pos:end="18:27">r</name></expr>;</condition><incr pos:start="18:29" pos:end="18:31"><expr pos:start="18:29" pos:end="18:31"><name pos:start="18:29" pos:end="18:29">i</name><operator pos:start="18:30" pos:end="18:31">++</operator></expr></incr>)</control>
            <block pos:start="19:13" pos:end="30:13">{<block_content pos:start="20:17" pos:end="29:17">
                <if_stmt pos:start="20:17" pos:end="29:17"><if pos:start="20:17" pos:end="29:17">if<condition pos:start="20:19" pos:end="20:36">(<expr pos:start="20:20" pos:end="20:35"><name pos:start="20:20" pos:end="20:26"><name pos:start="20:20" pos:end="20:20">q</name><index pos:start="20:21" pos:end="20:23">[<expr pos:start="20:22" pos:end="20:22"><name pos:start="20:22" pos:end="20:22">i</name></expr>]</index><index pos:start="20:24" pos:end="20:26">[<expr pos:start="20:25" pos:end="20:25"><literal type="number" pos:start="20:25" pos:end="20:25">0</literal></expr>]</index></name><operator pos:start="20:27" pos:end="20:28">==</operator><name pos:start="20:29" pos:end="20:35"><name pos:start="20:29" pos:end="20:32">name</name><index pos:start="20:33" pos:end="20:35">[<expr pos:start="20:34" pos:end="20:34"><literal type="number" pos:start="20:34" pos:end="20:34">0</literal></expr>]</index></name></expr>)</condition>
                <block pos:start="21:17" pos:end="29:17">{<block_content pos:start="22:21" pos:end="28:26">
                    <for pos:start="22:21" pos:end="25:21">for<control pos:start="22:24" pos:end="22:42">(<init pos:start="22:25" pos:end="22:32"><decl pos:start="22:25" pos:end="22:31"><type pos:start="22:25" pos:end="22:27"><name pos:start="22:25" pos:end="22:27">int</name></type> <name pos:start="22:29" pos:end="22:29">j</name><init pos:start="22:30" pos:end="22:31">=<expr pos:start="22:31" pos:end="22:31"><name pos:start="22:31" pos:end="22:31">r</name></expr></init></decl>;</init><condition pos:start="22:33" pos:end="22:38"><expr pos:start="22:33" pos:end="22:37"><name pos:start="22:33" pos:end="22:33">j</name><operator pos:start="22:34" pos:end="22:34">&gt;</operator><name pos:start="22:35" pos:end="22:35">i</name><operator pos:start="22:36" pos:end="22:36">+</operator><literal type="number" pos:start="22:37" pos:end="22:37">1</literal></expr>;</condition><incr pos:start="22:39" pos:end="22:41"><expr pos:start="22:39" pos:end="22:41"><name pos:start="22:39" pos:end="22:39">j</name><operator pos:start="22:40" pos:end="22:41">--</operator></expr></incr>)</control>
                    <block pos:start="23:21" pos:end="25:21">{<block_content pos:start="24:25" pos:end="24:36">
                        <expr_stmt pos:start="24:25" pos:end="24:36"><expr pos:start="24:25" pos:end="24:35"><name pos:start="24:25" pos:end="24:28"><name pos:start="24:25" pos:end="24:25">q</name><index pos:start="24:26" pos:end="24:28">[<expr pos:start="24:27" pos:end="24:27"><name pos:start="24:27" pos:end="24:27">j</name></expr>]</index></name><operator pos:start="24:29" pos:end="24:29">=</operator><name pos:start="24:30" pos:end="24:35"><name pos:start="24:30" pos:end="24:30">q</name><index pos:start="24:31" pos:end="24:35">[<expr pos:start="24:32" pos:end="24:34"><name pos:start="24:32" pos:end="24:32">j</name><operator pos:start="24:33" pos:end="24:33">-</operator><literal type="number" pos:start="24:34" pos:end="24:34">1</literal></expr>]</index></name></expr>;</expr_stmt>
                    </block_content>}</block></for>
                    <expr_stmt pos:start="26:21" pos:end="26:32"><expr pos:start="26:21" pos:end="26:31"><name pos:start="26:21" pos:end="26:26"><name pos:start="26:21" pos:end="26:21">q</name><index pos:start="26:22" pos:end="26:26">[<expr pos:start="26:23" pos:end="26:25"><name pos:start="26:23" pos:end="26:23">i</name><operator pos:start="26:24" pos:end="26:24">+</operator><literal type="number" pos:start="26:25" pos:end="26:25">1</literal></expr>]</index></name><operator pos:start="26:27" pos:end="26:27">=</operator><name pos:start="26:28" pos:end="26:31">name</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="27:21" pos:end="27:27"><expr pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:24">flag</name><operator pos:start="27:25" pos:end="27:25">=</operator><literal type="number" pos:start="27:26" pos:end="27:26">1</literal></expr>;</expr_stmt>
                    <break pos:start="28:21" pos:end="28:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="31:13" pos:end="34:13"><if pos:start="31:13" pos:end="34:13">if<condition pos:start="31:15" pos:end="31:21">(<expr pos:start="31:16" pos:end="31:20"><operator pos:start="31:16" pos:end="31:16">!</operator><name pos:start="31:17" pos:end="31:20">flag</name></expr>)</condition>
            <block pos:start="32:13" pos:end="34:13">{<block_content pos:start="33:17" pos:end="33:26">
                <expr_stmt pos:start="33:17" pos:end="33:26"><expr pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:17">q</name><index pos:start="33:18" pos:end="33:20">[<expr pos:start="33:19" pos:end="33:19"><name pos:start="33:19" pos:end="33:19">r</name></expr>]</index></name><operator pos:start="33:21" pos:end="33:21">=</operator><name pos:start="33:22" pos:end="33:25">name</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="35:13" pos:end="35:16"><expr pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:13">r</name><operator pos:start="35:14" pos:end="35:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else pos:start="37:9" pos:end="41:9">else
        <block pos:start="38:9" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:29">
            <expr_stmt pos:start="39:13" pos:end="39:29"><expr pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:16">cout</name><operator pos:start="39:17" pos:end="39:18">&lt;&lt;</operator><name pos:start="39:19" pos:end="39:22"><name pos:start="39:19" pos:end="39:19">q</name><index pos:start="39:20" pos:end="39:22">[<expr pos:start="39:21" pos:end="39:21"><name pos:start="39:21" pos:end="39:21">r</name></expr>]</index></name><operator pos:start="39:23" pos:end="39:24">&lt;&lt;</operator><name pos:start="39:25" pos:end="39:28">endl</name></expr>;</expr_stmt>
            
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>
</unit>
