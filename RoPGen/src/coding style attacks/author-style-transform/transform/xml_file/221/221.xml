<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/221/221.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="33:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="33:1">{<block_content pos:start="4:5" pos:end="32:13">
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:20"><expr pos:start="5:5" pos:end="5:19"><call pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:9">scanf</name><argument_list pos:start="5:10" pos:end="5:19">(<argument pos:start="5:11" pos:end="5:14"><expr pos:start="5:11" pos:end="5:14"><literal type="string" pos:start="5:11" pos:end="5:14">"%d"</literal></expr></argument>, <argument pos:start="5:17" pos:end="5:18"><expr pos:start="5:17" pos:end="5:18"><operator pos:start="5:17" pos:end="5:17">&amp;</operator><name pos:start="5:18" pos:end="5:18">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:15"><decl pos:start="6:5" pos:end="6:14"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:14"><name pos:start="6:9" pos:end="6:9">a</name><index pos:start="6:10" pos:end="6:14">[<expr pos:start="6:11" pos:end="6:13"><literal type="number" pos:start="6:11" pos:end="6:13">105</literal></expr>]</index></name></decl>;</decl_stmt>
    <for pos:start="7:5" pos:end="9:5">for<control pos:start="7:8" pos:end="7:31">(<init pos:start="7:9" pos:end="7:18"><decl pos:start="7:9" pos:end="7:17"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">i</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</init> <condition pos:start="7:20" pos:end="7:25"><expr pos:start="7:20" pos:end="7:24"><name pos:start="7:20" pos:end="7:20">i</name> <operator pos:start="7:22" pos:end="7:22">&lt;</operator> <name pos:start="7:24" pos:end="7:24">n</name></expr>;</condition> <incr pos:start="7:27" pos:end="7:30"><expr pos:start="7:27" pos:end="7:30"><name pos:start="7:27" pos:end="7:27">i</name> <operator pos:start="7:29" pos:end="7:30">++</operator></expr></incr>)</control><block pos:start="7:32" pos:end="9:5">{<block_content pos:start="8:9" pos:end="8:27">
        <expr_stmt pos:start="8:9" pos:end="8:27"><expr pos:start="8:9" pos:end="8:26"><call pos:start="8:9" pos:end="8:26"><name pos:start="8:9" pos:end="8:13">scanf</name><argument_list pos:start="8:14" pos:end="8:26">(<argument pos:start="8:15" pos:end="8:18"><expr pos:start="8:15" pos:end="8:18"><literal type="string" pos:start="8:15" pos:end="8:18">"%d"</literal></expr></argument>, <argument pos:start="8:21" pos:end="8:25"><expr pos:start="8:21" pos:end="8:25"><operator pos:start="8:21" pos:end="8:21">&amp;</operator><name pos:start="8:22" pos:end="8:25"><name pos:start="8:22" pos:end="8:22">a</name><index pos:start="8:23" pos:end="8:25">[<expr pos:start="8:24" pos:end="8:24"><name pos:start="8:24" pos:end="8:24">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="10:5" pos:end="28:5">for<control pos:start="10:8" pos:end="10:34">(<init pos:start="10:9" pos:end="10:20"><decl pos:start="10:9" pos:end="10:19"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">i</name> <init pos:start="10:15" pos:end="10:19">= <expr pos:start="10:17" pos:end="10:19"><name pos:start="10:17" pos:end="10:17">n</name><operator pos:start="10:18" pos:end="10:18">-</operator><literal type="number" pos:start="10:19" pos:end="10:19">1</literal></expr></init></decl>;</init> <condition pos:start="10:22" pos:end="10:28"><expr pos:start="10:22" pos:end="10:27"><name pos:start="10:22" pos:end="10:22">i</name> <operator pos:start="10:24" pos:end="10:25">&gt;=</operator> <literal type="number" pos:start="10:27" pos:end="10:27">0</literal></expr>;</condition> <incr pos:start="10:30" pos:end="10:33"><expr pos:start="10:30" pos:end="10:33"><name pos:start="10:30" pos:end="10:30">i</name> <operator pos:start="10:32" pos:end="10:33">--</operator></expr></incr>)</control><block pos:start="10:35" pos:end="28:5">{<block_content pos:start="11:9" pos:end="27:9">
        <decl_stmt pos:start="11:9" pos:end="11:21"><decl pos:start="11:9" pos:end="11:20"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">b</name> <init pos:start="11:15" pos:end="11:20">= <expr pos:start="11:17" pos:end="11:20"><name pos:start="11:17" pos:end="11:20"><name pos:start="11:17" pos:end="11:17">a</name><index pos:start="11:18" pos:end="11:20">[<expr pos:start="11:19" pos:end="11:19"><name pos:start="11:19" pos:end="11:19">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="12:9" pos:end="12:25"><decl pos:start="12:9" pos:end="12:24"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">c</name> <init pos:start="12:15" pos:end="12:24">= <expr pos:start="12:17" pos:end="12:24"><name pos:start="12:17" pos:end="12:24"><name pos:start="12:17" pos:end="12:17">a</name><index pos:start="12:18" pos:end="12:24">[<expr pos:start="12:19" pos:end="12:23"><name pos:start="12:19" pos:end="12:19">i</name> <operator pos:start="12:21" pos:end="12:21">-</operator> <literal type="number" pos:start="12:23" pos:end="12:23">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="13:9" pos:end="13:20"><decl pos:start="13:9" pos:end="13:19"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">sum</name> <init pos:start="13:17" pos:end="13:19">= <expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="14:9" pos:end="14:21"><decl pos:start="14:9" pos:end="14:20"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:16">sum1</name> <init pos:start="14:18" pos:end="14:20">= <expr pos:start="14:20" pos:end="14:20"><literal type="number" pos:start="14:20" pos:end="14:20">0</literal></expr></init></decl>;</decl_stmt>
        <while pos:start="15:9" pos:end="18:9">while<condition pos:start="15:14" pos:end="15:21">(<expr pos:start="15:15" pos:end="15:20"><name pos:start="15:15" pos:end="15:15">b</name> <operator pos:start="15:17" pos:end="15:18">!=</operator> <literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr>)</condition><block pos:start="15:22" pos:end="18:9">{<block_content pos:start="16:13" pos:end="17:20">
            <expr_stmt pos:start="16:13" pos:end="16:26"><expr pos:start="16:13" pos:end="16:25"><name pos:start="16:13" pos:end="16:15">sum</name> <operator pos:start="16:17" pos:end="16:18">+=</operator> <name pos:start="16:20" pos:end="16:20">b</name> <operator pos:start="16:22" pos:end="16:22">%</operator> <literal type="number" pos:start="16:24" pos:end="16:25">10</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:20"><expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:13">b</name> <operator pos:start="17:15" pos:end="17:16">/=</operator> <literal type="number" pos:start="17:18" pos:end="17:19">10</literal></expr>;</expr_stmt>
        </block_content>}</block></while>
        <while pos:start="19:9" pos:end="22:9">while<condition pos:start="19:14" pos:end="19:21">(<expr pos:start="19:15" pos:end="19:20"><name pos:start="19:15" pos:end="19:15">c</name> <operator pos:start="19:17" pos:end="19:18">!=</operator> <literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>)</condition><block pos:start="19:22" pos:end="22:9">{<block_content pos:start="20:13" pos:end="21:20">
            <expr_stmt pos:start="20:13" pos:end="20:27"><expr pos:start="20:13" pos:end="20:26"><name pos:start="20:13" pos:end="20:16">sum1</name> <operator pos:start="20:18" pos:end="20:19">+=</operator> <name pos:start="20:21" pos:end="20:21">c</name> <operator pos:start="20:23" pos:end="20:23">%</operator> <literal type="number" pos:start="20:25" pos:end="20:26">10</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:20"><expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:13">c</name> <operator pos:start="21:15" pos:end="21:16">/=</operator> <literal type="number" pos:start="21:18" pos:end="21:19">10</literal></expr>;</expr_stmt>
        </block_content>}</block></while>
        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if<condition pos:start="23:11" pos:end="23:22">(<expr pos:start="23:12" pos:end="23:21"><name pos:start="23:12" pos:end="23:14">sum</name> <operator pos:start="23:16" pos:end="23:16">&gt;</operator> <name pos:start="23:18" pos:end="23:21">sum1</name></expr>)</condition><block pos:start="23:23" pos:end="27:9">{<block_content pos:start="24:13" pos:end="26:21">
            <decl_stmt pos:start="24:13" pos:end="24:29"><decl pos:start="24:13" pos:end="24:28"><type pos:start="24:13" pos:end="24:15"><name pos:start="24:13" pos:end="24:15">int</name></type> <name pos:start="24:17" pos:end="24:17">d</name> <init pos:start="24:19" pos:end="24:28">= <expr pos:start="24:21" pos:end="24:28"><name pos:start="24:21" pos:end="24:28"><name pos:start="24:21" pos:end="24:21">a</name><index pos:start="24:22" pos:end="24:28">[<expr pos:start="24:23" pos:end="24:27"><name pos:start="24:23" pos:end="24:23">i</name> <operator pos:start="24:25" pos:end="24:25">-</operator> <literal type="number" pos:start="24:27" pos:end="24:27">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="25:13" pos:end="25:26"><expr pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:13">a</name><index pos:start="25:14" pos:end="25:18">[<expr pos:start="25:15" pos:end="25:17"><name pos:start="25:15" pos:end="25:15">i</name><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>]</index></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:25"><name pos:start="25:22" pos:end="25:22">a</name><index pos:start="25:23" pos:end="25:25">[<expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">i</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="26:13" pos:end="26:21"><expr pos:start="26:13" pos:end="26:20"><name pos:start="26:13" pos:end="26:16"><name pos:start="26:13" pos:end="26:13">a</name><index pos:start="26:14" pos:end="26:16">[<expr pos:start="26:15" pos:end="26:15"><name pos:start="26:15" pos:end="26:15">i</name></expr>]</index></name> <operator pos:start="26:18" pos:end="26:18">=</operator> <name pos:start="26:20" pos:end="26:20">d</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="29:5" pos:end="31:5">for<control pos:start="29:8" pos:end="29:34">(<init pos:start="29:9" pos:end="29:20"><decl pos:start="29:9" pos:end="29:19"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:13">i</name> <init pos:start="29:15" pos:end="29:19">= <expr pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:17">n</name><operator pos:start="29:18" pos:end="29:18">-</operator><literal type="number" pos:start="29:19" pos:end="29:19">1</literal></expr></init></decl>;</init> <condition pos:start="29:22" pos:end="29:28"><expr pos:start="29:22" pos:end="29:27"><name pos:start="29:22" pos:end="29:22">i</name> <operator pos:start="29:24" pos:end="29:25">&gt;=</operator> <literal type="number" pos:start="29:27" pos:end="29:27">0</literal></expr>;</condition> <incr pos:start="29:30" pos:end="29:33"><expr pos:start="29:30" pos:end="29:33"><name pos:start="29:30" pos:end="29:30">i</name> <operator pos:start="29:32" pos:end="29:33">--</operator></expr></incr>)</control><block pos:start="29:35" pos:end="31:5">{<block_content pos:start="30:9" pos:end="30:28">
        <expr_stmt pos:start="30:9" pos:end="30:28"><expr pos:start="30:9" pos:end="30:27"><call pos:start="30:9" pos:end="30:27"><name pos:start="30:9" pos:end="30:14">printf</name><argument_list pos:start="30:15" pos:end="30:27">(<argument pos:start="30:16" pos:end="30:20"><expr pos:start="30:16" pos:end="30:20"><literal type="string" pos:start="30:16" pos:end="30:20">"%d "</literal></expr></argument>, <argument pos:start="30:23" pos:end="30:26"><expr pos:start="30:23" pos:end="30:26"><name pos:start="30:23" pos:end="30:26"><name pos:start="30:23" pos:end="30:23">a</name><index pos:start="30:24" pos:end="30:26">[<expr pos:start="30:25" pos:end="30:25"><name pos:start="30:25" pos:end="30:25">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="32:5" pos:end="32:13">return <expr pos:start="32:12" pos:end="32:12"><literal type="number" pos:start="32:12" pos:end="32:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
