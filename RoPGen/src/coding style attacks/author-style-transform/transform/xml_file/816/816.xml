<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/816/816.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:18">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:18">&lt;iomanip&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:16">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:16">&lt;cmath&gt;</cpp:file></cpp:include>
<decl_stmt pos:start="5:1" pos:end="5:13"><decl pos:start="5:1" pos:end="5:12"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:5">A</name><index pos:start="5:6" pos:end="5:12">[<expr pos:start="5:7" pos:end="5:11"><literal type="number" pos:start="5:7" pos:end="5:11">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<using pos:start="6:1" pos:end="6:20">using <namespace pos:start="6:7" pos:end="6:20">namespace <name pos:start="6:17" pos:end="6:19">std</name>;</namespace></using>
<function pos:start="7:1" pos:end="15:1"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">bool</name></type> <name pos:start="7:6" pos:end="7:8">cmp</name><parameter_list pos:start="7:9" pos:end="7:22">(<parameter pos:start="7:10" pos:end="7:14"><decl pos:start="7:10" pos:end="7:14"><type pos:start="7:10" pos:end="7:14"><name pos:start="7:10" pos:end="7:12">int</name></type> <name pos:start="7:14" pos:end="7:14">a</name></decl></parameter>, <parameter pos:start="7:17" pos:end="7:21"><decl pos:start="7:17" pos:end="7:21"><type pos:start="7:17" pos:end="7:21"><name pos:start="7:17" pos:end="7:19">int</name></type> <name pos:start="7:21" pos:end="7:21">b</name></decl></parameter>)</parameter_list> <block pos:start="7:24" pos:end="15:1">{<block_content pos:start="8:5" pos:end="14:14">
    <decl_stmt pos:start="8:5" pos:end="8:16"><decl pos:start="8:5" pos:end="8:10"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:10">m1</name></decl> , <decl pos:start="8:14" pos:end="8:15"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:14" pos:end="8:15">m2</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:25"><expr pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:6">m1</name> <operator pos:start="9:8" pos:end="9:8">=</operator> <name pos:start="9:10" pos:end="9:10">a</name> <operator pos:start="9:12" pos:end="9:12">%</operator> <literal type="number" pos:start="9:14" pos:end="9:17">10</literal> <operator pos:start="9:17" pos:end="9:17">+</operator> <name pos:start="9:19" pos:end="9:19">a</name> <operator pos:start="9:21" pos:end="9:21">/</operator> <literal type="number" pos:start="9:23" pos:end="9:24">10</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:25"><expr pos:start="10:5" pos:end="10:24"><name pos:start="10:5" pos:end="10:6">m2</name> <operator pos:start="10:8" pos:end="10:8">=</operator> <name pos:start="10:10" pos:end="10:10">b</name> <operator pos:start="10:12" pos:end="10:12">%</operator> <literal type="number" pos:start="10:14" pos:end="10:17">10</literal> <operator pos:start="10:17" pos:end="10:17">+</operator> <name pos:start="10:19" pos:end="10:19">b</name> <operator pos:start="10:21" pos:end="10:21">/</operator> <literal type="number" pos:start="10:23" pos:end="10:24">10</literal></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="13:5"><if pos:start="11:5" pos:end="13:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:10">m1</name> <operator pos:start="11:12" pos:end="11:13">!=</operator> <name pos:start="11:15" pos:end="11:16">m2</name></expr>)</condition><block pos:start="11:18" pos:end="13:5">{<block_content pos:start="12:9" pos:end="12:23">
        <return pos:start="12:9" pos:end="12:23">return <expr pos:start="12:16" pos:end="12:22"><name pos:start="12:16" pos:end="12:17">m1</name> <operator pos:start="12:19" pos:end="12:19">&lt;</operator> <name pos:start="12:21" pos:end="12:22">m2</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
 <return pos:start="14:2" pos:end="14:14">return <expr pos:start="14:9" pos:end="14:13"><name pos:start="14:9" pos:end="14:9">a</name> <operator pos:start="14:11" pos:end="14:11">&lt;</operator> <name pos:start="14:13" pos:end="14:13">b</name></expr>;</return>
</block_content>}</block></function>

<function pos:start="17:1" pos:end="27:1"><type pos:start="17:1" pos:end="17:3"><name pos:start="17:1" pos:end="17:3">int</name></type> <name pos:start="17:5" pos:end="17:8">main</name><parameter_list pos:start="17:9" pos:end="17:10">()</parameter_list> <block pos:start="17:12" pos:end="27:1">{<block_content pos:start="18:4" pos:end="26:4">
   <decl_stmt pos:start="18:4" pos:end="18:9"><decl pos:start="18:4" pos:end="18:8"><type pos:start="18:4" pos:end="18:6"><name pos:start="18:4" pos:end="18:6">int</name></type> <name pos:start="18:8" pos:end="18:8">n</name></decl>;</decl_stmt>
   <expr_stmt pos:start="19:4" pos:end="19:12"><expr pos:start="19:4" pos:end="19:11"><name pos:start="19:4" pos:end="19:6">cin</name> <operator pos:start="19:8" pos:end="19:9">&gt;&gt;</operator> <name pos:start="19:11" pos:end="19:11">n</name></expr>;</expr_stmt>
   <for pos:start="20:4" pos:end="22:4">for <control pos:start="20:8" pos:end="20:27">(<init pos:start="20:9" pos:end="20:16"><decl pos:start="20:9" pos:end="20:15"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:13">i</name><init pos:start="20:14" pos:end="20:15">=<expr pos:start="20:15" pos:end="20:15"><literal type="number" pos:start="20:15" pos:end="20:15">0</literal></expr></init></decl>;</init> <condition pos:start="20:18" pos:end="20:23"><expr pos:start="20:18" pos:end="20:22"><name pos:start="20:18" pos:end="20:18">i</name> <operator pos:start="20:20" pos:end="20:20">&lt;</operator> <name pos:start="20:22" pos:end="20:22">n</name></expr>;</condition><incr pos:start="20:24" pos:end="20:26"><expr pos:start="20:24" pos:end="20:26"><name pos:start="20:24" pos:end="20:24">i</name><operator pos:start="20:25" pos:end="20:26">++</operator></expr></incr>)</control><block pos:start="20:28" pos:end="22:4">{<block_content pos:start="21:8" pos:end="21:19">
       <expr_stmt pos:start="21:8" pos:end="21:19"><expr pos:start="21:8" pos:end="21:18"><name pos:start="21:8" pos:end="21:10">cin</name> <operator pos:start="21:12" pos:end="21:13">&gt;&gt;</operator> <name pos:start="21:15" pos:end="21:18"><name pos:start="21:15" pos:end="21:15">A</name><index pos:start="21:16" pos:end="21:18">[<expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">i</name></expr>]</index></name></expr>;</expr_stmt>
   </block_content>}</block></for>
   <expr_stmt pos:start="23:4" pos:end="23:21"><expr pos:start="23:4" pos:end="23:20"><call pos:start="23:4" pos:end="23:20"><name pos:start="23:4" pos:end="23:7">sort</name> <argument_list pos:start="23:9" pos:end="23:20">(<argument pos:start="23:10" pos:end="23:10"><expr pos:start="23:10" pos:end="23:10"><name pos:start="23:10" pos:end="23:10">A</name></expr></argument> ,<argument pos:start="23:13" pos:end="23:15"><expr pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:13">A</name><operator pos:start="23:14" pos:end="23:14">+</operator><name pos:start="23:15" pos:end="23:15">n</name></expr></argument>,<argument pos:start="23:17" pos:end="23:19"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:19">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="24:5" pos:end="26:4">for <control pos:start="24:9" pos:end="24:28">(<init pos:start="24:10" pos:end="24:17"><decl pos:start="24:10" pos:end="24:16"><type pos:start="24:10" pos:end="24:12"><name pos:start="24:10" pos:end="24:12">int</name></type> <name pos:start="24:14" pos:end="24:14">i</name><init pos:start="24:15" pos:end="24:16">=<expr pos:start="24:16" pos:end="24:16"><literal type="number" pos:start="24:16" pos:end="24:16">0</literal></expr></init></decl>;</init> <condition pos:start="24:19" pos:end="24:24"><expr pos:start="24:19" pos:end="24:23"><name pos:start="24:19" pos:end="24:19">i</name> <operator pos:start="24:21" pos:end="24:21">&lt;</operator> <name pos:start="24:23" pos:end="24:23">n</name></expr>;</condition><incr pos:start="24:25" pos:end="24:27"><expr pos:start="24:25" pos:end="24:27"><name pos:start="24:25" pos:end="24:25">i</name><operator pos:start="24:26" pos:end="24:27">++</operator></expr></incr>)</control><block pos:start="24:29" pos:end="26:4">{<block_content pos:start="25:8" pos:end="25:27">
       <expr_stmt pos:start="25:8" pos:end="25:27"><expr pos:start="25:8" pos:end="25:26"><name pos:start="25:8" pos:end="25:11">cout</name> <operator pos:start="25:13" pos:end="25:14">&lt;&lt;</operator> <name pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:16">A</name><index pos:start="25:17" pos:end="25:19">[<expr pos:start="25:18" pos:end="25:18"><name pos:start="25:18" pos:end="25:18">i</name></expr>]</index></name> <operator pos:start="25:21" pos:end="25:22">&lt;&lt;</operator> <literal type="string" pos:start="25:24" pos:end="25:26">" "</literal></expr>;</expr_stmt>
   </block_content>}</block></for>
</block_content>}</block></function>
</unit>
