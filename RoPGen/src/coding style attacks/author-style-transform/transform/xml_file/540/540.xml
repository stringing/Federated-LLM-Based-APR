<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/540/540.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:16">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:16">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:18">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:24">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<function pos:start="6:1" pos:end="45:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">mian</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list><block pos:start="6:11" pos:end="45:1">{<block_content pos:start="7:5" pos:end="44:13">
    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:13"><expr pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:7">cin</name> <operator pos:start="8:9" pos:end="8:10">&gt;&gt;</operator> <name pos:start="8:12" pos:end="8:12">x</name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:15"><expr pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:5">x</name> <operator pos:start="9:7" pos:end="9:7">=</operator> <name pos:start="9:9" pos:end="9:9">x</name> <operator pos:start="9:11" pos:end="9:11">*</operator> <literal type="number" pos:start="9:13" pos:end="9:14">60</literal></expr>;</expr_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:18"><decl pos:start="10:5" pos:end="10:17"><type pos:start="10:5" pos:end="10:15"><name pos:start="10:5" pos:end="10:15"><name pos:start="10:5" pos:end="10:10">vector</name><argument_list type="generic" pos:start="10:11" pos:end="10:15">&lt;<argument pos:start="10:12" pos:end="10:14"><expr pos:start="10:12" pos:end="10:14"><name pos:start="10:12" pos:end="10:14">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="10:17" pos:end="10:17">v</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">string</name></type> <name pos:start="11:12" pos:end="11:14">cvz</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:14"><decl pos:start="12:5" pos:end="12:13"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:9">i</name> <init pos:start="12:11" pos:end="12:13">= <expr pos:start="12:13" pos:end="12:13"><literal type="number" pos:start="12:13" pos:end="12:13">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">u</name> <init pos:start="13:11" pos:end="13:13">= <expr pos:start="13:13" pos:end="13:13"><literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:26"><decl pos:start="14:5" pos:end="14:25"><type pos:start="14:5" pos:end="14:21"><name pos:start="14:5" pos:end="14:21"><name pos:start="14:5" pos:end="14:10">string</name><operator pos:start="14:11" pos:end="14:12">::</operator><name pos:start="14:13" pos:end="14:21">size_type</name></name></type> <name pos:start="14:23" pos:end="14:25">idx</name></decl>;</decl_stmt>
    <while pos:start="15:5" pos:end="24:5">while<condition pos:start="15:10" pos:end="15:21">(<expr pos:start="15:11" pos:end="15:20"><name pos:start="15:11" pos:end="15:13">cin</name> <operator pos:start="15:15" pos:end="15:16">&gt;&gt;</operator> <name pos:start="15:18" pos:end="15:20">cvz</name></expr>)</condition><block pos:start="15:22" pos:end="24:5">{<block_content pos:start="16:9" pos:end="23:14">
        <expr_stmt pos:start="16:9" pos:end="16:37"><expr pos:start="16:9" pos:end="16:36"><name pos:start="16:9" pos:end="16:11">idx</name><operator pos:start="16:12" pos:end="16:12">=</operator><call pos:start="16:13" pos:end="16:36"><name pos:start="16:13" pos:end="16:20"><name pos:start="16:13" pos:end="16:15">cvz</name><operator pos:start="16:16" pos:end="16:16">.</operator><name pos:start="16:17" pos:end="16:20">find</name></name><argument_list pos:start="16:21" pos:end="16:36">(<argument pos:start="16:22" pos:end="16:35"><expr pos:start="16:22" pos:end="16:35"><literal type="string" pos:start="16:22" pos:end="16:35">"tingtingting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="17:9" pos:end="22:5"><if pos:start="17:9" pos:end="19:5">if<condition pos:start="17:11" pos:end="17:32">(<expr pos:start="17:12" pos:end="17:30"><name pos:start="17:12" pos:end="17:14">idx</name> <operator pos:start="17:16" pos:end="17:17">==</operator> <name pos:start="17:19" pos:end="17:30"><name pos:start="17:19" pos:end="17:24">string</name><operator pos:start="17:25" pos:end="17:26">::</operator><name pos:start="17:27" pos:end="17:30">npos</name></name></expr> )</condition><block pos:start="17:33" pos:end="19:5">{<block_content pos:start="18:9" pos:end="18:20">
        <expr_stmt pos:start="18:9" pos:end="18:20"><expr pos:start="18:9" pos:end="18:19"><name pos:start="18:9" pos:end="18:11">cin</name> <operator pos:start="18:13" pos:end="18:14">&gt;&gt;</operator> <name pos:start="18:16" pos:end="18:19"><name pos:start="18:16" pos:end="18:16">v</name><index pos:start="18:17" pos:end="18:19">[<expr pos:start="18:18" pos:end="18:18"><name pos:start="18:18" pos:end="18:18">u</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></if>
    <else pos:start="20:5" pos:end="22:5">else<block pos:start="20:9" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:17">
        <continue pos:start="21:9" pos:end="21:17">continue;</continue>
    </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:14"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">u</name><operator pos:start="23:10" pos:end="23:10">=</operator><name pos:start="23:11" pos:end="23:11">u</name><operator pos:start="23:12" pos:end="23:12">+</operator><literal type="number" pos:start="23:13" pos:end="23:13">1</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="25:5" pos:end="42:5">while<condition pos:start="25:10" pos:end="25:16">(<expr pos:start="25:11" pos:end="25:15"><name pos:start="25:11" pos:end="25:11">x</name><operator pos:start="25:12" pos:end="25:13">&gt;=</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>)</condition><block pos:start="25:17" pos:end="42:5">{<block_content pos:start="26:9" pos:end="41:18">
        <if_stmt pos:start="26:9" pos:end="40:5"><if pos:start="26:9" pos:end="34:9">if<condition pos:start="26:11" pos:end="26:34">(<expr pos:start="26:12" pos:end="26:33"><name pos:start="26:12" pos:end="26:17"><name pos:start="26:12" pos:end="26:14">cvz</name><index pos:start="26:15" pos:end="26:17">[<expr pos:start="26:16" pos:end="26:16"><name pos:start="26:16" pos:end="26:16">i</name></expr>]</index></name> <operator pos:start="26:19" pos:end="26:20">==</operator> <literal type="string" pos:start="26:22" pos:end="26:33">"kaomianjin"</literal></expr>)</condition><block pos:start="26:35" pos:end="34:9">{<block_content pos:start="27:13" pos:end="33:13">
            <if_stmt pos:start="27:13" pos:end="33:13"><if pos:start="27:13" pos:end="30:13">if<condition pos:start="27:15" pos:end="27:40">(<expr pos:start="27:16" pos:end="27:39"><name pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:18">cvz</name><index pos:start="27:19" pos:end="27:23">[<expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:20">i</name><operator pos:start="27:21" pos:end="27:21">+</operator><literal type="number" pos:start="27:22" pos:end="27:22">1</literal></expr>]</index></name><operator pos:start="27:24" pos:end="27:25">==</operator><literal type="string" pos:start="27:26" pos:end="27:39">"tingtingting"</literal></expr>)</condition><block pos:start="27:41" pos:end="30:13">{<block_content pos:start="28:17" pos:end="29:25">
                <expr_stmt pos:start="28:17" pos:end="28:34"><expr pos:start="28:17" pos:end="28:33"><name pos:start="28:17" pos:end="28:20">cout</name> <operator pos:start="28:22" pos:end="28:23">&lt;&lt;</operator> <literal type="string" pos:start="28:25" pos:end="28:33">"Hahaha."</literal></expr>;</expr_stmt>
                <return pos:start="29:17" pos:end="29:25">return <expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</return>
            </block_content>}</block></if><else pos:start="30:14" pos:end="33:13">else<block pos:start="30:18" pos:end="33:13">{<block_content pos:start="31:17" pos:end="32:25">
                <expr_stmt pos:start="31:17" pos:end="31:43"><expr pos:start="31:17" pos:end="31:42"><name pos:start="31:17" pos:end="31:20">cout</name> <operator pos:start="31:22" pos:end="31:23">&lt;&lt;</operator> <literal type="string" pos:start="31:25" pos:end="31:42">"Congratulations!"</literal></expr>;</expr_stmt>
                <return pos:start="32:17" pos:end="32:25">return <expr pos:start="32:24" pos:end="32:24"><literal type="number" pos:start="32:24" pos:end="32:24">0</literal></expr>;</return>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if><else pos:start="34:10" pos:end="40:5">else<block pos:start="34:14" pos:end="40:5">{<block_content pos:start="35:13" pos:end="39:13">
            <if_stmt pos:start="35:13" pos:end="39:13"><if pos:start="35:13" pos:end="37:13">if<condition pos:start="35:15" pos:end="35:42">(<expr pos:start="35:16" pos:end="35:41"><name pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:18">cvz</name><index pos:start="35:19" pos:end="35:23">[<expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:20">i</name><operator pos:start="35:21" pos:end="35:21">+</operator><literal type="number" pos:start="35:22" pos:end="35:22">1</literal></expr>]</index></name> <operator pos:start="35:25" pos:end="35:26">==</operator> <literal type="string" pos:start="35:28" pos:end="35:41">"tingtingting"</literal></expr>)</condition><block pos:start="35:43" pos:end="37:13">{<block_content pos:start="36:17" pos:end="36:25">
                <continue pos:start="36:17" pos:end="36:25">continue;</continue>
            </block_content>}</block></if><else pos:start="37:14" pos:end="39:13">else<block pos:start="37:18" pos:end="39:13">{<block_content pos:start="38:17" pos:end="38:29">
                <expr_stmt pos:start="38:17" pos:end="38:29"><expr pos:start="38:17" pos:end="38:28"><name pos:start="38:17" pos:end="38:17">x</name> <operator pos:start="38:19" pos:end="38:19">=</operator> <name pos:start="38:21" pos:end="38:21">x</name> <operator pos:start="38:23" pos:end="38:23">-</operator> <name pos:start="38:25" pos:end="38:28"><name pos:start="38:25" pos:end="38:25">v</name><index pos:start="38:26" pos:end="38:28">[<expr pos:start="38:27" pos:end="38:27"><name pos:start="38:27" pos:end="38:27">i</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
    </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="41:9" pos:end="41:18"><expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:9">i</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:13">i</name> <operator pos:start="41:15" pos:end="41:15">+</operator> <literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:8">cout</name> <operator pos:start="43:10" pos:end="43:11">&lt;&lt;</operator> <literal type="string" pos:start="43:13" pos:end="43:28">"Unfortunately."</literal></expr>;</expr_stmt>
    <return pos:start="44:5" pos:end="44:13">return <expr pos:start="44:12" pos:end="44:12"><literal type="number" pos:start="44:12" pos:end="44:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
