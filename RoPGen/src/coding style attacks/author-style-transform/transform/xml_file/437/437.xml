<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/437/437.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:16">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:16">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:15">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive><cpp:file pos:start="5:9" pos:end="5:15">&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include pos:start="6:1" pos:end="6:17">#<cpp:directive pos:start="6:2" pos:end="6:8">include</cpp:directive><cpp:file pos:start="6:9" pos:end="6:17">&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include pos:start="7:1" pos:end="7:13">#<cpp:directive pos:start="7:2" pos:end="7:8">include</cpp:directive><cpp:file pos:start="7:9" pos:end="7:13">&lt;map&gt;</cpp:file></cpp:include>
<cpp:include pos:start="8:1" pos:end="8:16">#<cpp:directive pos:start="8:2" pos:end="8:8">include</cpp:directive><cpp:file pos:start="8:9" pos:end="8:16">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:define pos:start="9:1" pos:end="9:29">#<cpp:directive pos:start="9:2" pos:end="9:7">define</cpp:directive> <cpp:macro pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">bug</name></cpp:macro> <cpp:value pos:start="9:13" pos:end="9:29">cout&lt;&lt;"bug"&lt;&lt;endl</cpp:value></cpp:define>
<cpp:define pos:start="10:1" pos:end="10:20">#<cpp:directive pos:start="10:2" pos:end="10:7">define</cpp:directive> <cpp:macro pos:start="10:9" pos:end="10:10"><name pos:start="10:9" pos:end="10:10">ll</name></cpp:macro> <cpp:value pos:start="10:12" pos:end="10:20">long long</cpp:value></cpp:define>
<cpp:define pos:start="11:1" pos:end="11:22">#<cpp:directive pos:start="11:2" pos:end="11:7">define</cpp:directive> <cpp:macro pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">inf</name></cpp:macro> <cpp:value pos:start="11:13" pos:end="11:22">0x3f3f3f3f</cpp:value></cpp:define>
<cpp:define pos:start="12:1" pos:end="12:22">#<cpp:directive pos:start="12:2" pos:end="12:7">define</cpp:directive> <cpp:macro pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">MOD</name></cpp:macro> <cpp:value pos:start="12:13" pos:end="12:22">1000000007</cpp:value></cpp:define>
<using pos:start="13:1" pos:end="13:20">using <namespace pos:start="13:7" pos:end="13:20">namespace <name pos:start="13:17" pos:end="13:19">std</name>;</namespace></using>
<decl_stmt pos:start="14:1" pos:end="14:8"><decl pos:start="14:1" pos:end="14:5"><type pos:start="14:1" pos:end="14:3"><name pos:start="14:1" pos:end="14:3">int</name></type> <name pos:start="14:5" pos:end="14:5">n</name></decl>,<decl pos:start="14:7" pos:end="14:7"><type ref="prev" pos:start="14:1" pos:end="14:3"/><name pos:start="14:7" pos:end="14:7">m</name></decl>;</decl_stmt>
<decl_stmt pos:start="15:1" pos:end="15:17"><decl pos:start="15:1" pos:end="15:16"><type pos:start="15:1" pos:end="15:4"><name pos:start="15:1" pos:end="15:4">char</name></type> <name pos:start="15:6" pos:end="15:16"><name pos:start="15:6" pos:end="15:6">a</name><index pos:start="15:7" pos:end="15:11">[<expr pos:start="15:8" pos:end="15:10"><literal type="number" pos:start="15:8" pos:end="15:10">105</literal></expr>]</index><index pos:start="15:12" pos:end="15:16">[<expr pos:start="15:13" pos:end="15:15"><literal type="number" pos:start="15:13" pos:end="15:15">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="16:1" pos:end="16:16"><decl pos:start="16:1" pos:end="16:15"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:15"><name pos:start="16:5" pos:end="16:5">b</name><index pos:start="16:6" pos:end="16:10">[<expr pos:start="16:7" pos:end="16:9"><literal type="number" pos:start="16:7" pos:end="16:9">105</literal></expr>]</index><index pos:start="16:11" pos:end="16:15">[<expr pos:start="16:12" pos:end="16:14"><literal type="number" pos:start="16:12" pos:end="16:14">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="17:1" pos:end="17:23"><decl pos:start="17:1" pos:end="17:22"><type pos:start="17:1" pos:end="17:11"><name pos:start="17:1" pos:end="17:11"><name pos:start="17:1" pos:end="17:6">vector</name><argument_list type="generic" pos:start="17:7" pos:end="17:11">&lt;<argument pos:start="17:8" pos:end="17:10"><expr pos:start="17:8" pos:end="17:10"><name pos:start="17:8" pos:end="17:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:15">ver</name><index pos:start="17:16" pos:end="17:22">[<expr pos:start="17:17" pos:end="17:21"><literal type="number" pos:start="17:17" pos:end="17:21">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="18:1" pos:end="18:24"><decl pos:start="18:1" pos:end="18:23"><type pos:start="18:1" pos:end="18:11"><name pos:start="18:1" pos:end="18:11"><name pos:start="18:1" pos:end="18:6">vector</name><argument_list type="generic" pos:start="18:7" pos:end="18:11">&lt;<argument pos:start="18:8" pos:end="18:10"><expr pos:start="18:8" pos:end="18:10"><name pos:start="18:8" pos:end="18:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="18:13" pos:end="18:23"><name pos:start="18:13" pos:end="18:16">ver1</name><index pos:start="18:17" pos:end="18:23">[<expr pos:start="18:18" pos:end="18:22"><literal type="number" pos:start="18:18" pos:end="18:22">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="19:1" pos:end="19:24"><decl pos:start="19:1" pos:end="19:23"><type pos:start="19:1" pos:end="19:11"><name pos:start="19:1" pos:end="19:11"><name pos:start="19:1" pos:end="19:6">vector</name><argument_list type="generic" pos:start="19:7" pos:end="19:11">&lt;<argument pos:start="19:8" pos:end="19:10"><expr pos:start="19:8" pos:end="19:10"><name pos:start="19:8" pos:end="19:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:16">ver2</name><index pos:start="19:17" pos:end="19:23">[<expr pos:start="19:18" pos:end="19:22"><literal type="number" pos:start="19:18" pos:end="19:22">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="20:1" pos:end="20:24"><decl pos:start="20:1" pos:end="20:23"><type pos:start="20:1" pos:end="20:11"><name pos:start="20:1" pos:end="20:11"><name pos:start="20:1" pos:end="20:6">vector</name><argument_list type="generic" pos:start="20:7" pos:end="20:11">&lt;<argument pos:start="20:8" pos:end="20:10"><expr pos:start="20:8" pos:end="20:10"><name pos:start="20:8" pos:end="20:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="20:13" pos:end="20:23"><name pos:start="20:13" pos:end="20:16">ver3</name><index pos:start="20:17" pos:end="20:23">[<expr pos:start="20:18" pos:end="20:22"><literal type="number" pos:start="20:18" pos:end="20:22">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="21:1" pos:end="21:24"><decl pos:start="21:1" pos:end="21:13"><type pos:start="21:1" pos:end="21:3"><name pos:start="21:1" pos:end="21:3">int</name></type> <name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:5">x</name><index pos:start="21:6" pos:end="21:13">[<expr pos:start="21:7" pos:end="21:12"><literal type="number" pos:start="21:7" pos:end="21:12">100000</literal></expr>]</index></name></decl>,<decl pos:start="21:15" pos:end="21:23"><type ref="prev" pos:start="21:1" pos:end="21:3"/><name pos:start="21:15" pos:end="21:23"><name pos:start="21:15" pos:end="21:15">y</name><index pos:start="21:16" pos:end="21:23">[<expr pos:start="21:17" pos:end="21:22"><literal type="number" pos:start="21:17" pos:end="21:22">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="22:1" pos:end="22:10"><decl pos:start="22:1" pos:end="22:9"><type pos:start="22:1" pos:end="22:3"><name pos:start="22:1" pos:end="22:3">int</name></type> <name pos:start="22:5" pos:end="22:7">top</name><init pos:start="22:8" pos:end="22:9">=<expr pos:start="22:9" pos:end="22:9"><literal type="number" pos:start="22:9" pos:end="22:9">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="23:1" pos:end="23:28"><decl pos:start="23:1" pos:end="23:15"><type pos:start="23:1" pos:end="23:3"><name pos:start="23:1" pos:end="23:3">int</name></type> <name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:7">dfn</name><index pos:start="23:8" pos:end="23:15">[<expr pos:start="23:9" pos:end="23:14"><literal type="number" pos:start="23:9" pos:end="23:14">100000</literal></expr>]</index></name></decl>,<decl pos:start="23:17" pos:end="23:27"><type ref="prev" pos:start="23:1" pos:end="23:3"/><name pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:19">low</name><index pos:start="23:20" pos:end="23:27">[<expr pos:start="23:21" pos:end="23:26"><literal type="number" pos:start="23:21" pos:end="23:26">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="24:1" pos:end="24:10"><decl pos:start="24:1" pos:end="24:9"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:7">tot</name><init pos:start="24:8" pos:end="24:9">=<expr pos:start="24:9" pos:end="24:9"><literal type="number" pos:start="24:9" pos:end="24:9">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="25:1" pos:end="25:17"><decl pos:start="25:1" pos:end="25:16"><type pos:start="25:1" pos:end="25:3"><name pos:start="25:1" pos:end="25:3">int</name></type> <name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:8">zhan</name><index pos:start="25:9" pos:end="25:16">[<expr pos:start="25:10" pos:end="25:15"><literal type="number" pos:start="25:10" pos:end="25:15">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="26:1" pos:end="26:14"><decl pos:start="26:1" pos:end="26:13"><type pos:start="26:1" pos:end="26:3"><name pos:start="26:1" pos:end="26:3">int</name></type> <name pos:start="26:5" pos:end="26:11">topzhan</name><init pos:start="26:12" pos:end="26:13">=<expr pos:start="26:13" pos:end="26:13"><literal type="number" pos:start="26:13" pos:end="26:13">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="27:1" pos:end="27:17"><decl pos:start="27:1" pos:end="27:16"><type pos:start="27:1" pos:end="27:3"><name pos:start="27:1" pos:end="27:3">int</name></type> <name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:8">flag</name><index pos:start="27:9" pos:end="27:16">[<expr pos:start="27:10" pos:end="27:15"><literal type="number" pos:start="27:10" pos:end="27:15">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="28:1" pos:end="28:10"><decl pos:start="28:1" pos:end="28:9"><type pos:start="28:1" pos:end="28:3"><name pos:start="28:1" pos:end="28:3">int</name></type> <name pos:start="28:5" pos:end="28:7">cnt</name><init pos:start="28:8" pos:end="28:9">=<expr pos:start="28:9" pos:end="28:9"><literal type="number" pos:start="28:9" pos:end="28:9">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="29:1" pos:end="29:17"><decl pos:start="29:1" pos:end="29:16"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:8">sum1</name><index pos:start="29:9" pos:end="29:16">[<expr pos:start="29:10" pos:end="29:15"><literal type="number" pos:start="29:10" pos:end="29:15">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="30:1" pos:end="30:17"><decl pos:start="30:1" pos:end="30:16"><type pos:start="30:1" pos:end="30:3"><name pos:start="30:1" pos:end="30:3">int</name></type> <name pos:start="30:5" pos:end="30:16"><name pos:start="30:5" pos:end="30:8">sum2</name><index pos:start="30:9" pos:end="30:16">[<expr pos:start="30:10" pos:end="30:15"><literal type="number" pos:start="30:10" pos:end="30:15">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="31:1" pos:end="31:13"><decl pos:start="31:1" pos:end="31:12"><type pos:start="31:1" pos:end="31:3"><name pos:start="31:1" pos:end="31:3">int</name></type> <name pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:5">f</name><index pos:start="31:6" pos:end="31:12">[<expr pos:start="31:7" pos:end="31:11"><literal type="number" pos:start="31:7" pos:end="31:11">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="32:1" pos:end="32:12"><decl pos:start="32:1" pos:end="32:11"><type pos:start="32:1" pos:end="32:3"><name pos:start="32:1" pos:end="32:3">int</name></type> <name pos:start="32:5" pos:end="32:9">flag1</name><init pos:start="32:10" pos:end="32:11">=<expr pos:start="32:11" pos:end="32:11"><literal type="number" pos:start="32:11" pos:end="32:11">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="33:1" pos:end="63:1"><type pos:start="33:1" pos:end="33:4"><name pos:start="33:1" pos:end="33:4">void</name></type> <name pos:start="33:6" pos:end="33:11">tarjan</name><parameter_list pos:start="33:12" pos:end="33:18">(<parameter pos:start="33:13" pos:end="33:17"><decl pos:start="33:13" pos:end="33:17"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:17">u</name></decl></parameter>)</parameter_list><block pos:start="33:19" pos:end="63:1">{<block_content pos:start="34:5" pos:end="62:5">
    <expr_stmt pos:start="34:5" pos:end="34:26"><expr pos:start="34:5" pos:end="34:14"><name pos:start="34:5" pos:end="34:10"><name pos:start="34:5" pos:end="34:7">dfn</name><index pos:start="34:8" pos:end="34:10">[<expr pos:start="34:9" pos:end="34:9"><name pos:start="34:9" pos:end="34:9">u</name></expr>]</index></name><operator pos:start="34:11" pos:end="34:11">=</operator><name pos:start="34:12" pos:end="34:14">tot</name></expr><operator pos:start="34:15" pos:end="34:15">,</operator><expr pos:start="34:16" pos:end="34:25"><name pos:start="34:16" pos:end="34:21"><name pos:start="34:16" pos:end="34:18">low</name><index pos:start="34:19" pos:end="34:21">[<expr pos:start="34:20" pos:end="34:20"><name pos:start="34:20" pos:end="34:20">u</name></expr>]</index></name><operator pos:start="34:22" pos:end="34:22">=</operator><name pos:start="34:23" pos:end="34:25">tot</name></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:10"><expr pos:start="35:5" pos:end="35:9"><name pos:start="35:5" pos:end="35:7">tot</name><operator pos:start="35:8" pos:end="35:9">++</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:22"><expr pos:start="36:5" pos:end="36:21"><name pos:start="36:5" pos:end="36:19"><name pos:start="36:5" pos:end="36:8">zhan</name><index pos:start="36:9" pos:end="36:19">[<expr pos:start="36:10" pos:end="36:18"><name pos:start="36:10" pos:end="36:16">topzhan</name><operator pos:start="36:17" pos:end="36:18">++</operator></expr>]</index></name><operator pos:start="36:20" pos:end="36:20">=</operator><name pos:start="36:21" pos:end="36:21">u</name></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:14"><expr pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:8">flag</name><index pos:start="37:9" pos:end="37:11">[<expr pos:start="37:10" pos:end="37:10"><name pos:start="37:10" pos:end="37:10">u</name></expr>]</index></name><operator pos:start="37:12" pos:end="37:12">=</operator><literal type="number" pos:start="37:13" pos:end="37:13">1</literal></expr>;</expr_stmt>
    <for pos:start="38:5" pos:end="47:5">for<control pos:start="38:8" pos:end="38:36">(<init pos:start="38:9" pos:end="38:16"><decl pos:start="38:9" pos:end="38:15"><type pos:start="38:9" pos:end="38:11"><name pos:start="38:9" pos:end="38:11">int</name></type> <name pos:start="38:13" pos:end="38:13">i</name><init pos:start="38:14" pos:end="38:15">=<expr pos:start="38:15" pos:end="38:15"><literal type="number" pos:start="38:15" pos:end="38:15">0</literal></expr></init></decl>;</init><condition pos:start="38:17" pos:end="38:32"><expr pos:start="38:17" pos:end="38:31"><name pos:start="38:17" pos:end="38:17">i</name><operator pos:start="38:18" pos:end="38:18">&lt;</operator><name pos:start="38:19" pos:end="38:24"><name pos:start="38:19" pos:end="38:21">ver</name><index pos:start="38:22" pos:end="38:24">[<expr pos:start="38:23" pos:end="38:23"><name pos:start="38:23" pos:end="38:23">u</name></expr>]</index></name><operator pos:start="38:25" pos:end="38:25">.</operator><call pos:start="38:26" pos:end="38:31"><name pos:start="38:26" pos:end="38:29">size</name><argument_list pos:start="38:30" pos:end="38:31">()</argument_list></call></expr>;</condition><incr pos:start="38:33" pos:end="38:35"><expr pos:start="38:33" pos:end="38:35"><name pos:start="38:33" pos:end="38:33">i</name><operator pos:start="38:34" pos:end="38:35">++</operator></expr></incr>)</control><block pos:start="38:37" pos:end="47:5">{<block_content pos:start="39:9" pos:end="46:9">
        <decl_stmt pos:start="39:9" pos:end="39:24"><decl pos:start="39:9" pos:end="39:23"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:13">v</name><init pos:start="39:14" pos:end="39:23">=<expr pos:start="39:15" pos:end="39:23"><name pos:start="39:15" pos:end="39:23"><name pos:start="39:15" pos:end="39:17">ver</name><index pos:start="39:18" pos:end="39:20">[<expr pos:start="39:19" pos:end="39:19"><name pos:start="39:19" pos:end="39:19">u</name></expr>]</index><index pos:start="39:21" pos:end="39:23">[<expr pos:start="39:22" pos:end="39:22"><name pos:start="39:22" pos:end="39:22">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="40:9" pos:end="46:9"><if pos:start="40:9" pos:end="43:9">if<condition pos:start="40:11" pos:end="40:21">(<expr pos:start="40:12" pos:end="40:20"><name pos:start="40:12" pos:end="40:17"><name pos:start="40:12" pos:end="40:14">dfn</name><index pos:start="40:15" pos:end="40:17">[<expr pos:start="40:16" pos:end="40:16"><name pos:start="40:16" pos:end="40:16">v</name></expr>]</index></name><operator pos:start="40:18" pos:end="40:19">==</operator><literal type="number" pos:start="40:20" pos:end="40:20">0</literal></expr>)</condition><block pos:start="40:22" pos:end="43:9">{<block_content pos:start="41:13" pos:end="42:38">
            <expr_stmt pos:start="41:13" pos:end="41:22"><expr pos:start="41:13" pos:end="41:21"><call pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:18">tarjan</name><argument_list pos:start="41:19" pos:end="41:21">(<argument pos:start="41:20" pos:end="41:20"><expr pos:start="41:20" pos:end="41:20"><name pos:start="41:20" pos:end="41:20">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="42:13" pos:end="42:38"><expr pos:start="42:13" pos:end="42:37"><name pos:start="42:13" pos:end="42:18"><name pos:start="42:13" pos:end="42:15">low</name><index pos:start="42:16" pos:end="42:18">[<expr pos:start="42:17" pos:end="42:17"><name pos:start="42:17" pos:end="42:17">u</name></expr>]</index></name><operator pos:start="42:19" pos:end="42:19">=</operator><call pos:start="42:20" pos:end="42:37"><name pos:start="42:20" pos:end="42:22">min</name><argument_list pos:start="42:23" pos:end="42:37">(<argument pos:start="42:24" pos:end="42:29"><expr pos:start="42:24" pos:end="42:29"><name pos:start="42:24" pos:end="42:29"><name pos:start="42:24" pos:end="42:26">low</name><index pos:start="42:27" pos:end="42:29">[<expr pos:start="42:28" pos:end="42:28"><name pos:start="42:28" pos:end="42:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="42:31" pos:end="42:36"><expr pos:start="42:31" pos:end="42:36"><name pos:start="42:31" pos:end="42:36"><name pos:start="42:31" pos:end="42:33">low</name><index pos:start="42:34" pos:end="42:36">[<expr pos:start="42:35" pos:end="42:35"><name pos:start="42:35" pos:end="42:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="44:9" pos:end="46:9">else if<condition pos:start="44:16" pos:end="44:27">(<expr pos:start="44:17" pos:end="44:26"><name pos:start="44:17" pos:end="44:23"><name pos:start="44:17" pos:end="44:20">flag</name><index pos:start="44:21" pos:end="44:23">[<expr pos:start="44:22" pos:end="44:22"><name pos:start="44:22" pos:end="44:22">v</name></expr>]</index></name><operator pos:start="44:24" pos:end="44:25">==</operator><literal type="number" pos:start="44:26" pos:end="44:26">1</literal></expr>)</condition><block pos:start="44:28" pos:end="46:9">{<block_content pos:start="45:13" pos:end="45:38">
            <expr_stmt pos:start="45:13" pos:end="45:38"><expr pos:start="45:13" pos:end="45:37"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:15">low</name><index pos:start="45:16" pos:end="45:18">[<expr pos:start="45:17" pos:end="45:17"><name pos:start="45:17" pos:end="45:17">u</name></expr>]</index></name><operator pos:start="45:19" pos:end="45:19">=</operator><call pos:start="45:20" pos:end="45:37"><name pos:start="45:20" pos:end="45:22">min</name><argument_list pos:start="45:23" pos:end="45:37">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:26">low</name><index pos:start="45:27" pos:end="45:29">[<expr pos:start="45:28" pos:end="45:28"><name pos:start="45:28" pos:end="45:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="45:31" pos:end="45:36"><expr pos:start="45:31" pos:end="45:36"><name pos:start="45:31" pos:end="45:36"><name pos:start="45:31" pos:end="45:33">dfn</name><index pos:start="45:34" pos:end="45:36">[<expr pos:start="45:35" pos:end="45:35"><name pos:start="45:35" pos:end="45:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="48:5" pos:end="62:5"><if pos:start="48:5" pos:end="62:5">if<condition pos:start="48:7" pos:end="48:22">(<expr pos:start="48:8" pos:end="48:21"><name pos:start="48:8" pos:end="48:13"><name pos:start="48:8" pos:end="48:10">low</name><index pos:start="48:11" pos:end="48:13">[<expr pos:start="48:12" pos:end="48:12"><name pos:start="48:12" pos:end="48:12">u</name></expr>]</index></name><operator pos:start="48:14" pos:end="48:15">==</operator><name pos:start="48:16" pos:end="48:21"><name pos:start="48:16" pos:end="48:18">dfn</name><index pos:start="48:19" pos:end="48:21">[<expr pos:start="48:20" pos:end="48:20"><name pos:start="48:20" pos:end="48:20">u</name></expr>]</index></name></expr>)</condition><block pos:start="48:23" pos:end="62:5">{<block_content pos:start="49:9" pos:end="61:9">
        <expr_stmt pos:start="49:9" pos:end="49:14"><expr pos:start="49:9" pos:end="49:13"><name pos:start="49:9" pos:end="49:11">cnt</name><operator pos:start="49:12" pos:end="49:13">++</operator></expr>;</expr_stmt>
        <if_stmt pos:start="50:9" pos:end="52:9"><if pos:start="50:9" pos:end="52:9">if<condition pos:start="50:11" pos:end="50:16">(<expr pos:start="50:12" pos:end="50:15"><name pos:start="50:12" pos:end="50:12">u</name><operator pos:start="50:13" pos:end="50:14">==</operator><literal type="number" pos:start="50:15" pos:end="50:15">1</literal></expr>)</condition><block pos:start="50:17" pos:end="52:9">{<block_content pos:start="51:13" pos:end="51:22">
            <expr_stmt pos:start="51:13" pos:end="51:22"><expr pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:17">flag1</name><operator pos:start="51:18" pos:end="51:18">=</operator><name pos:start="51:19" pos:end="51:21">cnt</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <while pos:start="53:9" pos:end="61:9">while<condition pos:start="53:14" pos:end="53:16">(<expr pos:start="53:15" pos:end="53:15"><literal type="number" pos:start="53:15" pos:end="53:15">1</literal></expr>)</condition><block pos:start="53:17" pos:end="61:9">{<block_content pos:start="54:13" pos:end="60:13">
            <decl_stmt pos:start="54:13" pos:end="54:34"><decl pos:start="54:13" pos:end="54:33"><type pos:start="54:13" pos:end="54:15"><name pos:start="54:13" pos:end="54:15">int</name></type> <name pos:start="54:17" pos:end="54:17">x</name><init pos:start="54:18" pos:end="54:33">=<expr pos:start="54:19" pos:end="54:33"><name pos:start="54:19" pos:end="54:33"><name pos:start="54:19" pos:end="54:22">zhan</name><index pos:start="54:23" pos:end="54:33">[<expr pos:start="54:24" pos:end="54:32"><name pos:start="54:24" pos:end="54:30">topzhan</name><operator pos:start="54:31" pos:end="54:31">-</operator><literal type="number" pos:start="54:32" pos:end="54:32">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="55:13" pos:end="55:22"><expr pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:19">topzhan</name><operator pos:start="55:20" pos:end="55:21">--</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="56:13" pos:end="56:22"><expr pos:start="56:13" pos:end="56:21"><name pos:start="56:13" pos:end="56:19"><name pos:start="56:13" pos:end="56:16">flag</name><index pos:start="56:17" pos:end="56:19">[<expr pos:start="56:18" pos:end="56:18"><name pos:start="56:18" pos:end="56:18">x</name></expr>]</index></name><operator pos:start="56:20" pos:end="56:20">=</operator><literal type="number" pos:start="56:21" pos:end="56:21">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="57:13" pos:end="57:24"><expr pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:16">sum1</name><index pos:start="57:17" pos:end="57:19">[<expr pos:start="57:18" pos:end="57:18"><name pos:start="57:18" pos:end="57:18">x</name></expr>]</index></name><operator pos:start="57:20" pos:end="57:20">=</operator><name pos:start="57:21" pos:end="57:23">cnt</name></expr>;</expr_stmt>
            <if_stmt pos:start="58:13" pos:end="60:13"><if pos:start="58:13" pos:end="60:13">if<condition pos:start="58:15" pos:end="58:20">(<expr pos:start="58:16" pos:end="58:19"><name pos:start="58:16" pos:end="58:16">x</name><operator pos:start="58:17" pos:end="58:18">==</operator><name pos:start="58:19" pos:end="58:19">u</name></expr>)</condition><block pos:start="58:21" pos:end="60:13">{<block_content pos:start="59:17" pos:end="59:22">
                <break pos:start="59:17" pos:end="59:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="64:1" pos:end="76:1"><type pos:start="64:1" pos:end="64:3"><name pos:start="64:1" pos:end="64:3">int</name></type> <name pos:start="64:5" pos:end="64:7">dfs</name><parameter_list pos:start="64:8" pos:end="64:14">(<parameter pos:start="64:9" pos:end="64:13"><decl pos:start="64:9" pos:end="64:13"><type pos:start="64:9" pos:end="64:11"><name pos:start="64:9" pos:end="64:11">int</name></type> <name pos:start="64:13" pos:end="64:13">u</name></decl></parameter>)</parameter_list><block pos:start="64:15" pos:end="76:1">{<block_content pos:start="65:5" pos:end="75:16">
    <if_stmt pos:start="65:5" pos:end="67:5"><if pos:start="65:5" pos:end="67:5">if<condition pos:start="65:7" pos:end="65:16">(<expr pos:start="65:8" pos:end="65:15"><name pos:start="65:8" pos:end="65:11"><name pos:start="65:8" pos:end="65:8">f</name><index pos:start="65:9" pos:end="65:11">[<expr pos:start="65:10" pos:end="65:10"><name pos:start="65:10" pos:end="65:10">u</name></expr>]</index></name><operator pos:start="65:12" pos:end="65:13">!=</operator><operator pos:start="65:14" pos:end="65:14">-</operator><literal type="number" pos:start="65:15" pos:end="65:15">1</literal></expr>)</condition><block pos:start="65:17" pos:end="67:5">{<block_content pos:start="66:9" pos:end="66:20">
        <return pos:start="66:9" pos:end="66:20">return <expr pos:start="66:16" pos:end="66:19"><name pos:start="66:16" pos:end="66:19"><name pos:start="66:16" pos:end="66:16">f</name><index pos:start="66:17" pos:end="66:19">[<expr pos:start="66:18" pos:end="66:18"><name pos:start="66:18" pos:end="66:18">u</name></expr>]</index></name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt pos:start="68:5" pos:end="68:15"><decl pos:start="68:5" pos:end="68:14"><type pos:start="68:5" pos:end="68:7"><name pos:start="68:5" pos:end="68:7">int</name></type> <name pos:start="68:9" pos:end="68:12">maxx</name><init pos:start="68:13" pos:end="68:14">=<expr pos:start="68:14" pos:end="68:14"><literal type="number" pos:start="68:14" pos:end="68:14">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="69:5" pos:end="72:5">for<control pos:start="69:8" pos:end="69:37">(<init pos:start="69:9" pos:end="69:16"><decl pos:start="69:9" pos:end="69:15"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:13">i</name><init pos:start="69:14" pos:end="69:15">=<expr pos:start="69:15" pos:end="69:15"><literal type="number" pos:start="69:15" pos:end="69:15">0</literal></expr></init></decl>;</init><condition pos:start="69:17" pos:end="69:33"><expr pos:start="69:17" pos:end="69:32"><name pos:start="69:17" pos:end="69:17">i</name><operator pos:start="69:18" pos:end="69:18">&lt;</operator><name pos:start="69:19" pos:end="69:25"><name pos:start="69:19" pos:end="69:22">ver2</name><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">u</name></expr>]</index></name><operator pos:start="69:26" pos:end="69:26">.</operator><call pos:start="69:27" pos:end="69:32"><name pos:start="69:27" pos:end="69:30">size</name><argument_list pos:start="69:31" pos:end="69:32">()</argument_list></call></expr>;</condition><incr pos:start="69:34" pos:end="69:36"><expr pos:start="69:34" pos:end="69:36"><name pos:start="69:34" pos:end="69:34">i</name><operator pos:start="69:35" pos:end="69:36">++</operator></expr></incr>)</control><block pos:start="69:38" pos:end="72:5">{<block_content pos:start="70:9" pos:end="71:41">
        <decl_stmt pos:start="70:9" pos:end="70:25"><decl pos:start="70:9" pos:end="70:24"><type pos:start="70:9" pos:end="70:11"><name pos:start="70:9" pos:end="70:11">int</name></type> <name pos:start="70:13" pos:end="70:13">v</name><init pos:start="70:14" pos:end="70:24">=<expr pos:start="70:15" pos:end="70:24"><name pos:start="70:15" pos:end="70:24"><name pos:start="70:15" pos:end="70:18">ver2</name><index pos:start="70:19" pos:end="70:21">[<expr pos:start="70:20" pos:end="70:20"><name pos:start="70:20" pos:end="70:20">u</name></expr>]</index><index pos:start="70:22" pos:end="70:24">[<expr pos:start="70:23" pos:end="70:23"><name pos:start="70:23" pos:end="70:23">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="71:9" pos:end="71:41"><expr pos:start="71:9" pos:end="71:40"><name pos:start="71:9" pos:end="71:12">maxx</name><operator pos:start="71:13" pos:end="71:13">=</operator><call pos:start="71:14" pos:end="71:40"><name pos:start="71:14" pos:end="71:16">max</name><argument_list pos:start="71:17" pos:end="71:40">(<argument pos:start="71:18" pos:end="71:21"><expr pos:start="71:18" pos:end="71:21"><name pos:start="71:18" pos:end="71:21">maxx</name></expr></argument>,<argument pos:start="71:23" pos:end="71:39"><expr pos:start="71:23" pos:end="71:39"><call pos:start="71:23" pos:end="71:28"><name pos:start="71:23" pos:end="71:25">dfs</name><argument_list pos:start="71:26" pos:end="71:28">(<argument pos:start="71:27" pos:end="71:27"><expr pos:start="71:27" pos:end="71:27"><name pos:start="71:27" pos:end="71:27">v</name></expr></argument>)</argument_list></call><operator pos:start="71:29" pos:end="71:29">+</operator><name pos:start="71:30" pos:end="71:39"><name pos:start="71:30" pos:end="71:33">ver3</name><index pos:start="71:34" pos:end="71:36">[<expr pos:start="71:35" pos:end="71:35"><name pos:start="71:35" pos:end="71:35">u</name></expr>]</index><index pos:start="71:37" pos:end="71:39">[<expr pos:start="71:38" pos:end="71:38"><name pos:start="71:38" pos:end="71:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="73:5" pos:end="73:18"><expr pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:8">maxx</name><operator pos:start="73:9" pos:end="73:10">+=</operator><name pos:start="73:11" pos:end="73:17"><name pos:start="73:11" pos:end="73:14">sum2</name><index pos:start="73:15" pos:end="73:17">[<expr pos:start="73:16" pos:end="73:16"><name pos:start="73:16" pos:end="73:16">u</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="74:5" pos:end="74:14"><expr pos:start="74:5" pos:end="74:13"><name pos:start="74:5" pos:end="74:8"><name pos:start="74:5" pos:end="74:5">f</name><index pos:start="74:6" pos:end="74:8">[<expr pos:start="74:7" pos:end="74:7"><name pos:start="74:7" pos:end="74:7">u</name></expr>]</index></name><operator pos:start="74:9" pos:end="74:9">=</operator><name pos:start="74:10" pos:end="74:13">maxx</name></expr>;</expr_stmt>
    <return pos:start="75:5" pos:end="75:16">return <expr pos:start="75:12" pos:end="75:15"><name pos:start="75:12" pos:end="75:15">maxx</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="77:1" pos:end="177:1"><type pos:start="77:1" pos:end="77:3"><name pos:start="77:1" pos:end="77:3">int</name></type> <name pos:start="77:5" pos:end="77:8">main</name><parameter_list pos:start="77:9" pos:end="77:10">()</parameter_list><block pos:start="77:11" pos:end="177:1">{<block_content pos:start="78:5" pos:end="176:13">
    <expr_stmt pos:start="78:5" pos:end="78:37"><expr pos:start="78:5" pos:end="78:36"><call pos:start="78:5" pos:end="78:36"><name pos:start="78:5" pos:end="78:11">freopen</name><argument_list pos:start="78:12" pos:end="78:36">(<argument pos:start="78:13" pos:end="78:25"><expr pos:start="78:13" pos:end="78:25"><literal type="string" pos:start="78:13" pos:end="78:25">"treasure.in"</literal></expr></argument>,<argument pos:start="78:27" pos:end="78:29"><expr pos:start="78:27" pos:end="78:29"><literal type="string" pos:start="78:27" pos:end="78:29">"r"</literal></expr></argument>,<argument pos:start="78:31" pos:end="78:35"><expr pos:start="78:31" pos:end="78:35"><name pos:start="78:31" pos:end="78:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="79:5" pos:end="79:39"><expr pos:start="79:5" pos:end="79:38"><call pos:start="79:5" pos:end="79:38"><name pos:start="79:5" pos:end="79:11">freopen</name><argument_list pos:start="79:12" pos:end="79:38">(<argument pos:start="79:13" pos:end="79:26"><expr pos:start="79:13" pos:end="79:26"><literal type="string" pos:start="79:13" pos:end="79:26">"treasure.out"</literal></expr></argument>,<argument pos:start="79:28" pos:end="79:30"><expr pos:start="79:28" pos:end="79:30"><literal type="string" pos:start="79:28" pos:end="79:30">"w"</literal></expr></argument>,<argument pos:start="79:32" pos:end="79:37"><expr pos:start="79:32" pos:end="79:37"><name pos:start="79:32" pos:end="79:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="80:5" pos:end="80:15"><expr pos:start="80:5" pos:end="80:14"><call pos:start="80:5" pos:end="80:14"><name pos:start="80:5" pos:end="80:11"><name pos:start="80:5" pos:end="80:7">cin</name><operator pos:start="80:8" pos:end="80:8">.</operator><name pos:start="80:9" pos:end="80:11">tie</name></name><argument_list pos:start="80:12" pos:end="80:14">(<argument pos:start="80:13" pos:end="80:13"><expr pos:start="80:13" pos:end="80:13"><literal type="number" pos:start="80:13" pos:end="80:13">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="81:5" pos:end="81:16"><expr pos:start="81:5" pos:end="81:15"><call pos:start="81:5" pos:end="81:15"><name pos:start="81:5" pos:end="81:12"><name pos:start="81:5" pos:end="81:8">cout</name><operator pos:start="81:9" pos:end="81:9">.</operator><name pos:start="81:10" pos:end="81:12">tie</name></name><argument_list pos:start="81:13" pos:end="81:15">(<argument pos:start="81:14" pos:end="81:14"><expr pos:start="81:14" pos:end="81:14"><literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="82:5" pos:end="82:14"><expr pos:start="82:5" pos:end="82:13"><name pos:start="82:5" pos:end="82:7">cin</name><operator pos:start="82:8" pos:end="82:9">&gt;&gt;</operator><name pos:start="82:10" pos:end="82:10">n</name><operator pos:start="82:11" pos:end="82:12">&gt;&gt;</operator><name pos:start="82:13" pos:end="82:13">m</name></expr>;</expr_stmt>
    <decl_stmt pos:start="83:5" pos:end="83:14"><decl pos:start="83:5" pos:end="83:13"><type pos:start="83:5" pos:end="83:7"><name pos:start="83:5" pos:end="83:7">int</name></type> <name pos:start="83:9" pos:end="83:11">num</name><init pos:start="83:12" pos:end="83:13">=<expr pos:start="83:13" pos:end="83:13"><literal type="number" pos:start="83:13" pos:end="83:13">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="84:5" pos:end="91:5">for<control pos:start="84:8" pos:end="84:25">(<init pos:start="84:9" pos:end="84:16"><decl pos:start="84:9" pos:end="84:15"><type pos:start="84:9" pos:end="84:11"><name pos:start="84:9" pos:end="84:11">int</name></type> <name pos:start="84:13" pos:end="84:13">i</name><init pos:start="84:14" pos:end="84:15">=<expr pos:start="84:15" pos:end="84:15"><literal type="number" pos:start="84:15" pos:end="84:15">1</literal></expr></init></decl>;</init><condition pos:start="84:17" pos:end="84:21"><expr pos:start="84:17" pos:end="84:20"><name pos:start="84:17" pos:end="84:17">i</name><operator pos:start="84:18" pos:end="84:19">&lt;=</operator><name pos:start="84:20" pos:end="84:20">n</name></expr>;</condition><incr pos:start="84:22" pos:end="84:24"><expr pos:start="84:22" pos:end="84:24"><name pos:start="84:22" pos:end="84:22">i</name><operator pos:start="84:23" pos:end="84:24">++</operator></expr></incr>)</control><block pos:start="84:26" pos:end="91:5">{<block_content pos:start="85:9" pos:end="90:9">
        <for pos:start="85:9" pos:end="90:9">for<control pos:start="85:12" pos:end="85:29">(<init pos:start="85:13" pos:end="85:20"><decl pos:start="85:13" pos:end="85:19"><type pos:start="85:13" pos:end="85:15"><name pos:start="85:13" pos:end="85:15">int</name></type> <name pos:start="85:17" pos:end="85:17">j</name><init pos:start="85:18" pos:end="85:19">=<expr pos:start="85:19" pos:end="85:19"><literal type="number" pos:start="85:19" pos:end="85:19">1</literal></expr></init></decl>;</init><condition pos:start="85:21" pos:end="85:25"><expr pos:start="85:21" pos:end="85:24"><name pos:start="85:21" pos:end="85:21">j</name><operator pos:start="85:22" pos:end="85:23">&lt;=</operator><name pos:start="85:24" pos:end="85:24">m</name></expr>;</condition><incr pos:start="85:26" pos:end="85:28"><expr pos:start="85:26" pos:end="85:28"><name pos:start="85:26" pos:end="85:26">j</name><operator pos:start="85:27" pos:end="85:28">++</operator></expr></incr>)</control><block pos:start="85:30" pos:end="90:9">{<block_content pos:start="86:13" pos:end="89:13">
            <expr_stmt pos:start="86:13" pos:end="86:25"><expr pos:start="86:13" pos:end="86:24"><name pos:start="86:13" pos:end="86:15">cin</name><operator pos:start="86:16" pos:end="86:17">&gt;&gt;</operator><name pos:start="86:18" pos:end="86:24"><name pos:start="86:18" pos:end="86:18">a</name><index pos:start="86:19" pos:end="86:21">[<expr pos:start="86:20" pos:end="86:20"><name pos:start="86:20" pos:end="86:20">i</name></expr>]</index><index pos:start="86:22" pos:end="86:24">[<expr pos:start="86:23" pos:end="86:23"><name pos:start="86:23" pos:end="86:23">j</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="87:13" pos:end="89:13"><if pos:start="87:13" pos:end="89:13">if<condition pos:start="87:15" pos:end="87:28">(<expr pos:start="87:16" pos:end="87:27"><name pos:start="87:16" pos:end="87:22"><name pos:start="87:16" pos:end="87:16">a</name><index pos:start="87:17" pos:end="87:19">[<expr pos:start="87:18" pos:end="87:18"><name pos:start="87:18" pos:end="87:18">i</name></expr>]</index><index pos:start="87:20" pos:end="87:22">[<expr pos:start="87:21" pos:end="87:21"><name pos:start="87:21" pos:end="87:21">j</name></expr>]</index></name><operator pos:start="87:23" pos:end="87:24">==</operator><literal type="char" pos:start="87:25" pos:end="87:27">'*'</literal></expr>)</condition><block pos:start="87:29" pos:end="89:13">{<block_content pos:start="88:17" pos:end="88:22">
                <expr_stmt pos:start="88:17" pos:end="88:22"><expr pos:start="88:17" pos:end="88:21"><name pos:start="88:17" pos:end="88:19">num</name><operator pos:start="88:20" pos:end="88:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <decl_stmt pos:start="92:5" pos:end="92:14"><decl pos:start="92:5" pos:end="92:13"><type pos:start="92:5" pos:end="92:7"><name pos:start="92:5" pos:end="92:7">int</name></type> <name pos:start="92:9" pos:end="92:11">tot</name><init pos:start="92:12" pos:end="92:13">=<expr pos:start="92:13" pos:end="92:13"><literal type="number" pos:start="92:13" pos:end="92:13">1</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="93:5" pos:end="98:5">for<control pos:start="93:8" pos:end="93:25">(<init pos:start="93:9" pos:end="93:16"><decl pos:start="93:9" pos:end="93:15"><type pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:11">int</name></type> <name pos:start="93:13" pos:end="93:13">i</name><init pos:start="93:14" pos:end="93:15">=<expr pos:start="93:15" pos:end="93:15"><literal type="number" pos:start="93:15" pos:end="93:15">1</literal></expr></init></decl>;</init><condition pos:start="93:17" pos:end="93:21"><expr pos:start="93:17" pos:end="93:20"><name pos:start="93:17" pos:end="93:17">i</name><operator pos:start="93:18" pos:end="93:19">&lt;=</operator><name pos:start="93:20" pos:end="93:20">n</name></expr>;</condition><incr pos:start="93:22" pos:end="93:24"><expr pos:start="93:22" pos:end="93:24"><name pos:start="93:22" pos:end="93:22">i</name><operator pos:start="93:23" pos:end="93:24">++</operator></expr></incr>)</control><block pos:start="93:26" pos:end="98:5">{<block_content pos:start="94:9" pos:end="97:9">
        <for pos:start="94:9" pos:end="97:9">for<control pos:start="94:12" pos:end="94:29">(<init pos:start="94:13" pos:end="94:20"><decl pos:start="94:13" pos:end="94:19"><type pos:start="94:13" pos:end="94:15"><name pos:start="94:13" pos:end="94:15">int</name></type> <name pos:start="94:17" pos:end="94:17">j</name><init pos:start="94:18" pos:end="94:19">=<expr pos:start="94:19" pos:end="94:19"><literal type="number" pos:start="94:19" pos:end="94:19">1</literal></expr></init></decl>;</init><condition pos:start="94:21" pos:end="94:25"><expr pos:start="94:21" pos:end="94:24"><name pos:start="94:21" pos:end="94:21">j</name><operator pos:start="94:22" pos:end="94:23">&lt;=</operator><name pos:start="94:24" pos:end="94:24">m</name></expr>;</condition><incr pos:start="94:26" pos:end="94:28"><expr pos:start="94:26" pos:end="94:28"><name pos:start="94:26" pos:end="94:26">j</name><operator pos:start="94:27" pos:end="94:28">++</operator></expr></incr>)</control><block pos:start="94:30" pos:end="97:9">{<block_content pos:start="95:13" pos:end="96:18">
            <expr_stmt pos:start="95:13" pos:end="95:24"><expr pos:start="95:13" pos:end="95:23"><name pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:13">b</name><index pos:start="95:14" pos:end="95:16">[<expr pos:start="95:15" pos:end="95:15"><name pos:start="95:15" pos:end="95:15">i</name></expr>]</index><index pos:start="95:17" pos:end="95:19">[<expr pos:start="95:18" pos:end="95:18"><name pos:start="95:18" pos:end="95:18">j</name></expr>]</index></name><operator pos:start="95:20" pos:end="95:20">=</operator><name pos:start="95:21" pos:end="95:23">tot</name></expr>;</expr_stmt>
            <expr_stmt pos:start="96:13" pos:end="96:18"><expr pos:start="96:13" pos:end="96:17"><name pos:start="96:13" pos:end="96:15">tot</name><operator pos:start="96:16" pos:end="96:17">++</operator></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <decl_stmt pos:start="99:5" pos:end="99:14"><decl pos:start="99:5" pos:end="99:10"><type pos:start="99:5" pos:end="99:7"><name pos:start="99:5" pos:end="99:7">int</name></type> <name pos:start="99:9" pos:end="99:10">t1</name></decl>,<decl pos:start="99:12" pos:end="99:13"><type ref="prev" pos:start="99:5" pos:end="99:7"/><name pos:start="99:12" pos:end="99:13">t2</name></decl>;</decl_stmt>
    <for pos:start="100:5" pos:end="106:5">for<control pos:start="100:8" pos:end="100:27">(<init pos:start="100:9" pos:end="100:16"><decl pos:start="100:9" pos:end="100:15"><type pos:start="100:9" pos:end="100:11"><name pos:start="100:9" pos:end="100:11">int</name></type> <name pos:start="100:13" pos:end="100:13">i</name><init pos:start="100:14" pos:end="100:15">=<expr pos:start="100:15" pos:end="100:15"><literal type="number" pos:start="100:15" pos:end="100:15">1</literal></expr></init></decl>;</init><condition pos:start="100:17" pos:end="100:23"><expr pos:start="100:17" pos:end="100:22"><name pos:start="100:17" pos:end="100:17">i</name><operator pos:start="100:18" pos:end="100:19">&lt;=</operator><name pos:start="100:20" pos:end="100:22">num</name></expr>;</condition><incr pos:start="100:24" pos:end="100:26"><expr pos:start="100:24" pos:end="100:26"><name pos:start="100:24" pos:end="100:24">i</name><operator pos:start="100:25" pos:end="100:26">++</operator></expr></incr>)</control><block pos:start="100:28" pos:end="106:5">{<block_content pos:start="101:9" pos:end="105:14">
        <expr_stmt pos:start="101:9" pos:end="101:20"><expr pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:11">cin</name><operator pos:start="101:12" pos:end="101:13">&gt;&gt;</operator><name pos:start="101:14" pos:end="101:15">t1</name><operator pos:start="101:16" pos:end="101:17">&gt;&gt;</operator><name pos:start="101:18" pos:end="101:19">t2</name></expr>;</expr_stmt>
        <expr_stmt pos:start="102:9" pos:end="102:18"><expr pos:start="102:9" pos:end="102:12"><name pos:start="102:9" pos:end="102:10">t1</name><operator pos:start="102:11" pos:end="102:12">++</operator></expr><operator pos:start="102:13" pos:end="102:13">,</operator><expr pos:start="102:14" pos:end="102:17"><name pos:start="102:14" pos:end="102:15">t2</name><operator pos:start="102:16" pos:end="102:17">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="103:9" pos:end="103:18"><expr pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:14"><name pos:start="103:9" pos:end="103:9">x</name><index pos:start="103:10" pos:end="103:14">[<expr pos:start="103:11" pos:end="103:13"><name pos:start="103:11" pos:end="103:13">top</name></expr>]</index></name><operator pos:start="103:15" pos:end="103:15">=</operator><name pos:start="103:16" pos:end="103:17">t1</name></expr>;</expr_stmt>
        <expr_stmt pos:start="104:9" pos:end="104:18"><expr pos:start="104:9" pos:end="104:17"><name pos:start="104:9" pos:end="104:14"><name pos:start="104:9" pos:end="104:9">y</name><index pos:start="104:10" pos:end="104:14">[<expr pos:start="104:11" pos:end="104:13"><name pos:start="104:11" pos:end="104:13">top</name></expr>]</index></name><operator pos:start="104:15" pos:end="104:15">=</operator><name pos:start="104:16" pos:end="104:17">t2</name></expr>;</expr_stmt>
        <expr_stmt pos:start="105:9" pos:end="105:14"><expr pos:start="105:9" pos:end="105:13"><name pos:start="105:9" pos:end="105:11">top</name><operator pos:start="105:12" pos:end="105:13">++</operator></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="107:5" pos:end="107:10"><expr pos:start="107:5" pos:end="107:9"><name pos:start="107:5" pos:end="107:7">top</name><operator pos:start="107:8" pos:end="107:8">=</operator><literal type="number" pos:start="107:9" pos:end="107:9">1</literal></expr>;</expr_stmt>
    <for pos:start="108:5" pos:end="157:5">for<control pos:start="108:8" pos:end="108:25">(<init pos:start="108:9" pos:end="108:16"><decl pos:start="108:9" pos:end="108:15"><type pos:start="108:9" pos:end="108:11"><name pos:start="108:9" pos:end="108:11">int</name></type> <name pos:start="108:13" pos:end="108:13">i</name><init pos:start="108:14" pos:end="108:15">=<expr pos:start="108:15" pos:end="108:15"><literal type="number" pos:start="108:15" pos:end="108:15">1</literal></expr></init></decl>;</init><condition pos:start="108:17" pos:end="108:21"><expr pos:start="108:17" pos:end="108:20"><name pos:start="108:17" pos:end="108:17">i</name><operator pos:start="108:18" pos:end="108:19">&lt;=</operator><name pos:start="108:20" pos:end="108:20">n</name></expr>;</condition><incr pos:start="108:22" pos:end="108:24"><expr pos:start="108:22" pos:end="108:24"><name pos:start="108:22" pos:end="108:22">i</name><operator pos:start="108:23" pos:end="108:24">++</operator></expr></incr>)</control><block pos:start="108:26" pos:end="157:5">{<block_content pos:start="109:9" pos:end="156:9">
        <for pos:start="109:9" pos:end="156:9">for<control pos:start="109:12" pos:end="109:29">(<init pos:start="109:13" pos:end="109:20"><decl pos:start="109:13" pos:end="109:19"><type pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:15">int</name></type> <name pos:start="109:17" pos:end="109:17">j</name><init pos:start="109:18" pos:end="109:19">=<expr pos:start="109:19" pos:end="109:19"><literal type="number" pos:start="109:19" pos:end="109:19">1</literal></expr></init></decl>;</init><condition pos:start="109:21" pos:end="109:25"><expr pos:start="109:21" pos:end="109:24"><name pos:start="109:21" pos:end="109:21">j</name><operator pos:start="109:22" pos:end="109:23">&lt;=</operator><name pos:start="109:24" pos:end="109:24">m</name></expr>;</condition><incr pos:start="109:26" pos:end="109:28"><expr pos:start="109:26" pos:end="109:28"><name pos:start="109:26" pos:end="109:26">j</name><operator pos:start="109:27" pos:end="109:28">++</operator></expr></incr>)</control><block pos:start="109:30" pos:end="156:9">{<block_content pos:start="110:13" pos:end="155:13">
            <decl_stmt pos:start="110:13" pos:end="110:26"><decl pos:start="110:13" pos:end="110:25"><type pos:start="110:13" pos:end="110:15"><name pos:start="110:13" pos:end="110:15">int</name></type> <name pos:start="110:17" pos:end="110:17">t</name><init pos:start="110:18" pos:end="110:25">=<expr pos:start="110:19" pos:end="110:25"><name pos:start="110:19" pos:end="110:25"><name pos:start="110:19" pos:end="110:19">b</name><index pos:start="110:20" pos:end="110:22">[<expr pos:start="110:21" pos:end="110:21"><name pos:start="110:21" pos:end="110:21">i</name></expr>]</index><index pos:start="110:23" pos:end="110:25">[<expr pos:start="110:24" pos:end="110:24"><name pos:start="110:24" pos:end="110:24">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="111:13" pos:end="128:13"><if pos:start="111:13" pos:end="128:13">if<condition pos:start="111:15" pos:end="111:42">(<expr pos:start="111:16" pos:end="111:41"><name pos:start="111:16" pos:end="111:22"><name pos:start="111:16" pos:end="111:16">a</name><index pos:start="111:17" pos:end="111:19">[<expr pos:start="111:18" pos:end="111:18"><name pos:start="111:18" pos:end="111:18">i</name></expr>]</index><index pos:start="111:20" pos:end="111:22">[<expr pos:start="111:21" pos:end="111:21"><name pos:start="111:21" pos:end="111:21">j</name></expr>]</index></name><operator pos:start="111:23" pos:end="111:24">&lt;=</operator><literal type="char" pos:start="111:25" pos:end="111:27">'9'</literal><operator pos:start="111:28" pos:end="111:29">&amp;&amp;</operator><name pos:start="111:30" pos:end="111:36"><name pos:start="111:30" pos:end="111:30">a</name><index pos:start="111:31" pos:end="111:33">[<expr pos:start="111:32" pos:end="111:32"><name pos:start="111:32" pos:end="111:32">i</name></expr>]</index><index pos:start="111:34" pos:end="111:36">[<expr pos:start="111:35" pos:end="111:35"><name pos:start="111:35" pos:end="111:35">j</name></expr>]</index></name><operator pos:start="111:37" pos:end="111:38">&gt;=</operator><literal type="char" pos:start="111:39" pos:end="111:41">'1'</literal></expr>)</condition><block pos:start="111:43" pos:end="128:13">{<block_content pos:start="112:17" pos:end="127:17">
                <if_stmt pos:start="112:17" pos:end="119:17"><if pos:start="112:17" pos:end="119:17">if<condition pos:start="112:19" pos:end="112:24">(<expr pos:start="112:20" pos:end="112:23"><name pos:start="112:20" pos:end="112:20">i</name><operator pos:start="112:21" pos:end="112:22">!=</operator><name pos:start="112:23" pos:end="112:23">n</name></expr>)</condition><block pos:start="112:25" pos:end="119:17">{<block_content pos:start="113:21" pos:end="118:21">
                    <if_stmt pos:start="113:21" pos:end="118:21"><if pos:start="113:21" pos:end="118:21">if<condition pos:start="113:23" pos:end="113:38">(<expr pos:start="113:24" pos:end="113:37"><name pos:start="113:24" pos:end="113:32"><name pos:start="113:24" pos:end="113:24">a</name><index pos:start="113:25" pos:end="113:29">[<expr pos:start="113:26" pos:end="113:28"><name pos:start="113:26" pos:end="113:26">i</name><operator pos:start="113:27" pos:end="113:27">+</operator><literal type="number" pos:start="113:28" pos:end="113:28">1</literal></expr>]</index><index pos:start="113:30" pos:end="113:32">[<expr pos:start="113:31" pos:end="113:31"><name pos:start="113:31" pos:end="113:31">j</name></expr>]</index></name><operator pos:start="113:33" pos:end="113:34">!=</operator><literal type="char" pos:start="113:35" pos:end="113:37">'#'</literal></expr>)</condition><block pos:start="113:39" pos:end="118:21">{<block_content pos:start="114:25" pos:end="117:62">
                        <decl_stmt pos:start="114:25" pos:end="114:41"><decl pos:start="114:25" pos:end="114:40"><type pos:start="114:25" pos:end="114:27"><name pos:start="114:25" pos:end="114:27">int</name></type> <name pos:start="114:29" pos:end="114:30">tt</name><init pos:start="114:31" pos:end="114:40">=<expr pos:start="114:32" pos:end="114:40"><name pos:start="114:32" pos:end="114:40"><name pos:start="114:32" pos:end="114:32">b</name><index pos:start="114:33" pos:end="114:37">[<expr pos:start="114:34" pos:end="114:36"><name pos:start="114:34" pos:end="114:34">i</name><operator pos:start="114:35" pos:end="114:35">+</operator><literal type="number" pos:start="114:36" pos:end="114:36">1</literal></expr>]</index><index pos:start="114:38" pos:end="114:40">[<expr pos:start="114:39" pos:end="114:39"><name pos:start="114:39" pos:end="114:39">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="115:25" pos:end="115:45"><expr pos:start="115:25" pos:end="115:44"><name pos:start="115:25" pos:end="115:30"><name pos:start="115:25" pos:end="115:27">ver</name><index pos:start="115:28" pos:end="115:30">[<expr pos:start="115:29" pos:end="115:29"><name pos:start="115:29" pos:end="115:29">t</name></expr>]</index></name><operator pos:start="115:31" pos:end="115:31">.</operator><call pos:start="115:32" pos:end="115:44"><name pos:start="115:32" pos:end="115:40">push_back</name><argument_list pos:start="115:41" pos:end="115:44">(<argument pos:start="115:42" pos:end="115:43"><expr pos:start="115:42" pos:end="115:43"><name pos:start="115:42" pos:end="115:43">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if_stmt pos:start="116:25" pos:end="117:62"><if pos:start="116:25" pos:end="116:64">if<condition pos:start="116:27" pos:end="116:42">(<expr pos:start="116:28" pos:end="116:41"><name pos:start="116:28" pos:end="116:36"><name pos:start="116:28" pos:end="116:28">a</name><index pos:start="116:29" pos:end="116:33">[<expr pos:start="116:30" pos:end="116:32"><name pos:start="116:30" pos:end="116:30">i</name><operator pos:start="116:31" pos:end="116:31">+</operator><literal type="number" pos:start="116:32" pos:end="116:32">1</literal></expr>]</index><index pos:start="116:34" pos:end="116:36">[<expr pos:start="116:35" pos:end="116:35"><name pos:start="116:35" pos:end="116:35">j</name></expr>]</index></name><operator pos:start="116:37" pos:end="116:38">==</operator><literal type="char" pos:start="116:39" pos:end="116:41">'*'</literal></expr>)</condition><block type="pseudo" pos:start="116:44" pos:end="116:64"><block_content pos:start="116:44" pos:end="116:64"> <expr_stmt pos:start="116:44" pos:end="116:64"><expr pos:start="116:44" pos:end="116:63"><name pos:start="116:44" pos:end="116:50"><name pos:start="116:44" pos:end="116:47">ver1</name><index pos:start="116:48" pos:end="116:50">[<expr pos:start="116:49" pos:end="116:49"><name pos:start="116:49" pos:end="116:49">t</name></expr>]</index></name><operator pos:start="116:51" pos:end="116:51">.</operator><call pos:start="116:52" pos:end="116:63"><name pos:start="116:52" pos:end="116:60">push_back</name><argument_list pos:start="116:61" pos:end="116:63">(<argument pos:start="116:62" pos:end="116:62"><expr pos:start="116:62" pos:end="116:62"><literal type="number" pos:start="116:62" pos:end="116:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                        <else pos:start="117:25" pos:end="117:62">else<block type="pseudo" pos:start="117:30" pos:end="117:62"><block_content pos:start="117:30" pos:end="117:62"> <expr_stmt pos:start="117:30" pos:end="117:62"><expr pos:start="117:30" pos:end="117:61"><name pos:start="117:30" pos:end="117:36"><name pos:start="117:30" pos:end="117:33">ver1</name><index pos:start="117:34" pos:end="117:36">[<expr pos:start="117:35" pos:end="117:35"><name pos:start="117:35" pos:end="117:35">t</name></expr>]</index></name><operator pos:start="117:37" pos:end="117:37">.</operator><call pos:start="117:38" pos:end="117:61"><name pos:start="117:38" pos:end="117:46">push_back</name><argument_list pos:start="117:47" pos:end="117:61">(<argument pos:start="117:48" pos:end="117:60"><expr pos:start="117:48" pos:end="117:60"><name pos:start="117:48" pos:end="117:56"><name pos:start="117:48" pos:end="117:48">a</name><index pos:start="117:49" pos:end="117:53">[<expr pos:start="117:50" pos:end="117:52"><name pos:start="117:50" pos:end="117:50">i</name><operator pos:start="117:51" pos:end="117:51">+</operator><literal type="number" pos:start="117:52" pos:end="117:52">1</literal></expr>]</index><index pos:start="117:54" pos:end="117:56">[<expr pos:start="117:55" pos:end="117:55"><name pos:start="117:55" pos:end="117:55">j</name></expr>]</index></name><operator pos:start="117:57" pos:end="117:57">-</operator><literal type="char" pos:start="117:58" pos:end="117:60">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt pos:start="120:17" pos:end="127:17"><if pos:start="120:17" pos:end="127:17">if<condition pos:start="120:19" pos:end="120:24">(<expr pos:start="120:20" pos:end="120:23"><name pos:start="120:20" pos:end="120:20">j</name><operator pos:start="120:21" pos:end="120:22">!=</operator><name pos:start="120:23" pos:end="120:23">m</name></expr>)</condition><block pos:start="120:25" pos:end="127:17">{<block_content pos:start="121:21" pos:end="126:21">
                    <if_stmt pos:start="121:21" pos:end="126:21"><if pos:start="121:21" pos:end="126:21">if<condition pos:start="121:23" pos:end="121:38">(<expr pos:start="121:24" pos:end="121:37"><name pos:start="121:24" pos:end="121:32"><name pos:start="121:24" pos:end="121:24">a</name><index pos:start="121:25" pos:end="121:27">[<expr pos:start="121:26" pos:end="121:26"><name pos:start="121:26" pos:end="121:26">i</name></expr>]</index><index pos:start="121:28" pos:end="121:32">[<expr pos:start="121:29" pos:end="121:31"><name pos:start="121:29" pos:end="121:29">j</name><operator pos:start="121:30" pos:end="121:30">+</operator><literal type="number" pos:start="121:31" pos:end="121:31">1</literal></expr>]</index></name><operator pos:start="121:33" pos:end="121:34">!=</operator><literal type="char" pos:start="121:35" pos:end="121:37">'#'</literal></expr>)</condition><block pos:start="121:39" pos:end="126:21">{<block_content pos:start="122:25" pos:end="125:62">
                        <decl_stmt pos:start="122:25" pos:end="122:41"><decl pos:start="122:25" pos:end="122:40"><type pos:start="122:25" pos:end="122:27"><name pos:start="122:25" pos:end="122:27">int</name></type> <name pos:start="122:29" pos:end="122:30">tt</name><init pos:start="122:31" pos:end="122:40">=<expr pos:start="122:32" pos:end="122:40"><name pos:start="122:32" pos:end="122:40"><name pos:start="122:32" pos:end="122:32">b</name><index pos:start="122:33" pos:end="122:35">[<expr pos:start="122:34" pos:end="122:34"><name pos:start="122:34" pos:end="122:34">i</name></expr>]</index><index pos:start="122:36" pos:end="122:40">[<expr pos:start="122:37" pos:end="122:39"><name pos:start="122:37" pos:end="122:37">j</name><operator pos:start="122:38" pos:end="122:38">+</operator><literal type="number" pos:start="122:39" pos:end="122:39">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="123:25" pos:end="123:45"><expr pos:start="123:25" pos:end="123:44"><name pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:27">ver</name><index pos:start="123:28" pos:end="123:30">[<expr pos:start="123:29" pos:end="123:29"><name pos:start="123:29" pos:end="123:29">t</name></expr>]</index></name><operator pos:start="123:31" pos:end="123:31">.</operator><call pos:start="123:32" pos:end="123:44"><name pos:start="123:32" pos:end="123:40">push_back</name><argument_list pos:start="123:41" pos:end="123:44">(<argument pos:start="123:42" pos:end="123:43"><expr pos:start="123:42" pos:end="123:43"><name pos:start="123:42" pos:end="123:43">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if_stmt pos:start="124:25" pos:end="125:62"><if pos:start="124:25" pos:end="124:64">if<condition pos:start="124:27" pos:end="124:42">(<expr pos:start="124:28" pos:end="124:41"><name pos:start="124:28" pos:end="124:36"><name pos:start="124:28" pos:end="124:28">a</name><index pos:start="124:29" pos:end="124:31">[<expr pos:start="124:30" pos:end="124:30"><name pos:start="124:30" pos:end="124:30">i</name></expr>]</index><index pos:start="124:32" pos:end="124:36">[<expr pos:start="124:33" pos:end="124:35"><name pos:start="124:33" pos:end="124:33">j</name><operator pos:start="124:34" pos:end="124:34">+</operator><literal type="number" pos:start="124:35" pos:end="124:35">1</literal></expr>]</index></name><operator pos:start="124:37" pos:end="124:38">==</operator><literal type="char" pos:start="124:39" pos:end="124:41">'*'</literal></expr>)</condition><block type="pseudo" pos:start="124:44" pos:end="124:64"><block_content pos:start="124:44" pos:end="124:64"> <expr_stmt pos:start="124:44" pos:end="124:64"><expr pos:start="124:44" pos:end="124:63"><name pos:start="124:44" pos:end="124:50"><name pos:start="124:44" pos:end="124:47">ver1</name><index pos:start="124:48" pos:end="124:50">[<expr pos:start="124:49" pos:end="124:49"><name pos:start="124:49" pos:end="124:49">t</name></expr>]</index></name><operator pos:start="124:51" pos:end="124:51">.</operator><call pos:start="124:52" pos:end="124:63"><name pos:start="124:52" pos:end="124:60">push_back</name><argument_list pos:start="124:61" pos:end="124:63">(<argument pos:start="124:62" pos:end="124:62"><expr pos:start="124:62" pos:end="124:62"><literal type="number" pos:start="124:62" pos:end="124:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                        <else pos:start="125:25" pos:end="125:62">else<block type="pseudo" pos:start="125:30" pos:end="125:62"><block_content pos:start="125:30" pos:end="125:62"> <expr_stmt pos:start="125:30" pos:end="125:62"><expr pos:start="125:30" pos:end="125:61"><name pos:start="125:30" pos:end="125:36"><name pos:start="125:30" pos:end="125:33">ver1</name><index pos:start="125:34" pos:end="125:36">[<expr pos:start="125:35" pos:end="125:35"><name pos:start="125:35" pos:end="125:35">t</name></expr>]</index></name><operator pos:start="125:37" pos:end="125:37">.</operator><call pos:start="125:38" pos:end="125:61"><name pos:start="125:38" pos:end="125:46">push_back</name><argument_list pos:start="125:47" pos:end="125:61">(<argument pos:start="125:48" pos:end="125:60"><expr pos:start="125:48" pos:end="125:60"><name pos:start="125:48" pos:end="125:56"><name pos:start="125:48" pos:end="125:48">a</name><index pos:start="125:49" pos:end="125:51">[<expr pos:start="125:50" pos:end="125:50"><name pos:start="125:50" pos:end="125:50">i</name></expr>]</index><index pos:start="125:52" pos:end="125:56">[<expr pos:start="125:53" pos:end="125:55"><name pos:start="125:53" pos:end="125:53">j</name><operator pos:start="125:54" pos:end="125:54">+</operator><literal type="number" pos:start="125:55" pos:end="125:55">1</literal></expr>]</index></name><operator pos:start="125:57" pos:end="125:57">-</operator><literal type="char" pos:start="125:58" pos:end="125:60">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="129:13" pos:end="155:13"><if pos:start="129:13" pos:end="155:13">if<condition pos:start="129:15" pos:end="129:28">(<expr pos:start="129:16" pos:end="129:27"><name pos:start="129:16" pos:end="129:22"><name pos:start="129:16" pos:end="129:16">a</name><index pos:start="129:17" pos:end="129:19">[<expr pos:start="129:18" pos:end="129:18"><name pos:start="129:18" pos:end="129:18">i</name></expr>]</index><index pos:start="129:20" pos:end="129:22">[<expr pos:start="129:21" pos:end="129:21"><name pos:start="129:21" pos:end="129:21">j</name></expr>]</index></name><operator pos:start="129:23" pos:end="129:24">==</operator><literal type="char" pos:start="129:25" pos:end="129:27">'*'</literal></expr>)</condition><block pos:start="129:29" pos:end="155:13">{<block_content pos:start="130:17" pos:end="154:17">
                <decl_stmt pos:start="130:17" pos:end="130:40"><decl pos:start="130:17" pos:end="130:29"><type pos:start="130:17" pos:end="130:19"><name pos:start="130:17" pos:end="130:19">int</name></type> <name pos:start="130:21" pos:end="130:22">xx</name><init pos:start="130:23" pos:end="130:29">=<expr pos:start="130:24" pos:end="130:29"><name pos:start="130:24" pos:end="130:29"><name pos:start="130:24" pos:end="130:24">x</name><index pos:start="130:25" pos:end="130:29">[<expr pos:start="130:26" pos:end="130:28"><name pos:start="130:26" pos:end="130:28">top</name></expr>]</index></name></expr></init></decl>,<decl pos:start="130:31" pos:end="130:39"><type ref="prev" pos:start="130:17" pos:end="130:19"/><name pos:start="130:31" pos:end="130:32">yy</name><init pos:start="130:33" pos:end="130:39">=<expr pos:start="130:34" pos:end="130:39"><name pos:start="130:34" pos:end="130:39"><name pos:start="130:34" pos:end="130:34">y</name><index pos:start="130:35" pos:end="130:39">[<expr pos:start="130:36" pos:end="130:38"><name pos:start="130:36" pos:end="130:38">top</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="131:17" pos:end="131:22"><expr pos:start="131:17" pos:end="131:21"><name pos:start="131:17" pos:end="131:19">top</name><operator pos:start="131:20" pos:end="131:21">++</operator></expr>;</expr_stmt>
                <if_stmt pos:start="132:17" pos:end="134:17"><if pos:start="132:17" pos:end="134:17">if<condition pos:start="132:19" pos:end="132:34">(<expr pos:start="132:20" pos:end="132:33"><name pos:start="132:20" pos:end="132:28"><name pos:start="132:20" pos:end="132:20">a</name><index pos:start="132:21" pos:end="132:24">[<expr pos:start="132:22" pos:end="132:23"><name pos:start="132:22" pos:end="132:23">xx</name></expr>]</index><index pos:start="132:25" pos:end="132:28">[<expr pos:start="132:26" pos:end="132:27"><name pos:start="132:26" pos:end="132:27">yy</name></expr>]</index></name><operator pos:start="132:29" pos:end="132:30">==</operator><literal type="char" pos:start="132:31" pos:end="132:33">'#'</literal></expr>)</condition><block pos:start="132:35" pos:end="134:17">{<block_content pos:start="133:21" pos:end="133:29">
                    <continue pos:start="133:21" pos:end="133:29">continue;</continue>
                </block_content>}</block></if></if_stmt>
                <decl_stmt pos:start="135:17" pos:end="135:33"><decl pos:start="135:17" pos:end="135:32"><type pos:start="135:17" pos:end="135:19"><name pos:start="135:17" pos:end="135:19">int</name></type> <name pos:start="135:21" pos:end="135:22">tt</name><init pos:start="135:23" pos:end="135:32">=<expr pos:start="135:24" pos:end="135:32"><name pos:start="135:24" pos:end="135:32"><name pos:start="135:24" pos:end="135:24">b</name><index pos:start="135:25" pos:end="135:28">[<expr pos:start="135:26" pos:end="135:27"><name pos:start="135:26" pos:end="135:27">xx</name></expr>]</index><index pos:start="135:29" pos:end="135:32">[<expr pos:start="135:30" pos:end="135:31"><name pos:start="135:30" pos:end="135:31">yy</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="136:17" pos:end="136:37"><expr pos:start="136:17" pos:end="136:36"><name pos:start="136:17" pos:end="136:22"><name pos:start="136:17" pos:end="136:19">ver</name><index pos:start="136:20" pos:end="136:22">[<expr pos:start="136:21" pos:end="136:21"><name pos:start="136:21" pos:end="136:21">t</name></expr>]</index></name><operator pos:start="136:23" pos:end="136:23">.</operator><call pos:start="136:24" pos:end="136:36"><name pos:start="136:24" pos:end="136:32">push_back</name><argument_list pos:start="136:33" pos:end="136:36">(<argument pos:start="136:34" pos:end="136:35"><expr pos:start="136:34" pos:end="136:35"><name pos:start="136:34" pos:end="136:35">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="137:17" pos:end="138:54"><if pos:start="137:17" pos:end="137:56">if<condition pos:start="137:19" pos:end="137:34">(<expr pos:start="137:20" pos:end="137:33"><name pos:start="137:20" pos:end="137:28"><name pos:start="137:20" pos:end="137:20">a</name><index pos:start="137:21" pos:end="137:24">[<expr pos:start="137:22" pos:end="137:23"><name pos:start="137:22" pos:end="137:23">xx</name></expr>]</index><index pos:start="137:25" pos:end="137:28">[<expr pos:start="137:26" pos:end="137:27"><name pos:start="137:26" pos:end="137:27">yy</name></expr>]</index></name><operator pos:start="137:29" pos:end="137:30">==</operator><literal type="char" pos:start="137:31" pos:end="137:33">'*'</literal></expr>)</condition><block type="pseudo" pos:start="137:36" pos:end="137:56"><block_content pos:start="137:36" pos:end="137:56"> <expr_stmt pos:start="137:36" pos:end="137:56"><expr pos:start="137:36" pos:end="137:55"><name pos:start="137:36" pos:end="137:42"><name pos:start="137:36" pos:end="137:39">ver1</name><index pos:start="137:40" pos:end="137:42">[<expr pos:start="137:41" pos:end="137:41"><name pos:start="137:41" pos:end="137:41">t</name></expr>]</index></name><operator pos:start="137:43" pos:end="137:43">.</operator><call pos:start="137:44" pos:end="137:55"><name pos:start="137:44" pos:end="137:52">push_back</name><argument_list pos:start="137:53" pos:end="137:55">(<argument pos:start="137:54" pos:end="137:54"><expr pos:start="137:54" pos:end="137:54"><literal type="number" pos:start="137:54" pos:end="137:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="138:17" pos:end="138:54">else<block type="pseudo" pos:start="138:22" pos:end="138:54"><block_content pos:start="138:22" pos:end="138:54"> <expr_stmt pos:start="138:22" pos:end="138:54"><expr pos:start="138:22" pos:end="138:53"><name pos:start="138:22" pos:end="138:28"><name pos:start="138:22" pos:end="138:25">ver1</name><index pos:start="138:26" pos:end="138:28">[<expr pos:start="138:27" pos:end="138:27"><name pos:start="138:27" pos:end="138:27">t</name></expr>]</index></name><operator pos:start="138:29" pos:end="138:29">.</operator><call pos:start="138:30" pos:end="138:53"><name pos:start="138:30" pos:end="138:38">push_back</name><argument_list pos:start="138:39" pos:end="138:53">(<argument pos:start="138:40" pos:end="138:52"><expr pos:start="138:40" pos:end="138:52"><name pos:start="138:40" pos:end="138:48"><name pos:start="138:40" pos:end="138:40">a</name><index pos:start="138:41" pos:end="138:44">[<expr pos:start="138:42" pos:end="138:43"><name pos:start="138:42" pos:end="138:43">xx</name></expr>]</index><index pos:start="138:45" pos:end="138:48">[<expr pos:start="138:46" pos:end="138:47"><name pos:start="138:46" pos:end="138:47">yy</name></expr>]</index></name><operator pos:start="138:49" pos:end="138:49">-</operator><literal type="char" pos:start="138:50" pos:end="138:52">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                <if_stmt pos:start="139:17" pos:end="146:17"><if pos:start="139:17" pos:end="146:17">if<condition pos:start="139:19" pos:end="139:24">(<expr pos:start="139:20" pos:end="139:23"><name pos:start="139:20" pos:end="139:20">i</name><operator pos:start="139:21" pos:end="139:22">!=</operator><name pos:start="139:23" pos:end="139:23">n</name></expr>)</condition><block pos:start="139:25" pos:end="146:17">{<block_content pos:start="140:21" pos:end="145:21">
                    <if_stmt pos:start="140:21" pos:end="145:21"><if pos:start="140:21" pos:end="145:21">if<condition pos:start="140:23" pos:end="140:38">(<expr pos:start="140:24" pos:end="140:37"><name pos:start="140:24" pos:end="140:32"><name pos:start="140:24" pos:end="140:24">a</name><index pos:start="140:25" pos:end="140:29">[<expr pos:start="140:26" pos:end="140:28"><name pos:start="140:26" pos:end="140:26">i</name><operator pos:start="140:27" pos:end="140:27">+</operator><literal type="number" pos:start="140:28" pos:end="140:28">1</literal></expr>]</index><index pos:start="140:30" pos:end="140:32">[<expr pos:start="140:31" pos:end="140:31"><name pos:start="140:31" pos:end="140:31">j</name></expr>]</index></name><operator pos:start="140:33" pos:end="140:34">!=</operator><literal type="char" pos:start="140:35" pos:end="140:37">'#'</literal></expr>)</condition><block pos:start="140:39" pos:end="145:21">{<block_content pos:start="141:25" pos:end="144:62">
                        <decl_stmt pos:start="141:25" pos:end="141:41"><decl pos:start="141:25" pos:end="141:40"><type pos:start="141:25" pos:end="141:27"><name pos:start="141:25" pos:end="141:27">int</name></type> <name pos:start="141:29" pos:end="141:30">tt</name><init pos:start="141:31" pos:end="141:40">=<expr pos:start="141:32" pos:end="141:40"><name pos:start="141:32" pos:end="141:40"><name pos:start="141:32" pos:end="141:32">b</name><index pos:start="141:33" pos:end="141:37">[<expr pos:start="141:34" pos:end="141:36"><name pos:start="141:34" pos:end="141:34">i</name><operator pos:start="141:35" pos:end="141:35">+</operator><literal type="number" pos:start="141:36" pos:end="141:36">1</literal></expr>]</index><index pos:start="141:38" pos:end="141:40">[<expr pos:start="141:39" pos:end="141:39"><name pos:start="141:39" pos:end="141:39">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="142:25" pos:end="142:45"><expr pos:start="142:25" pos:end="142:44"><name pos:start="142:25" pos:end="142:30"><name pos:start="142:25" pos:end="142:27">ver</name><index pos:start="142:28" pos:end="142:30">[<expr pos:start="142:29" pos:end="142:29"><name pos:start="142:29" pos:end="142:29">t</name></expr>]</index></name><operator pos:start="142:31" pos:end="142:31">.</operator><call pos:start="142:32" pos:end="142:44"><name pos:start="142:32" pos:end="142:40">push_back</name><argument_list pos:start="142:41" pos:end="142:44">(<argument pos:start="142:42" pos:end="142:43"><expr pos:start="142:42" pos:end="142:43"><name pos:start="142:42" pos:end="142:43">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if_stmt pos:start="143:25" pos:end="144:62"><if pos:start="143:25" pos:end="143:64">if<condition pos:start="143:27" pos:end="143:42">(<expr pos:start="143:28" pos:end="143:41"><name pos:start="143:28" pos:end="143:36"><name pos:start="143:28" pos:end="143:28">a</name><index pos:start="143:29" pos:end="143:33">[<expr pos:start="143:30" pos:end="143:32"><name pos:start="143:30" pos:end="143:30">i</name><operator pos:start="143:31" pos:end="143:31">+</operator><literal type="number" pos:start="143:32" pos:end="143:32">1</literal></expr>]</index><index pos:start="143:34" pos:end="143:36">[<expr pos:start="143:35" pos:end="143:35"><name pos:start="143:35" pos:end="143:35">j</name></expr>]</index></name><operator pos:start="143:37" pos:end="143:38">==</operator><literal type="char" pos:start="143:39" pos:end="143:41">'*'</literal></expr>)</condition><block type="pseudo" pos:start="143:44" pos:end="143:64"><block_content pos:start="143:44" pos:end="143:64"> <expr_stmt pos:start="143:44" pos:end="143:64"><expr pos:start="143:44" pos:end="143:63"><name pos:start="143:44" pos:end="143:50"><name pos:start="143:44" pos:end="143:47">ver1</name><index pos:start="143:48" pos:end="143:50">[<expr pos:start="143:49" pos:end="143:49"><name pos:start="143:49" pos:end="143:49">t</name></expr>]</index></name><operator pos:start="143:51" pos:end="143:51">.</operator><call pos:start="143:52" pos:end="143:63"><name pos:start="143:52" pos:end="143:60">push_back</name><argument_list pos:start="143:61" pos:end="143:63">(<argument pos:start="143:62" pos:end="143:62"><expr pos:start="143:62" pos:end="143:62"><literal type="number" pos:start="143:62" pos:end="143:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                        <else pos:start="144:25" pos:end="144:62">else<block type="pseudo" pos:start="144:30" pos:end="144:62"><block_content pos:start="144:30" pos:end="144:62"> <expr_stmt pos:start="144:30" pos:end="144:62"><expr pos:start="144:30" pos:end="144:61"><name pos:start="144:30" pos:end="144:36"><name pos:start="144:30" pos:end="144:33">ver1</name><index pos:start="144:34" pos:end="144:36">[<expr pos:start="144:35" pos:end="144:35"><name pos:start="144:35" pos:end="144:35">t</name></expr>]</index></name><operator pos:start="144:37" pos:end="144:37">.</operator><call pos:start="144:38" pos:end="144:61"><name pos:start="144:38" pos:end="144:46">push_back</name><argument_list pos:start="144:47" pos:end="144:61">(<argument pos:start="144:48" pos:end="144:60"><expr pos:start="144:48" pos:end="144:60"><name pos:start="144:48" pos:end="144:56"><name pos:start="144:48" pos:end="144:48">a</name><index pos:start="144:49" pos:end="144:53">[<expr pos:start="144:50" pos:end="144:52"><name pos:start="144:50" pos:end="144:50">i</name><operator pos:start="144:51" pos:end="144:51">+</operator><literal type="number" pos:start="144:52" pos:end="144:52">1</literal></expr>]</index><index pos:start="144:54" pos:end="144:56">[<expr pos:start="144:55" pos:end="144:55"><name pos:start="144:55" pos:end="144:55">j</name></expr>]</index></name><operator pos:start="144:57" pos:end="144:57">-</operator><literal type="char" pos:start="144:58" pos:end="144:60">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt pos:start="147:17" pos:end="154:17"><if pos:start="147:17" pos:end="154:17">if<condition pos:start="147:19" pos:end="147:24">(<expr pos:start="147:20" pos:end="147:23"><name pos:start="147:20" pos:end="147:20">j</name><operator pos:start="147:21" pos:end="147:22">!=</operator><name pos:start="147:23" pos:end="147:23">m</name></expr>)</condition><block pos:start="147:25" pos:end="154:17">{<block_content pos:start="148:21" pos:end="153:21">
                    <if_stmt pos:start="148:21" pos:end="153:21"><if pos:start="148:21" pos:end="153:21">if<condition pos:start="148:23" pos:end="148:38">(<expr pos:start="148:24" pos:end="148:37"><name pos:start="148:24" pos:end="148:32"><name pos:start="148:24" pos:end="148:24">a</name><index pos:start="148:25" pos:end="148:27">[<expr pos:start="148:26" pos:end="148:26"><name pos:start="148:26" pos:end="148:26">i</name></expr>]</index><index pos:start="148:28" pos:end="148:32">[<expr pos:start="148:29" pos:end="148:31"><name pos:start="148:29" pos:end="148:29">j</name><operator pos:start="148:30" pos:end="148:30">+</operator><literal type="number" pos:start="148:31" pos:end="148:31">1</literal></expr>]</index></name><operator pos:start="148:33" pos:end="148:34">!=</operator><literal type="char" pos:start="148:35" pos:end="148:37">'#'</literal></expr>)</condition><block pos:start="148:39" pos:end="153:21">{<block_content pos:start="149:25" pos:end="152:62">
                        <decl_stmt pos:start="149:25" pos:end="149:41"><decl pos:start="149:25" pos:end="149:40"><type pos:start="149:25" pos:end="149:27"><name pos:start="149:25" pos:end="149:27">int</name></type> <name pos:start="149:29" pos:end="149:30">tt</name><init pos:start="149:31" pos:end="149:40">=<expr pos:start="149:32" pos:end="149:40"><name pos:start="149:32" pos:end="149:40"><name pos:start="149:32" pos:end="149:32">b</name><index pos:start="149:33" pos:end="149:35">[<expr pos:start="149:34" pos:end="149:34"><name pos:start="149:34" pos:end="149:34">i</name></expr>]</index><index pos:start="149:36" pos:end="149:40">[<expr pos:start="149:37" pos:end="149:39"><name pos:start="149:37" pos:end="149:37">j</name><operator pos:start="149:38" pos:end="149:38">+</operator><literal type="number" pos:start="149:39" pos:end="149:39">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="150:25" pos:end="150:45"><expr pos:start="150:25" pos:end="150:44"><name pos:start="150:25" pos:end="150:30"><name pos:start="150:25" pos:end="150:27">ver</name><index pos:start="150:28" pos:end="150:30">[<expr pos:start="150:29" pos:end="150:29"><name pos:start="150:29" pos:end="150:29">t</name></expr>]</index></name><operator pos:start="150:31" pos:end="150:31">.</operator><call pos:start="150:32" pos:end="150:44"><name pos:start="150:32" pos:end="150:40">push_back</name><argument_list pos:start="150:41" pos:end="150:44">(<argument pos:start="150:42" pos:end="150:43"><expr pos:start="150:42" pos:end="150:43"><name pos:start="150:42" pos:end="150:43">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if_stmt pos:start="151:25" pos:end="152:62"><if pos:start="151:25" pos:end="151:64">if<condition pos:start="151:27" pos:end="151:42">(<expr pos:start="151:28" pos:end="151:41"><name pos:start="151:28" pos:end="151:36"><name pos:start="151:28" pos:end="151:28">a</name><index pos:start="151:29" pos:end="151:31">[<expr pos:start="151:30" pos:end="151:30"><name pos:start="151:30" pos:end="151:30">i</name></expr>]</index><index pos:start="151:32" pos:end="151:36">[<expr pos:start="151:33" pos:end="151:35"><name pos:start="151:33" pos:end="151:33">j</name><operator pos:start="151:34" pos:end="151:34">+</operator><literal type="number" pos:start="151:35" pos:end="151:35">1</literal></expr>]</index></name><operator pos:start="151:37" pos:end="151:38">==</operator><literal type="char" pos:start="151:39" pos:end="151:41">'*'</literal></expr>)</condition><block type="pseudo" pos:start="151:44" pos:end="151:64"><block_content pos:start="151:44" pos:end="151:64"> <expr_stmt pos:start="151:44" pos:end="151:64"><expr pos:start="151:44" pos:end="151:63"><name pos:start="151:44" pos:end="151:50"><name pos:start="151:44" pos:end="151:47">ver1</name><index pos:start="151:48" pos:end="151:50">[<expr pos:start="151:49" pos:end="151:49"><name pos:start="151:49" pos:end="151:49">t</name></expr>]</index></name><operator pos:start="151:51" pos:end="151:51">.</operator><call pos:start="151:52" pos:end="151:63"><name pos:start="151:52" pos:end="151:60">push_back</name><argument_list pos:start="151:61" pos:end="151:63">(<argument pos:start="151:62" pos:end="151:62"><expr pos:start="151:62" pos:end="151:62"><literal type="number" pos:start="151:62" pos:end="151:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                        <else pos:start="152:25" pos:end="152:62">else<block type="pseudo" pos:start="152:30" pos:end="152:62"><block_content pos:start="152:30" pos:end="152:62"> <expr_stmt pos:start="152:30" pos:end="152:62"><expr pos:start="152:30" pos:end="152:61"><name pos:start="152:30" pos:end="152:36"><name pos:start="152:30" pos:end="152:33">ver1</name><index pos:start="152:34" pos:end="152:36">[<expr pos:start="152:35" pos:end="152:35"><name pos:start="152:35" pos:end="152:35">t</name></expr>]</index></name><operator pos:start="152:37" pos:end="152:37">.</operator><call pos:start="152:38" pos:end="152:61"><name pos:start="152:38" pos:end="152:46">push_back</name><argument_list pos:start="152:47" pos:end="152:61">(<argument pos:start="152:48" pos:end="152:60"><expr pos:start="152:48" pos:end="152:60"><name pos:start="152:48" pos:end="152:56"><name pos:start="152:48" pos:end="152:48">a</name><index pos:start="152:49" pos:end="152:51">[<expr pos:start="152:50" pos:end="152:50"><name pos:start="152:50" pos:end="152:50">i</name></expr>]</index><index pos:start="152:52" pos:end="152:56">[<expr pos:start="152:53" pos:end="152:55"><name pos:start="152:53" pos:end="152:53">j</name><operator pos:start="152:54" pos:end="152:54">+</operator><literal type="number" pos:start="152:55" pos:end="152:55">1</literal></expr>]</index></name><operator pos:start="152:57" pos:end="152:57">-</operator><literal type="char" pos:start="152:58" pos:end="152:60">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="158:5" pos:end="158:14"><expr pos:start="158:5" pos:end="158:13"><call pos:start="158:5" pos:end="158:13"><name pos:start="158:5" pos:end="158:10">tarjan</name><argument_list pos:start="158:11" pos:end="158:13">(<argument pos:start="158:12" pos:end="158:12"><expr pos:start="158:12" pos:end="158:12"><literal type="number" pos:start="158:12" pos:end="158:12">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
    <for pos:start="159:5" pos:end="171:5">for<control pos:start="159:8" pos:end="159:31">(<init pos:start="159:9" pos:end="159:16"><decl pos:start="159:9" pos:end="159:15"><type pos:start="159:9" pos:end="159:11"><name pos:start="159:9" pos:end="159:11">int</name></type> <name pos:start="159:13" pos:end="159:13">i</name><init pos:start="159:14" pos:end="159:15">=<expr pos:start="159:15" pos:end="159:15"><literal type="number" pos:start="159:15" pos:end="159:15">1</literal></expr></init></decl>;</init><condition pos:start="159:17" pos:end="159:27"><expr pos:start="159:17" pos:end="159:26"><name pos:start="159:17" pos:end="159:17">i</name><operator pos:start="159:18" pos:end="159:19">&lt;=</operator><name pos:start="159:20" pos:end="159:26"><name pos:start="159:20" pos:end="159:20">b</name><index pos:start="159:21" pos:end="159:23">[<expr pos:start="159:22" pos:end="159:22"><name pos:start="159:22" pos:end="159:22">n</name></expr>]</index><index pos:start="159:24" pos:end="159:26">[<expr pos:start="159:25" pos:end="159:25"><name pos:start="159:25" pos:end="159:25">m</name></expr>]</index></name></expr>;</condition><incr pos:start="159:28" pos:end="159:30"><expr pos:start="159:28" pos:end="159:30"><name pos:start="159:28" pos:end="159:28">i</name><operator pos:start="159:29" pos:end="159:30">++</operator></expr></incr>)</control><block pos:start="159:32" pos:end="171:5">{<block_content pos:start="160:9" pos:end="170:9">
        <decl_stmt pos:start="160:9" pos:end="160:16"><decl pos:start="160:9" pos:end="160:15"><type pos:start="160:9" pos:end="160:11"><name pos:start="160:9" pos:end="160:11">int</name></type> <name pos:start="160:13" pos:end="160:13">u</name><init pos:start="160:14" pos:end="160:15">=<expr pos:start="160:15" pos:end="160:15"><name pos:start="160:15" pos:end="160:15">i</name></expr></init></decl>;</decl_stmt>
        <for pos:start="161:9" pos:end="170:9">for<control pos:start="161:12" pos:end="161:40">(<init pos:start="161:13" pos:end="161:20"><decl pos:start="161:13" pos:end="161:19"><type pos:start="161:13" pos:end="161:15"><name pos:start="161:13" pos:end="161:15">int</name></type> <name pos:start="161:17" pos:end="161:17">j</name><init pos:start="161:18" pos:end="161:19">=<expr pos:start="161:19" pos:end="161:19"><literal type="number" pos:start="161:19" pos:end="161:19">0</literal></expr></init></decl>;</init><condition pos:start="161:21" pos:end="161:36"><expr pos:start="161:21" pos:end="161:35"><name pos:start="161:21" pos:end="161:21">j</name><operator pos:start="161:22" pos:end="161:22">&lt;</operator><name pos:start="161:23" pos:end="161:28"><name pos:start="161:23" pos:end="161:25">ver</name><index pos:start="161:26" pos:end="161:28">[<expr pos:start="161:27" pos:end="161:27"><name pos:start="161:27" pos:end="161:27">u</name></expr>]</index></name><operator pos:start="161:29" pos:end="161:29">.</operator><call pos:start="161:30" pos:end="161:35"><name pos:start="161:30" pos:end="161:33">size</name><argument_list pos:start="161:34" pos:end="161:35">()</argument_list></call></expr>;</condition><incr pos:start="161:37" pos:end="161:39"><expr pos:start="161:37" pos:end="161:39"><name pos:start="161:37" pos:end="161:37">j</name><operator pos:start="161:38" pos:end="161:39">++</operator></expr></incr>)</control><block pos:start="161:41" pos:end="170:9">{<block_content pos:start="162:13" pos:end="169:13">
            <decl_stmt pos:start="162:13" pos:end="162:28"><decl pos:start="162:13" pos:end="162:27"><type pos:start="162:13" pos:end="162:15"><name pos:start="162:13" pos:end="162:15">int</name></type> <name pos:start="162:17" pos:end="162:17">v</name><init pos:start="162:18" pos:end="162:27">=<expr pos:start="162:19" pos:end="162:27"><name pos:start="162:19" pos:end="162:27"><name pos:start="162:19" pos:end="162:21">ver</name><index pos:start="162:22" pos:end="162:24">[<expr pos:start="162:23" pos:end="162:23"><name pos:start="162:23" pos:end="162:23">u</name></expr>]</index><index pos:start="162:25" pos:end="162:27">[<expr pos:start="162:26" pos:end="162:26"><name pos:start="162:26" pos:end="162:26">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="163:13" pos:end="169:13"><if pos:start="163:13" pos:end="165:13">if<condition pos:start="163:15" pos:end="163:32">(<expr pos:start="163:16" pos:end="163:31"><name pos:start="163:16" pos:end="163:22"><name pos:start="163:16" pos:end="163:19">sum1</name><index pos:start="163:20" pos:end="163:22">[<expr pos:start="163:21" pos:end="163:21"><name pos:start="163:21" pos:end="163:21">u</name></expr>]</index></name><operator pos:start="163:23" pos:end="163:24">==</operator><name pos:start="163:25" pos:end="163:31"><name pos:start="163:25" pos:end="163:28">sum1</name><index pos:start="163:29" pos:end="163:31">[<expr pos:start="163:30" pos:end="163:30"><name pos:start="163:30" pos:end="163:30">v</name></expr>]</index></name></expr>)</condition><block pos:start="163:33" pos:end="165:13">{<block_content pos:start="164:17" pos:end="164:42">
                <expr_stmt pos:start="164:17" pos:end="164:42"><expr pos:start="164:17" pos:end="164:41"><name pos:start="164:17" pos:end="164:29"><name pos:start="164:17" pos:end="164:20">sum2</name><index pos:start="164:21" pos:end="164:29">[<expr pos:start="164:22" pos:end="164:28"><name pos:start="164:22" pos:end="164:28"><name pos:start="164:22" pos:end="164:25">sum1</name><index pos:start="164:26" pos:end="164:28">[<expr pos:start="164:27" pos:end="164:27"><name pos:start="164:27" pos:end="164:27">u</name></expr>]</index></name></expr>]</index></name><operator pos:start="164:30" pos:end="164:31">+=</operator><name pos:start="164:32" pos:end="164:41"><name pos:start="164:32" pos:end="164:35">ver1</name><index pos:start="164:36" pos:end="164:38">[<expr pos:start="164:37" pos:end="164:37"><name pos:start="164:37" pos:end="164:37">u</name></expr>]</index><index pos:start="164:39" pos:end="164:41">[<expr pos:start="164:40" pos:end="164:40"><name pos:start="164:40" pos:end="164:40">j</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="166:13" pos:end="169:13">else<block pos:start="166:17" pos:end="169:13">{<block_content pos:start="167:17" pos:end="168:52">
                <expr_stmt pos:start="167:17" pos:end="167:49"><expr pos:start="167:17" pos:end="167:48"><name pos:start="167:17" pos:end="167:29"><name pos:start="167:17" pos:end="167:20">ver2</name><index pos:start="167:21" pos:end="167:29">[<expr pos:start="167:22" pos:end="167:28"><name pos:start="167:22" pos:end="167:28"><name pos:start="167:22" pos:end="167:25">sum1</name><index pos:start="167:26" pos:end="167:28">[<expr pos:start="167:27" pos:end="167:27"><name pos:start="167:27" pos:end="167:27">u</name></expr>]</index></name></expr>]</index></name><operator pos:start="167:30" pos:end="167:30">.</operator><call pos:start="167:31" pos:end="167:48"><name pos:start="167:31" pos:end="167:39">push_back</name><argument_list pos:start="167:40" pos:end="167:48">(<argument pos:start="167:41" pos:end="167:47"><expr pos:start="167:41" pos:end="167:47"><name pos:start="167:41" pos:end="167:47"><name pos:start="167:41" pos:end="167:44">sum1</name><index pos:start="167:45" pos:end="167:47">[<expr pos:start="167:46" pos:end="167:46"><name pos:start="167:46" pos:end="167:46">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="168:17" pos:end="168:52"><expr pos:start="168:17" pos:end="168:51"><name pos:start="168:17" pos:end="168:29"><name pos:start="168:17" pos:end="168:20">ver3</name><index pos:start="168:21" pos:end="168:29">[<expr pos:start="168:22" pos:end="168:28"><name pos:start="168:22" pos:end="168:28"><name pos:start="168:22" pos:end="168:25">sum1</name><index pos:start="168:26" pos:end="168:28">[<expr pos:start="168:27" pos:end="168:27"><name pos:start="168:27" pos:end="168:27">u</name></expr>]</index></name></expr>]</index></name><operator pos:start="168:30" pos:end="168:30">.</operator><call pos:start="168:31" pos:end="168:51"><name pos:start="168:31" pos:end="168:39">push_back</name><argument_list pos:start="168:40" pos:end="168:51">(<argument pos:start="168:41" pos:end="168:50"><expr pos:start="168:41" pos:end="168:50"><name pos:start="168:41" pos:end="168:50"><name pos:start="168:41" pos:end="168:44">ver1</name><index pos:start="168:45" pos:end="168:47">[<expr pos:start="168:46" pos:end="168:46"><name pos:start="168:46" pos:end="168:46">u</name></expr>]</index><index pos:start="168:48" pos:end="168:50">[<expr pos:start="168:49" pos:end="168:49"><name pos:start="168:49" pos:end="168:49">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="172:5" pos:end="172:27"><expr pos:start="172:5" pos:end="172:26"><call pos:start="172:5" pos:end="172:26"><name pos:start="172:5" pos:end="172:10">memset</name><argument_list pos:start="172:11" pos:end="172:26">(<argument pos:start="172:12" pos:end="172:12"><expr pos:start="172:12" pos:end="172:12"><name pos:start="172:12" pos:end="172:12">f</name></expr></argument>,<argument pos:start="172:14" pos:end="172:15"><expr pos:start="172:14" pos:end="172:15"><operator pos:start="172:14" pos:end="172:14">-</operator><literal type="number" pos:start="172:15" pos:end="172:15">1</literal></expr></argument>,<argument pos:start="172:17" pos:end="172:25"><expr pos:start="172:17" pos:end="172:25"><sizeof pos:start="172:17" pos:end="172:25">sizeof<argument_list pos:start="172:23" pos:end="172:25">(<argument pos:start="172:24" pos:end="172:24"><expr pos:start="172:24" pos:end="172:24"><name pos:start="172:24" pos:end="172:24">f</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="173:5" pos:end="173:23"><decl pos:start="173:5" pos:end="173:22"><type pos:start="173:5" pos:end="173:7"><name pos:start="173:5" pos:end="173:7">int</name></type> <name pos:start="173:9" pos:end="173:11">ans</name><init pos:start="173:12" pos:end="173:22">=<expr pos:start="173:13" pos:end="173:22"><call pos:start="173:13" pos:end="173:22"><name pos:start="173:13" pos:end="173:15">dfs</name><argument_list pos:start="173:16" pos:end="173:22">(<argument pos:start="173:17" pos:end="173:21"><expr pos:start="173:17" pos:end="173:21"><name pos:start="173:17" pos:end="173:21">flag1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="174:5" pos:end="174:23"><expr pos:start="174:5" pos:end="174:22"><name pos:start="174:5" pos:end="174:7">ans</name><operator pos:start="174:8" pos:end="174:9">+=</operator><operator pos:start="174:10" pos:end="174:10">(</operator><name pos:start="174:11" pos:end="174:17"><name pos:start="174:11" pos:end="174:11">a</name><index pos:start="174:12" pos:end="174:14">[<expr pos:start="174:13" pos:end="174:13"><literal type="number" pos:start="174:13" pos:end="174:13">1</literal></expr>]</index><index pos:start="174:15" pos:end="174:17">[<expr pos:start="174:16" pos:end="174:16"><literal type="number" pos:start="174:16" pos:end="174:16">1</literal></expr>]</index></name><operator pos:start="174:18" pos:end="174:18">-</operator><literal type="char" pos:start="174:19" pos:end="174:21">'0'</literal><operator pos:start="174:22" pos:end="174:22">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="175:5" pos:end="175:20"><expr pos:start="175:5" pos:end="175:19"><name pos:start="175:5" pos:end="175:8">cout</name><operator pos:start="175:9" pos:end="175:10">&lt;&lt;</operator><name pos:start="175:11" pos:end="175:13">ans</name><operator pos:start="175:14" pos:end="175:15">&lt;&lt;</operator><literal type="string" pos:start="175:16" pos:end="175:19">"\n"</literal></expr>;</expr_stmt>
    <return pos:start="176:5" pos:end="176:13">return <expr pos:start="176:12" pos:end="176:12"><literal type="number" pos:start="176:12" pos:end="176:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
