<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/109/109.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:22"><decl pos:start="3:1" pos:end="3:21"><type pos:start="3:1" pos:end="3:4"><name pos:start="3:1" pos:end="3:4">char</name></type> <name pos:start="3:6" pos:end="3:21"><name pos:start="3:6" pos:end="3:9">maze</name><index pos:start="3:10" pos:end="3:15">[<expr pos:start="3:11" pos:end="3:14"><literal type="number" pos:start="3:11" pos:end="3:14">1005</literal></expr>]</index><index pos:start="3:16" pos:end="3:21">[<expr pos:start="3:17" pos:end="3:20"><literal type="number" pos:start="3:17" pos:end="3:20">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:25"><decl pos:start="4:1" pos:end="4:24"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:20"><name pos:start="4:6" pos:end="4:8">vis</name><index pos:start="4:9" pos:end="4:14">[<expr pos:start="4:10" pos:end="4:13"><literal type="number" pos:start="4:10" pos:end="4:13">1005</literal></expr>]</index><index pos:start="4:15" pos:end="4:20">[<expr pos:start="4:16" pos:end="4:19"><literal type="number" pos:start="4:16" pos:end="4:19">1005</literal></expr>]</index></name><init pos:start="4:21" pos:end="4:24">=<expr pos:start="4:22" pos:end="4:24"><block pos:start="4:22" pos:end="4:24">{<expr pos:start="4:23" pos:end="4:23"><literal type="number" pos:start="4:23" pos:end="4:23">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:12"><decl pos:start="5:1" pos:end="5:5"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:5">n</name></decl>,<decl pos:start="5:7" pos:end="5:7"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:7" pos:end="5:7">m</name></decl>,<decl pos:start="5:9" pos:end="5:11"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:9" pos:end="5:11">ans</name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:51"><decl pos:start="6:1" pos:end="6:50"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:13"><name pos:start="6:5" pos:end="6:7">dir</name><index pos:start="6:8" pos:end="6:10">[<expr pos:start="6:9" pos:end="6:9"><literal type="number" pos:start="6:9" pos:end="6:9">4</literal></expr>]</index><index pos:start="6:11" pos:end="6:13">[<expr pos:start="6:12" pos:end="6:12"><literal type="number" pos:start="6:12" pos:end="6:12">2</literal></expr>]</index></name> <init pos:start="6:15" pos:end="6:50">= <expr pos:start="6:17" pos:end="6:50"><block pos:start="6:17" pos:end="6:50">{<expr pos:start="6:18" pos:end="6:24"><block pos:start="6:18" pos:end="6:24">{<expr pos:start="6:19" pos:end="6:20"><operator pos:start="6:19" pos:end="6:19">-</operator><literal type="number" pos:start="6:20" pos:end="6:20">1</literal></expr>, <expr pos:start="6:23" pos:end="6:23"><literal type="number" pos:start="6:23" pos:end="6:23">0</literal></expr>}</block></expr>, <expr pos:start="6:27" pos:end="6:32"><block pos:start="6:27" pos:end="6:32">{<expr pos:start="6:28" pos:end="6:28"><literal type="number" pos:start="6:28" pos:end="6:28">1</literal></expr>, <expr pos:start="6:31" pos:end="6:31"><literal type="number" pos:start="6:31" pos:end="6:31">0</literal></expr>}</block></expr>, <expr pos:start="6:35" pos:end="6:41"><block pos:start="6:35" pos:end="6:41">{<expr pos:start="6:36" pos:end="6:36"><literal type="number" pos:start="6:36" pos:end="6:36">0</literal></expr>, <expr pos:start="6:39" pos:end="6:40"><operator pos:start="6:39" pos:end="6:39">-</operator><literal type="number" pos:start="6:40" pos:end="6:40">1</literal></expr>}</block></expr>, <expr pos:start="6:44" pos:end="6:49"><block pos:start="6:44" pos:end="6:49">{<expr pos:start="6:45" pos:end="6:45"><literal type="number" pos:start="6:45" pos:end="6:45">0</literal></expr>, <expr pos:start="6:48" pos:end="6:48"><literal type="number" pos:start="6:48" pos:end="6:48">1</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="9:1"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">bool</name></type> <name pos:start="7:6" pos:end="7:7">in</name><parameter_list pos:start="7:8" pos:end="7:21">(<parameter pos:start="7:9" pos:end="7:13"><decl pos:start="7:9" pos:end="7:13"><type pos:start="7:9" pos:end="7:13"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">x</name></decl></parameter>, <parameter pos:start="7:16" pos:end="7:20"><decl pos:start="7:16" pos:end="7:20"><type pos:start="7:16" pos:end="7:20"><name pos:start="7:16" pos:end="7:18">int</name></type> <name pos:start="7:20" pos:end="7:20">y</name></decl></parameter>)</parameter_list> <block pos:start="7:23" pos:end="9:1">{<block_content pos:start="8:5" pos:end="8:46">
    <return pos:start="8:5" pos:end="8:46">return <expr pos:start="8:12" pos:end="8:45"><name pos:start="8:12" pos:end="8:12">x</name> <operator pos:start="8:14" pos:end="8:15">&gt;=</operator> <literal type="number" pos:start="8:17" pos:end="8:17">0</literal> <operator pos:start="8:19" pos:end="8:20">&amp;&amp;</operator> <name pos:start="8:22" pos:end="8:22">x</name> <operator pos:start="8:24" pos:end="8:24">&lt;</operator> <name pos:start="8:26" pos:end="8:26">n</name> <operator pos:start="8:28" pos:end="8:29">&amp;&amp;</operator> <name pos:start="8:31" pos:end="8:31">y</name> <operator pos:start="8:33" pos:end="8:34">&gt;=</operator> <literal type="number" pos:start="8:36" pos:end="8:36">0</literal> <operator pos:start="8:38" pos:end="8:39">&amp;&amp;</operator> <name pos:start="8:41" pos:end="8:41">y</name> <operator pos:start="8:43" pos:end="8:43">&lt;</operator> <name pos:start="8:45" pos:end="8:45">m</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="10:1" pos:end="20:1"><type pos:start="10:1" pos:end="10:4"><name pos:start="10:1" pos:end="10:4">void</name></type> <name pos:start="10:6" pos:end="10:8">dfs</name><parameter_list pos:start="10:9" pos:end="10:21">(<parameter pos:start="10:10" pos:end="10:14"><decl pos:start="10:10" pos:end="10:14"><type pos:start="10:10" pos:end="10:14"><name pos:start="10:10" pos:end="10:12">int</name></type> <name pos:start="10:14" pos:end="10:14">x</name></decl></parameter>,<parameter pos:start="10:16" pos:end="10:20"><decl pos:start="10:16" pos:end="10:20"><type pos:start="10:16" pos:end="10:20"><name pos:start="10:16" pos:end="10:18">int</name></type> <name pos:start="10:20" pos:end="10:20">y</name></decl></parameter>)</parameter_list><block pos:start="10:22" pos:end="20:1">{<block_content pos:start="11:5" pos:end="19:11">
    <expr_stmt pos:start="11:5" pos:end="11:19"><expr pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:7">vis</name><index pos:start="11:8" pos:end="11:10">[<expr pos:start="11:9" pos:end="11:9"><name pos:start="11:9" pos:end="11:9">x</name></expr>]</index><index pos:start="11:11" pos:end="11:13">[<expr pos:start="11:12" pos:end="11:12"><name pos:start="11:12" pos:end="11:12">y</name></expr>]</index></name><operator pos:start="11:14" pos:end="11:14">=</operator><literal type="boolean" pos:start="11:15" pos:end="11:18">true</literal></expr>;</expr_stmt>
    <for pos:start="12:5" pos:end="18:5">for<control pos:start="12:8" pos:end="12:24">(<init pos:start="12:9" pos:end="12:16"><decl pos:start="12:9" pos:end="12:15"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">i</name><init pos:start="12:14" pos:end="12:15">=<expr pos:start="12:15" pos:end="12:15"><literal type="number" pos:start="12:15" pos:end="12:15">0</literal></expr></init></decl>;</init><condition pos:start="12:17" pos:end="12:20"><expr pos:start="12:17" pos:end="12:19"><name pos:start="12:17" pos:end="12:17">i</name><operator pos:start="12:18" pos:end="12:18">&lt;</operator><literal type="number" pos:start="12:19" pos:end="12:19">4</literal></expr>;</condition><incr pos:start="12:21" pos:end="12:23"><expr pos:start="12:21" pos:end="12:23"><name pos:start="12:21" pos:end="12:21">i</name><operator pos:start="12:22" pos:end="12:23">++</operator></expr></incr>)</control><block pos:start="12:25" pos:end="18:5">{<block_content pos:start="13:9" pos:end="17:9">
        <decl_stmt pos:start="13:9" pos:end="13:27"><decl pos:start="13:9" pos:end="13:26"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:14">tx</name><init pos:start="13:15" pos:end="13:26">=<expr pos:start="13:16" pos:end="13:26"><name pos:start="13:16" pos:end="13:16">x</name><operator pos:start="13:17" pos:end="13:17">+</operator><name pos:start="13:18" pos:end="13:26"><name pos:start="13:18" pos:end="13:20">dir</name><index pos:start="13:21" pos:end="13:23">[<expr pos:start="13:22" pos:end="13:22"><name pos:start="13:22" pos:end="13:22">i</name></expr>]</index><index pos:start="13:24" pos:end="13:26">[<expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="14:9" pos:end="14:27"><decl pos:start="14:9" pos:end="14:26"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:14">ty</name><init pos:start="14:15" pos:end="14:26">=<expr pos:start="14:16" pos:end="14:26"><name pos:start="14:16" pos:end="14:16">y</name><operator pos:start="14:17" pos:end="14:17">+</operator><name pos:start="14:18" pos:end="14:26"><name pos:start="14:18" pos:end="14:20">dir</name><index pos:start="14:21" pos:end="14:23">[<expr pos:start="14:22" pos:end="14:22"><name pos:start="14:22" pos:end="14:22">i</name></expr>]</index><index pos:start="14:24" pos:end="14:26">[<expr pos:start="14:25" pos:end="14:25"><literal type="number" pos:start="14:25" pos:end="14:25">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="15:9" pos:end="17:9"><if pos:start="15:9" pos:end="17:9">if<condition pos:start="15:11" pos:end="15:60">(<expr pos:start="15:12" pos:end="15:59"><call pos:start="15:12" pos:end="15:20"><name pos:start="15:12" pos:end="15:13">in</name><argument_list pos:start="15:14" pos:end="15:20">(<argument pos:start="15:15" pos:end="15:16"><expr pos:start="15:15" pos:end="15:16"><name pos:start="15:15" pos:end="15:16">tx</name></expr></argument>,<argument pos:start="15:18" pos:end="15:19"><expr pos:start="15:18" pos:end="15:19"><name pos:start="15:18" pos:end="15:19">ty</name></expr></argument>)</argument_list></call><operator pos:start="15:21" pos:end="15:22">&amp;&amp;</operator><name pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:26">maze</name><index pos:start="15:27" pos:end="15:30">[<expr pos:start="15:28" pos:end="15:29"><name pos:start="15:28" pos:end="15:29">tx</name></expr>]</index><index pos:start="15:31" pos:end="15:34">[<expr pos:start="15:32" pos:end="15:33"><name pos:start="15:32" pos:end="15:33">ty</name></expr>]</index></name><operator pos:start="15:35" pos:end="15:36">==</operator><literal type="char" pos:start="15:37" pos:end="15:39">'#'</literal><operator pos:start="15:40" pos:end="15:41">&amp;&amp;</operator><name pos:start="15:42" pos:end="15:52"><name pos:start="15:42" pos:end="15:44">vis</name><index pos:start="15:45" pos:end="15:48">[<expr pos:start="15:46" pos:end="15:47"><name pos:start="15:46" pos:end="15:47">tx</name></expr>]</index><index pos:start="15:49" pos:end="15:52">[<expr pos:start="15:50" pos:end="15:51"><name pos:start="15:50" pos:end="15:51">ty</name></expr>]</index></name><operator pos:start="15:53" pos:end="15:54">==</operator><literal type="boolean" pos:start="15:55" pos:end="15:59">false</literal></expr>)</condition><block pos:start="15:61" pos:end="17:9">{<block_content pos:start="16:13" pos:end="16:23">
            <expr_stmt pos:start="16:13" pos:end="16:23"><expr pos:start="16:13" pos:end="16:22"><call pos:start="16:13" pos:end="16:22"><name pos:start="16:13" pos:end="16:15">dfs</name><argument_list pos:start="16:16" pos:end="16:22">(<argument pos:start="16:17" pos:end="16:18"><expr pos:start="16:17" pos:end="16:18"><name pos:start="16:17" pos:end="16:18">tx</name></expr></argument>,<argument pos:start="16:20" pos:end="16:21"><expr pos:start="16:20" pos:end="16:21"><name pos:start="16:20" pos:end="16:21">ty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="19:5" pos:end="19:11">return;</return>
</block_content>}</block></function>
<function pos:start="21:1" pos:end="40:1"><type pos:start="21:1" pos:end="21:3"><name pos:start="21:1" pos:end="21:3">int</name></type> <name pos:start="21:5" pos:end="21:8">main</name><parameter_list pos:start="21:9" pos:end="21:10">()</parameter_list><block pos:start="21:11" pos:end="40:1">{<block_content pos:start="22:5" pos:end="39:14">
    <expr_stmt pos:start="22:5" pos:end="22:35"><expr pos:start="22:5" pos:end="22:34"><call pos:start="22:5" pos:end="22:34"><name pos:start="22:5" pos:end="22:11">freopen</name><argument_list pos:start="22:12" pos:end="22:34">(<argument pos:start="22:13" pos:end="22:23"><expr pos:start="22:13" pos:end="22:23"><literal type="string" pos:start="22:13" pos:end="22:23">"hiking.in"</literal></expr></argument>,<argument pos:start="22:25" pos:end="22:27"><expr pos:start="22:25" pos:end="22:27"><literal type="string" pos:start="22:25" pos:end="22:27">"r"</literal></expr></argument>,<argument pos:start="22:29" pos:end="22:33"><expr pos:start="22:29" pos:end="22:33"><name pos:start="22:29" pos:end="22:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><call pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:11">freopen</name><argument_list pos:start="23:12" pos:end="23:36">(<argument pos:start="23:13" pos:end="23:24"><expr pos:start="23:13" pos:end="23:24"><literal type="string" pos:start="23:13" pos:end="23:24">"hiking.out"</literal></expr></argument>,<argument pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><literal type="string" pos:start="23:26" pos:end="23:28">"w"</literal></expr></argument>,<argument pos:start="23:30" pos:end="23:35"><expr pos:start="23:30" pos:end="23:35"><name pos:start="23:30" pos:end="23:35">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="24:5" pos:end="24:12"><decl pos:start="24:5" pos:end="24:9"><type pos:start="24:5" pos:end="24:7"><name pos:start="24:5" pos:end="24:7">int</name></type> <name pos:start="24:9" pos:end="24:9">n</name></decl>,<decl pos:start="24:11" pos:end="24:11"><type ref="prev" pos:start="24:5" pos:end="24:7"/><name pos:start="24:11" pos:end="24:11">m</name></decl>;</decl_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:14"><expr pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:7">cin</name><operator pos:start="25:8" pos:end="25:9">&gt;&gt;</operator><name pos:start="25:10" pos:end="25:10">n</name><operator pos:start="25:11" pos:end="25:12">&gt;&gt;</operator><name pos:start="25:13" pos:end="25:13">m</name></expr>;</expr_stmt>
    <for pos:start="26:5" pos:end="30:5">for<control pos:start="26:8" pos:end="26:24">(<init pos:start="26:9" pos:end="26:16"><decl pos:start="26:9" pos:end="26:15"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:13">i</name><init pos:start="26:14" pos:end="26:15">=<expr pos:start="26:15" pos:end="26:15"><literal type="number" pos:start="26:15" pos:end="26:15">0</literal></expr></init></decl>;</init><condition pos:start="26:17" pos:end="26:20"><expr pos:start="26:17" pos:end="26:19"><name pos:start="26:17" pos:end="26:17">i</name><operator pos:start="26:18" pos:end="26:18">&lt;</operator><name pos:start="26:19" pos:end="26:19">n</name></expr>;</condition><incr pos:start="26:21" pos:end="26:23"><expr pos:start="26:21" pos:end="26:23"><name pos:start="26:21" pos:end="26:21">i</name><operator pos:start="26:22" pos:end="26:23">++</operator></expr></incr>)</control><block pos:start="26:25" pos:end="30:5">{<block_content pos:start="27:9" pos:end="29:9">
        <for pos:start="27:9" pos:end="29:9">for<control pos:start="27:12" pos:end="27:28">(<init pos:start="27:13" pos:end="27:20"><decl pos:start="27:13" pos:end="27:19"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:17">j</name><init pos:start="27:18" pos:end="27:19">=<expr pos:start="27:19" pos:end="27:19"><literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr></init></decl>;</init><condition pos:start="27:21" pos:end="27:24"><expr pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:21">j</name><operator pos:start="27:22" pos:end="27:22">&lt;</operator><name pos:start="27:23" pos:end="27:23">m</name></expr>;</condition><incr pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:25">j</name><operator pos:start="27:26" pos:end="27:27">++</operator></expr></incr>)</control><block pos:start="27:29" pos:end="29:9">{<block_content pos:start="28:13" pos:end="28:28">
            <expr_stmt pos:start="28:13" pos:end="28:28"><expr pos:start="28:13" pos:end="28:27"><name pos:start="28:13" pos:end="28:15">cin</name><operator pos:start="28:16" pos:end="28:17">&gt;&gt;</operator><name pos:start="28:18" pos:end="28:27"><name pos:start="28:18" pos:end="28:21">maze</name><index pos:start="28:22" pos:end="28:24">[<expr pos:start="28:23" pos:end="28:23"><name pos:start="28:23" pos:end="28:23">i</name></expr>]</index><index pos:start="28:25" pos:end="28:27">[<expr pos:start="28:26" pos:end="28:26"><name pos:start="28:26" pos:end="28:26">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="31:5" pos:end="38:5">for<control pos:start="31:8" pos:end="31:24">(<init pos:start="31:9" pos:end="31:16"><decl pos:start="31:9" pos:end="31:15"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name><init pos:start="31:14" pos:end="31:15">=<expr pos:start="31:15" pos:end="31:15"><literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr></init></decl>;</init><condition pos:start="31:17" pos:end="31:20"><expr pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:17">i</name><operator pos:start="31:18" pos:end="31:18">&lt;</operator><name pos:start="31:19" pos:end="31:19">n</name></expr>;</condition><incr pos:start="31:21" pos:end="31:23"><expr pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:21">i</name><operator pos:start="31:22" pos:end="31:23">++</operator></expr></incr>)</control><block pos:start="31:25" pos:end="38:5">{<block_content pos:start="32:9" pos:end="37:9">
        <for pos:start="32:9" pos:end="37:9">for<control pos:start="32:12" pos:end="32:28">(<init pos:start="32:13" pos:end="32:20"><decl pos:start="32:13" pos:end="32:19"><type pos:start="32:13" pos:end="32:15"><name pos:start="32:13" pos:end="32:15">int</name></type> <name pos:start="32:17" pos:end="32:17">j</name><init pos:start="32:18" pos:end="32:19">=<expr pos:start="32:19" pos:end="32:19"><literal type="number" pos:start="32:19" pos:end="32:19">0</literal></expr></init></decl>;</init><condition pos:start="32:21" pos:end="32:24"><expr pos:start="32:21" pos:end="32:23"><name pos:start="32:21" pos:end="32:21">j</name><operator pos:start="32:22" pos:end="32:22">&lt;</operator><name pos:start="32:23" pos:end="32:23">m</name></expr>;</condition><incr pos:start="32:25" pos:end="32:27"><expr pos:start="32:25" pos:end="32:27"><name pos:start="32:25" pos:end="32:25">j</name><operator pos:start="32:26" pos:end="32:27">++</operator></expr></incr>)</control><block pos:start="32:29" pos:end="37:9">{<block_content pos:start="33:13" pos:end="36:13">
            <if_stmt pos:start="33:13" pos:end="36:13"><if pos:start="33:13" pos:end="36:13">if<condition pos:start="33:15" pos:end="33:49">(<expr pos:start="33:16" pos:end="33:48"><name pos:start="33:16" pos:end="33:24"><name pos:start="33:16" pos:end="33:18">vis</name><index pos:start="33:19" pos:end="33:21">[<expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">i</name></expr>]</index><index pos:start="33:22" pos:end="33:24">[<expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">j</name></expr>]</index></name><operator pos:start="33:25" pos:end="33:26">==</operator><literal type="boolean" pos:start="33:27" pos:end="33:31">false</literal><operator pos:start="33:32" pos:end="33:33">&amp;&amp;</operator><name pos:start="33:34" pos:end="33:43"><name pos:start="33:34" pos:end="33:37">maze</name><index pos:start="33:38" pos:end="33:40">[<expr pos:start="33:39" pos:end="33:39"><name pos:start="33:39" pos:end="33:39">i</name></expr>]</index><index pos:start="33:41" pos:end="33:43">[<expr pos:start="33:42" pos:end="33:42"><name pos:start="33:42" pos:end="33:42">j</name></expr>]</index></name><operator pos:start="33:44" pos:end="33:45">==</operator><literal type="char" pos:start="33:46" pos:end="33:48">'#'</literal></expr>)</condition><block pos:start="33:50" pos:end="36:13">{<block_content pos:start="34:17" pos:end="35:25">
                <expr_stmt pos:start="34:17" pos:end="34:22"><expr pos:start="34:17" pos:end="34:21"><name pos:start="34:17" pos:end="34:19">ans</name><operator pos:start="34:20" pos:end="34:21">++</operator></expr>;</expr_stmt>
                <expr_stmt pos:start="35:17" pos:end="35:25"><expr pos:start="35:17" pos:end="35:24"><call pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:19">dfs</name><argument_list pos:start="35:20" pos:end="35:24">(<argument pos:start="35:21" pos:end="35:21"><expr pos:start="35:21" pos:end="35:21"><name pos:start="35:21" pos:end="35:21">i</name></expr></argument>,<argument pos:start="35:23" pos:end="35:23"><expr pos:start="35:23" pos:end="35:23"><name pos:start="35:23" pos:end="35:23">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="39:5" pos:end="39:14"><expr pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:8">cout</name><operator pos:start="39:9" pos:end="39:10">&lt;&lt;</operator><name pos:start="39:11" pos:end="39:13">ans</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
