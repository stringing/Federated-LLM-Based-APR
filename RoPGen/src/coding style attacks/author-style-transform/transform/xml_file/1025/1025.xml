<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1025/1025.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:17">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:17">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:14">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:14">&lt;set&gt;</cpp:file></cpp:include>
<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<decl_stmt pos:start="6:1" pos:end="6:20"><decl pos:start="6:1" pos:end="6:19"><type pos:start="6:1" pos:end="6:11"><name pos:start="6:1" pos:end="6:11"><name pos:start="6:1" pos:end="6:6">vector</name><argument_list type="generic" pos:start="6:7" pos:end="6:11">&lt;<argument pos:start="6:8" pos:end="6:10"><expr pos:start="6:8" pos:end="6:10"><name pos:start="6:8" pos:end="6:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:13" pos:end="6:19"><name pos:start="6:13" pos:end="6:13">g</name><index pos:start="6:14" pos:end="6:19">[<expr pos:start="6:15" pos:end="6:18"><literal type="number" pos:start="6:15" pos:end="6:18">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:13"><decl pos:start="7:1" pos:end="7:12"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:6">fa</name><index pos:start="7:7" pos:end="7:12">[<expr pos:start="7:8" pos:end="7:11"><literal type="number" pos:start="7:8" pos:end="7:11">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="8:1" pos:end="45:1"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:8">main</name> <parameter_list pos:start="8:10" pos:end="8:11">()</parameter_list> <block pos:start="8:13" pos:end="45:1">{<block_content pos:start="9:5" pos:end="44:13">
    <expr_stmt pos:start="9:5" pos:end="9:32"><expr pos:start="9:5" pos:end="9:31"><call pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:11">freopen</name><argument_list pos:start="9:12" pos:end="9:31">(<argument pos:start="9:13" pos:end="9:18"><expr pos:start="9:13" pos:end="9:18"><literal type="string" pos:start="9:13" pos:end="9:18">"p.in"</literal></expr></argument>, <argument pos:start="9:21" pos:end="9:23"><expr pos:start="9:21" pos:end="9:23"><literal type="string" pos:start="9:21" pos:end="9:23">"r"</literal></expr></argument>, <argument pos:start="9:26" pos:end="9:30"><expr pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:34"><expr pos:start="10:5" pos:end="10:33"><call pos:start="10:5" pos:end="10:33"><name pos:start="10:5" pos:end="10:11">freopen</name><argument_list pos:start="10:12" pos:end="10:33">(<argument pos:start="10:13" pos:end="10:19"><expr pos:start="10:13" pos:end="10:19"><literal type="string" pos:start="10:13" pos:end="10:19">"p.out"</literal></expr></argument>, <argument pos:start="10:22" pos:end="10:24"><expr pos:start="10:22" pos:end="10:24"><literal type="string" pos:start="10:22" pos:end="10:24">"w"</literal></expr></argument>, <argument pos:start="10:27" pos:end="10:32"><expr pos:start="10:27" pos:end="10:32"><name pos:start="10:27" pos:end="10:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:13"><expr pos:start="12:5" pos:end="12:12"><name pos:start="12:5" pos:end="12:7">cin</name> <operator pos:start="12:9" pos:end="12:10">&gt;&gt;</operator> <name pos:start="12:12" pos:end="12:12">t</name></expr>;</expr_stmt>
    <while pos:start="13:5" pos:end="43:5">while<condition pos:start="13:10" pos:end="13:14">(<expr pos:start="13:11" pos:end="13:13"><name pos:start="13:11" pos:end="13:11">t</name><operator pos:start="13:12" pos:end="13:13">--</operator></expr>)</condition>
    <block pos:start="14:5" pos:end="43:5">{<block_content pos:start="15:9" pos:end="42:34">
        <decl_stmt pos:start="15:9" pos:end="15:14"><decl pos:start="15:9" pos:end="15:13"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">n</name></decl>;</decl_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:17"><expr pos:start="16:9" pos:end="16:16"><name pos:start="16:9" pos:end="16:11">cin</name> <operator pos:start="16:13" pos:end="16:14">&gt;&gt;</operator> <name pos:start="16:16" pos:end="16:16">n</name></expr>;</expr_stmt>
        <for pos:start="17:9" pos:end="23:9">for<control pos:start="17:12" pos:end="17:38">(<init pos:start="17:13" pos:end="17:22"><decl pos:start="17:13" pos:end="17:21"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:17">i</name> <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr></init></decl>;</init> <condition pos:start="17:24" pos:end="17:33"><expr pos:start="17:24" pos:end="17:32"><name pos:start="17:24" pos:end="17:24">i</name> <operator pos:start="17:26" pos:end="17:26">&lt;</operator> <name pos:start="17:28" pos:end="17:28">n</name> <operator pos:start="17:30" pos:end="17:30">-</operator> <literal type="number" pos:start="17:32" pos:end="17:32">1</literal></expr>;</condition> <incr pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:35">i</name><operator pos:start="17:36" pos:end="17:37">++</operator></expr></incr>)</control>
        <block pos:start="18:9" pos:end="23:9">{<block_content pos:start="19:13" pos:end="22:22">
            <decl_stmt pos:start="19:13" pos:end="19:21"><decl pos:start="19:13" pos:end="19:17"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:17">u</name></decl>, <decl pos:start="19:20" pos:end="19:20"><type ref="prev" pos:start="19:13" pos:end="19:15"/><name pos:start="19:20" pos:end="19:20">v</name></decl>;</decl_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:26"><expr pos:start="20:13" pos:end="20:25"><name pos:start="20:13" pos:end="20:15">cin</name> <operator pos:start="20:17" pos:end="20:18">&gt;&gt;</operator> <name pos:start="20:20" pos:end="20:20">u</name> <operator pos:start="20:22" pos:end="20:23">&gt;&gt;</operator> <name pos:start="20:25" pos:end="20:25">v</name></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:30"><expr pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:16"><name pos:start="21:13" pos:end="21:13">g</name><index pos:start="21:14" pos:end="21:16">[<expr pos:start="21:15" pos:end="21:15"><name pos:start="21:15" pos:end="21:15">u</name></expr>]</index></name><operator pos:start="21:17" pos:end="21:17">.</operator><call pos:start="21:18" pos:end="21:29"><name pos:start="21:18" pos:end="21:26">push_back</name><argument_list pos:start="21:27" pos:end="21:29">(<argument pos:start="21:28" pos:end="21:28"><expr pos:start="21:28" pos:end="21:28"><name pos:start="21:28" pos:end="21:28">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:22"><expr pos:start="22:13" pos:end="22:21"><name pos:start="22:13" pos:end="22:17"><name pos:start="22:13" pos:end="22:14">fa</name><index pos:start="22:15" pos:end="22:17">[<expr pos:start="22:16" pos:end="22:16"><name pos:start="22:16" pos:end="22:16">v</name></expr>]</index></name> <operator pos:start="22:19" pos:end="22:19">=</operator> <name pos:start="22:21" pos:end="22:21">u</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="24:9" pos:end="24:20"><decl pos:start="24:9" pos:end="24:19"><type pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:11">int</name></type> <name pos:start="24:13" pos:end="24:15">ans</name> <init pos:start="24:17" pos:end="24:19">= <expr pos:start="24:19" pos:end="24:19"><literal type="number" pos:start="24:19" pos:end="24:19">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="25:9" pos:end="38:9">for <control pos:start="25:13" pos:end="25:36">(<init pos:start="25:14" pos:end="25:23"><decl pos:start="25:14" pos:end="25:22"><type pos:start="25:14" pos:end="25:16"><name pos:start="25:14" pos:end="25:16">int</name></type> <name pos:start="25:18" pos:end="25:18">i</name> <init pos:start="25:20" pos:end="25:22">= <expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr></init></decl>;</init> <condition pos:start="25:25" pos:end="25:31"><expr pos:start="25:25" pos:end="25:30"><name pos:start="25:25" pos:end="25:25">i</name> <operator pos:start="25:27" pos:end="25:28">&lt;=</operator> <name pos:start="25:30" pos:end="25:30">n</name></expr>;</condition> <incr pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><name pos:start="25:33" pos:end="25:33">i</name><operator pos:start="25:34" pos:end="25:35">++</operator></expr></incr>)</control>
        <block pos:start="26:9" pos:end="38:9">{<block_content pos:start="27:13" pos:end="37:22">
            <decl_stmt pos:start="27:13" pos:end="27:26"><decl pos:start="27:13" pos:end="27:25"><type pos:start="27:13" pos:end="27:16"><name pos:start="27:13" pos:end="27:16">bool</name></type> <name pos:start="27:18" pos:end="27:18">f</name> <init pos:start="27:20" pos:end="27:25">= <expr pos:start="27:22" pos:end="27:25"><literal type="boolean" pos:start="27:22" pos:end="27:25">true</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="28:13" pos:end="35:13">for <control pos:start="28:17" pos:end="28:49">(<init pos:start="28:18" pos:end="28:27"><decl pos:start="28:18" pos:end="28:26"><type pos:start="28:18" pos:end="28:20"><name pos:start="28:18" pos:end="28:20">int</name></type> <name pos:start="28:22" pos:end="28:22">j</name> <init pos:start="28:24" pos:end="28:26">= <expr pos:start="28:26" pos:end="28:26"><literal type="number" pos:start="28:26" pos:end="28:26">0</literal></expr></init></decl>;</init> <condition pos:start="28:29" pos:end="28:44"><expr pos:start="28:29" pos:end="28:43"><name pos:start="28:29" pos:end="28:29">j</name> <operator pos:start="28:31" pos:end="28:31">&lt;</operator> <name pos:start="28:33" pos:end="28:36"><name pos:start="28:33" pos:end="28:33">g</name><index pos:start="28:34" pos:end="28:36">[<expr pos:start="28:35" pos:end="28:35"><name pos:start="28:35" pos:end="28:35">i</name></expr>]</index></name><operator pos:start="28:37" pos:end="28:37">.</operator><call pos:start="28:38" pos:end="28:43"><name pos:start="28:38" pos:end="28:41">size</name><argument_list pos:start="28:42" pos:end="28:43">()</argument_list></call></expr>;</condition> <incr pos:start="28:46" pos:end="28:48"><expr pos:start="28:46" pos:end="28:48"><name pos:start="28:46" pos:end="28:46">j</name><operator pos:start="28:47" pos:end="28:48">++</operator></expr></incr>)</control>
            <block pos:start="29:13" pos:end="35:13">{<block_content pos:start="30:17" pos:end="34:17">
                <if_stmt pos:start="30:17" pos:end="34:17"><if pos:start="30:17" pos:end="34:17">if <condition pos:start="30:20" pos:end="30:52">(<expr pos:start="30:21" pos:end="30:51"><name pos:start="30:21" pos:end="30:24"><name pos:start="30:21" pos:end="30:21">g</name><index pos:start="30:22" pos:end="30:24">[<expr pos:start="30:23" pos:end="30:23"><name pos:start="30:23" pos:end="30:23">i</name></expr>]</index></name><operator pos:start="30:25" pos:end="30:25">.</operator><call pos:start="30:26" pos:end="30:31"><name pos:start="30:26" pos:end="30:29">size</name><argument_list pos:start="30:30" pos:end="30:31">()</argument_list></call> <operator pos:start="30:33" pos:end="30:33">&lt;</operator> <name pos:start="30:35" pos:end="30:44"><name pos:start="30:35" pos:end="30:35">g</name><index pos:start="30:36" pos:end="30:44">[<expr pos:start="30:37" pos:end="30:43"><name pos:start="30:37" pos:end="30:43"><name pos:start="30:37" pos:end="30:37">g</name><index pos:start="30:38" pos:end="30:40">[<expr pos:start="30:39" pos:end="30:39"><name pos:start="30:39" pos:end="30:39">i</name></expr>]</index><index pos:start="30:41" pos:end="30:43">[<expr pos:start="30:42" pos:end="30:42"><name pos:start="30:42" pos:end="30:42">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="30:45" pos:end="30:45">.</operator><call pos:start="30:46" pos:end="30:51"><name pos:start="30:46" pos:end="30:49">size</name><argument_list pos:start="30:50" pos:end="30:51">()</argument_list></call></expr>)</condition>
                <block pos:start="31:17" pos:end="34:17">{<block_content pos:start="32:21" pos:end="33:26">
                    <expr_stmt pos:start="32:21" pos:end="32:30"><expr pos:start="32:21" pos:end="32:29"><name pos:start="32:21" pos:end="32:21">f</name> <operator pos:start="32:23" pos:end="32:23">=</operator> <literal type="boolean" pos:start="32:25" pos:end="32:29">false</literal></expr>;</expr_stmt>
                    <break pos:start="33:21" pos:end="33:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="36:13" pos:end="37:22"><if pos:start="36:13" pos:end="37:22">if <condition pos:start="36:16" pos:end="36:52">(<expr pos:start="36:17" pos:end="36:51"><name pos:start="36:17" pos:end="36:17">f</name> <operator pos:start="36:19" pos:end="36:20">&amp;&amp;</operator> <name pos:start="36:22" pos:end="36:25"><name pos:start="36:22" pos:end="36:22">g</name><index pos:start="36:23" pos:end="36:25">[<expr pos:start="36:24" pos:end="36:24"><name pos:start="36:24" pos:end="36:24">i</name></expr>]</index></name><operator pos:start="36:26" pos:end="36:26">.</operator><call pos:start="36:27" pos:end="36:32"><name pos:start="36:27" pos:end="36:30">size</name><argument_list pos:start="36:31" pos:end="36:32">()</argument_list></call> <operator pos:start="36:34" pos:end="36:35">&gt;=</operator> <name pos:start="36:37" pos:end="36:44"><name pos:start="36:37" pos:end="36:37">g</name><index pos:start="36:38" pos:end="36:44">[<expr pos:start="36:39" pos:end="36:43"><name pos:start="36:39" pos:end="36:43"><name pos:start="36:39" pos:end="36:40">fa</name><index pos:start="36:41" pos:end="36:43">[<expr pos:start="36:42" pos:end="36:42"><name pos:start="36:42" pos:end="36:42">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="36:45" pos:end="36:45">.</operator><call pos:start="36:46" pos:end="36:51"><name pos:start="36:46" pos:end="36:49">size</name><argument_list pos:start="36:50" pos:end="36:51">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:22"><block_content pos:start="37:17" pos:end="37:22">
                <expr_stmt pos:start="37:17" pos:end="37:22"><expr pos:start="37:17" pos:end="37:21"><name pos:start="37:17" pos:end="37:19">ans</name><operator pos:start="37:20" pos:end="37:21">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:12">cout</name> <operator pos:start="39:14" pos:end="39:15">&lt;&lt;</operator> <name pos:start="39:17" pos:end="39:19">ans</name> <operator pos:start="39:21" pos:end="39:22">&lt;&lt;</operator> <name pos:start="39:24" pos:end="39:27">endl</name></expr>;</expr_stmt>
        <for pos:start="40:9" pos:end="41:37">for <control pos:start="40:13" pos:end="40:36">(<init pos:start="40:14" pos:end="40:23"><decl pos:start="40:14" pos:end="40:22"><type pos:start="40:14" pos:end="40:16"><name pos:start="40:14" pos:end="40:16">int</name></type> <name pos:start="40:18" pos:end="40:18">i</name> <init pos:start="40:20" pos:end="40:22">= <expr pos:start="40:22" pos:end="40:22"><literal type="number" pos:start="40:22" pos:end="40:22">1</literal></expr></init></decl>;</init> <condition pos:start="40:25" pos:end="40:31"><expr pos:start="40:25" pos:end="40:30"><name pos:start="40:25" pos:end="40:25">i</name> <operator pos:start="40:27" pos:end="40:28">&lt;=</operator> <name pos:start="40:30" pos:end="40:30">n</name></expr>;</condition> <incr pos:start="40:33" pos:end="40:35"><expr pos:start="40:33" pos:end="40:35"><name pos:start="40:33" pos:end="40:33">i</name><operator pos:start="40:34" pos:end="40:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="41:13" pos:end="41:37"><block_content pos:start="41:13" pos:end="41:37">
            <expr_stmt pos:start="41:13" pos:end="41:37"><expr pos:start="41:13" pos:end="41:36"><call pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:18">vector</name><argument_list type="generic" pos:start="41:19" pos:end="41:23">&lt;<argument pos:start="41:20" pos:end="41:22"><expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:start="41:24" pos:end="41:25">()</argument_list></call><operator pos:start="41:26" pos:end="41:26">.</operator><call pos:start="41:27" pos:end="41:36"><name pos:start="41:27" pos:end="41:30">swap</name><argument_list pos:start="41:31" pos:end="41:36">(<argument pos:start="41:32" pos:end="41:35"><expr pos:start="41:32" pos:end="41:35"><name pos:start="41:32" pos:end="41:35"><name pos:start="41:32" pos:end="41:32">g</name><index pos:start="41:33" pos:end="41:35">[<expr pos:start="41:34" pos:end="41:34"><name pos:start="41:34" pos:end="41:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
        <expr_stmt pos:start="42:9" pos:end="42:34"><expr pos:start="42:9" pos:end="42:33"><call pos:start="42:9" pos:end="42:33"><name pos:start="42:9" pos:end="42:14">memset</name><argument_list pos:start="42:15" pos:end="42:33">(<argument pos:start="42:16" pos:end="42:17"><expr pos:start="42:16" pos:end="42:17"><name pos:start="42:16" pos:end="42:17">fa</name></expr></argument>, <argument pos:start="42:20" pos:end="42:20"><expr pos:start="42:20" pos:end="42:20"><literal type="number" pos:start="42:20" pos:end="42:20">0</literal></expr></argument>, <argument pos:start="42:23" pos:end="42:32"><expr pos:start="42:23" pos:end="42:32"><sizeof pos:start="42:23" pos:end="42:32">sizeof<argument_list pos:start="42:29" pos:end="42:32">(<argument pos:start="42:30" pos:end="42:31"><expr pos:start="42:30" pos:end="42:31"><name pos:start="42:30" pos:end="42:31">fa</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="44:5" pos:end="44:13">return <expr pos:start="44:12" pos:end="44:12"><literal type="number" pos:start="44:12" pos:end="44:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
