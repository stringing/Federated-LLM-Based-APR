<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1128/1128.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="17:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="17:1">{<block_content pos:start="5:5" pos:end="16:13">
    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">num</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:16"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:12">s</name></decl>, <decl pos:start="6:15" pos:end="6:15"><type ref="prev" pos:start="6:5" pos:end="6:10"/><name pos:start="6:15" pos:end="6:15">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:20"><expr pos:start="7:5" pos:end="7:19"><call pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:11">getline</name><argument_list pos:start="7:12" pos:end="7:19">(<argument pos:start="7:13" pos:end="7:15"><expr pos:start="7:13" pos:end="7:15"><name pos:start="7:13" pos:end="7:15">cin</name></expr></argument>, <argument pos:start="7:18" pos:end="7:18"><expr pos:start="7:18" pos:end="7:18"><name pos:start="7:18" pos:end="7:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="8:9" pos:end="14:9">for <control pos:start="8:13" pos:end="8:42">(<init pos:start="8:14" pos:end="8:23"><decl pos:start="8:14" pos:end="8:22"><type pos:start="8:14" pos:end="8:16"><name pos:start="8:14" pos:end="8:16">int</name></type> <name pos:start="8:18" pos:end="8:18">i</name> <init pos:start="8:20" pos:end="8:22">= <expr pos:start="8:22" pos:end="8:22"><literal type="number" pos:start="8:22" pos:end="8:22">0</literal></expr></init></decl>;</init> <condition pos:start="8:25" pos:end="8:37"><expr pos:start="8:25" pos:end="8:36"><name pos:start="8:25" pos:end="8:25">i</name> <operator pos:start="8:27" pos:end="8:27">&lt;</operator> <call pos:start="8:29" pos:end="8:36"><name pos:start="8:29" pos:end="8:34"><name pos:start="8:29" pos:end="8:29">s</name><operator pos:start="8:30" pos:end="8:30">.</operator><name pos:start="8:31" pos:end="8:34">size</name></name><argument_list pos:start="8:35" pos:end="8:36">()</argument_list></call></expr>;</condition> <incr pos:start="8:39" pos:end="8:41"><expr pos:start="8:39" pos:end="8:41"><name pos:start="8:39" pos:end="8:39">i</name><operator pos:start="8:40" pos:end="8:41">++</operator></expr></incr>)</control> <block pos:start="8:44" pos:end="14:9">{<block_content pos:start="9:13" pos:end="13:13">
            <if_stmt pos:start="9:13" pos:end="13:13"><if pos:start="9:13" pos:end="11:13">if <condition pos:start="9:16" pos:end="9:28">(<expr pos:start="9:17" pos:end="9:27"><name pos:start="9:17" pos:end="9:20"><name pos:start="9:17" pos:end="9:17">s</name><index pos:start="9:18" pos:end="9:20">[<expr pos:start="9:19" pos:end="9:19"><name pos:start="9:19" pos:end="9:19">i</name></expr>]</index></name> <operator pos:start="9:22" pos:end="9:23">==</operator> <literal type="char" pos:start="9:25" pos:end="9:27">' '</literal></expr>)</condition> <block pos:start="9:30" pos:end="11:13">{<block_content pos:start="10:17" pos:end="10:24">
                <expr_stmt pos:start="10:17" pos:end="10:24"><expr pos:start="10:17" pos:end="10:23"><name pos:start="10:17" pos:end="10:19">num</name> <operator pos:start="10:21" pos:end="10:21">=</operator> <literal type="number" pos:start="10:23" pos:end="10:23">0</literal></expr>;</expr_stmt>
            </block_content>}</block></if><else pos:start="11:14" pos:end="13:13">else <block pos:start="11:19" pos:end="13:13">{<block_content pos:start="12:17" pos:end="12:22">
                <expr_stmt pos:start="12:17" pos:end="12:22"><expr pos:start="12:17" pos:end="12:21"><name pos:start="12:17" pos:end="12:19">num</name><operator pos:start="12:20" pos:end="12:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:8">cout</name> <operator pos:start="15:10" pos:end="15:11">&lt;&lt;</operator> <name pos:start="15:13" pos:end="15:13">s</name> <operator pos:start="15:15" pos:end="15:16">&lt;&lt;</operator> <name pos:start="15:18" pos:end="15:21">endl</name></expr>;</expr_stmt>
    <return pos:start="16:5" pos:end="16:13">return <expr pos:start="16:12" pos:end="16:12"><literal type="number" pos:start="16:12" pos:end="16:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
