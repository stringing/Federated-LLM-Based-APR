<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/659/659.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:16">&lt;cmath&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<function pos:start="5:1" pos:end="7:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:7">pow</name><parameter_list pos:start="5:8" pos:end="5:14">(<parameter pos:start="5:9" pos:end="5:13"><decl pos:start="5:9" pos:end="5:13"><type pos:start="5:9" pos:end="5:11"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:13">n</name></decl></parameter>)</parameter_list><block pos:start="5:15" pos:end="7:1">{<block_content pos:start="6:5" pos:end="6:15">
    <return pos:start="6:5" pos:end="6:15">return <expr pos:start="6:12" pos:end="6:14"><name pos:start="6:12" pos:end="6:12">n</name><operator pos:start="6:13" pos:end="6:13">*</operator><name pos:start="6:14" pos:end="6:14">n</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="8:1" pos:end="25:1"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:8">main</name><parameter_list pos:start="8:9" pos:end="8:10">()</parameter_list> <block pos:start="8:12" pos:end="25:1">{<block_content pos:start="9:5" pos:end="24:13"> 
    <expr_stmt pos:start="9:5" pos:end="9:37"><expr pos:start="9:5" pos:end="9:36"><call pos:start="9:5" pos:end="9:36"><name pos:start="9:5" pos:end="9:11">freopen</name><argument_list pos:start="9:12" pos:end="9:36">(<argument pos:start="9:13" pos:end="9:23"><expr pos:start="9:13" pos:end="9:23"><literal type="string" pos:start="9:13" pos:end="9:23">"square.in"</literal></expr></argument>, <argument pos:start="9:26" pos:end="9:28"><expr pos:start="9:26" pos:end="9:28"><literal type="string" pos:start="9:26" pos:end="9:28">"r"</literal></expr></argument>, <argument pos:start="9:31" pos:end="9:35"><expr pos:start="9:31" pos:end="9:35"><name pos:start="9:31" pos:end="9:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:39"><expr pos:start="10:5" pos:end="10:38"><call pos:start="10:5" pos:end="10:38"><name pos:start="10:5" pos:end="10:11">freopen</name><argument_list pos:start="10:12" pos:end="10:38">(<argument pos:start="10:13" pos:end="10:24"><expr pos:start="10:13" pos:end="10:24"><literal type="string" pos:start="10:13" pos:end="10:24">"square.out"</literal></expr></argument>, <argument pos:start="10:27" pos:end="10:29"><expr pos:start="10:27" pos:end="10:29"><literal type="string" pos:start="10:27" pos:end="10:29">"w"</literal></expr></argument>, <argument pos:start="10:32" pos:end="10:37"><expr pos:start="10:32" pos:end="10:37"><name pos:start="10:32" pos:end="10:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:13"><expr pos:start="12:5" pos:end="12:12"><name pos:start="12:5" pos:end="12:7">cin</name> <operator pos:start="12:9" pos:end="12:10">&gt;&gt;</operator> <name pos:start="12:12" pos:end="12:12">n</name></expr>;</expr_stmt>
    <for pos:start="13:5" pos:end="23:5">for<control pos:start="13:8" pos:end="13:21">(<init pos:start="13:9" pos:end="13:16"><decl pos:start="13:9" pos:end="13:15"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name><init pos:start="13:14" pos:end="13:15">=<expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</init><condition pos:start="13:17" pos:end="13:17">;</condition><incr pos:start="13:18" pos:end="13:20"><expr pos:start="13:18" pos:end="13:20"><name pos:start="13:18" pos:end="13:18">i</name><operator pos:start="13:19" pos:end="13:20">++</operator></expr></incr>)</control><block pos:start="13:22" pos:end="23:5">{<block_content pos:start="14:9" pos:end="22:9">
        <for pos:start="14:9" pos:end="22:9">for<control pos:start="14:12" pos:end="14:25">(<init pos:start="14:13" pos:end="14:20"><decl pos:start="14:13" pos:end="14:19"><type pos:start="14:13" pos:end="14:15"><name pos:start="14:13" pos:end="14:15">int</name></type> <name pos:start="14:17" pos:end="14:17">j</name><init pos:start="14:18" pos:end="14:19">=<expr pos:start="14:19" pos:end="14:19"><literal type="number" pos:start="14:19" pos:end="14:19">0</literal></expr></init></decl>;</init><condition pos:start="14:21" pos:end="14:21">;</condition><incr pos:start="14:22" pos:end="14:24"><expr pos:start="14:22" pos:end="14:24"><name pos:start="14:22" pos:end="14:22">j</name><operator pos:start="14:23" pos:end="14:24">++</operator></expr></incr>)</control><block pos:start="14:26" pos:end="22:9">{<block_content pos:start="15:13" pos:end="21:13">
            <for pos:start="15:13" pos:end="21:13">for<control pos:start="15:16" pos:end="15:29">(<init pos:start="15:17" pos:end="15:24"><decl pos:start="15:17" pos:end="15:23"><type pos:start="15:17" pos:end="15:19"><name pos:start="15:17" pos:end="15:19">int</name></type> <name pos:start="15:21" pos:end="15:21">k</name><init pos:start="15:22" pos:end="15:23">=<expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</init><condition pos:start="15:25" pos:end="15:25">;</condition><incr pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><name pos:start="15:26" pos:end="15:26">k</name><operator pos:start="15:27" pos:end="15:28">++</operator></expr></incr>)</control><block pos:start="15:30" pos:end="21:13">{<block_content pos:start="16:17" pos:end="20:17">
                <decl_stmt pos:start="16:17" pos:end="16:54"><decl pos:start="16:17" pos:end="16:53"><type pos:start="16:17" pos:end="16:22"><name pos:start="16:17" pos:end="16:22">double</name></type> <name pos:start="16:24" pos:end="16:24">x</name><init pos:start="16:25" pos:end="16:53">=<expr pos:start="16:26" pos:end="16:53"><call pos:start="16:26" pos:end="16:53"><name pos:start="16:26" pos:end="16:29">sqrt</name><argument_list pos:start="16:30" pos:end="16:53">(<argument pos:start="16:31" pos:end="16:52"><expr pos:start="16:31" pos:end="16:52"><name pos:start="16:31" pos:end="16:31">n</name><operator pos:start="16:32" pos:end="16:32">-</operator><call pos:start="16:33" pos:end="16:38"><name pos:start="16:33" pos:end="16:35">pow</name><argument_list pos:start="16:36" pos:end="16:38">(<argument pos:start="16:37" pos:end="16:37"><expr pos:start="16:37" pos:end="16:37"><name pos:start="16:37" pos:end="16:37">i</name></expr></argument>)</argument_list></call><operator pos:start="16:39" pos:end="16:39">-</operator><call pos:start="16:40" pos:end="16:45"><name pos:start="16:40" pos:end="16:42">pow</name><argument_list pos:start="16:43" pos:end="16:45">(<argument pos:start="16:44" pos:end="16:44"><expr pos:start="16:44" pos:end="16:44"><name pos:start="16:44" pos:end="16:44">j</name></expr></argument>)</argument_list></call><operator pos:start="16:46" pos:end="16:46">-</operator><call pos:start="16:47" pos:end="16:52"><name pos:start="16:47" pos:end="16:49">pow</name><argument_list pos:start="16:50" pos:end="16:52">(<argument pos:start="16:51" pos:end="16:51"><expr pos:start="16:51" pos:end="16:51"><name pos:start="16:51" pos:end="16:51">k</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="17:17" pos:end="20:17"><if pos:start="17:17" pos:end="20:17">if<condition pos:start="17:19" pos:end="17:31">(<expr pos:start="17:20" pos:end="17:30"><name pos:start="17:20" pos:end="17:20">x</name><operator pos:start="17:21" pos:end="17:21">-</operator><call pos:start="17:22" pos:end="17:27"><name pos:start="17:22" pos:end="17:24">int</name><argument_list pos:start="17:25" pos:end="17:27">(<argument pos:start="17:26" pos:end="17:26"><expr pos:start="17:26" pos:end="17:26"><name pos:start="17:26" pos:end="17:26">x</name></expr></argument>)</argument_list></call><operator pos:start="17:28" pos:end="17:29">==</operator><literal type="number" pos:start="17:30" pos:end="17:30">0</literal></expr>)</condition><block pos:start="17:32" pos:end="20:17">{<block_content pos:start="18:21" pos:end="19:26">
                    <expr_stmt pos:start="18:21" pos:end="18:58"><expr pos:start="18:21" pos:end="18:57"><name pos:start="18:21" pos:end="18:24">cout</name><operator pos:start="18:25" pos:end="18:26">&lt;&lt;</operator><name pos:start="18:27" pos:end="18:27">i</name><operator pos:start="18:28" pos:end="18:29">&lt;&lt;</operator><literal type="string" pos:start="18:30" pos:end="18:32">" "</literal><operator pos:start="18:33" pos:end="18:34">&lt;&lt;</operator><name pos:start="18:35" pos:end="18:35">j</name><operator pos:start="18:36" pos:end="18:37">&lt;&lt;</operator><literal type="string" pos:start="18:38" pos:end="18:40">" "</literal><operator pos:start="18:41" pos:end="18:42">&lt;&lt;</operator><name pos:start="18:43" pos:end="18:43">k</name><operator pos:start="18:44" pos:end="18:45">&lt;&lt;</operator><literal type="string" pos:start="18:46" pos:end="18:48">" "</literal><operator pos:start="18:49" pos:end="18:50">&lt;&lt;</operator><name pos:start="18:51" pos:end="18:51">x</name><operator pos:start="18:52" pos:end="18:53">&lt;&lt;</operator><name pos:start="18:54" pos:end="18:57">endl</name></expr>;</expr_stmt>
                    <break pos:start="19:21" pos:end="19:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>    
    </block_content>}</block></for>
    <return pos:start="24:5" pos:end="24:13">return <expr pos:start="24:12" pos:end="24:12"><literal type="number" pos:start="24:12" pos:end="24:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
