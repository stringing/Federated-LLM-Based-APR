<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/901/901.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:20">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:81"><decl pos:start="5:1" pos:end="5:18"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:10">Middle</name><index pos:start="5:11" pos:end="5:14">[<expr pos:start="5:12" pos:end="5:13"><literal type="number" pos:start="5:12" pos:end="5:13">35</literal></expr>]</index></name><init pos:start="5:15" pos:end="5:18">=<expr pos:start="5:16" pos:end="5:18"><block pos:start="5:16" pos:end="5:18">{<expr pos:start="5:17" pos:end="5:17"><literal type="number" pos:start="5:17" pos:end="5:17">0</literal></expr>}</block></expr></init></decl>,<decl pos:start="5:20" pos:end="5:30"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:20" pos:end="5:26"><name pos:start="5:20" pos:end="5:22">End</name><index pos:start="5:23" pos:end="5:26">[<expr pos:start="5:24" pos:end="5:25"><literal type="number" pos:start="5:24" pos:end="5:25">35</literal></expr>]</index></name><init pos:start="5:27" pos:end="5:30">=<expr pos:start="5:28" pos:end="5:30"><block pos:start="5:28" pos:end="5:30">{<expr pos:start="5:29" pos:end="5:29"><literal type="number" pos:start="5:29" pos:end="5:29">0</literal></expr>}</block></expr></init></decl>,<decl pos:start="5:32" pos:end="5:34"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:32" pos:end="5:32">n</name><init pos:start="5:33" pos:end="5:34">=<expr pos:start="5:34" pos:end="5:34"><literal type="number" pos:start="5:34" pos:end="5:34">0</literal></expr></init></decl>,<decl pos:start="5:36" pos:end="5:47"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:36" pos:end="5:43"><name pos:start="5:36" pos:end="5:39">Left</name><index pos:start="5:40" pos:end="5:43">[<expr pos:start="5:41" pos:end="5:42"><literal type="number" pos:start="5:41" pos:end="5:42">35</literal></expr>]</index></name><init pos:start="5:44" pos:end="5:47">=<expr pos:start="5:45" pos:end="5:47"><block pos:start="5:45" pos:end="5:47">{<expr pos:start="5:46" pos:end="5:46"><literal type="number" pos:start="5:46" pos:end="5:46">0</literal></expr>}</block></expr></init></decl>,<decl pos:start="5:49" pos:end="5:61"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:49" pos:end="5:57"><name pos:start="5:49" pos:end="5:53">Right</name><index pos:start="5:54" pos:end="5:57">[<expr pos:start="5:55" pos:end="5:56"><literal type="number" pos:start="5:55" pos:end="5:56">35</literal></expr>]</index></name><init pos:start="5:58" pos:end="5:61">=<expr pos:start="5:59" pos:end="5:61"><block pos:start="5:59" pos:end="5:61">{<expr pos:start="5:60" pos:end="5:60"><literal type="number" pos:start="5:60" pos:end="5:60">0</literal></expr>}</block></expr></init></decl>,<decl pos:start="5:63" pos:end="5:68"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:63" pos:end="5:66">root</name><init pos:start="5:67" pos:end="5:68">=<expr pos:start="5:68" pos:end="5:68"><literal type="number" pos:start="5:68" pos:end="5:68">0</literal></expr></init></decl>,<decl pos:start="5:70" pos:end="5:80"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:70" pos:end="5:76"><name pos:start="5:70" pos:end="5:72">num</name><index pos:start="5:73" pos:end="5:76">[<expr pos:start="5:74" pos:end="5:75"><literal type="number" pos:start="5:74" pos:end="5:75">35</literal></expr>]</index></name><init pos:start="5:77" pos:end="5:80">=<expr pos:start="5:78" pos:end="5:80"><block pos:start="5:78" pos:end="5:80">{<expr pos:start="5:79" pos:end="5:79"><literal type="number" pos:start="5:79" pos:end="5:79">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="34:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">void</name></type> <name pos:start="6:6" pos:end="6:8">dfs</name><parameter_list pos:start="6:9" pos:end="6:37">(<parameter pos:start="6:10" pos:end="6:15"><decl pos:start="6:10" pos:end="6:15"><type pos:start="6:10" pos:end="6:15"><name pos:start="6:10" pos:end="6:12">int</name></type> <name pos:start="6:14" pos:end="6:15">l1</name></decl></parameter>,<parameter pos:start="6:17" pos:end="6:22"><decl pos:start="6:17" pos:end="6:22"><type pos:start="6:17" pos:end="6:22"><name pos:start="6:17" pos:end="6:19">int</name></type> <name pos:start="6:21" pos:end="6:22">r1</name></decl></parameter>,<parameter pos:start="6:24" pos:end="6:29"><decl pos:start="6:24" pos:end="6:29"><type pos:start="6:24" pos:end="6:29"><name pos:start="6:24" pos:end="6:26">int</name></type> <name pos:start="6:28" pos:end="6:29">l2</name></decl></parameter>,<parameter pos:start="6:31" pos:end="6:36"><decl pos:start="6:31" pos:end="6:36"><type pos:start="6:31" pos:end="6:36"><name pos:start="6:31" pos:end="6:33">int</name></type> <name pos:start="6:35" pos:end="6:36">r2</name></decl></parameter>)</parameter_list>
<block pos:start="7:1" pos:end="34:1">{<block_content pos:start="8:5" pos:end="33:11">
    <if_stmt pos:start="8:5" pos:end="11:5"><if pos:start="8:5" pos:end="11:5">if<condition pos:start="8:7" pos:end="8:14">(<expr pos:start="8:8" pos:end="8:13"><name pos:start="8:8" pos:end="8:9">l1</name><operator pos:start="8:10" pos:end="8:11">==</operator><name pos:start="8:12" pos:end="8:13">r1</name></expr>)</condition>
    <block pos:start="9:5" pos:end="11:5">{<block_content pos:start="10:9" pos:end="10:15">
        <return pos:start="10:9" pos:end="10:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:10"><decl pos:start="12:5" pos:end="12:9"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:9">g</name></decl>;</decl_stmt>
    <for pos:start="13:5" pos:end="20:5">for<control pos:start="13:8" pos:end="13:27">(<init pos:start="13:9" pos:end="13:17"><decl pos:start="13:9" pos:end="13:16"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name><init pos:start="13:14" pos:end="13:16">=<expr pos:start="13:15" pos:end="13:16"><name pos:start="13:15" pos:end="13:16">l2</name></expr></init></decl>;</init><condition pos:start="13:18" pos:end="13:23"><expr pos:start="13:18" pos:end="13:22"><name pos:start="13:18" pos:end="13:18">i</name><operator pos:start="13:19" pos:end="13:20">&lt;=</operator><name pos:start="13:21" pos:end="13:22">r2</name></expr>;</condition><incr pos:start="13:24" pos:end="13:26"><expr pos:start="13:24" pos:end="13:26"><name pos:start="13:24" pos:end="13:24">i</name><operator pos:start="13:25" pos:end="13:26">++</operator></expr></incr>)</control>
    <block pos:start="14:5" pos:end="20:5">{<block_content pos:start="15:9" pos:end="19:9">
        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if<condition pos:start="15:11" pos:end="15:30">(<expr pos:start="15:12" pos:end="15:29"><name pos:start="15:12" pos:end="15:17"><name pos:start="15:12" pos:end="15:14">End</name><index pos:start="15:15" pos:end="15:17">[<expr pos:start="15:16" pos:end="15:16"><name pos:start="15:16" pos:end="15:16">i</name></expr>]</index></name><operator pos:start="15:18" pos:end="15:19">==</operator><name pos:start="15:20" pos:end="15:29"><name pos:start="15:20" pos:end="15:25">Middle</name><index pos:start="15:26" pos:end="15:29">[<expr pos:start="15:27" pos:end="15:28"><name pos:start="15:27" pos:end="15:28">r1</name></expr>]</index></name></expr>)</condition>
        <block pos:start="16:9" pos:end="19:9">{<block_content pos:start="17:13" pos:end="18:18">
            <expr_stmt pos:start="17:13" pos:end="17:16"><expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:13">g</name><operator pos:start="17:14" pos:end="17:14">=</operator><name pos:start="17:15" pos:end="17:15">i</name></expr>;</expr_stmt>
            <break pos:start="18:13" pos:end="18:18">break;</break>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="21:5" pos:end="32:5"><if pos:start="21:5" pos:end="24:5">if<condition pos:start="21:7" pos:end="21:13">(<expr pos:start="21:8" pos:end="21:12"><name pos:start="21:8" pos:end="21:8">g</name><operator pos:start="21:9" pos:end="21:10">==</operator><name pos:start="21:11" pos:end="21:12">l2</name></expr>)</condition><block pos:start="21:14" pos:end="24:5">{<block_content pos:start="22:9" pos:end="23:31">
        <expr_stmt pos:start="22:9" pos:end="22:39"><expr pos:start="22:9" pos:end="22:38"><name pos:start="22:9" pos:end="22:25"><name pos:start="22:9" pos:end="22:13">Right</name><index pos:start="22:14" pos:end="22:25">[<expr pos:start="22:15" pos:end="22:24"><name pos:start="22:15" pos:end="22:24"><name pos:start="22:15" pos:end="22:20">Middle</name><index pos:start="22:21" pos:end="22:24">[<expr pos:start="22:22" pos:end="22:23"><name pos:start="22:22" pos:end="22:23">r1</name></expr>]</index></name></expr>]</index></name><operator pos:start="22:26" pos:end="22:26">=</operator><name pos:start="22:27" pos:end="22:38"><name pos:start="22:27" pos:end="22:32">Middle</name><index pos:start="22:33" pos:end="22:38">[<expr pos:start="22:34" pos:end="22:37"><name pos:start="22:34" pos:end="22:35">r1</name><operator pos:start="22:36" pos:end="22:36">-</operator><literal type="number" pos:start="22:37" pos:end="22:37">1</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><call pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:11">dfs</name><argument_list pos:start="23:12" pos:end="23:30">(<argument pos:start="23:13" pos:end="23:14"><expr pos:start="23:13" pos:end="23:14"><name pos:start="23:13" pos:end="23:14">l1</name></expr></argument>,<argument pos:start="23:16" pos:end="23:21"><expr pos:start="23:16" pos:end="23:21"><name pos:start="23:16" pos:end="23:17">r1</name> <operator pos:start="23:19" pos:end="23:19">-</operator> <literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr></argument>,<argument pos:start="23:23" pos:end="23:26"><expr pos:start="23:23" pos:end="23:26"><name pos:start="23:23" pos:end="23:24">l2</name><operator pos:start="23:25" pos:end="23:25">+</operator><literal type="number" pos:start="23:26" pos:end="23:26">1</literal></expr></argument>,<argument pos:start="23:28" pos:end="23:29"><expr pos:start="23:28" pos:end="23:29"><name pos:start="23:28" pos:end="23:29">r2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="24:7" pos:end="27:5">else if<condition pos:start="24:14" pos:end="24:20">(<expr pos:start="24:15" pos:end="24:19"><name pos:start="24:15" pos:end="24:15">g</name><operator pos:start="24:16" pos:end="24:17">==</operator><name pos:start="24:18" pos:end="24:19">r2</name></expr>)</condition><block pos:start="24:21" pos:end="27:5">{<block_content pos:start="25:9" pos:end="26:29">
        <expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:12">Left</name><index pos:start="25:13" pos:end="25:24">[<expr pos:start="25:14" pos:end="25:23"><name pos:start="25:14" pos:end="25:23"><name pos:start="25:14" pos:end="25:19">Middle</name><index pos:start="25:20" pos:end="25:23">[<expr pos:start="25:21" pos:end="25:22"><name pos:start="25:21" pos:end="25:22">r1</name></expr>]</index></name></expr>]</index></name><operator pos:start="25:25" pos:end="25:25">=</operator><name pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:31">Middle</name><index pos:start="25:32" pos:end="25:37">[<expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:34">r1</name><operator pos:start="25:35" pos:end="25:35">-</operator><literal type="number" pos:start="25:36" pos:end="25:36">1</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="26:9" pos:end="26:29"><expr pos:start="26:9" pos:end="26:28"><call pos:start="26:9" pos:end="26:28"><name pos:start="26:9" pos:end="26:11">dfs</name><argument_list pos:start="26:12" pos:end="26:28">(<argument pos:start="26:13" pos:end="26:14"><expr pos:start="26:13" pos:end="26:14"><name pos:start="26:13" pos:end="26:14">l1</name></expr></argument>,<argument pos:start="26:16" pos:end="26:19"><expr pos:start="26:16" pos:end="26:19"><name pos:start="26:16" pos:end="26:17">r1</name><operator pos:start="26:18" pos:end="26:18">-</operator><literal type="number" pos:start="26:19" pos:end="26:19">1</literal></expr></argument>,<argument pos:start="26:21" pos:end="26:22"><expr pos:start="26:21" pos:end="26:22"><name pos:start="26:21" pos:end="26:22">l2</name></expr></argument>,<argument pos:start="26:24" pos:end="26:27"><expr pos:start="26:24" pos:end="26:27"><name pos:start="26:24" pos:end="26:25">r2</name><operator pos:start="26:26" pos:end="26:26">-</operator><literal type="number" pos:start="26:27" pos:end="26:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="27:7" pos:end="32:5">else <block pos:start="27:12" pos:end="32:5">{<block_content pos:start="28:9" pos:end="31:33">
        <expr_stmt pos:start="28:9" pos:end="28:43"><expr pos:start="28:9" pos:end="28:42"><name pos:start="28:9" pos:end="28:24"><name pos:start="28:9" pos:end="28:12">Left</name><index pos:start="28:13" pos:end="28:24">[<expr pos:start="28:14" pos:end="28:23"><name pos:start="28:14" pos:end="28:23"><name pos:start="28:14" pos:end="28:19">Middle</name><index pos:start="28:20" pos:end="28:23">[<expr pos:start="28:21" pos:end="28:22"><name pos:start="28:21" pos:end="28:22">r1</name></expr>]</index></name></expr>]</index></name><operator pos:start="28:25" pos:end="28:25">=</operator><name pos:start="28:26" pos:end="28:42"><name pos:start="28:26" pos:end="28:31">Middle</name><index pos:start="28:32" pos:end="28:42">[<expr pos:start="28:33" pos:end="28:41"><name pos:start="28:33" pos:end="28:33">g</name><operator pos:start="28:34" pos:end="28:34">-</operator><name pos:start="28:35" pos:end="28:36">l2</name><operator pos:start="28:37" pos:end="28:37">+</operator><name pos:start="28:38" pos:end="28:39">l1</name><operator pos:start="28:40" pos:end="28:40">-</operator><literal type="number" pos:start="28:41" pos:end="28:41">1</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:39"><expr pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:13">Right</name><index pos:start="29:14" pos:end="29:25">[<expr pos:start="29:15" pos:end="29:24"><name pos:start="29:15" pos:end="29:24"><name pos:start="29:15" pos:end="29:20">Middle</name><index pos:start="29:21" pos:end="29:24">[<expr pos:start="29:22" pos:end="29:23"><name pos:start="29:22" pos:end="29:23">r1</name></expr>]</index></name></expr>]</index></name><operator pos:start="29:26" pos:end="29:26">=</operator><name pos:start="29:27" pos:end="29:38"><name pos:start="29:27" pos:end="29:32">Middle</name><index pos:start="29:33" pos:end="29:38">[<expr pos:start="29:34" pos:end="29:37"><name pos:start="29:34" pos:end="29:35">r1</name><operator pos:start="29:36" pos:end="29:36">-</operator><literal type="number" pos:start="29:37" pos:end="29:37">1</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="30:9" pos:end="30:33"><expr pos:start="30:9" pos:end="30:32"><call pos:start="30:9" pos:end="30:32"><name pos:start="30:9" pos:end="30:11">dfs</name><argument_list pos:start="30:12" pos:end="30:32">(<argument pos:start="30:13" pos:end="30:14"><expr pos:start="30:13" pos:end="30:14"><name pos:start="30:13" pos:end="30:14">l1</name></expr></argument>,<argument pos:start="30:16" pos:end="30:24"><expr pos:start="30:16" pos:end="30:24"><name pos:start="30:16" pos:end="30:16">g</name><operator pos:start="30:17" pos:end="30:17">-</operator><name pos:start="30:18" pos:end="30:19">l2</name><operator pos:start="30:20" pos:end="30:20">+</operator><name pos:start="30:21" pos:end="30:22">l1</name><operator pos:start="30:23" pos:end="30:23">-</operator><literal type="number" pos:start="30:24" pos:end="30:24">1</literal></expr></argument>,<argument pos:start="30:26" pos:end="30:27"><expr pos:start="30:26" pos:end="30:27"><name pos:start="30:26" pos:end="30:27">l2</name></expr></argument>,<argument pos:start="30:29" pos:end="30:31"><expr pos:start="30:29" pos:end="30:31"><name pos:start="30:29" pos:end="30:29">g</name><operator pos:start="30:30" pos:end="30:30">-</operator><literal type="number" pos:start="30:31" pos:end="30:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><call pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:11">dfs</name><argument_list pos:start="31:12" pos:end="31:32">(<argument pos:start="31:13" pos:end="31:19"><expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:13">g</name><operator pos:start="31:14" pos:end="31:14">-</operator><name pos:start="31:15" pos:end="31:16">l2</name><operator pos:start="31:17" pos:end="31:17">+</operator><name pos:start="31:18" pos:end="31:19">l1</name></expr></argument>,<argument pos:start="31:21" pos:end="31:24"><expr pos:start="31:21" pos:end="31:24"><name pos:start="31:21" pos:end="31:22">r1</name><operator pos:start="31:23" pos:end="31:23">-</operator><literal type="number" pos:start="31:24" pos:end="31:24">1</literal></expr></argument>,<argument pos:start="31:26" pos:end="31:28"><expr pos:start="31:26" pos:end="31:28"><name pos:start="31:26" pos:end="31:26">g</name><operator pos:start="31:27" pos:end="31:27">+</operator><literal type="number" pos:start="31:28" pos:end="31:28">1</literal></expr></argument>,<argument pos:start="31:30" pos:end="31:31"><expr pos:start="31:30" pos:end="31:31"><name pos:start="31:30" pos:end="31:31">r2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return pos:start="33:5" pos:end="33:11">return;</return>
</block_content>}</block></function>
<function pos:start="35:1" pos:end="57:1"><type pos:start="35:1" pos:end="35:3"><name pos:start="35:1" pos:end="35:3">int</name></type> <name pos:start="35:5" pos:end="35:8">main</name><parameter_list pos:start="35:9" pos:end="35:10">()</parameter_list>
<block pos:start="36:1" pos:end="57:1">{<block_content pos:start="37:5" pos:end="56:13">
    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><call pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:11">freopen</name><argument_list pos:start="37:12" pos:end="37:32">(<argument pos:start="37:13" pos:end="37:21"><expr pos:start="37:13" pos:end="37:21"><literal type="string" pos:start="37:13" pos:end="37:21">"sort.in"</literal></expr></argument>,<argument pos:start="37:23" pos:end="37:25"><expr pos:start="37:23" pos:end="37:25"><literal type="string" pos:start="37:23" pos:end="37:25">"r"</literal></expr></argument>,<argument pos:start="37:27" pos:end="37:31"><expr pos:start="37:27" pos:end="37:31"><name pos:start="37:27" pos:end="37:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:35"><expr pos:start="38:5" pos:end="38:34"><call pos:start="38:5" pos:end="38:34"><name pos:start="38:5" pos:end="38:11">freopen</name><argument_list pos:start="38:12" pos:end="38:34">(<argument pos:start="38:13" pos:end="38:22"><expr pos:start="38:13" pos:end="38:22"><literal type="string" pos:start="38:13" pos:end="38:22">"sort.out"</literal></expr></argument>,<argument pos:start="38:24" pos:end="38:26"><expr pos:start="38:24" pos:end="38:26"><literal type="string" pos:start="38:24" pos:end="38:26">"w"</literal></expr></argument>,<argument pos:start="38:28" pos:end="38:33"><expr pos:start="38:28" pos:end="38:33"><name pos:start="38:28" pos:end="38:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:11"><expr pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:7">cin</name><operator pos:start="39:8" pos:end="39:9">&gt;&gt;</operator><name pos:start="39:10" pos:end="39:10">n</name></expr>;</expr_stmt>
    <for pos:start="40:5" pos:end="44:5">for<control pos:start="40:8" pos:end="40:25">(<init pos:start="40:9" pos:end="40:16"><decl pos:start="40:9" pos:end="40:15"><type pos:start="40:9" pos:end="40:11"><name pos:start="40:9" pos:end="40:11">int</name></type> <name pos:start="40:13" pos:end="40:13">i</name><init pos:start="40:14" pos:end="40:15">=<expr pos:start="40:15" pos:end="40:15"><literal type="number" pos:start="40:15" pos:end="40:15">1</literal></expr></init></decl>;</init><condition pos:start="40:17" pos:end="40:21"><expr pos:start="40:17" pos:end="40:20"><name pos:start="40:17" pos:end="40:17">i</name><operator pos:start="40:18" pos:end="40:19">&lt;=</operator><name pos:start="40:20" pos:end="40:20">n</name></expr>;</condition><incr pos:start="40:22" pos:end="40:24"><expr pos:start="40:22" pos:end="40:24"><name pos:start="40:22" pos:end="40:22">i</name><operator pos:start="40:23" pos:end="40:24">++</operator></expr></incr>)</control>
    <block pos:start="41:5" pos:end="44:5">{<block_content pos:start="42:9" pos:end="43:25">
        <expr_stmt pos:start="42:9" pos:end="42:23"><expr pos:start="42:9" pos:end="42:22"><name pos:start="42:9" pos:end="42:11">cin</name><operator pos:start="42:12" pos:end="42:13">&gt;&gt;</operator><name pos:start="42:14" pos:end="42:22"><name pos:start="42:14" pos:end="42:19">Middle</name><index pos:start="42:20" pos:end="42:22">[<expr pos:start="42:21" pos:end="42:21"><name pos:start="42:21" pos:end="42:21">i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="43:9" pos:end="43:25"><expr pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:11">num</name><index pos:start="43:12" pos:end="43:14">[<expr pos:start="43:13" pos:end="43:13"><name pos:start="43:13" pos:end="43:13">i</name></expr>]</index></name><operator pos:start="43:15" pos:end="43:15">=</operator><name pos:start="43:16" pos:end="43:24"><name pos:start="43:16" pos:end="43:21">Middle</name><index pos:start="43:22" pos:end="43:24">[<expr pos:start="43:23" pos:end="43:23"><name pos:start="43:23" pos:end="43:23">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="45:5" pos:end="48:5">for<control pos:start="45:8" pos:end="45:25">(<init pos:start="45:9" pos:end="45:16"><decl pos:start="45:9" pos:end="45:15"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:13">i</name><init pos:start="45:14" pos:end="45:15">=<expr pos:start="45:15" pos:end="45:15"><literal type="number" pos:start="45:15" pos:end="45:15">1</literal></expr></init></decl>;</init><condition pos:start="45:17" pos:end="45:21"><expr pos:start="45:17" pos:end="45:20"><name pos:start="45:17" pos:end="45:17">i</name><operator pos:start="45:18" pos:end="45:19">&lt;=</operator><name pos:start="45:20" pos:end="45:20">n</name></expr>;</condition><incr pos:start="45:22" pos:end="45:24"><expr pos:start="45:22" pos:end="45:24"><name pos:start="45:22" pos:end="45:22">i</name><operator pos:start="45:23" pos:end="45:24">++</operator></expr></incr>)</control>
    <block pos:start="46:5" pos:end="48:5">{<block_content pos:start="47:9" pos:end="47:20">
        <expr_stmt pos:start="47:9" pos:end="47:20"><expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:11">cin</name><operator pos:start="47:12" pos:end="47:13">&gt;&gt;</operator><name pos:start="47:14" pos:end="47:19"><name pos:start="47:14" pos:end="47:16">End</name><index pos:start="47:17" pos:end="47:19">[<expr pos:start="47:18" pos:end="47:18"><name pos:start="47:18" pos:end="47:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><call pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:8">sort</name><argument_list pos:start="49:9" pos:end="49:23">(<argument pos:start="49:10" pos:end="49:14"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:12">num</name><operator pos:start="49:13" pos:end="49:13">+</operator><literal type="number" pos:start="49:14" pos:end="49:14">1</literal></expr></argument>,<argument pos:start="49:16" pos:end="49:22"><expr pos:start="49:16" pos:end="49:22"><name pos:start="49:16" pos:end="49:18">num</name><operator pos:start="49:19" pos:end="49:19">+</operator><name pos:start="49:20" pos:end="49:20">n</name><operator pos:start="49:21" pos:end="49:21">+</operator><literal type="number" pos:start="49:22" pos:end="49:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="50:5" pos:end="50:19"><expr pos:start="50:5" pos:end="50:18"><name pos:start="50:5" pos:end="50:8">root</name><operator pos:start="50:9" pos:end="50:9">=</operator><name pos:start="50:10" pos:end="50:18"><name pos:start="50:10" pos:end="50:15">Middle</name><index pos:start="50:16" pos:end="50:18">[<expr pos:start="50:17" pos:end="50:17"><name pos:start="50:17" pos:end="50:17">n</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="51:5" pos:end="51:17"><expr pos:start="51:5" pos:end="51:16"><call pos:start="51:5" pos:end="51:16"><name pos:start="51:5" pos:end="51:7">dfs</name><argument_list pos:start="51:8" pos:end="51:16">(<argument pos:start="51:9" pos:end="51:9"><expr pos:start="51:9" pos:end="51:9"><literal type="number" pos:start="51:9" pos:end="51:9">1</literal></expr></argument>,<argument pos:start="51:11" pos:end="51:11"><expr pos:start="51:11" pos:end="51:11"><name pos:start="51:11" pos:end="51:11">n</name></expr></argument>,<argument pos:start="51:13" pos:end="51:13"><expr pos:start="51:13" pos:end="51:13"><literal type="number" pos:start="51:13" pos:end="51:13">1</literal></expr></argument>,<argument pos:start="51:15" pos:end="51:15"><expr pos:start="51:15" pos:end="51:15"><name pos:start="51:15" pos:end="51:15">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="52:5" pos:end="55:5">for<control pos:start="52:8" pos:end="52:25">(<init pos:start="52:9" pos:end="52:16"><decl pos:start="52:9" pos:end="52:15"><type pos:start="52:9" pos:end="52:11"><name pos:start="52:9" pos:end="52:11">int</name></type> <name pos:start="52:13" pos:end="52:13">i</name><init pos:start="52:14" pos:end="52:15">=<expr pos:start="52:15" pos:end="52:15"><literal type="number" pos:start="52:15" pos:end="52:15">1</literal></expr></init></decl>;</init><condition pos:start="52:17" pos:end="52:21"><expr pos:start="52:17" pos:end="52:20"><name pos:start="52:17" pos:end="52:17">i</name><operator pos:start="52:18" pos:end="52:19">&lt;=</operator><name pos:start="52:20" pos:end="52:20">n</name></expr>;</condition><incr pos:start="52:22" pos:end="52:24"><expr pos:start="52:22" pos:end="52:24"><name pos:start="52:22" pos:end="52:22">i</name><operator pos:start="52:23" pos:end="52:24">++</operator></expr></incr>)</control>
    <block pos:start="53:5" pos:end="55:5">{<block_content pos:start="54:9" pos:end="54:53">
        <expr_stmt pos:start="54:9" pos:end="54:53"><expr pos:start="54:9" pos:end="54:52"><name pos:start="54:9" pos:end="54:12">cout</name><operator pos:start="54:13" pos:end="54:14">&lt;&lt;</operator><name pos:start="54:15" pos:end="54:26"><name pos:start="54:15" pos:end="54:18">Left</name><index pos:start="54:19" pos:end="54:26">[<expr pos:start="54:20" pos:end="54:25"><name pos:start="54:20" pos:end="54:25"><name pos:start="54:20" pos:end="54:22">num</name><index pos:start="54:23" pos:end="54:25">[<expr pos:start="54:24" pos:end="54:24"><name pos:start="54:24" pos:end="54:24">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="54:27" pos:end="54:28">&lt;&lt;</operator><literal type="char" pos:start="54:29" pos:end="54:31">' '</literal><operator pos:start="54:32" pos:end="54:33">&lt;&lt;</operator><name pos:start="54:34" pos:end="54:46"><name pos:start="54:34" pos:end="54:38">Right</name><index pos:start="54:39" pos:end="54:46">[<expr pos:start="54:40" pos:end="54:45"><name pos:start="54:40" pos:end="54:45"><name pos:start="54:40" pos:end="54:42">num</name><index pos:start="54:43" pos:end="54:45">[<expr pos:start="54:44" pos:end="54:44"><name pos:start="54:44" pos:end="54:44">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="54:47" pos:end="54:48">&lt;&lt;</operator><name pos:start="54:49" pos:end="54:52">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="56:5" pos:end="56:13">return <expr pos:start="56:12" pos:end="56:12"><literal type="number" pos:start="56:12" pos:end="56:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
