<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/664/664.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:36"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">t</name></decl>,<decl pos:start="3:7" pos:end="3:7"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:7">n</name></decl>,<decl pos:start="3:9" pos:end="3:15"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:9" pos:end="3:11">cnt</name> <init pos:start="3:13" pos:end="3:15">= <expr pos:start="3:15" pos:end="3:15"><literal type="number" pos:start="3:15" pos:end="3:15">0</literal></expr></init></decl>,<decl pos:start="3:17" pos:end="3:23"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:17" pos:end="3:19">ans</name> <init pos:start="3:21" pos:end="3:23">= <expr pos:start="3:23" pos:end="3:23"><literal type="number" pos:start="3:23" pos:end="3:23">0</literal></expr></init></decl>,<decl pos:start="3:25" pos:end="3:25"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:25" pos:end="3:25">x</name></decl>,<decl pos:start="3:27" pos:end="3:27"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:27" pos:end="3:27">y</name></decl>,<decl pos:start="3:29" pos:end="3:35"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:29" pos:end="3:35"><name pos:start="3:29" pos:end="3:29">g</name><index pos:start="3:30" pos:end="3:35">[<expr pos:start="3:31" pos:end="3:34"><literal type="number" pos:start="3:31" pos:end="3:34">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:20"><decl pos:start="4:1" pos:end="4:19"><type pos:start="4:1" pos:end="4:11"><name pos:start="4:1" pos:end="4:11"><name pos:start="4:1" pos:end="4:6">vector</name><argument_list type="generic" pos:start="4:7" pos:end="4:11">&lt;<argument pos:start="4:8" pos:end="4:10"><expr pos:start="4:8" pos:end="4:10"><name pos:start="4:8" pos:end="4:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="4:13" pos:end="4:19"><name pos:start="4:13" pos:end="4:13">G</name><index pos:start="4:14" pos:end="4:19">[<expr pos:start="4:15" pos:end="4:18"><literal type="number" pos:start="4:15" pos:end="4:18">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="30:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list> <block pos:start="5:12" pos:end="30:1">{<block_content pos:start="6:5" pos:end="29:13">
    <expr_stmt pos:start="6:5" pos:end="6:30"><expr pos:start="6:5" pos:end="6:29"><call pos:start="6:5" pos:end="6:29"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:29">(<argument pos:start="6:13" pos:end="6:18"><expr pos:start="6:13" pos:end="6:18"><literal type="string" pos:start="6:13" pos:end="6:18">"p.in"</literal></expr></argument>,<argument pos:start="6:20" pos:end="6:22"><expr pos:start="6:20" pos:end="6:22"><literal type="string" pos:start="6:20" pos:end="6:22">"r"</literal></expr></argument>,<argument pos:start="6:24" pos:end="6:28"><expr pos:start="6:24" pos:end="6:28"><name pos:start="6:24" pos:end="6:28">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><call pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:31">(<argument pos:start="7:13" pos:end="7:19"><expr pos:start="7:13" pos:end="7:19"><literal type="string" pos:start="7:13" pos:end="7:19">"p.out"</literal></expr></argument>,<argument pos:start="7:21" pos:end="7:23"><expr pos:start="7:21" pos:end="7:23"><literal type="string" pos:start="7:21" pos:end="7:23">"w"</literal></expr></argument>,<argument pos:start="7:25" pos:end="7:30"><expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:13"><expr pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:7">cin</name> <operator pos:start="8:9" pos:end="8:10">&gt;&gt;</operator> <name pos:start="8:12" pos:end="8:12">t</name></expr>;</expr_stmt>
    <for pos:start="9:5" pos:end="27:5">for <control pos:start="9:9" pos:end="9:32">(<init pos:start="9:10" pos:end="9:19"><decl pos:start="9:10" pos:end="9:18"><type pos:start="9:10" pos:end="9:12"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:14">i</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">1</literal></expr></init></decl>;</init> <condition pos:start="9:21" pos:end="9:27"><expr pos:start="9:21" pos:end="9:26"><name pos:start="9:21" pos:end="9:21">i</name> <operator pos:start="9:23" pos:end="9:24">&lt;=</operator> <name pos:start="9:26" pos:end="9:26">t</name></expr>;</condition> <incr pos:start="9:29" pos:end="9:31"><expr pos:start="9:29" pos:end="9:31"><name pos:start="9:29" pos:end="9:29">i</name><operator pos:start="9:30" pos:end="9:31">++</operator></expr></incr>)</control> <block pos:start="9:34" pos:end="27:5">{<block_content pos:start="10:9" pos:end="26:9">
        <expr_stmt pos:start="10:9" pos:end="10:17"><expr pos:start="10:9" pos:end="10:16"><name pos:start="10:9" pos:end="10:11">cin</name> <operator pos:start="10:13" pos:end="10:14">&gt;&gt;</operator> <name pos:start="10:16" pos:end="10:16">n</name></expr>;</expr_stmt>
        <for pos:start="11:9" pos:end="15:9">for <control pos:start="11:13" pos:end="11:36">(<init pos:start="11:14" pos:end="11:23"><decl pos:start="11:14" pos:end="11:22"><type pos:start="11:14" pos:end="11:16"><name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">j</name> <init pos:start="11:20" pos:end="11:22">= <expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">1</literal></expr></init></decl>;</init> <condition pos:start="11:25" pos:end="11:31"><expr pos:start="11:25" pos:end="11:30"><name pos:start="11:25" pos:end="11:25">j</name> <operator pos:start="11:27" pos:end="11:28">&lt;=</operator> <name pos:start="11:30" pos:end="11:30">n</name></expr>;</condition> <incr pos:start="11:33" pos:end="11:35"><expr pos:start="11:33" pos:end="11:35"><name pos:start="11:33" pos:end="11:33">j</name><operator pos:start="11:34" pos:end="11:35">++</operator></expr></incr>)</control> <block pos:start="11:38" pos:end="15:9">{<block_content pos:start="12:13" pos:end="14:30">
            <expr_stmt pos:start="12:13" pos:end="12:26"><expr pos:start="12:13" pos:end="12:25"><name pos:start="12:13" pos:end="12:15">cin</name> <operator pos:start="12:17" pos:end="12:18">&gt;&gt;</operator> <name pos:start="12:20" pos:end="12:20">x</name> <operator pos:start="12:22" pos:end="12:23">&gt;&gt;</operator> <name pos:start="12:25" pos:end="12:25">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:22"><expr pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:13">g</name><index pos:start="13:14" pos:end="13:16">[<expr pos:start="13:15" pos:end="13:15"><name pos:start="13:15" pos:end="13:15">x</name></expr>]</index></name> <operator pos:start="13:18" pos:end="13:19">==</operator> <name pos:start="13:21" pos:end="13:21">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:30"><expr pos:start="14:13" pos:end="14:29"><name pos:start="14:13" pos:end="14:16"><name pos:start="14:13" pos:end="14:13">G</name><index pos:start="14:14" pos:end="14:16">[<expr pos:start="14:15" pos:end="14:15"><name pos:start="14:15" pos:end="14:15">x</name></expr>]</index></name><operator pos:start="14:17" pos:end="14:17">.</operator><call pos:start="14:18" pos:end="14:29"><name pos:start="14:18" pos:end="14:26">push_back</name><argument_list pos:start="14:27" pos:end="14:29">(<argument pos:start="14:28" pos:end="14:28"><expr pos:start="14:28" pos:end="14:28"><name pos:start="14:28" pos:end="14:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="16:9" pos:end="26:9">for <control pos:start="16:13" pos:end="16:36">(<init pos:start="16:14" pos:end="16:23"><decl pos:start="16:14" pos:end="16:22"><type pos:start="16:14" pos:end="16:16"><name pos:start="16:14" pos:end="16:16">int</name></type> <name pos:start="16:18" pos:end="16:18">j</name> <init pos:start="16:20" pos:end="16:22">= <expr pos:start="16:22" pos:end="16:22"><literal type="number" pos:start="16:22" pos:end="16:22">1</literal></expr></init></decl>;</init> <condition pos:start="16:25" pos:end="16:31"><expr pos:start="16:25" pos:end="16:30"><name pos:start="16:25" pos:end="16:25">j</name> <operator pos:start="16:27" pos:end="16:28">&lt;=</operator> <name pos:start="16:30" pos:end="16:30">n</name></expr>;</condition> <incr pos:start="16:33" pos:end="16:35"><expr pos:start="16:33" pos:end="16:35"><name pos:start="16:33" pos:end="16:33">j</name><operator pos:start="16:34" pos:end="16:35">++</operator></expr></incr>)</control> <block pos:start="16:38" pos:end="26:9">{<block_content pos:start="17:13" pos:end="25:13">
            <if_stmt pos:start="17:13" pos:end="25:13"><if pos:start="17:13" pos:end="25:13">if <condition pos:start="17:16" pos:end="17:46">(<expr pos:start="17:17" pos:end="17:45"><name pos:start="17:17" pos:end="17:20"><name pos:start="17:17" pos:end="17:17">G</name><index pos:start="17:18" pos:end="17:20">[<expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">j</name></expr>]</index></name><operator pos:start="17:21" pos:end="17:21">.</operator><call pos:start="17:22" pos:end="17:27"><name pos:start="17:22" pos:end="17:25">size</name><argument_list pos:start="17:26" pos:end="17:27">()</argument_list></call> <operator pos:start="17:29" pos:end="17:30">&gt;=</operator> <name pos:start="17:32" pos:end="17:38"><name pos:start="17:32" pos:end="17:32">G</name><index pos:start="17:33" pos:end="17:38">[<expr pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:34">g</name><index pos:start="17:35" pos:end="17:37">[<expr pos:start="17:36" pos:end="17:36"><name pos:start="17:36" pos:end="17:36">x</name></expr>]</index></name></expr>]</index></name><operator pos:start="17:39" pos:end="17:39">.</operator><call pos:start="17:40" pos:end="17:45"><name pos:start="17:40" pos:end="17:43">size</name><argument_list pos:start="17:44" pos:end="17:45">()</argument_list></call></expr>)</condition> <block pos:start="17:48" pos:end="25:13">{<block_content pos:start="18:17" pos:end="24:46">
                <for pos:start="18:17" pos:end="23:17">for <control pos:start="18:21" pos:end="18:54">(<init pos:start="18:22" pos:end="18:31"><decl pos:start="18:22" pos:end="18:30"><type pos:start="18:22" pos:end="18:24"><name pos:start="18:22" pos:end="18:24">int</name></type> <name pos:start="18:26" pos:end="18:26">k</name> <init pos:start="18:28" pos:end="18:30">= <expr pos:start="18:30" pos:end="18:30"><literal type="number" pos:start="18:30" pos:end="18:30">1</literal></expr></init></decl>;</init> <condition pos:start="18:33" pos:end="18:49"><expr pos:start="18:33" pos:end="18:48"><name pos:start="18:33" pos:end="18:33">k</name> <operator pos:start="18:35" pos:end="18:36">&lt;=</operator> <name pos:start="18:38" pos:end="18:41"><name pos:start="18:38" pos:end="18:38">G</name><index pos:start="18:39" pos:end="18:41">[<expr pos:start="18:40" pos:end="18:40"><name pos:start="18:40" pos:end="18:40">j</name></expr>]</index></name><operator pos:start="18:42" pos:end="18:42">.</operator><call pos:start="18:43" pos:end="18:48"><name pos:start="18:43" pos:end="18:46">size</name><argument_list pos:start="18:47" pos:end="18:48">()</argument_list></call></expr>;</condition> <incr pos:start="18:51" pos:end="18:53"><expr pos:start="18:51" pos:end="18:53"><name pos:start="18:51" pos:end="18:51">k</name><operator pos:start="18:52" pos:end="18:53">++</operator></expr></incr>)</control> <block pos:start="18:56" pos:end="23:17">{<block_content pos:start="19:21" pos:end="22:21">
                    <if_stmt pos:start="19:21" pos:end="22:21"><if pos:start="19:21" pos:end="19:63">if <condition pos:start="19:24" pos:end="19:56">(<expr pos:start="19:25" pos:end="19:55"><name pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:25">G</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><name pos:start="19:27" pos:end="19:27">j</name></expr>]</index></name><operator pos:start="19:29" pos:end="19:29">.</operator><call pos:start="19:30" pos:end="19:35"><name pos:start="19:30" pos:end="19:33">size</name><argument_list pos:start="19:34" pos:end="19:35">()</argument_list></call> <operator pos:start="19:37" pos:end="19:37">&lt;</operator> <name pos:start="19:39" pos:end="19:48"><name pos:start="19:39" pos:end="19:39">G</name><index pos:start="19:40" pos:end="19:48">[<expr pos:start="19:41" pos:end="19:47"><name pos:start="19:41" pos:end="19:47"><name pos:start="19:41" pos:end="19:41">G</name><index pos:start="19:42" pos:end="19:44">[<expr pos:start="19:43" pos:end="19:43"><name pos:start="19:43" pos:end="19:43">x</name></expr>]</index><index pos:start="19:45" pos:end="19:47">[<expr pos:start="19:46" pos:end="19:46"><name pos:start="19:46" pos:end="19:46">k</name></expr>]</index></name></expr>]</index></name><operator pos:start="19:49" pos:end="19:49">.</operator><call pos:start="19:50" pos:end="19:55"><name pos:start="19:50" pos:end="19:53">size</name><argument_list pos:start="19:54" pos:end="19:55">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:58" pos:end="19:63"><block_content pos:start="19:58" pos:end="19:63"> <break pos:start="19:58" pos:end="19:63">break;</break></block_content></block></if>
                    <else pos:start="20:21" pos:end="22:21">else <block pos:start="20:26" pos:end="22:21">{<block_content pos:start="21:25" pos:end="21:30">
                        <expr_stmt pos:start="21:25" pos:end="21:30"><expr pos:start="21:25" pos:end="21:29"><name pos:start="21:25" pos:end="21:27">cnt</name><operator pos:start="21:28" pos:end="21:29">++</operator></expr>;</expr_stmt>
                    </block_content>}</block></else></if_stmt>
                </block_content>}</block></for>
                <if_stmt pos:start="24:17" pos:end="24:46"><if pos:start="24:17" pos:end="24:46">if <condition pos:start="24:20" pos:end="24:39">(<expr pos:start="24:21" pos:end="24:38"><name pos:start="24:21" pos:end="24:23">cnt</name> <operator pos:start="24:25" pos:end="24:26">==</operator> <name pos:start="24:28" pos:end="24:31"><name pos:start="24:28" pos:end="24:28">G</name><index pos:start="24:29" pos:end="24:31">[<expr pos:start="24:30" pos:end="24:30"><name pos:start="24:30" pos:end="24:30">j</name></expr>]</index></name><operator pos:start="24:32" pos:end="24:32">.</operator><call pos:start="24:33" pos:end="24:38"><name pos:start="24:33" pos:end="24:36">size</name><argument_list pos:start="24:37" pos:end="24:38">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="24:41" pos:end="24:46"><block_content pos:start="24:41" pos:end="24:46"> <expr_stmt pos:start="24:41" pos:end="24:46"><expr pos:start="24:41" pos:end="24:45"><name pos:start="24:41" pos:end="24:43">ans</name><operator pos:start="24:44" pos:end="24:45">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="28:5" pos:end="28:24"><expr pos:start="28:5" pos:end="28:23"><name pos:start="28:5" pos:end="28:8">cout</name> <operator pos:start="28:10" pos:end="28:11">&lt;&lt;</operator> <name pos:start="28:13" pos:end="28:15">ans</name> <operator pos:start="28:17" pos:end="28:18">&lt;&lt;</operator> <name pos:start="28:20" pos:end="28:23">endl</name></expr>;</expr_stmt>
    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
