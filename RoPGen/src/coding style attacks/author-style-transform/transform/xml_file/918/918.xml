<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/918/918.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="20:5"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:8">cum</name><parameter_list pos:start="4:9" pos:end="4:21">(<parameter pos:start="4:10" pos:end="4:14"><decl pos:start="4:10" pos:end="4:14"><type pos:start="4:10" pos:end="4:14"><name pos:start="4:10" pos:end="4:12">int</name></type> <name pos:start="4:14" pos:end="4:14">a</name></decl></parameter>,<parameter pos:start="4:16" pos:end="4:20"><decl pos:start="4:16" pos:end="4:20"><type pos:start="4:16" pos:end="4:20"><name pos:start="4:16" pos:end="4:18">int</name></type> <name pos:start="4:20" pos:end="4:20">b</name></decl></parameter>)</parameter_list><block pos:start="4:22" pos:end="20:5">{<block_content pos:start="5:9" pos:end="19:9">
        <decl_stmt pos:start="5:9" pos:end="5:21"><decl pos:start="5:9" pos:end="5:20"><type pos:start="5:9" pos:end="5:11"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:16">suma</name> <init pos:start="5:18" pos:end="5:20">= <expr pos:start="5:20" pos:end="5:20"><literal type="number" pos:start="5:20" pos:end="5:20">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="6:9" pos:end="6:21"><decl pos:start="6:9" pos:end="6:20"><type pos:start="6:9" pos:end="6:11"><name pos:start="6:9" pos:end="6:11">int</name></type> <name pos:start="6:13" pos:end="6:16">sumb</name> <init pos:start="6:18" pos:end="6:20">= <expr pos:start="6:20" pos:end="6:20"><literal type="number" pos:start="6:20" pos:end="6:20">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="7:9" pos:end="7:19"><decl pos:start="7:9" pos:end="7:18"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:14">aa</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><name pos:start="7:18" pos:end="7:18">a</name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="8:9" pos:end="8:19"><decl pos:start="8:9" pos:end="8:18"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:14">bb</name> <init pos:start="8:16" pos:end="8:18">= <expr pos:start="8:18" pos:end="8:18"><name pos:start="8:18" pos:end="8:18">b</name></expr></init></decl>;</decl_stmt>
        <while pos:start="9:9" pos:end="12:9">while<condition pos:start="9:14" pos:end="9:17">(<expr pos:start="9:15" pos:end="9:16"><name pos:start="9:15" pos:end="9:16">aa</name></expr>)</condition><block pos:start="9:18" pos:end="12:9">{<block_content pos:start="10:13" pos:end="11:20">
            <expr_stmt pos:start="10:13" pos:end="10:28"><expr pos:start="10:13" pos:end="10:27"><name pos:start="10:13" pos:end="10:16">suma</name> <operator pos:start="10:18" pos:end="10:19">+=</operator> <name pos:start="10:21" pos:end="10:22">aa</name> <operator pos:start="10:24" pos:end="10:24">%</operator> <literal type="number" pos:start="10:26" pos:end="10:27">10</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="11:13" pos:end="11:20"><expr pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:14">aa</name> <operator pos:start="11:16" pos:end="11:16">/</operator> <literal type="number" pos:start="11:18" pos:end="11:19">10</literal></expr>;</expr_stmt>
        </block_content>}</block></while>
        <while pos:start="13:9" pos:end="16:9">while<condition pos:start="13:14" pos:end="13:17">(<expr pos:start="13:15" pos:end="13:16"><name pos:start="13:15" pos:end="13:16">bb</name></expr>)</condition><block pos:start="13:18" pos:end="16:9">{<block_content pos:start="14:13" pos:end="15:20">
            <expr_stmt pos:start="14:13" pos:end="14:28"><expr pos:start="14:13" pos:end="14:27"><name pos:start="14:13" pos:end="14:16">sumb</name> <operator pos:start="14:18" pos:end="14:19">+=</operator> <name pos:start="14:21" pos:end="14:22">bb</name> <operator pos:start="14:24" pos:end="14:24">%</operator> <literal type="number" pos:start="14:26" pos:end="14:27">10</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:20"><expr pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:14">bb</name> <operator pos:start="15:16" pos:end="15:16">/</operator> <literal type="number" pos:start="15:18" pos:end="15:19">10</literal></expr>;</expr_stmt>
        </block_content>}</block></while>
        <if_stmt pos:start="17:9" pos:end="19:9"><if pos:start="17:9" pos:end="19:9">if<condition pos:start="17:11" pos:end="17:24">(<expr pos:start="17:12" pos:end="17:23"><name pos:start="17:12" pos:end="17:15">suma</name> <operator pos:start="17:17" pos:end="17:18">!=</operator> <name pos:start="17:20" pos:end="17:23">sumb</name></expr>)</condition><block pos:start="17:25" pos:end="19:9">{<block_content pos:start="18:13" pos:end="18:31">
            <return pos:start="18:13" pos:end="18:31">return <expr pos:start="18:20" pos:end="18:30"><name pos:start="18:20" pos:end="18:23">suma</name> <operator pos:start="18:25" pos:end="18:25">&lt;</operator> <name pos:start="18:27" pos:end="18:30">sumb</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>
<function pos:start="21:1" pos:end="32:1"><type pos:start="21:1" pos:end="21:3"><name pos:start="21:1" pos:end="21:3">int</name></type> <name pos:start="21:5" pos:end="21:8">main</name><parameter_list pos:start="21:9" pos:end="21:10">()</parameter_list><block pos:start="21:11" pos:end="32:1">{<block_content pos:start="22:5" pos:end="31:5">
    <decl_stmt pos:start="22:5" pos:end="22:10"><decl pos:start="22:5" pos:end="22:9"><type pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></type> <name pos:start="22:9" pos:end="22:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:13"><expr pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:7">cin</name> <operator pos:start="23:9" pos:end="23:10">&gt;&gt;</operator> <name pos:start="23:12" pos:end="23:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="24:5" pos:end="24:13"><decl pos:start="24:5" pos:end="24:12"><type pos:start="24:5" pos:end="24:7"><name pos:start="24:5" pos:end="24:7">int</name></type> <name pos:start="24:9" pos:end="24:12"><name pos:start="24:9" pos:end="24:9">i</name><index pos:start="24:10" pos:end="24:12">[<expr pos:start="24:11" pos:end="24:11"><name pos:start="24:11" pos:end="24:11">n</name></expr>]</index></name></decl>;</decl_stmt>
    <for pos:start="25:5" pos:end="27:5">for<control pos:start="25:8" pos:end="25:28">(<init pos:start="25:9" pos:end="25:18"><decl pos:start="25:9" pos:end="25:17"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">j</name> <init pos:start="25:15" pos:end="25:17">= <expr pos:start="25:17" pos:end="25:17"><literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr></init></decl>;</init><condition pos:start="25:19" pos:end="25:24"><expr pos:start="25:19" pos:end="25:23"><name pos:start="25:19" pos:end="25:19">j</name> <operator pos:start="25:21" pos:end="25:21">&lt;</operator> <name pos:start="25:23" pos:end="25:23">n</name></expr>;</condition><incr pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:25">j</name><operator pos:start="25:26" pos:end="25:27">++</operator></expr></incr>)</control><block pos:start="25:29" pos:end="27:5">{<block_content pos:start="26:9" pos:end="26:20">
        <expr_stmt pos:start="26:9" pos:end="26:20"><expr pos:start="26:9" pos:end="26:19"><name pos:start="26:9" pos:end="26:11">cin</name> <operator pos:start="26:13" pos:end="26:14">&gt;&gt;</operator> <name pos:start="26:16" pos:end="26:19"><name pos:start="26:16" pos:end="26:16">i</name><index pos:start="26:17" pos:end="26:19">[<expr pos:start="26:18" pos:end="26:18"><name pos:start="26:18" pos:end="26:18">n</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="28:5" pos:end="28:22"><expr pos:start="28:5" pos:end="28:21"><call pos:start="28:5" pos:end="28:21"><name pos:start="28:5" pos:end="28:8">sort</name><argument_list pos:start="28:9" pos:end="28:21">(<argument pos:start="28:10" pos:end="28:10"><expr pos:start="28:10" pos:end="28:10"><name pos:start="28:10" pos:end="28:10">i</name></expr></argument>,<argument pos:start="28:12" pos:end="28:16"><expr pos:start="28:12" pos:end="28:16"><name pos:start="28:12" pos:end="28:12">i</name> <operator pos:start="28:14" pos:end="28:14">+</operator> <name pos:start="28:16" pos:end="28:16">n</name></expr></argument>,<argument pos:start="28:18" pos:end="28:20"><expr pos:start="28:18" pos:end="28:20"><name pos:start="28:18" pos:end="28:20">cum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="29:5" pos:end="31:5">for<control pos:start="29:8" pos:end="29:28">(<init pos:start="29:9" pos:end="29:18"><decl pos:start="29:9" pos:end="29:17"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:13">j</name> <init pos:start="29:15" pos:end="29:17">= <expr pos:start="29:17" pos:end="29:17"><literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr></init></decl>;</init><condition pos:start="29:19" pos:end="29:24"><expr pos:start="29:19" pos:end="29:23"><name pos:start="29:19" pos:end="29:19">j</name> <operator pos:start="29:21" pos:end="29:21">&lt;</operator> <name pos:start="29:23" pos:end="29:23">n</name></expr>;</condition><incr pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:25">j</name><operator pos:start="29:26" pos:end="29:27">++</operator></expr></incr>)</control><block pos:start="29:29" pos:end="31:5">{<block_content pos:start="30:9" pos:end="30:27">
        <expr_stmt pos:start="30:9" pos:end="30:27"><expr pos:start="30:9" pos:end="30:26"><name pos:start="30:9" pos:end="30:12">cout</name> <operator pos:start="30:14" pos:end="30:15">&lt;&lt;</operator> <name pos:start="30:17" pos:end="30:20"><name pos:start="30:17" pos:end="30:17">i</name><index pos:start="30:18" pos:end="30:20">[<expr pos:start="30:19" pos:end="30:19"><name pos:start="30:19" pos:end="30:19">n</name></expr>]</index></name> <operator pos:start="30:22" pos:end="30:23">&lt;&lt;</operator><literal type="string" pos:start="30:24" pos:end="30:26">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
</unit>
