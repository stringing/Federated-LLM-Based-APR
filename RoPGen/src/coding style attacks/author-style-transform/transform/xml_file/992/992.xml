<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/992/992.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:15"><decl pos:start="3:1" pos:end="3:14"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:14"><name pos:start="3:5" pos:end="3:7">vis</name><index pos:start="3:8" pos:end="3:14">[<expr pos:start="3:9" pos:end="3:13"><literal type="number" pos:start="3:9" pos:end="3:13">10005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="28:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="28:1">{<block_content pos:start="5:5" pos:end="27:13">
    <expr_stmt pos:start="5:5" pos:end="5:33"><expr pos:start="5:5" pos:end="5:32"><call pos:start="5:5" pos:end="5:32"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:32">(<argument pos:start="5:13" pos:end="5:21"><expr pos:start="5:13" pos:end="5:21"><literal type="string" pos:start="5:13" pos:end="5:21">"pair.in"</literal></expr></argument>,<argument pos:start="5:23" pos:end="5:25"><expr pos:start="5:23" pos:end="5:25"><literal type="string" pos:start="5:23" pos:end="5:25">"r"</literal></expr></argument>,<argument pos:start="5:27" pos:end="5:31"><expr pos:start="5:27" pos:end="5:31"><name pos:start="5:27" pos:end="5:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:35"><expr pos:start="6:5" pos:end="6:34"><call pos:start="6:5" pos:end="6:34"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:34">(<argument pos:start="6:13" pos:end="6:22"><expr pos:start="6:13" pos:end="6:22"><literal type="string" pos:start="6:13" pos:end="6:22">"pair.out"</literal></expr></argument>,<argument pos:start="6:24" pos:end="6:26"><expr pos:start="6:24" pos:end="6:26"><literal type="string" pos:start="6:24" pos:end="6:26">"w"</literal></expr></argument>,<argument pos:start="6:28" pos:end="6:33"><expr pos:start="6:28" pos:end="6:33"><name pos:start="6:28" pos:end="6:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>,<decl pos:start="7:11" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:13">sum</name><init pos:start="7:14" pos:end="7:20">=<expr pos:start="7:15" pos:end="7:20"><literal type="number" pos:start="7:15" pos:end="7:20">100000</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:11"><expr pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:10">n</name></expr>;</expr_stmt>
    <for pos:start="9:5" pos:end="25:5">for<control pos:start="9:8" pos:end="9:25">(<init pos:start="9:9" pos:end="9:16"><decl pos:start="9:9" pos:end="9:15"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">i</name><init pos:start="9:14" pos:end="9:15">=<expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">1</literal></expr></init></decl>;</init><condition pos:start="9:17" pos:end="9:21"><expr pos:start="9:17" pos:end="9:20"><name pos:start="9:17" pos:end="9:17">i</name><operator pos:start="9:18" pos:end="9:19">&lt;=</operator><name pos:start="9:20" pos:end="9:20">n</name></expr>;</condition><incr pos:start="9:22" pos:end="9:24"><expr pos:start="9:22" pos:end="9:24"><name pos:start="9:22" pos:end="9:22">i</name><operator pos:start="9:23" pos:end="9:24">++</operator></expr></incr>)</control><block pos:start="9:26" pos:end="25:5">{<block_content pos:start="10:9" pos:end="24:9">
        <decl_stmt pos:start="10:9" pos:end="10:14"><decl pos:start="10:9" pos:end="10:13"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">x</name></decl>;</decl_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:15"><expr pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:11">cin</name><operator pos:start="11:12" pos:end="11:13">&gt;&gt;</operator><name pos:start="11:14" pos:end="11:14">x</name></expr>;</expr_stmt>
        <if_stmt pos:start="12:9" pos:end="17:9"><if pos:start="12:9" pos:end="14:9">if<condition pos:start="12:11" pos:end="12:16">(<expr pos:start="12:12" pos:end="12:15"><name pos:start="12:12" pos:end="12:12">x</name><operator pos:start="12:13" pos:end="12:14">==</operator><literal type="number" pos:start="12:15" pos:end="12:15">1</literal></expr>)</condition><block pos:start="12:17" pos:end="14:9">{<block_content pos:start="13:13" pos:end="13:18">
            <expr_stmt pos:start="13:13" pos:end="13:18"><expr pos:start="13:13" pos:end="13:17"><name pos:start="13:13" pos:end="13:15">sum</name><operator pos:start="13:16" pos:end="13:17">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else pos:start="15:9" pos:end="17:9">else <block pos:start="15:14" pos:end="17:9">{<block_content pos:start="16:13" pos:end="16:18">
            <expr_stmt pos:start="16:13" pos:end="16:18"><expr pos:start="16:13" pos:end="16:17"><name pos:start="16:13" pos:end="16:15">sum</name><operator pos:start="16:16" pos:end="16:17">--</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <if_stmt pos:start="18:9" pos:end="24:9"><if pos:start="18:9" pos:end="20:9">if<condition pos:start="18:11" pos:end="18:23">(<expr pos:start="18:12" pos:end="18:22"><name pos:start="18:12" pos:end="18:14">sum</name><operator pos:start="18:15" pos:end="18:16">==</operator><literal type="number" pos:start="18:17" pos:end="18:22">100000</literal></expr>)</condition><block pos:start="18:24" pos:end="20:9">{<block_content pos:start="19:13" pos:end="19:18">
            <expr_stmt pos:start="19:13" pos:end="19:18"><expr pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:15">sum</name><operator pos:start="19:16" pos:end="19:16">=</operator><name pos:start="19:17" pos:end="19:17">i</name></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="20:10" pos:end="22:9">else if<condition pos:start="20:17" pos:end="20:29">(<expr pos:start="20:18" pos:end="20:28"><name pos:start="20:18" pos:end="20:25"><name pos:start="20:18" pos:end="20:20">vis</name><index pos:start="20:21" pos:end="20:25">[<expr pos:start="20:22" pos:end="20:24"><name pos:start="20:22" pos:end="20:24">sum</name></expr>]</index></name><operator pos:start="20:26" pos:end="20:27">==</operator><literal type="number" pos:start="20:28" pos:end="20:28">0</literal></expr>)</condition><block pos:start="20:30" pos:end="22:9">{<block_content pos:start="21:13" pos:end="21:23">
            <expr_stmt pos:start="21:13" pos:end="21:23"><expr pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:15">vis</name><index pos:start="21:16" pos:end="21:20">[<expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:19">sum</name></expr>]</index></name><operator pos:start="21:21" pos:end="21:21">=</operator><name pos:start="21:22" pos:end="21:22">i</name></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="22:10" pos:end="24:9">else<block pos:start="22:14" pos:end="24:9">{<block_content pos:start="23:13" pos:end="23:36">
            <expr_stmt pos:start="23:13" pos:end="23:36"><expr pos:start="23:13" pos:end="23:35"><name pos:start="23:13" pos:end="23:15">sum</name><operator pos:start="23:16" pos:end="23:16">=</operator><call pos:start="23:17" pos:end="23:35"><name pos:start="23:17" pos:end="23:19">max</name><argument_list pos:start="23:20" pos:end="23:35">(<argument pos:start="23:21" pos:end="23:23"><expr pos:start="23:21" pos:end="23:23"><name pos:start="23:21" pos:end="23:23">sum</name></expr></argument>,<argument pos:start="23:25" pos:end="23:34"><expr pos:start="23:25" pos:end="23:34"><name pos:start="23:25" pos:end="23:25">i</name><operator pos:start="23:26" pos:end="23:26">-</operator><name pos:start="23:27" pos:end="23:34"><name pos:start="23:27" pos:end="23:29">vis</name><index pos:start="23:30" pos:end="23:34">[<expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">sum</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
   <expr_stmt pos:start="26:4" pos:end="26:19"><expr pos:start="26:4" pos:end="26:18"><name pos:start="26:4" pos:end="26:7">cout</name><operator pos:start="26:8" pos:end="26:9">&lt;&lt;</operator><name pos:start="26:10" pos:end="26:12">sum</name><operator pos:start="26:13" pos:end="26:14">&lt;&lt;</operator><name pos:start="26:15" pos:end="26:18">endl</name></expr>;</expr_stmt>
    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
