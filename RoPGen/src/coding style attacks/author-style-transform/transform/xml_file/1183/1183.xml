<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1183/1183.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:8"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:7"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:7">m</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:18"><decl pos:start="4:1" pos:end="4:6"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:6">x1</name></decl>,<decl pos:start="4:8" pos:end="4:9"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:8" pos:end="4:9">y1</name></decl>,<decl pos:start="4:11" pos:end="4:12"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:11" pos:end="4:12">x2</name></decl>,<decl pos:start="4:14" pos:end="4:15"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:14" pos:end="4:15">y2</name></decl>,<decl pos:start="4:17" pos:end="4:17"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:17" pos:end="4:17">k</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:21"><decl pos:start="5:1" pos:end="5:20"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:7">vis</name><index pos:start="5:8" pos:end="5:12">[<expr pos:start="5:9" pos:end="5:11"><literal type="number" pos:start="5:9" pos:end="5:11">110</literal></expr>]</index><index pos:start="5:13" pos:end="5:17">[<expr pos:start="5:14" pos:end="5:16"><literal type="number" pos:start="5:14" pos:end="5:16">110</literal></expr>]</index><index pos:start="5:18" pos:end="5:20">[<expr pos:start="5:19" pos:end="5:19"><literal type="number" pos:start="5:19" pos:end="5:19">5</literal></expr>]</index></name></decl>;</decl_stmt>
<struct pos:start="6:1" pos:end="13:2">struct <name pos:start="6:8" pos:end="6:11">node</name><block pos:start="6:12" pos:end="13:1">{<public type="default" pos:start="7:5" pos:end="12:5">
    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>,<decl pos:start="7:11" pos:end="7:11"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:11">y</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:12"><decl pos:start="8:5" pos:end="8:11"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:11">cnt</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">f</name></decl>;</decl_stmt>
    <function type="operator" pos:start="10:5" pos:end="12:5"><type pos:start="10:5" pos:end="10:8"><name pos:start="10:5" pos:end="10:8">bool</name></type> <name pos:start="10:10" pos:end="10:19">operator <name pos:start="10:19" pos:end="10:19">&lt;</name></name> <parameter_list pos:start="10:21" pos:end="10:35">(<parameter pos:start="10:22" pos:end="10:34"><decl pos:start="10:22" pos:end="10:34"><type pos:start="10:22" pos:end="10:33"><specifier pos:start="10:22" pos:end="10:26">const</specifier> <name pos:start="10:28" pos:end="10:31">node</name> <modifier pos:start="10:33" pos:end="10:33">&amp;</modifier></type><name pos:start="10:34" pos:end="10:34">x</name></decl></parameter>)</parameter_list> <specifier pos:start="10:37" pos:end="10:41">const</specifier> <block pos:start="10:43" pos:end="12:5">{<block_content pos:start="11:9" pos:end="11:23">
        <return pos:start="11:9" pos:end="11:23">return <expr pos:start="11:16" pos:end="11:22"><name pos:start="11:16" pos:end="11:16">f</name> <operator pos:start="11:18" pos:end="11:18">&lt;</operator> <name pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:20">x</name><operator pos:start="11:21" pos:end="11:21">.</operator><name pos:start="11:22" pos:end="11:22">f</name></name></expr>;</return>
    </block_content>}</block></function>
</public>}</block>;</struct>
<decl_stmt pos:start="14:1" pos:end="14:14"><decl pos:start="14:1" pos:end="14:13"><type pos:start="14:1" pos:end="14:6"><name pos:start="14:1" pos:end="14:6">string</name></type> <name pos:start="14:8" pos:end="14:13"><name pos:start="14:8" pos:end="14:8">a</name><index pos:start="14:9" pos:end="14:13">[<expr pos:start="14:10" pos:end="14:12"><literal type="number" pos:start="14:10" pos:end="14:12">110</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="15:1" pos:end="15:41"><decl pos:start="15:1" pos:end="15:40"><type pos:start="15:1" pos:end="15:3"><name pos:start="15:1" pos:end="15:3">int</name></type> <name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:6">fx</name><index pos:start="15:7" pos:end="15:9">[<expr pos:start="15:8" pos:end="15:8"><literal type="number" pos:start="15:8" pos:end="15:8">4</literal></expr>]</index><index pos:start="15:10" pos:end="15:12">[<expr pos:start="15:11" pos:end="15:11"><literal type="number" pos:start="15:11" pos:end="15:11">2</literal></expr>]</index></name><init pos:start="15:13" pos:end="15:40">=<expr pos:start="15:14" pos:end="15:40"><block pos:start="15:14" pos:end="15:40">{<expr pos:start="15:15" pos:end="15:20"><block pos:start="15:15" pos:end="15:20">{<expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>,<expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>}</block></expr>,<expr pos:start="15:22" pos:end="15:26"><block pos:start="15:22" pos:end="15:26">{<expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr>,<expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">1</literal></expr>}</block></expr>,<expr pos:start="15:28" pos:end="15:32"><block pos:start="15:28" pos:end="15:32">{<expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">1</literal></expr>,<expr pos:start="15:31" pos:end="15:31"><literal type="number" pos:start="15:31" pos:end="15:31">0</literal></expr>}</block></expr>,<expr pos:start="15:34" pos:end="15:39"><block pos:start="15:34" pos:end="15:39">{<expr pos:start="15:35" pos:end="15:35"><literal type="number" pos:start="15:35" pos:end="15:35">0</literal></expr>,<expr pos:start="15:37" pos:end="15:38"><operator pos:start="15:37" pos:end="15:37">-</operator><literal type="number" pos:start="15:38" pos:end="15:38">1</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>
<function pos:start="16:1" pos:end="18:1"><type pos:start="16:1" pos:end="16:4"><name pos:start="16:1" pos:end="16:4">bool</name></type> <name pos:start="16:6" pos:end="16:7">in</name><parameter_list pos:start="16:8" pos:end="16:20">(<parameter pos:start="16:9" pos:end="16:13"><decl pos:start="16:9" pos:end="16:13"><type pos:start="16:9" pos:end="16:13"><name pos:start="16:9" pos:end="16:11">int</name></type> <name pos:start="16:13" pos:end="16:13">x</name></decl></parameter>,<parameter pos:start="16:15" pos:end="16:19"><decl pos:start="16:15" pos:end="16:19"><type pos:start="16:15" pos:end="16:19"><name pos:start="16:15" pos:end="16:17">int</name></type> <name pos:start="16:19" pos:end="16:19">y</name></decl></parameter>)</parameter_list><block pos:start="16:21" pos:end="18:1">{<block_content pos:start="17:5" pos:end="17:32">
    <return pos:start="17:5" pos:end="17:32">return <expr pos:start="17:12" pos:end="17:31"><name pos:start="17:12" pos:end="17:12">x</name><operator pos:start="17:13" pos:end="17:14">&gt;=</operator><literal type="number" pos:start="17:15" pos:end="17:15">0</literal><operator pos:start="17:16" pos:end="17:17">&amp;&amp;</operator><name pos:start="17:18" pos:end="17:18">y</name><operator pos:start="17:19" pos:end="17:20">&gt;=</operator><literal type="number" pos:start="17:21" pos:end="17:21">0</literal><operator pos:start="17:22" pos:end="17:23">&amp;&amp;</operator><name pos:start="17:24" pos:end="17:24">x</name><operator pos:start="17:25" pos:end="17:25">&lt;</operator><name pos:start="17:26" pos:end="17:26">n</name><operator pos:start="17:27" pos:end="17:28">&amp;&amp;</operator><name pos:start="17:29" pos:end="17:29">y</name><operator pos:start="17:30" pos:end="17:30">&lt;</operator><name pos:start="17:31" pos:end="17:31">m</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="19:1" pos:end="49:1"><type pos:start="19:1" pos:end="19:4"><name pos:start="19:1" pos:end="19:4">void</name></type> <name pos:start="19:6" pos:end="19:8">bfs</name><parameter_list pos:start="19:9" pos:end="19:10">()</parameter_list><block pos:start="19:11" pos:end="49:1">{<block_content pos:start="20:5" pos:end="48:5">
    <decl_stmt pos:start="20:5" pos:end="20:56"><decl pos:start="20:5" pos:end="20:55"><type pos:start="20:5" pos:end="20:53"><name pos:start="20:5" pos:end="20:53"><name pos:start="20:5" pos:end="20:18">priority_queue</name><argument_list type="generic" pos:start="20:19" pos:end="20:53">&lt;<argument pos:start="20:20" pos:end="20:23"><expr pos:start="20:20" pos:end="20:23"><name pos:start="20:20" pos:end="20:23">node</name></expr></argument>,<argument pos:start="20:25" pos:end="20:36"><expr pos:start="20:25" pos:end="20:36"><name pos:start="20:25" pos:end="20:36"><name pos:start="20:25" pos:end="20:30">vector</name><argument_list type="generic" pos:start="20:31" pos:end="20:36">&lt;<argument pos:start="20:32" pos:end="20:35"><expr pos:start="20:32" pos:end="20:35"><name pos:start="20:32" pos:end="20:35">node</name></expr></argument>&gt;</argument_list></name></expr></argument>, <argument pos:start="20:39" pos:end="20:51"><expr pos:start="20:39" pos:end="20:51"><name pos:start="20:39" pos:end="20:51"><name pos:start="20:39" pos:end="20:45">greater</name><argument_list type="generic" pos:start="20:46" pos:end="20:51">&lt;<argument pos:start="20:47" pos:end="20:50"><expr pos:start="20:47" pos:end="20:50"><name pos:start="20:47" pos:end="20:50">node</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name></type> <name pos:start="20:55" pos:end="20:55">q</name></decl>;</decl_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:5">q</name><operator pos:start="21:6" pos:end="21:6">.</operator><name pos:start="21:7" pos:end="21:10">push</name></name><argument_list pos:start="21:11" pos:end="21:32">(<argument pos:start="21:12" pos:end="21:31"><expr pos:start="21:12" pos:end="21:31"><call pos:start="21:12" pos:end="21:31"><name pos:start="21:12" pos:end="21:20">make_node</name><argument_list pos:start="21:21" pos:end="21:31">(<argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">x1</name></expr></argument>,<argument pos:start="21:25" pos:end="21:26"><expr pos:start="21:25" pos:end="21:26"><name pos:start="21:25" pos:end="21:26">y1</name></expr></argument>,<argument pos:start="21:28" pos:end="21:28"><expr pos:start="21:28" pos:end="21:28"><literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr></argument>,<argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:33"><expr pos:start="22:5" pos:end="22:32"><call pos:start="22:5" pos:end="22:32"><name pos:start="22:5" pos:end="22:10"><name pos:start="22:5" pos:end="22:5">q</name><operator pos:start="22:6" pos:end="22:6">.</operator><name pos:start="22:7" pos:end="22:10">push</name></name><argument_list pos:start="22:11" pos:end="22:32">(<argument pos:start="22:12" pos:end="22:31"><expr pos:start="22:12" pos:end="22:31"><call pos:start="22:12" pos:end="22:31"><name pos:start="22:12" pos:end="22:20">make_node</name><argument_list pos:start="22:21" pos:end="22:31">(<argument pos:start="22:22" pos:end="22:23"><expr pos:start="22:22" pos:end="22:23"><name pos:start="22:22" pos:end="22:23">x1</name></expr></argument>,<argument pos:start="22:25" pos:end="22:26"><expr pos:start="22:25" pos:end="22:26"><name pos:start="22:25" pos:end="22:26">y1</name></expr></argument>,<argument pos:start="22:28" pos:end="22:28"><expr pos:start="22:28" pos:end="22:28"><literal type="number" pos:start="22:28" pos:end="22:28">0</literal></expr></argument>,<argument pos:start="22:30" pos:end="22:30"><expr pos:start="22:30" pos:end="22:30"><literal type="number" pos:start="22:30" pos:end="22:30">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><call pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:5">q</name><operator pos:start="23:6" pos:end="23:6">.</operator><name pos:start="23:7" pos:end="23:10">push</name></name><argument_list pos:start="23:11" pos:end="23:32">(<argument pos:start="23:12" pos:end="23:31"><expr pos:start="23:12" pos:end="23:31"><call pos:start="23:12" pos:end="23:31"><name pos:start="23:12" pos:end="23:20">make_node</name><argument_list pos:start="23:21" pos:end="23:31">(<argument pos:start="23:22" pos:end="23:23"><expr pos:start="23:22" pos:end="23:23"><name pos:start="23:22" pos:end="23:23">x1</name></expr></argument>,<argument pos:start="23:25" pos:end="23:26"><expr pos:start="23:25" pos:end="23:26"><name pos:start="23:25" pos:end="23:26">y1</name></expr></argument>,<argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr></argument>,<argument pos:start="23:30" pos:end="23:30"><expr pos:start="23:30" pos:end="23:30"><literal type="number" pos:start="23:30" pos:end="23:30">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:33"><expr pos:start="24:5" pos:end="24:32"><call pos:start="24:5" pos:end="24:32"><name pos:start="24:5" pos:end="24:10"><name pos:start="24:5" pos:end="24:5">q</name><operator pos:start="24:6" pos:end="24:6">.</operator><name pos:start="24:7" pos:end="24:10">push</name></name><argument_list pos:start="24:11" pos:end="24:32">(<argument pos:start="24:12" pos:end="24:31"><expr pos:start="24:12" pos:end="24:31"><call pos:start="24:12" pos:end="24:31"><name pos:start="24:12" pos:end="24:20">make_node</name><argument_list pos:start="24:21" pos:end="24:31">(<argument pos:start="24:22" pos:end="24:23"><expr pos:start="24:22" pos:end="24:23"><name pos:start="24:22" pos:end="24:23">x1</name></expr></argument>,<argument pos:start="24:25" pos:end="24:26"><expr pos:start="24:25" pos:end="24:26"><name pos:start="24:25" pos:end="24:26">y1</name></expr></argument>,<argument pos:start="24:28" pos:end="24:28"><expr pos:start="24:28" pos:end="24:28"><literal type="number" pos:start="24:28" pos:end="24:28">0</literal></expr></argument>,<argument pos:start="24:30" pos:end="24:30"><expr pos:start="24:30" pos:end="24:30"><literal type="number" pos:start="24:30" pos:end="24:30">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while pos:start="25:5" pos:end="48:5">while<condition pos:start="25:10" pos:end="25:21">(<expr pos:start="25:11" pos:end="25:20"><operator pos:start="25:11" pos:end="25:11">!</operator><call pos:start="25:12" pos:end="25:20"><name pos:start="25:12" pos:end="25:18"><name pos:start="25:12" pos:end="25:12">q</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:18">empty</name></name><argument_list pos:start="25:19" pos:end="25:20">()</argument_list></call></expr>)</condition><block pos:start="25:22" pos:end="48:5">{<block_content pos:start="26:9" pos:end="47:9">
        <decl_stmt pos:start="26:9" pos:end="26:23"><decl pos:start="26:9" pos:end="26:22"><type pos:start="26:9" pos:end="26:12"><name pos:start="26:9" pos:end="26:12">node</name></type> <name pos:start="26:14" pos:end="26:14">t</name><init pos:start="26:15" pos:end="26:22">=<expr pos:start="26:16" pos:end="26:22"><call pos:start="26:16" pos:end="26:22"><name pos:start="26:16" pos:end="26:20"><name pos:start="26:16" pos:end="26:16">q</name><operator pos:start="26:17" pos:end="26:17">.</operator><name pos:start="26:18" pos:end="26:20">top</name></name><argument_list pos:start="26:21" pos:end="26:22">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="27:9" pos:end="27:16"><expr pos:start="27:9" pos:end="27:15"><call pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:13"><name pos:start="27:9" pos:end="27:9">q</name><operator pos:start="27:10" pos:end="27:10">.</operator><name pos:start="27:11" pos:end="27:13">pop</name></name><argument_list pos:start="27:14" pos:end="27:15">()</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="28:9" pos:end="35:9"><if pos:start="28:9" pos:end="35:9">if<condition pos:start="28:11" pos:end="28:28">(<expr pos:start="28:12" pos:end="28:27"><name pos:start="28:12" pos:end="28:14"><name pos:start="28:12" pos:end="28:12">t</name><operator pos:start="28:13" pos:end="28:13">.</operator><name pos:start="28:14" pos:end="28:14">x</name></name><operator pos:start="28:15" pos:end="28:16">==</operator><name pos:start="28:17" pos:end="28:18">x2</name><operator pos:start="28:19" pos:end="28:20">&amp;&amp;</operator><name pos:start="28:21" pos:end="28:23"><name pos:start="28:21" pos:end="28:21">t</name><operator pos:start="28:22" pos:end="28:22">.</operator><name pos:start="28:23" pos:end="28:23">y</name></name><operator pos:start="28:24" pos:end="28:25">==</operator><name pos:start="28:26" pos:end="28:27">y2</name></expr>)</condition><block pos:start="28:29" pos:end="35:9">{<block_content pos:start="29:13" pos:end="34:19">
            <if_stmt pos:start="29:13" pos:end="33:13"><if pos:start="29:13" pos:end="31:13">if<condition pos:start="29:15" pos:end="29:24">(<expr pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:16">t</name><operator pos:start="29:17" pos:end="29:17">.</operator><name pos:start="29:18" pos:end="29:20">cnt</name></name><operator pos:start="29:21" pos:end="29:22">&lt;=</operator><name pos:start="29:23" pos:end="29:23">k</name></expr>)</condition><block pos:start="29:25" pos:end="31:13">{<block_content pos:start="30:17" pos:end="30:34">
                <expr_stmt pos:start="30:17" pos:end="30:34"><expr pos:start="30:17" pos:end="30:33"><name pos:start="30:17" pos:end="30:20">cout</name><operator pos:start="30:21" pos:end="30:22">&lt;&lt;</operator><literal type="string" pos:start="30:23" pos:end="30:27">"yes"</literal><operator pos:start="30:28" pos:end="30:29">&lt;&lt;</operator><name pos:start="30:30" pos:end="30:33">endl</name></expr>;</expr_stmt>
            </block_content>}</block></if><else pos:start="31:14" pos:end="33:13">else<block pos:start="31:18" pos:end="33:13">{<block_content pos:start="32:17" pos:end="32:33">
                <expr_stmt pos:start="32:17" pos:end="32:33"><expr pos:start="32:17" pos:end="32:32"><name pos:start="32:17" pos:end="32:20">cout</name><operator pos:start="32:21" pos:end="32:22">&lt;&lt;</operator><literal type="string" pos:start="32:23" pos:end="32:26">"no"</literal><operator pos:start="32:27" pos:end="32:28">&lt;&lt;</operator><name pos:start="32:29" pos:end="32:32">endl</name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
            <return pos:start="34:13" pos:end="34:19">return;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="36:9" pos:end="36:29"><expr pos:start="36:9" pos:end="36:28"><name pos:start="36:9" pos:end="36:26"><name pos:start="36:9" pos:end="36:11">vis</name><index pos:start="36:12" pos:end="36:16">[<expr pos:start="36:13" pos:end="36:15"><name pos:start="36:13" pos:end="36:15"><name pos:start="36:13" pos:end="36:13">t</name><operator pos:start="36:14" pos:end="36:14">.</operator><name pos:start="36:15" pos:end="36:15">x</name></name></expr>]</index><index pos:start="36:17" pos:end="36:21">[<expr pos:start="36:18" pos:end="36:20"><name pos:start="36:18" pos:end="36:20"><name pos:start="36:18" pos:end="36:18">t</name><operator pos:start="36:19" pos:end="36:19">.</operator><name pos:start="36:20" pos:end="36:20">y</name></name></expr>]</index><index pos:start="36:22" pos:end="36:26">[<expr pos:start="36:23" pos:end="36:25"><name pos:start="36:23" pos:end="36:25"><name pos:start="36:23" pos:end="36:23">t</name><operator pos:start="36:24" pos:end="36:24">.</operator><name pos:start="36:25" pos:end="36:25">f</name></name></expr>]</index></name><operator pos:start="36:27" pos:end="36:27">=</operator><literal type="number" pos:start="36:28" pos:end="36:28">1</literal></expr>;</expr_stmt>
        <for pos:start="37:9" pos:end="47:9">for<control pos:start="37:12" pos:end="37:28">(<init pos:start="37:13" pos:end="37:20"><decl pos:start="37:13" pos:end="37:19"><type pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">int</name></type> <name pos:start="37:17" pos:end="37:17">s</name><init pos:start="37:18" pos:end="37:19">=<expr pos:start="37:19" pos:end="37:19"><literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr></init></decl>;</init><condition pos:start="37:21" pos:end="37:24"><expr pos:start="37:21" pos:end="37:23"><name pos:start="37:21" pos:end="37:21">s</name><operator pos:start="37:22" pos:end="37:22">&lt;</operator><literal type="number" pos:start="37:23" pos:end="37:23">4</literal></expr>;</condition><incr pos:start="37:25" pos:end="37:27"><expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:25">s</name><operator pos:start="37:26" pos:end="37:27">++</operator></expr></incr>)</control><block pos:start="37:29" pos:end="47:9">{<block_content pos:start="38:13" pos:end="46:13">
            <decl_stmt pos:start="38:13" pos:end="38:32"><decl pos:start="38:13" pos:end="38:31"><type pos:start="38:13" pos:end="38:15"><name pos:start="38:13" pos:end="38:15">int</name></type> <name pos:start="38:17" pos:end="38:18">tx</name><init pos:start="38:19" pos:end="38:31">=<expr pos:start="38:20" pos:end="38:31"><name pos:start="38:20" pos:end="38:22"><name pos:start="38:20" pos:end="38:20">t</name><operator pos:start="38:21" pos:end="38:21">.</operator><name pos:start="38:22" pos:end="38:22">x</name></name><operator pos:start="38:23" pos:end="38:23">+</operator><name pos:start="38:24" pos:end="38:31"><name pos:start="38:24" pos:end="38:25">fx</name><index pos:start="38:26" pos:end="38:28">[<expr pos:start="38:27" pos:end="38:27"><name pos:start="38:27" pos:end="38:27">s</name></expr>]</index><index pos:start="38:29" pos:end="38:31">[<expr pos:start="38:30" pos:end="38:30"><literal type="number" pos:start="38:30" pos:end="38:30">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="39:13" pos:end="39:32"><decl pos:start="39:13" pos:end="39:31"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:18">ty</name><init pos:start="39:19" pos:end="39:31">=<expr pos:start="39:20" pos:end="39:31"><name pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:20">t</name><operator pos:start="39:21" pos:end="39:21">.</operator><name pos:start="39:22" pos:end="39:22">y</name></name><operator pos:start="39:23" pos:end="39:23">+</operator><name pos:start="39:24" pos:end="39:31"><name pos:start="39:24" pos:end="39:25">fx</name><index pos:start="39:26" pos:end="39:28">[<expr pos:start="39:27" pos:end="39:27"><name pos:start="39:27" pos:end="39:27">s</name></expr>]</index><index pos:start="39:29" pos:end="39:31">[<expr pos:start="39:30" pos:end="39:30"><literal type="number" pos:start="39:30" pos:end="39:30">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="40:13" pos:end="46:13"><if pos:start="40:13" pos:end="46:13">if<condition pos:start="40:15" pos:end="40:42">(<expr pos:start="40:16" pos:end="40:41"><call pos:start="40:16" pos:end="40:24"><name pos:start="40:16" pos:end="40:17">in</name><argument_list pos:start="40:18" pos:end="40:24">(<argument pos:start="40:19" pos:end="40:20"><expr pos:start="40:19" pos:end="40:20"><name pos:start="40:19" pos:end="40:20">tx</name></expr></argument>,<argument pos:start="40:22" pos:end="40:23"><expr pos:start="40:22" pos:end="40:23"><name pos:start="40:22" pos:end="40:23">ty</name></expr></argument>)</argument_list></call><operator pos:start="40:25" pos:end="40:26">&amp;&amp;</operator><operator pos:start="40:27" pos:end="40:27">!</operator><name pos:start="40:28" pos:end="40:41"><name pos:start="40:28" pos:end="40:30">vis</name><index pos:start="40:31" pos:end="40:34">[<expr pos:start="40:32" pos:end="40:33"><name pos:start="40:32" pos:end="40:33">tx</name></expr>]</index><index pos:start="40:35" pos:end="40:38">[<expr pos:start="40:36" pos:end="40:37"><name pos:start="40:36" pos:end="40:37">ty</name></expr>]</index><index pos:start="40:39" pos:end="40:41">[<expr pos:start="40:40" pos:end="40:40"><name pos:start="40:40" pos:end="40:40">s</name></expr>]</index></name></expr>)</condition><block pos:start="40:43" pos:end="46:13">{<block_content pos:start="41:17" pos:end="45:17">
                <if_stmt pos:start="41:17" pos:end="45:17"><if pos:start="41:17" pos:end="43:17">if<condition pos:start="41:19" pos:end="41:26">(<expr pos:start="41:20" pos:end="41:25"><name pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:20">t</name><operator pos:start="41:21" pos:end="41:21">.</operator><name pos:start="41:22" pos:end="41:22">f</name></name><operator pos:start="41:23" pos:end="41:24">==</operator><name pos:start="41:25" pos:end="41:25">s</name></expr>)</condition><block pos:start="41:27" pos:end="43:17">{<block_content pos:start="42:21" pos:end="42:53">
                    <expr_stmt pos:start="42:21" pos:end="42:53"><expr pos:start="42:21" pos:end="42:52"><call pos:start="42:21" pos:end="42:52"><name pos:start="42:21" pos:end="42:26"><name pos:start="42:21" pos:end="42:21">q</name><operator pos:start="42:22" pos:end="42:22">.</operator><name pos:start="42:23" pos:end="42:26">push</name></name><argument_list pos:start="42:27" pos:end="42:52">(<argument pos:start="42:28" pos:end="42:51"><expr pos:start="42:28" pos:end="42:51"><call pos:start="42:28" pos:end="42:51"><name pos:start="42:28" pos:end="42:36">make_node</name><argument_list pos:start="42:37" pos:end="42:51">(<argument pos:start="42:38" pos:end="42:39"><expr pos:start="42:38" pos:end="42:39"><name pos:start="42:38" pos:end="42:39">tx</name></expr></argument>,<argument pos:start="42:41" pos:end="42:42"><expr pos:start="42:41" pos:end="42:42"><name pos:start="42:41" pos:end="42:42">ty</name></expr></argument>,<argument pos:start="42:44" pos:end="42:48"><expr pos:start="42:44" pos:end="42:48"><name pos:start="42:44" pos:end="42:48"><name pos:start="42:44" pos:end="42:44">t</name><operator pos:start="42:45" pos:end="42:45">.</operator><name pos:start="42:46" pos:end="42:48">cnt</name></name></expr></argument>,<argument pos:start="42:50" pos:end="42:50"><expr pos:start="42:50" pos:end="42:50"><name pos:start="42:50" pos:end="42:50">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if><else pos:start="43:18" pos:end="45:17">else<block pos:start="43:22" pos:end="45:17">{<block_content pos:start="44:21" pos:end="44:55">
                    <expr_stmt pos:start="44:21" pos:end="44:55"><expr pos:start="44:21" pos:end="44:54"><call pos:start="44:21" pos:end="44:54"><name pos:start="44:21" pos:end="44:26"><name pos:start="44:21" pos:end="44:21">q</name><operator pos:start="44:22" pos:end="44:22">.</operator><name pos:start="44:23" pos:end="44:26">push</name></name><argument_list pos:start="44:27" pos:end="44:54">(<argument pos:start="44:28" pos:end="44:53"><expr pos:start="44:28" pos:end="44:53"><call pos:start="44:28" pos:end="44:53"><name pos:start="44:28" pos:end="44:36">make_node</name><argument_list pos:start="44:37" pos:end="44:53">(<argument pos:start="44:38" pos:end="44:39"><expr pos:start="44:38" pos:end="44:39"><name pos:start="44:38" pos:end="44:39">tx</name></expr></argument>,<argument pos:start="44:41" pos:end="44:42"><expr pos:start="44:41" pos:end="44:42"><name pos:start="44:41" pos:end="44:42">ty</name></expr></argument>,<argument pos:start="44:44" pos:end="44:50"><expr pos:start="44:44" pos:end="44:50"><name pos:start="44:44" pos:end="44:48"><name pos:start="44:44" pos:end="44:44">t</name><operator pos:start="44:45" pos:end="44:45">.</operator><name pos:start="44:46" pos:end="44:48">cnt</name></name><operator pos:start="44:49" pos:end="44:49">+</operator><literal type="number" pos:start="44:50" pos:end="44:50">1</literal></expr></argument>,<argument pos:start="44:52" pos:end="44:52"><expr pos:start="44:52" pos:end="44:52"><name pos:start="44:52" pos:end="44:52">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></while>
</block_content>}</block></function>
<function pos:start="50:1" pos:end="65:1"><type pos:start="50:1" pos:end="50:3"><name pos:start="50:1" pos:end="50:3">int</name></type> <name pos:start="50:5" pos:end="50:8">main</name><parameter_list pos:start="50:9" pos:end="50:10">()</parameter_list><block pos:start="50:11" pos:end="65:1">{<block_content pos:start="51:5" pos:end="64:13">
    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><call pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:11">freopen</name><argument_list pos:start="51:12" pos:end="51:32">(<argument pos:start="51:13" pos:end="51:21"><expr pos:start="51:13" pos:end="51:21"><literal type="string" pos:start="51:13" pos:end="51:21">"maze.in"</literal></expr></argument>,<argument pos:start="51:23" pos:end="51:25"><expr pos:start="51:23" pos:end="51:25"><literal type="string" pos:start="51:23" pos:end="51:25">"r"</literal></expr></argument>,<argument pos:start="51:27" pos:end="51:31"><expr pos:start="51:27" pos:end="51:31"><name pos:start="51:27" pos:end="51:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="52:5" pos:end="52:35"><expr pos:start="52:5" pos:end="52:34"><call pos:start="52:5" pos:end="52:34"><name pos:start="52:5" pos:end="52:11">freopen</name><argument_list pos:start="52:12" pos:end="52:34">(<argument pos:start="52:13" pos:end="52:22"><expr pos:start="52:13" pos:end="52:22"><literal type="string" pos:start="52:13" pos:end="52:22">"maze.out"</literal></expr></argument>,<argument pos:start="52:24" pos:end="52:26"><expr pos:start="52:24" pos:end="52:26"><literal type="string" pos:start="52:24" pos:end="52:26">"w"</literal></expr></argument>,<argument pos:start="52:28" pos:end="52:33"><expr pos:start="52:28" pos:end="52:33"><name pos:start="52:28" pos:end="52:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="53:5" pos:end="53:10"><decl pos:start="53:5" pos:end="53:9"><type pos:start="53:5" pos:end="53:7"><name pos:start="53:5" pos:end="53:7">int</name></type> <name pos:start="53:9" pos:end="53:9">T</name></decl>;</decl_stmt>
    <expr_stmt pos:start="54:5" pos:end="54:11"><expr pos:start="54:5" pos:end="54:10"><name pos:start="54:5" pos:end="54:7">cin</name><operator pos:start="54:8" pos:end="54:9">&gt;&gt;</operator><name pos:start="54:10" pos:end="54:10">T</name></expr>;</expr_stmt>
    <while pos:start="55:5" pos:end="63:5">while<condition pos:start="55:10" pos:end="55:14">(<expr pos:start="55:11" pos:end="55:13"><name pos:start="55:11" pos:end="55:11">T</name><operator pos:start="55:12" pos:end="55:13">--</operator></expr>)</condition><block pos:start="55:15" pos:end="63:5">{<block_content pos:start="56:9" pos:end="62:14">
        <expr_stmt pos:start="56:9" pos:end="56:34"><expr pos:start="56:9" pos:end="56:33"><call pos:start="56:9" pos:end="56:33"><name pos:start="56:9" pos:end="56:14">memset</name><argument_list pos:start="56:15" pos:end="56:33">(<argument pos:start="56:16" pos:end="56:18"><expr pos:start="56:16" pos:end="56:18"><name pos:start="56:16" pos:end="56:18">vis</name></expr></argument>,<argument pos:start="56:20" pos:end="56:20"><expr pos:start="56:20" pos:end="56:20"><literal type="number" pos:start="56:20" pos:end="56:20">0</literal></expr></argument>,<argument pos:start="56:22" pos:end="56:32"><expr pos:start="56:22" pos:end="56:32"><sizeof pos:start="56:22" pos:end="56:32">sizeof<argument_list pos:start="56:28" pos:end="56:32">(<argument pos:start="56:29" pos:end="56:31"><expr pos:start="56:29" pos:end="56:31"><name pos:start="56:29" pos:end="56:31">vis</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="57:9" pos:end="57:18"><expr pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:11">cin</name><operator pos:start="57:12" pos:end="57:13">&gt;&gt;</operator><name pos:start="57:14" pos:end="57:14">m</name><operator pos:start="57:15" pos:end="57:16">&gt;&gt;</operator><name pos:start="57:17" pos:end="57:17">n</name></expr>;</expr_stmt>
        <for pos:start="58:9" pos:end="60:9">for<control pos:start="58:12" pos:end="58:28">(<init pos:start="58:13" pos:end="58:20"><decl pos:start="58:13" pos:end="58:19"><type pos:start="58:13" pos:end="58:15"><name pos:start="58:13" pos:end="58:15">int</name></type> <name pos:start="58:17" pos:end="58:17">i</name><init pos:start="58:18" pos:end="58:19">=<expr pos:start="58:19" pos:end="58:19"><literal type="number" pos:start="58:19" pos:end="58:19">0</literal></expr></init></decl>;</init><condition pos:start="58:21" pos:end="58:24"><expr pos:start="58:21" pos:end="58:23"><name pos:start="58:21" pos:end="58:21">i</name><operator pos:start="58:22" pos:end="58:22">&lt;</operator><name pos:start="58:23" pos:end="58:23">n</name></expr>;</condition><incr pos:start="58:25" pos:end="58:27"><expr pos:start="58:25" pos:end="58:27"><name pos:start="58:25" pos:end="58:25">i</name><operator pos:start="58:26" pos:end="58:27">++</operator></expr></incr>)</control><block pos:start="58:29" pos:end="60:9">{<block_content pos:start="59:13" pos:end="59:22">
            <expr_stmt pos:start="59:13" pos:end="59:22"><expr pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:15">cin</name><operator pos:start="59:16" pos:end="59:17">&gt;&gt;</operator><name pos:start="59:18" pos:end="59:21"><name pos:start="59:18" pos:end="59:18">a</name><index pos:start="59:19" pos:end="59:21">[<expr pos:start="59:20" pos:end="59:20"><name pos:start="59:20" pos:end="59:20">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:11">cin</name><operator pos:start="61:12" pos:end="61:13">&gt;&gt;</operator><name pos:start="61:14" pos:end="61:14">k</name><operator pos:start="61:15" pos:end="61:16">&gt;&gt;</operator><name pos:start="61:17" pos:end="61:18">y1</name><operator pos:start="61:19" pos:end="61:20">&gt;&gt;</operator><name pos:start="61:21" pos:end="61:22">x1</name><operator pos:start="61:23" pos:end="61:24">&gt;&gt;</operator><name pos:start="61:25" pos:end="61:26">y2</name><operator pos:start="61:27" pos:end="61:28">&gt;&gt;</operator><name pos:start="61:29" pos:end="61:30">x2</name></expr>;</expr_stmt>
        <expr_stmt pos:start="62:9" pos:end="62:14"><expr pos:start="62:9" pos:end="62:13"><call pos:start="62:9" pos:end="62:13"><name pos:start="62:9" pos:end="62:11">bfs</name><argument_list pos:start="62:12" pos:end="62:13">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="64:5" pos:end="64:13">return <expr pos:start="64:12" pos:end="64:12"><literal type="number" pos:start="64:12" pos:end="64:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
