<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/555/555.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;vector&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<struct pos:start="4:1" pos:end="7:2">struct <name pos:start="4:8" pos:end="4:11">show</name> <block pos:start="4:13" pos:end="7:1">{<public type="default" pos:start="5:5" pos:end="6:10">
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:12">s</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:10"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">t</name></decl>;</decl_stmt>
</public>}</block>;</struct>
<function pos:start="8:1" pos:end="42:1"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:8">main</name><parameter_list pos:start="8:9" pos:end="8:10">()</parameter_list> <block pos:start="8:12" pos:end="42:1">{<block_content pos:start="9:5" pos:end="41:5">
    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>,<decl pos:start="9:11" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:11" pos:end="9:13">cnt</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:13"><expr pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:7">cin</name> <operator pos:start="10:9" pos:end="10:10">&gt;&gt;</operator> <name pos:start="10:12" pos:end="10:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:12"><expr pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:5">n</name> <operator pos:start="11:7" pos:end="11:8">*=</operator> <literal type="number" pos:start="11:10" pos:end="11:11">60</literal></expr>;</expr_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:19"><decl pos:start="12:5" pos:end="12:18"><type pos:start="12:5" pos:end="12:16"><name pos:start="12:5" pos:end="12:16"><name pos:start="12:5" pos:end="12:10">vector</name><argument_list type="generic" pos:start="12:11" pos:end="12:16">&lt;<argument pos:start="12:12" pos:end="12:15"><expr pos:start="12:12" pos:end="12:15"><name pos:start="12:12" pos:end="12:15">show</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="12:18" pos:end="12:18">b</name></decl>;</decl_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:11"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">show</name></type> <name pos:start="13:10" pos:end="13:10">x</name></decl>;</decl_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:14"><decl pos:start="14:5" pos:end="14:13"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:9">i</name> <init pos:start="14:11" pos:end="14:13">= <expr pos:start="14:13" pos:end="14:13"><literal type="number" pos:start="14:13" pos:end="14:13">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:10">y</name> <init pos:start="15:12" pos:end="15:18">= <expr pos:start="15:14" pos:end="15:18"><literal type="boolean" pos:start="15:14" pos:end="15:18">false</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="16:5" pos:end="41:5">while<condition pos:start="16:10" pos:end="16:21">(<expr pos:start="16:11" pos:end="16:20"><name pos:start="16:11" pos:end="16:13">cin</name> <operator pos:start="16:15" pos:end="16:16">&gt;&gt;</operator> <name pos:start="16:18" pos:end="16:20"><name pos:start="16:18" pos:end="16:18">x</name><operator pos:start="16:19" pos:end="16:19">.</operator><name pos:start="16:20" pos:end="16:20">s</name></name></expr>)</condition> <block pos:start="16:23" pos:end="41:5">{<block_content pos:start="17:9" pos:end="40:12">
        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if<condition pos:start="17:11" pos:end="17:33">(<expr pos:start="17:12" pos:end="17:32"><name pos:start="17:12" pos:end="17:14"><name pos:start="17:12" pos:end="17:12">x</name><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:14">s</name></name> <operator pos:start="17:16" pos:end="17:17">!=</operator> <literal type="string" pos:start="17:19" pos:end="17:32">"tingtingting"</literal></expr>)</condition> <block pos:start="17:35" pos:end="21:9">{<block_content pos:start="18:13" pos:end="20:27">
            <expr_stmt pos:start="18:13" pos:end="18:23"><expr pos:start="18:13" pos:end="18:22"><name pos:start="18:13" pos:end="18:15">cin</name> <operator pos:start="18:17" pos:end="18:18">&gt;&gt;</operator> <name pos:start="18:20" pos:end="18:22"><name pos:start="18:20" pos:end="18:20">x</name><operator pos:start="18:21" pos:end="18:21">.</operator><name pos:start="18:22" pos:end="18:22">t</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:23"><expr pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:15">cnt</name> <operator pos:start="19:17" pos:end="19:18">+=</operator> <name pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:20">x</name><operator pos:start="19:21" pos:end="19:21">.</operator><name pos:start="19:22" pos:end="19:22">t</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:27"><expr pos:start="20:13" pos:end="20:26"><call pos:start="20:13" pos:end="20:26"><name pos:start="20:13" pos:end="20:23"><name pos:start="20:13" pos:end="20:13">b</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:23">push_back</name></name><argument_list pos:start="20:24" pos:end="20:26">(<argument pos:start="20:25" pos:end="20:25"><expr pos:start="20:25" pos:end="20:25"><name pos:start="20:25" pos:end="20:25">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="22:9" pos:end="25:9"><if pos:start="22:9" pos:end="25:9">if<condition pos:start="22:11" pos:end="22:46">(<expr pos:start="22:12" pos:end="22:45"><name pos:start="22:12" pos:end="22:12">y</name> <operator pos:start="22:14" pos:end="22:15">==</operator> <literal type="boolean" pos:start="22:17" pos:end="22:20">true</literal> <operator pos:start="22:22" pos:end="22:23">&amp;&amp;</operator> <name pos:start="22:25" pos:end="22:27"><name pos:start="22:25" pos:end="22:25">x</name><operator pos:start="22:26" pos:end="22:26">.</operator><name pos:start="22:27" pos:end="22:27">s</name></name> <operator pos:start="22:29" pos:end="22:30">!=</operator> <literal type="string" pos:start="22:32" pos:end="22:45">"tingtingting"</literal></expr>)</condition> <block pos:start="22:48" pos:end="25:9">{<block_content pos:start="23:13" pos:end="24:21">
            <expr_stmt pos:start="23:13" pos:end="23:47"><expr pos:start="23:13" pos:end="23:46"><name pos:start="23:13" pos:end="23:16">cout</name> <operator pos:start="23:18" pos:end="23:19">&lt;&lt;</operator> <literal type="string" pos:start="23:21" pos:end="23:38">"Congratulations!"</literal> <operator pos:start="23:40" pos:end="23:41">&lt;&lt;</operator> <name pos:start="23:43" pos:end="23:46">endl</name></expr>;</expr_stmt>
            <return pos:start="24:13" pos:end="24:21">return <expr pos:start="24:20" pos:end="24:20"><literal type="number" pos:start="24:20" pos:end="24:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="26:9" pos:end="32:9"><if pos:start="26:9" pos:end="32:9">if<condition pos:start="26:11" pos:end="26:33">(<expr pos:start="26:12" pos:end="26:32"><name pos:start="26:12" pos:end="26:14"><name pos:start="26:12" pos:end="26:12">x</name><operator pos:start="26:13" pos:end="26:13">.</operator><name pos:start="26:14" pos:end="26:14">s</name></name> <operator pos:start="26:16" pos:end="26:17">==</operator> <literal type="string" pos:start="26:19" pos:end="26:32">"tingtingting"</literal></expr>)</condition> <block pos:start="26:35" pos:end="32:9">{<block_content pos:start="27:13" pos:end="31:23">
            <if_stmt pos:start="27:13" pos:end="30:13"><if pos:start="27:13" pos:end="30:13">if<condition pos:start="27:15" pos:end="27:25">(<expr pos:start="27:16" pos:end="27:24"><name pos:start="27:16" pos:end="27:16">y</name> <operator pos:start="27:18" pos:end="27:19">==</operator> <literal type="boolean" pos:start="27:21" pos:end="27:24">true</literal></expr>)</condition> <block pos:start="27:27" pos:end="30:13">{<block_content pos:start="28:17" pos:end="29:25">
                <expr_stmt pos:start="28:17" pos:end="28:42"><expr pos:start="28:17" pos:end="28:41"><name pos:start="28:17" pos:end="28:20">cout</name> <operator pos:start="28:22" pos:end="28:23">&lt;&lt;</operator> <literal type="string" pos:start="28:25" pos:end="28:33">"Hahaha."</literal> <operator pos:start="28:35" pos:end="28:36">&lt;&lt;</operator> <name pos:start="28:38" pos:end="28:41">endl</name></expr>;</expr_stmt>
                <return pos:start="29:17" pos:end="29:25">return <expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="31:13" pos:end="31:23"><expr pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:15">cin</name> <operator pos:start="31:17" pos:end="31:18">&gt;&gt;</operator> <name pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:20">x</name><operator pos:start="31:21" pos:end="31:21">.</operator><name pos:start="31:22" pos:end="31:22">t</name></name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="33:9" pos:end="35:9"><if pos:start="33:9" pos:end="35:9">if<condition pos:start="33:11" pos:end="33:43">(<expr pos:start="33:12" pos:end="33:42"><name pos:start="33:12" pos:end="33:14"><name pos:start="33:12" pos:end="33:12">x</name><operator pos:start="33:13" pos:end="33:13">.</operator><name pos:start="33:14" pos:end="33:14">s</name></name> <operator pos:start="33:16" pos:end="33:17">==</operator> <literal type="string" pos:start="33:19" pos:end="33:30">"kaomianjin"</literal> <operator pos:start="33:32" pos:end="33:33">&amp;&amp;</operator> <name pos:start="33:35" pos:end="33:37">cnt</name> <operator pos:start="33:39" pos:end="33:40">&lt;=</operator> <name pos:start="33:42" pos:end="33:42">n</name></expr>)</condition> <block pos:start="33:45" pos:end="35:9">{<block_content pos:start="34:13" pos:end="34:21">
            <expr_stmt pos:start="34:13" pos:end="34:21"><expr pos:start="34:13" pos:end="34:20"><name pos:start="34:13" pos:end="34:13">y</name> <operator pos:start="34:15" pos:end="34:15">=</operator> <literal type="boolean" pos:start="34:17" pos:end="34:20">true</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="36:9" pos:end="39:9"><if pos:start="36:9" pos:end="39:9">if<condition pos:start="36:11" pos:end="36:42">(<expr pos:start="36:12" pos:end="36:41"><name pos:start="36:12" pos:end="36:14"><name pos:start="36:12" pos:end="36:12">x</name><operator pos:start="36:13" pos:end="36:13">.</operator><name pos:start="36:14" pos:end="36:14">s</name></name> <operator pos:start="36:16" pos:end="36:17">==</operator> <literal type="string" pos:start="36:19" pos:end="36:30">"kaomianjin"</literal> <operator pos:start="36:32" pos:end="36:33">&amp;&amp;</operator> <name pos:start="36:35" pos:end="36:37">cnt</name> <operator pos:start="36:39" pos:end="36:39">&gt;</operator> <name pos:start="36:41" pos:end="36:41">n</name></expr>)</condition> <block pos:start="36:44" pos:end="39:9">{<block_content pos:start="37:13" pos:end="38:21">
            <expr_stmt pos:start="37:13" pos:end="37:45"><expr pos:start="37:13" pos:end="37:44"><name pos:start="37:13" pos:end="37:16">cout</name> <operator pos:start="37:18" pos:end="37:19">&lt;&lt;</operator> <literal type="string" pos:start="37:21" pos:end="37:36">"Unfortunately."</literal> <operator pos:start="37:38" pos:end="37:39">&lt;&lt;</operator> <name pos:start="37:41" pos:end="37:44">endl</name></expr>;</expr_stmt>
            <return pos:start="38:13" pos:end="38:21">return <expr pos:start="38:20" pos:end="38:20"><literal type="number" pos:start="38:20" pos:end="38:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="40:9" pos:end="40:12"><expr pos:start="40:9" pos:end="40:11"><name pos:start="40:9" pos:end="40:9">i</name><operator pos:start="40:10" pos:end="40:11">++</operator></expr>;</expr_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>
</unit>
