<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1123/1123.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="69:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="69:1">{<block_content pos:start="4:5" pos:end="68:15">
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:11"><expr pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:7">cin</name><operator pos:start="5:8" pos:end="5:9">&gt;&gt;</operator><name pos:start="5:10" pos:end="5:10">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:19"><decl pos:start="6:5" pos:end="6:16"><type pos:start="6:5" pos:end="6:14"><name pos:start="6:5" pos:end="6:14"><name pos:start="6:5" pos:end="6:9">stack</name><argument_list type="generic" pos:start="6:10" pos:end="6:14">&lt;<argument pos:start="6:11" pos:end="6:13"><expr pos:start="6:11" pos:end="6:13"><name pos:start="6:11" pos:end="6:13">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:16" pos:end="6:16">a</name></decl>,<decl pos:start="6:18" pos:end="6:18"><type ref="prev" pos:start="6:5" pos:end="6:14"/><name pos:start="6:18" pos:end="6:18">b</name></decl>;</decl_stmt>
    <while pos:start="7:5" pos:end="51:5">while<condition pos:start="7:10" pos:end="7:14">(<expr pos:start="7:11" pos:end="7:13"><name pos:start="7:11" pos:end="7:11">n</name><operator pos:start="7:12" pos:end="7:13">--</operator></expr>)</condition><block pos:start="7:15" pos:end="51:5">{<block_content pos:start="8:9" pos:end="50:9">
        <decl_stmt pos:start="8:9" pos:end="8:15"><decl pos:start="8:9" pos:end="8:14"><type pos:start="8:9" pos:end="8:12"><name pos:start="8:9" pos:end="8:12">char</name></type> <name pos:start="8:14" pos:end="8:14">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:15"><expr pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:11">cin</name><operator pos:start="9:12" pos:end="9:13">&gt;&gt;</operator><name pos:start="9:14" pos:end="9:14">s</name></expr>;</expr_stmt>
        <if_stmt pos:start="10:9" pos:end="50:9"><if pos:start="10:9" pos:end="30:9">if<condition pos:start="10:11" pos:end="10:18">(<expr pos:start="10:12" pos:end="10:17"><name pos:start="10:12" pos:end="10:12">s</name><operator pos:start="10:13" pos:end="10:14">==</operator><literal type="char" pos:start="10:15" pos:end="10:17">'A'</literal></expr>)</condition><block pos:start="10:19" pos:end="30:9">{<block_content pos:start="11:13" pos:end="29:13">
            <decl_stmt pos:start="11:13" pos:end="11:19"><decl pos:start="11:13" pos:end="11:18"><type pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">char</name></type> <name pos:start="11:18" pos:end="11:18">x</name></decl>;</decl_stmt>
            <expr_stmt pos:start="12:13" pos:end="12:19"><expr pos:start="12:13" pos:end="12:18"><name pos:start="12:13" pos:end="12:15">cin</name><operator pos:start="12:16" pos:end="12:17">&gt;&gt;</operator><name pos:start="12:18" pos:end="12:18">x</name></expr>;</expr_stmt>
            <if_stmt pos:start="13:13" pos:end="29:13"><if pos:start="13:13" pos:end="17:13">if<condition pos:start="13:15" pos:end="13:22">(<expr pos:start="13:16" pos:end="13:21"><name pos:start="13:16" pos:end="13:16">x</name><operator pos:start="13:17" pos:end="13:18">==</operator><literal type="char" pos:start="13:19" pos:end="13:21">'I'</literal></expr>)</condition><block pos:start="13:23" pos:end="17:13">{<block_content pos:start="14:17" pos:end="16:29">
                <decl_stmt pos:start="14:17" pos:end="14:25"><decl pos:start="14:17" pos:end="14:24"><type pos:start="14:17" pos:end="14:19"><name pos:start="14:17" pos:end="14:19">int</name></type> <name pos:start="14:21" pos:end="14:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="15:17" pos:end="15:26"><expr pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:19">cin</name><operator pos:start="15:20" pos:end="15:21">&gt;&gt;</operator><name pos:start="15:22" pos:end="15:25">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="16:17" pos:end="16:29"><expr pos:start="16:17" pos:end="16:28"><call pos:start="16:17" pos:end="16:28"><name pos:start="16:17" pos:end="16:22"><name pos:start="16:17" pos:end="16:17">a</name><operator pos:start="16:18" pos:end="16:18">.</operator><name pos:start="16:19" pos:end="16:22">push</name></name><argument_list pos:start="16:23" pos:end="16:28">(<argument pos:start="16:24" pos:end="16:27"><expr pos:start="16:24" pos:end="16:27"><name pos:start="16:24" pos:end="16:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="17:14" pos:end="21:13">else if<condition pos:start="17:21" pos:end="17:28">(<expr pos:start="17:22" pos:end="17:27"><name pos:start="17:22" pos:end="17:22">x</name><operator pos:start="17:23" pos:end="17:24">==</operator><literal type="char" pos:start="17:25" pos:end="17:27">'D'</literal></expr>)</condition><block pos:start="17:29" pos:end="21:13">{<block_content pos:start="18:17" pos:end="20:17">
                <if_stmt pos:start="18:17" pos:end="20:17"><if pos:start="18:17" pos:end="20:17">if<condition pos:start="18:19" pos:end="18:30">(<expr pos:start="18:20" pos:end="18:29"><operator pos:start="18:20" pos:end="18:20">!</operator><call pos:start="18:21" pos:end="18:29"><name pos:start="18:21" pos:end="18:27"><name pos:start="18:21" pos:end="18:21">a</name><operator pos:start="18:22" pos:end="18:22">.</operator><name pos:start="18:23" pos:end="18:27">empty</name></name><argument_list pos:start="18:28" pos:end="18:29">()</argument_list></call></expr>)</condition><block pos:start="18:31" pos:end="20:17">{<block_content pos:start="19:21" pos:end="19:28">
                    <expr_stmt pos:start="19:21" pos:end="19:28"><expr pos:start="19:21" pos:end="19:27"><call pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">a</name><operator pos:start="19:22" pos:end="19:22">.</operator><name pos:start="19:23" pos:end="19:25">pop</name></name><argument_list pos:start="19:26" pos:end="19:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if><else pos:start="21:14" pos:end="29:13">else<block pos:start="21:18" pos:end="29:13">{<block_content pos:start="22:17" pos:end="28:17">
                <decl_stmt pos:start="22:17" pos:end="22:28"><decl pos:start="22:17" pos:end="22:27"><type pos:start="22:17" pos:end="22:26"><name pos:start="22:17" pos:end="22:26"><name pos:start="22:17" pos:end="22:21">stack</name><argument_list type="generic" pos:start="22:22" pos:end="22:26">&lt;<argument pos:start="22:23" pos:end="22:25"><expr pos:start="22:23" pos:end="22:25"><name pos:start="22:23" pos:end="22:25">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="22:27" pos:end="22:27">c</name></decl>;</decl_stmt>
                <while pos:start="23:17" pos:end="25:17">while<condition pos:start="23:22" pos:end="23:33">(<expr pos:start="23:23" pos:end="23:32"><operator pos:start="23:23" pos:end="23:23">!</operator><call pos:start="23:24" pos:end="23:32"><name pos:start="23:24" pos:end="23:30"><name pos:start="23:24" pos:end="23:24">b</name><operator pos:start="23:25" pos:end="23:25">.</operator><name pos:start="23:26" pos:end="23:30">empty</name></name><argument_list pos:start="23:31" pos:end="23:32">()</argument_list></call></expr>)</condition><block pos:start="23:34" pos:end="25:17">{<block_content pos:start="24:21" pos:end="24:36">
                    <expr_stmt pos:start="24:21" pos:end="24:36"><expr pos:start="24:21" pos:end="24:35"><call pos:start="24:21" pos:end="24:35"><name pos:start="24:21" pos:end="24:26"><name pos:start="24:21" pos:end="24:21">c</name><operator pos:start="24:22" pos:end="24:22">.</operator><name pos:start="24:23" pos:end="24:26">push</name></name><argument_list pos:start="24:27" pos:end="24:35">(<argument pos:start="24:28" pos:end="24:34"><expr pos:start="24:28" pos:end="24:34"><call pos:start="24:28" pos:end="24:34"><name pos:start="24:28" pos:end="24:32"><name pos:start="24:28" pos:end="24:28">b</name><operator pos:start="24:29" pos:end="24:29">.</operator><name pos:start="24:30" pos:end="24:32">top</name></name><argument_list pos:start="24:33" pos:end="24:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="26:17" pos:end="28:17">while<condition pos:start="26:22" pos:end="26:33">(<expr pos:start="26:23" pos:end="26:32"><operator pos:start="26:23" pos:end="26:23">!</operator><call pos:start="26:24" pos:end="26:32"><name pos:start="26:24" pos:end="26:30"><name pos:start="26:24" pos:end="26:24">c</name><operator pos:start="26:25" pos:end="26:25">.</operator><name pos:start="26:26" pos:end="26:30">empty</name></name><argument_list pos:start="26:31" pos:end="26:32">()</argument_list></call></expr>)</condition><block pos:start="26:34" pos:end="28:17">{<block_content pos:start="27:21" pos:end="27:36">
                    <expr_stmt pos:start="27:21" pos:end="27:36"><expr pos:start="27:21" pos:end="27:35"><call pos:start="27:21" pos:end="27:35"><name pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:21">a</name><operator pos:start="27:22" pos:end="27:22">.</operator><name pos:start="27:23" pos:end="27:26">push</name></name><argument_list pos:start="27:27" pos:end="27:35">(<argument pos:start="27:28" pos:end="27:34"><expr pos:start="27:28" pos:end="27:34"><call pos:start="27:28" pos:end="27:34"><name pos:start="27:28" pos:end="27:32"><name pos:start="27:28" pos:end="27:28">c</name><operator pos:start="27:29" pos:end="27:29">.</operator><name pos:start="27:30" pos:end="27:32">top</name></name><argument_list pos:start="27:33" pos:end="27:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if><else pos:start="30:10" pos:end="50:9">else<block pos:start="30:14" pos:end="50:9">{<block_content pos:start="31:13" pos:end="49:13">
            <decl_stmt pos:start="31:13" pos:end="31:19"><decl pos:start="31:13" pos:end="31:18"><type pos:start="31:13" pos:end="31:16"><name pos:start="31:13" pos:end="31:16">char</name></type> <name pos:start="31:18" pos:end="31:18">x</name></decl>;</decl_stmt>
            <expr_stmt pos:start="32:13" pos:end="32:19"><expr pos:start="32:13" pos:end="32:18"><name pos:start="32:13" pos:end="32:15">cin</name><operator pos:start="32:16" pos:end="32:17">&gt;&gt;</operator><name pos:start="32:18" pos:end="32:18">x</name></expr>;</expr_stmt>
            <if_stmt pos:start="33:13" pos:end="49:13"><if pos:start="33:13" pos:end="37:13">if<condition pos:start="33:15" pos:end="33:22">(<expr pos:start="33:16" pos:end="33:21"><name pos:start="33:16" pos:end="33:16">x</name><operator pos:start="33:17" pos:end="33:18">==</operator><literal type="char" pos:start="33:19" pos:end="33:21">'I'</literal></expr>)</condition><block pos:start="33:23" pos:end="37:13">{<block_content pos:start="34:17" pos:end="36:29">
                <decl_stmt pos:start="34:17" pos:end="34:25"><decl pos:start="34:17" pos:end="34:24"><type pos:start="34:17" pos:end="34:19"><name pos:start="34:17" pos:end="34:19">int</name></type> <name pos:start="34:21" pos:end="34:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="35:17" pos:end="35:26"><expr pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:19">cin</name><operator pos:start="35:20" pos:end="35:21">&gt;&gt;</operator><name pos:start="35:22" pos:end="35:25">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="36:17" pos:end="36:29"><expr pos:start="36:17" pos:end="36:28"><call pos:start="36:17" pos:end="36:28"><name pos:start="36:17" pos:end="36:22"><name pos:start="36:17" pos:end="36:17">b</name><operator pos:start="36:18" pos:end="36:18">.</operator><name pos:start="36:19" pos:end="36:22">push</name></name><argument_list pos:start="36:23" pos:end="36:28">(<argument pos:start="36:24" pos:end="36:27"><expr pos:start="36:24" pos:end="36:27"><name pos:start="36:24" pos:end="36:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="37:14" pos:end="41:13">else if<condition pos:start="37:21" pos:end="37:28">(<expr pos:start="37:22" pos:end="37:27"><name pos:start="37:22" pos:end="37:22">x</name><operator pos:start="37:23" pos:end="37:24">==</operator><literal type="char" pos:start="37:25" pos:end="37:27">'D'</literal></expr>)</condition><block pos:start="37:29" pos:end="41:13">{<block_content pos:start="38:17" pos:end="40:17">
                <if_stmt pos:start="38:17" pos:end="40:17"><if pos:start="38:17" pos:end="40:17">if<condition pos:start="38:19" pos:end="38:30">(<expr pos:start="38:20" pos:end="38:29"><operator pos:start="38:20" pos:end="38:20">!</operator><call pos:start="38:21" pos:end="38:29"><name pos:start="38:21" pos:end="38:27"><name pos:start="38:21" pos:end="38:21">b</name><operator pos:start="38:22" pos:end="38:22">.</operator><name pos:start="38:23" pos:end="38:27">empty</name></name><argument_list pos:start="38:28" pos:end="38:29">()</argument_list></call></expr>)</condition><block pos:start="38:31" pos:end="40:17">{<block_content pos:start="39:21" pos:end="39:28">
                    <expr_stmt pos:start="39:21" pos:end="39:28"><expr pos:start="39:21" pos:end="39:27"><call pos:start="39:21" pos:end="39:27"><name pos:start="39:21" pos:end="39:25"><name pos:start="39:21" pos:end="39:21">b</name><operator pos:start="39:22" pos:end="39:22">.</operator><name pos:start="39:23" pos:end="39:25">pop</name></name><argument_list pos:start="39:26" pos:end="39:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if><else pos:start="41:14" pos:end="49:13">else<block pos:start="41:18" pos:end="49:13">{<block_content pos:start="42:17" pos:end="48:17">
                <decl_stmt pos:start="42:17" pos:end="42:28"><decl pos:start="42:17" pos:end="42:27"><type pos:start="42:17" pos:end="42:26"><name pos:start="42:17" pos:end="42:26"><name pos:start="42:17" pos:end="42:21">stack</name><argument_list type="generic" pos:start="42:22" pos:end="42:26">&lt;<argument pos:start="42:23" pos:end="42:25"><expr pos:start="42:23" pos:end="42:25"><name pos:start="42:23" pos:end="42:25">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="42:27" pos:end="42:27">c</name></decl>;</decl_stmt>
                <while pos:start="43:17" pos:end="45:17">while<condition pos:start="43:22" pos:end="43:33">(<expr pos:start="43:23" pos:end="43:32"><operator pos:start="43:23" pos:end="43:23">!</operator><call pos:start="43:24" pos:end="43:32"><name pos:start="43:24" pos:end="43:30"><name pos:start="43:24" pos:end="43:24">a</name><operator pos:start="43:25" pos:end="43:25">.</operator><name pos:start="43:26" pos:end="43:30">empty</name></name><argument_list pos:start="43:31" pos:end="43:32">()</argument_list></call></expr>)</condition><block pos:start="43:34" pos:end="45:17">{<block_content pos:start="44:21" pos:end="44:36">
                    <expr_stmt pos:start="44:21" pos:end="44:36"><expr pos:start="44:21" pos:end="44:35"><call pos:start="44:21" pos:end="44:35"><name pos:start="44:21" pos:end="44:26"><name pos:start="44:21" pos:end="44:21">c</name><operator pos:start="44:22" pos:end="44:22">.</operator><name pos:start="44:23" pos:end="44:26">push</name></name><argument_list pos:start="44:27" pos:end="44:35">(<argument pos:start="44:28" pos:end="44:34"><expr pos:start="44:28" pos:end="44:34"><call pos:start="44:28" pos:end="44:34"><name pos:start="44:28" pos:end="44:32"><name pos:start="44:28" pos:end="44:28">a</name><operator pos:start="44:29" pos:end="44:29">.</operator><name pos:start="44:30" pos:end="44:32">top</name></name><argument_list pos:start="44:33" pos:end="44:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="46:17" pos:end="48:17">while<condition pos:start="46:22" pos:end="46:33">(<expr pos:start="46:23" pos:end="46:32"><operator pos:start="46:23" pos:end="46:23">!</operator><call pos:start="46:24" pos:end="46:32"><name pos:start="46:24" pos:end="46:30"><name pos:start="46:24" pos:end="46:24">c</name><operator pos:start="46:25" pos:end="46:25">.</operator><name pos:start="46:26" pos:end="46:30">empty</name></name><argument_list pos:start="46:31" pos:end="46:32">()</argument_list></call></expr>)</condition><block pos:start="46:34" pos:end="48:17">{<block_content pos:start="47:21" pos:end="47:36">
                    <expr_stmt pos:start="47:21" pos:end="47:36"><expr pos:start="47:21" pos:end="47:35"><call pos:start="47:21" pos:end="47:35"><name pos:start="47:21" pos:end="47:26"><name pos:start="47:21" pos:end="47:21">b</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:26">push</name></name><argument_list pos:start="47:27" pos:end="47:35">(<argument pos:start="47:28" pos:end="47:34"><expr pos:start="47:28" pos:end="47:34"><call pos:start="47:28" pos:end="47:34"><name pos:start="47:28" pos:end="47:32"><name pos:start="47:28" pos:end="47:28">c</name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:32">top</name></name><argument_list pos:start="47:33" pos:end="47:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <decl_stmt pos:start="52:5" pos:end="52:17"><decl pos:start="52:5" pos:end="52:16"><type pos:start="52:5" pos:end="52:14"><name pos:start="52:5" pos:end="52:14"><name pos:start="52:5" pos:end="52:9">stack</name><argument_list type="generic" pos:start="52:10" pos:end="52:14">&lt;<argument pos:start="52:11" pos:end="52:13"><expr pos:start="52:11" pos:end="52:13"><name pos:start="52:11" pos:end="52:13">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="52:16" pos:end="52:16">c</name></decl>;</decl_stmt>
    <while pos:start="53:5" pos:end="55:5">while<condition pos:start="53:10" pos:end="53:21">(<expr pos:start="53:11" pos:end="53:20"><operator pos:start="53:11" pos:end="53:11">!</operator><call pos:start="53:12" pos:end="53:20"><name pos:start="53:12" pos:end="53:18"><name pos:start="53:12" pos:end="53:12">a</name><operator pos:start="53:13" pos:end="53:13">.</operator><name pos:start="53:14" pos:end="53:18">empty</name></name><argument_list pos:start="53:19" pos:end="53:20">()</argument_list></call></expr>)</condition><block pos:start="53:22" pos:end="55:5">{<block_content pos:start="54:9" pos:end="54:24">
        <expr_stmt pos:start="54:9" pos:end="54:24"><expr pos:start="54:9" pos:end="54:23"><call pos:start="54:9" pos:end="54:23"><name pos:start="54:9" pos:end="54:14"><name pos:start="54:9" pos:end="54:9">c</name><operator pos:start="54:10" pos:end="54:10">.</operator><name pos:start="54:11" pos:end="54:14">push</name></name><argument_list pos:start="54:15" pos:end="54:23">(<argument pos:start="54:16" pos:end="54:22"><expr pos:start="54:16" pos:end="54:22"><call pos:start="54:16" pos:end="54:22"><name pos:start="54:16" pos:end="54:20"><name pos:start="54:16" pos:end="54:16">a</name><operator pos:start="54:17" pos:end="54:17">.</operator><name pos:start="54:18" pos:end="54:20">top</name></name><argument_list pos:start="54:21" pos:end="54:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="56:5" pos:end="59:5">while<condition pos:start="56:10" pos:end="56:21">(<expr pos:start="56:11" pos:end="56:20"><operator pos:start="56:11" pos:end="56:11">!</operator><call pos:start="56:12" pos:end="56:20"><name pos:start="56:12" pos:end="56:18"><name pos:start="56:12" pos:end="56:12">c</name><operator pos:start="56:13" pos:end="56:13">.</operator><name pos:start="56:14" pos:end="56:18">empty</name></name><argument_list pos:start="56:19" pos:end="56:20">()</argument_list></call></expr>)</condition><block pos:start="56:22" pos:end="59:5">{<block_content pos:start="57:9" pos:end="58:16">
        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:12">cout</name><operator pos:start="57:13" pos:end="57:14">&lt;&lt;</operator><call pos:start="57:15" pos:end="57:21"><name pos:start="57:15" pos:end="57:19"><name pos:start="57:15" pos:end="57:15">c</name><operator pos:start="57:16" pos:end="57:16">.</operator><name pos:start="57:17" pos:end="57:19">top</name></name><argument_list pos:start="57:20" pos:end="57:21">()</argument_list></call><operator pos:start="57:22" pos:end="57:23">&lt;&lt;</operator><literal type="string" pos:start="57:24" pos:end="57:26">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="58:9" pos:end="58:16"><expr pos:start="58:9" pos:end="58:15"><call pos:start="58:9" pos:end="58:15"><name pos:start="58:9" pos:end="58:13"><name pos:start="58:9" pos:end="58:9">c</name><operator pos:start="58:10" pos:end="58:10">.</operator><name pos:start="58:11" pos:end="58:13">pop</name></name><argument_list pos:start="58:14" pos:end="58:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="60:5" pos:end="60:15"><expr pos:start="60:5" pos:end="60:14"><name pos:start="60:5" pos:end="60:8">cout</name><operator pos:start="60:9" pos:end="60:10">&lt;&lt;</operator><name pos:start="60:11" pos:end="60:14">endl</name></expr>;</expr_stmt>
    <while pos:start="61:5" pos:end="63:5">while<condition pos:start="61:10" pos:end="61:21">(<expr pos:start="61:11" pos:end="61:20"><operator pos:start="61:11" pos:end="61:11">!</operator><call pos:start="61:12" pos:end="61:20"><name pos:start="61:12" pos:end="61:18"><name pos:start="61:12" pos:end="61:12">b</name><operator pos:start="61:13" pos:end="61:13">.</operator><name pos:start="61:14" pos:end="61:18">empty</name></name><argument_list pos:start="61:19" pos:end="61:20">()</argument_list></call></expr>)</condition><block pos:start="61:22" pos:end="63:5">{<block_content pos:start="62:9" pos:end="62:24">
        <expr_stmt pos:start="62:9" pos:end="62:24"><expr pos:start="62:9" pos:end="62:23"><call pos:start="62:9" pos:end="62:23"><name pos:start="62:9" pos:end="62:14"><name pos:start="62:9" pos:end="62:9">c</name><operator pos:start="62:10" pos:end="62:10">.</operator><name pos:start="62:11" pos:end="62:14">push</name></name><argument_list pos:start="62:15" pos:end="62:23">(<argument pos:start="62:16" pos:end="62:22"><expr pos:start="62:16" pos:end="62:22"><call pos:start="62:16" pos:end="62:22"><name pos:start="62:16" pos:end="62:20"><name pos:start="62:16" pos:end="62:16">b</name><operator pos:start="62:17" pos:end="62:17">.</operator><name pos:start="62:18" pos:end="62:20">top</name></name><argument_list pos:start="62:21" pos:end="62:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="64:5" pos:end="67:5">while<condition pos:start="64:10" pos:end="64:21">(<expr pos:start="64:11" pos:end="64:20"><operator pos:start="64:11" pos:end="64:11">!</operator><call pos:start="64:12" pos:end="64:20"><name pos:start="64:12" pos:end="64:18"><name pos:start="64:12" pos:end="64:12">c</name><operator pos:start="64:13" pos:end="64:13">.</operator><name pos:start="64:14" pos:end="64:18">empty</name></name><argument_list pos:start="64:19" pos:end="64:20">()</argument_list></call></expr>)</condition><block pos:start="64:22" pos:end="67:5">{<block_content pos:start="65:9" pos:end="66:16">
        <expr_stmt pos:start="65:9" pos:end="65:27"><expr pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:12">cout</name><operator pos:start="65:13" pos:end="65:14">&lt;&lt;</operator><call pos:start="65:15" pos:end="65:21"><name pos:start="65:15" pos:end="65:19"><name pos:start="65:15" pos:end="65:15">c</name><operator pos:start="65:16" pos:end="65:16">.</operator><name pos:start="65:17" pos:end="65:19">top</name></name><argument_list pos:start="65:20" pos:end="65:21">()</argument_list></call><operator pos:start="65:22" pos:end="65:23">&lt;&lt;</operator><literal type="string" pos:start="65:24" pos:end="65:26">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="66:9" pos:end="66:16"><expr pos:start="66:9" pos:end="66:15"><call pos:start="66:9" pos:end="66:15"><name pos:start="66:9" pos:end="66:13"><name pos:start="66:9" pos:end="66:9">c</name><operator pos:start="66:10" pos:end="66:10">.</operator><name pos:start="66:11" pos:end="66:13">pop</name></name><argument_list pos:start="66:14" pos:end="66:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="68:5" pos:end="68:15"><expr pos:start="68:5" pos:end="68:14"><name pos:start="68:5" pos:end="68:8">cout</name><operator pos:start="68:9" pos:end="68:10">&lt;&lt;</operator><name pos:start="68:11" pos:end="68:14">endl</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
