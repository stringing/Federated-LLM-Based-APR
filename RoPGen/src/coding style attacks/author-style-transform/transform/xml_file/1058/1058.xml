<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1058/1058.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:16">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:17">&lt;cstring&gt;</cpp:file></cpp:include>
<decl_stmt pos:start="3:1" pos:end="3:25"><decl pos:start="3:1" pos:end="3:24"><type pos:start="3:1" pos:end="3:9"><specifier pos:start="3:1" pos:end="3:5">const</specifier> <name pos:start="3:7" pos:end="3:9">int</name></type> <name pos:start="3:11" pos:end="3:14">MAXN</name> <init pos:start="3:16" pos:end="3:24">= <expr pos:start="3:18" pos:end="3:24"><literal type="number" pos:start="3:18" pos:end="3:22">2e5</literal> <operator pos:start="3:22" pos:end="3:22">+</operator> <literal type="number" pos:start="3:24" pos:end="3:24">5</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:6"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:13"><decl pos:start="5:1" pos:end="5:12"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">char</name></type> <name pos:start="5:6" pos:end="5:12"><name pos:start="5:6" pos:end="5:6">s</name><index pos:start="5:7" pos:end="5:12">[<expr pos:start="5:8" pos:end="5:11"><name pos:start="5:8" pos:end="5:11">MAXN</name></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="35:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">bool</name></type> <name pos:start="6:6" pos:end="6:10">judge</name><parameter_list pos:start="6:11" pos:end="6:12">()</parameter_list><block pos:start="6:13" pos:end="35:1">{<block_content pos:start="7:5" pos:end="34:16">
    <if_stmt pos:start="7:5" pos:end="7:32"><if pos:start="7:5" pos:end="7:32">if<condition pos:start="7:7" pos:end="7:18">(<expr pos:start="7:8" pos:end="7:17"><name pos:start="7:8" pos:end="7:8">n</name> <operator pos:start="7:10" pos:end="7:10">%</operator> <literal type="number" pos:start="7:12" pos:end="7:12">8</literal> <operator pos:start="7:14" pos:end="7:15">!=</operator> <literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr>)</condition><block type="pseudo" pos:start="7:20" pos:end="7:32"><block_content pos:start="7:20" pos:end="7:32"> <return pos:start="7:20" pos:end="7:32">return <expr pos:start="7:27" pos:end="7:31"><literal type="boolean" pos:start="7:27" pos:end="7:31">false</literal></expr>;</return></block_content></block></if></if_stmt>
    <for pos:start="8:5" pos:end="12:5">for<control pos:start="8:8" pos:end="8:31">(<init pos:start="8:9" pos:end="8:18"><decl pos:start="8:9" pos:end="8:17"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:13">i</name> <init pos:start="8:15" pos:end="8:17">= <expr pos:start="8:17" pos:end="8:17"><literal type="number" pos:start="8:17" pos:end="8:17">1</literal></expr></init></decl>;</init> <condition pos:start="8:20" pos:end="8:26"><expr pos:start="8:20" pos:end="8:25"><name pos:start="8:20" pos:end="8:20">i</name> <operator pos:start="8:22" pos:end="8:23">&lt;=</operator> <name pos:start="8:25" pos:end="8:25">n</name></expr>;</condition> <incr pos:start="8:28" pos:end="8:30"><expr pos:start="8:28" pos:end="8:30"><operator pos:start="8:28" pos:end="8:29">++</operator><name pos:start="8:30" pos:end="8:30">i</name></expr></incr>)</control><block pos:start="8:32" pos:end="12:5">{<block_content pos:start="9:9" pos:end="11:9">
        <if_stmt pos:start="9:9" pos:end="11:9"><if pos:start="9:9" pos:end="11:9">if<condition pos:start="9:11" pos:end="9:38">(<expr pos:start="9:12" pos:end="9:37"><name pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:12">s</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><name pos:start="9:14" pos:end="9:14">i</name></expr>]</index></name> <operator pos:start="9:17" pos:end="9:18">!=</operator> <literal type="char" pos:start="9:20" pos:end="9:22">'0'</literal> <operator pos:start="9:24" pos:end="9:25">&amp;&amp;</operator> <name pos:start="9:27" pos:end="9:30"><name pos:start="9:27" pos:end="9:27">s</name><index pos:start="9:28" pos:end="9:30">[<expr pos:start="9:29" pos:end="9:29"><name pos:start="9:29" pos:end="9:29">i</name></expr>]</index></name> <operator pos:start="9:32" pos:end="9:33">!=</operator> <literal type="char" pos:start="9:35" pos:end="9:37">'1'</literal></expr>)</condition><block pos:start="9:39" pos:end="11:9">{<block_content pos:start="10:13" pos:end="10:25">
            <return pos:start="10:13" pos:end="10:25">return <expr pos:start="10:20" pos:end="10:24"><literal type="boolean" pos:start="10:20" pos:end="10:24">false</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="13:5" pos:end="33:5">for<control pos:start="13:8" pos:end="13:34">(<init pos:start="13:9" pos:end="13:18"><decl pos:start="13:9" pos:end="13:17"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name> <init pos:start="13:15" pos:end="13:17">= <expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr></init></decl>;</init> <condition pos:start="13:20" pos:end="13:26"><expr pos:start="13:20" pos:end="13:25"><name pos:start="13:20" pos:end="13:20">i</name> <operator pos:start="13:22" pos:end="13:23">&lt;=</operator> <name pos:start="13:25" pos:end="13:25">n</name></expr>;</condition> <incr pos:start="13:28" pos:end="13:33"><expr pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:28">i</name> <operator pos:start="13:30" pos:end="13:31">+=</operator> <literal type="number" pos:start="13:33" pos:end="13:33">8</literal></expr></incr>)</control><block pos:start="13:35" pos:end="33:5">{<block_content pos:start="14:9" pos:end="32:9">
        <if_stmt pos:start="14:9" pos:end="17:9"><if pos:start="14:9" pos:end="17:9">if<condition pos:start="14:11" pos:end="14:74">(<expr pos:start="14:12" pos:end="14:73"><call pos:start="14:12" pos:end="14:35"><name pos:start="14:12" pos:end="14:18">strncmp</name><argument_list pos:start="14:19" pos:end="14:35">(<argument pos:start="14:20" pos:end="14:24"><expr pos:start="14:20" pos:end="14:24"><name pos:start="14:20" pos:end="14:20">s</name> <operator pos:start="14:22" pos:end="14:22">+</operator> <name pos:start="14:24" pos:end="14:24">i</name></expr></argument>, <argument pos:start="14:27" pos:end="14:31"><expr pos:start="14:27" pos:end="14:31"><literal type="string" pos:start="14:27" pos:end="14:31">"111"</literal></expr></argument>, <argument pos:start="14:34" pos:end="14:34"><expr pos:start="14:34" pos:end="14:34"><literal type="number" pos:start="14:34" pos:end="14:34">3</literal></expr></argument>)</argument_list></call> <operator pos:start="14:37" pos:end="14:38">==</operator> <literal type="number" pos:start="14:40" pos:end="14:40">0</literal> <operator pos:start="14:42" pos:end="14:43">||</operator> <call pos:start="14:45" pos:end="14:68"><name pos:start="14:45" pos:end="14:51">strncmp</name><argument_list pos:start="14:52" pos:end="14:68">(<argument pos:start="14:53" pos:end="14:57"><expr pos:start="14:53" pos:end="14:57"><name pos:start="14:53" pos:end="14:53">s</name> <operator pos:start="14:55" pos:end="14:55">+</operator> <name pos:start="14:57" pos:end="14:57">i</name></expr></argument>, <argument pos:start="14:60" pos:end="14:64"><expr pos:start="14:60" pos:end="14:64"><literal type="string" pos:start="14:60" pos:end="14:64">"000"</literal></expr></argument>, <argument pos:start="14:67" pos:end="14:67"><expr pos:start="14:67" pos:end="14:67"><literal type="number" pos:start="14:67" pos:end="14:67">3</literal></expr></argument>)</argument_list></call> <operator pos:start="14:70" pos:end="14:71">==</operator> <literal type="number" pos:start="14:73" pos:end="14:73">0</literal></expr>)</condition>
        <block pos:start="15:9" pos:end="17:9">{<block_content pos:start="16:13" pos:end="16:24">
            <return pos:start="16:13" pos:end="16:24">return <expr pos:start="16:20" pos:end="16:23"><literal type="boolean" pos:start="16:20" pos:end="16:23">true</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="18:9" pos:end="22:9"><if pos:start="18:9" pos:end="22:9">if<condition pos:start="18:11" pos:end="18:74">(<expr pos:start="18:12" pos:end="18:73"><call pos:start="18:12" pos:end="18:35"><name pos:start="18:12" pos:end="18:18">strncmp</name><argument_list pos:start="18:19" pos:end="18:35">(<argument pos:start="18:20" pos:end="18:24"><expr pos:start="18:20" pos:end="18:24"><name pos:start="18:20" pos:end="18:20">s</name> <operator pos:start="18:22" pos:end="18:22">+</operator> <name pos:start="18:24" pos:end="18:24">i</name></expr></argument>, <argument pos:start="18:27" pos:end="18:31"><expr pos:start="18:27" pos:end="18:31"><literal type="string" pos:start="18:27" pos:end="18:31">"100"</literal></expr></argument>, <argument pos:start="18:34" pos:end="18:34"><expr pos:start="18:34" pos:end="18:34"><literal type="number" pos:start="18:34" pos:end="18:34">3</literal></expr></argument>)</argument_list></call> <operator pos:start="18:37" pos:end="18:38">==</operator> <literal type="number" pos:start="18:40" pos:end="18:40">0</literal> <operator pos:start="18:42" pos:end="18:43">||</operator> <call pos:start="18:45" pos:end="18:68"><name pos:start="18:45" pos:end="18:51">strncmp</name><argument_list pos:start="18:52" pos:end="18:68">(<argument pos:start="18:53" pos:end="18:57"><expr pos:start="18:53" pos:end="18:57"><name pos:start="18:53" pos:end="18:53">s</name> <operator pos:start="18:55" pos:end="18:55">+</operator> <name pos:start="18:57" pos:end="18:57">i</name></expr></argument>, <argument pos:start="18:60" pos:end="18:64"><expr pos:start="18:60" pos:end="18:64"><literal type="string" pos:start="18:60" pos:end="18:64">"110"</literal></expr></argument>, <argument pos:start="18:67" pos:end="18:67"><expr pos:start="18:67" pos:end="18:67"><literal type="number" pos:start="18:67" pos:end="18:67">3</literal></expr></argument>)</argument_list></call> <operator pos:start="18:70" pos:end="18:71">==</operator> <literal type="number" pos:start="18:73" pos:end="18:73">0</literal></expr>)</condition>
        <block pos:start="19:9" pos:end="22:9">{<block_content pos:start="20:13" pos:end="21:19">
            <return pos:start="20:13" pos:end="20:25">return <expr pos:start="20:20" pos:end="20:24"><literal type="boolean" pos:start="20:20" pos:end="20:24">false</literal></expr>;</return>
            <expr_stmt pos:start="21:13" pos:end="21:19"><expr pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:13">i</name> <operator pos:start="21:15" pos:end="21:16">+=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">8</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="23:9" pos:end="32:9"><if pos:start="23:9" pos:end="32:9">if<condition pos:start="23:11" pos:end="23:41">(<expr pos:start="23:12" pos:end="23:40"><call pos:start="23:12" pos:end="23:35"><name pos:start="23:12" pos:end="23:18">strncmp</name><argument_list pos:start="23:19" pos:end="23:35">(<argument pos:start="23:20" pos:end="23:24"><expr pos:start="23:20" pos:end="23:24"><name pos:start="23:20" pos:end="23:20">s</name> <operator pos:start="23:22" pos:end="23:22">+</operator> <name pos:start="23:24" pos:end="23:24">i</name></expr></argument>, <argument pos:start="23:27" pos:end="23:31"><expr pos:start="23:27" pos:end="23:31"><literal type="string" pos:start="23:27" pos:end="23:31">"101"</literal></expr></argument>, <argument pos:start="23:34" pos:end="23:34"><expr pos:start="23:34" pos:end="23:34"><literal type="number" pos:start="23:34" pos:end="23:34">3</literal></expr></argument>)</argument_list></call> <operator pos:start="23:37" pos:end="23:38">==</operator> <literal type="number" pos:start="23:40" pos:end="23:40">0</literal></expr>)</condition><block pos:start="23:42" pos:end="32:9">{<block_content pos:start="24:13" pos:end="31:13">
            <decl_stmt pos:start="24:13" pos:end="24:24"><decl pos:start="24:13" pos:end="24:23"><type pos:start="24:13" pos:end="24:15"><name pos:start="24:13" pos:end="24:15">int</name></type> <name pos:start="24:17" pos:end="24:19">tmp</name> <init pos:start="24:21" pos:end="24:23">= <expr pos:start="24:23" pos:end="24:23"><literal type="number" pos:start="24:23" pos:end="24:23">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="25:13" pos:end="27:13">for<control pos:start="25:16" pos:end="25:46">(<init pos:start="25:17" pos:end="25:30"><decl pos:start="25:17" pos:end="25:29"><type pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">int</name></type> <name pos:start="25:21" pos:end="25:21">j</name> <init pos:start="25:23" pos:end="25:29">= <expr pos:start="25:25" pos:end="25:29"><name pos:start="25:25" pos:end="25:25">i</name> <operator pos:start="25:27" pos:end="25:27">+</operator> <literal type="number" pos:start="25:29" pos:end="25:29">3</literal></expr></init></decl>;</init> <condition pos:start="25:32" pos:end="25:41"><expr pos:start="25:32" pos:end="25:40"><name pos:start="25:32" pos:end="25:32">j</name> <operator pos:start="25:34" pos:end="25:34">&lt;</operator> <name pos:start="25:36" pos:end="25:36">i</name> <operator pos:start="25:38" pos:end="25:38">+</operator> <literal type="number" pos:start="25:40" pos:end="25:40">8</literal></expr>;</condition> <incr pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><operator pos:start="25:43" pos:end="25:44">++</operator><name pos:start="25:45" pos:end="25:45">j</name></expr></incr>)</control><block pos:start="25:47" pos:end="27:13">{<block_content pos:start="26:17" pos:end="26:45">
                <expr_stmt pos:start="26:17" pos:end="26:45"><expr pos:start="26:17" pos:end="26:44"><name pos:start="26:17" pos:end="26:19">tmp</name> <operator pos:start="26:21" pos:end="26:21">=</operator> <name pos:start="26:23" pos:end="26:25">tmp</name> <operator pos:start="26:27" pos:end="26:27">*</operator> <literal type="number" pos:start="26:29" pos:end="26:31">2</literal> <operator pos:start="26:31" pos:end="26:31">+</operator> <operator pos:start="26:33" pos:end="26:33">(</operator><name pos:start="26:34" pos:end="26:37"><name pos:start="26:34" pos:end="26:34">s</name><index pos:start="26:35" pos:end="26:37">[<expr pos:start="26:36" pos:end="26:36"><name pos:start="26:36" pos:end="26:36">j</name></expr>]</index></name> <operator pos:start="26:39" pos:end="26:39">-</operator> <literal type="char" pos:start="26:41" pos:end="26:43">'0'</literal><operator pos:start="26:44" pos:end="26:44">)</operator></expr>;</expr_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="28:13" pos:end="31:13"><if pos:start="28:13" pos:end="31:13">if<condition pos:start="28:15" pos:end="28:25">(<expr pos:start="28:16" pos:end="28:24"><name pos:start="28:16" pos:end="28:18">tmp</name> <operator pos:start="28:20" pos:end="28:21">&gt;=</operator> <literal type="number" pos:start="28:23" pos:end="28:24">26</literal></expr>)</condition>
            <block pos:start="29:13" pos:end="31:13">{<block_content pos:start="30:17" pos:end="30:29">
                <return pos:start="30:17" pos:end="30:29">return <expr pos:start="30:24" pos:end="30:28"><literal type="boolean" pos:start="30:24" pos:end="30:28">false</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="34:5" pos:end="34:16">return <expr pos:start="34:12" pos:end="34:15"><literal type="boolean" pos:start="34:12" pos:end="34:15">true</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="36:1" pos:end="75:1"><type pos:start="36:1" pos:end="36:3"><name pos:start="36:1" pos:end="36:3">int</name></type> <name pos:start="36:5" pos:end="36:8">main</name><parameter_list pos:start="36:9" pos:end="36:10">()</parameter_list>
<block pos:start="37:1" pos:end="75:1">{<block_content pos:start="38:5" pos:end="74:13">
    <expr_stmt pos:start="38:5" pos:end="38:42"><expr pos:start="38:5" pos:end="38:41"><call pos:start="38:5" pos:end="38:41"><name pos:start="38:5" pos:end="38:11">freopen</name><argument_list pos:start="38:12" pos:end="38:41">(<argument pos:start="38:13" pos:end="38:28"><expr pos:start="38:13" pos:end="38:28"><literal type="string" pos:start="38:13" pos:end="38:28">"information.in"</literal></expr></argument>, <argument pos:start="38:31" pos:end="38:33"><expr pos:start="38:31" pos:end="38:33"><literal type="string" pos:start="38:31" pos:end="38:33">"r"</literal></expr></argument>, <argument pos:start="38:36" pos:end="38:40"><expr pos:start="38:36" pos:end="38:40"><name pos:start="38:36" pos:end="38:40">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:44"><expr pos:start="39:5" pos:end="39:43"><call pos:start="39:5" pos:end="39:43"><name pos:start="39:5" pos:end="39:11">freopen</name><argument_list pos:start="39:12" pos:end="39:43">(<argument pos:start="39:13" pos:end="39:29"><expr pos:start="39:13" pos:end="39:29"><literal type="string" pos:start="39:13" pos:end="39:29">"information.out"</literal></expr></argument>, <argument pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><literal type="string" pos:start="39:32" pos:end="39:34">"w"</literal></expr></argument>, <argument pos:start="39:37" pos:end="39:42"><expr pos:start="39:37" pos:end="39:42"><name pos:start="39:37" pos:end="39:42">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:23"><expr pos:start="40:5" pos:end="40:22"><call pos:start="40:5" pos:end="40:22"><name pos:start="40:5" pos:end="40:9">scanf</name><argument_list pos:start="40:10" pos:end="40:22">(<argument pos:start="40:11" pos:end="40:14"><expr pos:start="40:11" pos:end="40:14"><literal type="string" pos:start="40:11" pos:end="40:14">"%s"</literal></expr></argument>, <argument pos:start="40:17" pos:end="40:21"><expr pos:start="40:17" pos:end="40:21"><name pos:start="40:17" pos:end="40:17">s</name> <operator pos:start="40:19" pos:end="40:19">+</operator> <literal type="number" pos:start="40:21" pos:end="40:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:5">n</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <call pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:14">strlen</name><argument_list pos:start="41:15" pos:end="41:21">(<argument pos:start="41:16" pos:end="41:20"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:16">s</name> <operator pos:start="41:18" pos:end="41:18">+</operator> <literal type="number" pos:start="41:20" pos:end="41:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="42:5" pos:end="73:5"><if pos:start="42:5" pos:end="44:5">if<condition pos:start="42:7" pos:end="42:16">(<expr pos:start="42:8" pos:end="42:15"><operator pos:start="42:8" pos:end="42:8">!</operator><call pos:start="42:9" pos:end="42:15"><name pos:start="42:9" pos:end="42:13">judge</name><argument_list pos:start="42:14" pos:end="42:15">()</argument_list></call></expr>)</condition><block pos:start="42:17" pos:end="44:5">{<block_content pos:start="43:9" pos:end="43:26">
        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><call pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:14">printf</name><argument_list pos:start="43:15" pos:end="43:25">(<argument pos:start="43:16" pos:end="43:24"><expr pos:start="43:16" pos:end="43:24"><literal type="string" pos:start="43:16" pos:end="43:24">"Error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if>
    <else pos:start="45:5" pos:end="73:5">else
    <block pos:start="46:5" pos:end="73:5">{<block_content pos:start="47:9" pos:end="72:9">
        <for pos:start="47:9" pos:end="72:9">for<control pos:start="47:12" pos:end="47:38">(<init pos:start="47:13" pos:end="47:22"><decl pos:start="47:13" pos:end="47:21"><type pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:15">int</name></type> <name pos:start="47:17" pos:end="47:17">i</name> <init pos:start="47:19" pos:end="47:21">= <expr pos:start="47:21" pos:end="47:21"><literal type="number" pos:start="47:21" pos:end="47:21">1</literal></expr></init></decl>;</init> <condition pos:start="47:24" pos:end="47:30"><expr pos:start="47:24" pos:end="47:29"><name pos:start="47:24" pos:end="47:24">i</name> <operator pos:start="47:26" pos:end="47:27">&lt;=</operator> <name pos:start="47:29" pos:end="47:29">n</name></expr>;</condition> <incr pos:start="47:32" pos:end="47:37"><expr pos:start="47:32" pos:end="47:37"><name pos:start="47:32" pos:end="47:32">i</name> <operator pos:start="47:34" pos:end="47:35">+=</operator> <literal type="number" pos:start="47:37" pos:end="47:37">8</literal></expr></incr>)</control><block pos:start="47:39" pos:end="72:9">{<block_content pos:start="48:13" pos:end="71:13">
            <if_stmt pos:start="48:13" pos:end="71:13"><if pos:start="48:13" pos:end="56:13">if<condition pos:start="48:15" pos:end="48:45">(<expr pos:start="48:16" pos:end="48:44"><call pos:start="48:16" pos:end="48:39"><name pos:start="48:16" pos:end="48:22">strncmp</name><argument_list pos:start="48:23" pos:end="48:39">(<argument pos:start="48:24" pos:end="48:28"><expr pos:start="48:24" pos:end="48:28"><name pos:start="48:24" pos:end="48:24">s</name> <operator pos:start="48:26" pos:end="48:26">+</operator> <name pos:start="48:28" pos:end="48:28">i</name></expr></argument>, <argument pos:start="48:31" pos:end="48:35"><expr pos:start="48:31" pos:end="48:35"><literal type="string" pos:start="48:31" pos:end="48:35">"101"</literal></expr></argument>, <argument pos:start="48:38" pos:end="48:38"><expr pos:start="48:38" pos:end="48:38"><literal type="number" pos:start="48:38" pos:end="48:38">3</literal></expr></argument>)</argument_list></call> <operator pos:start="48:41" pos:end="48:42">==</operator> <literal type="number" pos:start="48:44" pos:end="48:44">0</literal></expr>)</condition>
            <block pos:start="49:13" pos:end="56:13">{<block_content pos:start="50:17" pos:end="55:40">
                <decl_stmt pos:start="50:17" pos:end="50:28"><decl pos:start="50:17" pos:end="50:27"><type pos:start="50:17" pos:end="50:19"><name pos:start="50:17" pos:end="50:19">int</name></type> <name pos:start="50:21" pos:end="50:23">tmp</name> <init pos:start="50:25" pos:end="50:27">= <expr pos:start="50:27" pos:end="50:27"><literal type="number" pos:start="50:27" pos:end="50:27">0</literal></expr></init></decl>;</decl_stmt>
                <for pos:start="51:17" pos:end="54:17">for<control pos:start="51:20" pos:end="51:50">(<init pos:start="51:21" pos:end="51:34"><decl pos:start="51:21" pos:end="51:33"><type pos:start="51:21" pos:end="51:23"><name pos:start="51:21" pos:end="51:23">int</name></type> <name pos:start="51:25" pos:end="51:25">j</name> <init pos:start="51:27" pos:end="51:33">= <expr pos:start="51:29" pos:end="51:33"><name pos:start="51:29" pos:end="51:29">i</name> <operator pos:start="51:31" pos:end="51:31">+</operator> <literal type="number" pos:start="51:33" pos:end="51:33">3</literal></expr></init></decl>;</init> <condition pos:start="51:36" pos:end="51:45"><expr pos:start="51:36" pos:end="51:44"><name pos:start="51:36" pos:end="51:36">j</name> <operator pos:start="51:38" pos:end="51:38">&lt;</operator> <name pos:start="51:40" pos:end="51:40">i</name> <operator pos:start="51:42" pos:end="51:42">+</operator> <literal type="number" pos:start="51:44" pos:end="51:44">8</literal></expr>;</condition> <incr pos:start="51:47" pos:end="51:49"><expr pos:start="51:47" pos:end="51:49"><operator pos:start="51:47" pos:end="51:48">++</operator><name pos:start="51:49" pos:end="51:49">j</name></expr></incr>)</control>
                <block pos:start="52:17" pos:end="54:17">{<block_content pos:start="53:21" pos:end="53:49">
                    <expr_stmt pos:start="53:21" pos:end="53:49"><expr pos:start="53:21" pos:end="53:48"><name pos:start="53:21" pos:end="53:23">tmp</name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:29">tmp</name> <operator pos:start="53:31" pos:end="53:31">*</operator> <literal type="number" pos:start="53:33" pos:end="53:35">2</literal> <operator pos:start="53:35" pos:end="53:35">+</operator> <operator pos:start="53:37" pos:end="53:37">(</operator><name pos:start="53:38" pos:end="53:41"><name pos:start="53:38" pos:end="53:38">s</name><index pos:start="53:39" pos:end="53:41">[<expr pos:start="53:40" pos:end="53:40"><name pos:start="53:40" pos:end="53:40">j</name></expr>]</index></name> <operator pos:start="53:43" pos:end="53:43">-</operator> <literal type="char" pos:start="53:45" pos:end="53:47">'0'</literal><operator pos:start="53:48" pos:end="53:48">)</operator></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt pos:start="55:17" pos:end="55:40"><expr pos:start="55:17" pos:end="55:39"><call pos:start="55:17" pos:end="55:39"><name pos:start="55:17" pos:end="55:22">printf</name><argument_list pos:start="55:23" pos:end="55:39">(<argument pos:start="55:24" pos:end="55:27"><expr pos:start="55:24" pos:end="55:27"><literal type="string" pos:start="55:24" pos:end="55:27">"%c"</literal></expr></argument>, <argument pos:start="55:30" pos:end="55:38"><expr pos:start="55:30" pos:end="55:38"><literal type="char" pos:start="55:30" pos:end="55:32">'A'</literal> <operator pos:start="55:34" pos:end="55:34">+</operator> <name pos:start="55:36" pos:end="55:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="57:13" pos:end="59:13">else if<condition pos:start="57:20" pos:end="57:50">(<expr pos:start="57:21" pos:end="57:49"><call pos:start="57:21" pos:end="57:44"><name pos:start="57:21" pos:end="57:27">strncmp</name><argument_list pos:start="57:28" pos:end="57:44">(<argument pos:start="57:29" pos:end="57:33"><expr pos:start="57:29" pos:end="57:33"><name pos:start="57:29" pos:end="57:29">s</name> <operator pos:start="57:31" pos:end="57:31">+</operator> <name pos:start="57:33" pos:end="57:33">i</name></expr></argument>, <argument pos:start="57:36" pos:end="57:40"><expr pos:start="57:36" pos:end="57:40"><literal type="string" pos:start="57:36" pos:end="57:40">"111"</literal></expr></argument>, <argument pos:start="57:43" pos:end="57:43"><expr pos:start="57:43" pos:end="57:43"><literal type="number" pos:start="57:43" pos:end="57:43">3</literal></expr></argument>)</argument_list></call> <operator pos:start="57:46" pos:end="57:47">==</operator> <literal type="number" pos:start="57:49" pos:end="57:49">0</literal></expr>)</condition><block pos:start="57:51" pos:end="59:13">{<block_content pos:start="58:17" pos:end="58:28">
                <expr_stmt pos:start="58:17" pos:end="58:28"><expr pos:start="58:17" pos:end="58:27"><call pos:start="58:17" pos:end="58:27"><name pos:start="58:17" pos:end="58:22">printf</name><argument_list pos:start="58:23" pos:end="58:27">(<argument pos:start="58:24" pos:end="58:26"><expr pos:start="58:24" pos:end="58:26"><literal type="string" pos:start="58:24" pos:end="58:26">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="60:13" pos:end="71:13">else
            <block pos:start="61:13" pos:end="71:13">{<block_content pos:start="62:17" pos:end="70:56">
                <decl_stmt pos:start="62:17" pos:end="62:39"><decl pos:start="62:17" pos:end="62:28"><type pos:start="62:17" pos:end="62:19"><name pos:start="62:17" pos:end="62:19">int</name></type> <name pos:start="62:21" pos:end="62:24">tmp1</name> <init pos:start="62:26" pos:end="62:28">= <expr pos:start="62:28" pos:end="62:28"><literal type="number" pos:start="62:28" pos:end="62:28">0</literal></expr></init></decl>, <decl pos:start="62:31" pos:end="62:38"><type ref="prev" pos:start="62:17" pos:end="62:19"/><name pos:start="62:31" pos:end="62:34">tmp2</name> <init pos:start="62:36" pos:end="62:38">= <expr pos:start="62:38" pos:end="62:38"><literal type="number" pos:start="62:38" pos:end="62:38">0</literal></expr></init></decl>;</decl_stmt>
                <for pos:start="63:17" pos:end="65:17">for<control pos:start="63:20" pos:end="63:50">(<init pos:start="63:21" pos:end="63:34"><decl pos:start="63:21" pos:end="63:33"><type pos:start="63:21" pos:end="63:23"><name pos:start="63:21" pos:end="63:23">int</name></type> <name pos:start="63:25" pos:end="63:25">j</name> <init pos:start="63:27" pos:end="63:33">= <expr pos:start="63:29" pos:end="63:33"><name pos:start="63:29" pos:end="63:29">i</name> <operator pos:start="63:31" pos:end="63:31">+</operator> <literal type="number" pos:start="63:33" pos:end="63:33">1</literal></expr></init></decl>;</init> <condition pos:start="63:36" pos:end="63:45"><expr pos:start="63:36" pos:end="63:44"><name pos:start="63:36" pos:end="63:36">j</name> <operator pos:start="63:38" pos:end="63:38">&lt;</operator> <name pos:start="63:40" pos:end="63:40">i</name> <operator pos:start="63:42" pos:end="63:42">+</operator> <literal type="number" pos:start="63:44" pos:end="63:44">8</literal></expr>;</condition> <incr pos:start="63:47" pos:end="63:49"><expr pos:start="63:47" pos:end="63:49"><operator pos:start="63:47" pos:end="63:48">++</operator><name pos:start="63:49" pos:end="63:49">j</name></expr></incr>)</control><block pos:start="63:51" pos:end="65:17">{<block_content pos:start="64:21" pos:end="64:51">
                    <expr_stmt pos:start="64:21" pos:end="64:51"><expr pos:start="64:21" pos:end="64:50"><name pos:start="64:21" pos:end="64:24">tmp1</name> <operator pos:start="64:26" pos:end="64:26">=</operator> <name pos:start="64:28" pos:end="64:31">tmp1</name> <operator pos:start="64:33" pos:end="64:33">*</operator> <literal type="number" pos:start="64:35" pos:end="64:37">2</literal> <operator pos:start="64:37" pos:end="64:37">+</operator> <operator pos:start="64:39" pos:end="64:39">(</operator><name pos:start="64:40" pos:end="64:43"><name pos:start="64:40" pos:end="64:40">s</name><index pos:start="64:41" pos:end="64:43">[<expr pos:start="64:42" pos:end="64:42"><name pos:start="64:42" pos:end="64:42">j</name></expr>]</index></name> <operator pos:start="64:45" pos:end="64:45">-</operator> <literal type="char" pos:start="64:47" pos:end="64:49">'0'</literal><operator pos:start="64:50" pos:end="64:50">)</operator></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt pos:start="66:17" pos:end="66:23"><expr pos:start="66:17" pos:end="66:22"><name pos:start="66:17" pos:end="66:17">i</name> <operator pos:start="66:19" pos:end="66:20">+=</operator> <literal type="number" pos:start="66:22" pos:end="66:22">8</literal></expr>;</expr_stmt>
                <for pos:start="67:17" pos:end="69:17">for<control pos:start="67:20" pos:end="67:50">(<init pos:start="67:21" pos:end="67:34"><decl pos:start="67:21" pos:end="67:33"><type pos:start="67:21" pos:end="67:23"><name pos:start="67:21" pos:end="67:23">int</name></type> <name pos:start="67:25" pos:end="67:25">j</name> <init pos:start="67:27" pos:end="67:33">= <expr pos:start="67:29" pos:end="67:33"><name pos:start="67:29" pos:end="67:29">i</name> <operator pos:start="67:31" pos:end="67:31">+</operator> <literal type="number" pos:start="67:33" pos:end="67:33">1</literal></expr></init></decl>;</init> <condition pos:start="67:36" pos:end="67:45"><expr pos:start="67:36" pos:end="67:44"><name pos:start="67:36" pos:end="67:36">j</name> <operator pos:start="67:38" pos:end="67:38">&lt;</operator> <name pos:start="67:40" pos:end="67:40">i</name> <operator pos:start="67:42" pos:end="67:42">+</operator> <literal type="number" pos:start="67:44" pos:end="67:44">8</literal></expr>;</condition> <incr pos:start="67:47" pos:end="67:49"><expr pos:start="67:47" pos:end="67:49"><operator pos:start="67:47" pos:end="67:48">++</operator><name pos:start="67:49" pos:end="67:49">j</name></expr></incr>)</control><block pos:start="67:51" pos:end="69:17">{<block_content pos:start="68:21" pos:end="68:51">
                    <expr_stmt pos:start="68:21" pos:end="68:51"><expr pos:start="68:21" pos:end="68:50"><name pos:start="68:21" pos:end="68:24">tmp2</name> <operator pos:start="68:26" pos:end="68:26">=</operator> <name pos:start="68:28" pos:end="68:31">tmp2</name> <operator pos:start="68:33" pos:end="68:33">*</operator> <literal type="number" pos:start="68:35" pos:end="68:37">2</literal> <operator pos:start="68:37" pos:end="68:37">+</operator> <operator pos:start="68:39" pos:end="68:39">(</operator><name pos:start="68:40" pos:end="68:43"><name pos:start="68:40" pos:end="68:40">s</name><index pos:start="68:41" pos:end="68:43">[<expr pos:start="68:42" pos:end="68:42"><name pos:start="68:42" pos:end="68:42">j</name></expr>]</index></name> <operator pos:start="68:45" pos:end="68:45">-</operator> <literal type="char" pos:start="68:47" pos:end="68:49">'0'</literal><operator pos:start="68:50" pos:end="68:50">)</operator></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt pos:start="70:17" pos:end="70:56"><expr pos:start="70:17" pos:end="70:55"><call pos:start="70:17" pos:end="70:55"><name pos:start="70:17" pos:end="70:22">printf</name><argument_list pos:start="70:23" pos:end="70:55">(<argument pos:start="70:24" pos:end="70:27"><expr pos:start="70:24" pos:end="70:27"><literal type="string" pos:start="70:24" pos:end="70:27">"%d"</literal></expr></argument>, <argument pos:start="70:30" pos:end="70:54"><expr pos:start="70:30" pos:end="70:54"><operator pos:start="70:30" pos:end="70:30">(</operator><name pos:start="70:31" pos:end="70:34">tmp1</name> <operator pos:start="70:36" pos:end="70:37">&gt;&gt;</operator> <literal type="number" pos:start="70:39" pos:end="70:39">1</literal><operator pos:start="70:40" pos:end="70:40">)</operator> <operator pos:start="70:42" pos:end="70:42">+</operator> <operator pos:start="70:44" pos:end="70:44">(</operator><name pos:start="70:45" pos:end="70:48">tmp2</name> <operator pos:start="70:50" pos:end="70:51">&gt;&gt;</operator> <literal type="number" pos:start="70:53" pos:end="70:53">1</literal><operator pos:start="70:54" pos:end="70:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></else></if_stmt>
    <return pos:start="74:5" pos:end="74:13">return <expr pos:start="74:12" pos:end="74:12"><literal type="number" pos:start="74:12" pos:end="74:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
