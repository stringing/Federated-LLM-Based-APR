<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/608/608.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:14"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">n</name></decl>, <decl pos:start="4:8" pos:end="4:13"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:8" pos:end="4:13"><name pos:start="4:8" pos:end="4:8">a</name><index pos:start="4:9" pos:end="4:13">[<expr pos:start="4:10" pos:end="4:12"><literal type="number" pos:start="4:10" pos:end="4:12">200</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="12:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:7">sum</name><parameter_list pos:start="5:8" pos:end="5:14">(<parameter pos:start="5:9" pos:end="5:13"><decl pos:start="5:9" pos:end="5:13"><type pos:start="5:9" pos:end="5:11"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:13">x</name></decl></parameter>)</parameter_list> <block pos:start="5:16" pos:end="12:1">{<block_content pos:start="6:5" pos:end="11:13">
    <decl_stmt pos:start="6:5" pos:end="6:14"><decl pos:start="6:5" pos:end="6:13"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">s</name> <init pos:start="6:11" pos:end="6:13">= <expr pos:start="6:13" pos:end="6:13"><literal type="number" pos:start="6:13" pos:end="6:13">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="7:5" pos:end="10:5">while <condition pos:start="7:11" pos:end="7:13">(<expr pos:start="7:12" pos:end="7:12"><name pos:start="7:12" pos:end="7:12">x</name></expr>)</condition> <block pos:start="7:15" pos:end="10:5">{<block_content pos:start="8:9" pos:end="9:16">
        <expr_stmt pos:start="8:9" pos:end="8:20"><expr pos:start="8:9" pos:end="8:19"><name pos:start="8:9" pos:end="8:9">s</name> <operator pos:start="8:11" pos:end="8:12">+=</operator> <name pos:start="8:14" pos:end="8:14">x</name> <operator pos:start="8:16" pos:end="8:16">%</operator> <literal type="number" pos:start="8:18" pos:end="8:19">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:16"><expr pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:9">x</name> <operator pos:start="9:11" pos:end="9:12">/=</operator> <literal type="number" pos:start="9:14" pos:end="9:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="11:5" pos:end="11:13">return <expr pos:start="11:12" pos:end="11:12"><literal type="number" pos:start="11:12" pos:end="11:12">0</literal></expr>;</return>
</block_content>}</block></function>                   
    <function pos:start="13:5" pos:end="19:5"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:12">cmp</name><parameter_list pos:start="13:13" pos:end="13:26">(<parameter pos:start="13:14" pos:end="13:18"><decl pos:start="13:14" pos:end="13:18"><type pos:start="13:14" pos:end="13:18"><name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">x</name></decl></parameter>, <parameter pos:start="13:21" pos:end="13:25"><decl pos:start="13:21" pos:end="13:25"><type pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:23">int</name></type> <name pos:start="13:25" pos:end="13:25">y</name></decl></parameter>)</parameter_list> <block pos:start="13:28" pos:end="19:5">{<block_content pos:start="14:9" pos:end="18:9">
        <if_stmt pos:start="14:9" pos:end="18:9"><if pos:start="14:9" pos:end="16:9">if <condition pos:start="14:12" pos:end="14:31">(<expr pos:start="14:13" pos:end="14:30"><call pos:start="14:13" pos:end="14:19"><name pos:start="14:13" pos:end="14:15">sum</name> <argument_list pos:start="14:17" pos:end="14:19">(<argument pos:start="14:18" pos:end="14:18"><expr pos:start="14:18" pos:end="14:18"><name pos:start="14:18" pos:end="14:18">x</name></expr></argument>)</argument_list></call> <operator pos:start="14:21" pos:end="14:22">!=</operator> <call pos:start="14:24" pos:end="14:30"><name pos:start="14:24" pos:end="14:26">sum</name> <argument_list pos:start="14:28" pos:end="14:30">(<argument pos:start="14:29" pos:end="14:29"><expr pos:start="14:29" pos:end="14:29"><name pos:start="14:29" pos:end="14:29">y</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="14:33" pos:end="16:9">{<block_content pos:start="15:13" pos:end="15:35">
            <return pos:start="15:13" pos:end="15:35">return <expr pos:start="15:20" pos:end="15:34"><call pos:start="15:20" pos:end="15:25"><name pos:start="15:20" pos:end="15:22">sum</name><argument_list pos:start="15:23" pos:end="15:25">(<argument pos:start="15:24" pos:end="15:24"><expr pos:start="15:24" pos:end="15:24"><name pos:start="15:24" pos:end="15:24">x</name></expr></argument>)</argument_list></call> <operator pos:start="15:27" pos:end="15:27">&lt;</operator> <call pos:start="15:29" pos:end="15:34"><name pos:start="15:29" pos:end="15:31">sum</name><argument_list pos:start="15:32" pos:end="15:34">(<argument pos:start="15:33" pos:end="15:33"><expr pos:start="15:33" pos:end="15:33"><name pos:start="15:33" pos:end="15:33">y</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></if> <else pos:start="16:11" pos:end="18:9">else <block pos:start="16:16" pos:end="18:9">{<block_content pos:start="17:13" pos:end="17:25">
            <return pos:start="17:13" pos:end="17:25">return <expr pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:20">x</name> <operator pos:start="17:22" pos:end="17:22">&lt;</operator> <name pos:start="17:24" pos:end="17:24">y</name></expr>;</return>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>    
    <function pos:start="20:5" pos:end="31:5"><type pos:start="20:5" pos:end="20:7"><name pos:start="20:5" pos:end="20:7">int</name></type> <name pos:start="20:9" pos:end="20:12">main</name> <parameter_list pos:start="20:14" pos:end="20:15">()</parameter_list> <block pos:start="20:17" pos:end="31:5">{<block_content pos:start="21:9" pos:end="30:17">
        <expr_stmt pos:start="21:9" pos:end="21:17"><expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:11">cin</name> <operator pos:start="21:13" pos:end="21:14">&gt;&gt;</operator> <name pos:start="21:16" pos:end="21:16">n</name></expr>;</expr_stmt>
        <for pos:start="22:9" pos:end="24:9">for <control pos:start="22:13" pos:end="22:35">(<init pos:start="22:14" pos:end="22:23"><decl pos:start="22:14" pos:end="22:22"><type pos:start="22:14" pos:end="22:16"><name pos:start="22:14" pos:end="22:16">int</name></type> <name pos:start="22:18" pos:end="22:18">i</name> <init pos:start="22:20" pos:end="22:22">= <expr pos:start="22:22" pos:end="22:22"><literal type="number" pos:start="22:22" pos:end="22:22">0</literal></expr></init></decl>;</init> <condition pos:start="22:25" pos:end="22:30"><expr pos:start="22:25" pos:end="22:29"><name pos:start="22:25" pos:end="22:25">i</name> <operator pos:start="22:27" pos:end="22:27">&lt;</operator> <name pos:start="22:29" pos:end="22:29">n</name></expr>;</condition> <incr pos:start="22:32" pos:end="22:34"><expr pos:start="22:32" pos:end="22:34"><name pos:start="22:32" pos:end="22:32">i</name><operator pos:start="22:33" pos:end="22:34">++</operator></expr></incr>)</control> <block pos:start="22:37" pos:end="24:9">{<block_content pos:start="23:13" pos:end="23:24">
            <expr_stmt pos:start="23:13" pos:end="23:24"><expr pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:15">cin</name> <operator pos:start="23:17" pos:end="23:18">&gt;&gt;</operator> <name pos:start="23:20" pos:end="23:23"><name pos:start="23:20" pos:end="23:20">a</name><index pos:start="23:21" pos:end="23:23">[<expr pos:start="23:22" pos:end="23:22"><name pos:start="23:22" pos:end="23:22">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><call pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:12">sort</name><argument_list pos:start="25:13" pos:end="25:27">(<argument pos:start="25:14" pos:end="25:14"><expr pos:start="25:14" pos:end="25:14"><name pos:start="25:14" pos:end="25:14">a</name></expr></argument>, <argument pos:start="25:17" pos:end="25:21"><expr pos:start="25:17" pos:end="25:21"><name pos:start="25:17" pos:end="25:17">a</name> <operator pos:start="25:19" pos:end="25:19">+</operator> <name pos:start="25:21" pos:end="25:21">n</name></expr></argument>, <argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="26:9" pos:end="28:9">for <control pos:start="26:13" pos:end="26:35">(<init pos:start="26:14" pos:end="26:23"><decl pos:start="26:14" pos:end="26:22"><type pos:start="26:14" pos:end="26:16"><name pos:start="26:14" pos:end="26:16">int</name></type> <name pos:start="26:18" pos:end="26:18">i</name> <init pos:start="26:20" pos:end="26:22">= <expr pos:start="26:22" pos:end="26:22"><literal type="number" pos:start="26:22" pos:end="26:22">0</literal></expr></init></decl>;</init> <condition pos:start="26:25" pos:end="26:30"><expr pos:start="26:25" pos:end="26:29"><name pos:start="26:25" pos:end="26:25">i</name> <operator pos:start="26:27" pos:end="26:27">&lt;</operator> <name pos:start="26:29" pos:end="26:29">n</name></expr>;</condition> <incr pos:start="26:32" pos:end="26:34"><expr pos:start="26:32" pos:end="26:34"><name pos:start="26:32" pos:end="26:32">i</name><operator pos:start="26:33" pos:end="26:34">++</operator></expr></incr>)</control> <block pos:start="26:37" pos:end="28:9">{<block_content pos:start="27:13" pos:end="27:32">
            <expr_stmt pos:start="27:13" pos:end="27:32"><expr pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:16">cout</name> <operator pos:start="27:18" pos:end="27:19">&lt;&lt;</operator> <name pos:start="27:21" pos:end="27:24"><name pos:start="27:21" pos:end="27:21">a</name><index pos:start="27:22" pos:end="27:24">[<expr pos:start="27:23" pos:end="27:23"><name pos:start="27:23" pos:end="27:23">i</name></expr>]</index></name> <operator pos:start="27:26" pos:end="27:27">&lt;&lt;</operator> <literal type="string" pos:start="27:29" pos:end="27:31">" "</literal></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="29:9" pos:end="29:21"><expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:12">cout</name> <operator pos:start="29:14" pos:end="29:15">&lt;&lt;</operator> <name pos:start="29:17" pos:end="29:20">endl</name></expr>;</expr_stmt>
        <return pos:start="30:9" pos:end="30:17">return <expr pos:start="30:16" pos:end="30:16"><literal type="number" pos:start="30:16" pos:end="30:16">0</literal></expr>;</return>
    </block_content>}</block></function>
</unit>
