<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/482/482.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="76:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list> <block pos:start="3:12" pos:end="76:1">{<block_content pos:start="4:5" pos:end="75:13">
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:13"><expr pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:7">cin</name> <operator pos:start="5:9" pos:end="5:10">&gt;&gt;</operator> <name pos:start="5:12" pos:end="5:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:21"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:9">stack</name><argument_list type="generic" pos:start="6:10" pos:end="6:15">&lt;<argument pos:start="6:11" pos:end="6:14"><expr pos:start="6:11" pos:end="6:14"><name pos:start="6:11" pos:end="6:14">char</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:17" pos:end="6:17">a</name></decl>, <decl pos:start="6:20" pos:end="6:20"><type ref="prev" pos:start="6:5" pos:end="6:15"/><name pos:start="6:20" pos:end="6:20">b</name></decl>;</decl_stmt>
    <while pos:start="7:5" pos:end="55:5">while <condition pos:start="7:11" pos:end="7:15">(<expr pos:start="7:12" pos:end="7:14"><name pos:start="7:12" pos:end="7:12">n</name><operator pos:start="7:13" pos:end="7:14">--</operator></expr>)</condition> <block pos:start="7:17" pos:end="55:5">{<block_content pos:start="8:9" pos:end="54:9">
        <decl_stmt pos:start="8:9" pos:end="8:15"><decl pos:start="8:9" pos:end="8:14"><type pos:start="8:9" pos:end="8:12"><name pos:start="8:9" pos:end="8:12">char</name></type> <name pos:start="8:14" pos:end="8:14">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:17"><expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">cin</name> <operator pos:start="9:13" pos:end="9:14">&gt;&gt;</operator> <name pos:start="9:16" pos:end="9:16">s</name></expr>;</expr_stmt>
        <if_stmt pos:start="10:9" pos:end="54:9"><if pos:start="10:9" pos:end="32:9">if <condition pos:start="10:12" pos:end="10:21">(<expr pos:start="10:13" pos:end="10:20"><name pos:start="10:13" pos:end="10:13">s</name> <operator pos:start="10:15" pos:end="10:16">==</operator> <literal type="char" pos:start="10:18" pos:end="10:20">'A'</literal></expr>)</condition> <block pos:start="10:23" pos:end="32:9">{<block_content pos:start="11:13" pos:end="31:13">
            <decl_stmt pos:start="11:13" pos:end="11:19"><decl pos:start="11:13" pos:end="11:18"><type pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">char</name></type> <name pos:start="11:18" pos:end="11:18">x</name></decl>;</decl_stmt>
            <expr_stmt pos:start="12:13" pos:end="12:21"><expr pos:start="12:13" pos:end="12:20"><name pos:start="12:13" pos:end="12:15">cin</name> <operator pos:start="12:17" pos:end="12:18">&gt;&gt;</operator> <name pos:start="12:20" pos:end="12:20">x</name></expr>;</expr_stmt>
            <if_stmt pos:start="13:13" pos:end="31:13"><if pos:start="13:13" pos:end="17:13">if <condition pos:start="13:16" pos:end="13:25">(<expr pos:start="13:17" pos:end="13:24"><name pos:start="13:17" pos:end="13:17">x</name> <operator pos:start="13:19" pos:end="13:20">==</operator> <literal type="char" pos:start="13:22" pos:end="13:24">'I'</literal></expr>)</condition><block pos:start="13:26" pos:end="17:13">{<block_content pos:start="14:17" pos:end="16:29">
                <decl_stmt pos:start="14:17" pos:end="14:25"><decl pos:start="14:17" pos:end="14:24"><type pos:start="14:17" pos:end="14:19"><name pos:start="14:17" pos:end="14:19">int</name></type> <name pos:start="14:21" pos:end="14:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="15:17" pos:end="15:28"><expr pos:start="15:17" pos:end="15:27"><name pos:start="15:17" pos:end="15:19">cin</name> <operator pos:start="15:21" pos:end="15:22">&gt;&gt;</operator> <name pos:start="15:24" pos:end="15:27">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="16:17" pos:end="16:29"><expr pos:start="16:17" pos:end="16:28"><call pos:start="16:17" pos:end="16:28"><name pos:start="16:17" pos:end="16:22"><name pos:start="16:17" pos:end="16:17">a</name><operator pos:start="16:18" pos:end="16:18">.</operator><name pos:start="16:19" pos:end="16:22">push</name></name><argument_list pos:start="16:23" pos:end="16:28">(<argument pos:start="16:24" pos:end="16:27"><expr pos:start="16:24" pos:end="16:27"><name pos:start="16:24" pos:end="16:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="17:14" pos:end="21:13">else if <condition pos:start="17:22" pos:end="17:31">(<expr pos:start="17:23" pos:end="17:30"><name pos:start="17:23" pos:end="17:23">x</name> <operator pos:start="17:25" pos:end="17:26">==</operator> <literal type="char" pos:start="17:28" pos:end="17:30">'D'</literal></expr>)</condition> <block pos:start="17:33" pos:end="21:13">{<block_content pos:start="18:17" pos:end="20:17">
                <if_stmt pos:start="18:17" pos:end="20:17"><if pos:start="18:17" pos:end="20:17">if <condition pos:start="18:20" pos:end="18:31">(<expr pos:start="18:21" pos:end="18:30"><operator pos:start="18:21" pos:end="18:21">!</operator><call pos:start="18:22" pos:end="18:30"><name pos:start="18:22" pos:end="18:28"><name pos:start="18:22" pos:end="18:22">a</name><operator pos:start="18:23" pos:end="18:23">.</operator><name pos:start="18:24" pos:end="18:28">empty</name></name><argument_list pos:start="18:29" pos:end="18:30">()</argument_list></call></expr>)</condition> <block pos:start="18:33" pos:end="20:17">{<block_content pos:start="19:21" pos:end="19:28">
                    <expr_stmt pos:start="19:21" pos:end="19:28"><expr pos:start="19:21" pos:end="19:27"><call pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">a</name><operator pos:start="19:22" pos:end="19:22">.</operator><name pos:start="19:23" pos:end="19:25">pop</name></name><argument_list pos:start="19:26" pos:end="19:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if><else pos:start="21:14" pos:end="31:13">else <block pos:start="21:19" pos:end="31:13">{<block_content pos:start="22:17" pos:end="30:17">
                <decl_stmt pos:start="22:17" pos:end="22:31"><decl pos:start="22:17" pos:end="22:30"><type pos:start="22:17" pos:end="22:28"><name pos:start="22:17" pos:end="22:28"><name pos:start="22:17" pos:end="22:21">stack</name> <argument_list type="generic" pos:start="22:23" pos:end="22:28">&lt;<argument pos:start="22:24" pos:end="22:27"><expr pos:start="22:24" pos:end="22:27"><name pos:start="22:24" pos:end="22:27">char</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="22:30" pos:end="22:30">c</name></decl>;</decl_stmt>
                <while pos:start="23:17" pos:end="26:17">while <condition pos:start="23:23" pos:end="23:34">(<expr pos:start="23:24" pos:end="23:33"><operator pos:start="23:24" pos:end="23:24">!</operator><call pos:start="23:25" pos:end="23:33"><name pos:start="23:25" pos:end="23:31"><name pos:start="23:25" pos:end="23:25">b</name><operator pos:start="23:26" pos:end="23:26">.</operator><name pos:start="23:27" pos:end="23:31">empty</name></name><argument_list pos:start="23:32" pos:end="23:33">()</argument_list></call></expr>)</condition> <block pos:start="23:36" pos:end="26:17">{<block_content pos:start="24:21" pos:end="25:28">
                    <expr_stmt pos:start="24:21" pos:end="24:36"><expr pos:start="24:21" pos:end="24:35"><call pos:start="24:21" pos:end="24:35"><name pos:start="24:21" pos:end="24:26"><name pos:start="24:21" pos:end="24:21">c</name><operator pos:start="24:22" pos:end="24:22">.</operator><name pos:start="24:23" pos:end="24:26">push</name></name><argument_list pos:start="24:27" pos:end="24:35">(<argument pos:start="24:28" pos:end="24:34"><expr pos:start="24:28" pos:end="24:34"><call pos:start="24:28" pos:end="24:34"><name pos:start="24:28" pos:end="24:32"><name pos:start="24:28" pos:end="24:28">b</name><operator pos:start="24:29" pos:end="24:29">.</operator><name pos:start="24:30" pos:end="24:32">top</name></name><argument_list pos:start="24:33" pos:end="24:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="25:21" pos:end="25:28"><expr pos:start="25:21" pos:end="25:27"><call pos:start="25:21" pos:end="25:27"><name pos:start="25:21" pos:end="25:25"><name pos:start="25:21" pos:end="25:21">b</name><operator pos:start="25:22" pos:end="25:22">.</operator><name pos:start="25:23" pos:end="25:25">pop</name></name><argument_list pos:start="25:26" pos:end="25:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="27:17" pos:end="30:17">while <condition pos:start="27:23" pos:end="27:34">(<expr pos:start="27:24" pos:end="27:33"><operator pos:start="27:24" pos:end="27:24">!</operator><call pos:start="27:25" pos:end="27:33"><name pos:start="27:25" pos:end="27:31"><name pos:start="27:25" pos:end="27:25">c</name><operator pos:start="27:26" pos:end="27:26">.</operator><name pos:start="27:27" pos:end="27:31">empty</name></name><argument_list pos:start="27:32" pos:end="27:33">()</argument_list></call></expr>)</condition> <block pos:start="27:36" pos:end="30:17">{<block_content pos:start="28:21" pos:end="29:28">
                    <expr_stmt pos:start="28:21" pos:end="28:36"><expr pos:start="28:21" pos:end="28:35"><call pos:start="28:21" pos:end="28:35"><name pos:start="28:21" pos:end="28:26"><name pos:start="28:21" pos:end="28:21">a</name><operator pos:start="28:22" pos:end="28:22">.</operator><name pos:start="28:23" pos:end="28:26">push</name></name><argument_list pos:start="28:27" pos:end="28:35">(<argument pos:start="28:28" pos:end="28:34"><expr pos:start="28:28" pos:end="28:34"><call pos:start="28:28" pos:end="28:34"><name pos:start="28:28" pos:end="28:32"><name pos:start="28:28" pos:end="28:28">c</name><operator pos:start="28:29" pos:end="28:29">.</operator><name pos:start="28:30" pos:end="28:32">top</name></name><argument_list pos:start="28:33" pos:end="28:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="29:21" pos:end="29:28"><expr pos:start="29:21" pos:end="29:27"><call pos:start="29:21" pos:end="29:27"><name pos:start="29:21" pos:end="29:25"><name pos:start="29:21" pos:end="29:21">c</name><operator pos:start="29:22" pos:end="29:22">.</operator><name pos:start="29:23" pos:end="29:25">pop</name></name><argument_list pos:start="29:26" pos:end="29:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="32:11" pos:end="54:9">else if <condition pos:start="32:19" pos:end="32:28">(<expr pos:start="32:20" pos:end="32:27"><name pos:start="32:20" pos:end="32:20">s</name> <operator pos:start="32:22" pos:end="32:23">==</operator> <literal type="char" pos:start="32:25" pos:end="32:27">'B'</literal></expr>)</condition> <block pos:start="32:30" pos:end="54:9">{<block_content pos:start="33:13" pos:end="53:13">
            <decl_stmt pos:start="33:13" pos:end="33:19"><decl pos:start="33:13" pos:end="33:18"><type pos:start="33:13" pos:end="33:16"><name pos:start="33:13" pos:end="33:16">char</name></type> <name pos:start="33:18" pos:end="33:18">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="34:13" pos:end="34:21"><expr pos:start="34:13" pos:end="34:20"><name pos:start="34:13" pos:end="34:15">cin</name> <operator pos:start="34:17" pos:end="34:18">&gt;&gt;</operator> <name pos:start="34:20" pos:end="34:20">y</name></expr>;</expr_stmt>
            <if_stmt pos:start="35:13" pos:end="53:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:25">(<expr pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:17">y</name> <operator pos:start="35:19" pos:end="35:20">==</operator> <literal type="char" pos:start="35:22" pos:end="35:24">'I'</literal></expr>)</condition><block pos:start="35:26" pos:end="39:13">{<block_content pos:start="36:17" pos:end="38:29">
                <decl_stmt pos:start="36:17" pos:end="36:25"><decl pos:start="36:17" pos:end="36:24"><type pos:start="36:17" pos:end="36:19"><name pos:start="36:17" pos:end="36:19">int</name></type> <name pos:start="36:21" pos:end="36:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="37:17" pos:end="37:28"><expr pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:19">cin</name> <operator pos:start="37:21" pos:end="37:22">&gt;&gt;</operator> <name pos:start="37:24" pos:end="37:27">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="38:17" pos:end="38:29"><expr pos:start="38:17" pos:end="38:28"><call pos:start="38:17" pos:end="38:28"><name pos:start="38:17" pos:end="38:22"><name pos:start="38:17" pos:end="38:17">a</name><operator pos:start="38:18" pos:end="38:18">.</operator><name pos:start="38:19" pos:end="38:22">push</name></name><argument_list pos:start="38:23" pos:end="38:28">(<argument pos:start="38:24" pos:end="38:27"><expr pos:start="38:24" pos:end="38:27"><name pos:start="38:24" pos:end="38:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="39:14" pos:end="43:13">else if <condition pos:start="39:22" pos:end="39:31">(<expr pos:start="39:23" pos:end="39:30"><name pos:start="39:23" pos:end="39:23">y</name> <operator pos:start="39:25" pos:end="39:26">==</operator> <literal type="char" pos:start="39:28" pos:end="39:30">'D'</literal></expr>)</condition> <block pos:start="39:33" pos:end="43:13">{<block_content pos:start="40:17" pos:end="42:17">
                <if_stmt pos:start="40:17" pos:end="42:17"><if pos:start="40:17" pos:end="42:17">if <condition pos:start="40:20" pos:end="40:31">(<expr pos:start="40:21" pos:end="40:30"><operator pos:start="40:21" pos:end="40:21">!</operator><call pos:start="40:22" pos:end="40:30"><name pos:start="40:22" pos:end="40:28"><name pos:start="40:22" pos:end="40:22">b</name><operator pos:start="40:23" pos:end="40:23">.</operator><name pos:start="40:24" pos:end="40:28">empty</name></name><argument_list pos:start="40:29" pos:end="40:30">()</argument_list></call></expr>)</condition> <block pos:start="40:33" pos:end="42:17">{<block_content pos:start="41:21" pos:end="41:28">
                    <expr_stmt pos:start="41:21" pos:end="41:28"><expr pos:start="41:21" pos:end="41:27"><call pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:21">b</name><operator pos:start="41:22" pos:end="41:22">.</operator><name pos:start="41:23" pos:end="41:25">pop</name></name><argument_list pos:start="41:26" pos:end="41:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if><else pos:start="43:14" pos:end="53:13">else <block pos:start="43:19" pos:end="53:13">{<block_content pos:start="44:17" pos:end="52:17">
                <decl_stmt pos:start="44:17" pos:end="44:31"><decl pos:start="44:17" pos:end="44:30"><type pos:start="44:17" pos:end="44:28"><name pos:start="44:17" pos:end="44:28"><name pos:start="44:17" pos:end="44:21">stack</name> <argument_list type="generic" pos:start="44:23" pos:end="44:28">&lt;<argument pos:start="44:24" pos:end="44:27"><expr pos:start="44:24" pos:end="44:27"><name pos:start="44:24" pos:end="44:27">char</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="44:30" pos:end="44:30">d</name></decl>;</decl_stmt>
                <while pos:start="45:17" pos:end="48:17">while <condition pos:start="45:23" pos:end="45:34">(<expr pos:start="45:24" pos:end="45:33"><operator pos:start="45:24" pos:end="45:24">!</operator><call pos:start="45:25" pos:end="45:33"><name pos:start="45:25" pos:end="45:31"><name pos:start="45:25" pos:end="45:25">a</name><operator pos:start="45:26" pos:end="45:26">.</operator><name pos:start="45:27" pos:end="45:31">empty</name></name><argument_list pos:start="45:32" pos:end="45:33">()</argument_list></call></expr>)</condition> <block pos:start="45:36" pos:end="48:17">{<block_content pos:start="46:21" pos:end="47:28">
                    <expr_stmt pos:start="46:21" pos:end="46:36"><expr pos:start="46:21" pos:end="46:35"><call pos:start="46:21" pos:end="46:35"><name pos:start="46:21" pos:end="46:26"><name pos:start="46:21" pos:end="46:21">d</name><operator pos:start="46:22" pos:end="46:22">.</operator><name pos:start="46:23" pos:end="46:26">push</name></name><argument_list pos:start="46:27" pos:end="46:35">(<argument pos:start="46:28" pos:end="46:34"><expr pos:start="46:28" pos:end="46:34"><call pos:start="46:28" pos:end="46:34"><name pos:start="46:28" pos:end="46:32"><name pos:start="46:28" pos:end="46:28">a</name><operator pos:start="46:29" pos:end="46:29">.</operator><name pos:start="46:30" pos:end="46:32">top</name></name><argument_list pos:start="46:33" pos:end="46:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="47:21" pos:end="47:28"><expr pos:start="47:21" pos:end="47:27"><call pos:start="47:21" pos:end="47:27"><name pos:start="47:21" pos:end="47:25"><name pos:start="47:21" pos:end="47:21">a</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:25">pop</name></name><argument_list pos:start="47:26" pos:end="47:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="49:17" pos:end="52:17">while <condition pos:start="49:23" pos:end="49:34">(<expr pos:start="49:24" pos:end="49:33"><operator pos:start="49:24" pos:end="49:24">!</operator><call pos:start="49:25" pos:end="49:33"><name pos:start="49:25" pos:end="49:31"><name pos:start="49:25" pos:end="49:25">d</name><operator pos:start="49:26" pos:end="49:26">.</operator><name pos:start="49:27" pos:end="49:31">empty</name></name><argument_list pos:start="49:32" pos:end="49:33">()</argument_list></call></expr>)</condition> <block pos:start="49:36" pos:end="52:17">{<block_content pos:start="50:21" pos:end="51:28">
                    <expr_stmt pos:start="50:21" pos:end="50:36"><expr pos:start="50:21" pos:end="50:35"><call pos:start="50:21" pos:end="50:35"><name pos:start="50:21" pos:end="50:26"><name pos:start="50:21" pos:end="50:21">b</name><operator pos:start="50:22" pos:end="50:22">.</operator><name pos:start="50:23" pos:end="50:26">push</name></name><argument_list pos:start="50:27" pos:end="50:35">(<argument pos:start="50:28" pos:end="50:34"><expr pos:start="50:28" pos:end="50:34"><call pos:start="50:28" pos:end="50:34"><name pos:start="50:28" pos:end="50:32"><name pos:start="50:28" pos:end="50:28">d</name><operator pos:start="50:29" pos:end="50:29">.</operator><name pos:start="50:30" pos:end="50:32">top</name></name><argument_list pos:start="50:33" pos:end="50:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="51:21" pos:end="51:28"><expr pos:start="51:21" pos:end="51:27"><call pos:start="51:21" pos:end="51:27"><name pos:start="51:21" pos:end="51:25"><name pos:start="51:21" pos:end="51:21">d</name><operator pos:start="51:22" pos:end="51:22">.</operator><name pos:start="51:23" pos:end="51:25">pop</name></name><argument_list pos:start="51:26" pos:end="51:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></while>
    <decl_stmt pos:start="56:5" pos:end="56:19"><decl pos:start="56:5" pos:end="56:18"><type pos:start="56:5" pos:end="56:15"><name pos:start="56:5" pos:end="56:15"><name pos:start="56:5" pos:end="56:9">stack</name> <argument_list type="generic" pos:start="56:11" pos:end="56:15">&lt;<argument pos:start="56:12" pos:end="56:14"><expr pos:start="56:12" pos:end="56:14"><name pos:start="56:12" pos:end="56:14">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="56:17" pos:end="56:18">c1</name></decl>;</decl_stmt>
    <while pos:start="57:5" pos:end="60:5">while <condition pos:start="57:11" pos:end="57:22">(<expr pos:start="57:12" pos:end="57:21"><operator pos:start="57:12" pos:end="57:12">!</operator><call pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:13">a</name><operator pos:start="57:14" pos:end="57:14">.</operator><name pos:start="57:15" pos:end="57:19">empty</name></name><argument_list pos:start="57:20" pos:end="57:21">()</argument_list></call></expr>)</condition> <block pos:start="57:24" pos:end="60:5">{<block_content pos:start="58:9" pos:end="59:16">
        <expr_stmt pos:start="58:9" pos:end="58:25"><expr pos:start="58:9" pos:end="58:24"><call pos:start="58:9" pos:end="58:24"><name pos:start="58:9" pos:end="58:15"><name pos:start="58:9" pos:end="58:10">c1</name><operator pos:start="58:11" pos:end="58:11">.</operator><name pos:start="58:12" pos:end="58:15">push</name></name><argument_list pos:start="58:16" pos:end="58:24">(<argument pos:start="58:17" pos:end="58:23"><expr pos:start="58:17" pos:end="58:23"><call pos:start="58:17" pos:end="58:23"><name pos:start="58:17" pos:end="58:21"><name pos:start="58:17" pos:end="58:17">a</name><operator pos:start="58:18" pos:end="58:18">.</operator><name pos:start="58:19" pos:end="58:21">top</name></name><argument_list pos:start="58:22" pos:end="58:23">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="59:9" pos:end="59:16"><expr pos:start="59:9" pos:end="59:15"><call pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:13"><name pos:start="59:9" pos:end="59:9">a</name><operator pos:start="59:10" pos:end="59:10">.</operator><name pos:start="59:11" pos:end="59:13">pop</name></name><argument_list pos:start="59:14" pos:end="59:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="61:5" pos:end="64:5">while <condition pos:start="61:11" pos:end="61:23">(<expr pos:start="61:12" pos:end="61:22"><operator pos:start="61:12" pos:end="61:12">!</operator><call pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:14">c1</name><operator pos:start="61:15" pos:end="61:15">.</operator><name pos:start="61:16" pos:end="61:20">empty</name></name><argument_list pos:start="61:21" pos:end="61:22">()</argument_list></call></expr>)</condition> <block pos:start="61:25" pos:end="64:5">{<block_content pos:start="62:9" pos:end="63:17">
        <expr_stmt pos:start="62:9" pos:end="62:32"><expr pos:start="62:9" pos:end="62:31"><name pos:start="62:9" pos:end="62:12">cout</name> <operator pos:start="62:14" pos:end="62:15">&lt;&lt;</operator> <call pos:start="62:17" pos:end="62:24"><name pos:start="62:17" pos:end="62:22"><name pos:start="62:17" pos:end="62:18">c1</name><operator pos:start="62:19" pos:end="62:19">.</operator><name pos:start="62:20" pos:end="62:22">top</name></name><argument_list pos:start="62:23" pos:end="62:24">()</argument_list></call> <operator pos:start="62:26" pos:end="62:27">&lt;&lt;</operator> <literal type="string" pos:start="62:29" pos:end="62:31">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="63:9" pos:end="63:17"><expr pos:start="63:9" pos:end="63:16"><call pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:10">c1</name><operator pos:start="63:11" pos:end="63:11">.</operator><name pos:start="63:12" pos:end="63:14">pop</name></name><argument_list pos:start="63:15" pos:end="63:16">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="65:5" pos:end="65:17"><expr pos:start="65:5" pos:end="65:16"><name pos:start="65:5" pos:end="65:8">cout</name> <operator pos:start="65:10" pos:end="65:11">&lt;&lt;</operator> <name pos:start="65:13" pos:end="65:16">endl</name></expr>;</expr_stmt>
    <while pos:start="66:5" pos:end="69:5">while <condition pos:start="66:11" pos:end="66:22">(<expr pos:start="66:12" pos:end="66:21"><operator pos:start="66:12" pos:end="66:12">!</operator><call pos:start="66:13" pos:end="66:21"><name pos:start="66:13" pos:end="66:19"><name pos:start="66:13" pos:end="66:13">b</name><operator pos:start="66:14" pos:end="66:14">.</operator><name pos:start="66:15" pos:end="66:19">empty</name></name><argument_list pos:start="66:20" pos:end="66:21">()</argument_list></call></expr>)</condition> <block pos:start="66:24" pos:end="69:5">{<block_content pos:start="67:9" pos:end="68:16">
        <expr_stmt pos:start="67:9" pos:end="67:25"><expr pos:start="67:9" pos:end="67:24"><call pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:10">c1</name><operator pos:start="67:11" pos:end="67:11">.</operator><name pos:start="67:12" pos:end="67:15">push</name></name><argument_list pos:start="67:16" pos:end="67:24">(<argument pos:start="67:17" pos:end="67:23"><expr pos:start="67:17" pos:end="67:23"><call pos:start="67:17" pos:end="67:23"><name pos:start="67:17" pos:end="67:21"><name pos:start="67:17" pos:end="67:17">b</name><operator pos:start="67:18" pos:end="67:18">.</operator><name pos:start="67:19" pos:end="67:21">top</name></name><argument_list pos:start="67:22" pos:end="67:23">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="68:9" pos:end="68:16"><expr pos:start="68:9" pos:end="68:15"><call pos:start="68:9" pos:end="68:15"><name pos:start="68:9" pos:end="68:13"><name pos:start="68:9" pos:end="68:9">b</name><operator pos:start="68:10" pos:end="68:10">.</operator><name pos:start="68:11" pos:end="68:13">pop</name></name><argument_list pos:start="68:14" pos:end="68:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="70:5" pos:end="73:5">while <condition pos:start="70:11" pos:end="70:23">(<expr pos:start="70:12" pos:end="70:22"><operator pos:start="70:12" pos:end="70:12">!</operator><call pos:start="70:13" pos:end="70:22"><name pos:start="70:13" pos:end="70:20"><name pos:start="70:13" pos:end="70:14">c1</name><operator pos:start="70:15" pos:end="70:15">.</operator><name pos:start="70:16" pos:end="70:20">empty</name></name><argument_list pos:start="70:21" pos:end="70:22">()</argument_list></call></expr>)</condition> <block pos:start="70:25" pos:end="73:5">{<block_content pos:start="71:9" pos:end="72:17">
        <expr_stmt pos:start="71:9" pos:end="71:32"><expr pos:start="71:9" pos:end="71:31"><name pos:start="71:9" pos:end="71:12">cout</name> <operator pos:start="71:14" pos:end="71:15">&lt;&lt;</operator> <call pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:22"><name pos:start="71:17" pos:end="71:18">c1</name><operator pos:start="71:19" pos:end="71:19">.</operator><name pos:start="71:20" pos:end="71:22">top</name></name><argument_list pos:start="71:23" pos:end="71:24">()</argument_list></call> <operator pos:start="71:26" pos:end="71:27">&lt;&lt;</operator> <literal type="string" pos:start="71:29" pos:end="71:31">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="72:9" pos:end="72:17"><expr pos:start="72:9" pos:end="72:16"><call pos:start="72:9" pos:end="72:16"><name pos:start="72:9" pos:end="72:14"><name pos:start="72:9" pos:end="72:10">c1</name><operator pos:start="72:11" pos:end="72:11">.</operator><name pos:start="72:12" pos:end="72:14">pop</name></name><argument_list pos:start="72:15" pos:end="72:16">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="74:5" pos:end="74:17"><expr pos:start="74:5" pos:end="74:16"><name pos:start="74:5" pos:end="74:8">cout</name> <operator pos:start="74:10" pos:end="74:11">&lt;&lt;</operator> <name pos:start="74:13" pos:end="74:16">endl</name></expr>;</expr_stmt>
    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
