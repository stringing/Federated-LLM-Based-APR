<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1166/1166.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<function pos:start="2:1" pos:end="14:1"><type pos:start="2:1" pos:end="2:3"><name pos:start="2:1" pos:end="2:3">int</name></type> <name pos:start="2:5" pos:end="2:9">rdbit</name><parameter_list pos:start="2:10" pos:end="2:11">()</parameter_list>
<block pos:start="3:1" pos:end="14:1">{<block_content pos:start="4:4" pos:end="13:4">
   <decl_stmt pos:start="4:4" pos:end="4:11"><decl pos:start="4:4" pos:end="4:10"><type pos:start="4:4" pos:end="4:6"><name pos:start="4:4" pos:end="4:6">int</name></type> <name pos:start="4:8" pos:end="4:8">a</name><init pos:start="4:9" pos:end="4:10">=<expr pos:start="4:10" pos:end="4:10"><literal type="number" pos:start="4:10" pos:end="4:10">0</literal></expr></init></decl>;</decl_stmt>
   <for pos:start="5:4" pos:end="13:4">for<control pos:start="5:7" pos:end="5:23">(<init pos:start="5:8" pos:end="5:15"><decl pos:start="5:8" pos:end="5:14"><type pos:start="5:8" pos:end="5:10"><name pos:start="5:8" pos:end="5:10">int</name></type> <name pos:start="5:12" pos:end="5:12">i</name><init pos:start="5:13" pos:end="5:14">=<expr pos:start="5:14" pos:end="5:14"><literal type="number" pos:start="5:14" pos:end="5:14">0</literal></expr></init></decl>;</init><condition pos:start="5:16" pos:end="5:19"><expr pos:start="5:16" pos:end="5:18"><name pos:start="5:16" pos:end="5:16">i</name><operator pos:start="5:17" pos:end="5:17">&lt;</operator><literal type="number" pos:start="5:18" pos:end="5:18">8</literal></expr>;</condition><incr pos:start="5:20" pos:end="5:22"><expr pos:start="5:20" pos:end="5:22"><name pos:start="5:20" pos:end="5:20">i</name><operator pos:start="5:21" pos:end="5:22">++</operator></expr></incr>)</control>
   <block pos:start="6:4" pos:end="13:4">{<block_content pos:start="7:8" pos:end="11:8">
       <decl_stmt pos:start="7:8" pos:end="7:14"><decl pos:start="7:8" pos:end="7:13"><type pos:start="7:8" pos:end="7:11"><name pos:start="7:8" pos:end="7:11">char</name></type> <name pos:start="7:13" pos:end="7:13">c</name></decl>;</decl_stmt>
       <if_stmt pos:start="8:8" pos:end="11:8"><if pos:start="8:8" pos:end="11:8">if<condition pos:start="8:10" pos:end="8:30">(<expr pos:start="8:11" pos:end="8:29"><call pos:start="8:11" pos:end="8:24"><name pos:start="8:11" pos:end="8:15">scanf</name><argument_list pos:start="8:16" pos:end="8:24">(<argument pos:start="8:17" pos:end="8:20"><expr pos:start="8:17" pos:end="8:20"><literal type="string" pos:start="8:17" pos:end="8:20">"%c"</literal></expr></argument>,<argument pos:start="8:22" pos:end="8:23"><expr pos:start="8:22" pos:end="8:23"><operator pos:start="8:22" pos:end="8:22">&amp;</operator><name pos:start="8:23" pos:end="8:23">c</name></expr></argument>)</argument_list></call><operator pos:start="8:25" pos:end="8:26">==</operator><name pos:start="8:27" pos:end="8:29">EOF</name></expr>)</condition><block pos:start="8:31" pos:end="11:8">{<block_content pos:start="9:12" pos:end="10:19">
           <expr_stmt pos:start="9:12" pos:end="9:27"><expr pos:start="9:12" pos:end="9:26"><call pos:start="9:12" pos:end="9:26"><name pos:start="9:12" pos:end="9:17">printf</name><argument_list pos:start="9:18" pos:end="9:26">(<argument pos:start="9:19" pos:end="9:25"><expr pos:start="9:19" pos:end="9:25"><literal type="string" pos:start="9:19" pos:end="9:25">"Error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt pos:start="10:12" pos:end="10:19"><expr pos:start="10:12" pos:end="10:18"><call pos:start="10:12" pos:end="10:18"><name pos:start="10:12" pos:end="10:15">exit</name><argument_list pos:start="10:16" pos:end="10:18">(<argument pos:start="10:17" pos:end="10:17"><expr pos:start="10:17" pos:end="10:17"><literal type="number" pos:start="10:17" pos:end="10:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
       
   </block_content>}</block></for> 
</block_content>}</block></function>
</unit>
