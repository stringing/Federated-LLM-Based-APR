<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/101/101.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<struct pos:start="3:1" pos:end="5:7">struct <name pos:start="3:8" pos:end="3:8">p</name><block pos:start="3:9" pos:end="5:1">{<public type="default" pos:start="4:5" pos:end="4:16">
    <decl_stmt pos:start="4:5" pos:end="4:16"><decl pos:start="4:5" pos:end="4:11"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:11">mad</name></decl>,<decl pos:start="4:13" pos:end="4:15"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:13" pos:end="4:15">bao</name></decl>;</decl_stmt>
</public>}</block><decl pos:start="5:2" pos:end="5:6"><name pos:start="5:2" pos:end="5:6"><name pos:start="5:2" pos:end="5:2">a</name><index pos:start="5:3" pos:end="5:6">[<expr pos:start="5:4" pos:end="5:5"><literal type="number" pos:start="5:4" pos:end="5:5">12</literal></expr>]</index></name></decl>;</struct>
<function pos:start="6:1" pos:end="16:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:5">g</name><parameter_list pos:start="6:6" pos:end="6:12">(<parameter pos:start="6:7" pos:end="6:11"><decl pos:start="6:7" pos:end="6:11"><type pos:start="6:7" pos:end="6:9"><name pos:start="6:7" pos:end="6:9">int</name></type> <name pos:start="6:11" pos:end="6:11">x</name></decl></parameter>)</parameter_list><block pos:start="6:13" pos:end="16:1">{<block_content pos:start="7:5" pos:end="15:20">
    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name><init pos:start="7:10" pos:end="7:11">=<expr pos:start="7:11" pos:end="7:11"><literal type="number" pos:start="7:11" pos:end="7:11">0</literal></expr></init></decl>,<decl pos:start="7:13" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:13">m</name><init pos:start="7:14" pos:end="7:15">=<expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>,<decl pos:start="7:17" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:17">b</name><init pos:start="7:18" pos:end="7:19">=<expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="8:5" pos:end="14:5">while<condition pos:start="8:10" pos:end="8:14">(<expr pos:start="8:11" pos:end="8:13"><name pos:start="8:11" pos:end="8:11">x</name><operator pos:start="8:12" pos:end="8:12">&gt;</operator><literal type="number" pos:start="8:13" pos:end="8:13">0</literal></expr>)</condition><block pos:start="8:15" pos:end="14:5">{<block_content pos:start="9:9" pos:end="13:46">
        <if_stmt pos:start="9:9" pos:end="13:46"><if pos:start="9:9" pos:end="12:9">if<condition pos:start="9:11" pos:end="9:18">(<expr pos:start="9:12" pos:end="9:17"><name pos:start="9:12" pos:end="9:12">x</name><operator pos:start="9:13" pos:end="9:13">%</operator><literal type="number" pos:start="9:14" pos:end="9:14">2</literal><operator pos:start="9:15" pos:end="9:16">==</operator><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr>)</condition><block pos:start="9:19" pos:end="12:9">{<block_content pos:start="10:13" pos:end="11:21">
            <expr_stmt pos:start="10:13" pos:end="10:17"><expr pos:start="10:13" pos:end="10:16"><name pos:start="10:13" pos:end="10:13">x</name><operator pos:start="10:14" pos:end="10:15">/=</operator><literal type="number" pos:start="10:16" pos:end="10:16">2</literal></expr>;</expr_stmt>
            <continue pos:start="11:13" pos:end="11:21">continue;</continue>
        </block_content>}</block></if>
        <else pos:start="13:9" pos:end="13:46">else<block type="pseudo" pos:start="13:14" pos:end="13:46"><block_content pos:start="13:14" pos:end="13:46"> <expr_stmt pos:start="13:14" pos:end="13:46"><expr pos:start="13:14" pos:end="13:17"><name pos:start="13:14" pos:end="13:14">x</name><operator pos:start="13:15" pos:end="13:16">/=</operator><literal type="number" pos:start="13:17" pos:end="13:17">2</literal></expr><operator pos:start="13:18" pos:end="13:18">,</operator><expr pos:start="13:19" pos:end="13:29"><name pos:start="13:19" pos:end="13:19">m</name><operator pos:start="13:20" pos:end="13:21">+=</operator><name pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:22">a</name><index pos:start="13:23" pos:end="13:25">[<expr pos:start="13:24" pos:end="13:24"><name pos:start="13:24" pos:end="13:24">i</name></expr>]</index></name><operator pos:start="13:26" pos:end="13:26">.</operator><name pos:start="13:27" pos:end="13:29">mad</name></expr><operator pos:start="13:30" pos:end="13:30">,</operator><expr pos:start="13:31" pos:end="13:41"><name pos:start="13:31" pos:end="13:31">b</name><operator pos:start="13:32" pos:end="13:33">+=</operator><name pos:start="13:34" pos:end="13:37"><name pos:start="13:34" pos:end="13:34">a</name><index pos:start="13:35" pos:end="13:37">[<expr pos:start="13:36" pos:end="13:36"><name pos:start="13:36" pos:end="13:36">i</name></expr>]</index></name><operator pos:start="13:38" pos:end="13:38">.</operator><name pos:start="13:39" pos:end="13:41">bao</name></expr><operator pos:start="13:42" pos:end="13:42">,</operator><expr pos:start="13:43" pos:end="13:45"><name pos:start="13:43" pos:end="13:43">i</name><operator pos:start="13:44" pos:end="13:45">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></while>
    <return pos:start="15:5" pos:end="15:20">return <expr pos:start="15:12" pos:end="15:19"><call pos:start="15:12" pos:end="15:19"><name pos:start="15:12" pos:end="15:14">abs</name><argument_list pos:start="15:15" pos:end="15:19">(<argument pos:start="15:16" pos:end="15:18"><expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:16">m</name><operator pos:start="15:17" pos:end="15:17">-</operator><name pos:start="15:18" pos:end="15:18">b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function pos:start="17:1" pos:end="26:1"><type pos:start="17:1" pos:end="17:3"><name pos:start="17:1" pos:end="17:3">int</name></type> <name pos:start="17:5" pos:end="17:8">main</name><parameter_list pos:start="17:9" pos:end="17:10">()</parameter_list><block pos:start="17:11" pos:end="26:1">{<block_content pos:start="18:5" pos:end="25:13">
    <expr_stmt pos:start="18:5" pos:end="18:36"><expr pos:start="18:5" pos:end="18:35"><call pos:start="18:5" pos:end="18:35"><name pos:start="18:5" pos:end="18:11">freopen</name><argument_list pos:start="18:12" pos:end="18:35">(<argument pos:start="18:13" pos:end="18:22"><expr pos:start="18:13" pos:end="18:22"><literal type="string" pos:start="18:13" pos:end="18:22">"stone.in"</literal></expr></argument>, <argument pos:start="18:25" pos:end="18:27"><expr pos:start="18:25" pos:end="18:27"><literal type="string" pos:start="18:25" pos:end="18:27">"r"</literal></expr></argument>, <argument pos:start="18:30" pos:end="18:34"><expr pos:start="18:30" pos:end="18:34"><name pos:start="18:30" pos:end="18:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><call pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:11">freopen</name><argument_list pos:start="19:12" pos:end="19:37">(<argument pos:start="19:13" pos:end="19:23"><expr pos:start="19:13" pos:end="19:23"><literal type="string" pos:start="19:13" pos:end="19:23">"stone.out"</literal></expr></argument>, <argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><literal type="string" pos:start="19:26" pos:end="19:28">"w"</literal></expr></argument>, <argument pos:start="19:31" pos:end="19:36"><expr pos:start="19:31" pos:end="19:36"><name pos:start="19:31" pos:end="19:36">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="20:5" pos:end="20:25"><decl pos:start="20:5" pos:end="20:22"><type pos:start="20:5" pos:end="20:7"><name pos:start="20:5" pos:end="20:7">int</name></type> <name pos:start="20:9" pos:end="20:11">ans</name><init pos:start="20:12" pos:end="20:22">=<expr pos:start="20:13" pos:end="20:22"><literal type="number" pos:start="20:13" pos:end="20:22">0x3f3f3f3f</literal></expr></init></decl>,<decl pos:start="20:24" pos:end="20:24"><type ref="prev" pos:start="20:5" pos:end="20:7"/><name pos:start="20:24" pos:end="20:24">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:11"><expr pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:7">cin</name><operator pos:start="21:8" pos:end="21:9">&gt;&gt;</operator><name pos:start="21:10" pos:end="21:10">n</name></expr>;</expr_stmt>
    <for pos:start="22:5" pos:end="22:48">for<control pos:start="22:8" pos:end="22:24">(<init pos:start="22:9" pos:end="22:16"><decl pos:start="22:9" pos:end="22:15"><type pos:start="22:9" pos:end="22:11"><name pos:start="22:9" pos:end="22:11">int</name></type> <name pos:start="22:13" pos:end="22:13">i</name><init pos:start="22:14" pos:end="22:15">=<expr pos:start="22:15" pos:end="22:15"><literal type="number" pos:start="22:15" pos:end="22:15">0</literal></expr></init></decl>;</init><condition pos:start="22:17" pos:end="22:20"><expr pos:start="22:17" pos:end="22:19"><name pos:start="22:17" pos:end="22:17">i</name><operator pos:start="22:18" pos:end="22:18">&lt;</operator><name pos:start="22:19" pos:end="22:19">n</name></expr>;</condition><incr pos:start="22:21" pos:end="22:23"><expr pos:start="22:21" pos:end="22:23"><name pos:start="22:21" pos:end="22:21">i</name><operator pos:start="22:22" pos:end="22:23">++</operator></expr></incr>)</control><block type="pseudo" pos:start="22:25" pos:end="22:48"><block_content pos:start="22:25" pos:end="22:48"><expr_stmt pos:start="22:25" pos:end="22:48"><expr pos:start="22:25" pos:end="22:47"><name pos:start="22:25" pos:end="22:27">cin</name><operator pos:start="22:28" pos:end="22:29">&gt;&gt;</operator><name pos:start="22:30" pos:end="22:33"><name pos:start="22:30" pos:end="22:30">a</name><index pos:start="22:31" pos:end="22:33">[<expr pos:start="22:32" pos:end="22:32"><name pos:start="22:32" pos:end="22:32">i</name></expr>]</index></name><operator pos:start="22:34" pos:end="22:34">.</operator><name pos:start="22:35" pos:end="22:37">mad</name><operator pos:start="22:38" pos:end="22:39">&gt;&gt;</operator><name pos:start="22:40" pos:end="22:43"><name pos:start="22:40" pos:end="22:40">a</name><index pos:start="22:41" pos:end="22:43">[<expr pos:start="22:42" pos:end="22:42"><name pos:start="22:42" pos:end="22:42">i</name></expr>]</index></name><operator pos:start="22:44" pos:end="22:44">.</operator><name pos:start="22:45" pos:end="22:47">bao</name></expr>;</expr_stmt></block_content></block></for>
    <for pos:start="23:5" pos:end="23:43">for<control pos:start="23:8" pos:end="23:25">(<init pos:start="23:9" pos:end="23:16"><decl pos:start="23:9" pos:end="23:15"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">i</name><init pos:start="23:14" pos:end="23:15">=<expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">1</literal></expr></init></decl>;</init><condition pos:start="23:17" pos:end="23:21"><expr pos:start="23:17" pos:end="23:20"><name pos:start="23:17" pos:end="23:17">i</name><operator pos:start="23:18" pos:end="23:19">&lt;=</operator><name pos:start="23:20" pos:end="23:20">n</name></expr>;</condition><incr pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:22">i</name><operator pos:start="23:23" pos:end="23:24">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:26" pos:end="23:43"><block_content pos:start="23:26" pos:end="23:43"><expr_stmt pos:start="23:26" pos:end="23:43"><expr pos:start="23:26" pos:end="23:42"><name pos:start="23:26" pos:end="23:28">ans</name><operator pos:start="23:29" pos:end="23:29">=</operator><call pos:start="23:30" pos:end="23:42"><name pos:start="23:30" pos:end="23:32">min</name><argument_list pos:start="23:33" pos:end="23:42">(<argument pos:start="23:34" pos:end="23:36"><expr pos:start="23:34" pos:end="23:36"><name pos:start="23:34" pos:end="23:36">ans</name></expr></argument>,<argument pos:start="23:38" pos:end="23:41"><expr pos:start="23:38" pos:end="23:41"><call pos:start="23:38" pos:end="23:41"><name pos:start="23:38" pos:end="23:38">g</name><argument_list pos:start="23:39" pos:end="23:41">(<argument pos:start="23:40" pos:end="23:40"><expr pos:start="23:40" pos:end="23:40"><name pos:start="23:40" pos:end="23:40">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="24:5" pos:end="24:14"><expr pos:start="24:5" pos:end="24:13"><name pos:start="24:5" pos:end="24:8">cout</name><operator pos:start="24:9" pos:end="24:10">&lt;&lt;</operator><name pos:start="24:11" pos:end="24:13">ans</name></expr>;</expr_stmt>
    <return pos:start="25:5" pos:end="25:13">return <expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
