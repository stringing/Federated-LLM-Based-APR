<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1181/1181.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:23"><decl pos:start="3:1" pos:end="3:22"><type pos:start="3:1" pos:end="3:11"><name pos:start="3:1" pos:end="3:11"><name pos:start="3:1" pos:end="3:6">vector</name><argument_list type="generic" pos:start="3:7" pos:end="3:11">&lt;<argument pos:start="3:8" pos:end="3:10"><expr pos:start="3:8" pos:end="3:10"><name pos:start="3:8" pos:end="3:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="3:13" pos:end="3:22"><name pos:start="3:13" pos:end="3:16">tree</name><index pos:start="3:17" pos:end="3:22">[<expr pos:start="3:18" pos:end="3:21"><literal type="number" pos:start="3:18" pos:end="3:21">1010</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="22:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="22:1">{<block_content pos:start="5:5" pos:end="21:13">
    <expr_stmt pos:start="5:5" pos:end="5:32"><expr pos:start="5:5" pos:end="5:31"><call pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:31">(<argument pos:start="5:13" pos:end="5:18"><expr pos:start="5:13" pos:end="5:18"><literal type="string" pos:start="5:13" pos:end="5:18">"p.in"</literal></expr></argument>, <argument pos:start="5:21" pos:end="5:23"><expr pos:start="5:21" pos:end="5:23"><literal type="string" pos:start="5:21" pos:end="5:23">"r"</literal></expr></argument>, <argument pos:start="5:26" pos:end="5:30"><expr pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:34"><expr pos:start="6:5" pos:end="6:33"><call pos:start="6:5" pos:end="6:33"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:33">(<argument pos:start="6:13" pos:end="6:19"><expr pos:start="6:13" pos:end="6:19"><literal type="string" pos:start="6:13" pos:end="6:19">"p.out"</literal></expr></argument>, <argument pos:start="6:22" pos:end="6:24"><expr pos:start="6:22" pos:end="6:24"><literal type="string" pos:start="6:22" pos:end="6:24">"w"</literal></expr></argument>, <argument pos:start="6:27" pos:end="6:32"><expr pos:start="6:27" pos:end="6:32"><name pos:start="6:27" pos:end="6:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:13"><expr pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:7">cin</name> <operator pos:start="8:9" pos:end="8:10">&gt;&gt;</operator> <name pos:start="8:12" pos:end="8:12">t</name></expr>;</expr_stmt>
    <while pos:start="9:5" pos:end="20:5">while <condition pos:start="9:11" pos:end="9:15">(<expr pos:start="9:12" pos:end="9:14"><name pos:start="9:12" pos:end="9:12">t</name><operator pos:start="9:13" pos:end="9:14">--</operator></expr>)</condition> <block pos:start="9:17" pos:end="20:5">{<block_content pos:start="10:9" pos:end="19:9">
        <decl_stmt pos:start="10:9" pos:end="10:14"><decl pos:start="10:9" pos:end="10:13"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">n</name></decl>;</decl_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:17"><expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:11">cin</name> <operator pos:start="11:13" pos:end="11:14">&gt;&gt;</operator> <name pos:start="11:16" pos:end="11:16">n</name></expr>;</expr_stmt>
        <for pos:start="12:9" pos:end="16:9">for <control pos:start="12:13" pos:end="12:39">(<init pos:start="12:14" pos:end="12:23"><decl pos:start="12:14" pos:end="12:22"><type pos:start="12:14" pos:end="12:16"><name pos:start="12:14" pos:end="12:16">int</name></type> <name pos:start="12:18" pos:end="12:18">i</name> <init pos:start="12:20" pos:end="12:22">= <expr pos:start="12:22" pos:end="12:22"><literal type="number" pos:start="12:22" pos:end="12:22">0</literal></expr></init></decl>;</init> <condition pos:start="12:25" pos:end="12:34"><expr pos:start="12:25" pos:end="12:33"><name pos:start="12:25" pos:end="12:25">i</name> <operator pos:start="12:27" pos:end="12:27">&lt;</operator> <name pos:start="12:29" pos:end="12:29">n</name> <operator pos:start="12:31" pos:end="12:31">-</operator> <literal type="number" pos:start="12:33" pos:end="12:33">1</literal></expr>;</condition> <incr pos:start="12:36" pos:end="12:38"><expr pos:start="12:36" pos:end="12:38"><name pos:start="12:36" pos:end="12:36">i</name><operator pos:start="12:37" pos:end="12:38">++</operator></expr></incr>)</control> <block pos:start="12:41" pos:end="16:9">{<block_content pos:start="13:13" pos:end="15:33">
            <decl_stmt pos:start="13:13" pos:end="13:21"><decl pos:start="13:13" pos:end="13:17"><type pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:15">int</name></type> <name pos:start="13:17" pos:end="13:17">x</name></decl>, <decl pos:start="13:20" pos:end="13:20"><type ref="prev" pos:start="13:13" pos:end="13:15"/><name pos:start="13:20" pos:end="13:20">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:26"><expr pos:start="14:13" pos:end="14:25"><name pos:start="14:13" pos:end="14:15">cin</name> <operator pos:start="14:17" pos:end="14:18">&gt;&gt;</operator> <name pos:start="14:20" pos:end="14:20">x</name> <operator pos:start="14:22" pos:end="14:23">&gt;&gt;</operator> <name pos:start="14:25" pos:end="14:25">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:33"><expr pos:start="15:13" pos:end="15:32"><name pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:16">tree</name><index pos:start="15:17" pos:end="15:19">[<expr pos:start="15:18" pos:end="15:18"><name pos:start="15:18" pos:end="15:18">x</name></expr>]</index></name><operator pos:start="15:20" pos:end="15:20">.</operator><call pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:29">push_back</name><argument_list pos:start="15:30" pos:end="15:32">(<argument pos:start="15:31" pos:end="15:31"><expr pos:start="15:31" pos:end="15:31"><name pos:start="15:31" pos:end="15:31">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="17:9" pos:end="19:9">for <control pos:start="17:13" pos:end="17:39">(<init pos:start="17:14" pos:end="17:23"><decl pos:start="17:14" pos:end="17:22"><type pos:start="17:14" pos:end="17:16"><name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:18">i</name> <init pos:start="17:20" pos:end="17:22">= <expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr></init></decl>;</init> <condition pos:start="17:25" pos:end="17:34"><expr pos:start="17:25" pos:end="17:33"><name pos:start="17:25" pos:end="17:25">i</name> <operator pos:start="17:27" pos:end="17:28">&lt;=</operator> <literal type="number" pos:start="17:30" pos:end="17:33">1010</literal></expr>;</condition> <incr pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:36">i</name><operator pos:start="17:37" pos:end="17:38">++</operator></expr></incr>)</control> <block pos:start="17:41" pos:end="19:9">{<block_content pos:start="18:13" pos:end="18:28">
            <expr_stmt pos:start="18:13" pos:end="18:28"><expr pos:start="18:13" pos:end="18:27"><name pos:start="18:13" pos:end="18:19"><name pos:start="18:13" pos:end="18:16">tree</name><index pos:start="18:17" pos:end="18:19">[<expr pos:start="18:18" pos:end="18:18"><name pos:start="18:18" pos:end="18:18">i</name></expr>]</index></name><operator pos:start="18:20" pos:end="18:20">.</operator><call pos:start="18:21" pos:end="18:27"><name pos:start="18:21" pos:end="18:25">clear</name><argument_list pos:start="18:26" pos:end="18:27">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></while>
    <return pos:start="21:5" pos:end="21:13">return <expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
