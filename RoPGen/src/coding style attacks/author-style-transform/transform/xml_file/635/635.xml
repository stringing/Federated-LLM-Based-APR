<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/635/635.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="22:1"><type pos:start="3:1" pos:end="3:4"><name pos:start="3:1" pos:end="3:4">void</name></type> <name pos:start="3:6" pos:end="3:6">f</name><parameter_list pos:start="3:7" pos:end="3:19">(<parameter pos:start="3:8" pos:end="3:18"><decl pos:start="3:8" pos:end="3:18"><type pos:start="3:8" pos:end="3:16"><name pos:start="3:8" pos:end="3:11">long</name> <name pos:start="3:13" pos:end="3:16">long</name></type> <name pos:start="3:18" pos:end="3:18">n</name></decl></parameter>)</parameter_list><block pos:start="3:20" pos:end="22:1">{<block_content pos:start="4:5" pos:end="21:5">
    <if_stmt pos:start="4:5" pos:end="7:5"><if pos:start="4:5" pos:end="7:5">if<condition pos:start="4:7" pos:end="4:15">(<expr pos:start="4:8" pos:end="4:14"><name pos:start="4:8" pos:end="4:8">n</name> <operator pos:start="4:10" pos:end="4:11">==</operator> <literal type="number" pos:start="4:13" pos:end="4:14">12</literal></expr>)</condition><block pos:start="4:16" pos:end="7:5">{<block_content pos:start="5:9" pos:end="6:15">
        <expr_stmt pos:start="5:9" pos:end="5:66"><expr pos:start="5:9" pos:end="5:65"><name pos:start="5:9" pos:end="5:12">cout</name> <operator pos:start="5:14" pos:end="5:15">&lt;&lt;</operator> <literal type="string" pos:start="5:17" pos:end="5:20">"12"</literal> <operator pos:start="5:22" pos:end="5:23">&lt;&lt;</operator> <literal type="string" pos:start="5:25" pos:end="5:28">", "</literal> <operator pos:start="5:30" pos:end="5:31">&lt;&lt;</operator> <literal type="string" pos:start="5:33" pos:end="5:35">"6"</literal> <operator pos:start="5:37" pos:end="5:38">&lt;&lt;</operator> <literal type="string" pos:start="5:40" pos:end="5:43">", "</literal> <operator pos:start="5:45" pos:end="5:46">&lt;&lt;</operator> <literal type="string" pos:start="5:48" pos:end="5:50">"3"</literal> <operator pos:start="5:52" pos:end="5:53">&lt;&lt;</operator> <literal type="string" pos:start="5:55" pos:end="5:58">", "</literal> <operator pos:start="5:60" pos:end="5:61">&lt;&lt;</operator><literal type="string" pos:start="5:62" pos:end="5:65">"12"</literal></expr>;</expr_stmt>
        <return pos:start="6:9" pos:end="6:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="8:5" pos:end="11:5"><if pos:start="8:5" pos:end="11:5">if<condition pos:start="8:7" pos:end="8:14">(<expr pos:start="8:8" pos:end="8:13"><name pos:start="8:8" pos:end="8:8">n</name> <operator pos:start="8:10" pos:end="8:11">==</operator> <literal type="number" pos:start="8:13" pos:end="8:13">6</literal></expr>)</condition><block pos:start="8:15" pos:end="11:5">{<block_content pos:start="9:9" pos:end="10:16">
        <expr_stmt pos:start="9:9" pos:end="9:62"><expr pos:start="9:9" pos:end="9:61"><name pos:start="9:9" pos:end="9:12">cout</name> <operator pos:start="9:14" pos:end="9:15">&lt;&lt;</operator>  <literal type="string" pos:start="9:18" pos:end="9:20">"6"</literal> <operator pos:start="9:22" pos:end="9:23">&lt;&lt;</operator><literal type="string" pos:start="9:24" pos:end="9:27">", "</literal> <operator pos:start="9:29" pos:end="9:30">&lt;&lt;</operator> <literal type="string" pos:start="9:32" pos:end="9:35">"12"</literal> <operator pos:start="9:37" pos:end="9:38">&lt;&lt;</operator><literal type="string" pos:start="9:39" pos:end="9:42">", "</literal><operator pos:start="9:43" pos:end="9:44">&lt;&lt;</operator> <literal type="string" pos:start="9:46" pos:end="9:48">"6"</literal> <operator pos:start="9:50" pos:end="9:51">&lt;&lt;</operator><literal type="string" pos:start="9:52" pos:end="9:55">", "</literal><operator pos:start="9:56" pos:end="9:57">&lt;&lt;</operator> <literal type="string" pos:start="9:59" pos:end="9:61">"6"</literal></expr>;</expr_stmt>
        <return pos:start="10:9" pos:end="10:16">return ;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="12:5" pos:end="15:5"><if pos:start="12:5" pos:end="15:5">if<condition pos:start="12:7" pos:end="12:14">(<expr pos:start="12:8" pos:end="12:13"><name pos:start="12:8" pos:end="12:8">n</name> <operator pos:start="12:10" pos:end="12:11">==</operator> <literal type="number" pos:start="12:13" pos:end="12:13">3</literal></expr>)</condition><block pos:start="12:15" pos:end="15:5">{<block_content pos:start="13:9" pos:end="14:16">
        <expr_stmt pos:start="13:9" pos:end="13:60"><expr pos:start="13:9" pos:end="13:59"><name pos:start="13:9" pos:end="13:12">cout</name> <operator pos:start="13:14" pos:end="13:15">&lt;&lt;</operator><literal type="string" pos:start="13:16" pos:end="13:18">"3"</literal> <operator pos:start="13:20" pos:end="13:21">&lt;&lt;</operator><literal type="string" pos:start="13:22" pos:end="13:25">", "</literal> <operator pos:start="13:27" pos:end="13:28">&lt;&lt;</operator> <literal type="string" pos:start="13:30" pos:end="13:33">"12"</literal><operator pos:start="13:34" pos:end="13:35">&lt;&lt;</operator><literal type="string" pos:start="13:36" pos:end="13:39">", "</literal> <operator pos:start="13:41" pos:end="13:42">&lt;&lt;</operator> <literal type="string" pos:start="13:44" pos:end="13:46">"6"</literal><operator pos:start="13:47" pos:end="13:48">&lt;&lt;</operator><literal type="string" pos:start="13:49" pos:end="13:52">", "</literal> <operator pos:start="13:54" pos:end="13:55">&lt;&lt;</operator> <literal type="string" pos:start="13:57" pos:end="13:59">"3"</literal></expr>;</expr_stmt>
        <return pos:start="14:9" pos:end="14:16">return ;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:21"><expr pos:start="16:5" pos:end="16:20"><name pos:start="16:5" pos:end="16:8">cout</name> <operator pos:start="16:10" pos:end="16:11">&lt;&lt;</operator> <name pos:start="16:13" pos:end="16:13">n</name> <operator pos:start="16:15" pos:end="16:16">&lt;&lt;</operator> <literal type="string" pos:start="16:18" pos:end="16:20">","</literal></expr>;</expr_stmt>
    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="19:5">if<condition pos:start="17:7" pos:end="17:17">(<expr pos:start="17:8" pos:end="17:16"><name pos:start="17:8" pos:end="17:8">n</name> <operator pos:start="17:10" pos:end="17:10">%</operator><literal type="number" pos:start="17:11" pos:end="17:11">2</literal> <operator pos:start="17:13" pos:end="17:14">==</operator> <literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>)</condition><block pos:start="17:18" pos:end="19:5">{<block_content pos:start="18:9" pos:end="18:15">
        <expr_stmt pos:start="18:9" pos:end="18:15"><expr pos:start="18:9" pos:end="18:14"><call pos:start="18:9" pos:end="18:14"><name pos:start="18:9" pos:end="18:9">f</name><argument_list pos:start="18:10" pos:end="18:14">(<argument pos:start="18:11" pos:end="18:13"><expr pos:start="18:11" pos:end="18:13"><name pos:start="18:11" pos:end="18:11">n</name><operator pos:start="18:12" pos:end="18:12">/</operator><literal type="number" pos:start="18:13" pos:end="18:13">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="19:6" pos:end="21:5">else<block pos:start="19:10" pos:end="21:5">{<block_content pos:start="20:9" pos:end="20:19">
        <expr_stmt pos:start="20:9" pos:end="20:19"><expr pos:start="20:9" pos:end="20:18"><call pos:start="20:9" pos:end="20:18"><name pos:start="20:9" pos:end="20:9">f</name><argument_list pos:start="20:10" pos:end="20:18">(<argument pos:start="20:11" pos:end="20:17"><expr pos:start="20:11" pos:end="20:17"><literal type="number" pos:start="20:11" pos:end="20:11">3</literal><operator pos:start="20:12" pos:end="20:12">*</operator><name pos:start="20:13" pos:end="20:13">n</name> <operator pos:start="20:15" pos:end="20:15">+</operator> <literal type="number" pos:start="20:17" pos:end="20:17">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="23:1" pos:end="27:1"><type pos:start="23:1" pos:end="23:3"><name pos:start="23:1" pos:end="23:3">int</name></type> <name pos:start="23:5" pos:end="23:8">main</name><parameter_list pos:start="23:9" pos:end="23:10">()</parameter_list><block pos:start="23:11" pos:end="27:1">{<block_content pos:start="24:5" pos:end="26:9">
    <decl_stmt pos:start="24:5" pos:end="24:10"><decl pos:start="24:5" pos:end="24:9"><type pos:start="24:5" pos:end="24:7"><name pos:start="24:5" pos:end="24:7">int</name></type> <name pos:start="24:9" pos:end="24:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:13"><expr pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:7">cin</name> <operator pos:start="25:9" pos:end="25:10">&gt;&gt;</operator> <name pos:start="25:12" pos:end="25:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:9"><expr pos:start="26:5" pos:end="26:8"><call pos:start="26:5" pos:end="26:8"><name pos:start="26:5" pos:end="26:5">f</name><argument_list pos:start="26:6" pos:end="26:8">(<argument pos:start="26:7" pos:end="26:7"><expr pos:start="26:7" pos:end="26:7"><name pos:start="26:7" pos:end="26:7">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
