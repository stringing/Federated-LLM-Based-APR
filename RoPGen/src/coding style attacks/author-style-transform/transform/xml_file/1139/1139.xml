<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1139/1139.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="10:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">sum</name><parameter_list pos:start="3:8" pos:end="3:14">(<parameter pos:start="3:9" pos:end="3:13"><decl pos:start="3:9" pos:end="3:13"><type pos:start="3:9" pos:end="3:11"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:13">x</name></decl></parameter>)</parameter_list><block pos:start="3:15" pos:end="10:1">{<block_content pos:start="4:5" pos:end="9:13">
    <decl_stmt pos:start="4:5" pos:end="4:12"><decl pos:start="4:5" pos:end="4:11"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">s</name><init pos:start="4:10" pos:end="4:11">=<expr pos:start="4:11" pos:end="4:11"><literal type="number" pos:start="4:11" pos:end="4:11">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="5:5" pos:end="8:5">while<condition pos:start="5:10" pos:end="5:12">(<expr pos:start="5:11" pos:end="5:11"><name pos:start="5:11" pos:end="5:11">x</name></expr>)</condition><block pos:start="5:13" pos:end="8:5">{<block_content pos:start="6:9" pos:end="7:14">
        <expr_stmt pos:start="6:9" pos:end="6:15"><expr pos:start="6:9" pos:end="6:14"><name pos:start="6:9" pos:end="6:9">s</name><operator pos:start="6:10" pos:end="6:10">=</operator><name pos:start="6:11" pos:end="6:11">x</name><operator pos:start="6:12" pos:end="6:12">%</operator><literal type="number" pos:start="6:13" pos:end="6:14">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="7:9" pos:end="7:14"><expr pos:start="7:9" pos:end="7:13"><name pos:start="7:9" pos:end="7:9">x</name><operator pos:start="7:10" pos:end="7:11">/=</operator><literal type="number" pos:start="7:12" pos:end="7:13">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="9:5" pos:end="9:13">return <expr pos:start="9:12" pos:end="9:12"><name pos:start="9:12" pos:end="9:12">s</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="11:1" pos:end="16:1"><type pos:start="11:1" pos:end="11:3"><name pos:start="11:1" pos:end="11:3">int</name></type> <name pos:start="11:5" pos:end="11:7">cmp</name><parameter_list pos:start="11:8" pos:end="11:20">(<parameter pos:start="11:9" pos:end="11:13"><decl pos:start="11:9" pos:end="11:13"><type pos:start="11:9" pos:end="11:13"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">a</name></decl></parameter>,<parameter pos:start="11:15" pos:end="11:19"><decl pos:start="11:15" pos:end="11:19"><type pos:start="11:15" pos:end="11:19"><name pos:start="11:15" pos:end="11:17">int</name></type> <name pos:start="11:19" pos:end="11:19">b</name></decl></parameter>)</parameter_list><block pos:start="11:21" pos:end="16:1">{<block_content pos:start="12:5" pos:end="15:15">
    <if_stmt pos:start="12:5" pos:end="14:5"><if pos:start="12:5" pos:end="14:5">if<condition pos:start="12:7" pos:end="12:22">(<expr pos:start="12:8" pos:end="12:21"><call pos:start="12:8" pos:end="12:13"><name pos:start="12:8" pos:end="12:10">sum</name><argument_list pos:start="12:11" pos:end="12:13">(<argument pos:start="12:12" pos:end="12:12"><expr pos:start="12:12" pos:end="12:12"><name pos:start="12:12" pos:end="12:12">a</name></expr></argument>)</argument_list></call><operator pos:start="12:14" pos:end="12:15">!=</operator><call pos:start="12:16" pos:end="12:21"><name pos:start="12:16" pos:end="12:18">sum</name><argument_list pos:start="12:19" pos:end="12:21">(<argument pos:start="12:20" pos:end="12:20"><expr pos:start="12:20" pos:end="12:20"><name pos:start="12:20" pos:end="12:20">b</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="12:23" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:29">
        <return pos:start="13:9" pos:end="13:29">return <expr pos:start="13:16" pos:end="13:28"><call pos:start="13:16" pos:end="13:21"><name pos:start="13:16" pos:end="13:18">sum</name><argument_list pos:start="13:19" pos:end="13:21">(<argument pos:start="13:20" pos:end="13:20"><expr pos:start="13:20" pos:end="13:20"><name pos:start="13:20" pos:end="13:20">a</name></expr></argument>)</argument_list></call><operator pos:start="13:22" pos:end="13:22">&lt;</operator><call pos:start="13:23" pos:end="13:28"><name pos:start="13:23" pos:end="13:25">sum</name><argument_list pos:start="13:26" pos:end="13:28">(<argument pos:start="13:27" pos:end="13:27"><expr pos:start="13:27" pos:end="13:27"><name pos:start="13:27" pos:end="13:27">b</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="15:5" pos:end="15:15">return <expr pos:start="15:12" pos:end="15:14"><name pos:start="15:12" pos:end="15:12">a</name><operator pos:start="15:13" pos:end="15:13">&lt;</operator><name pos:start="15:14" pos:end="15:14">b</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="17:1" pos:end="29:1"><type pos:start="17:1" pos:end="17:3"><name pos:start="17:1" pos:end="17:3">int</name></type> <name pos:start="17:5" pos:end="17:8">main</name><parameter_list pos:start="17:9" pos:end="17:10">()</parameter_list> <block pos:start="17:12" pos:end="29:1">{<block_content pos:start="18:5" pos:end="28:13">
    <decl_stmt pos:start="18:5" pos:end="18:17"><decl pos:start="18:5" pos:end="18:16"><type pos:start="18:5" pos:end="18:7"><name pos:start="18:5" pos:end="18:7">int</name></type> <name pos:start="18:9" pos:end="18:16"><name pos:start="18:9" pos:end="18:9">s</name><index pos:start="18:10" pos:end="18:16">[<expr pos:start="18:11" pos:end="18:15"><literal type="number" pos:start="18:11" pos:end="18:15">10000</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:11"><expr pos:start="20:5" pos:end="20:10"><name pos:start="20:5" pos:end="20:7">cin</name><operator pos:start="20:8" pos:end="20:9">&gt;&gt;</operator><name pos:start="20:10" pos:end="20:10">n</name></expr>;</expr_stmt>
    <for pos:start="21:5" pos:end="23:5">for<control pos:start="21:8" pos:end="21:24">(<init pos:start="21:9" pos:end="21:16"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">i</name><init pos:start="21:14" pos:end="21:15">=<expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr></init></decl>;</init><condition pos:start="21:17" pos:end="21:20"><expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:17">i</name><operator pos:start="21:18" pos:end="21:18">&lt;</operator><name pos:start="21:19" pos:end="21:19">n</name></expr>;</condition><incr pos:start="21:21" pos:end="21:23"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:21">i</name><operator pos:start="21:22" pos:end="21:23">++</operator></expr></incr>)</control><block pos:start="21:25" pos:end="23:5">{<block_content pos:start="22:9" pos:end="22:18">
        <expr_stmt pos:start="22:9" pos:end="22:18"><expr pos:start="22:9" pos:end="22:17"><name pos:start="22:9" pos:end="22:11">cin</name><operator pos:start="22:12" pos:end="22:13">&gt;&gt;</operator><name pos:start="22:14" pos:end="22:17"><name pos:start="22:14" pos:end="22:14">s</name><index pos:start="22:15" pos:end="22:17">[<expr pos:start="22:16" pos:end="22:16"><name pos:start="22:16" pos:end="22:16">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="24:5" pos:end="24:20"><expr pos:start="24:5" pos:end="24:19"><call pos:start="24:5" pos:end="24:19"><name pos:start="24:5" pos:end="24:8">sort</name><argument_list pos:start="24:9" pos:end="24:19">(<argument pos:start="24:10" pos:end="24:10"><expr pos:start="24:10" pos:end="24:10"><name pos:start="24:10" pos:end="24:10">s</name></expr></argument>,<argument pos:start="24:12" pos:end="24:14"><expr pos:start="24:12" pos:end="24:14"><name pos:start="24:12" pos:end="24:12">s</name><operator pos:start="24:13" pos:end="24:13">+</operator><name pos:start="24:14" pos:end="24:14">n</name></expr></argument>,<argument pos:start="24:16" pos:end="24:18"><expr pos:start="24:16" pos:end="24:18"><name pos:start="24:16" pos:end="24:18">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="25:5" pos:end="27:5">for<control pos:start="25:8" pos:end="25:24">(<init pos:start="25:9" pos:end="25:16"><decl pos:start="25:9" pos:end="25:15"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">i</name><init pos:start="25:14" pos:end="25:15">=<expr pos:start="25:15" pos:end="25:15"><literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr></init></decl>;</init><condition pos:start="25:17" pos:end="25:20"><expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:17">i</name><operator pos:start="25:18" pos:end="25:18">&lt;</operator><name pos:start="25:19" pos:end="25:19">n</name></expr>;</condition><incr pos:start="25:21" pos:end="25:23"><expr pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:21">i</name><operator pos:start="25:22" pos:end="25:23">++</operator></expr></incr>)</control><block pos:start="25:25" pos:end="27:5">{<block_content pos:start="26:9" pos:end="26:24">
        <expr_stmt pos:start="26:9" pos:end="26:24"><expr pos:start="26:9" pos:end="26:23"><name pos:start="26:9" pos:end="26:12">cout</name><operator pos:start="26:13" pos:end="26:14">&lt;&lt;</operator><name pos:start="26:15" pos:end="26:18"><name pos:start="26:15" pos:end="26:15">s</name><index pos:start="26:16" pos:end="26:18">[<expr pos:start="26:17" pos:end="26:17"><name pos:start="26:17" pos:end="26:17">i</name></expr>]</index></name><operator pos:start="26:19" pos:end="26:20">&lt;&lt;</operator><literal type="string" pos:start="26:21" pos:end="26:23">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="28:5" pos:end="28:13">return <expr pos:start="28:12" pos:end="28:12"><literal type="number" pos:start="28:12" pos:end="28:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
