<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/655/655.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:20"><decl pos:start="3:1" pos:end="3:19"><type pos:start="3:1" pos:end="3:9"><specifier pos:start="3:1" pos:end="3:5">const</specifier> <name pos:start="3:7" pos:end="3:9">int</name></type> <name pos:start="3:11" pos:end="3:14">maxn</name><init pos:start="3:15" pos:end="3:19">=<expr pos:start="3:16" pos:end="3:19"><literal type="number" pos:start="3:16" pos:end="3:19">1234</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:20"><decl pos:start="4:1" pos:end="4:19"><type pos:start="4:1" pos:end="4:11"><name pos:start="4:1" pos:end="4:11"><name pos:start="4:1" pos:end="4:6">vector</name><argument_list type="generic" pos:start="4:7" pos:end="4:11">&lt;<argument pos:start="4:8" pos:end="4:10"><expr pos:start="4:8" pos:end="4:10"><name pos:start="4:8" pos:end="4:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="4:13" pos:end="4:19"><name pos:start="4:13" pos:end="4:13">G</name><index pos:start="4:14" pos:end="4:19">[<expr pos:start="4:15" pos:end="4:18"><name pos:start="4:15" pos:end="4:18">maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:13"><decl pos:start="5:1" pos:end="5:12"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:6">fa</name><index pos:start="5:7" pos:end="5:12">[<expr pos:start="5:8" pos:end="5:11"><name pos:start="5:8" pos:end="5:11">maxn</name></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="36:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list><block pos:start="6:11" pos:end="36:1">{<block_content pos:start="7:5" pos:end="35:13">
    <expr_stmt pos:start="7:5" pos:end="7:30"><expr pos:start="7:5" pos:end="7:29"><call pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:29">(<argument pos:start="7:13" pos:end="7:18"><expr pos:start="7:13" pos:end="7:18"><literal type="string" pos:start="7:13" pos:end="7:18">"p.in"</literal></expr></argument>,<argument pos:start="7:20" pos:end="7:22"><expr pos:start="7:20" pos:end="7:22"><literal type="string" pos:start="7:20" pos:end="7:22">"r"</literal></expr></argument>,<argument pos:start="7:24" pos:end="7:28"><expr pos:start="7:24" pos:end="7:28"><name pos:start="7:24" pos:end="7:28">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:32"><expr pos:start="8:5" pos:end="8:31"><call pos:start="8:5" pos:end="8:31"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:31">(<argument pos:start="8:13" pos:end="8:19"><expr pos:start="8:13" pos:end="8:19"><literal type="string" pos:start="8:13" pos:end="8:19">"p.out"</literal></expr></argument>,<argument pos:start="8:21" pos:end="8:23"><expr pos:start="8:21" pos:end="8:23"><literal type="string" pos:start="8:21" pos:end="8:23">"w"</literal></expr></argument>,<argument pos:start="8:25" pos:end="8:30"><expr pos:start="8:25" pos:end="8:30"><name pos:start="8:25" pos:end="8:30">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:11"><expr pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:7">cin</name><operator pos:start="10:8" pos:end="10:9">&gt;&gt;</operator><name pos:start="10:10" pos:end="10:10">t</name></expr>;</expr_stmt>
    <while pos:start="11:5" pos:end="34:5">while<condition pos:start="11:10" pos:end="11:14">(<expr pos:start="11:11" pos:end="11:13"><name pos:start="11:11" pos:end="11:11">t</name><operator pos:start="11:12" pos:end="11:13">--</operator></expr>)</condition><block pos:start="11:15" pos:end="34:5">{<block_content pos:start="12:9" pos:end="33:24">
        <decl_stmt pos:start="12:9" pos:end="12:14"><decl pos:start="12:9" pos:end="12:13"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">n</name></decl>;</decl_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:15"><expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:11">cin</name><operator pos:start="13:12" pos:end="13:13">&gt;&gt;</operator><name pos:start="13:14" pos:end="13:14">n</name></expr>;</expr_stmt>
        <for pos:start="14:9" pos:end="19:9">for<control pos:start="14:12" pos:end="14:30">(<init pos:start="14:13" pos:end="14:20"><decl pos:start="14:13" pos:end="14:19"><type pos:start="14:13" pos:end="14:15"><name pos:start="14:13" pos:end="14:15">int</name></type> <name pos:start="14:17" pos:end="14:17">i</name><init pos:start="14:18" pos:end="14:19">=<expr pos:start="14:19" pos:end="14:19"><literal type="number" pos:start="14:19" pos:end="14:19">0</literal></expr></init></decl>;</init><condition pos:start="14:21" pos:end="14:26"><expr pos:start="14:21" pos:end="14:25"><name pos:start="14:21" pos:end="14:21">i</name><operator pos:start="14:22" pos:end="14:22">&lt;</operator><name pos:start="14:23" pos:end="14:23">n</name><operator pos:start="14:24" pos:end="14:24">-</operator><literal type="number" pos:start="14:25" pos:end="14:25">1</literal></expr>;</condition><incr pos:start="14:27" pos:end="14:29"><expr pos:start="14:27" pos:end="14:29"><name pos:start="14:27" pos:end="14:27">i</name><operator pos:start="14:28" pos:end="14:29">++</operator></expr></incr>)</control><block pos:start="14:31" pos:end="19:9">{<block_content pos:start="15:13" pos:end="18:20">
            <decl_stmt pos:start="15:13" pos:end="15:20"><decl pos:start="15:13" pos:end="15:17"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:17">u</name></decl>,<decl pos:start="15:19" pos:end="15:19"><type ref="prev" pos:start="15:13" pos:end="15:15"/><name pos:start="15:19" pos:end="15:19">v</name></decl>;</decl_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:22"><expr pos:start="16:13" pos:end="16:21"><name pos:start="16:13" pos:end="16:15">cin</name><operator pos:start="16:16" pos:end="16:17">&gt;&gt;</operator><name pos:start="16:18" pos:end="16:18">u</name><operator pos:start="16:19" pos:end="16:20">&gt;&gt;</operator><name pos:start="16:21" pos:end="16:21">v</name></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:30"><expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:13">G</name><index pos:start="17:14" pos:end="17:16">[<expr pos:start="17:15" pos:end="17:15"><name pos:start="17:15" pos:end="17:15">u</name></expr>]</index></name><operator pos:start="17:17" pos:end="17:17">.</operator><call pos:start="17:18" pos:end="17:29"><name pos:start="17:18" pos:end="17:26">push_back</name><argument_list pos:start="17:27" pos:end="17:29">(<argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:20"><expr pos:start="18:13" pos:end="18:19"><name pos:start="18:13" pos:end="18:17"><name pos:start="18:13" pos:end="18:14">fa</name><index pos:start="18:15" pos:end="18:17">[<expr pos:start="18:16" pos:end="18:16"><name pos:start="18:16" pos:end="18:16">v</name></expr>]</index></name><operator pos:start="18:18" pos:end="18:18">=</operator><name pos:start="18:19" pos:end="18:19">u</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="20:9" pos:end="20:18"><decl pos:start="20:9" pos:end="20:17"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:15">ans</name><init pos:start="20:16" pos:end="20:17">=<expr pos:start="20:17" pos:end="20:17"><literal type="number" pos:start="20:17" pos:end="20:17">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="21:9" pos:end="32:9">for<control pos:start="21:12" pos:end="21:29">(<init pos:start="21:13" pos:end="21:20"><decl pos:start="21:13" pos:end="21:19"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:17">i</name><init pos:start="21:18" pos:end="21:19">=<expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">1</literal></expr></init></decl>;</init><condition pos:start="21:21" pos:end="21:25"><expr pos:start="21:21" pos:end="21:24"><name pos:start="21:21" pos:end="21:21">i</name><operator pos:start="21:22" pos:end="21:23">&lt;=</operator><name pos:start="21:24" pos:end="21:24">n</name></expr>;</condition><incr pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:26">i</name><operator pos:start="21:27" pos:end="21:28">++</operator></expr></incr>)</control><block pos:start="21:30" pos:end="32:9">{<block_content pos:start="22:13" pos:end="31:13">
            <decl_stmt pos:start="22:13" pos:end="22:27"><decl pos:start="22:13" pos:end="22:26"><type pos:start="22:13" pos:end="22:16"><name pos:start="22:13" pos:end="22:16">bool</name></type> <name pos:start="22:18" pos:end="22:21">flag</name><init pos:start="22:22" pos:end="22:26">=<expr pos:start="22:23" pos:end="22:26"><literal type="boolean" pos:start="22:23" pos:end="22:26">true</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="23:13" pos:end="28:13">for<control pos:start="23:16" pos:end="23:27">(<init pos:start="23:17" pos:end="23:26"><decl pos:start="23:17" pos:end="23:26"><type pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:19">int</name></type> <name pos:start="23:21" pos:end="23:21">v</name><range pos:start="23:22" pos:end="23:26">:<expr pos:start="23:23" pos:end="23:26"><name pos:start="23:23" pos:end="23:26"><name pos:start="23:23" pos:end="23:23">G</name><index pos:start="23:24" pos:end="23:26">[<expr pos:start="23:25" pos:end="23:25"><name pos:start="23:25" pos:end="23:25">i</name></expr>]</index></name></expr></range></decl></init>)</control><block pos:start="23:28" pos:end="28:13">{<block_content pos:start="24:17" pos:end="27:17">
                <if_stmt pos:start="24:17" pos:end="27:17"><if pos:start="24:17" pos:end="27:17">if<condition pos:start="24:19" pos:end="24:43">(<expr pos:start="24:20" pos:end="24:42"><name pos:start="24:20" pos:end="24:23"><name pos:start="24:20" pos:end="24:20">G</name><index pos:start="24:21" pos:end="24:23">[<expr pos:start="24:22" pos:end="24:22"><name pos:start="24:22" pos:end="24:22">i</name></expr>]</index></name><operator pos:start="24:24" pos:end="24:24">.</operator><call pos:start="24:25" pos:end="24:30"><name pos:start="24:25" pos:end="24:28">size</name><argument_list pos:start="24:29" pos:end="24:30">()</argument_list></call><operator pos:start="24:31" pos:end="24:31">&lt;</operator><name pos:start="24:32" pos:end="24:35"><name pos:start="24:32" pos:end="24:32">G</name><index pos:start="24:33" pos:end="24:35">[<expr pos:start="24:34" pos:end="24:34"><name pos:start="24:34" pos:end="24:34">v</name></expr>]</index></name><operator pos:start="24:36" pos:end="24:36">.</operator><call pos:start="24:37" pos:end="24:42"><name pos:start="24:37" pos:end="24:40">size</name><argument_list pos:start="24:41" pos:end="24:42">()</argument_list></call></expr>)</condition><block pos:start="24:44" pos:end="27:17">{<block_content pos:start="25:21" pos:end="26:26">
                    <expr_stmt pos:start="25:21" pos:end="25:31"><expr pos:start="25:21" pos:end="25:30"><name pos:start="25:21" pos:end="25:24">flag</name><operator pos:start="25:25" pos:end="25:25">=</operator><literal type="boolean" pos:start="25:26" pos:end="25:30">false</literal></expr>;</expr_stmt>
                    <break pos:start="26:21" pos:end="26:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="29:13" pos:end="31:13"><if pos:start="29:13" pos:end="31:13">if<condition pos:start="29:15" pos:end="29:49">(<expr pos:start="29:16" pos:end="29:48"><name pos:start="29:16" pos:end="29:19">flag</name><operator pos:start="29:20" pos:end="29:20">&amp;</operator><name pos:start="29:21" pos:end="29:24"><name pos:start="29:21" pos:end="29:21">G</name><index pos:start="29:22" pos:end="29:24">[<expr pos:start="29:23" pos:end="29:23"><name pos:start="29:23" pos:end="29:23">i</name></expr>]</index></name><operator pos:start="29:25" pos:end="29:25">.</operator><call pos:start="29:26" pos:end="29:31"><name pos:start="29:26" pos:end="29:29">size</name><argument_list pos:start="29:30" pos:end="29:31">()</argument_list></call><operator pos:start="29:32" pos:end="29:33">&gt;=</operator><name pos:start="29:34" pos:end="29:41"><name pos:start="29:34" pos:end="29:34">G</name><index pos:start="29:35" pos:end="29:41">[<expr pos:start="29:36" pos:end="29:40"><name pos:start="29:36" pos:end="29:40"><name pos:start="29:36" pos:end="29:37">fa</name><index pos:start="29:38" pos:end="29:40">[<expr pos:start="29:39" pos:end="29:39"><name pos:start="29:39" pos:end="29:39">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="29:42" pos:end="29:42">.</operator><call pos:start="29:43" pos:end="29:48"><name pos:start="29:43" pos:end="29:46">size</name><argument_list pos:start="29:47" pos:end="29:48">()</argument_list></call></expr>)</condition><block pos:start="29:50" pos:end="31:13">{<block_content pos:start="30:17" pos:end="30:22">
                <expr_stmt pos:start="30:17" pos:end="30:22"><expr pos:start="30:17" pos:end="30:21"><operator pos:start="30:17" pos:end="30:18">++</operator><name pos:start="30:19" pos:end="30:21">ans</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="33:9" pos:end="33:24"><expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:12">cout</name><operator pos:start="33:13" pos:end="33:14">&lt;&lt;</operator><name pos:start="33:15" pos:end="33:17">ans</name><operator pos:start="33:18" pos:end="33:19">&lt;&lt;</operator><name pos:start="33:20" pos:end="33:23">endl</name></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
