<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/443/443.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:17"><decl pos:start="3:1" pos:end="3:13"><type pos:start="3:1" pos:end="3:9"><name pos:start="3:1" pos:end="3:4">long</name> <name pos:start="3:6" pos:end="3:9">long</name></type> <name pos:start="3:11" pos:end="3:13">sum</name></decl>, <decl pos:start="3:16" pos:end="3:16"><type ref="prev" pos:start="3:1" pos:end="3:9"/><name pos:start="3:16" pos:end="3:16">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:23"><decl pos:start="4:1" pos:end="4:22"><type pos:start="4:1" pos:end="4:20"><name pos:start="4:1" pos:end="4:20"><name pos:start="4:1" pos:end="4:3">map</name> <argument_list type="generic" pos:start="4:5" pos:end="4:20">&lt;<argument pos:start="4:6" pos:end="4:14"><expr pos:start="4:6" pos:end="4:14"><name pos:start="4:6" pos:end="4:9">long</name> <name pos:start="4:11" pos:end="4:14">long</name></expr></argument>, <argument pos:start="4:17" pos:end="4:19"><expr pos:start="4:17" pos:end="4:19"><name pos:start="4:17" pos:end="4:19">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="4:22" pos:end="4:22">m</name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="21:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list> <block pos:start="5:12" pos:end="21:1">{<block_content pos:start="6:5" pos:end="20:13">
    <expr_stmt pos:start="6:5" pos:end="6:37"><expr pos:start="6:5" pos:end="6:36"><call pos:start="6:5" pos:end="6:36"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:36">(<argument pos:start="6:13" pos:end="6:25"><expr pos:start="6:13" pos:end="6:25"><literal type="string" pos:start="6:13" pos:end="6:25">"elevator.in"</literal></expr></argument>,<argument pos:start="6:27" pos:end="6:29"><expr pos:start="6:27" pos:end="6:29"><literal type="string" pos:start="6:27" pos:end="6:29">"r"</literal></expr></argument>,<argument pos:start="6:31" pos:end="6:35"><expr pos:start="6:31" pos:end="6:35"><name pos:start="6:31" pos:end="6:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:39"><expr pos:start="7:5" pos:end="7:38"><call pos:start="7:5" pos:end="7:38"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:38">(<argument pos:start="7:13" pos:end="7:26"><expr pos:start="7:13" pos:end="7:26"><literal type="string" pos:start="7:13" pos:end="7:26">"elevator.out"</literal></expr></argument>,<argument pos:start="7:28" pos:end="7:30"><expr pos:start="7:28" pos:end="7:30"><literal type="string" pos:start="7:28" pos:end="7:30">"w"</literal></expr></argument>,<argument pos:start="7:32" pos:end="7:37"><expr pos:start="7:32" pos:end="7:37"><name pos:start="7:32" pos:end="7:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:13"><expr pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:7">cin</name> <operator pos:start="8:9" pos:end="8:10">&gt;&gt;</operator> <name pos:start="8:12" pos:end="8:12">n</name></expr>;</expr_stmt>
    <for pos:start="9:5" pos:end="13:5">for<control pos:start="9:8" pos:end="9:31">(<init pos:start="9:9" pos:end="9:18"><decl pos:start="9:9" pos:end="9:17"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">i</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">1</literal></expr></init></decl>;</init> <condition pos:start="9:20" pos:end="9:26"><expr pos:start="9:20" pos:end="9:25"><name pos:start="9:20" pos:end="9:20">i</name> <operator pos:start="9:22" pos:end="9:23">&lt;=</operator> <name pos:start="9:25" pos:end="9:25">n</name></expr>;</condition> <incr pos:start="9:28" pos:end="9:30"><expr pos:start="9:28" pos:end="9:30"><name pos:start="9:28" pos:end="9:28">i</name><operator pos:start="9:29" pos:end="9:30">++</operator></expr></incr>)</control> <block pos:start="9:33" pos:end="13:5">{<block_content pos:start="10:9" pos:end="12:15">
        <decl_stmt pos:start="10:9" pos:end="10:14"><decl pos:start="10:9" pos:end="10:13"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">x</name></decl>;</decl_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:17"><expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:11">cin</name> <operator pos:start="11:13" pos:end="11:14">&gt;&gt;</operator> <name pos:start="11:16" pos:end="11:16">x</name></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:15"><expr pos:start="12:9" pos:end="12:14"><name pos:start="12:9" pos:end="12:12"><name pos:start="12:9" pos:end="12:9">m</name><index pos:start="12:10" pos:end="12:12">[<expr pos:start="12:11" pos:end="12:11"><name pos:start="12:11" pos:end="12:11">x</name></expr>]</index></name><operator pos:start="12:13" pos:end="12:14">++</operator></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="14:5" pos:end="18:5">for<control pos:start="14:8" pos:end="14:49">(<init pos:start="14:9" pos:end="14:28"><decl pos:start="14:9" pos:end="14:27"><type pos:start="14:9" pos:end="14:12"><name pos:start="14:9" pos:end="14:12">auto</name></type> <name pos:start="14:14" pos:end="14:15">it</name> <init pos:start="14:17" pos:end="14:27">= <expr pos:start="14:19" pos:end="14:27"><call pos:start="14:19" pos:end="14:27"><name pos:start="14:19" pos:end="14:25"><name pos:start="14:19" pos:end="14:19">m</name><operator pos:start="14:20" pos:end="14:20">.</operator><name pos:start="14:21" pos:end="14:25">begin</name></name><argument_list pos:start="14:26" pos:end="14:27">()</argument_list></call></expr></init></decl>;</init> <condition pos:start="14:30" pos:end="14:43"><expr pos:start="14:30" pos:end="14:42"><name pos:start="14:30" pos:end="14:31">it</name> <operator pos:start="14:33" pos:end="14:34">!=</operator> <call pos:start="14:36" pos:end="14:42"><name pos:start="14:36" pos:end="14:40"><name pos:start="14:36" pos:end="14:36">m</name><operator pos:start="14:37" pos:end="14:37">.</operator><name pos:start="14:38" pos:end="14:40">end</name></name><argument_list pos:start="14:41" pos:end="14:42">()</argument_list></call></expr>;</condition> <incr pos:start="14:45" pos:end="14:48"><expr pos:start="14:45" pos:end="14:48"><name pos:start="14:45" pos:end="14:46">it</name><operator pos:start="14:47" pos:end="14:48">++</operator></expr></incr>)</control> <block pos:start="14:51" pos:end="18:5">{<block_content pos:start="15:9" pos:end="17:39">
        <expr_stmt pos:start="15:9" pos:end="15:17"><expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">sum</name> <operator pos:start="15:13" pos:end="15:14">+=</operator> <literal type="number" pos:start="15:16" pos:end="15:16">9</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:17"><expr pos:start="16:9" pos:end="16:16"><name pos:start="16:9" pos:end="16:11">sum</name> <operator pos:start="16:13" pos:end="16:14">+=</operator> <literal type="number" pos:start="16:16" pos:end="16:16">3</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:39"><expr pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:11">sum</name> <operator pos:start="17:13" pos:end="17:14">+=</operator> <name pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:16">m</name><index pos:start="17:17" pos:end="17:23">[<expr pos:start="17:18" pos:end="17:22"><operator pos:start="17:18" pos:end="17:18">(</operator><operator pos:start="17:19" pos:end="17:19">*</operator><name pos:start="17:20" pos:end="17:21">it</name><operator pos:start="17:22" pos:end="17:22">)</operator></expr>]</index></name> <operator pos:start="17:25" pos:end="17:25">*</operator> <operator pos:start="17:27" pos:end="17:27">(</operator><name pos:start="17:28" pos:end="17:31">long</name> <name pos:start="17:33" pos:end="17:36">long</name><operator pos:start="17:37" pos:end="17:37">)</operator><literal type="number" pos:start="17:38" pos:end="17:38">2</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:8">cout</name> <operator pos:start="19:10" pos:end="19:11">&lt;&lt;</operator> <name pos:start="19:13" pos:end="19:15">sum</name> <operator pos:start="19:17" pos:end="19:18">&lt;&lt;</operator> <name pos:start="19:20" pos:end="19:23">endl</name></expr>;</expr_stmt>
    <return pos:start="20:5" pos:end="20:13">return <expr pos:start="20:12" pos:end="20:12"><literal type="number" pos:start="20:12" pos:end="20:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
