<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/32/32.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define pos:start="2:1" pos:end="2:15">#<cpp:directive pos:start="2:2" pos:end="2:7">define</cpp:directive> <cpp:macro pos:start="2:9" pos:end="2:11"><name pos:start="2:9" pos:end="2:11">MAX</name></cpp:macro> <cpp:value pos:start="2:13" pos:end="2:15">205</cpp:value></cpp:define>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="39:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list>
<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="6:5" pos:end="38:13">
    <decl_stmt pos:start="6:5" pos:end="6:23"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">T</name></decl>,<decl pos:start="6:11" pos:end="6:11"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:11" pos:end="6:11">n</name></decl>,<decl pos:start="6:13" pos:end="6:13"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:13" pos:end="6:13">i</name></decl>,<decl pos:start="6:15" pos:end="6:15"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:15" pos:end="6:15">j</name></decl>,<decl pos:start="6:17" pos:end="6:22"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:17" pos:end="6:22"><name pos:start="6:17" pos:end="6:17">p</name><index pos:start="6:18" pos:end="6:22">[<expr pos:start="6:19" pos:end="6:21"><name pos:start="6:19" pos:end="6:21">MAX</name></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:39"><expr pos:start="7:5" pos:end="7:38"><call pos:start="7:5" pos:end="7:38"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:38">(<argument pos:start="7:13" pos:end="7:25"><expr pos:start="7:13" pos:end="7:25"><literal type="string" pos:start="7:13" pos:end="7:25">"elevator.in"</literal></expr></argument>, <argument pos:start="7:28" pos:end="7:30"><expr pos:start="7:28" pos:end="7:30"><literal type="string" pos:start="7:28" pos:end="7:30">"T"</literal></expr></argument>, <argument pos:start="7:33" pos:end="7:37"><expr pos:start="7:33" pos:end="7:37"><name pos:start="7:33" pos:end="7:37">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:13"><expr pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:7">cin</name> <operator pos:start="8:9" pos:end="8:10">&gt;&gt;</operator> <name pos:start="8:12" pos:end="8:12">T</name></expr>;</expr_stmt>
    <while pos:start="9:5" pos:end="37:5">while<condition pos:start="9:10" pos:end="9:14">(<expr pos:start="9:11" pos:end="9:13"><name pos:start="9:11" pos:end="9:11">T</name><operator pos:start="9:12" pos:end="9:13">--</operator></expr>)</condition>
    <block pos:start="10:5" pos:end="37:5">{<block_content pos:start="11:9" pos:end="36:21">
        <expr_stmt pos:start="11:9" pos:end="11:43"><expr pos:start="11:9" pos:end="11:42"><call pos:start="11:9" pos:end="11:42"><name pos:start="11:9" pos:end="11:15">freopen</name><argument_list pos:start="11:16" pos:end="11:42">(<argument pos:start="11:17" pos:end="11:29"><expr pos:start="11:17" pos:end="11:29"><literal type="string" pos:start="11:17" pos:end="11:29">"elevator.in"</literal></expr></argument>, <argument pos:start="11:32" pos:end="11:34"><expr pos:start="11:32" pos:end="11:34"><literal type="string" pos:start="11:32" pos:end="11:34">"n"</literal></expr></argument>, <argument pos:start="11:37" pos:end="11:41"><expr pos:start="11:37" pos:end="11:41"><name pos:start="11:37" pos:end="11:41">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:17"><expr pos:start="12:9" pos:end="12:16"><name pos:start="12:9" pos:end="12:11">cin</name> <operator pos:start="12:13" pos:end="12:14">&gt;&gt;</operator> <name pos:start="12:16" pos:end="12:16">n</name></expr>;</expr_stmt>
        <for pos:start="13:9" pos:end="17:9">for<control pos:start="13:12" pos:end="13:25">(<init pos:start="13:13" pos:end="13:16"><expr pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:13">i</name><operator pos:start="13:14" pos:end="13:14">=</operator><literal type="number" pos:start="13:15" pos:end="13:15">1</literal></expr>;</init><condition pos:start="13:17" pos:end="13:21"><expr pos:start="13:17" pos:end="13:20"><name pos:start="13:17" pos:end="13:17">i</name><operator pos:start="13:18" pos:end="13:19">&lt;=</operator><name pos:start="13:20" pos:end="13:20">n</name></expr>;</condition><incr pos:start="13:22" pos:end="13:24"><expr pos:start="13:22" pos:end="13:24"><name pos:start="13:22" pos:end="13:22">i</name><operator pos:start="13:23" pos:end="13:24">++</operator></expr></incr>)</control>
        <block pos:start="14:9" pos:end="17:9">{<block_content pos:start="15:13" pos:end="16:24">
            <expr_stmt pos:start="15:13" pos:end="15:50"><expr pos:start="15:13" pos:end="15:49"><call pos:start="15:13" pos:end="15:49"><name pos:start="15:13" pos:end="15:19">freopen</name><argument_list pos:start="15:20" pos:end="15:49">(<argument pos:start="15:21" pos:end="15:33"><expr pos:start="15:21" pos:end="15:33"><literal type="string" pos:start="15:21" pos:end="15:33">"elevator.in"</literal></expr></argument>, <argument pos:start="15:36" pos:end="15:41"><expr pos:start="15:36" pos:end="15:41"><literal type="string" pos:start="15:36" pos:end="15:41">"p[i]"</literal></expr></argument>, <argument pos:start="15:44" pos:end="15:48"><expr pos:start="15:44" pos:end="15:48"><name pos:start="15:44" pos:end="15:48">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:24"><expr pos:start="16:13" pos:end="16:23"><name pos:start="16:13" pos:end="16:15">cin</name> <operator pos:start="16:17" pos:end="16:18">&gt;&gt;</operator> <name pos:start="16:20" pos:end="16:23"><name pos:start="16:20" pos:end="16:20">p</name><index pos:start="16:21" pos:end="16:23">[<expr pos:start="16:22" pos:end="16:22"><name pos:start="16:22" pos:end="16:22">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="18:9" pos:end="18:24"><expr pos:start="18:9" pos:end="18:23"><call pos:start="18:9" pos:end="18:23"><name pos:start="18:9" pos:end="18:12">sort</name><argument_list pos:start="18:13" pos:end="18:23">(<argument pos:start="18:14" pos:end="18:16"><expr pos:start="18:14" pos:end="18:16"><name pos:start="18:14" pos:end="18:14">p</name><operator pos:start="18:15" pos:end="18:15">+</operator><literal type="number" pos:start="18:16" pos:end="18:16">1</literal></expr></argument>,<argument pos:start="18:18" pos:end="18:22"><expr pos:start="18:18" pos:end="18:22"><name pos:start="18:18" pos:end="18:18">p</name><operator pos:start="18:19" pos:end="18:19">+</operator><name pos:start="18:20" pos:end="18:20">n</name><operator pos:start="18:21" pos:end="18:21">+</operator><literal type="number" pos:start="18:22" pos:end="18:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="19:9" pos:end="19:31"><decl pos:start="19:9" pos:end="19:30"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:16">time</name><init pos:start="19:17" pos:end="19:30">=<expr pos:start="19:18" pos:end="19:30"><literal type="number" pos:start="19:18" pos:end="19:18">5</literal><operator pos:start="19:19" pos:end="19:19">*</operator><name pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:20">p</name><index pos:start="19:21" pos:end="19:23">[<expr pos:start="19:22" pos:end="19:22"><name pos:start="19:22" pos:end="19:22">n</name></expr>]</index></name><operator pos:start="19:24" pos:end="19:24">+</operator><literal type="number" pos:start="19:25" pos:end="19:25">4</literal><operator pos:start="19:26" pos:end="19:26">*</operator><name pos:start="19:27" pos:end="19:30"><name pos:start="19:27" pos:end="19:27">p</name><index pos:start="19:28" pos:end="19:30">[<expr pos:start="19:29" pos:end="19:29"><name pos:start="19:29" pos:end="19:29">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <for pos:start="20:9" pos:end="34:9">for<control pos:start="20:12" pos:end="20:27">(<init pos:start="20:13" pos:end="20:16"><expr pos:start="20:13" pos:end="20:15"><name pos:start="20:13" pos:end="20:13">i</name><operator pos:start="20:14" pos:end="20:14">=</operator><literal type="number" pos:start="20:15" pos:end="20:15">0</literal></expr>;</init><condition pos:start="20:17" pos:end="20:23"><expr pos:start="20:17" pos:end="20:22"><name pos:start="20:17" pos:end="20:17">i</name><operator pos:start="20:18" pos:end="20:19">&lt;=</operator><literal type="number" pos:start="20:20" pos:end="20:22">150</literal></expr>;</condition><incr pos:start="20:24" pos:end="20:26"><expr pos:start="20:24" pos:end="20:26"><name pos:start="20:24" pos:end="20:24">i</name><operator pos:start="20:25" pos:end="20:26">++</operator></expr></incr>)</control>
        <block pos:start="21:9" pos:end="34:9">{<block_content pos:start="22:13" pos:end="33:24">
            <decl_stmt pos:start="22:13" pos:end="22:29"><decl pos:start="22:13" pos:end="22:21"><type pos:start="22:13" pos:end="22:15"><name pos:start="22:13" pos:end="22:15">int</name></type> <name pos:start="22:17" pos:end="22:19">num</name><init pos:start="22:20" pos:end="22:21">=<expr pos:start="22:21" pos:end="22:21"><literal type="number" pos:start="22:21" pos:end="22:21">0</literal></expr></init></decl>,<decl pos:start="22:23" pos:end="22:28"><type ref="prev" pos:start="22:13" pos:end="22:15"/><name pos:start="22:23" pos:end="22:26">flag</name><init pos:start="22:27" pos:end="22:28">=<expr pos:start="22:28" pos:end="22:28"><literal type="number" pos:start="22:28" pos:end="22:28">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="23:13" pos:end="30:13">for<control pos:start="23:16" pos:end="23:29">(<init pos:start="23:17" pos:end="23:20"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:17">j</name><operator pos:start="23:18" pos:end="23:18">=</operator><literal type="number" pos:start="23:19" pos:end="23:19">1</literal></expr>;</init><condition pos:start="23:21" pos:end="23:25"><expr pos:start="23:21" pos:end="23:24"><name pos:start="23:21" pos:end="23:21">j</name><operator pos:start="23:22" pos:end="23:23">&lt;=</operator><name pos:start="23:24" pos:end="23:24">n</name></expr>;</condition><incr pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><name pos:start="23:26" pos:end="23:26">j</name><operator pos:start="23:27" pos:end="23:28">++</operator></expr></incr>)</control>
            <block pos:start="24:13" pos:end="30:13">{<block_content pos:start="25:17" pos:end="29:17">
                <if_stmt pos:start="25:17" pos:end="29:17"><if pos:start="25:17" pos:end="29:17">if<condition pos:start="25:19" pos:end="25:27">(<expr pos:start="25:20" pos:end="25:26"><name pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:20">p</name><index pos:start="25:21" pos:end="25:23">[<expr pos:start="25:22" pos:end="25:22"><name pos:start="25:22" pos:end="25:22">j</name></expr>]</index></name><operator pos:start="25:24" pos:end="25:25">==</operator><name pos:start="25:26" pos:end="25:26">i</name></expr>)</condition>
                <block pos:start="26:17" pos:end="29:17">{<block_content pos:start="27:21" pos:end="28:26">
                    <expr_stmt pos:start="27:21" pos:end="27:27"><expr pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:24">flag</name><operator pos:start="27:25" pos:end="27:25">=</operator><literal type="number" pos:start="27:26" pos:end="27:26">1</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="28:21" pos:end="28:26"><expr pos:start="28:21" pos:end="28:25"><name pos:start="28:21" pos:end="28:23">num</name><operator pos:start="28:24" pos:end="28:25">++</operator></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="31:13" pos:end="32:22"><if pos:start="31:13" pos:end="32:22">if<condition pos:start="31:15" pos:end="31:20">(<expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">flag</name></expr>)</condition><block type="pseudo" pos:start="32:15" pos:end="32:22"><block_content pos:start="32:15" pos:end="32:22">
              <expr_stmt pos:start="32:15" pos:end="32:22"><expr pos:start="32:15" pos:end="32:21"><name pos:start="32:15" pos:end="32:18">time</name><operator pos:start="32:19" pos:end="32:20">+=</operator><literal type="number" pos:start="32:21" pos:end="32:21">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="33:13" pos:end="33:24"><expr pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:16">time</name><operator pos:start="33:17" pos:end="33:18">+=</operator><name pos:start="33:19" pos:end="33:21">num</name><operator pos:start="33:22" pos:end="33:22">*</operator><literal type="number" pos:start="33:23" pos:end="33:23">2</literal></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="35:9" pos:end="35:47"><expr pos:start="35:9" pos:end="35:46"><call pos:start="35:9" pos:end="35:46"><name pos:start="35:9" pos:end="35:15">freopen</name><argument_list pos:start="35:16" pos:end="35:46">(<argument pos:start="35:17" pos:end="35:30"><expr pos:start="35:17" pos:end="35:30"><literal type="string" pos:start="35:17" pos:end="35:30">"elevator.out"</literal></expr></argument>, <argument pos:start="35:33" pos:end="35:38"><expr pos:start="35:33" pos:end="35:38"><literal type="string" pos:start="35:33" pos:end="35:38">"time"</literal></expr></argument>, <argument pos:start="35:41" pos:end="35:45"><expr pos:start="35:41" pos:end="35:45"><name pos:start="35:41" pos:end="35:45">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="36:9" pos:end="36:21"><expr pos:start="36:9" pos:end="36:20"><name pos:start="36:9" pos:end="36:12">cout</name> <operator pos:start="36:14" pos:end="36:15">&lt;&lt;</operator> <name pos:start="36:17" pos:end="36:20">time</name></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="38:5" pos:end="38:13">return <expr pos:start="38:12" pos:end="38:12"><literal type="number" pos:start="38:12" pos:end="38:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
