<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/99/99.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:17"><decl pos:start="3:1" pos:end="3:16"><type pos:start="3:1" pos:end="3:6"><name pos:start="3:1" pos:end="3:6">string</name></type> <name pos:start="3:8" pos:end="3:16"><name pos:start="3:8" pos:end="3:11">book</name><index pos:start="3:12" pos:end="3:16">[<expr pos:start="3:13" pos:end="3:15"><literal type="number" pos:start="3:13" pos:end="3:15">101</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="19:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:7">pd</name><parameter_list pos:start="4:8" pos:end="4:20">(<parameter pos:start="4:9" pos:end="4:13"><decl pos:start="4:9" pos:end="4:13"><type pos:start="4:9" pos:end="4:13"><name pos:start="4:9" pos:end="4:11">int</name></type> <name pos:start="4:13" pos:end="4:13">x</name></decl></parameter>,<parameter pos:start="4:15" pos:end="4:19"><decl pos:start="4:15" pos:end="4:19"><type pos:start="4:15" pos:end="4:19"><name pos:start="4:15" pos:end="4:17">int</name></type> <name pos:start="4:19" pos:end="4:19">y</name></decl></parameter>)</parameter_list><block pos:start="4:21" pos:end="19:1">{<block_content pos:start="5:5" pos:end="18:5">
    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">sumx</name></decl>,<decl pos:start="5:14" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:17">sumy</name></decl>;</decl_stmt>
    <for pos:start="6:5" pos:end="9:5">for<control pos:start="6:8" pos:end="6:28">(<init pos:start="6:9" pos:end="6:18"><decl pos:start="6:9" pos:end="6:17"><type pos:start="6:9" pos:end="6:11"><name pos:start="6:9" pos:end="6:11">int</name></type> <name pos:start="6:13" pos:end="6:13">i</name> <init pos:start="6:15" pos:end="6:17">= <expr pos:start="6:17" pos:end="6:17"><literal type="number" pos:start="6:17" pos:end="6:17">1</literal></expr></init></decl>;</init><condition pos:start="6:19" pos:end="6:24"><expr pos:start="6:19" pos:end="6:23"><name pos:start="6:19" pos:end="6:19">i</name> <operator pos:start="6:21" pos:end="6:21">&lt;</operator> <literal type="number" pos:start="6:23" pos:end="6:23">5</literal></expr>;</condition><incr pos:start="6:25" pos:end="6:27"><expr pos:start="6:25" pos:end="6:27"><name pos:start="6:25" pos:end="6:25">i</name><operator pos:start="6:26" pos:end="6:27">++</operator></expr></incr>)</control><block pos:start="6:29" pos:end="9:5">{<block_content pos:start="7:9" pos:end="8:16">
        <expr_stmt pos:start="7:9" pos:end="7:23"><expr pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:12">sumx</name> <operator pos:start="7:14" pos:end="7:15">+=</operator> <name pos:start="7:17" pos:end="7:17">x</name> <operator pos:start="7:19" pos:end="7:19">%</operator> <literal type="number" pos:start="7:21" pos:end="7:22">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:16"><expr pos:start="8:9" pos:end="8:15"><name pos:start="8:9" pos:end="8:9">x</name> <operator pos:start="8:11" pos:end="8:12">/=</operator> <literal type="number" pos:start="8:14" pos:end="8:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="10:5" pos:end="13:5">for<control pos:start="10:8" pos:end="10:28">(<init pos:start="10:9" pos:end="10:18"><decl pos:start="10:9" pos:end="10:17"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">i</name> <init pos:start="10:15" pos:end="10:17">= <expr pos:start="10:17" pos:end="10:17"><literal type="number" pos:start="10:17" pos:end="10:17">1</literal></expr></init></decl>;</init><condition pos:start="10:19" pos:end="10:24"><expr pos:start="10:19" pos:end="10:23"><name pos:start="10:19" pos:end="10:19">i</name> <operator pos:start="10:21" pos:end="10:21">&lt;</operator> <literal type="number" pos:start="10:23" pos:end="10:23">5</literal></expr>;</condition><incr pos:start="10:25" pos:end="10:27"><expr pos:start="10:25" pos:end="10:27"><name pos:start="10:25" pos:end="10:25">i</name><operator pos:start="10:26" pos:end="10:27">++</operator></expr></incr>)</control><block pos:start="10:29" pos:end="13:5">{<block_content pos:start="11:9" pos:end="12:16">
        <expr_stmt pos:start="11:9" pos:end="11:23"><expr pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:12">sumy</name> <operator pos:start="11:14" pos:end="11:15">+=</operator> <name pos:start="11:17" pos:end="11:17">y</name> <operator pos:start="11:19" pos:end="11:19">%</operator> <literal type="number" pos:start="11:21" pos:end="11:22">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:16"><expr pos:start="12:9" pos:end="12:15"><name pos:start="12:9" pos:end="12:9">y</name> <operator pos:start="12:11" pos:end="12:12">/=</operator> <literal type="number" pos:start="12:14" pos:end="12:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="14:5" pos:end="18:5"><if pos:start="14:5" pos:end="16:5">if<condition pos:start="14:7" pos:end="14:20">(<expr pos:start="14:8" pos:end="14:19"><name pos:start="14:8" pos:end="14:11">sumx</name> <operator pos:start="14:13" pos:end="14:14">!=</operator> <name pos:start="14:16" pos:end="14:19">sumy</name></expr>)</condition><block pos:start="14:21" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:21">
        <return pos:start="15:9" pos:end="15:21">return <expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:16">x</name> <operator pos:start="15:18" pos:end="15:18">&lt;</operator> <name pos:start="15:20" pos:end="15:20">y</name></expr>;</return>
    </block_content>}</block></if><else pos:start="16:6" pos:end="18:5">else<block pos:start="16:10" pos:end="18:5">{<block_content pos:start="17:9" pos:end="17:21">    
        <return pos:start="17:9" pos:end="17:21">return <expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:16">x</name> <operator pos:start="17:18" pos:end="17:18">&lt;</operator> <name pos:start="17:20" pos:end="17:20">y</name></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="20:1" pos:end="31:1"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:8">main</name><parameter_list pos:start="20:9" pos:end="20:10">()</parameter_list><block pos:start="20:11" pos:end="31:1">{<block_content pos:start="21:5" pos:end="30:13">
    <decl_stmt pos:start="21:5" pos:end="21:10"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:13"><expr pos:start="22:5" pos:end="22:12"><name pos:start="22:5" pos:end="22:7">cin</name> <operator pos:start="22:9" pos:end="22:10">&gt;&gt;</operator> <name pos:start="22:12" pos:end="22:12">n</name></expr>;</expr_stmt>
    <for pos:start="23:5" pos:end="25:5">for<control pos:start="23:8" pos:end="23:28">(<init pos:start="23:9" pos:end="23:18"><decl pos:start="23:9" pos:end="23:17"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">i</name> <init pos:start="23:15" pos:end="23:17">= <expr pos:start="23:17" pos:end="23:17"><literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr></init></decl>;</init><condition pos:start="23:19" pos:end="23:24"><expr pos:start="23:19" pos:end="23:23"><name pos:start="23:19" pos:end="23:19">i</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <name pos:start="23:23" pos:end="23:23">n</name></expr>;</condition><incr pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:25">i</name><operator pos:start="23:26" pos:end="23:27">++</operator></expr></incr>)</control><block pos:start="23:29" pos:end="25:5">{<block_content pos:start="24:9" pos:end="24:23">
        <expr_stmt pos:start="24:9" pos:end="24:23"><expr pos:start="24:9" pos:end="24:22"><name pos:start="24:9" pos:end="24:11">cin</name> <operator pos:start="24:13" pos:end="24:14">&gt;&gt;</operator> <name pos:start="24:16" pos:end="24:22"><name pos:start="24:16" pos:end="24:19">book</name><index pos:start="24:20" pos:end="24:22">[<expr pos:start="24:21" pos:end="24:21"><name pos:start="24:21" pos:end="24:21">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="26:5" pos:end="26:27"><expr pos:start="26:5" pos:end="26:26"><call pos:start="26:5" pos:end="26:26"><name pos:start="26:5" pos:end="26:8">sort</name><argument_list pos:start="26:9" pos:end="26:26">(<argument pos:start="26:10" pos:end="26:13"><expr pos:start="26:10" pos:end="26:13"><name pos:start="26:10" pos:end="26:13">book</name></expr></argument>,<argument pos:start="26:15" pos:end="26:22"><expr pos:start="26:15" pos:end="26:22"><name pos:start="26:15" pos:end="26:18">book</name> <operator pos:start="26:20" pos:end="26:20">+</operator> <name pos:start="26:22" pos:end="26:22">n</name></expr></argument>,<argument pos:start="26:24" pos:end="26:25"><expr pos:start="26:24" pos:end="26:25"><name pos:start="26:24" pos:end="26:25">pd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="27:5" pos:end="29:5">for<control pos:start="27:8" pos:end="27:28">(<init pos:start="27:9" pos:end="27:18"><decl pos:start="27:9" pos:end="27:17"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">i</name> <init pos:start="27:15" pos:end="27:17">= <expr pos:start="27:17" pos:end="27:17"><literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr></init></decl>;</init><condition pos:start="27:19" pos:end="27:24"><expr pos:start="27:19" pos:end="27:23"><name pos:start="27:19" pos:end="27:19">i</name> <operator pos:start="27:21" pos:end="27:21">&lt;</operator> <name pos:start="27:23" pos:end="27:23">n</name></expr>;</condition><incr pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:25">i</name><operator pos:start="27:26" pos:end="27:27">++</operator></expr></incr>)</control><block pos:start="27:29" pos:end="29:5">{<block_content pos:start="28:9" pos:end="28:31">
        <expr_stmt pos:start="28:9" pos:end="28:31"><expr pos:start="28:9" pos:end="28:30"><name pos:start="28:9" pos:end="28:12">cout</name> <operator pos:start="28:14" pos:end="28:15">&lt;&lt;</operator> <name pos:start="28:17" pos:end="28:23"><name pos:start="28:17" pos:end="28:20">book</name><index pos:start="28:21" pos:end="28:23">[<expr pos:start="28:22" pos:end="28:22"><name pos:start="28:22" pos:end="28:22">i</name></expr>]</index></name> <operator pos:start="28:25" pos:end="28:26">&lt;&lt;</operator> <literal type="string" pos:start="28:28" pos:end="28:30">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="30:5" pos:end="30:13">return <expr pos:start="30:12" pos:end="30:12"><literal type="number" pos:start="30:12" pos:end="30:12">0</literal></expr>;</return>
</block_content>}</block></function>









</unit>
