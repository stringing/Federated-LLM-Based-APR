<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/23/23.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:16">&lt;deque&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:21"><decl pos:start="5:1" pos:end="5:20"><type pos:start="5:1" pos:end="5:9"><specifier pos:start="5:1" pos:end="5:5">const</specifier> <name pos:start="5:7" pos:end="5:9">int</name></type> <name pos:start="5:11" pos:end="5:14">MAXN</name> <init pos:start="5:16" pos:end="5:20">= <expr pos:start="5:18" pos:end="5:20"><literal type="number" pos:start="5:18" pos:end="5:20">105</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:27"><decl pos:start="6:1" pos:end="6:26"><type pos:start="6:1" pos:end="6:9"><specifier pos:start="6:1" pos:end="6:5">const</specifier> <name pos:start="6:7" pos:end="6:9">int</name></type> <name pos:start="6:11" pos:end="6:13">INF</name> <init pos:start="6:15" pos:end="6:26">= <expr pos:start="6:17" pos:end="6:26"><literal type="number" pos:start="6:17" pos:end="6:26">0x3f3f3f3f</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:21"><decl pos:start="7:1" pos:end="7:20"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:5">d</name><index pos:start="7:6" pos:end="7:11">[<expr pos:start="7:7" pos:end="7:10"><name pos:start="7:7" pos:end="7:10">MAXN</name></expr>]</index><index pos:start="7:12" pos:end="7:17">[<expr pos:start="7:13" pos:end="7:16"><name pos:start="7:13" pos:end="7:16">MAXN</name></expr>]</index><index pos:start="7:18" pos:end="7:20">[<expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:24"><decl pos:start="8:1" pos:end="8:23"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">bool</name></type> <name pos:start="8:6" pos:end="8:23"><name pos:start="8:6" pos:end="8:8">vis</name><index pos:start="8:9" pos:end="8:14">[<expr pos:start="8:10" pos:end="8:13"><name pos:start="8:10" pos:end="8:13">MAXN</name></expr>]</index><index pos:start="8:15" pos:end="8:20">[<expr pos:start="8:16" pos:end="8:19"><name pos:start="8:16" pos:end="8:19">MAXN</name></expr>]</index><index pos:start="8:21" pos:end="8:23">[<expr pos:start="8:22" pos:end="8:22"><literal type="number" pos:start="8:22" pos:end="8:22">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="9:1" pos:end="9:9"><decl pos:start="9:1" pos:end="9:5"><type pos:start="9:1" pos:end="9:3"><name pos:start="9:1" pos:end="9:3">int</name></type> <name pos:start="9:5" pos:end="9:5">n</name></decl>, <decl pos:start="9:8" pos:end="9:8"><type ref="prev" pos:start="9:1" pos:end="9:3"/><name pos:start="9:8" pos:end="9:8">m</name></decl>;</decl_stmt>
<decl_stmt pos:start="10:1" pos:end="10:18"><decl pos:start="10:1" pos:end="10:17"><type pos:start="10:1" pos:end="10:6"><name pos:start="10:1" pos:end="10:6">string</name></type> <name pos:start="10:8" pos:end="10:17"><name pos:start="10:8" pos:end="10:11">maze</name><index pos:start="10:12" pos:end="10:17">[<expr pos:start="10:13" pos:end="10:16"><name pos:start="10:13" pos:end="10:16">MAXN</name></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="11:1" pos:end="13:1"><type pos:start="11:1" pos:end="11:3"><name pos:start="11:1" pos:end="11:3">int</name></type> <name pos:start="11:5" pos:end="11:7">dis</name><parameter_list pos:start="11:8" pos:end="11:15">(<parameter pos:start="11:9" pos:end="11:14"><decl pos:start="11:9" pos:end="11:14"><type pos:start="11:9" pos:end="11:13"><name pos:start="11:9" pos:end="11:11">int</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">x</name></decl></parameter>)</parameter_list> <block pos:start="11:17" pos:end="13:1">{<block_content pos:start="12:5" pos:end="12:49">
    <return pos:start="12:5" pos:end="12:49">return <expr pos:start="12:12" pos:end="12:48"><call pos:start="12:12" pos:end="12:48"><name pos:start="12:12" pos:end="12:14">min</name><argument_list pos:start="12:15" pos:end="12:48">(<argument pos:start="12:16" pos:end="12:30"><expr pos:start="12:16" pos:end="12:30"><call pos:start="12:16" pos:end="12:30"><name pos:start="12:16" pos:end="12:18">min</name><argument_list pos:start="12:19" pos:end="12:30">(<argument pos:start="12:20" pos:end="12:23"><expr pos:start="12:20" pos:end="12:23"><name pos:start="12:20" pos:end="12:23"><name pos:start="12:20" pos:end="12:20">x</name><index pos:start="12:21" pos:end="12:23">[<expr pos:start="12:22" pos:end="12:22"><literal type="number" pos:start="12:22" pos:end="12:22">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="12:26" pos:end="12:29"><expr pos:start="12:26" pos:end="12:29"><name pos:start="12:26" pos:end="12:29"><name pos:start="12:26" pos:end="12:26">x</name><index pos:start="12:27" pos:end="12:29">[<expr pos:start="12:28" pos:end="12:28"><literal type="number" pos:start="12:28" pos:end="12:28">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="12:33" pos:end="12:47"><expr pos:start="12:33" pos:end="12:47"><call pos:start="12:33" pos:end="12:47"><name pos:start="12:33" pos:end="12:35">min</name><argument_list pos:start="12:36" pos:end="12:47">(<argument pos:start="12:37" pos:end="12:40"><expr pos:start="12:37" pos:end="12:40"><name pos:start="12:37" pos:end="12:40"><name pos:start="12:37" pos:end="12:37">x</name><index pos:start="12:38" pos:end="12:40">[<expr pos:start="12:39" pos:end="12:39"><literal type="number" pos:start="12:39" pos:end="12:39">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="12:43" pos:end="12:46"><expr pos:start="12:43" pos:end="12:46"><name pos:start="12:43" pos:end="12:46"><name pos:start="12:43" pos:end="12:43">x</name><index pos:start="12:44" pos:end="12:46">[<expr pos:start="12:45" pos:end="12:45"><literal type="number" pos:start="12:45" pos:end="12:45">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function pos:start="14:1" pos:end="30:1"><type pos:start="14:1" pos:end="14:4"><name pos:start="14:1" pos:end="14:4">void</name></type> <name pos:start="14:6" pos:end="14:9">init</name><parameter_list pos:start="14:10" pos:end="14:11">()</parameter_list> <block pos:start="14:13" pos:end="30:1">{<block_content pos:start="15:5" pos:end="29:5">
    <for pos:start="15:5" pos:end="26:5">for <control pos:start="15:9" pos:end="15:34">(<init pos:start="15:10" pos:end="15:19"><decl pos:start="15:10" pos:end="15:18"><type pos:start="15:10" pos:end="15:12"><name pos:start="15:10" pos:end="15:12">int</name></type> <name pos:start="15:14" pos:end="15:14">i</name> <init pos:start="15:16" pos:end="15:18">= <expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr></init></decl>;</init> <condition pos:start="15:21" pos:end="15:29"><expr pos:start="15:21" pos:end="15:28"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <name pos:start="15:25" pos:end="15:28">MAXN</name></expr>;</condition> <incr pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><name pos:start="15:31" pos:end="15:31">i</name><operator pos:start="15:32" pos:end="15:33">++</operator></expr></incr>)</control> <block pos:start="15:36" pos:end="26:5">{<block_content pos:start="16:9" pos:end="25:9">
        <for pos:start="16:9" pos:end="25:9">for <control pos:start="16:13" pos:end="16:38">(<init pos:start="16:14" pos:end="16:23"><decl pos:start="16:14" pos:end="16:22"><type pos:start="16:14" pos:end="16:16"><name pos:start="16:14" pos:end="16:16">int</name></type> <name pos:start="16:18" pos:end="16:18">j</name> <init pos:start="16:20" pos:end="16:22">= <expr pos:start="16:22" pos:end="16:22"><literal type="number" pos:start="16:22" pos:end="16:22">0</literal></expr></init></decl>;</init> <condition pos:start="16:25" pos:end="16:33"><expr pos:start="16:25" pos:end="16:32"><name pos:start="16:25" pos:end="16:25">j</name> <operator pos:start="16:27" pos:end="16:27">&lt;</operator> <name pos:start="16:29" pos:end="16:32">MAXN</name></expr>;</condition> <incr pos:start="16:35" pos:end="16:37"><expr pos:start="16:35" pos:end="16:37"><name pos:start="16:35" pos:end="16:35">j</name><operator pos:start="16:36" pos:end="16:37">++</operator></expr></incr>)</control> <block pos:start="16:40" pos:end="25:9">{<block_content pos:start="17:13" pos:end="24:29">
            <expr_stmt pos:start="17:13" pos:end="17:29"><expr pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:13">d</name><index pos:start="17:14" pos:end="17:16">[<expr pos:start="17:15" pos:end="17:15"><name pos:start="17:15" pos:end="17:15">i</name></expr>]</index><index pos:start="17:17" pos:end="17:19">[<expr pos:start="17:18" pos:end="17:18"><name pos:start="17:18" pos:end="17:18">j</name></expr>]</index><index pos:start="17:20" pos:end="17:22">[<expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr>]</index></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <name pos:start="17:26" pos:end="17:28">INF</name></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:29"><expr pos:start="18:13" pos:end="18:28"><name pos:start="18:13" pos:end="18:22"><name pos:start="18:13" pos:end="18:13">d</name><index pos:start="18:14" pos:end="18:16">[<expr pos:start="18:15" pos:end="18:15"><name pos:start="18:15" pos:end="18:15">i</name></expr>]</index><index pos:start="18:17" pos:end="18:19">[<expr pos:start="18:18" pos:end="18:18"><name pos:start="18:18" pos:end="18:18">j</name></expr>]</index><index pos:start="18:20" pos:end="18:22">[<expr pos:start="18:21" pos:end="18:21"><literal type="number" pos:start="18:21" pos:end="18:21">1</literal></expr>]</index></name> <operator pos:start="18:24" pos:end="18:24">=</operator> <name pos:start="18:26" pos:end="18:28">INF</name></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:29"><expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:13">d</name><index pos:start="19:14" pos:end="19:16">[<expr pos:start="19:15" pos:end="19:15"><name pos:start="19:15" pos:end="19:15">i</name></expr>]</index><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><name pos:start="19:18" pos:end="19:18">j</name></expr>]</index><index pos:start="19:20" pos:end="19:22">[<expr pos:start="19:21" pos:end="19:21"><literal type="number" pos:start="19:21" pos:end="19:21">2</literal></expr>]</index></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <name pos:start="19:26" pos:end="19:28">INF</name></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:29"><expr pos:start="20:13" pos:end="20:28"><name pos:start="20:13" pos:end="20:22"><name pos:start="20:13" pos:end="20:13">d</name><index pos:start="20:14" pos:end="20:16">[<expr pos:start="20:15" pos:end="20:15"><name pos:start="20:15" pos:end="20:15">i</name></expr>]</index><index pos:start="20:17" pos:end="20:19">[<expr pos:start="20:18" pos:end="20:18"><name pos:start="20:18" pos:end="20:18">j</name></expr>]</index><index pos:start="20:20" pos:end="20:22">[<expr pos:start="20:21" pos:end="20:21"><literal type="number" pos:start="20:21" pos:end="20:21">3</literal></expr>]</index></name> <operator pos:start="20:24" pos:end="20:24">=</operator> <name pos:start="20:26" pos:end="20:28">INF</name></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:29"><expr pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:15">vis</name><index pos:start="21:16" pos:end="21:18">[<expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">i</name></expr>]</index><index pos:start="21:19" pos:end="21:21">[<expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">j</name></expr>]</index><index pos:start="21:22" pos:end="21:24">[<expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr>]</index></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:29"><expr pos:start="22:13" pos:end="22:28"><name pos:start="22:13" pos:end="22:24"><name pos:start="22:13" pos:end="22:15">vis</name><index pos:start="22:16" pos:end="22:18">[<expr pos:start="22:17" pos:end="22:17"><name pos:start="22:17" pos:end="22:17">i</name></expr>]</index><index pos:start="22:19" pos:end="22:21">[<expr pos:start="22:20" pos:end="22:20"><name pos:start="22:20" pos:end="22:20">j</name></expr>]</index><index pos:start="22:22" pos:end="22:24">[<expr pos:start="22:23" pos:end="22:23"><literal type="number" pos:start="22:23" pos:end="22:23">1</literal></expr>]</index></name> <operator pos:start="22:26" pos:end="22:26">=</operator> <literal type="number" pos:start="22:28" pos:end="22:28">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:29"><expr pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:15">vis</name><index pos:start="23:16" pos:end="23:18">[<expr pos:start="23:17" pos:end="23:17"><name pos:start="23:17" pos:end="23:17">i</name></expr>]</index><index pos:start="23:19" pos:end="23:21">[<expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">j</name></expr>]</index><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">2</literal></expr>]</index></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="24:13" pos:end="24:29"><expr pos:start="24:13" pos:end="24:28"><name pos:start="24:13" pos:end="24:24"><name pos:start="24:13" pos:end="24:15">vis</name><index pos:start="24:16" pos:end="24:18">[<expr pos:start="24:17" pos:end="24:17"><name pos:start="24:17" pos:end="24:17">i</name></expr>]</index><index pos:start="24:19" pos:end="24:21">[<expr pos:start="24:20" pos:end="24:20"><name pos:start="24:20" pos:end="24:20">j</name></expr>]</index><index pos:start="24:22" pos:end="24:24">[<expr pos:start="24:23" pos:end="24:23"><literal type="number" pos:start="24:23" pos:end="24:23">3</literal></expr>]</index></name> <operator pos:start="24:26" pos:end="24:26">=</operator> <literal type="number" pos:start="24:28" pos:end="24:28">0</literal></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="27:5" pos:end="29:5">for <control pos:start="27:9" pos:end="27:34">(<init pos:start="27:10" pos:end="27:19"><decl pos:start="27:10" pos:end="27:18"><type pos:start="27:10" pos:end="27:12"><name pos:start="27:10" pos:end="27:12">int</name></type> <name pos:start="27:14" pos:end="27:14">i</name> <init pos:start="27:16" pos:end="27:18">= <expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr></init></decl>;</init> <condition pos:start="27:21" pos:end="27:29"><expr pos:start="27:21" pos:end="27:28"><name pos:start="27:21" pos:end="27:21">i</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <name pos:start="27:25" pos:end="27:28">MAXN</name></expr>;</condition> <incr pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><name pos:start="27:31" pos:end="27:31">i</name><operator pos:start="27:32" pos:end="27:33">++</operator></expr></incr>)</control> <block pos:start="27:36" pos:end="29:5">{<block_content pos:start="28:9" pos:end="28:21">
        <expr_stmt pos:start="28:9" pos:end="28:21"><expr pos:start="28:9" pos:end="28:20"><name pos:start="28:9" pos:end="28:15"><name pos:start="28:9" pos:end="28:12">maze</name><index pos:start="28:13" pos:end="28:15">[<expr pos:start="28:14" pos:end="28:14"><name pos:start="28:14" pos:end="28:14">i</name></expr>]</index></name> <operator pos:start="28:17" pos:end="28:17">=</operator> <literal type="string" pos:start="28:19" pos:end="28:20">""</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<decl_stmt pos:start="31:1" pos:end="31:51"><decl pos:start="31:1" pos:end="31:50"><type pos:start="31:1" pos:end="31:3"><name pos:start="31:1" pos:end="31:3">int</name></type> <name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:7">dir</name><index pos:start="31:8" pos:end="31:10">[<expr pos:start="31:9" pos:end="31:9"><literal type="number" pos:start="31:9" pos:end="31:9">4</literal></expr>]</index><index pos:start="31:11" pos:end="31:13">[<expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">2</literal></expr>]</index></name> <init pos:start="31:15" pos:end="31:50">= <expr pos:start="31:17" pos:end="31:50"><block pos:start="31:17" pos:end="31:50">{<expr pos:start="31:18" pos:end="31:23"><block pos:start="31:18" pos:end="31:23">{<expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">1</literal></expr>, <expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>}</block></expr>, <expr pos:start="31:26" pos:end="31:31"><block pos:start="31:26" pos:end="31:31">{<expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr>, <expr pos:start="31:30" pos:end="31:30"><literal type="number" pos:start="31:30" pos:end="31:30">1</literal></expr>}</block></expr>, <expr pos:start="31:34" pos:end="31:40"><block pos:start="31:34" pos:end="31:40">{<expr pos:start="31:35" pos:end="31:36"><operator pos:start="31:35" pos:end="31:35">-</operator><literal type="number" pos:start="31:36" pos:end="31:36">1</literal></expr>, <expr pos:start="31:39" pos:end="31:39"><literal type="number" pos:start="31:39" pos:end="31:39">0</literal></expr>}</block></expr>, <expr pos:start="31:43" pos:end="31:49"><block pos:start="31:43" pos:end="31:49">{<expr pos:start="31:44" pos:end="31:44"><literal type="number" pos:start="31:44" pos:end="31:44">0</literal></expr>, <expr pos:start="31:47" pos:end="31:48"><operator pos:start="31:47" pos:end="31:47">-</operator><literal type="number" pos:start="31:48" pos:end="31:48">1</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="32:1" pos:end="32:22"><decl pos:start="32:1" pos:end="32:5"><type pos:start="32:1" pos:end="32:3"><name pos:start="32:1" pos:end="32:3">int</name></type> <name pos:start="32:5" pos:end="32:5">k</name></decl>, <decl pos:start="32:8" pos:end="32:9"><type ref="prev" pos:start="32:1" pos:end="32:3"/><name pos:start="32:8" pos:end="32:9">x1</name></decl>, <decl pos:start="32:12" pos:end="32:13"><type ref="prev" pos:start="32:1" pos:end="32:3"/><name pos:start="32:12" pos:end="32:13">x2</name></decl>, <decl pos:start="32:16" pos:end="32:17"><type ref="prev" pos:start="32:1" pos:end="32:3"/><name pos:start="32:16" pos:end="32:17">y1</name></decl>, <decl pos:start="32:20" pos:end="32:21"><type ref="prev" pos:start="32:1" pos:end="32:3"/><name pos:start="32:20" pos:end="32:21">y2</name></decl>;</decl_stmt>
<struct pos:start="33:1" pos:end="38:2">struct <name pos:start="33:8" pos:end="33:11">Node</name> <block pos:start="33:13" pos:end="38:1">{<public type="default" pos:start="34:5" pos:end="37:13">
    <decl_stmt pos:start="34:5" pos:end="34:10"><decl pos:start="34:5" pos:end="34:9"><type pos:start="34:5" pos:end="34:7"><name pos:start="34:5" pos:end="34:7">int</name></type> <name pos:start="34:9" pos:end="34:9">x</name></decl>;</decl_stmt>
    <decl_stmt pos:start="35:5" pos:end="35:10"><decl pos:start="35:5" pos:end="35:9"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:9">y</name></decl>;</decl_stmt>
    <decl_stmt pos:start="36:5" pos:end="36:13"><decl pos:start="36:5" pos:end="36:12"><type pos:start="36:5" pos:end="36:7"><name pos:start="36:5" pos:end="36:7">int</name></type> <name pos:start="36:9" pos:end="36:12">step</name></decl>;</decl_stmt>
    <decl_stmt pos:start="37:5" pos:end="37:13"><decl pos:start="37:5" pos:end="37:12"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:12">last</name></decl>;</decl_stmt>
</public>}</block>;</struct>
<function pos:start="39:1" pos:end="76:1"><type pos:start="39:1" pos:end="39:4"><name pos:start="39:1" pos:end="39:4">void</name></type> <name pos:start="39:6" pos:end="39:8">bfs</name><parameter_list pos:start="39:9" pos:end="39:22">(<parameter pos:start="39:10" pos:end="39:14"><decl pos:start="39:10" pos:end="39:14"><type pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:12">int</name></type> <name pos:start="39:14" pos:end="39:14">x</name></decl></parameter>, <parameter pos:start="39:17" pos:end="39:21"><decl pos:start="39:17" pos:end="39:21"><type pos:start="39:17" pos:end="39:21"><name pos:start="39:17" pos:end="39:19">int</name></type> <name pos:start="39:21" pos:end="39:21">y</name></decl></parameter>)</parameter_list> <block pos:start="39:24" pos:end="76:1">{<block_content pos:start="40:5" pos:end="75:5">
    <decl_stmt pos:start="40:5" pos:end="40:20"><decl pos:start="40:5" pos:end="40:19"><type pos:start="40:5" pos:end="40:15"><name pos:start="40:5" pos:end="40:15"><name pos:start="40:5" pos:end="40:9">deque</name><argument_list type="generic" pos:start="40:10" pos:end="40:15">&lt;<argument pos:start="40:11" pos:end="40:14"><expr pos:start="40:11" pos:end="40:14"><name pos:start="40:11" pos:end="40:14">Node</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="40:17" pos:end="40:19">deq</name></decl>;</decl_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:19"><expr pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:5">d</name><index pos:start="41:6" pos:end="41:8">[<expr pos:start="41:7" pos:end="41:7"><name pos:start="41:7" pos:end="41:7">x</name></expr>]</index><index pos:start="41:9" pos:end="41:11">[<expr pos:start="41:10" pos:end="41:10"><name pos:start="41:10" pos:end="41:10">y</name></expr>]</index><index pos:start="41:12" pos:end="41:14">[<expr pos:start="41:13" pos:end="41:13"><literal type="number" pos:start="41:13" pos:end="41:13">0</literal></expr>]</index></name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:19"><expr pos:start="42:5" pos:end="42:18"><name pos:start="42:5" pos:end="42:14"><name pos:start="42:5" pos:end="42:5">d</name><index pos:start="42:6" pos:end="42:8">[<expr pos:start="42:7" pos:end="42:7"><name pos:start="42:7" pos:end="42:7">x</name></expr>]</index><index pos:start="42:9" pos:end="42:11">[<expr pos:start="42:10" pos:end="42:10"><name pos:start="42:10" pos:end="42:10">y</name></expr>]</index><index pos:start="42:12" pos:end="42:14">[<expr pos:start="42:13" pos:end="42:13"><literal type="number" pos:start="42:13" pos:end="42:13">1</literal></expr>]</index></name> <operator pos:start="42:16" pos:end="42:16">=</operator> <literal type="number" pos:start="42:18" pos:end="42:18">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="43:5" pos:end="43:19"><expr pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:5">d</name><index pos:start="43:6" pos:end="43:8">[<expr pos:start="43:7" pos:end="43:7"><name pos:start="43:7" pos:end="43:7">x</name></expr>]</index><index pos:start="43:9" pos:end="43:11">[<expr pos:start="43:10" pos:end="43:10"><name pos:start="43:10" pos:end="43:10">y</name></expr>]</index><index pos:start="43:12" pos:end="43:14">[<expr pos:start="43:13" pos:end="43:13"><literal type="number" pos:start="43:13" pos:end="43:13">2</literal></expr>]</index></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:19"><expr pos:start="44:5" pos:end="44:18"><name pos:start="44:5" pos:end="44:14"><name pos:start="44:5" pos:end="44:5">d</name><index pos:start="44:6" pos:end="44:8">[<expr pos:start="44:7" pos:end="44:7"><name pos:start="44:7" pos:end="44:7">x</name></expr>]</index><index pos:start="44:9" pos:end="44:11">[<expr pos:start="44:10" pos:end="44:10"><name pos:start="44:10" pos:end="44:10">y</name></expr>]</index><index pos:start="44:12" pos:end="44:14">[<expr pos:start="44:13" pos:end="44:13"><literal type="number" pos:start="44:13" pos:end="44:13">3</literal></expr>]</index></name> <operator pos:start="44:16" pos:end="44:16">=</operator> <literal type="number" pos:start="44:18" pos:end="44:18">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:32"><expr pos:start="45:5" pos:end="45:31"><call pos:start="45:5" pos:end="45:31"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:7">deq</name><operator pos:start="45:8" pos:end="45:8">.</operator><name pos:start="45:9" pos:end="45:17">push_back</name></name><argument_list pos:start="45:18" pos:end="45:31">(<argument pos:start="45:19" pos:end="45:30"><expr pos:start="45:19" pos:end="45:30"><block pos:start="45:19" pos:end="45:30">{<expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">x</name></expr>, <expr pos:start="45:23" pos:end="45:23"><name pos:start="45:23" pos:end="45:23">y</name></expr>, <expr pos:start="45:26" pos:end="45:26"><literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr>, <expr pos:start="45:29" pos:end="45:29"><literal type="number" pos:start="45:29" pos:end="45:29">0</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="46:5" pos:end="46:32"><expr pos:start="46:5" pos:end="46:31"><call pos:start="46:5" pos:end="46:31"><name pos:start="46:5" pos:end="46:17"><name pos:start="46:5" pos:end="46:7">deq</name><operator pos:start="46:8" pos:end="46:8">.</operator><name pos:start="46:9" pos:end="46:17">push_back</name></name><argument_list pos:start="46:18" pos:end="46:31">(<argument pos:start="46:19" pos:end="46:30"><expr pos:start="46:19" pos:end="46:30"><block pos:start="46:19" pos:end="46:30">{<expr pos:start="46:20" pos:end="46:20"><name pos:start="46:20" pos:end="46:20">x</name></expr>, <expr pos:start="46:23" pos:end="46:23"><name pos:start="46:23" pos:end="46:23">y</name></expr>, <expr pos:start="46:26" pos:end="46:26"><literal type="number" pos:start="46:26" pos:end="46:26">0</literal></expr>, <expr pos:start="46:29" pos:end="46:29"><literal type="number" pos:start="46:29" pos:end="46:29">1</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="47:5" pos:end="47:32"><expr pos:start="47:5" pos:end="47:31"><call pos:start="47:5" pos:end="47:31"><name pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:7">deq</name><operator pos:start="47:8" pos:end="47:8">.</operator><name pos:start="47:9" pos:end="47:17">push_back</name></name><argument_list pos:start="47:18" pos:end="47:31">(<argument pos:start="47:19" pos:end="47:30"><expr pos:start="47:19" pos:end="47:30"><block pos:start="47:19" pos:end="47:30">{<expr pos:start="47:20" pos:end="47:20"><name pos:start="47:20" pos:end="47:20">x</name></expr>, <expr pos:start="47:23" pos:end="47:23"><name pos:start="47:23" pos:end="47:23">y</name></expr>, <expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">0</literal></expr>, <expr pos:start="47:29" pos:end="47:29"><literal type="number" pos:start="47:29" pos:end="47:29">2</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="48:5" pos:end="48:32"><expr pos:start="48:5" pos:end="48:31"><call pos:start="48:5" pos:end="48:31"><name pos:start="48:5" pos:end="48:17"><name pos:start="48:5" pos:end="48:7">deq</name><operator pos:start="48:8" pos:end="48:8">.</operator><name pos:start="48:9" pos:end="48:17">push_back</name></name><argument_list pos:start="48:18" pos:end="48:31">(<argument pos:start="48:19" pos:end="48:30"><expr pos:start="48:19" pos:end="48:30"><block pos:start="48:19" pos:end="48:30">{<expr pos:start="48:20" pos:end="48:20"><name pos:start="48:20" pos:end="48:20">x</name></expr>, <expr pos:start="48:23" pos:end="48:23"><name pos:start="48:23" pos:end="48:23">y</name></expr>, <expr pos:start="48:26" pos:end="48:26"><literal type="number" pos:start="48:26" pos:end="48:26">0</literal></expr>, <expr pos:start="48:29" pos:end="48:29"><literal type="number" pos:start="48:29" pos:end="48:29">3</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while pos:start="49:5" pos:end="75:5">while <condition pos:start="49:11" pos:end="49:24">(<expr pos:start="49:12" pos:end="49:23"><operator pos:start="49:12" pos:end="49:12">!</operator><call pos:start="49:13" pos:end="49:23"><name pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:15">deq</name><operator pos:start="49:16" pos:end="49:16">.</operator><name pos:start="49:17" pos:end="49:21">empty</name></name><argument_list pos:start="49:22" pos:end="49:23">()</argument_list></call></expr>)</condition> <block pos:start="49:26" pos:end="75:5">{<block_content pos:start="50:9" pos:end="74:9">
        <decl_stmt pos:start="50:9" pos:end="50:31"><decl pos:start="50:9" pos:end="50:30"><type pos:start="50:9" pos:end="50:12"><name pos:start="50:9" pos:end="50:12">Node</name></type> <name pos:start="50:14" pos:end="50:16">now</name> <init pos:start="50:18" pos:end="50:30">= <expr pos:start="50:20" pos:end="50:30"><call pos:start="50:20" pos:end="50:30"><name pos:start="50:20" pos:end="50:28"><name pos:start="50:20" pos:end="50:22">deq</name><operator pos:start="50:23" pos:end="50:23">.</operator><name pos:start="50:24" pos:end="50:28">front</name></name><argument_list pos:start="50:29" pos:end="50:30">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="51:9" pos:end="51:23"><decl pos:start="51:9" pos:end="51:22"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:14">nx</name> <init pos:start="51:16" pos:end="51:22">= <expr pos:start="51:18" pos:end="51:22"><name pos:start="51:18" pos:end="51:22"><name pos:start="51:18" pos:end="51:20">now</name><operator pos:start="51:21" pos:end="51:21">.</operator><name pos:start="51:22" pos:end="51:22">x</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="52:9" pos:end="52:23"><decl pos:start="52:9" pos:end="52:22"><type pos:start="52:9" pos:end="52:11"><name pos:start="52:9" pos:end="52:11">int</name></type> <name pos:start="52:13" pos:end="52:14">ny</name> <init pos:start="52:16" pos:end="52:22">= <expr pos:start="52:18" pos:end="52:22"><name pos:start="52:18" pos:end="52:22"><name pos:start="52:18" pos:end="52:20">now</name><operator pos:start="52:21" pos:end="52:21">.</operator><name pos:start="52:22" pos:end="52:22">y</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="53:9" pos:end="53:26"><decl pos:start="53:9" pos:end="53:25"><type pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">int</name></type> <name pos:start="53:13" pos:end="53:14">lc</name> <init pos:start="53:16" pos:end="53:25">= <expr pos:start="53:18" pos:end="53:25"><name pos:start="53:18" pos:end="53:25"><name pos:start="53:18" pos:end="53:20">now</name><operator pos:start="53:21" pos:end="53:21">.</operator><name pos:start="53:22" pos:end="53:25">last</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="54:9" pos:end="54:26"><decl pos:start="54:9" pos:end="54:25"><type pos:start="54:9" pos:end="54:11"><name pos:start="54:9" pos:end="54:11">int</name></type> <name pos:start="54:13" pos:end="54:14">ns</name> <init pos:start="54:16" pos:end="54:25">= <expr pos:start="54:18" pos:end="54:25"><name pos:start="54:18" pos:end="54:25"><name pos:start="54:18" pos:end="54:20">now</name><operator pos:start="54:21" pos:end="54:21">.</operator><name pos:start="54:22" pos:end="54:25">step</name></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="55:9" pos:end="55:24"><expr pos:start="55:9" pos:end="55:23"><call pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:11">deq</name><operator pos:start="55:12" pos:end="55:12">.</operator><name pos:start="55:13" pos:end="55:21">pop_front</name></name><argument_list pos:start="55:22" pos:end="55:23">()</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="56:9" pos:end="56:38"><if pos:start="56:9" pos:end="56:38">if <condition pos:start="56:12" pos:end="56:28">(<expr pos:start="56:13" pos:end="56:27"><name pos:start="56:13" pos:end="56:27"><name pos:start="56:13" pos:end="56:15">vis</name><index pos:start="56:16" pos:end="56:19">[<expr pos:start="56:17" pos:end="56:18"><name pos:start="56:17" pos:end="56:18">nx</name></expr>]</index><index pos:start="56:20" pos:end="56:23">[<expr pos:start="56:21" pos:end="56:22"><name pos:start="56:21" pos:end="56:22">ny</name></expr>]</index><index pos:start="56:24" pos:end="56:27">[<expr pos:start="56:25" pos:end="56:26"><name pos:start="56:25" pos:end="56:26">lc</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="56:30" pos:end="56:38"><block_content pos:start="56:30" pos:end="56:38"> <continue pos:start="56:30" pos:end="56:38">continue;</continue></block_content></block></if></if_stmt>
        <if_stmt pos:start="57:9" pos:end="57:42"><if pos:start="57:9" pos:end="57:42">if <condition pos:start="57:12" pos:end="57:32">(<expr pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:16">maze</name><index pos:start="57:17" pos:end="57:20">[<expr pos:start="57:18" pos:end="57:19"><name pos:start="57:18" pos:end="57:19">nx</name></expr>]</index><index pos:start="57:21" pos:end="57:24">[<expr pos:start="57:22" pos:end="57:23"><name pos:start="57:22" pos:end="57:23">ny</name></expr>]</index></name> <operator pos:start="57:26" pos:end="57:27">==</operator> <literal type="char" pos:start="57:29" pos:end="57:31">'*'</literal></expr>)</condition><block type="pseudo" pos:start="57:34" pos:end="57:42"><block_content pos:start="57:34" pos:end="57:42"> <continue pos:start="57:34" pos:end="57:42">continue;</continue></block_content></block></if></if_stmt>
        <expr_stmt pos:start="58:9" pos:end="58:28"><expr pos:start="58:9" pos:end="58:27"><name pos:start="58:9" pos:end="58:23"><name pos:start="58:9" pos:end="58:11">vis</name><index pos:start="58:12" pos:end="58:15">[<expr pos:start="58:13" pos:end="58:14"><name pos:start="58:13" pos:end="58:14">nx</name></expr>]</index><index pos:start="58:16" pos:end="58:19">[<expr pos:start="58:17" pos:end="58:18"><name pos:start="58:17" pos:end="58:18">ny</name></expr>]</index><index pos:start="58:20" pos:end="58:23">[<expr pos:start="58:21" pos:end="58:22"><name pos:start="58:21" pos:end="58:22">lc</name></expr>]</index></name> <operator pos:start="58:25" pos:end="58:25">=</operator> <literal type="number" pos:start="58:27" pos:end="58:27">1</literal></expr>;</expr_stmt>
        <for pos:start="59:9" pos:end="74:9">for <control pos:start="59:13" pos:end="59:35">(<init pos:start="59:14" pos:end="59:23"><decl pos:start="59:14" pos:end="59:22"><type pos:start="59:14" pos:end="59:16"><name pos:start="59:14" pos:end="59:16">int</name></type> <name pos:start="59:18" pos:end="59:18">i</name> <init pos:start="59:20" pos:end="59:22">= <expr pos:start="59:22" pos:end="59:22"><literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr></init></decl>;</init> <condition pos:start="59:25" pos:end="59:30"><expr pos:start="59:25" pos:end="59:29"><name pos:start="59:25" pos:end="59:25">i</name> <operator pos:start="59:27" pos:end="59:27">&lt;</operator> <literal type="number" pos:start="59:29" pos:end="59:29">4</literal></expr>;</condition> <incr pos:start="59:32" pos:end="59:34"><expr pos:start="59:32" pos:end="59:34"><name pos:start="59:32" pos:end="59:32">i</name><operator pos:start="59:33" pos:end="59:34">++</operator></expr></incr>)</control> <block pos:start="59:37" pos:end="74:9">{<block_content pos:start="60:13" pos:end="73:13">
            <decl_stmt pos:start="60:13" pos:end="60:36"><decl pos:start="60:13" pos:end="60:35"><type pos:start="60:13" pos:end="60:15"><name pos:start="60:13" pos:end="60:15">int</name></type> <name pos:start="60:17" pos:end="60:18">tx</name> <init pos:start="60:20" pos:end="60:35">= <expr pos:start="60:22" pos:end="60:35"><name pos:start="60:22" pos:end="60:23">nx</name> <operator pos:start="60:25" pos:end="60:25">+</operator> <name pos:start="60:27" pos:end="60:35"><name pos:start="60:27" pos:end="60:29">dir</name><index pos:start="60:30" pos:end="60:32">[<expr pos:start="60:31" pos:end="60:31"><name pos:start="60:31" pos:end="60:31">i</name></expr>]</index><index pos:start="60:33" pos:end="60:35">[<expr pos:start="60:34" pos:end="60:34"><literal type="number" pos:start="60:34" pos:end="60:34">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="61:13" pos:end="61:36"><decl pos:start="61:13" pos:end="61:35"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:18">ty</name> <init pos:start="61:20" pos:end="61:35">= <expr pos:start="61:22" pos:end="61:35"><name pos:start="61:22" pos:end="61:23">ny</name> <operator pos:start="61:25" pos:end="61:25">+</operator> <name pos:start="61:27" pos:end="61:35"><name pos:start="61:27" pos:end="61:29">dir</name><index pos:start="61:30" pos:end="61:32">[<expr pos:start="61:31" pos:end="61:31"><name pos:start="61:31" pos:end="61:31">i</name></expr>]</index><index pos:start="61:33" pos:end="61:35">[<expr pos:start="61:34" pos:end="61:34"><literal type="number" pos:start="61:34" pos:end="61:34">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="62:13" pos:end="62:68"><if pos:start="62:13" pos:end="62:68">if <condition pos:start="62:16" pos:end="62:58">(<expr pos:start="62:17" pos:end="62:57"><operator pos:start="62:17" pos:end="62:17">!</operator><operator pos:start="62:18" pos:end="62:18">(</operator><name pos:start="62:19" pos:end="62:20">tx</name> <operator pos:start="62:22" pos:end="62:23">&gt;=</operator> <literal type="number" pos:start="62:25" pos:end="62:25">0</literal> <operator pos:start="62:27" pos:end="62:28">&amp;&amp;</operator> <name pos:start="62:30" pos:end="62:31">tx</name> <operator pos:start="62:33" pos:end="62:33">&lt;</operator> <name pos:start="62:35" pos:end="62:35">n</name> <operator pos:start="62:37" pos:end="62:38">&amp;&amp;</operator> <name pos:start="62:40" pos:end="62:41">ty</name> <operator pos:start="62:43" pos:end="62:44">&gt;=</operator> <literal type="number" pos:start="62:46" pos:end="62:46">0</literal> <operator pos:start="62:48" pos:end="62:49">&amp;&amp;</operator> <name pos:start="62:51" pos:end="62:52">ty</name> <operator pos:start="62:54" pos:end="62:54">&lt;</operator> <name pos:start="62:56" pos:end="62:56">m</name><operator pos:start="62:57" pos:end="62:57">)</operator></expr>)</condition><block type="pseudo" pos:start="62:60" pos:end="62:68"><block_content pos:start="62:60" pos:end="62:68"> <continue pos:start="62:60" pos:end="62:68">continue;</continue></block_content></block></if></if_stmt>
            <if_stmt pos:start="63:13" pos:end="73:13"><if pos:start="63:13" pos:end="68:13">if <condition pos:start="63:16" pos:end="63:24">(<expr pos:start="63:17" pos:end="63:23"><name pos:start="63:17" pos:end="63:17">i</name> <operator pos:start="63:19" pos:end="63:20">==</operator> <name pos:start="63:22" pos:end="63:23">lc</name></expr>)</condition> <block pos:start="63:26" pos:end="68:13">{<block_content pos:start="64:17" pos:end="67:17">
                <if_stmt pos:start="64:17" pos:end="67:17"><if pos:start="64:17" pos:end="67:17">if <condition pos:start="64:20" pos:end="64:36">(<expr pos:start="64:21" pos:end="64:35"><operator pos:start="64:21" pos:end="64:21">!</operator><name pos:start="64:22" pos:end="64:35"><name pos:start="64:22" pos:end="64:24">vis</name><index pos:start="64:25" pos:end="64:28">[<expr pos:start="64:26" pos:end="64:27"><name pos:start="64:26" pos:end="64:27">tx</name></expr>]</index><index pos:start="64:29" pos:end="64:32">[<expr pos:start="64:30" pos:end="64:31"><name pos:start="64:30" pos:end="64:31">ty</name></expr>]</index><index pos:start="64:33" pos:end="64:35">[<expr pos:start="64:34" pos:end="64:34"><name pos:start="64:34" pos:end="64:34">i</name></expr>]</index></name></expr>)</condition> <block pos:start="64:38" pos:end="67:17">{<block_content pos:start="65:21" pos:end="66:39"> 
                    <expr_stmt pos:start="65:21" pos:end="65:53"><expr pos:start="65:21" pos:end="65:52"><call pos:start="65:21" pos:end="65:52"><name pos:start="65:21" pos:end="65:34"><name pos:start="65:21" pos:end="65:23">deq</name><operator pos:start="65:24" pos:end="65:24">.</operator><name pos:start="65:25" pos:end="65:34">push_front</name></name><argument_list pos:start="65:35" pos:end="65:52">(<argument pos:start="65:36" pos:end="65:51"><expr pos:start="65:36" pos:end="65:51"><block pos:start="65:36" pos:end="65:51">{<expr pos:start="65:37" pos:end="65:38"><name pos:start="65:37" pos:end="65:38">tx</name></expr>, <expr pos:start="65:41" pos:end="65:42"><name pos:start="65:41" pos:end="65:42">ty</name></expr>, <expr pos:start="65:45" pos:end="65:46"><name pos:start="65:45" pos:end="65:46">ns</name></expr>, <expr pos:start="65:49" pos:end="65:50"><name pos:start="65:49" pos:end="65:50">lc</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="66:21" pos:end="66:39"><expr pos:start="66:21" pos:end="66:38"><name pos:start="66:21" pos:end="66:33"><name pos:start="66:21" pos:end="66:21">d</name><index pos:start="66:22" pos:end="66:25">[<expr pos:start="66:23" pos:end="66:24"><name pos:start="66:23" pos:end="66:24">tx</name></expr>]</index><index pos:start="66:26" pos:end="66:29">[<expr pos:start="66:27" pos:end="66:28"><name pos:start="66:27" pos:end="66:28">ty</name></expr>]</index><index pos:start="66:30" pos:end="66:33">[<expr pos:start="66:31" pos:end="66:32"><name pos:start="66:31" pos:end="66:32">lc</name></expr>]</index></name> <operator pos:start="66:35" pos:end="66:35">=</operator> <name pos:start="66:37" pos:end="66:38">ns</name></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if> <else pos:start="68:15" pos:end="73:13">else <block pos:start="68:20" pos:end="73:13">{<block_content pos:start="69:17" pos:end="72:17">
                <if_stmt pos:start="69:17" pos:end="72:17"><if pos:start="69:17" pos:end="72:17">if <condition pos:start="69:20" pos:end="69:36">(<expr pos:start="69:21" pos:end="69:35"><operator pos:start="69:21" pos:end="69:21">!</operator><name pos:start="69:22" pos:end="69:35"><name pos:start="69:22" pos:end="69:24">vis</name><index pos:start="69:25" pos:end="69:28">[<expr pos:start="69:26" pos:end="69:27"><name pos:start="69:26" pos:end="69:27">tx</name></expr>]</index><index pos:start="69:29" pos:end="69:32">[<expr pos:start="69:30" pos:end="69:31"><name pos:start="69:30" pos:end="69:31">ty</name></expr>]</index><index pos:start="69:33" pos:end="69:35">[<expr pos:start="69:34" pos:end="69:34"><name pos:start="69:34" pos:end="69:34">i</name></expr>]</index></name></expr>)</condition> <block pos:start="69:38" pos:end="72:17">{<block_content pos:start="70:21" pos:end="71:43">
                    <expr_stmt pos:start="70:21" pos:end="70:55"><expr pos:start="70:21" pos:end="70:54"><call pos:start="70:21" pos:end="70:54"><name pos:start="70:21" pos:end="70:33"><name pos:start="70:21" pos:end="70:23">deq</name><operator pos:start="70:24" pos:end="70:24">.</operator><name pos:start="70:25" pos:end="70:33">push_back</name></name><argument_list pos:start="70:34" pos:end="70:54">(<argument pos:start="70:35" pos:end="70:53"><expr pos:start="70:35" pos:end="70:53"><block pos:start="70:35" pos:end="70:53">{<expr pos:start="70:36" pos:end="70:37"><name pos:start="70:36" pos:end="70:37">tx</name></expr>, <expr pos:start="70:40" pos:end="70:41"><name pos:start="70:40" pos:end="70:41">ty</name></expr>, <expr pos:start="70:44" pos:end="70:49"><name pos:start="70:44" pos:end="70:45">ns</name> <operator pos:start="70:47" pos:end="70:47">+</operator> <literal type="number" pos:start="70:49" pos:end="70:49">1</literal></expr>, <expr pos:start="70:52" pos:end="70:52"><name pos:start="70:52" pos:end="70:52">i</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="71:21" pos:end="71:43"><expr pos:start="71:21" pos:end="71:42"><name pos:start="71:21" pos:end="71:33"><name pos:start="71:21" pos:end="71:21">d</name><index pos:start="71:22" pos:end="71:25">[<expr pos:start="71:23" pos:end="71:24"><name pos:start="71:23" pos:end="71:24">tx</name></expr>]</index><index pos:start="71:26" pos:end="71:29">[<expr pos:start="71:27" pos:end="71:28"><name pos:start="71:27" pos:end="71:28">ty</name></expr>]</index><index pos:start="71:30" pos:end="71:33">[<expr pos:start="71:31" pos:end="71:32"><name pos:start="71:31" pos:end="71:32">lc</name></expr>]</index></name> <operator pos:start="71:35" pos:end="71:35">=</operator> <name pos:start="71:37" pos:end="71:38">ns</name> <operator pos:start="71:40" pos:end="71:40">+</operator> <literal type="number" pos:start="71:42" pos:end="71:42">1</literal></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></while>
</block_content>}</block></function>
<function pos:start="77:1" pos:end="96:1"><type pos:start="77:1" pos:end="77:4"><name pos:start="77:1" pos:end="77:4">void</name></type> <name pos:start="77:6" pos:end="77:7">go</name><parameter_list pos:start="77:8" pos:end="77:9">()</parameter_list> <block pos:start="77:11" pos:end="96:1">{<block_content pos:start="78:5" pos:end="95:11">
    <expr_stmt pos:start="78:5" pos:end="78:11"><expr pos:start="78:5" pos:end="78:10"><call pos:start="78:5" pos:end="78:10"><name pos:start="78:5" pos:end="78:8">init</name><argument_list pos:start="78:9" pos:end="78:10">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="79:5" pos:end="79:18"><expr pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:7">cin</name> <operator pos:start="79:9" pos:end="79:10">&gt;&gt;</operator> <name pos:start="79:12" pos:end="79:12">n</name> <operator pos:start="79:14" pos:end="79:15">&gt;&gt;</operator> <name pos:start="79:17" pos:end="79:17">m</name></expr>;</expr_stmt>
    <for pos:start="80:5" pos:end="82:5">for <control pos:start="80:9" pos:end="80:31">(<init pos:start="80:10" pos:end="80:19"><decl pos:start="80:10" pos:end="80:18"><type pos:start="80:10" pos:end="80:12"><name pos:start="80:10" pos:end="80:12">int</name></type> <name pos:start="80:14" pos:end="80:14">i</name> <init pos:start="80:16" pos:end="80:18">= <expr pos:start="80:18" pos:end="80:18"><literal type="number" pos:start="80:18" pos:end="80:18">0</literal></expr></init></decl>;</init> <condition pos:start="80:21" pos:end="80:26"><expr pos:start="80:21" pos:end="80:25"><name pos:start="80:21" pos:end="80:21">i</name> <operator pos:start="80:23" pos:end="80:23">&lt;</operator> <name pos:start="80:25" pos:end="80:25">n</name></expr>;</condition> <incr pos:start="80:28" pos:end="80:30"><expr pos:start="80:28" pos:end="80:30"><name pos:start="80:28" pos:end="80:28">i</name><operator pos:start="80:29" pos:end="80:30">++</operator></expr></incr>)</control> <block pos:start="80:33" pos:end="82:5">{<block_content pos:start="81:9" pos:end="81:23">
        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:11">cin</name> <operator pos:start="81:13" pos:end="81:14">&gt;&gt;</operator> <name pos:start="81:16" pos:end="81:22"><name pos:start="81:16" pos:end="81:19">maze</name><index pos:start="81:20" pos:end="81:22">[<expr pos:start="81:21" pos:end="81:21"><name pos:start="81:21" pos:end="81:21">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    
    <expr_stmt pos:start="84:5" pos:end="84:37"><expr pos:start="84:5" pos:end="84:36"><name pos:start="84:5" pos:end="84:7">cin</name> <operator pos:start="84:9" pos:end="84:10">&gt;&gt;</operator> <name pos:start="84:12" pos:end="84:12">k</name> <operator pos:start="84:14" pos:end="84:15">&gt;&gt;</operator> <name pos:start="84:17" pos:end="84:18">x1</name> <operator pos:start="84:20" pos:end="84:21">&gt;&gt;</operator> <name pos:start="84:23" pos:end="84:24">y1</name> <operator pos:start="84:26" pos:end="84:27">&gt;&gt;</operator> <name pos:start="84:29" pos:end="84:30">x2</name> <operator pos:start="84:32" pos:end="84:33">&gt;&gt;</operator> <name pos:start="84:35" pos:end="84:36">y2</name></expr>;</expr_stmt>
    <expr_stmt pos:start="85:5" pos:end="85:9"><expr pos:start="85:5" pos:end="85:8"><name pos:start="85:5" pos:end="85:6">x1</name><operator pos:start="85:7" pos:end="85:8">--</operator></expr>;</expr_stmt> <expr_stmt pos:start="85:11" pos:end="85:15"><expr pos:start="85:11" pos:end="85:14"><name pos:start="85:11" pos:end="85:12">y1</name><operator pos:start="85:13" pos:end="85:14">--</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="86:5" pos:end="86:9"><expr pos:start="86:5" pos:end="86:8"><name pos:start="86:5" pos:end="86:6">x2</name><operator pos:start="86:7" pos:end="86:8">--</operator></expr>;</expr_stmt> <expr_stmt pos:start="86:11" pos:end="86:15"><expr pos:start="86:11" pos:end="86:14"><name pos:start="86:11" pos:end="86:12">y2</name><operator pos:start="86:13" pos:end="86:14">--</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="87:5" pos:end="87:17"><expr pos:start="87:5" pos:end="87:16"><call pos:start="87:5" pos:end="87:16"><name pos:start="87:5" pos:end="87:8">swap</name><argument_list pos:start="87:9" pos:end="87:16">(<argument pos:start="87:10" pos:end="87:11"><expr pos:start="87:10" pos:end="87:11"><name pos:start="87:10" pos:end="87:11">x1</name></expr></argument>, <argument pos:start="87:14" pos:end="87:15"><expr pos:start="87:14" pos:end="87:15"><name pos:start="87:14" pos:end="87:15">y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="88:5" pos:end="88:17"><expr pos:start="88:5" pos:end="88:16"><call pos:start="88:5" pos:end="88:16"><name pos:start="88:5" pos:end="88:8">swap</name><argument_list pos:start="88:9" pos:end="88:16">(<argument pos:start="88:10" pos:end="88:11"><expr pos:start="88:10" pos:end="88:11"><name pos:start="88:10" pos:end="88:11">x2</name></expr></argument>, <argument pos:start="88:14" pos:end="88:15"><expr pos:start="88:14" pos:end="88:15"><name pos:start="88:14" pos:end="88:15">y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="89:5" pos:end="89:16"><expr pos:start="89:5" pos:end="89:15"><call pos:start="89:5" pos:end="89:15"><name pos:start="89:5" pos:end="89:7">bfs</name><argument_list pos:start="89:8" pos:end="89:15">(<argument pos:start="89:9" pos:end="89:10"><expr pos:start="89:9" pos:end="89:10"><name pos:start="89:9" pos:end="89:10">x1</name></expr></argument>, <argument pos:start="89:13" pos:end="89:14"><expr pos:start="89:13" pos:end="89:14"><name pos:start="89:13" pos:end="89:14">y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="90:5" pos:end="94:5"><if pos:start="90:5" pos:end="92:5">if <condition pos:start="90:8" pos:end="90:31">(<expr pos:start="90:9" pos:end="90:30"><call pos:start="90:9" pos:end="90:22"><name pos:start="90:9" pos:end="90:11">dis</name><argument_list pos:start="90:12" pos:end="90:22">(<argument pos:start="90:13" pos:end="90:21"><expr pos:start="90:13" pos:end="90:21"><name pos:start="90:13" pos:end="90:21"><name pos:start="90:13" pos:end="90:13">d</name><index pos:start="90:14" pos:end="90:17">[<expr pos:start="90:15" pos:end="90:16"><name pos:start="90:15" pos:end="90:16">x2</name></expr>]</index><index pos:start="90:18" pos:end="90:21">[<expr pos:start="90:19" pos:end="90:20"><name pos:start="90:19" pos:end="90:20">y2</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="90:24" pos:end="90:24">&gt;</operator> <name pos:start="90:26" pos:end="90:26">k</name> <operator pos:start="90:28" pos:end="90:28">+</operator> <literal type="number" pos:start="90:30" pos:end="90:30">1</literal></expr>)</condition> <block pos:start="90:33" pos:end="92:5">{<block_content pos:start="91:9" pos:end="91:29">
        <expr_stmt pos:start="91:9" pos:end="91:29"><expr pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:12">cout</name> <operator pos:start="91:14" pos:end="91:15">&lt;&lt;</operator> <literal type="string" pos:start="91:17" pos:end="91:20">"no"</literal> <operator pos:start="91:22" pos:end="91:23">&lt;&lt;</operator> <name pos:start="91:25" pos:end="91:28">endl</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="92:7" pos:end="94:5">else <block pos:start="92:12" pos:end="94:5">{<block_content pos:start="93:9" pos:end="93:30">
        <expr_stmt pos:start="93:9" pos:end="93:30"><expr pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:12">cout</name> <operator pos:start="93:14" pos:end="93:15">&lt;&lt;</operator> <literal type="string" pos:start="93:17" pos:end="93:21">"yes"</literal> <operator pos:start="93:23" pos:end="93:24">&lt;&lt;</operator> <name pos:start="93:26" pos:end="93:29">endl</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return pos:start="95:5" pos:end="95:11">return;</return>
</block_content>}</block></function>
<function pos:start="97:1" pos:end="106:1"><type pos:start="97:1" pos:end="97:3"><name pos:start="97:1" pos:end="97:3">int</name></type> <name pos:start="97:5" pos:end="97:8">main</name><parameter_list pos:start="97:9" pos:end="97:10">()</parameter_list> <block pos:start="97:12" pos:end="106:1">{<block_content pos:start="98:5" pos:end="105:13">
    <expr_stmt pos:start="98:5" pos:end="98:36"><expr pos:start="98:5" pos:end="98:35"><call pos:start="98:5" pos:end="98:35"><name pos:start="98:5" pos:end="98:11">freopen</name> <argument_list pos:start="98:13" pos:end="98:35">(<argument pos:start="98:14" pos:end="98:22"><expr pos:start="98:14" pos:end="98:22"><literal type="string" pos:start="98:14" pos:end="98:22">"maze.in"</literal></expr></argument>, <argument pos:start="98:25" pos:end="98:27"><expr pos:start="98:25" pos:end="98:27"><literal type="string" pos:start="98:25" pos:end="98:27">"r"</literal></expr></argument>, <argument pos:start="98:30" pos:end="98:34"><expr pos:start="98:30" pos:end="98:34"><name pos:start="98:30" pos:end="98:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="99:5" pos:end="99:38"><expr pos:start="99:5" pos:end="99:37"><call pos:start="99:5" pos:end="99:37"><name pos:start="99:5" pos:end="99:11">freopen</name> <argument_list pos:start="99:13" pos:end="99:37">(<argument pos:start="99:14" pos:end="99:23"><expr pos:start="99:14" pos:end="99:23"><literal type="string" pos:start="99:14" pos:end="99:23">"maze.out"</literal></expr></argument>, <argument pos:start="99:26" pos:end="99:28"><expr pos:start="99:26" pos:end="99:28"><literal type="string" pos:start="99:26" pos:end="99:28">"w"</literal></expr></argument>, <argument pos:start="99:31" pos:end="99:36"><expr pos:start="99:31" pos:end="99:36"><name pos:start="99:31" pos:end="99:36">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="100:5" pos:end="100:10"><decl pos:start="100:5" pos:end="100:9"><type pos:start="100:5" pos:end="100:7"><name pos:start="100:5" pos:end="100:7">int</name></type> <name pos:start="100:9" pos:end="100:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="101:5" pos:end="101:13"><expr pos:start="101:5" pos:end="101:12"><name pos:start="101:5" pos:end="101:7">cin</name> <operator pos:start="101:9" pos:end="101:10">&gt;&gt;</operator> <name pos:start="101:12" pos:end="101:12">t</name></expr>;</expr_stmt>
    <while pos:start="102:5" pos:end="104:5">while <condition pos:start="102:11" pos:end="102:15">(<expr pos:start="102:12" pos:end="102:14"><name pos:start="102:12" pos:end="102:12">t</name><operator pos:start="102:13" pos:end="102:14">--</operator></expr>)</condition> <block pos:start="102:17" pos:end="104:5">{<block_content pos:start="103:9" pos:end="103:13">
        <expr_stmt pos:start="103:9" pos:end="103:13"><expr pos:start="103:9" pos:end="103:12"><call pos:start="103:9" pos:end="103:12"><name pos:start="103:9" pos:end="103:10">go</name><argument_list pos:start="103:11" pos:end="103:12">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
