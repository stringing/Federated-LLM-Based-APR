<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/91/91.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="15:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:6">jo</name><parameter_list pos:start="3:7" pos:end="3:13">(<parameter pos:start="3:8" pos:end="3:12"><decl pos:start="3:8" pos:end="3:12"><type pos:start="3:8" pos:end="3:10"><name pos:start="3:8" pos:end="3:10">int</name></type> <name pos:start="3:12" pos:end="3:12">x</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="15:1">{<block_content pos:start="5:5" pos:end="14:5">
    <if_stmt pos:start="5:5" pos:end="14:5"><if pos:start="5:5" pos:end="8:5">if<condition pos:start="5:7" pos:end="5:14">(<expr pos:start="5:8" pos:end="5:13"><name pos:start="5:8" pos:end="5:8">x</name><operator pos:start="5:9" pos:end="5:9">%</operator><literal type="number" pos:start="5:10" pos:end="5:10">2</literal><operator pos:start="5:11" pos:end="5:12">==</operator><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr>)</condition>
    <block pos:start="6:5" pos:end="8:5">{<block_content pos:start="7:9" pos:end="7:19">
        <return pos:start="7:9" pos:end="7:19">return <expr pos:start="7:16" pos:end="7:18"><name pos:start="7:16" pos:end="7:16">x</name><operator pos:start="7:17" pos:end="7:17">/</operator><literal type="number" pos:start="7:18" pos:end="7:18">2</literal></expr>;</return>
    </block_content>}</block></if>
    <else pos:start="9:5" pos:end="14:5">else
    <block pos:start="10:5" pos:end="14:5">{<block_content pos:start="11:9" pos:end="13:21">
        <decl_stmt pos:start="11:9" pos:end="11:14"><decl pos:start="11:9" pos:end="11:13"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">n</name></decl>;</decl_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:18"><expr pos:start="12:9" pos:end="12:17"><name pos:start="12:9" pos:end="12:9">n</name><operator pos:start="12:10" pos:end="12:10">=</operator><operator pos:start="12:11" pos:end="12:11">(</operator><name pos:start="12:12" pos:end="12:12">x</name><operator pos:start="12:13" pos:end="12:13">-</operator><literal type="number" pos:start="12:14" pos:end="12:14">1</literal><operator pos:start="12:15" pos:end="12:15">)</operator><operator pos:start="12:16" pos:end="12:16">/</operator><literal type="number" pos:start="12:17" pos:end="12:17">2</literal></expr>;</expr_stmt>
        <return pos:start="13:9" pos:end="13:21">return <expr pos:start="13:16" pos:end="13:20"><literal type="number" pos:start="13:16" pos:end="13:16">6</literal><operator pos:start="13:17" pos:end="13:17">*</operator><name pos:start="13:18" pos:end="13:18">n</name><operator pos:start="13:19" pos:end="13:19">+</operator><literal type="number" pos:start="13:20" pos:end="13:20">6</literal></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="16:1" pos:end="35:1"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:8">main</name><parameter_list pos:start="16:9" pos:end="16:10">()</parameter_list>
<block pos:start="17:1" pos:end="35:1">{<block_content pos:start="18:5" pos:end="34:13">
    <decl_stmt pos:start="18:5" pos:end="18:24"><decl pos:start="18:5" pos:end="18:9"><type pos:start="18:5" pos:end="18:7"><name pos:start="18:5" pos:end="18:7">int</name></type> <name pos:start="18:9" pos:end="18:9">n</name></decl>,<decl pos:start="18:11" pos:end="18:17"><type ref="prev" pos:start="18:5" pos:end="18:7"/><name pos:start="18:11" pos:end="18:17"><name pos:start="18:11" pos:end="18:11">a</name><index pos:start="18:12" pos:end="18:17">[<expr pos:start="18:13" pos:end="18:16"><literal type="number" pos:start="18:13" pos:end="18:16">1001</literal></expr>]</index></name></decl>,<decl pos:start="18:19" pos:end="18:23"><type ref="prev" pos:start="18:5" pos:end="18:7"/><name pos:start="18:19" pos:end="18:21">ans</name><init pos:start="18:22" pos:end="18:23">=<expr pos:start="18:23" pos:end="18:23"><literal type="number" pos:start="18:23" pos:end="18:23">1</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:11"><expr pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:5">a</name><index pos:start="19:6" pos:end="19:8">[<expr pos:start="19:7" pos:end="19:7"><literal type="number" pos:start="19:7" pos:end="19:7">1</literal></expr>]</index></name><operator pos:start="19:9" pos:end="19:9">=</operator><name pos:start="19:10" pos:end="19:10">n</name></expr>;</expr_stmt>
    <for pos:start="20:5" pos:end="28:5">for<control pos:start="20:8" pos:end="20:25">(<init pos:start="20:9" pos:end="20:16"><decl pos:start="20:9" pos:end="20:15"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:13">i</name><init pos:start="20:14" pos:end="20:15">=<expr pos:start="20:15" pos:end="20:15"><literal type="number" pos:start="20:15" pos:end="20:15">2</literal></expr></init></decl>;</init><condition pos:start="20:17" pos:end="20:21"><expr pos:start="20:17" pos:end="20:20"><name pos:start="20:17" pos:end="20:17">i</name><operator pos:start="20:18" pos:end="20:19">&gt;=</operator><literal type="number" pos:start="20:20" pos:end="20:20">0</literal></expr>;</condition><incr pos:start="20:22" pos:end="20:24"><expr pos:start="20:22" pos:end="20:24"><name pos:start="20:22" pos:end="20:22">i</name><operator pos:start="20:23" pos:end="20:24">++</operator></expr></incr>)</control>
    <block pos:start="21:5" pos:end="28:5">{<block_content pos:start="22:9" pos:end="27:9">
        <expr_stmt pos:start="22:9" pos:end="22:14"><expr pos:start="22:9" pos:end="22:13"><name pos:start="22:9" pos:end="22:11">ans</name><operator pos:start="22:12" pos:end="22:13">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:24"><expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:12"><name pos:start="23:9" pos:end="23:9">a</name><index pos:start="23:10" pos:end="23:12">[<expr pos:start="23:11" pos:end="23:11"><name pos:start="23:11" pos:end="23:11">i</name></expr>]</index></name><operator pos:start="23:13" pos:end="23:13">=</operator><call pos:start="23:14" pos:end="23:23"><name pos:start="23:14" pos:end="23:15">jo</name><argument_list pos:start="23:16" pos:end="23:23">(<argument pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:17">a</name><index pos:start="23:18" pos:end="23:22">[<expr pos:start="23:19" pos:end="23:21"><name pos:start="23:19" pos:end="23:19">i</name><operator pos:start="23:20" pos:end="23:20">-</operator><literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="24:9" pos:end="27:9"><if pos:start="24:9" pos:end="27:9">if<condition pos:start="24:11" pos:end="24:19">(<expr pos:start="24:12" pos:end="24:18"><name pos:start="24:12" pos:end="24:15"><name pos:start="24:12" pos:end="24:12">a</name><index pos:start="24:13" pos:end="24:15">[<expr pos:start="24:14" pos:end="24:14"><name pos:start="24:14" pos:end="24:14">i</name></expr>]</index></name><operator pos:start="24:16" pos:end="24:17">==</operator><name pos:start="24:18" pos:end="24:18">n</name></expr>)</condition>
        <block pos:start="25:9" pos:end="27:9">{<block_content pos:start="26:13" pos:end="26:18">
            <break pos:start="26:13" pos:end="26:18">break;</break>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="29:5" pos:end="32:5">for<control pos:start="29:8" pos:end="29:26">(<init pos:start="29:9" pos:end="29:16"><decl pos:start="29:9" pos:end="29:15"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:13">i</name><init pos:start="29:14" pos:end="29:15">=<expr pos:start="29:15" pos:end="29:15"><literal type="number" pos:start="29:15" pos:end="29:15">1</literal></expr></init></decl>;</init><condition pos:start="29:17" pos:end="29:22"><expr pos:start="29:17" pos:end="29:21"><name pos:start="29:17" pos:end="29:17">i</name><operator pos:start="29:18" pos:end="29:18">&lt;</operator><name pos:start="29:19" pos:end="29:21">ans</name></expr>;</condition><incr pos:start="29:23" pos:end="29:25"><expr pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:23">i</name><operator pos:start="29:24" pos:end="29:25">++</operator></expr></incr>)</control>
    <block pos:start="30:5" pos:end="32:5">{<block_content pos:start="31:9" pos:end="31:25">
        <expr_stmt pos:start="31:9" pos:end="31:25"><expr pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:12">cout</name><operator pos:start="31:13" pos:end="31:14">&lt;&lt;</operator><name pos:start="31:15" pos:end="31:18"><name pos:start="31:15" pos:end="31:15">a</name><index pos:start="31:16" pos:end="31:18">[<expr pos:start="31:17" pos:end="31:17"><name pos:start="31:17" pos:end="31:17">i</name></expr>]</index></name><operator pos:start="31:19" pos:end="31:20">&lt;&lt;</operator><literal type="string" pos:start="31:21" pos:end="31:24">", "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:8">cout</name><operator pos:start="33:9" pos:end="33:10">&lt;&lt;</operator><name pos:start="33:11" pos:end="33:16"><name pos:start="33:11" pos:end="33:11">a</name><index pos:start="33:12" pos:end="33:16">[<expr pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">ans</name></expr>]</index></name><operator pos:start="33:17" pos:end="33:18">&lt;&lt;</operator><name pos:start="33:19" pos:end="33:22">endl</name></expr>;</expr_stmt>
    <return pos:start="34:5" pos:end="34:13">return <expr pos:start="34:12" pos:end="34:12"><literal type="number" pos:start="34:12" pos:end="34:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
