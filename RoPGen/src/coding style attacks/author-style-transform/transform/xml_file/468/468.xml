<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/468/468.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="21:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list> <block pos:start="3:12" pos:end="21:1">{<block_content pos:start="4:5" pos:end="20:13">
    <decl_stmt pos:start="4:5" pos:end="4:25"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">x</name></decl>, <decl pos:start="4:12" pos:end="4:12"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:12" pos:end="4:12">y</name></decl>, <decl pos:start="4:15" pos:end="4:15"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:15" pos:end="4:15">z</name></decl>, <decl pos:start="4:18" pos:end="4:24"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:18" pos:end="4:20">cnt</name> <init pos:start="4:22" pos:end="4:24">= <expr pos:start="4:24" pos:end="4:24"><literal type="number" pos:start="4:24" pos:end="4:24">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:10">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:23"><expr pos:start="6:5" pos:end="6:22"><name pos:start="6:5" pos:end="6:7">cin</name> <operator pos:start="6:9" pos:end="6:10">&gt;&gt;</operator> <name pos:start="6:12" pos:end="6:12">x</name> <operator pos:start="6:14" pos:end="6:15">&gt;&gt;</operator> <name pos:start="6:17" pos:end="6:17">y</name> <operator pos:start="6:19" pos:end="6:20">&gt;&gt;</operator> <name pos:start="6:22" pos:end="6:22">z</name></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name> <init pos:start="7:11" pos:end="7:13">= <expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="8:5" pos:end="19:5">while <condition pos:start="8:11" pos:end="8:15">(<expr pos:start="8:12" pos:end="8:14"><name pos:start="8:12" pos:end="8:12">x</name><operator pos:start="8:13" pos:end="8:14">--</operator></expr>)</condition> <block pos:start="8:17" pos:end="19:5">{<block_content pos:start="9:9" pos:end="18:18">
        <expr_stmt pos:start="9:9" pos:end="9:17"><expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">cin</name> <operator pos:start="9:13" pos:end="9:14">&gt;&gt;</operator> <name pos:start="9:16" pos:end="9:16">s</name></expr>;</expr_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:14"><expr pos:start="10:9" pos:end="10:13"><name pos:start="10:9" pos:end="10:11">cnt</name><operator pos:start="10:12" pos:end="10:13">++</operator></expr>;</expr_stmt>
        <if_stmt pos:start="11:9" pos:end="17:9"><if pos:start="11:9" pos:end="17:9">if <condition pos:start="11:12" pos:end="11:25">(<expr pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:15">cnt</name> <operator pos:start="11:17" pos:end="11:17">%</operator> <name pos:start="11:19" pos:end="11:19">y</name> <operator pos:start="11:21" pos:end="11:22">==</operator> <literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr>)</condition><block pos:start="11:26" pos:end="17:9">{<block_content pos:start="12:13" pos:end="16:13">
            <if_stmt pos:start="12:13" pos:end="16:13"><if pos:start="12:13" pos:end="14:13">if<condition pos:start="12:15" pos:end="12:36">(<expr pos:start="12:16" pos:end="12:35"><name pos:start="12:16" pos:end="12:16">s</name> <operator pos:start="12:18" pos:end="12:19">&gt;=</operator> <literal type="char" pos:start="12:21" pos:end="12:23">'a'</literal> <operator pos:start="12:25" pos:end="12:26">&amp;&amp;</operator> <name pos:start="12:28" pos:end="12:28">s</name> <operator pos:start="12:30" pos:end="12:31">&lt;=</operator> <literal type="char" pos:start="12:33" pos:end="12:35">'z'</literal></expr>)</condition> <block pos:start="12:38" pos:end="14:13">{<block_content pos:start="13:17" pos:end="13:45">
                <expr_stmt pos:start="13:17" pos:end="13:45"><expr pos:start="13:17" pos:end="13:44"><name pos:start="13:17" pos:end="13:17">s</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <operator pos:start="13:21" pos:end="13:21">(</operator><name pos:start="13:22" pos:end="13:22">s</name> <operator pos:start="13:24" pos:end="13:24">-</operator> <literal type="char" pos:start="13:26" pos:end="13:28">'a'</literal> <operator pos:start="13:30" pos:end="13:30">+</operator> <name pos:start="13:32" pos:end="13:32">z</name><operator pos:start="13:33" pos:end="13:33">)</operator> <operator pos:start="13:35" pos:end="13:35">%</operator> <literal type="number" pos:start="13:37" pos:end="13:40">26</literal> <operator pos:start="13:40" pos:end="13:40">+</operator> <literal type="char" pos:start="13:42" pos:end="13:44">'a'</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="14:15" pos:end="16:13">else if <condition pos:start="14:23" pos:end="14:44">(<expr pos:start="14:24" pos:end="14:43"><name pos:start="14:24" pos:end="14:24">s</name> <operator pos:start="14:26" pos:end="14:27">&gt;=</operator> <literal type="char" pos:start="14:29" pos:end="14:31">'0'</literal> <operator pos:start="14:33" pos:end="14:34">&amp;&amp;</operator> <name pos:start="14:36" pos:end="14:36">s</name> <operator pos:start="14:38" pos:end="14:39">&lt;=</operator> <literal type="char" pos:start="14:41" pos:end="14:43">'9'</literal></expr>)</condition> <block pos:start="14:46" pos:end="16:13">{<block_content pos:start="15:17" pos:end="15:44">
                <expr_stmt pos:start="15:17" pos:end="15:44"><expr pos:start="15:17" pos:end="15:43"><name pos:start="15:17" pos:end="15:17">s</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <operator pos:start="15:21" pos:end="15:21">(</operator><name pos:start="15:22" pos:end="15:22">s</name> <operator pos:start="15:24" pos:end="15:24">-</operator> <literal type="char" pos:start="15:26" pos:end="15:28">'0'</literal> <operator pos:start="15:30" pos:end="15:30">+</operator><name pos:start="15:31" pos:end="15:31">z</name><operator pos:start="15:32" pos:end="15:32">)</operator> <operator pos:start="15:34" pos:end="15:34">%</operator> <literal type="number" pos:start="15:36" pos:end="15:39">10</literal> <operator pos:start="15:39" pos:end="15:39">+</operator> <literal type="char" pos:start="15:41" pos:end="15:43">'0'</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="18:9" pos:end="18:18"><expr pos:start="18:9" pos:end="18:17"><name pos:start="18:9" pos:end="18:12">cout</name> <operator pos:start="18:14" pos:end="18:15">&lt;&lt;</operator> <name pos:start="18:17" pos:end="18:17">s</name></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="20:5" pos:end="20:13">return <expr pos:start="20:12" pos:end="20:12"><literal type="number" pos:start="20:12" pos:end="20:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
