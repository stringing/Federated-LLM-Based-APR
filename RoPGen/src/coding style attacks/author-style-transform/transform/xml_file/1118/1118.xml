<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1118/1118.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:23"><decl pos:start="3:1" pos:end="3:22"><type pos:start="3:1" pos:end="3:9"><specifier pos:start="3:1" pos:end="3:5">const</specifier> <name pos:start="3:7" pos:end="3:9">int</name></type> <name pos:start="3:11" pos:end="3:15">MAX_N</name> <init pos:start="3:17" pos:end="3:22">= <expr pos:start="3:19" pos:end="3:22"><literal type="number" pos:start="3:19" pos:end="3:22">1005</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:22"><decl pos:start="4:1" pos:end="4:21"><type pos:start="4:1" pos:end="4:12"><name pos:start="4:1" pos:end="4:12"><name pos:start="4:1" pos:end="4:6">vector</name> <argument_list type="generic" pos:start="4:8" pos:end="4:12">&lt;<argument pos:start="4:9" pos:end="4:11"><expr pos:start="4:9" pos:end="4:11"><name pos:start="4:9" pos:end="4:11">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="4:14" pos:end="4:21"><name pos:start="4:14" pos:end="4:14">G</name><index pos:start="4:15" pos:end="4:21">[<expr pos:start="4:16" pos:end="4:20"><name pos:start="4:16" pos:end="4:20">MAX_N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:14"><decl pos:start="5:1" pos:end="5:13"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:6">fa</name><index pos:start="5:7" pos:end="5:13">[<expr pos:start="5:8" pos:end="5:12"><name pos:start="5:8" pos:end="5:12">MAX_N</name></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="39:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list> <block pos:start="6:12" pos:end="39:1">{<block_content pos:start="7:5" pos:end="38:13">
    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><call pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:31">(<argument pos:start="7:13" pos:end="7:18"><expr pos:start="7:13" pos:end="7:18"><literal type="string" pos:start="7:13" pos:end="7:18">"p.in"</literal></expr></argument>, <argument pos:start="7:21" pos:end="7:23"><expr pos:start="7:21" pos:end="7:23"><literal type="string" pos:start="7:21" pos:end="7:23">"r"</literal></expr></argument>, <argument pos:start="7:26" pos:end="7:30"><expr pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:34"><expr pos:start="8:5" pos:end="8:33"><call pos:start="8:5" pos:end="8:33"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:33">(<argument pos:start="8:13" pos:end="8:19"><expr pos:start="8:13" pos:end="8:19"><literal type="string" pos:start="8:13" pos:end="8:19">"p.out"</literal></expr></argument>, <argument pos:start="8:22" pos:end="8:24"><expr pos:start="8:22" pos:end="8:24"><literal type="string" pos:start="8:22" pos:end="8:24">"w"</literal></expr></argument>, <argument pos:start="8:27" pos:end="8:32"><expr pos:start="8:27" pos:end="8:32"><name pos:start="8:27" pos:end="8:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">t</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:13"><expr pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:7">cin</name> <operator pos:start="10:9" pos:end="10:10">&gt;&gt;</operator> <name pos:start="10:12" pos:end="10:12">t</name></expr>;</expr_stmt>
    <while pos:start="11:5" pos:end="19:5">while <condition pos:start="11:11" pos:end="11:15">(<expr pos:start="11:12" pos:end="11:14"><name pos:start="11:12" pos:end="11:12">t</name><operator pos:start="11:13" pos:end="11:14">--</operator></expr>)</condition> <block pos:start="11:17" pos:end="19:5">{<block_content pos:start="12:9" pos:end="18:9">
        <expr_stmt pos:start="12:9" pos:end="12:17"><expr pos:start="12:9" pos:end="12:16"><name pos:start="12:9" pos:end="12:11">cin</name> <operator pos:start="12:13" pos:end="12:14">&gt;&gt;</operator> <name pos:start="12:16" pos:end="12:16">n</name></expr>;</expr_stmt>
        <for pos:start="13:9" pos:end="18:9">for <control pos:start="13:13" pos:end="13:39">(<init pos:start="13:14" pos:end="13:23"><decl pos:start="13:14" pos:end="13:22"><type pos:start="13:14" pos:end="13:16"><name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">i</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</init> <condition pos:start="13:25" pos:end="13:34"><expr pos:start="13:25" pos:end="13:33"><name pos:start="13:25" pos:end="13:25">i</name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <name pos:start="13:29" pos:end="13:29">n</name> <operator pos:start="13:31" pos:end="13:31">-</operator> <literal type="number" pos:start="13:33" pos:end="13:33">1</literal></expr>;</condition> <incr pos:start="13:36" pos:end="13:38"><expr pos:start="13:36" pos:end="13:38"><name pos:start="13:36" pos:end="13:36">i</name><operator pos:start="13:37" pos:end="13:38">++</operator></expr></incr>)</control> <block pos:start="13:41" pos:end="18:9">{<block_content pos:start="14:13" pos:end="17:22">
            <decl_stmt pos:start="14:13" pos:end="14:21"><decl pos:start="14:13" pos:end="14:17"><type pos:start="14:13" pos:end="14:15"><name pos:start="14:13" pos:end="14:15">int</name></type> <name pos:start="14:17" pos:end="14:17">x</name></decl>, <decl pos:start="14:20" pos:end="14:20"><type ref="prev" pos:start="14:13" pos:end="14:15"/><name pos:start="14:20" pos:end="14:20">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:26"><expr pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:15">cin</name> <operator pos:start="15:17" pos:end="15:18">&gt;&gt;</operator> <name pos:start="15:20" pos:end="15:20">x</name> <operator pos:start="15:22" pos:end="15:23">&gt;&gt;</operator> <name pos:start="15:25" pos:end="15:25">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:30"><expr pos:start="16:13" pos:end="16:29"><name pos:start="16:13" pos:end="16:16"><name pos:start="16:13" pos:end="16:13">G</name><index pos:start="16:14" pos:end="16:16">[<expr pos:start="16:15" pos:end="16:15"><name pos:start="16:15" pos:end="16:15">x</name></expr>]</index></name><operator pos:start="16:17" pos:end="16:17">.</operator><call pos:start="16:18" pos:end="16:29"><name pos:start="16:18" pos:end="16:26">push_back</name><argument_list pos:start="16:27" pos:end="16:29">(<argument pos:start="16:28" pos:end="16:28"><expr pos:start="16:28" pos:end="16:28"><name pos:start="16:28" pos:end="16:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:22"><expr pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:14">fa</name><index pos:start="17:15" pos:end="17:17">[<expr pos:start="17:16" pos:end="17:16"><name pos:start="17:16" pos:end="17:16">y</name></expr>]</index></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:21">x</name></expr>;</expr_stmt> 
        </block_content>}</block></for>
    </block_content>}</block></while>
    <decl_stmt pos:start="20:5" pos:end="20:16"><decl pos:start="20:5" pos:end="20:15"><type pos:start="20:5" pos:end="20:7"><name pos:start="20:5" pos:end="20:7">int</name></type> <name pos:start="20:9" pos:end="20:11">ans</name> <init pos:start="20:13" pos:end="20:15">= <expr pos:start="20:15" pos:end="20:15"><literal type="number" pos:start="20:15" pos:end="20:15">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="21:5" pos:end="32:5">for <control pos:start="21:9" pos:end="21:32">(<init pos:start="21:10" pos:end="21:19"><decl pos:start="21:10" pos:end="21:18"><type pos:start="21:10" pos:end="21:12"><name pos:start="21:10" pos:end="21:12">int</name></type> <name pos:start="21:14" pos:end="21:14">i</name> <init pos:start="21:16" pos:end="21:18">= <expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">1</literal></expr></init></decl>;</init> <condition pos:start="21:21" pos:end="21:27"><expr pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:21">i</name> <operator pos:start="21:23" pos:end="21:24">&lt;=</operator> <name pos:start="21:26" pos:end="21:26">n</name></expr>;</condition> <incr pos:start="21:29" pos:end="21:31"><expr pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:29">i</name><operator pos:start="21:30" pos:end="21:31">++</operator></expr></incr>)</control> <block pos:start="21:34" pos:end="32:5">{<block_content pos:start="22:9" pos:end="31:9">
        <decl_stmt pos:start="22:9" pos:end="22:22"><decl pos:start="22:9" pos:end="22:21"><type pos:start="22:9" pos:end="22:12"><name pos:start="22:9" pos:end="22:12">bool</name></type> <name pos:start="22:14" pos:end="22:14">f</name> <init pos:start="22:16" pos:end="22:21">= <expr pos:start="22:18" pos:end="22:21"><literal type="boolean" pos:start="22:18" pos:end="22:21">true</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="23:9" pos:end="28:9">for <control pos:start="23:13" pos:end="23:45">(<init pos:start="23:14" pos:end="23:23"><decl pos:start="23:14" pos:end="23:22"><type pos:start="23:14" pos:end="23:16"><name pos:start="23:14" pos:end="23:16">int</name></type> <name pos:start="23:18" pos:end="23:18">j</name> <init pos:start="23:20" pos:end="23:22">= <expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr></init></decl>;</init> <condition pos:start="23:25" pos:end="23:40"><expr pos:start="23:25" pos:end="23:39"><name pos:start="23:25" pos:end="23:25">j</name> <operator pos:start="23:27" pos:end="23:27">&lt;</operator> <name pos:start="23:29" pos:end="23:32"><name pos:start="23:29" pos:end="23:29">G</name><index pos:start="23:30" pos:end="23:32">[<expr pos:start="23:31" pos:end="23:31"><name pos:start="23:31" pos:end="23:31">i</name></expr>]</index></name><operator pos:start="23:33" pos:end="23:33">.</operator><call pos:start="23:34" pos:end="23:39"><name pos:start="23:34" pos:end="23:37">size</name><argument_list pos:start="23:38" pos:end="23:39">()</argument_list></call></expr>;</condition> <incr pos:start="23:42" pos:end="23:44"><expr pos:start="23:42" pos:end="23:44"><name pos:start="23:42" pos:end="23:42">j</name><operator pos:start="23:43" pos:end="23:44">++</operator></expr></incr>)</control> <block pos:start="23:47" pos:end="28:9">{<block_content pos:start="24:13" pos:end="27:13">
            <if_stmt pos:start="24:13" pos:end="27:13"><if pos:start="24:13" pos:end="27:13">if <condition pos:start="24:16" pos:end="24:48">(<expr pos:start="24:17" pos:end="24:47"><name pos:start="24:17" pos:end="24:20"><name pos:start="24:17" pos:end="24:17">G</name><index pos:start="24:18" pos:end="24:20">[<expr pos:start="24:19" pos:end="24:19"><name pos:start="24:19" pos:end="24:19">i</name></expr>]</index></name><operator pos:start="24:21" pos:end="24:21">.</operator><call pos:start="24:22" pos:end="24:27"><name pos:start="24:22" pos:end="24:25">size</name><argument_list pos:start="24:26" pos:end="24:27">()</argument_list></call> <operator pos:start="24:29" pos:end="24:29">&lt;</operator> <name pos:start="24:31" pos:end="24:40"><name pos:start="24:31" pos:end="24:31">G</name><index pos:start="24:32" pos:end="24:40">[<expr pos:start="24:33" pos:end="24:39"><name pos:start="24:33" pos:end="24:39"><name pos:start="24:33" pos:end="24:33">G</name><index pos:start="24:34" pos:end="24:36">[<expr pos:start="24:35" pos:end="24:35"><name pos:start="24:35" pos:end="24:35">i</name></expr>]</index><index pos:start="24:37" pos:end="24:39">[<expr pos:start="24:38" pos:end="24:38"><name pos:start="24:38" pos:end="24:38">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="24:41" pos:end="24:41">.</operator><call pos:start="24:42" pos:end="24:47"><name pos:start="24:42" pos:end="24:45">size</name><argument_list pos:start="24:46" pos:end="24:47">()</argument_list></call></expr>)</condition> <block pos:start="24:50" pos:end="27:13">{<block_content pos:start="25:17" pos:end="26:22">
                <expr_stmt pos:start="25:17" pos:end="25:26"><expr pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:17">f</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="boolean" pos:start="25:21" pos:end="25:25">false</literal></expr>;</expr_stmt>
                <break pos:start="26:17" pos:end="26:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <if_stmt pos:start="29:9" pos:end="31:9"><if pos:start="29:9" pos:end="31:9">if <condition pos:start="29:12" pos:end="29:48">(<expr pos:start="29:13" pos:end="29:47"><name pos:start="29:13" pos:end="29:13">f</name> <operator pos:start="29:15" pos:end="29:16">&amp;&amp;</operator> <name pos:start="29:18" pos:end="29:21"><name pos:start="29:18" pos:end="29:18">G</name><index pos:start="29:19" pos:end="29:21">[<expr pos:start="29:20" pos:end="29:20"><name pos:start="29:20" pos:end="29:20">i</name></expr>]</index></name><operator pos:start="29:22" pos:end="29:22">.</operator><call pos:start="29:23" pos:end="29:28"><name pos:start="29:23" pos:end="29:26">size</name><argument_list pos:start="29:27" pos:end="29:28">()</argument_list></call> <operator pos:start="29:30" pos:end="29:31">&gt;=</operator> <name pos:start="29:33" pos:end="29:40"><name pos:start="29:33" pos:end="29:33">G</name><index pos:start="29:34" pos:end="29:40">[<expr pos:start="29:35" pos:end="29:39"><name pos:start="29:35" pos:end="29:39"><name pos:start="29:35" pos:end="29:36">fa</name><index pos:start="29:37" pos:end="29:39">[<expr pos:start="29:38" pos:end="29:38"><name pos:start="29:38" pos:end="29:38">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="29:41" pos:end="29:41">.</operator><call pos:start="29:42" pos:end="29:47"><name pos:start="29:42" pos:end="29:45">size</name><argument_list pos:start="29:46" pos:end="29:47">()</argument_list></call></expr>)</condition><block pos:start="29:49" pos:end="31:9">{<block_content pos:start="30:13" pos:end="30:18">
            <expr_stmt pos:start="30:13" pos:end="30:18"><expr pos:start="30:13" pos:end="30:17"><name pos:start="30:13" pos:end="30:15">ans</name><operator pos:start="30:16" pos:end="30:17">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:8">cout</name> <operator pos:start="33:10" pos:end="33:11">&lt;&lt;</operator> <name pos:start="33:13" pos:end="33:15">ans</name> <operator pos:start="33:17" pos:end="33:18">&lt;&lt;</operator> <name pos:start="33:20" pos:end="33:23">endl</name></expr>;</expr_stmt>
    <for pos:start="34:5" pos:end="36:5">for <control pos:start="34:9" pos:end="34:32">(<init pos:start="34:10" pos:end="34:19"><decl pos:start="34:10" pos:end="34:18"><type pos:start="34:10" pos:end="34:12"><name pos:start="34:10" pos:end="34:12">int</name></type> <name pos:start="34:14" pos:end="34:14">i</name> <init pos:start="34:16" pos:end="34:18">= <expr pos:start="34:18" pos:end="34:18"><literal type="number" pos:start="34:18" pos:end="34:18">1</literal></expr></init></decl>;</init> <condition pos:start="34:21" pos:end="34:27"><expr pos:start="34:21" pos:end="34:26"><name pos:start="34:21" pos:end="34:21">i</name> <operator pos:start="34:23" pos:end="34:24">&lt;=</operator> <name pos:start="34:26" pos:end="34:26">n</name></expr>;</condition> <incr pos:start="34:29" pos:end="34:31"><expr pos:start="34:29" pos:end="34:31"><name pos:start="34:29" pos:end="34:29">i</name><operator pos:start="34:30" pos:end="34:31">++</operator></expr></incr>)</control> <block pos:start="34:34" pos:end="36:5">{<block_content pos:start="35:10" pos:end="35:22">
         <expr_stmt pos:start="35:10" pos:end="35:22"><expr pos:start="35:10" pos:end="35:21"><name pos:start="35:10" pos:end="35:13"><name pos:start="35:10" pos:end="35:10">G</name><index pos:start="35:11" pos:end="35:13">[<expr pos:start="35:12" pos:end="35:12"><name pos:start="35:12" pos:end="35:12">i</name></expr>]</index></name><operator pos:start="35:14" pos:end="35:14">.</operator><call pos:start="35:15" pos:end="35:21"><name pos:start="35:15" pos:end="35:19">clear</name><argument_list pos:start="35:20" pos:end="35:21">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><call pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:10">memset</name><argument_list pos:start="37:11" pos:end="37:29">(<argument pos:start="37:12" pos:end="37:13"><expr pos:start="37:12" pos:end="37:13"><name pos:start="37:12" pos:end="37:13">fa</name></expr></argument>, <argument pos:start="37:16" pos:end="37:16"><expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr></argument>, <argument pos:start="37:19" pos:end="37:28"><expr pos:start="37:19" pos:end="37:28"><sizeof pos:start="37:19" pos:end="37:28">sizeof<argument_list pos:start="37:25" pos:end="37:28">(<argument pos:start="37:26" pos:end="37:27"><expr pos:start="37:26" pos:end="37:27"><name pos:start="37:26" pos:end="37:27">fa</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="38:5" pos:end="38:13">return <expr pos:start="38:12" pos:end="38:12"><literal type="number" pos:start="38:12" pos:end="38:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
