<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/501/501.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:44"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:7"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:7">m</name></decl>,<decl pos:start="3:9" pos:end="3:11"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:9" pos:end="3:11">cnt</name></decl>,<decl pos:start="3:13" pos:end="3:18"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:13" pos:end="3:18">indexx</name></decl>,<decl pos:start="3:20" pos:end="3:30"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:20" pos:end="3:30"><name pos:start="3:20" pos:end="3:23">oldv</name><index pos:start="3:24" pos:end="3:30">[<expr pos:start="3:25" pos:end="3:29"><literal type="number" pos:start="3:25" pos:end="3:29">10010</literal></expr>]</index></name></decl>,<decl pos:start="3:32" pos:end="3:39"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:32" pos:end="3:39"><name pos:start="3:32" pos:end="3:32">v</name><index pos:start="3:33" pos:end="3:39">[<expr pos:start="3:34" pos:end="3:38"><literal type="number" pos:start="3:34" pos:end="3:38">10010</literal></expr>]</index></name></decl>,<decl pos:start="3:41" pos:end="3:43"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:41" pos:end="3:43">ans</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:20"><decl pos:start="4:1" pos:end="4:19"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">char</name></type> <name pos:start="4:6" pos:end="4:19"><name pos:start="4:6" pos:end="4:9">maze</name><index pos:start="4:10" pos:end="4:14">[<expr pos:start="4:11" pos:end="4:13"><literal type="number" pos:start="4:11" pos:end="4:13">110</literal></expr>]</index><index pos:start="4:15" pos:end="4:19">[<expr pos:start="4:16" pos:end="4:18"><literal type="number" pos:start="4:16" pos:end="4:18">110</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:32"><decl pos:start="5:1" pos:end="5:22"><type pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:6">vector</name><argument_list type="generic" pos:start="5:7" pos:end="5:11">&lt;<argument pos:start="5:8" pos:end="5:10"><expr pos:start="5:8" pos:end="5:10"><name pos:start="5:8" pos:end="5:10">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="5:12" pos:end="5:22"><name pos:start="5:12" pos:end="5:15">oldg</name><index pos:start="5:16" pos:end="5:22">[<expr pos:start="5:17" pos:end="5:21"><literal type="number" pos:start="5:17" pos:end="5:21">10010</literal></expr>]</index></name></decl>,<decl pos:start="5:24" pos:end="5:31"><type ref="prev" pos:start="5:1" pos:end="5:11"/><name pos:start="5:24" pos:end="5:31"><name pos:start="5:24" pos:end="5:24">g</name><index pos:start="5:25" pos:end="5:31">[<expr pos:start="5:26" pos:end="5:30"><literal type="number" pos:start="5:26" pos:end="5:30">10010</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:20"><decl pos:start="6:1" pos:end="6:19"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:19"><name pos:start="6:5" pos:end="6:12">teleport</name><index pos:start="6:13" pos:end="6:19">[<expr pos:start="6:14" pos:end="6:18"><literal type="number" pos:start="6:14" pos:end="6:18">10010</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="9:1"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:6">id</name><parameter_list pos:start="7:7" pos:end="7:19">(<parameter pos:start="7:8" pos:end="7:12"><decl pos:start="7:8" pos:end="7:12"><type pos:start="7:8" pos:end="7:12"><name pos:start="7:8" pos:end="7:10">int</name></type> <name pos:start="7:12" pos:end="7:12">x</name></decl></parameter>,<parameter pos:start="7:14" pos:end="7:18"><decl pos:start="7:14" pos:end="7:18"><type pos:start="7:14" pos:end="7:18"><name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:18">y</name></decl></parameter>)</parameter_list><block pos:start="7:20" pos:end="9:1">{<block_content pos:start="8:5" pos:end="8:27">
    <return pos:start="8:5" pos:end="8:27">return <expr pos:start="8:12" pos:end="8:26"><operator pos:start="8:12" pos:end="8:12">(</operator><name pos:start="8:13" pos:end="8:13">x</name> <operator pos:start="8:15" pos:end="8:15">-</operator> <literal type="number" pos:start="8:17" pos:end="8:17">1</literal><operator pos:start="8:18" pos:end="8:18">)</operator> <operator pos:start="8:20" pos:end="8:20">*</operator> <name pos:start="8:22" pos:end="8:22">m</name> <operator pos:start="8:24" pos:end="8:24">+</operator> <name pos:start="8:26" pos:end="8:26">y</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="10:1" pos:end="12:1"><type pos:start="10:1" pos:end="10:4"><name pos:start="10:1" pos:end="10:4">bool</name></type> <name pos:start="10:6" pos:end="10:7">in</name><parameter_list pos:start="10:8" pos:end="10:20">(<parameter pos:start="10:9" pos:end="10:13"><decl pos:start="10:9" pos:end="10:13"><type pos:start="10:9" pos:end="10:13"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">x</name></decl></parameter>,<parameter pos:start="10:15" pos:end="10:19"><decl pos:start="10:15" pos:end="10:19"><type pos:start="10:15" pos:end="10:19"><name pos:start="10:15" pos:end="10:17">int</name></type> <name pos:start="10:19" pos:end="10:19">y</name></decl></parameter>)</parameter_list><block pos:start="10:21" pos:end="12:1">{<block_content pos:start="11:5" pos:end="11:48">
    <return pos:start="11:5" pos:end="11:48">return <expr pos:start="11:12" pos:end="11:47"><name pos:start="11:12" pos:end="11:12">x</name> <operator pos:start="11:14" pos:end="11:15">&gt;=</operator> <literal type="number" pos:start="11:17" pos:end="11:17">1</literal> <operator pos:start="11:19" pos:end="11:20">&amp;&amp;</operator> <name pos:start="11:22" pos:end="11:22">x</name> <operator pos:start="11:24" pos:end="11:25">&lt;=</operator> <name pos:start="11:27" pos:end="11:27">n</name> <operator pos:start="11:29" pos:end="11:30">&amp;&amp;</operator> <name pos:start="11:32" pos:end="11:32">y</name> <operator pos:start="11:34" pos:end="11:35">&gt;=</operator> <literal type="number" pos:start="11:37" pos:end="11:37">1</literal> <operator pos:start="11:39" pos:end="11:40">&amp;&amp;</operator> <name pos:start="11:42" pos:end="11:42">y</name> <operator pos:start="11:44" pos:end="11:45">&lt;=</operator> <name pos:start="11:47" pos:end="11:47">m</name></expr>;</return>
</block_content>}</block></function>
<decl_stmt pos:start="13:1" pos:end="13:51"><decl pos:start="13:1" pos:end="13:14"><type pos:start="13:1" pos:end="13:3"><name pos:start="13:1" pos:end="13:3">int</name></type> <name pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:7">dfn</name><index pos:start="13:8" pos:end="13:14">[<expr pos:start="13:9" pos:end="13:13"><literal type="number" pos:start="13:9" pos:end="13:13">10010</literal></expr>]</index></name></decl>,<decl pos:start="13:16" pos:end="13:25"><type ref="prev" pos:start="13:1" pos:end="13:3"/><name pos:start="13:16" pos:end="13:25"><name pos:start="13:16" pos:end="13:18">low</name><index pos:start="13:19" pos:end="13:25">[<expr pos:start="13:20" pos:end="13:24"><literal type="number" pos:start="13:20" pos:end="13:24">10010</literal></expr>]</index></name></decl>,<decl pos:start="13:27" pos:end="13:31"><type ref="prev" pos:start="13:1" pos:end="13:3"/><name pos:start="13:27" pos:end="13:31">times</name></decl>,<decl pos:start="13:33" pos:end="13:42"><type ref="prev" pos:start="13:1" pos:end="13:3"/><name pos:start="13:33" pos:end="13:42"><name pos:start="13:33" pos:end="13:35">scc</name><index pos:start="13:36" pos:end="13:42">[<expr pos:start="13:37" pos:end="13:41"><literal type="number" pos:start="13:37" pos:end="13:41">10010</literal></expr>]</index></name></decl>,<decl pos:start="13:44" pos:end="13:50"><type ref="prev" pos:start="13:1" pos:end="13:3"/><name pos:start="13:44" pos:end="13:50">scc_cnt</name></decl>;</decl_stmt>
<decl_stmt pos:start="14:1" pos:end="14:12"><decl pos:start="14:1" pos:end="14:11"><type pos:start="14:1" pos:end="14:10"><name pos:start="14:1" pos:end="14:10"><name pos:start="14:1" pos:end="14:5">stack</name><argument_list type="generic" pos:start="14:6" pos:end="14:10">&lt;<argument pos:start="14:7" pos:end="14:9"><expr pos:start="14:7" pos:end="14:9"><name pos:start="14:7" pos:end="14:9">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="14:11" pos:end="14:11">s</name></decl>;</decl_stmt>
<function pos:start="15:1" pos:end="40:1"><type pos:start="15:1" pos:end="15:4"><name pos:start="15:1" pos:end="15:4">void</name></type> <name pos:start="15:6" pos:end="15:11">tarjan</name><parameter_list pos:start="15:12" pos:end="15:18">(<parameter pos:start="15:13" pos:end="15:17"><decl pos:start="15:13" pos:end="15:17"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:17">u</name></decl></parameter>)</parameter_list><block pos:start="15:19" pos:end="40:1">{<block_content pos:start="16:5" pos:end="39:11">
    <expr_stmt pos:start="16:5" pos:end="16:30"><expr pos:start="16:5" pos:end="16:29"><name pos:start="16:5" pos:end="16:10"><name pos:start="16:5" pos:end="16:7">dfn</name><index pos:start="16:8" pos:end="16:10">[<expr pos:start="16:9" pos:end="16:9"><name pos:start="16:9" pos:end="16:9">u</name></expr>]</index></name> <operator pos:start="16:12" pos:end="16:12">=</operator> <name pos:start="16:14" pos:end="16:19"><name pos:start="16:14" pos:end="16:16">low</name><index pos:start="16:17" pos:end="16:19">[<expr pos:start="16:18" pos:end="16:18"><name pos:start="16:18" pos:end="16:18">u</name></expr>]</index></name> <operator pos:start="16:21" pos:end="16:21">=</operator> <operator pos:start="16:23" pos:end="16:24">++</operator><name pos:start="16:25" pos:end="16:29">times</name></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:14"><expr pos:start="17:5" pos:end="17:13"><call pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:6">.</operator><name pos:start="17:7" pos:end="17:10">push</name></name><argument_list pos:start="17:11" pos:end="17:13">(<argument pos:start="17:12" pos:end="17:12"><expr pos:start="17:12" pos:end="17:12"><name pos:start="17:12" pos:end="17:12">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="18:5" pos:end="26:5">for<control pos:start="18:8" pos:end="18:43">(<init pos:start="18:9" pos:end="18:19"><decl pos:start="18:9" pos:end="18:17"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">i</name> <init pos:start="18:15" pos:end="18:17">= <expr pos:start="18:17" pos:end="18:17"><literal type="number" pos:start="18:17" pos:end="18:17">0</literal></expr></init></decl> ;</init><condition pos:start="18:20" pos:end="18:38"><expr pos:start="18:20" pos:end="18:37"><name pos:start="18:20" pos:end="18:20">i</name> <operator pos:start="18:22" pos:end="18:22">&lt;</operator> <name pos:start="18:24" pos:end="18:30"><name pos:start="18:24" pos:end="18:27">oldg</name><index pos:start="18:28" pos:end="18:30">[<expr pos:start="18:29" pos:end="18:29"><name pos:start="18:29" pos:end="18:29">u</name></expr>]</index></name><operator pos:start="18:31" pos:end="18:31">.</operator><call pos:start="18:32" pos:end="18:37"><name pos:start="18:32" pos:end="18:35">size</name><argument_list pos:start="18:36" pos:end="18:37">()</argument_list></call></expr>;</condition><incr pos:start="18:39" pos:end="18:42"><expr pos:start="18:39" pos:end="18:42"><name pos:start="18:39" pos:end="18:39">i</name> <operator pos:start="18:41" pos:end="18:42">++</operator></expr></incr>)</control><block pos:start="18:44" pos:end="26:5">{<block_content pos:start="19:9" pos:end="25:9">
        <decl_stmt pos:start="19:9" pos:end="19:27"><decl pos:start="19:9" pos:end="19:26"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">v</name> <init pos:start="19:15" pos:end="19:26">= <expr pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:20">oldg</name><index pos:start="19:21" pos:end="19:23">[<expr pos:start="19:22" pos:end="19:22"><name pos:start="19:22" pos:end="19:22">u</name></expr>]</index><index pos:start="19:24" pos:end="19:26">[<expr pos:start="19:25" pos:end="19:25"><name pos:start="19:25" pos:end="19:25">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="20:9" pos:end="25:9"><if pos:start="20:9" pos:end="23:9">if<condition pos:start="20:11" pos:end="20:23">(<expr pos:start="20:12" pos:end="20:22"><name pos:start="20:12" pos:end="20:17"><name pos:start="20:12" pos:end="20:14">dfn</name><index pos:start="20:15" pos:end="20:17">[<expr pos:start="20:16" pos:end="20:16"><name pos:start="20:16" pos:end="20:16">v</name></expr>]</index></name> <operator pos:start="20:19" pos:end="20:20">==</operator> <literal type="number" pos:start="20:22" pos:end="20:22">0</literal></expr>)</condition><block pos:start="20:24" pos:end="23:9">{<block_content pos:start="21:13" pos:end="22:40">
            <expr_stmt pos:start="21:13" pos:end="21:22"><expr pos:start="21:13" pos:end="21:21"><call pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:18">tarjan</name><argument_list pos:start="21:19" pos:end="21:21">(<argument pos:start="21:20" pos:end="21:20"><expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:40"><expr pos:start="22:13" pos:end="22:39"><name pos:start="22:13" pos:end="22:18"><name pos:start="22:13" pos:end="22:15">low</name><index pos:start="22:16" pos:end="22:18">[<expr pos:start="22:17" pos:end="22:17"><name pos:start="22:17" pos:end="22:17">u</name></expr>]</index></name> <operator pos:start="22:20" pos:end="22:20">=</operator> <call pos:start="22:22" pos:end="22:39"><name pos:start="22:22" pos:end="22:24">min</name><argument_list pos:start="22:25" pos:end="22:39">(<argument pos:start="22:26" pos:end="22:31"><expr pos:start="22:26" pos:end="22:31"><name pos:start="22:26" pos:end="22:31"><name pos:start="22:26" pos:end="22:28">low</name><index pos:start="22:29" pos:end="22:31">[<expr pos:start="22:30" pos:end="22:30"><name pos:start="22:30" pos:end="22:30">u</name></expr>]</index></name></expr></argument>,<argument pos:start="22:33" pos:end="22:38"><expr pos:start="22:33" pos:end="22:38"><name pos:start="22:33" pos:end="22:38"><name pos:start="22:33" pos:end="22:35">low</name><index pos:start="22:36" pos:end="22:38">[<expr pos:start="22:37" pos:end="22:37"><name pos:start="22:37" pos:end="22:37">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="23:10" pos:end="25:9">else if<condition pos:start="23:17" pos:end="23:29">(<expr pos:start="23:18" pos:end="23:28"><name pos:start="23:18" pos:end="23:23"><name pos:start="23:18" pos:end="23:20">scc</name><index pos:start="23:21" pos:end="23:23">[<expr pos:start="23:22" pos:end="23:22"><name pos:start="23:22" pos:end="23:22">v</name></expr>]</index></name> <operator pos:start="23:25" pos:end="23:26">==</operator> <literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr>)</condition><block pos:start="23:30" pos:end="25:9">{<block_content pos:start="24:13" pos:end="24:40">
            <expr_stmt pos:start="24:13" pos:end="24:40"><expr pos:start="24:13" pos:end="24:39"><name pos:start="24:13" pos:end="24:18"><name pos:start="24:13" pos:end="24:15">low</name><index pos:start="24:16" pos:end="24:18">[<expr pos:start="24:17" pos:end="24:17"><name pos:start="24:17" pos:end="24:17">u</name></expr>]</index></name> <operator pos:start="24:20" pos:end="24:20">=</operator> <call pos:start="24:22" pos:end="24:39"><name pos:start="24:22" pos:end="24:24">min</name><argument_list pos:start="24:25" pos:end="24:39">(<argument pos:start="24:26" pos:end="24:31"><expr pos:start="24:26" pos:end="24:31"><name pos:start="24:26" pos:end="24:31"><name pos:start="24:26" pos:end="24:28">low</name><index pos:start="24:29" pos:end="24:31">[<expr pos:start="24:30" pos:end="24:30"><name pos:start="24:30" pos:end="24:30">u</name></expr>]</index></name></expr></argument>,<argument pos:start="24:33" pos:end="24:38"><expr pos:start="24:33" pos:end="24:38"><name pos:start="24:33" pos:end="24:38"><name pos:start="24:33" pos:end="24:35">dfn</name><index pos:start="24:36" pos:end="24:38">[<expr pos:start="24:37" pos:end="24:37"><name pos:start="24:37" pos:end="24:37">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="27:5" pos:end="38:5"><if pos:start="27:5" pos:end="38:5">if<condition pos:start="27:7" pos:end="27:24">(<expr pos:start="27:8" pos:end="27:23"><name pos:start="27:8" pos:end="27:13"><name pos:start="27:8" pos:end="27:10">low</name><index pos:start="27:11" pos:end="27:13">[<expr pos:start="27:12" pos:end="27:12"><name pos:start="27:12" pos:end="27:12">u</name></expr>]</index></name> <operator pos:start="27:15" pos:end="27:16">==</operator> <name pos:start="27:18" pos:end="27:23"><name pos:start="27:18" pos:end="27:20">dfn</name><index pos:start="27:21" pos:end="27:23">[<expr pos:start="27:22" pos:end="27:22"><name pos:start="27:22" pos:end="27:22">u</name></expr>]</index></name></expr>)</condition><block pos:start="27:25" pos:end="38:5">{<block_content pos:start="28:9" pos:end="37:9">
        <expr_stmt pos:start="28:9" pos:end="28:18"><expr pos:start="28:9" pos:end="28:17"><name pos:start="28:9" pos:end="28:15">scc_cnt</name><operator pos:start="28:16" pos:end="28:17">++</operator></expr>;</expr_stmt>
        <while pos:start="29:9" pos:end="37:9">while<condition pos:start="29:14" pos:end="29:19">(<expr pos:start="29:15" pos:end="29:18"><literal type="boolean" pos:start="29:15" pos:end="29:18">true</literal></expr>)</condition><block pos:start="29:20" pos:end="37:9">{<block_content pos:start="30:13" pos:end="36:13">
            <decl_stmt pos:start="30:13" pos:end="30:30"><decl pos:start="30:13" pos:end="30:29"><type pos:start="30:13" pos:end="30:15"><name pos:start="30:13" pos:end="30:15">int</name></type> <name pos:start="30:17" pos:end="30:19">tmp</name> <init pos:start="30:21" pos:end="30:29">= <expr pos:start="30:23" pos:end="30:29"><call pos:start="30:23" pos:end="30:29"><name pos:start="30:23" pos:end="30:27"><name pos:start="30:23" pos:end="30:23">s</name><operator pos:start="30:24" pos:end="30:24">.</operator><name pos:start="30:25" pos:end="30:27">top</name></name><argument_list pos:start="30:28" pos:end="30:29">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:19"><call pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:17"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:17">pop</name></name><argument_list pos:start="31:18" pos:end="31:19">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="32:13" pos:end="32:31"><expr pos:start="32:13" pos:end="32:30"><name pos:start="32:13" pos:end="32:20"><name pos:start="32:13" pos:end="32:15">scc</name><index pos:start="32:16" pos:end="32:20">[<expr pos:start="32:17" pos:end="32:19"><name pos:start="32:17" pos:end="32:19">tmp</name></expr>]</index></name> <operator pos:start="32:22" pos:end="32:22">=</operator> <name pos:start="32:24" pos:end="32:30">scc_cnt</name></expr>;</expr_stmt>
            <expr_stmt pos:start="33:13" pos:end="33:36"><expr pos:start="33:13" pos:end="33:35"><name pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:13">v</name><index pos:start="33:14" pos:end="33:22">[<expr pos:start="33:15" pos:end="33:21"><name pos:start="33:15" pos:end="33:21">scc_cnt</name></expr>]</index></name> <operator pos:start="33:24" pos:end="33:25">+=</operator> <name pos:start="33:27" pos:end="33:35"><name pos:start="33:27" pos:end="33:30">oldv</name><index pos:start="33:31" pos:end="33:35">[<expr pos:start="33:32" pos:end="33:34"><name pos:start="33:32" pos:end="33:34">tmp</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="34:13" pos:end="36:13"><if pos:start="34:13" pos:end="36:13">if<condition pos:start="34:15" pos:end="34:24">(<expr pos:start="34:16" pos:end="34:23"><name pos:start="34:16" pos:end="34:18">tmp</name> <operator pos:start="34:20" pos:end="34:21">==</operator> <name pos:start="34:23" pos:end="34:23">u</name></expr>)</condition><block pos:start="34:25" pos:end="36:13">{<block_content pos:start="35:17" pos:end="35:22">
                <break pos:start="35:17" pos:end="35:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
    <return pos:start="39:5" pos:end="39:11">return;</return>
</block_content>}</block></function>
<decl_stmt pos:start="41:1" pos:end="41:14"><decl pos:start="41:1" pos:end="41:13"><type pos:start="41:1" pos:end="41:3"><name pos:start="41:1" pos:end="41:3">int</name></type> <name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:6">dp</name><index pos:start="41:7" pos:end="41:13">[<expr pos:start="41:8" pos:end="41:12"><literal type="number" pos:start="41:8" pos:end="41:12">10010</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="42:1" pos:end="52:1"><type pos:start="42:1" pos:end="42:3"><name pos:start="42:1" pos:end="42:3">int</name></type> <name pos:start="42:5" pos:end="42:7">dfs</name><parameter_list pos:start="42:8" pos:end="42:14">(<parameter pos:start="42:9" pos:end="42:13"><decl pos:start="42:9" pos:end="42:13"><type pos:start="42:9" pos:end="42:11"><name pos:start="42:9" pos:end="42:11">int</name></type> <name pos:start="42:13" pos:end="42:13">u</name></decl></parameter>)</parameter_list><block pos:start="42:15" pos:end="52:1">{<block_content pos:start="43:5" pos:end="51:17">
    <if_stmt pos:start="43:5" pos:end="45:5"><if pos:start="43:5" pos:end="45:5">if<condition pos:start="43:7" pos:end="43:18">(<expr pos:start="43:8" pos:end="43:17"><name pos:start="43:8" pos:end="43:12"><name pos:start="43:8" pos:end="43:9">dp</name><index pos:start="43:10" pos:end="43:12">[<expr pos:start="43:11" pos:end="43:11"><name pos:start="43:11" pos:end="43:11">u</name></expr>]</index></name> <operator pos:start="43:14" pos:end="43:15">!=</operator> <literal type="number" pos:start="43:17" pos:end="43:17">0</literal></expr>)</condition><block pos:start="43:19" pos:end="45:5">{<block_content pos:start="44:9" pos:end="44:21">
        <return pos:start="44:9" pos:end="44:21">return <expr pos:start="44:16" pos:end="44:20"><name pos:start="44:16" pos:end="44:20"><name pos:start="44:16" pos:end="44:17">dp</name><index pos:start="44:18" pos:end="44:20">[<expr pos:start="44:19" pos:end="44:19"><name pos:start="44:19" pos:end="44:19">u</name></expr>]</index></name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="46:5" pos:end="46:17"><expr pos:start="46:5" pos:end="46:16"><name pos:start="46:5" pos:end="46:9"><name pos:start="46:5" pos:end="46:6">dp</name><index pos:start="46:7" pos:end="46:9">[<expr pos:start="46:8" pos:end="46:8"><name pos:start="46:8" pos:end="46:8">u</name></expr>]</index></name> <operator pos:start="46:11" pos:end="46:11">=</operator> <name pos:start="46:13" pos:end="46:16"><name pos:start="46:13" pos:end="46:13">v</name><index pos:start="46:14" pos:end="46:16">[<expr pos:start="46:15" pos:end="46:15"><name pos:start="46:15" pos:end="46:15">u</name></expr>]</index></name></expr>;</expr_stmt>
    <for pos:start="47:5" pos:end="50:5">for<control pos:start="47:8" pos:end="47:40">(<init pos:start="47:9" pos:end="47:19"><decl pos:start="47:9" pos:end="47:17"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:13">i</name> <init pos:start="47:15" pos:end="47:17">= <expr pos:start="47:17" pos:end="47:17"><literal type="number" pos:start="47:17" pos:end="47:17">0</literal></expr></init></decl> ;</init><condition pos:start="47:20" pos:end="47:35"><expr pos:start="47:20" pos:end="47:34"><name pos:start="47:20" pos:end="47:20">i</name> <operator pos:start="47:22" pos:end="47:22">&lt;</operator> <name pos:start="47:24" pos:end="47:27"><name pos:start="47:24" pos:end="47:24">g</name><index pos:start="47:25" pos:end="47:27">[<expr pos:start="47:26" pos:end="47:26"><name pos:start="47:26" pos:end="47:26">u</name></expr>]</index></name><operator pos:start="47:28" pos:end="47:28">.</operator><call pos:start="47:29" pos:end="47:34"><name pos:start="47:29" pos:end="47:32">size</name><argument_list pos:start="47:33" pos:end="47:34">()</argument_list></call></expr>;</condition><incr pos:start="47:36" pos:end="47:39"><expr pos:start="47:36" pos:end="47:39"><name pos:start="47:36" pos:end="47:36">i</name> <operator pos:start="47:38" pos:end="47:39">++</operator></expr></incr>)</control><block pos:start="47:41" pos:end="50:5">{<block_content pos:start="48:9" pos:end="49:41">
        <decl_stmt pos:start="48:9" pos:end="48:25"><decl pos:start="48:9" pos:end="48:24"><type pos:start="48:9" pos:end="48:11"><name pos:start="48:9" pos:end="48:11">int</name></type> <name pos:start="48:13" pos:end="48:14">vv</name> <init pos:start="48:16" pos:end="48:24">= <expr pos:start="48:18" pos:end="48:24"><name pos:start="48:18" pos:end="48:24"><name pos:start="48:18" pos:end="48:18">g</name><index pos:start="48:19" pos:end="48:21">[<expr pos:start="48:20" pos:end="48:20"><name pos:start="48:20" pos:end="48:20">u</name></expr>]</index><index pos:start="48:22" pos:end="48:24">[<expr pos:start="48:23" pos:end="48:23"><name pos:start="48:23" pos:end="48:23">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="49:9" pos:end="49:41"><expr pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:13"><name pos:start="49:9" pos:end="49:10">dp</name><index pos:start="49:11" pos:end="49:13">[<expr pos:start="49:12" pos:end="49:12"><name pos:start="49:12" pos:end="49:12">u</name></expr>]</index></name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:40"><name pos:start="49:17" pos:end="49:19">max</name><argument_list pos:start="49:20" pos:end="49:40">(<argument pos:start="49:21" pos:end="49:25"><expr pos:start="49:21" pos:end="49:25"><name pos:start="49:21" pos:end="49:25"><name pos:start="49:21" pos:end="49:22">dp</name><index pos:start="49:23" pos:end="49:25">[<expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">u</name></expr>]</index></name></expr></argument>,<argument pos:start="49:27" pos:end="49:39"><expr pos:start="49:27" pos:end="49:39"><name pos:start="49:27" pos:end="49:32"><name pos:start="49:27" pos:end="49:28">dp</name><index pos:start="49:29" pos:end="49:32">[<expr pos:start="49:30" pos:end="49:31"><name pos:start="49:30" pos:end="49:31">vv</name></expr>]</index></name> <operator pos:start="49:34" pos:end="49:34">+</operator> <name pos:start="49:36" pos:end="49:39"><name pos:start="49:36" pos:end="49:36">v</name><index pos:start="49:37" pos:end="49:39">[<expr pos:start="49:38" pos:end="49:38"><name pos:start="49:38" pos:end="49:38">u</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="51:5" pos:end="51:17">return <expr pos:start="51:12" pos:end="51:16"><name pos:start="51:12" pos:end="51:16"><name pos:start="51:12" pos:end="51:13">dp</name><index pos:start="51:14" pos:end="51:16">[<expr pos:start="51:15" pos:end="51:15"><name pos:start="51:15" pos:end="51:15">u</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>
<function pos:start="53:1" pos:end="111:1"><type pos:start="53:1" pos:end="53:3"><name pos:start="53:1" pos:end="53:3">int</name></type> <name pos:start="53:5" pos:end="53:8">main</name><parameter_list pos:start="53:9" pos:end="53:10">()</parameter_list><block pos:start="53:11" pos:end="111:1">{<block_content pos:start="54:5" pos:end="110:13">
    <expr_stmt pos:start="54:5" pos:end="54:18"><expr pos:start="54:5" pos:end="54:17"><name pos:start="54:5" pos:end="54:7">cin</name> <operator pos:start="54:9" pos:end="54:10">&gt;&gt;</operator> <name pos:start="54:12" pos:end="54:12">n</name> <operator pos:start="54:14" pos:end="54:15">&gt;&gt;</operator> <name pos:start="54:17" pos:end="54:17">m</name></expr>;</expr_stmt>
    <for pos:start="55:5" pos:end="60:5">for<control pos:start="55:8" pos:end="55:30">(<init pos:start="55:9" pos:end="55:18"><decl pos:start="55:9" pos:end="55:17"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:13">i</name> <init pos:start="55:15" pos:end="55:17">= <expr pos:start="55:17" pos:end="55:17"><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr></init></decl>;</init><condition pos:start="55:19" pos:end="55:25"><expr pos:start="55:19" pos:end="55:24"><name pos:start="55:19" pos:end="55:19">i</name> <operator pos:start="55:21" pos:end="55:22">&lt;=</operator> <name pos:start="55:24" pos:end="55:24">n</name></expr>;</condition><incr pos:start="55:26" pos:end="55:29"><expr pos:start="55:26" pos:end="55:29"><name pos:start="55:26" pos:end="55:26">i</name> <operator pos:start="55:28" pos:end="55:29">++</operator></expr></incr>)</control><block pos:start="55:31" pos:end="60:5">{<block_content pos:start="56:9" pos:end="59:9">
        <for pos:start="56:9" pos:end="59:9">for<control pos:start="56:12" pos:end="56:34">(<init pos:start="56:13" pos:end="56:22"><decl pos:start="56:13" pos:end="56:21"><type pos:start="56:13" pos:end="56:15"><name pos:start="56:13" pos:end="56:15">int</name></type> <name pos:start="56:17" pos:end="56:17">j</name> <init pos:start="56:19" pos:end="56:21">= <expr pos:start="56:21" pos:end="56:21"><literal type="number" pos:start="56:21" pos:end="56:21">1</literal></expr></init></decl>;</init><condition pos:start="56:23" pos:end="56:29"><expr pos:start="56:23" pos:end="56:28"><name pos:start="56:23" pos:end="56:23">j</name> <operator pos:start="56:25" pos:end="56:26">&lt;=</operator> <name pos:start="56:28" pos:end="56:28">m</name></expr>;</condition><incr pos:start="56:30" pos:end="56:33"><expr pos:start="56:30" pos:end="56:33"><name pos:start="56:30" pos:end="56:30">j</name> <operator pos:start="56:32" pos:end="56:33">++</operator></expr></incr>)</control><block pos:start="56:35" pos:end="59:9">{<block_content pos:start="57:13" pos:end="58:40">
            <expr_stmt pos:start="57:13" pos:end="57:30"><expr pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:15">cin</name> <operator pos:start="57:17" pos:end="57:18">&gt;&gt;</operator> <name pos:start="57:20" pos:end="57:29"><name pos:start="57:20" pos:end="57:23">maze</name><index pos:start="57:24" pos:end="57:26">[<expr pos:start="57:25" pos:end="57:25"><name pos:start="57:25" pos:end="57:25">i</name></expr>]</index><index pos:start="57:27" pos:end="57:29">[<expr pos:start="57:28" pos:end="57:28"><name pos:start="57:28" pos:end="57:28">j</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="58:13" pos:end="58:40"><if pos:start="58:13" pos:end="58:40">if<condition pos:start="58:15" pos:end="58:33">(<expr pos:start="58:16" pos:end="58:32"><name pos:start="58:16" pos:end="58:25"><name pos:start="58:16" pos:end="58:19">maze</name><index pos:start="58:20" pos:end="58:22">[<expr pos:start="58:21" pos:end="58:21"><name pos:start="58:21" pos:end="58:21">i</name></expr>]</index><index pos:start="58:23" pos:end="58:25">[<expr pos:start="58:24" pos:end="58:24"><name pos:start="58:24" pos:end="58:24">j</name></expr>]</index></name> <operator pos:start="58:27" pos:end="58:28">==</operator> <literal type="char" pos:start="58:30" pos:end="58:32">'*'</literal></expr>)</condition><block type="pseudo" pos:start="58:34" pos:end="58:40"><block_content pos:start="58:34" pos:end="58:40"><expr_stmt pos:start="58:34" pos:end="58:40"><expr pos:start="58:34" pos:end="58:39"><name pos:start="58:34" pos:end="58:36">cnt</name> <operator pos:start="58:38" pos:end="58:39">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="61:5" pos:end="66:5">for<control pos:start="61:8" pos:end="61:32">(<init pos:start="61:9" pos:end="61:18"><decl pos:start="61:9" pos:end="61:17"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:13">i</name> <init pos:start="61:15" pos:end="61:17">= <expr pos:start="61:17" pos:end="61:17"><literal type="number" pos:start="61:17" pos:end="61:17">1</literal></expr></init></decl>;</init><condition pos:start="61:19" pos:end="61:27"><expr pos:start="61:19" pos:end="61:26"><name pos:start="61:19" pos:end="61:19">i</name> <operator pos:start="61:21" pos:end="61:22">&lt;=</operator> <name pos:start="61:24" pos:end="61:26">cnt</name></expr>;</condition><incr pos:start="61:28" pos:end="61:31"><expr pos:start="61:28" pos:end="61:31"><name pos:start="61:28" pos:end="61:28">i</name> <operator pos:start="61:30" pos:end="61:31">++</operator></expr></incr>)</control><block pos:start="61:33" pos:end="66:5">{<block_content pos:start="62:9" pos:end="65:30">
        <decl_stmt pos:start="62:9" pos:end="62:16"><decl pos:start="62:9" pos:end="62:13"><type pos:start="62:9" pos:end="62:11"><name pos:start="62:9" pos:end="62:11">int</name></type> <name pos:start="62:13" pos:end="62:13">x</name></decl>,<decl pos:start="62:15" pos:end="62:15"><type ref="prev" pos:start="62:9" pos:end="62:11"/><name pos:start="62:15" pos:end="62:15">y</name></decl>;</decl_stmt>
        <expr_stmt pos:start="63:9" pos:end="63:22"><expr pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:11">cin</name> <operator pos:start="63:13" pos:end="63:14">&gt;&gt;</operator> <name pos:start="63:16" pos:end="63:16">x</name> <operator pos:start="63:18" pos:end="63:19">&gt;&gt;</operator> <name pos:start="63:21" pos:end="63:21">y</name></expr>;</expr_stmt>
        <if_stmt pos:start="64:9" pos:end="65:30"><if pos:start="64:9" pos:end="64:67">if<condition pos:start="64:11" pos:end="64:37">(<expr pos:start="64:12" pos:end="64:36"><name pos:start="64:12" pos:end="64:29"><name pos:start="64:12" pos:end="64:15">maze</name><index pos:start="64:16" pos:end="64:22">[<expr pos:start="64:17" pos:end="64:21"><name pos:start="64:17" pos:end="64:17">x</name> <operator pos:start="64:19" pos:end="64:19">+</operator> <literal type="number" pos:start="64:21" pos:end="64:21">1</literal></expr>]</index><index pos:start="64:23" pos:end="64:29">[<expr pos:start="64:24" pos:end="64:28"><name pos:start="64:24" pos:end="64:24">y</name> <operator pos:start="64:26" pos:end="64:26">+</operator> <literal type="number" pos:start="64:28" pos:end="64:28">1</literal></expr>]</index></name> <operator pos:start="64:31" pos:end="64:32">!=</operator> <literal type="char" pos:start="64:34" pos:end="64:36">'#'</literal></expr>)</condition><block type="pseudo" pos:start="64:38" pos:end="64:67"><block_content pos:start="64:38" pos:end="64:67"><expr_stmt pos:start="64:38" pos:end="64:67"><expr pos:start="64:38" pos:end="64:66"><name pos:start="64:38" pos:end="64:48"><name pos:start="64:38" pos:end="64:45">teleport</name><index pos:start="64:46" pos:end="64:48">[<expr pos:start="64:47" pos:end="64:47"><name pos:start="64:47" pos:end="64:47">i</name></expr>]</index></name> <operator pos:start="64:50" pos:end="64:50">=</operator> <call pos:start="64:52" pos:end="64:66"><name pos:start="64:52" pos:end="64:53">id</name><argument_list pos:start="64:54" pos:end="64:66">(<argument pos:start="64:55" pos:end="64:59"><expr pos:start="64:55" pos:end="64:59"><name pos:start="64:55" pos:end="64:55">x</name> <operator pos:start="64:57" pos:end="64:57">+</operator> <literal type="number" pos:start="64:59" pos:end="64:59">1</literal></expr></argument>,<argument pos:start="64:61" pos:end="64:65"><expr pos:start="64:61" pos:end="64:65"><name pos:start="64:61" pos:end="64:61">y</name> <operator pos:start="64:63" pos:end="64:63">+</operator> <literal type="number" pos:start="64:65" pos:end="64:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="65:9" pos:end="65:30">else<block type="pseudo" pos:start="65:14" pos:end="65:30"><block_content pos:start="65:14" pos:end="65:30"> <expr_stmt pos:start="65:14" pos:end="65:30"><expr pos:start="65:14" pos:end="65:29"><name pos:start="65:14" pos:end="65:24"><name pos:start="65:14" pos:end="65:21">teleport</name><index pos:start="65:22" pos:end="65:24">[<expr pos:start="65:23" pos:end="65:23"><name pos:start="65:23" pos:end="65:23">i</name></expr>]</index></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <operator pos:start="65:28" pos:end="65:28">-</operator><literal type="number" pos:start="65:29" pos:end="65:29">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></for>
    <for pos:start="67:5" pos:end="87:5">for<control pos:start="67:8" pos:end="67:30">(<init pos:start="67:9" pos:end="67:18"><decl pos:start="67:9" pos:end="67:17"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:13">i</name> <init pos:start="67:15" pos:end="67:17">= <expr pos:start="67:17" pos:end="67:17"><literal type="number" pos:start="67:17" pos:end="67:17">1</literal></expr></init></decl>;</init><condition pos:start="67:19" pos:end="67:25"><expr pos:start="67:19" pos:end="67:24"><name pos:start="67:19" pos:end="67:19">i</name> <operator pos:start="67:21" pos:end="67:22">&lt;=</operator> <name pos:start="67:24" pos:end="67:24">n</name></expr>;</condition><incr pos:start="67:26" pos:end="67:29"><expr pos:start="67:26" pos:end="67:29"><name pos:start="67:26" pos:end="67:26">i</name> <operator pos:start="67:28" pos:end="67:29">++</operator></expr></incr>)</control><block pos:start="67:31" pos:end="87:5">{<block_content pos:start="68:9" pos:end="86:9">
        <for pos:start="68:9" pos:end="86:9">for<control pos:start="68:12" pos:end="68:34">(<init pos:start="68:13" pos:end="68:22"><decl pos:start="68:13" pos:end="68:21"><type pos:start="68:13" pos:end="68:15"><name pos:start="68:13" pos:end="68:15">int</name></type> <name pos:start="68:17" pos:end="68:17">j</name> <init pos:start="68:19" pos:end="68:21">= <expr pos:start="68:21" pos:end="68:21"><literal type="number" pos:start="68:21" pos:end="68:21">1</literal></expr></init></decl>;</init><condition pos:start="68:23" pos:end="68:29"><expr pos:start="68:23" pos:end="68:28"><name pos:start="68:23" pos:end="68:23">j</name> <operator pos:start="68:25" pos:end="68:26">&lt;=</operator> <name pos:start="68:28" pos:end="68:28">m</name></expr>;</condition><incr pos:start="68:30" pos:end="68:33"><expr pos:start="68:30" pos:end="68:33"><name pos:start="68:30" pos:end="68:30">j</name> <operator pos:start="68:32" pos:end="68:33">++</operator></expr></incr>)</control><block pos:start="68:35" pos:end="86:9">{<block_content pos:start="69:13" pos:end="85:13">
            <if_stmt pos:start="69:13" pos:end="81:13"><if pos:start="69:13" pos:end="81:13">if<condition pos:start="69:15" pos:end="69:33">(<expr pos:start="69:16" pos:end="69:32"><name pos:start="69:16" pos:end="69:25"><name pos:start="69:16" pos:end="69:19">maze</name><index pos:start="69:20" pos:end="69:22">[<expr pos:start="69:21" pos:end="69:21"><name pos:start="69:21" pos:end="69:21">i</name></expr>]</index><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">j</name></expr>]</index></name> <operator pos:start="69:27" pos:end="69:28">!=</operator> <literal type="char" pos:start="69:30" pos:end="69:32">'#'</literal></expr>)</condition><block pos:start="69:34" pos:end="81:13">{<block_content pos:start="70:17" pos:end="80:17">
                <if_stmt pos:start="70:17" pos:end="70:70"><if pos:start="70:17" pos:end="70:70">if<condition pos:start="70:19" pos:end="70:37">(<expr pos:start="70:20" pos:end="70:36"><name pos:start="70:20" pos:end="70:29"><name pos:start="70:20" pos:end="70:23">maze</name><index pos:start="70:24" pos:end="70:26">[<expr pos:start="70:25" pos:end="70:25"><name pos:start="70:25" pos:end="70:25">i</name></expr>]</index><index pos:start="70:27" pos:end="70:29">[<expr pos:start="70:28" pos:end="70:28"><name pos:start="70:28" pos:end="70:28">j</name></expr>]</index></name> <operator pos:start="70:31" pos:end="70:32">!=</operator> <literal type="char" pos:start="70:34" pos:end="70:36">'*'</literal></expr>)</condition><block type="pseudo" pos:start="70:38" pos:end="70:70"><block_content pos:start="70:38" pos:end="70:70"><expr_stmt pos:start="70:38" pos:end="70:70"><expr pos:start="70:38" pos:end="70:69"><name pos:start="70:38" pos:end="70:50"><name pos:start="70:38" pos:end="70:41">oldv</name><index pos:start="70:42" pos:end="70:50">[<expr pos:start="70:43" pos:end="70:49"><call pos:start="70:43" pos:end="70:49"><name pos:start="70:43" pos:end="70:44">id</name><argument_list pos:start="70:45" pos:end="70:49">(<argument pos:start="70:46" pos:end="70:46"><expr pos:start="70:46" pos:end="70:46"><name pos:start="70:46" pos:end="70:46">i</name></expr></argument>,<argument pos:start="70:48" pos:end="70:48"><expr pos:start="70:48" pos:end="70:48"><name pos:start="70:48" pos:end="70:48">j</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="70:52" pos:end="70:52">=</operator> <name pos:start="70:54" pos:end="70:63"><name pos:start="70:54" pos:end="70:57">maze</name><index pos:start="70:58" pos:end="70:60">[<expr pos:start="70:59" pos:end="70:59"><name pos:start="70:59" pos:end="70:59">i</name></expr>]</index><index pos:start="70:61" pos:end="70:63">[<expr pos:start="70:62" pos:end="70:62"><name pos:start="70:62" pos:end="70:62">j</name></expr>]</index></name> <operator pos:start="70:65" pos:end="70:65">-</operator> <literal type="char" pos:start="70:67" pos:end="70:69">'0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <if_stmt pos:start="71:17" pos:end="75:17"><if pos:start="71:17" pos:end="75:17">if<condition pos:start="71:19" pos:end="71:31">(<expr pos:start="71:20" pos:end="71:30"><call pos:start="71:20" pos:end="71:30"><name pos:start="71:20" pos:end="71:21">in</name><argument_list pos:start="71:22" pos:end="71:30">(<argument pos:start="71:23" pos:end="71:27"><expr pos:start="71:23" pos:end="71:27"><name pos:start="71:23" pos:end="71:23">i</name> <operator pos:start="71:25" pos:end="71:25">+</operator> <literal type="number" pos:start="71:27" pos:end="71:27">1</literal></expr></argument>,<argument pos:start="71:29" pos:end="71:29"><expr pos:start="71:29" pos:end="71:29"><name pos:start="71:29" pos:end="71:29">j</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="71:32" pos:end="75:17">{<block_content pos:start="72:21" pos:end="74:21">
                    <if_stmt pos:start="72:21" pos:end="74:21"><if pos:start="72:21" pos:end="74:21">if<condition pos:start="72:23" pos:end="72:45">(<expr pos:start="72:24" pos:end="72:44"><name pos:start="72:24" pos:end="72:37"><name pos:start="72:24" pos:end="72:27">maze</name><index pos:start="72:28" pos:end="72:34">[<expr pos:start="72:29" pos:end="72:33"><name pos:start="72:29" pos:end="72:29">i</name> <operator pos:start="72:31" pos:end="72:31">+</operator> <literal type="number" pos:start="72:33" pos:end="72:33">1</literal></expr>]</index><index pos:start="72:35" pos:end="72:37">[<expr pos:start="72:36" pos:end="72:36"><name pos:start="72:36" pos:end="72:36">j</name></expr>]</index></name> <operator pos:start="72:39" pos:end="72:40">!=</operator> <literal type="char" pos:start="72:42" pos:end="72:44">'#'</literal></expr>)</condition><block pos:start="72:46" pos:end="74:21">{<block_content pos:start="73:25" pos:end="73:61">
                        <expr_stmt pos:start="73:25" pos:end="73:61"><expr pos:start="73:25" pos:end="73:60"><name pos:start="73:25" pos:end="73:37"><name pos:start="73:25" pos:end="73:28">oldg</name><index pos:start="73:29" pos:end="73:37">[<expr pos:start="73:30" pos:end="73:36"><call pos:start="73:30" pos:end="73:36"><name pos:start="73:30" pos:end="73:31">id</name><argument_list pos:start="73:32" pos:end="73:36">(<argument pos:start="73:33" pos:end="73:33"><expr pos:start="73:33" pos:end="73:33"><name pos:start="73:33" pos:end="73:33">i</name></expr></argument>,<argument pos:start="73:35" pos:end="73:35"><expr pos:start="73:35" pos:end="73:35"><name pos:start="73:35" pos:end="73:35">j</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="73:38" pos:end="73:38">.</operator><call pos:start="73:39" pos:end="73:60"><name pos:start="73:39" pos:end="73:47">push_back</name><argument_list pos:start="73:48" pos:end="73:60">(<argument pos:start="73:49" pos:end="73:59"><expr pos:start="73:49" pos:end="73:59"><call pos:start="73:49" pos:end="73:59"><name pos:start="73:49" pos:end="73:50">id</name><argument_list pos:start="73:51" pos:end="73:59">(<argument pos:start="73:52" pos:end="73:56"><expr pos:start="73:52" pos:end="73:56"><name pos:start="73:52" pos:end="73:52">i</name> <operator pos:start="73:54" pos:end="73:54">+</operator> <literal type="number" pos:start="73:56" pos:end="73:56">1</literal></expr></argument>,<argument pos:start="73:58" pos:end="73:58"><expr pos:start="73:58" pos:end="73:58"><name pos:start="73:58" pos:end="73:58">j</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt pos:start="76:17" pos:end="80:17"><if pos:start="76:17" pos:end="80:17">if<condition pos:start="76:19" pos:end="76:31">(<expr pos:start="76:20" pos:end="76:30"><call pos:start="76:20" pos:end="76:30"><name pos:start="76:20" pos:end="76:21">in</name><argument_list pos:start="76:22" pos:end="76:30">(<argument pos:start="76:23" pos:end="76:23"><expr pos:start="76:23" pos:end="76:23"><name pos:start="76:23" pos:end="76:23">i</name></expr></argument>,<argument pos:start="76:25" pos:end="76:29"><expr pos:start="76:25" pos:end="76:29"><name pos:start="76:25" pos:end="76:25">j</name> <operator pos:start="76:27" pos:end="76:27">+</operator> <literal type="number" pos:start="76:29" pos:end="76:29">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="76:32" pos:end="80:17">{<block_content pos:start="77:21" pos:end="79:21">
                    <if_stmt pos:start="77:21" pos:end="79:21"><if pos:start="77:21" pos:end="79:21">if<condition pos:start="77:23" pos:end="77:45">(<expr pos:start="77:24" pos:end="77:44"><name pos:start="77:24" pos:end="77:37"><name pos:start="77:24" pos:end="77:27">maze</name><index pos:start="77:28" pos:end="77:30">[<expr pos:start="77:29" pos:end="77:29"><name pos:start="77:29" pos:end="77:29">i</name></expr>]</index><index pos:start="77:31" pos:end="77:37">[<expr pos:start="77:32" pos:end="77:36"><name pos:start="77:32" pos:end="77:32">j</name> <operator pos:start="77:34" pos:end="77:34">+</operator> <literal type="number" pos:start="77:36" pos:end="77:36">1</literal></expr>]</index></name> <operator pos:start="77:39" pos:end="77:40">!=</operator> <literal type="char" pos:start="77:42" pos:end="77:44">'#'</literal></expr>)</condition><block pos:start="77:46" pos:end="79:21">{<block_content pos:start="78:25" pos:end="78:61">
                        <expr_stmt pos:start="78:25" pos:end="78:61"><expr pos:start="78:25" pos:end="78:60"><name pos:start="78:25" pos:end="78:37"><name pos:start="78:25" pos:end="78:28">oldg</name><index pos:start="78:29" pos:end="78:37">[<expr pos:start="78:30" pos:end="78:36"><call pos:start="78:30" pos:end="78:36"><name pos:start="78:30" pos:end="78:31">id</name><argument_list pos:start="78:32" pos:end="78:36">(<argument pos:start="78:33" pos:end="78:33"><expr pos:start="78:33" pos:end="78:33"><name pos:start="78:33" pos:end="78:33">i</name></expr></argument>,<argument pos:start="78:35" pos:end="78:35"><expr pos:start="78:35" pos:end="78:35"><name pos:start="78:35" pos:end="78:35">j</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="78:38" pos:end="78:38">.</operator><call pos:start="78:39" pos:end="78:60"><name pos:start="78:39" pos:end="78:47">push_back</name><argument_list pos:start="78:48" pos:end="78:60">(<argument pos:start="78:49" pos:end="78:59"><expr pos:start="78:49" pos:end="78:59"><call pos:start="78:49" pos:end="78:59"><name pos:start="78:49" pos:end="78:50">id</name><argument_list pos:start="78:51" pos:end="78:59">(<argument pos:start="78:52" pos:end="78:52"><expr pos:start="78:52" pos:end="78:52"><name pos:start="78:52" pos:end="78:52">i</name></expr></argument>,<argument pos:start="78:54" pos:end="78:58"><expr pos:start="78:54" pos:end="78:58"><name pos:start="78:54" pos:end="78:54">j</name> <operator pos:start="78:56" pos:end="78:56">+</operator> <literal type="number" pos:start="78:58" pos:end="78:58">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>                    
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="82:13" pos:end="85:13"><if pos:start="82:13" pos:end="85:13">if<condition pos:start="82:15" pos:end="82:33">(<expr pos:start="82:16" pos:end="82:32"><name pos:start="82:16" pos:end="82:25"><name pos:start="82:16" pos:end="82:19">maze</name><index pos:start="82:20" pos:end="82:22">[<expr pos:start="82:21" pos:end="82:21"><name pos:start="82:21" pos:end="82:21">i</name></expr>]</index><index pos:start="82:23" pos:end="82:25">[<expr pos:start="82:24" pos:end="82:24"><name pos:start="82:24" pos:end="82:24">j</name></expr>]</index></name> <operator pos:start="82:27" pos:end="82:28">==</operator> <literal type="char" pos:start="82:30" pos:end="82:32">'*'</literal></expr>)</condition><block pos:start="82:34" pos:end="85:13">{<block_content pos:start="83:17" pos:end="84:76">
                <expr_stmt pos:start="83:17" pos:end="83:26"><expr pos:start="83:17" pos:end="83:25"><name pos:start="83:17" pos:end="83:22">indexx</name> <operator pos:start="83:24" pos:end="83:25">++</operator></expr>;</expr_stmt>
        <if_stmt pos:start="84:9" pos:end="84:76"><if pos:start="84:9" pos:end="84:76">if<condition pos:start="84:11" pos:end="84:34">(<expr pos:start="84:12" pos:end="84:33"><name pos:start="84:12" pos:end="84:27"><name pos:start="84:12" pos:end="84:19">teleport</name><index pos:start="84:20" pos:end="84:27">[<expr pos:start="84:21" pos:end="84:26"><name pos:start="84:21" pos:end="84:26">indexx</name></expr>]</index></name> <operator pos:start="84:29" pos:end="84:30">!=</operator> <operator pos:start="84:32" pos:end="84:32">-</operator><literal type="number" pos:start="84:33" pos:end="84:33">1</literal></expr>)</condition><block type="pseudo" pos:start="84:35" pos:end="84:76"><block_content pos:start="84:35" pos:end="84:76"><expr_stmt pos:start="84:35" pos:end="84:76"><expr pos:start="84:35" pos:end="84:75"><name pos:start="84:35" pos:end="84:47"><name pos:start="84:35" pos:end="84:38">oldg</name><index pos:start="84:39" pos:end="84:47">[<expr pos:start="84:40" pos:end="84:46"><call pos:start="84:40" pos:end="84:46"><name pos:start="84:40" pos:end="84:41">id</name><argument_list pos:start="84:42" pos:end="84:46">(<argument pos:start="84:43" pos:end="84:43"><expr pos:start="84:43" pos:end="84:43"><name pos:start="84:43" pos:end="84:43">i</name></expr></argument>,<argument pos:start="84:45" pos:end="84:45"><expr pos:start="84:45" pos:end="84:45"><name pos:start="84:45" pos:end="84:45">j</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="84:48" pos:end="84:48">.</operator><call pos:start="84:49" pos:end="84:75"><name pos:start="84:49" pos:end="84:57">push_back</name><argument_list pos:start="84:58" pos:end="84:75">(<argument pos:start="84:59" pos:end="84:74"><expr pos:start="84:59" pos:end="84:74"><name pos:start="84:59" pos:end="84:74"><name pos:start="84:59" pos:end="84:66">teleport</name><index pos:start="84:67" pos:end="84:74">[<expr pos:start="84:68" pos:end="84:73"><name pos:start="84:68" pos:end="84:73">indexx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="88:5" pos:end="94:5">for<control pos:start="88:8" pos:end="88:30">(<init pos:start="88:9" pos:end="88:18"><decl pos:start="88:9" pos:end="88:17"><type pos:start="88:9" pos:end="88:11"><name pos:start="88:9" pos:end="88:11">int</name></type> <name pos:start="88:13" pos:end="88:13">i</name> <init pos:start="88:15" pos:end="88:17">= <expr pos:start="88:17" pos:end="88:17"><literal type="number" pos:start="88:17" pos:end="88:17">1</literal></expr></init></decl>;</init><condition pos:start="88:19" pos:end="88:25"><expr pos:start="88:19" pos:end="88:24"><name pos:start="88:19" pos:end="88:19">i</name> <operator pos:start="88:21" pos:end="88:22">&lt;=</operator> <name pos:start="88:24" pos:end="88:24">n</name></expr>;</condition><incr pos:start="88:26" pos:end="88:29"><expr pos:start="88:26" pos:end="88:29"><name pos:start="88:26" pos:end="88:26">i</name> <operator pos:start="88:28" pos:end="88:29">++</operator></expr></incr>)</control><block pos:start="88:31" pos:end="94:5">{<block_content pos:start="89:9" pos:end="93:9">
        <for pos:start="89:9" pos:end="93:9">for<control pos:start="89:12" pos:end="89:34">(<init pos:start="89:13" pos:end="89:22"><decl pos:start="89:13" pos:end="89:21"><type pos:start="89:13" pos:end="89:15"><name pos:start="89:13" pos:end="89:15">int</name></type> <name pos:start="89:17" pos:end="89:17">j</name> <init pos:start="89:19" pos:end="89:21">= <expr pos:start="89:21" pos:end="89:21"><literal type="number" pos:start="89:21" pos:end="89:21">1</literal></expr></init></decl>;</init><condition pos:start="89:23" pos:end="89:29"><expr pos:start="89:23" pos:end="89:28"><name pos:start="89:23" pos:end="89:23">j</name> <operator pos:start="89:25" pos:end="89:26">&lt;=</operator> <name pos:start="89:28" pos:end="89:28">m</name></expr>;</condition><incr pos:start="89:30" pos:end="89:33"><expr pos:start="89:30" pos:end="89:33"><name pos:start="89:30" pos:end="89:30">j</name> <operator pos:start="89:32" pos:end="89:33">++</operator></expr></incr>)</control><block pos:start="89:35" pos:end="93:9">{<block_content pos:start="90:13" pos:end="92:13">
            <if_stmt pos:start="90:13" pos:end="92:13"><if pos:start="90:13" pos:end="92:13">if<condition pos:start="90:15" pos:end="90:54">(<expr pos:start="90:16" pos:end="90:53"><name pos:start="90:16" pos:end="90:27"><name pos:start="90:16" pos:end="90:18">dfn</name><index pos:start="90:19" pos:end="90:27">[<expr pos:start="90:20" pos:end="90:26"><call pos:start="90:20" pos:end="90:26"><name pos:start="90:20" pos:end="90:21">id</name><argument_list pos:start="90:22" pos:end="90:26">(<argument pos:start="90:23" pos:end="90:23"><expr pos:start="90:23" pos:end="90:23"><name pos:start="90:23" pos:end="90:23">i</name></expr></argument>,<argument pos:start="90:25" pos:end="90:25"><expr pos:start="90:25" pos:end="90:25"><name pos:start="90:25" pos:end="90:25">j</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="90:29" pos:end="90:30">==</operator> <literal type="number" pos:start="90:32" pos:end="90:32">0</literal> <operator pos:start="90:34" pos:end="90:35">&amp;&amp;</operator> <name pos:start="90:37" pos:end="90:46"><name pos:start="90:37" pos:end="90:40">maze</name><index pos:start="90:41" pos:end="90:43">[<expr pos:start="90:42" pos:end="90:42"><name pos:start="90:42" pos:end="90:42">i</name></expr>]</index><index pos:start="90:44" pos:end="90:46">[<expr pos:start="90:45" pos:end="90:45"><name pos:start="90:45" pos:end="90:45">j</name></expr>]</index></name> <operator pos:start="90:48" pos:end="90:49">!=</operator> <literal type="char" pos:start="90:51" pos:end="90:53">'#'</literal></expr>)</condition><block pos:start="90:55" pos:end="92:13">{<block_content pos:start="91:20" pos:end="91:35">
                   <expr_stmt pos:start="91:20" pos:end="91:35"><expr pos:start="91:20" pos:end="91:34"><call pos:start="91:20" pos:end="91:34"><name pos:start="91:20" pos:end="91:25">tarjan</name><argument_list pos:start="91:26" pos:end="91:34">(<argument pos:start="91:27" pos:end="91:33"><expr pos:start="91:27" pos:end="91:33"><call pos:start="91:27" pos:end="91:33"><name pos:start="91:27" pos:end="91:28">id</name><argument_list pos:start="91:29" pos:end="91:33">(<argument pos:start="91:30" pos:end="91:30"><expr pos:start="91:30" pos:end="91:30"><name pos:start="91:30" pos:end="91:30">i</name></expr></argument>,<argument pos:start="91:32" pos:end="91:32"><expr pos:start="91:32" pos:end="91:32"><name pos:start="91:32" pos:end="91:32">j</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="95:5" pos:end="104:5">for<control pos:start="95:8" pos:end="95:30">(<init pos:start="95:9" pos:end="95:18"><decl pos:start="95:9" pos:end="95:17"><type pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:11">int</name></type> <name pos:start="95:13" pos:end="95:13">i</name> <init pos:start="95:15" pos:end="95:17">= <expr pos:start="95:17" pos:end="95:17"><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr></init></decl>;</init><condition pos:start="95:19" pos:end="95:25"><expr pos:start="95:19" pos:end="95:24"><name pos:start="95:19" pos:end="95:19">i</name> <operator pos:start="95:21" pos:end="95:22">&lt;=</operator> <name pos:start="95:24" pos:end="95:24">n</name></expr>;</condition><incr pos:start="95:26" pos:end="95:29"><expr pos:start="95:26" pos:end="95:29"><name pos:start="95:26" pos:end="95:26">i</name> <operator pos:start="95:28" pos:end="95:29">++</operator></expr></incr>)</control><block pos:start="95:31" pos:end="104:5">{<block_content pos:start="96:13" pos:end="103:9">
            <for pos:start="96:13" pos:end="103:9">for<control pos:start="96:16" pos:end="96:38">(<init pos:start="96:17" pos:end="96:26"><decl pos:start="96:17" pos:end="96:25"><type pos:start="96:17" pos:end="96:19"><name pos:start="96:17" pos:end="96:19">int</name></type> <name pos:start="96:21" pos:end="96:21">y</name> <init pos:start="96:23" pos:end="96:25">= <expr pos:start="96:25" pos:end="96:25"><literal type="number" pos:start="96:25" pos:end="96:25">1</literal></expr></init></decl>;</init><condition pos:start="96:27" pos:end="96:33"><expr pos:start="96:27" pos:end="96:32"><name pos:start="96:27" pos:end="96:27">y</name> <operator pos:start="96:29" pos:end="96:30">&lt;=</operator> <name pos:start="96:32" pos:end="96:32">m</name></expr>;</condition><incr pos:start="96:34" pos:end="96:37"><expr pos:start="96:34" pos:end="96:37"><name pos:start="96:34" pos:end="96:34">y</name> <operator pos:start="96:36" pos:end="96:37">++</operator></expr></incr>)</control><block pos:start="96:39" pos:end="103:9">{<block_content pos:start="97:17" pos:end="102:13">
                <for pos:start="97:17" pos:end="102:13">for<control pos:start="97:20" pos:end="97:60">(<init pos:start="97:21" pos:end="97:30"><decl pos:start="97:21" pos:end="97:29"><type pos:start="97:21" pos:end="97:23"><name pos:start="97:21" pos:end="97:23">int</name></type> <name pos:start="97:25" pos:end="97:25">j</name> <init pos:start="97:27" pos:end="97:29">= <expr pos:start="97:29" pos:end="97:29"><literal type="number" pos:start="97:29" pos:end="97:29">0</literal></expr></init></decl>;</init><condition pos:start="97:31" pos:end="97:55"><expr pos:start="97:31" pos:end="97:54"><name pos:start="97:31" pos:end="97:31">j</name> <operator pos:start="97:33" pos:end="97:33">&lt;</operator> <name pos:start="97:35" pos:end="97:47"><name pos:start="97:35" pos:end="97:38">oldg</name><index pos:start="97:39" pos:end="97:47">[<expr pos:start="97:40" pos:end="97:46"><call pos:start="97:40" pos:end="97:46"><name pos:start="97:40" pos:end="97:41">id</name><argument_list pos:start="97:42" pos:end="97:46">(<argument pos:start="97:43" pos:end="97:43"><expr pos:start="97:43" pos:end="97:43"><name pos:start="97:43" pos:end="97:43">i</name></expr></argument>,<argument pos:start="97:45" pos:end="97:45"><expr pos:start="97:45" pos:end="97:45"><name pos:start="97:45" pos:end="97:45">y</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="97:48" pos:end="97:48">.</operator><call pos:start="97:49" pos:end="97:54"><name pos:start="97:49" pos:end="97:52">size</name><argument_list pos:start="97:53" pos:end="97:54">()</argument_list></call></expr>;</condition><incr pos:start="97:56" pos:end="97:59"><expr pos:start="97:56" pos:end="97:59"><name pos:start="97:56" pos:end="97:56">j</name> <operator pos:start="97:58" pos:end="97:59">++</operator></expr></incr>)</control><block pos:start="97:61" pos:end="102:13">{<block_content pos:start="98:21" pos:end="101:21">
                    <decl_stmt pos:start="98:21" pos:end="98:45"><decl pos:start="98:21" pos:end="98:44"><type pos:start="98:21" pos:end="98:23"><name pos:start="98:21" pos:end="98:23">int</name></type> <name pos:start="98:25" pos:end="98:25">v</name> <init pos:start="98:27" pos:end="98:44">= <expr pos:start="98:29" pos:end="98:44"><name pos:start="98:29" pos:end="98:44"><name pos:start="98:29" pos:end="98:32">oldg</name><index pos:start="98:33" pos:end="98:41">[<expr pos:start="98:34" pos:end="98:40"><call pos:start="98:34" pos:end="98:40"><name pos:start="98:34" pos:end="98:35">id</name><argument_list pos:start="98:36" pos:end="98:40">(<argument pos:start="98:37" pos:end="98:37"><expr pos:start="98:37" pos:end="98:37"><name pos:start="98:37" pos:end="98:37">i</name></expr></argument>,<argument pos:start="98:39" pos:end="98:39"><expr pos:start="98:39" pos:end="98:39"><name pos:start="98:39" pos:end="98:39">y</name></expr></argument>)</argument_list></call></expr>]</index><index pos:start="98:42" pos:end="98:44">[<expr pos:start="98:43" pos:end="98:43"><name pos:start="98:43" pos:end="98:43">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                    <if_stmt pos:start="99:21" pos:end="101:21"><if pos:start="99:21" pos:end="101:21">if<condition pos:start="99:23" pos:end="99:46">(<expr pos:start="99:24" pos:end="99:45"><name pos:start="99:24" pos:end="99:35"><name pos:start="99:24" pos:end="99:26">scc</name><index pos:start="99:27" pos:end="99:35">[<expr pos:start="99:28" pos:end="99:34"><call pos:start="99:28" pos:end="99:34"><name pos:start="99:28" pos:end="99:29">id</name><argument_list pos:start="99:30" pos:end="99:34">(<argument pos:start="99:31" pos:end="99:31"><expr pos:start="99:31" pos:end="99:31"><name pos:start="99:31" pos:end="99:31">i</name></expr></argument>,<argument pos:start="99:33" pos:end="99:33"><expr pos:start="99:33" pos:end="99:33"><name pos:start="99:33" pos:end="99:33">y</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="99:37" pos:end="99:38">!=</operator> <name pos:start="99:40" pos:end="99:45"><name pos:start="99:40" pos:end="99:42">scc</name><index pos:start="99:43" pos:end="99:45">[<expr pos:start="99:44" pos:end="99:44"><name pos:start="99:44" pos:end="99:44">v</name></expr>]</index></name></expr>)</condition><block pos:start="99:47" pos:end="101:21">{<block_content pos:start="100:25" pos:end="100:58">
                        <expr_stmt pos:start="100:25" pos:end="100:58"><expr pos:start="100:25" pos:end="100:57"><name pos:start="100:25" pos:end="100:39"><name pos:start="100:25" pos:end="100:25">g</name><index pos:start="100:26" pos:end="100:39">[<expr pos:start="100:27" pos:end="100:38"><name pos:start="100:27" pos:end="100:38"><name pos:start="100:27" pos:end="100:29">scc</name><index pos:start="100:30" pos:end="100:38">[<expr pos:start="100:31" pos:end="100:37"><call pos:start="100:31" pos:end="100:37"><name pos:start="100:31" pos:end="100:32">id</name><argument_list pos:start="100:33" pos:end="100:37">(<argument pos:start="100:34" pos:end="100:34"><expr pos:start="100:34" pos:end="100:34"><name pos:start="100:34" pos:end="100:34">i</name></expr></argument>,<argument pos:start="100:36" pos:end="100:36"><expr pos:start="100:36" pos:end="100:36"><name pos:start="100:36" pos:end="100:36">y</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>]</index></name><operator pos:start="100:40" pos:end="100:40">.</operator><call pos:start="100:41" pos:end="100:57"><name pos:start="100:41" pos:end="100:49">push_back</name><argument_list pos:start="100:50" pos:end="100:57">(<argument pos:start="100:51" pos:end="100:56"><expr pos:start="100:51" pos:end="100:56"><name pos:start="100:51" pos:end="100:56"><name pos:start="100:51" pos:end="100:53">scc</name><index pos:start="100:54" pos:end="100:56">[<expr pos:start="100:55" pos:end="100:55"><name pos:start="100:55" pos:end="100:55">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>
    </block_content>}</block></for>
    
    <for pos:start="106:5" pos:end="108:5">for<control pos:start="106:8" pos:end="106:36">(<init pos:start="106:9" pos:end="106:18"><decl pos:start="106:9" pos:end="106:17"><type pos:start="106:9" pos:end="106:11"><name pos:start="106:9" pos:end="106:11">int</name></type> <name pos:start="106:13" pos:end="106:13">i</name> <init pos:start="106:15" pos:end="106:17">= <expr pos:start="106:17" pos:end="106:17"><literal type="number" pos:start="106:17" pos:end="106:17">1</literal></expr></init></decl>;</init><condition pos:start="106:19" pos:end="106:31"><expr pos:start="106:19" pos:end="106:30"><name pos:start="106:19" pos:end="106:19">i</name> <operator pos:start="106:21" pos:end="106:22">&lt;=</operator> <name pos:start="106:24" pos:end="106:30">scc_cnt</name></expr>;</condition><incr pos:start="106:32" pos:end="106:35"><expr pos:start="106:32" pos:end="106:35"><name pos:start="106:32" pos:end="106:32">i</name> <operator pos:start="106:34" pos:end="106:35">++</operator></expr></incr>)</control><block pos:start="106:37" pos:end="108:5">{<block_content pos:start="107:9" pos:end="107:30">
        <expr_stmt pos:start="107:9" pos:end="107:30"><expr pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:11">ans</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:29"><name pos:start="107:15" pos:end="107:17">max</name><argument_list pos:start="107:18" pos:end="107:29">(<argument pos:start="107:19" pos:end="107:21"><expr pos:start="107:19" pos:end="107:21"><name pos:start="107:19" pos:end="107:21">ans</name></expr></argument>,<argument pos:start="107:23" pos:end="107:28"><expr pos:start="107:23" pos:end="107:28"><call pos:start="107:23" pos:end="107:28"><name pos:start="107:23" pos:end="107:25">dfs</name><argument_list pos:start="107:26" pos:end="107:28">(<argument pos:start="107:27" pos:end="107:27"><expr pos:start="107:27" pos:end="107:27"><name pos:start="107:27" pos:end="107:27">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="109:5" pos:end="109:24"><expr pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:8">cout</name> <operator pos:start="109:10" pos:end="109:11">&lt;&lt;</operator> <name pos:start="109:13" pos:end="109:15">ans</name> <operator pos:start="109:17" pos:end="109:18">&lt;&lt;</operator> <name pos:start="109:20" pos:end="109:23">endl</name></expr>;</expr_stmt>
    <return pos:start="110:5" pos:end="110:13">return <expr pos:start="110:12" pos:end="110:12"><literal type="number" pos:start="110:12" pos:end="110:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
