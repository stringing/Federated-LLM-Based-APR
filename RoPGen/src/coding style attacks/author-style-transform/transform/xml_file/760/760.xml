<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/760/760.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:13"><decl pos:start="4:1" pos:end="4:12"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:12"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:12">[<expr pos:start="4:7" pos:end="4:11"><literal type="number" pos:start="4:7" pos:end="4:11">10001</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="12:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:7">sum</name> <parameter_list pos:start="5:9" pos:end="5:15">(<parameter pos:start="5:10" pos:end="5:14"><decl pos:start="5:10" pos:end="5:14"><type pos:start="5:10" pos:end="5:12"><name pos:start="5:10" pos:end="5:12">int</name></type> <name pos:start="5:14" pos:end="5:14">x</name></decl></parameter>)</parameter_list> <block pos:start="5:17" pos:end="12:1">{<block_content pos:start="6:5" pos:end="11:15">
    <decl_stmt pos:start="6:5" pos:end="6:16"><decl pos:start="6:5" pos:end="6:15"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">ans</name> <init pos:start="6:13" pos:end="6:15">= <expr pos:start="6:15" pos:end="6:15"><literal type="number" pos:start="6:15" pos:end="6:15">0</literal></expr></init></decl>;</decl_stmt>
<while pos:start="7:1" pos:end="10:1">while<condition pos:start="7:6" pos:end="7:8">(<expr pos:start="7:7" pos:end="7:7"><name pos:start="7:7" pos:end="7:7">x</name></expr>)</condition><block pos:start="7:9" pos:end="10:1">{<block_content pos:start="8:5" pos:end="9:10">
    <expr_stmt pos:start="8:5" pos:end="8:14"><expr pos:start="8:5" pos:end="8:13"><name pos:start="8:5" pos:end="8:7">ans</name><operator pos:start="8:8" pos:end="8:9">+=</operator><name pos:start="8:10" pos:end="8:10">x</name><operator pos:start="8:11" pos:end="8:11">%</operator><literal type="number" pos:start="8:12" pos:end="8:13">10</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:10"><expr pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:5">x</name><operator pos:start="9:6" pos:end="9:7">/=</operator><literal type="number" pos:start="9:8" pos:end="9:9">10</literal></expr>;</expr_stmt>
</block_content>}</block></while>
    <return pos:start="11:5" pos:end="11:15">return <expr pos:start="11:12" pos:end="11:14"><name pos:start="11:12" pos:end="11:14">ans</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="13:1" pos:end="21:1"><type pos:start="13:1" pos:end="13:4"><name pos:start="13:1" pos:end="13:4">bool</name></type> <name pos:start="13:6" pos:end="13:8">cmp</name> <parameter_list pos:start="13:10" pos:end="13:23">(<parameter pos:start="13:11" pos:end="13:15"><decl pos:start="13:11" pos:end="13:15"><type pos:start="13:11" pos:end="13:15"><name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:15">x</name></decl></parameter>, <parameter pos:start="13:18" pos:end="13:22"><decl pos:start="13:18" pos:end="13:22"><type pos:start="13:18" pos:end="13:22"><name pos:start="13:18" pos:end="13:20">int</name></type> <name pos:start="13:22" pos:end="13:22">y</name></decl></parameter>)</parameter_list> <block pos:start="13:25" pos:end="21:1">{<block_content pos:start="14:5" pos:end="20:17">
    <if_stmt pos:start="14:5" pos:end="16:5"><if pos:start="14:5" pos:end="16:5">if <condition pos:start="14:8" pos:end="14:25">(<expr pos:start="14:9" pos:end="14:24"><call pos:start="14:9" pos:end="14:14"><name pos:start="14:9" pos:end="14:11">sum</name><argument_list pos:start="14:12" pos:end="14:14">(<argument pos:start="14:13" pos:end="14:13"><expr pos:start="14:13" pos:end="14:13"><name pos:start="14:13" pos:end="14:13">x</name></expr></argument>)</argument_list></call> <operator pos:start="14:16" pos:end="14:17">!=</operator> <call pos:start="14:19" pos:end="14:24"><name pos:start="14:19" pos:end="14:21">sum</name><argument_list pos:start="14:22" pos:end="14:24">(<argument pos:start="14:23" pos:end="14:23"><expr pos:start="14:23" pos:end="14:23"><name pos:start="14:23" pos:end="14:23">y</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="14:27" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:31">
        <return pos:start="15:9" pos:end="15:31">return <expr pos:start="15:16" pos:end="15:30"><call pos:start="15:16" pos:end="15:21"><name pos:start="15:16" pos:end="15:18">sum</name><argument_list pos:start="15:19" pos:end="15:21">(<argument pos:start="15:20" pos:end="15:20"><expr pos:start="15:20" pos:end="15:20"><name pos:start="15:20" pos:end="15:20">x</name></expr></argument>)</argument_list></call> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <call pos:start="15:25" pos:end="15:30"><name pos:start="15:25" pos:end="15:27">sum</name><argument_list pos:start="15:28" pos:end="15:30">(<argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><name pos:start="15:29" pos:end="15:29">y</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="17:5" pos:end="19:5"><if pos:start="17:5" pos:end="19:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:9">x</name> <operator pos:start="17:11" pos:end="17:11">%</operator> <literal type="number" pos:start="17:13" pos:end="17:13">2</literal> <operator pos:start="17:15" pos:end="17:16">!=</operator> <name pos:start="17:18" pos:end="17:18">y</name> <operator pos:start="17:20" pos:end="17:20">%</operator> <literal type="number" pos:start="17:22" pos:end="17:22">2</literal></expr>)</condition> <block pos:start="17:25" pos:end="19:5">{<block_content pos:start="18:9" pos:end="18:29">
        <return pos:start="18:9" pos:end="18:29">return <expr pos:start="18:16" pos:end="18:28"><name pos:start="18:16" pos:end="18:16">x</name> <operator pos:start="18:18" pos:end="18:18">%</operator> <literal type="number" pos:start="18:20" pos:end="18:20">2</literal> <operator pos:start="18:22" pos:end="18:22">&gt;</operator> <name pos:start="18:24" pos:end="18:24">y</name> <operator pos:start="18:26" pos:end="18:26">%</operator> <literal type="number" pos:start="18:28" pos:end="18:28">2</literal></expr>;</return>    
    </block_content>}</block></if></if_stmt>
    <return pos:start="20:5" pos:end="20:17">return <expr pos:start="20:12" pos:end="20:16"><name pos:start="20:12" pos:end="20:12">x</name> <operator pos:start="20:14" pos:end="20:14">&lt;</operator> <name pos:start="20:16" pos:end="20:16">y</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="22:1" pos:end="33:1"><type pos:start="22:1" pos:end="22:3"><name pos:start="22:1" pos:end="22:3">int</name></type> <name pos:start="22:5" pos:end="22:8">main</name><parameter_list pos:start="22:9" pos:end="22:10">()</parameter_list><block pos:start="22:11" pos:end="33:1">{<block_content pos:start="23:5" pos:end="32:13">
    <decl_stmt pos:start="23:5" pos:end="23:10"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:13"><expr pos:start="24:5" pos:end="24:12"><name pos:start="24:5" pos:end="24:7">cin</name> <operator pos:start="24:9" pos:end="24:10">&gt;&gt;</operator> <name pos:start="24:12" pos:end="24:12">n</name></expr>;</expr_stmt>
    <for pos:start="25:5" pos:end="27:5">for <control pos:start="25:9" pos:end="25:31">(<init pos:start="25:10" pos:end="25:19"><decl pos:start="25:10" pos:end="25:18"><type pos:start="25:10" pos:end="25:12"><name pos:start="25:10" pos:end="25:12">int</name></type> <name pos:start="25:14" pos:end="25:14">i</name> <init pos:start="25:16" pos:end="25:18">= <expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr></init></decl>;</init> <condition pos:start="25:21" pos:end="25:26"><expr pos:start="25:21" pos:end="25:25"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <name pos:start="25:25" pos:end="25:25">n</name></expr>;</condition> <incr pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:28">i</name><operator pos:start="25:29" pos:end="25:30">++</operator></expr></incr>)</control> <block pos:start="25:33" pos:end="27:5">{<block_content pos:start="26:9" pos:end="26:20">
        <expr_stmt pos:start="26:9" pos:end="26:20"><expr pos:start="26:9" pos:end="26:19"><name pos:start="26:9" pos:end="26:11">cin</name> <operator pos:start="26:13" pos:end="26:14">&gt;&gt;</operator> <name pos:start="26:16" pos:end="26:19"><name pos:start="26:16" pos:end="26:16">a</name><index pos:start="26:17" pos:end="26:19">[<expr pos:start="26:18" pos:end="26:18"><name pos:start="26:18" pos:end="26:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="28:5" pos:end="28:24"><expr pos:start="28:5" pos:end="28:23"><call pos:start="28:5" pos:end="28:23"><name pos:start="28:5" pos:end="28:8">sort</name><argument_list pos:start="28:9" pos:end="28:23">(<argument pos:start="28:10" pos:end="28:10"><expr pos:start="28:10" pos:end="28:10"><name pos:start="28:10" pos:end="28:10">a</name></expr></argument>, <argument pos:start="28:13" pos:end="28:17"><expr pos:start="28:13" pos:end="28:17"><name pos:start="28:13" pos:end="28:13">a</name> <operator pos:start="28:15" pos:end="28:15">+</operator> <name pos:start="28:17" pos:end="28:17">n</name></expr></argument>, <argument pos:start="28:20" pos:end="28:22"><expr pos:start="28:20" pos:end="28:22"><name pos:start="28:20" pos:end="28:22">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="29:5" pos:end="31:5">for <control pos:start="29:9" pos:end="29:31">(<init pos:start="29:10" pos:end="29:19"><decl pos:start="29:10" pos:end="29:18"><type pos:start="29:10" pos:end="29:12"><name pos:start="29:10" pos:end="29:12">int</name></type> <name pos:start="29:14" pos:end="29:14">i</name> <init pos:start="29:16" pos:end="29:18">= <expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr></init></decl>;</init> <condition pos:start="29:21" pos:end="29:26"><expr pos:start="29:21" pos:end="29:25"><name pos:start="29:21" pos:end="29:21">i</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <name pos:start="29:25" pos:end="29:25">n</name></expr>;</condition> <incr pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:28">i</name><operator pos:start="29:29" pos:end="29:30">++</operator></expr></incr>)</control> <block pos:start="29:33" pos:end="31:5">{<block_content pos:start="30:9" pos:end="30:28">
        <expr_stmt pos:start="30:9" pos:end="30:28"><expr pos:start="30:9" pos:end="30:27"><name pos:start="30:9" pos:end="30:12">cout</name> <operator pos:start="30:14" pos:end="30:15">&lt;&lt;</operator> <name pos:start="30:17" pos:end="30:20"><name pos:start="30:17" pos:end="30:17">a</name><index pos:start="30:18" pos:end="30:20">[<expr pos:start="30:19" pos:end="30:19"><name pos:start="30:19" pos:end="30:19">i</name></expr>]</index></name> <operator pos:start="30:22" pos:end="30:23">&lt;&lt;</operator> <literal type="string" pos:start="30:25" pos:end="30:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="32:5" pos:end="32:13">return <expr pos:start="32:12" pos:end="32:12"><literal type="number" pos:start="32:12" pos:end="32:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
