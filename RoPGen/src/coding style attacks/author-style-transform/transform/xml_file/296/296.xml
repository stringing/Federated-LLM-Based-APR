<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/296/296.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:33"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:11"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:11"><name pos:start="3:7" pos:end="3:7">a</name><index pos:start="3:8" pos:end="3:11">[<expr pos:start="3:9" pos:end="3:10"><literal type="number" pos:start="3:9" pos:end="3:10">15</literal></expr>]</index></name></decl>,<decl pos:start="3:13" pos:end="3:17"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:13" pos:end="3:17"><name pos:start="3:13" pos:end="3:13">b</name><index pos:start="3:14" pos:end="3:17">[<expr pos:start="3:15" pos:end="3:16"><literal type="number" pos:start="3:15" pos:end="3:16">15</literal></expr>]</index></name></decl>,<decl pos:start="3:19" pos:end="3:32"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:19" pos:end="3:21">ans</name><init pos:start="3:22" pos:end="3:32">=<expr pos:start="3:23" pos:end="3:32"><literal type="number" pos:start="3:23" pos:end="3:32">0x3f3f3f3f</literal></expr></init></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="20:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">void</name></type> <name pos:start="4:6" pos:end="4:8">dfs</name><parameter_list pos:start="4:9" pos:end="4:39">(<parameter pos:start="4:10" pos:end="4:14"><decl pos:start="4:10" pos:end="4:14"><type pos:start="4:10" pos:end="4:14"><name pos:start="4:10" pos:end="4:12">int</name></type> <name pos:start="4:14" pos:end="4:14">u</name></decl></parameter>,<parameter pos:start="4:16" pos:end="4:22"><decl pos:start="4:16" pos:end="4:22"><type pos:start="4:16" pos:end="4:22"><name pos:start="4:16" pos:end="4:18">int</name></type> <name pos:start="4:20" pos:end="4:22">cnt</name></decl></parameter>,<parameter pos:start="4:24" pos:end="4:30"><decl pos:start="4:24" pos:end="4:30"><type pos:start="4:24" pos:end="4:30"><name pos:start="4:24" pos:end="4:26">int</name></type> <name pos:start="4:28" pos:end="4:30">sum</name></decl></parameter>,<parameter pos:start="4:32" pos:end="4:38"><decl pos:start="4:32" pos:end="4:38"><type pos:start="4:32" pos:end="4:38"><name pos:start="4:32" pos:end="4:34">int</name></type> <name pos:start="4:36" pos:end="4:38">mul</name></decl></parameter>)</parameter_list><block pos:start="4:40" pos:end="20:1">{<block_content pos:start="5:5" pos:end="19:11">
    <if_stmt pos:start="5:5" pos:end="7:6"><if pos:start="5:5" pos:end="7:6">if<condition pos:start="5:7" pos:end="5:22">(<expr pos:start="5:8" pos:end="5:21"><name pos:start="5:8" pos:end="5:10">cnt</name><operator pos:start="5:11" pos:end="5:12">==</operator><literal type="number" pos:start="5:13" pos:end="5:13">0</literal><operator pos:start="5:14" pos:end="5:15">&amp;&amp;</operator><name pos:start="5:16" pos:end="5:16">u</name><operator pos:start="5:17" pos:end="5:18">==</operator><name pos:start="5:19" pos:end="5:19">n</name><operator pos:start="5:20" pos:end="5:20">-</operator><literal type="number" pos:start="5:21" pos:end="5:21">1</literal></expr>)</condition><block pos:start="5:23" pos:end="7:6">{<block_content pos:start="6:9" pos:end="6:15">
        <return pos:start="6:9" pos:end="6:15">return;</return>
     </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="8:5" pos:end="12:9"><if pos:start="8:5" pos:end="9:32">if<condition pos:start="8:7" pos:end="8:39">(<expr pos:start="8:8" pos:end="8:38"><name pos:start="8:8" pos:end="8:10">sum</name><operator pos:start="8:11" pos:end="8:11">&gt;</operator><name pos:start="8:12" pos:end="8:14">mul</name><operator pos:start="8:15" pos:end="8:16">&amp;&amp;</operator><name pos:start="8:17" pos:end="8:19">cnt</name><operator pos:start="8:20" pos:end="8:21">!=</operator><literal type="number" pos:start="8:22" pos:end="8:22">0</literal><operator pos:start="8:23" pos:end="8:24">&amp;&amp;</operator><name pos:start="8:25" pos:end="8:27">sum</name><operator pos:start="8:28" pos:end="8:29">!=</operator><literal type="number" pos:start="8:30" pos:end="8:30">0</literal><operator pos:start="8:31" pos:end="8:32">&amp;&amp;</operator><name pos:start="8:33" pos:end="8:35">mul</name><operator pos:start="8:36" pos:end="8:37">!=</operator><literal type="number" pos:start="8:38" pos:end="8:38">1</literal></expr>)</condition><block pos:start="8:40" pos:end="9:32">{<block_content pos:start="9:9" pos:end="9:31">
        <expr_stmt pos:start="9:9" pos:end="9:31"><expr pos:start="9:9" pos:end="9:30"><name pos:start="9:9" pos:end="9:11">ans</name><operator pos:start="9:12" pos:end="9:12">=</operator><call pos:start="9:13" pos:end="9:30"><name pos:start="9:13" pos:end="9:15">min</name><argument_list pos:start="9:16" pos:end="9:30">(<argument pos:start="9:17" pos:end="9:19"><expr pos:start="9:17" pos:end="9:19"><name pos:start="9:17" pos:end="9:19">ans</name></expr></argument>,<argument pos:start="9:21" pos:end="9:29"><expr pos:start="9:21" pos:end="9:29"><operator pos:start="9:21" pos:end="9:21">(</operator><name pos:start="9:22" pos:end="9:24">sum</name><operator pos:start="9:25" pos:end="9:25">-</operator><name pos:start="9:26" pos:end="9:28">mul</name><operator pos:start="9:29" pos:end="9:29">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content>}</block></if>
    <else pos:start="10:5" pos:end="12:9">else<block pos:start="10:9" pos:end="12:9">{<block_content pos:start="11:9" pos:end="11:31">
        <expr_stmt pos:start="11:9" pos:end="11:31"><expr pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:11">ans</name><operator pos:start="11:12" pos:end="11:12">=</operator><call pos:start="11:13" pos:end="11:30"><name pos:start="11:13" pos:end="11:15">min</name><argument_list pos:start="11:16" pos:end="11:30">(<argument pos:start="11:17" pos:end="11:19"><expr pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:19">ans</name></expr></argument>,<argument pos:start="11:21" pos:end="11:29"><expr pos:start="11:21" pos:end="11:29"><operator pos:start="11:21" pos:end="11:21">(</operator><name pos:start="11:22" pos:end="11:24">mul</name><operator pos:start="11:25" pos:end="11:25">-</operator><name pos:start="11:26" pos:end="11:28">sum</name><operator pos:start="11:29" pos:end="11:29">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    <if_stmt pos:start="13:5" pos:end="15:5"><if pos:start="13:5" pos:end="15:5">if<condition pos:start="13:7" pos:end="13:12">(<expr pos:start="13:8" pos:end="13:11"><name pos:start="13:8" pos:end="13:8">u</name><operator pos:start="13:9" pos:end="13:10">&gt;=</operator><name pos:start="13:11" pos:end="13:11">n</name></expr>)</condition><block pos:start="13:13" pos:end="15:5">{<block_content pos:start="14:9" pos:end="14:15">
        <return pos:start="14:9" pos:end="14:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:30"><expr pos:start="16:5" pos:end="16:29"><name pos:start="16:5" pos:end="16:8">cout</name><operator pos:start="16:9" pos:end="16:10">&lt;&lt;</operator><name pos:start="16:11" pos:end="16:13">sum</name><operator pos:start="16:14" pos:end="16:15">&lt;&lt;</operator><literal type="char" pos:start="16:16" pos:end="16:18">' '</literal><operator pos:start="16:19" pos:end="16:20">&lt;&lt;</operator><name pos:start="16:21" pos:end="16:23">mul</name><operator pos:start="16:24" pos:end="16:25">&lt;&lt;</operator><literal type="char" pos:start="16:26" pos:end="16:29">'\n'</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><call pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:7">dfs</name><argument_list pos:start="17:8" pos:end="17:36">(<argument pos:start="17:9" pos:end="17:11"><expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:9">u</name><operator pos:start="17:10" pos:end="17:10">+</operator><literal type="number" pos:start="17:11" pos:end="17:11">1</literal></expr></argument>,<argument pos:start="17:13" pos:end="17:17"><expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:15">cnt</name><operator pos:start="17:16" pos:end="17:16">+</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr></argument>,<argument pos:start="17:19" pos:end="17:26"><expr pos:start="17:19" pos:end="17:26"><name pos:start="17:19" pos:end="17:21">sum</name><operator pos:start="17:22" pos:end="17:22">+</operator><name pos:start="17:23" pos:end="17:26"><name pos:start="17:23" pos:end="17:23">b</name><index pos:start="17:24" pos:end="17:26">[<expr pos:start="17:25" pos:end="17:25"><name pos:start="17:25" pos:end="17:25">u</name></expr>]</index></name></expr></argument>,<argument pos:start="17:28" pos:end="17:35"><expr pos:start="17:28" pos:end="17:35"><name pos:start="17:28" pos:end="17:30">mul</name><operator pos:start="17:31" pos:end="17:31">*</operator><name pos:start="17:32" pos:end="17:35"><name pos:start="17:32" pos:end="17:32">a</name><index pos:start="17:33" pos:end="17:35">[<expr pos:start="17:34" pos:end="17:34"><name pos:start="17:34" pos:end="17:34">u</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:25"><expr pos:start="18:5" pos:end="18:24"><call pos:start="18:5" pos:end="18:24"><name pos:start="18:5" pos:end="18:7">dfs</name><argument_list pos:start="18:8" pos:end="18:24">(<argument pos:start="18:9" pos:end="18:11"><expr pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:9">u</name><operator pos:start="18:10" pos:end="18:10">+</operator><literal type="number" pos:start="18:11" pos:end="18:11">1</literal></expr></argument>,<argument pos:start="18:13" pos:end="18:15"><expr pos:start="18:13" pos:end="18:15"><name pos:start="18:13" pos:end="18:15">cnt</name></expr></argument>,<argument pos:start="18:17" pos:end="18:19"><expr pos:start="18:17" pos:end="18:19"><name pos:start="18:17" pos:end="18:19">sum</name></expr></argument>,<argument pos:start="18:21" pos:end="18:23"><expr pos:start="18:21" pos:end="18:23"><name pos:start="18:21" pos:end="18:23">mul</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="19:5" pos:end="19:11">return;</return>
</block_content>}</block></function>
<function pos:start="21:1" pos:end="32:1"><type pos:start="21:1" pos:end="21:3"><name pos:start="21:1" pos:end="21:3">int</name></type> <name pos:start="21:5" pos:end="21:8">main</name><parameter_list pos:start="21:9" pos:end="21:10">()</parameter_list><block pos:start="21:11" pos:end="32:1">{<block_content pos:start="22:5" pos:end="31:13">
    <expr_stmt pos:start="22:5" pos:end="22:34"><expr pos:start="22:5" pos:end="22:33"><call pos:start="22:5" pos:end="22:33"><name pos:start="22:5" pos:end="22:11">freopen</name><argument_list pos:start="22:12" pos:end="22:33">(<argument pos:start="22:13" pos:end="22:22"><expr pos:start="22:13" pos:end="22:22"><literal type="string" pos:start="22:13" pos:end="22:22">"stone.in"</literal></expr></argument>,<argument pos:start="22:24" pos:end="22:26"><expr pos:start="22:24" pos:end="22:26"><literal type="string" pos:start="22:24" pos:end="22:26">"r"</literal></expr></argument>,<argument pos:start="22:28" pos:end="22:32"><expr pos:start="22:28" pos:end="22:32"><name pos:start="22:28" pos:end="22:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:11">freopen</name><argument_list pos:start="23:12" pos:end="23:35">(<argument pos:start="23:13" pos:end="23:23"><expr pos:start="23:13" pos:end="23:23"><literal type="string" pos:start="23:13" pos:end="23:23">"stone.out"</literal></expr></argument>,<argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><literal type="string" pos:start="23:25" pos:end="23:27">"w"</literal></expr></argument>,<argument pos:start="23:29" pos:end="23:34"><expr pos:start="23:29" pos:end="23:34"><name pos:start="23:29" pos:end="23:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:37"><expr pos:start="24:5" pos:end="24:36"><call pos:start="24:5" pos:end="24:36"><name pos:start="24:5" pos:end="24:29"><name pos:start="24:5" pos:end="24:7">std</name><operator pos:start="24:8" pos:end="24:9">::</operator><name pos:start="24:10" pos:end="24:12">ios</name><operator pos:start="24:13" pos:end="24:14">::</operator><name pos:start="24:15" pos:end="24:29">sync_with_stdio</name></name><argument_list pos:start="24:30" pos:end="24:36">(<argument pos:start="24:31" pos:end="24:35"><expr pos:start="24:31" pos:end="24:35"><literal type="boolean" pos:start="24:31" pos:end="24:35">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:11"><expr pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:7">cin</name><operator pos:start="25:8" pos:end="25:9">&gt;&gt;</operator><name pos:start="25:10" pos:end="25:10">n</name></expr>;</expr_stmt>
    <for pos:start="26:5" pos:end="28:5">for<control pos:start="26:8" pos:end="26:24">(<init pos:start="26:9" pos:end="26:16"><decl pos:start="26:9" pos:end="26:15"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:13">i</name><init pos:start="26:14" pos:end="26:15">=<expr pos:start="26:15" pos:end="26:15"><literal type="number" pos:start="26:15" pos:end="26:15">0</literal></expr></init></decl>;</init><condition pos:start="26:17" pos:end="26:20"><expr pos:start="26:17" pos:end="26:19"><name pos:start="26:17" pos:end="26:17">i</name><operator pos:start="26:18" pos:end="26:18">&lt;</operator><name pos:start="26:19" pos:end="26:19">n</name></expr>;</condition><incr pos:start="26:21" pos:end="26:23"><expr pos:start="26:21" pos:end="26:23"><operator pos:start="26:21" pos:end="26:22">++</operator><name pos:start="26:23" pos:end="26:23">i</name></expr></incr>)</control><block pos:start="26:25" pos:end="28:5">{<block_content pos:start="27:9" pos:end="27:24">
        <expr_stmt pos:start="27:9" pos:end="27:24"><expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:11">cin</name><operator pos:start="27:12" pos:end="27:13">&gt;&gt;</operator><name pos:start="27:14" pos:end="27:17"><name pos:start="27:14" pos:end="27:14">a</name><index pos:start="27:15" pos:end="27:17">[<expr pos:start="27:16" pos:end="27:16"><name pos:start="27:16" pos:end="27:16">i</name></expr>]</index></name><operator pos:start="27:18" pos:end="27:19">&gt;&gt;</operator><name pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:20">b</name><index pos:start="27:21" pos:end="27:23">[<expr pos:start="27:22" pos:end="27:22"><name pos:start="27:22" pos:end="27:22">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="29:5" pos:end="29:17"><expr pos:start="29:5" pos:end="29:16"><call pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:7">dfs</name><argument_list pos:start="29:8" pos:end="29:16">(<argument pos:start="29:9" pos:end="29:9"><expr pos:start="29:9" pos:end="29:9"><literal type="number" pos:start="29:9" pos:end="29:9">0</literal></expr></argument>,<argument pos:start="29:11" pos:end="29:11"><expr pos:start="29:11" pos:end="29:11"><literal type="number" pos:start="29:11" pos:end="29:11">0</literal></expr></argument>,<argument pos:start="29:13" pos:end="29:13"><expr pos:start="29:13" pos:end="29:13"><literal type="number" pos:start="29:13" pos:end="29:13">0</literal></expr></argument>,<argument pos:start="29:15" pos:end="29:15"><expr pos:start="29:15" pos:end="29:15"><literal type="number" pos:start="29:15" pos:end="29:15">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:20"><expr pos:start="30:5" pos:end="30:19"><name pos:start="30:5" pos:end="30:8">cout</name><operator pos:start="30:9" pos:end="30:10">&lt;&lt;</operator><name pos:start="30:11" pos:end="30:13">ans</name><operator pos:start="30:14" pos:end="30:15">&lt;&lt;</operator><literal type="char" pos:start="30:16" pos:end="30:19">'\n'</literal></expr>;</expr_stmt>
    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
