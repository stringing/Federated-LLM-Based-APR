<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/586/586.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>

<function pos:start="4:1" pos:end="18:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:8">cmp</name><parameter_list pos:start="4:9" pos:end="4:21">(<parameter pos:start="4:10" pos:end="4:14"><decl pos:start="4:10" pos:end="4:14"><type pos:start="4:10" pos:end="4:14"><name pos:start="4:10" pos:end="4:12">int</name></type> <name pos:start="4:14" pos:end="4:14">x</name></decl></parameter>,<parameter pos:start="4:16" pos:end="4:20"><decl pos:start="4:16" pos:end="4:20"><type pos:start="4:16" pos:end="4:20"><name pos:start="4:16" pos:end="4:18">int</name></type> <name pos:start="4:20" pos:end="4:20">y</name></decl></parameter>)</parameter_list> <block pos:start="4:23" pos:end="18:1">{<block_content pos:start="5:5" pos:end="17:21">
    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">sumx</name> <init pos:start="5:14" pos:end="5:16">= <expr pos:start="5:16" pos:end="5:16"><literal type="number" pos:start="5:16" pos:end="5:16">0</literal></expr></init></decl>,<decl pos:start="5:18" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:21">sumy</name> <init pos:start="5:23" pos:end="5:25">= <expr pos:start="5:25" pos:end="5:25"><literal type="number" pos:start="5:25" pos:end="5:25">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="6:5" pos:end="9:5">while<condition pos:start="6:10" pos:end="6:12">(<expr pos:start="6:11" pos:end="6:11"><name pos:start="6:11" pos:end="6:11">x</name></expr>)</condition> <block pos:start="6:14" pos:end="9:5">{<block_content pos:start="7:9" pos:end="8:16">
        <expr_stmt pos:start="7:9" pos:end="7:23"><expr pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:12">sumx</name> <operator pos:start="7:14" pos:end="7:15">+=</operator> <name pos:start="7:17" pos:end="7:17">x</name> <operator pos:start="7:19" pos:end="7:19">%</operator> <literal type="number" pos:start="7:21" pos:end="7:22">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:16"><expr pos:start="8:9" pos:end="8:15"><name pos:start="8:9" pos:end="8:9">x</name> <operator pos:start="8:11" pos:end="8:12">/=</operator> <literal type="number" pos:start="8:14" pos:end="8:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="10:5" pos:end="13:5">while<condition pos:start="10:10" pos:end="10:12">(<expr pos:start="10:11" pos:end="10:11"><name pos:start="10:11" pos:end="10:11">y</name></expr>)</condition> <block pos:start="10:14" pos:end="13:5">{<block_content pos:start="11:9" pos:end="12:16">
        <expr_stmt pos:start="11:9" pos:end="11:23"><expr pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:12">sumy</name> <operator pos:start="11:14" pos:end="11:15">+=</operator> <name pos:start="11:17" pos:end="11:17">y</name> <operator pos:start="11:19" pos:end="11:19">%</operator> <literal type="number" pos:start="11:21" pos:end="11:22">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:16"><expr pos:start="12:9" pos:end="12:15"><name pos:start="12:9" pos:end="12:9">y</name> <operator pos:start="12:11" pos:end="12:12">/=</operator> <literal type="number" pos:start="12:14" pos:end="12:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <if_stmt pos:start="14:5" pos:end="17:21"><if pos:start="14:5" pos:end="15:27">if<condition pos:start="14:7" pos:end="14:20">(<expr pos:start="14:8" pos:end="14:19"><name pos:start="14:8" pos:end="14:11">sumx</name> <operator pos:start="14:13" pos:end="14:14">!=</operator> <name pos:start="14:16" pos:end="14:19">sumy</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:27"><block_content pos:start="15:9" pos:end="15:27">
        <return pos:start="15:9" pos:end="15:27">return <expr pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:19">sumx</name> <operator pos:start="15:21" pos:end="15:21">&lt;</operator> <name pos:start="15:23" pos:end="15:26">sumy</name></expr>;</return></block_content></block></if>
    <else pos:start="16:5" pos:end="17:21">else<block type="pseudo" pos:start="17:9" pos:end="17:21"><block_content pos:start="17:9" pos:end="17:21">
        <return pos:start="17:9" pos:end="17:21">return <expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:16">x</name> <operator pos:start="17:18" pos:end="17:18">&lt;</operator> <name pos:start="17:20" pos:end="17:20">y</name></expr>;</return></block_content></block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="19:1" pos:end="29:1"><type pos:start="19:1" pos:end="19:3"><name pos:start="19:1" pos:end="19:3">int</name></type> <name pos:start="19:5" pos:end="19:8">main</name><parameter_list pos:start="19:9" pos:end="19:10">()</parameter_list> <block pos:start="19:12" pos:end="29:1">{<block_content pos:start="20:5" pos:end="28:13">
    <decl_stmt pos:start="20:5" pos:end="20:10"><decl pos:start="20:5" pos:end="20:9"><type pos:start="20:5" pos:end="20:7"><name pos:start="20:5" pos:end="20:7">int</name></type> <name pos:start="20:9" pos:end="20:9">n</name></decl>;</decl_stmt>
    <decl_stmt pos:start="21:5" pos:end="21:15"><decl pos:start="21:5" pos:end="21:14"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:9">a</name><index pos:start="21:10" pos:end="21:14">[<expr pos:start="21:11" pos:end="21:13"><literal type="number" pos:start="21:11" pos:end="21:13">111</literal></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:13"><expr pos:start="22:5" pos:end="22:12"><name pos:start="22:5" pos:end="22:7">cin</name> <operator pos:start="22:9" pos:end="22:10">&gt;&gt;</operator> <name pos:start="22:12" pos:end="22:12">n</name></expr>;</expr_stmt>
    <for pos:start="23:5" pos:end="24:20">for<control pos:start="23:8" pos:end="23:28">(<init pos:start="23:9" pos:end="23:18"><decl pos:start="23:9" pos:end="23:17"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">i</name> <init pos:start="23:15" pos:end="23:17">= <expr pos:start="23:17" pos:end="23:17"><literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr></init></decl>;</init><condition pos:start="23:19" pos:end="23:24"><expr pos:start="23:19" pos:end="23:23"><name pos:start="23:19" pos:end="23:19">i</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <name pos:start="23:23" pos:end="23:23">n</name></expr>;</condition><incr pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:25">i</name><operator pos:start="23:26" pos:end="23:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="24:9" pos:end="24:20"><block_content pos:start="24:9" pos:end="24:20">
        <expr_stmt pos:start="24:9" pos:end="24:20"><expr pos:start="24:9" pos:end="24:19"><name pos:start="24:9" pos:end="24:11">cin</name> <operator pos:start="24:13" pos:end="24:14">&gt;&gt;</operator> <name pos:start="24:16" pos:end="24:19"><name pos:start="24:16" pos:end="24:16">a</name><index pos:start="24:17" pos:end="24:19">[<expr pos:start="24:18" pos:end="24:18"><name pos:start="24:18" pos:end="24:18">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="25:5" pos:end="25:20"><expr pos:start="25:5" pos:end="25:19"><call pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:8">sort</name><argument_list pos:start="25:9" pos:end="25:19">(<argument pos:start="25:10" pos:end="25:10"><expr pos:start="25:10" pos:end="25:10"><name pos:start="25:10" pos:end="25:10">a</name></expr></argument>,<argument pos:start="25:12" pos:end="25:14"><expr pos:start="25:12" pos:end="25:14"><name pos:start="25:12" pos:end="25:12">a</name><operator pos:start="25:13" pos:end="25:13">+</operator><name pos:start="25:14" pos:end="25:14">n</name></expr></argument>,<argument pos:start="25:16" pos:end="25:18"><expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="26:5" pos:end="27:28">for<control pos:start="26:8" pos:end="26:28">(<init pos:start="26:9" pos:end="26:18"><decl pos:start="26:9" pos:end="26:17"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:13">i</name> <init pos:start="26:15" pos:end="26:17">= <expr pos:start="26:17" pos:end="26:17"><literal type="number" pos:start="26:17" pos:end="26:17">0</literal></expr></init></decl>;</init><condition pos:start="26:19" pos:end="26:24"><expr pos:start="26:19" pos:end="26:23"><name pos:start="26:19" pos:end="26:19">i</name> <operator pos:start="26:21" pos:end="26:21">&lt;</operator> <name pos:start="26:23" pos:end="26:23">n</name></expr>;</condition><incr pos:start="26:25" pos:end="26:27"><expr pos:start="26:25" pos:end="26:27"><name pos:start="26:25" pos:end="26:25">i</name><operator pos:start="26:26" pos:end="26:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:9" pos:end="27:28"><block_content pos:start="27:9" pos:end="27:28">
        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:12">cout</name> <operator pos:start="27:14" pos:end="27:15">&lt;&lt;</operator> <name pos:start="27:17" pos:end="27:20"><name pos:start="27:17" pos:end="27:17">a</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><name pos:start="27:19" pos:end="27:19">i</name></expr>]</index></name> <operator pos:start="27:22" pos:end="27:23">&lt;&lt;</operator> <literal type="string" pos:start="27:25" pos:end="27:27">" "</literal></expr>;</expr_stmt></block_content></block></for>
    <return pos:start="28:5" pos:end="28:13">return <expr pos:start="28:12" pos:end="28:12"><literal type="number" pos:start="28:12" pos:end="28:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
