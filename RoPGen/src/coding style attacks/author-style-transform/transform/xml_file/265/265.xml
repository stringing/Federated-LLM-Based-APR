<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/265/265.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>

<function pos:start="4:1" pos:end="51:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list>
<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="6:5" pos:end="50:13">
    <expr_stmt pos:start="6:5" pos:end="6:36"><expr pos:start="6:5" pos:end="6:35"><call pos:start="6:5" pos:end="6:35"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:35">(<argument pos:start="6:13" pos:end="6:22"><expr pos:start="6:13" pos:end="6:22"><literal type="string" pos:start="6:13" pos:end="6:22">"queen.in"</literal></expr></argument>, <argument pos:start="6:25" pos:end="6:27"><expr pos:start="6:25" pos:end="6:27"><literal type="string" pos:start="6:25" pos:end="6:27">"r"</literal></expr></argument>, <argument pos:start="6:30" pos:end="6:34"><expr pos:start="6:30" pos:end="6:34"><name pos:start="6:30" pos:end="6:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:38"><expr pos:start="7:5" pos:end="7:37"><call pos:start="7:5" pos:end="7:37"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:37">(<argument pos:start="7:13" pos:end="7:23"><expr pos:start="7:13" pos:end="7:23"><literal type="string" pos:start="7:13" pos:end="7:23">"queen.out"</literal></expr></argument>, <argument pos:start="7:26" pos:end="7:28"><expr pos:start="7:26" pos:end="7:28"><literal type="string" pos:start="7:26" pos:end="7:28">"w"</literal></expr></argument>, <argument pos:start="7:31" pos:end="7:36"><expr pos:start="7:31" pos:end="7:36"><name pos:start="7:31" pos:end="7:36">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:19"><decl pos:start="8:5" pos:end="8:11"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:11">num</name></decl>, <decl pos:start="8:14" pos:end="8:18"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:14" pos:end="8:16">sum</name><init pos:start="8:17" pos:end="8:18">=<expr pos:start="8:18" pos:end="8:18"><literal type="number" pos:start="8:18" pos:end="8:18">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:13"><expr pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:7">cin</name><operator pos:start="9:8" pos:end="9:9">&gt;&gt;</operator><name pos:start="9:10" pos:end="9:12">num</name></expr>;</expr_stmt>
    <for pos:start="10:5" pos:end="18:5">for <control pos:start="10:9" pos:end="10:30">(<init pos:start="10:10" pos:end="10:17"><decl pos:start="10:10" pos:end="10:16"><type pos:start="10:10" pos:end="10:12"><name pos:start="10:10" pos:end="10:12">int</name></type> <name pos:start="10:14" pos:end="10:14">a</name><init pos:start="10:15" pos:end="10:16">=<expr pos:start="10:16" pos:end="10:16"><literal type="number" pos:start="10:16" pos:end="10:16">1</literal></expr></init></decl>;</init> <condition pos:start="10:19" pos:end="10:25"><expr pos:start="10:19" pos:end="10:24"><name pos:start="10:19" pos:end="10:19">a</name><operator pos:start="10:20" pos:end="10:21">&lt;=</operator><name pos:start="10:22" pos:end="10:24">num</name></expr>;</condition> <incr pos:start="10:27" pos:end="10:29"><expr pos:start="10:27" pos:end="10:29"><name pos:start="10:27" pos:end="10:27">a</name><operator pos:start="10:28" pos:end="10:29">++</operator></expr></incr>)</control>
    <block pos:start="11:5" pos:end="18:5">{<block_content pos:start="12:9" pos:end="17:9">
        <for pos:start="12:9" pos:end="17:9">for <control pos:start="12:13" pos:end="12:34">(<init pos:start="12:14" pos:end="12:21"><decl pos:start="12:14" pos:end="12:20"><type pos:start="12:14" pos:end="12:16"><name pos:start="12:14" pos:end="12:16">int</name></type> <name pos:start="12:18" pos:end="12:18">b</name><init pos:start="12:19" pos:end="12:20">=<expr pos:start="12:20" pos:end="12:20"><literal type="number" pos:start="12:20" pos:end="12:20">1</literal></expr></init></decl>;</init> <condition pos:start="12:23" pos:end="12:29"><expr pos:start="12:23" pos:end="12:28"><name pos:start="12:23" pos:end="12:23">b</name><operator pos:start="12:24" pos:end="12:25">&lt;=</operator><name pos:start="12:26" pos:end="12:28">num</name></expr>;</condition> <incr pos:start="12:31" pos:end="12:33"><expr pos:start="12:31" pos:end="12:33"><name pos:start="12:31" pos:end="12:31">b</name><operator pos:start="12:32" pos:end="12:33">++</operator></expr></incr>)</control>
        <block pos:start="13:9" pos:end="17:9">{<block_content pos:start="14:13" pos:end="16:25">
            <decl_stmt pos:start="14:13" pos:end="14:24"><decl pos:start="14:13" pos:end="14:23"><type pos:start="14:13" pos:end="14:15"><name pos:start="14:13" pos:end="14:15">int</name></type> <name pos:start="14:17" pos:end="14:23">tempnum</name></decl>;</decl_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:25"><expr pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:15">cin</name><operator pos:start="15:16" pos:end="15:17">&gt;&gt;</operator><name pos:start="15:18" pos:end="15:24">tempnum</name></expr>;</expr_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:25"><expr pos:start="16:13" pos:end="16:24"><name pos:start="16:13" pos:end="16:15">sum</name><operator pos:start="16:16" pos:end="16:17">+=</operator><name pos:start="16:18" pos:end="16:24">tempnum</name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <if_stmt pos:start="19:5" pos:end="22:5"><if pos:start="19:5" pos:end="22:5">if <condition pos:start="19:8" pos:end="19:15">(<expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:11">num</name><operator pos:start="19:12" pos:end="19:13">==</operator><literal type="number" pos:start="19:14" pos:end="19:14">3</literal></expr>)</condition>
    <block pos:start="20:5" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:16">
        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:12">cout</name><operator pos:start="21:13" pos:end="21:14">&lt;&lt;</operator><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="23:5" pos:end="26:5"><if pos:start="23:5" pos:end="26:5">if <condition pos:start="23:8" pos:end="23:15">(<expr pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:11">num</name><operator pos:start="23:12" pos:end="23:13">==</operator><literal type="number" pos:start="23:14" pos:end="23:14">4</literal></expr>)</condition>
    <block pos:start="24:5" pos:end="26:5">{<block_content pos:start="25:9" pos:end="25:16">
        <expr_stmt pos:start="25:9" pos:end="25:16"><expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:12">cout</name><operator pos:start="25:13" pos:end="25:14">&lt;&lt;</operator><literal type="number" pos:start="25:15" pos:end="25:15">2</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="27:5" pos:end="30:5"><if pos:start="27:5" pos:end="30:5">if <condition pos:start="27:8" pos:end="27:15">(<expr pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:11">num</name><operator pos:start="27:12" pos:end="27:13">==</operator><literal type="number" pos:start="27:14" pos:end="27:14">5</literal></expr>)</condition>
    <block pos:start="28:5" pos:end="30:5">{<block_content pos:start="29:9" pos:end="29:17">
        <expr_stmt pos:start="29:9" pos:end="29:17"><expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:12">cout</name><operator pos:start="29:13" pos:end="29:14">&lt;&lt;</operator><literal type="number" pos:start="29:15" pos:end="29:16">12</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="31:5" pos:end="34:5"><if pos:start="31:5" pos:end="34:5">if <condition pos:start="31:8" pos:end="31:15">(<expr pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:11">num</name><operator pos:start="31:12" pos:end="31:13">==</operator><literal type="number" pos:start="31:14" pos:end="31:14">6</literal></expr>)</condition>
    <block pos:start="32:5" pos:end="34:5">{<block_content pos:start="33:9" pos:end="33:17">
        <expr_stmt pos:start="33:9" pos:end="33:17"><expr pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:12">cout</name><operator pos:start="33:13" pos:end="33:14">&lt;&lt;</operator><literal type="number" pos:start="33:15" pos:end="33:16">12</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="35:5" pos:end="45:5"><if pos:start="35:5" pos:end="45:5">if <condition pos:start="35:8" pos:end="35:15">(<expr pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:11">num</name><operator pos:start="35:12" pos:end="35:13">==</operator><literal type="number" pos:start="35:14" pos:end="35:14">7</literal></expr>)</condition>
    <block pos:start="36:5" pos:end="45:5">{<block_content pos:start="37:9" pos:end="44:9">
        <if_stmt pos:start="37:9" pos:end="44:9"><if pos:start="37:9" pos:end="40:9">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">sum</name><operator pos:start="37:16" pos:end="37:17">==</operator><literal type="number" pos:start="37:18" pos:end="37:19">47</literal></expr>)</condition>
        <block pos:start="38:9" pos:end="40:9">{<block_content pos:start="39:13" pos:end="39:22">
            <expr_stmt pos:start="39:13" pos:end="39:22"><expr pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:16">cout</name><operator pos:start="39:17" pos:end="39:18">&lt;&lt;</operator><literal type="number" pos:start="39:19" pos:end="39:21">270</literal></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else pos:start="41:9" pos:end="44:9">else
        <block pos:start="42:9" pos:end="44:9">{<block_content pos:start="43:13" pos:end="43:22">
            <expr_stmt pos:start="43:13" pos:end="43:22"><expr pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:16">cout</name><operator pos:start="43:17" pos:end="43:18">&lt;&lt;</operator><literal type="number" pos:start="43:19" pos:end="43:21">408</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="46:5" pos:end="49:5"><if pos:start="46:5" pos:end="49:5">if <condition pos:start="46:8" pos:end="46:15">(<expr pos:start="46:9" pos:end="46:14"><name pos:start="46:9" pos:end="46:11">num</name><operator pos:start="46:12" pos:end="46:13">==</operator><literal type="number" pos:start="46:14" pos:end="46:14">8</literal></expr>)</condition>
    <block pos:start="47:5" pos:end="49:5">{<block_content pos:start="48:9" pos:end="48:19">
        <expr_stmt pos:start="48:9" pos:end="48:19"><expr pos:start="48:9" pos:end="48:18"><name pos:start="48:9" pos:end="48:12">cout</name><operator pos:start="48:13" pos:end="48:14">&lt;&lt;</operator><literal type="number" pos:start="48:15" pos:end="48:18">2406</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return pos:start="50:5" pos:end="50:13">return <expr pos:start="50:12" pos:end="50:12"><literal type="number" pos:start="50:12" pos:end="50:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
