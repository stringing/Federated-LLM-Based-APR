<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/244/244.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:17"><decl pos:start="3:1" pos:end="3:16"><type pos:start="3:1" pos:end="3:9"><specifier pos:start="3:1" pos:end="3:5">const</specifier> <name pos:start="3:7" pos:end="3:9">int</name></type> <name pos:start="3:11" pos:end="3:11">N</name> <init pos:start="3:13" pos:end="3:16">= <expr pos:start="3:15" pos:end="3:16"><literal type="number" pos:start="3:15" pos:end="3:16">70</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:27"><decl pos:start="4:1" pos:end="4:26"><type pos:start="4:1" pos:end="4:9"><name pos:start="4:1" pos:end="4:4">long</name> <name pos:start="4:6" pos:end="4:9">long</name></type> <name pos:start="4:11" pos:end="4:14"><name pos:start="4:11" pos:end="4:11">a</name><index pos:start="4:12" pos:end="4:14">[<expr pos:start="4:13" pos:end="4:13"><name pos:start="4:13" pos:end="4:13">N</name></expr>]</index></name> <init pos:start="4:16" pos:end="4:26">= <expr pos:start="4:18" pos:end="4:26"><block pos:start="4:18" pos:end="4:26">{<expr pos:start="4:19" pos:end="4:19"><literal type="number" pos:start="4:19" pos:end="4:19">0</literal></expr>,<expr pos:start="4:21" pos:end="4:21"><literal type="number" pos:start="4:21" pos:end="4:21">1</literal></expr>,<expr pos:start="4:23" pos:end="4:23"><literal type="number" pos:start="4:23" pos:end="4:23">2</literal></expr>,<expr pos:start="4:25" pos:end="4:25"><literal type="number" pos:start="4:25" pos:end="4:25">4</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="23:1"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">void</name></type> <name pos:start="5:6" pos:end="5:6">f</name><parameter_list pos:start="5:7" pos:end="5:19">(<parameter pos:start="5:8" pos:end="5:18"><decl pos:start="5:8" pos:end="5:18"><type pos:start="5:8" pos:end="5:16"><name pos:start="5:8" pos:end="5:11">long</name> <name pos:start="5:13" pos:end="5:16">long</name></type> <name pos:start="5:18" pos:end="5:18">n</name></decl></parameter>)</parameter_list><block pos:start="5:20" pos:end="23:1">{<block_content pos:start="6:5" pos:end="22:5">
    <if_stmt pos:start="6:5" pos:end="9:5"><if pos:start="6:5" pos:end="9:5">if<condition pos:start="6:7" pos:end="6:15">(<expr pos:start="6:8" pos:end="6:14"><name pos:start="6:8" pos:end="6:8">n</name> <operator pos:start="6:10" pos:end="6:11">==</operator> <literal type="number" pos:start="6:13" pos:end="6:14">12</literal></expr>)</condition><block pos:start="6:16" pos:end="9:5">{<block_content pos:start="7:7" pos:end="8:15">
      <expr_stmt pos:start="7:7" pos:end="7:28"><expr pos:start="7:7" pos:end="7:27"><name pos:start="7:7" pos:end="7:10">cout</name> <operator pos:start="7:12" pos:end="7:13">&lt;&lt;</operator><literal type="string" pos:start="7:14" pos:end="7:27">"12, 6, 3, 12"</literal></expr>;</expr_stmt>
        <return pos:start="8:9" pos:end="8:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="10:5" pos:end="13:5"><if pos:start="10:5" pos:end="13:5">if<condition pos:start="10:7" pos:end="10:14">(<expr pos:start="10:8" pos:end="10:13"><name pos:start="10:8" pos:end="10:8">n</name> <operator pos:start="10:10" pos:end="10:11">==</operator> <literal type="number" pos:start="10:13" pos:end="10:13">6</literal></expr>)</condition><block pos:start="10:15" pos:end="13:5">{<block_content pos:start="11:9" pos:end="12:16">
        <expr_stmt pos:start="11:9" pos:end="11:29"><expr pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:12">cout</name> <operator pos:start="11:14" pos:end="11:15">&lt;&lt;</operator><literal type="string" pos:start="11:16" pos:end="11:28">"6, 3, 12, 6"</literal></expr>;</expr_stmt>
        <return pos:start="12:9" pos:end="12:16">return ;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="14:5" pos:end="16:5"><if pos:start="14:5" pos:end="16:5">if<condition pos:start="14:7" pos:end="14:14">(<expr pos:start="14:8" pos:end="14:13"><name pos:start="14:8" pos:end="14:8">n</name> <operator pos:start="14:10" pos:end="14:11">==</operator> <literal type="number" pos:start="14:13" pos:end="14:13">3</literal></expr>)</condition><block pos:start="14:15" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:29">
        <expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:12">cout</name> <operator pos:start="15:14" pos:end="15:15">&lt;&lt;</operator><literal type="string" pos:start="15:16" pos:end="15:28">"3, 12, 6, 3"</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:8">cout</name> <operator pos:start="17:10" pos:end="17:11">&lt;&lt;</operator> <name pos:start="17:13" pos:end="17:13">n</name> <operator pos:start="17:15" pos:end="17:16">&lt;&lt;</operator><literal type="string" pos:start="17:17" pos:end="17:19">","</literal> <operator pos:start="17:21" pos:end="17:22">&lt;&lt;</operator> <literal type="string" pos:start="17:24" pos:end="17:26">" "</literal></expr>;</expr_stmt>
    <if_stmt pos:start="18:5" pos:end="22:5"><if pos:start="18:5" pos:end="20:5">if<condition pos:start="18:7" pos:end="18:18">(<expr pos:start="18:8" pos:end="18:17"><name pos:start="18:8" pos:end="18:8">n</name> <operator pos:start="18:10" pos:end="18:10">%</operator> <literal type="number" pos:start="18:12" pos:end="18:12">2</literal> <operator pos:start="18:14" pos:end="18:15">!=</operator> <literal type="number" pos:start="18:17" pos:end="18:17">0</literal></expr>)</condition><block pos:start="18:19" pos:end="20:5">{<block_content pos:start="19:9" pos:end="19:21">
        <expr_stmt pos:start="19:9" pos:end="19:21"><expr pos:start="19:9" pos:end="19:20"><call pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:9">f</name><argument_list pos:start="19:10" pos:end="19:20">(<argument pos:start="19:11" pos:end="19:19"><expr pos:start="19:11" pos:end="19:19"><literal type="number" pos:start="19:11" pos:end="19:11">3</literal> <operator pos:start="19:13" pos:end="19:13">*</operator> <name pos:start="19:15" pos:end="19:15">n</name> <operator pos:start="19:17" pos:end="19:17">+</operator> <literal type="number" pos:start="19:19" pos:end="19:19">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="20:6" pos:end="22:5">else<block pos:start="20:10" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:17">
        <expr_stmt pos:start="21:9" pos:end="21:17"><expr pos:start="21:9" pos:end="21:16"><call pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:9">f</name><argument_list pos:start="21:10" pos:end="21:16">(<argument pos:start="21:11" pos:end="21:15"><expr pos:start="21:11" pos:end="21:15"><name pos:start="21:11" pos:end="21:11">n</name> <operator pos:start="21:13" pos:end="21:13">/</operator> <literal type="number" pos:start="21:15" pos:end="21:15">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="24:1" pos:end="29:1"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:8">main</name><parameter_list pos:start="24:9" pos:end="24:10">()</parameter_list> <block pos:start="24:12" pos:end="29:1">{<block_content pos:start="25:5" pos:end="28:13">
    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:13"><expr pos:start="26:5" pos:end="26:12"><name pos:start="26:5" pos:end="26:7">cin</name> <operator pos:start="26:9" pos:end="26:10">&gt;&gt;</operator> <name pos:start="26:12" pos:end="26:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:9"><expr pos:start="27:5" pos:end="27:8"><call pos:start="27:5" pos:end="27:8"><name pos:start="27:5" pos:end="27:5">f</name><argument_list pos:start="27:6" pos:end="27:8">(<argument pos:start="27:7" pos:end="27:7"><expr pos:start="27:7" pos:end="27:7"><name pos:start="27:7" pos:end="27:7">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="28:5" pos:end="28:13">return <expr pos:start="28:12" pos:end="28:12"><literal type="number" pos:start="28:12" pos:end="28:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
