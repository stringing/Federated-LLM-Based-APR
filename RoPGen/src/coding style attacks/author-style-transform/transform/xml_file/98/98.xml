<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/98/98.cpp" pos:tabs="8">














<cpp:include pos:start="16:1" pos:end="16:19">#<cpp:directive pos:start="16:2" pos:end="16:8">include</cpp:directive> <cpp:file pos:start="16:10" pos:end="16:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="17:1" pos:end="17:17">#<cpp:directive pos:start="17:2" pos:end="17:8">include</cpp:directive> <cpp:file pos:start="17:10" pos:end="17:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="18:1" pos:end="18:16">#<cpp:directive pos:start="18:2" pos:end="18:8">include</cpp:directive> <cpp:file pos:start="18:10" pos:end="18:16">&lt;cmath&gt;</cpp:file></cpp:include>
<using pos:start="19:1" pos:end="19:20">using <namespace pos:start="19:7" pos:end="19:20">namespace <name pos:start="19:17" pos:end="19:19">std</name>;</namespace></using>
<function pos:start="20:1" pos:end="39:1"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:8">main</name><parameter_list pos:start="20:9" pos:end="20:10">()</parameter_list> <block pos:start="20:12" pos:end="39:1">{<block_content pos:start="21:5" pos:end="38:13">
    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><call pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:11">freopen</name><argument_list pos:start="21:12" pos:end="21:36">(<argument pos:start="21:13" pos:end="21:23"><expr pos:start="21:13" pos:end="21:23"><literal type="string" pos:start="21:13" pos:end="21:23">"square.in"</literal></expr></argument>, <argument pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><literal type="string" pos:start="21:26" pos:end="21:28">"r"</literal></expr></argument>, <argument pos:start="21:31" pos:end="21:35"><expr pos:start="21:31" pos:end="21:35"><name pos:start="21:31" pos:end="21:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:39"><expr pos:start="22:5" pos:end="22:38"><call pos:start="22:5" pos:end="22:38"><name pos:start="22:5" pos:end="22:11">freopen</name><argument_list pos:start="22:12" pos:end="22:38">(<argument pos:start="22:13" pos:end="22:24"><expr pos:start="22:13" pos:end="22:24"><literal type="string" pos:start="22:13" pos:end="22:24">"square.out"</literal></expr></argument>, <argument pos:start="22:27" pos:end="22:29"><expr pos:start="22:27" pos:end="22:29"><literal type="string" pos:start="22:27" pos:end="22:29">"w"</literal></expr></argument>, <argument pos:start="22:32" pos:end="22:37"><expr pos:start="22:32" pos:end="22:37"><name pos:start="22:32" pos:end="22:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="23:5" pos:end="23:10"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">N</name></decl>;</decl_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:13"><expr pos:start="24:5" pos:end="24:12"><name pos:start="24:5" pos:end="24:7">cin</name> <operator pos:start="24:9" pos:end="24:10">&gt;&gt;</operator> <name pos:start="24:12" pos:end="24:12">N</name></expr>;</expr_stmt>
    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:16"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:12">flag</name> <init pos:start="25:14" pos:end="25:16">= <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="26:5" pos:end="37:5">for <control pos:start="26:9" pos:end="26:36">(<init pos:start="26:10" pos:end="26:19"><decl pos:start="26:10" pos:end="26:18"><type pos:start="26:10" pos:end="26:12"><name pos:start="26:10" pos:end="26:12">int</name></type> <name pos:start="26:14" pos:end="26:14">i</name> <init pos:start="26:16" pos:end="26:18">= <expr pos:start="26:18" pos:end="26:18"><literal type="number" pos:start="26:18" pos:end="26:18">0</literal></expr></init></decl>;</init> <condition pos:start="26:21" pos:end="26:31"><expr pos:start="26:21" pos:end="26:30"><name pos:start="26:21" pos:end="26:21">i</name> <operator pos:start="26:23" pos:end="26:23">*</operator> <name pos:start="26:25" pos:end="26:25">i</name> <operator pos:start="26:27" pos:end="26:28">&lt;=</operator> <name pos:start="26:30" pos:end="26:30">N</name></expr>;</condition> <incr pos:start="26:33" pos:end="26:35"><expr pos:start="26:33" pos:end="26:35"><name pos:start="26:33" pos:end="26:33">i</name><operator pos:start="26:34" pos:end="26:35">++</operator></expr></incr>)</control> <block pos:start="26:38" pos:end="37:5">{<block_content pos:start="27:9" pos:end="36:9">
        <for pos:start="27:9" pos:end="36:9">for <control pos:start="27:13" pos:end="27:40">(<init pos:start="27:14" pos:end="27:23"><decl pos:start="27:14" pos:end="27:22"><type pos:start="27:14" pos:end="27:16"><name pos:start="27:14" pos:end="27:16">int</name></type> <name pos:start="27:18" pos:end="27:18">j</name> <init pos:start="27:20" pos:end="27:22">= <expr pos:start="27:22" pos:end="27:22"><name pos:start="27:22" pos:end="27:22">i</name></expr></init></decl>;</init> <condition pos:start="27:25" pos:end="27:35"><expr pos:start="27:25" pos:end="27:34"><name pos:start="27:25" pos:end="27:25">j</name> <operator pos:start="27:27" pos:end="27:27">*</operator> <name pos:start="27:29" pos:end="27:29">j</name> <operator pos:start="27:31" pos:end="27:32">&lt;=</operator> <name pos:start="27:34" pos:end="27:34">N</name></expr>;</condition> <incr pos:start="27:37" pos:end="27:39"><expr pos:start="27:37" pos:end="27:39"><name pos:start="27:37" pos:end="27:37">j</name><operator pos:start="27:38" pos:end="27:39">++</operator></expr></incr>)</control> <block pos:start="27:42" pos:end="36:9">{<block_content pos:start="28:13" pos:end="35:13">
            <for pos:start="28:13" pos:end="35:13">for <control pos:start="28:17" pos:end="28:44">(<init pos:start="28:18" pos:end="28:27"><decl pos:start="28:18" pos:end="28:26"><type pos:start="28:18" pos:end="28:20"><name pos:start="28:18" pos:end="28:20">int</name></type> <name pos:start="28:22" pos:end="28:22">k</name> <init pos:start="28:24" pos:end="28:26">= <expr pos:start="28:26" pos:end="28:26"><name pos:start="28:26" pos:end="28:26">j</name></expr></init></decl>;</init> <condition pos:start="28:29" pos:end="28:39"><expr pos:start="28:29" pos:end="28:38"><name pos:start="28:29" pos:end="28:29">k</name> <operator pos:start="28:31" pos:end="28:31">*</operator> <name pos:start="28:33" pos:end="28:33">k</name> <operator pos:start="28:35" pos:end="28:36">&lt;=</operator> <name pos:start="28:38" pos:end="28:38">N</name></expr>;</condition> <incr pos:start="28:41" pos:end="28:43"><expr pos:start="28:41" pos:end="28:43"><name pos:start="28:41" pos:end="28:41">k</name><operator pos:start="28:42" pos:end="28:43">++</operator></expr></incr>)</control> <block pos:start="28:46" pos:end="35:13">{<block_content pos:start="29:17" pos:end="34:17">
                <decl_stmt pos:start="29:17" pos:end="29:56"><decl pos:start="29:17" pos:end="29:55"><type pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:19">int</name></type> <name pos:start="29:21" pos:end="29:21">d</name> <init pos:start="29:23" pos:end="29:55">= <expr pos:start="29:25" pos:end="29:55"><call pos:start="29:25" pos:end="29:55"><name pos:start="29:25" pos:end="29:28">sqrt</name><argument_list pos:start="29:29" pos:end="29:55">(<argument pos:start="29:30" pos:end="29:54"><expr pos:start="29:30" pos:end="29:54"><name pos:start="29:30" pos:end="29:30">N</name> <operator pos:start="29:32" pos:end="29:32">-</operator> <name pos:start="29:34" pos:end="29:34">i</name> <operator pos:start="29:36" pos:end="29:36">*</operator> <name pos:start="29:38" pos:end="29:38">i</name> <operator pos:start="29:40" pos:end="29:40">-</operator> <name pos:start="29:42" pos:end="29:42">j</name> <operator pos:start="29:44" pos:end="29:44">*</operator> <name pos:start="29:46" pos:end="29:46">j</name> <operator pos:start="29:48" pos:end="29:48">-</operator> <name pos:start="29:50" pos:end="29:50">k</name> <operator pos:start="29:52" pos:end="29:52">*</operator> <name pos:start="29:54" pos:end="29:54">k</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="30:17" pos:end="34:17"><if pos:start="30:17" pos:end="34:17">if <condition pos:start="30:20" pos:end="30:55">(<expr pos:start="30:21" pos:end="30:54"><name pos:start="30:21" pos:end="30:21">i</name> <operator pos:start="30:23" pos:end="30:23">*</operator> <name pos:start="30:25" pos:end="30:25">i</name> <operator pos:start="30:27" pos:end="30:27">+</operator> <name pos:start="30:29" pos:end="30:29">j</name> <operator pos:start="30:31" pos:end="30:31">*</operator> <name pos:start="30:33" pos:end="30:33">j</name> <operator pos:start="30:35" pos:end="30:35">+</operator> <name pos:start="30:37" pos:end="30:37">k</name> <operator pos:start="30:39" pos:end="30:39">*</operator> <name pos:start="30:41" pos:end="30:41">k</name> <operator pos:start="30:43" pos:end="30:43">+</operator> <name pos:start="30:45" pos:end="30:45">d</name> <operator pos:start="30:47" pos:end="30:47">*</operator> <name pos:start="30:49" pos:end="30:49">d</name> <operator pos:start="30:51" pos:end="30:52">==</operator> <name pos:start="30:54" pos:end="30:54">N</name></expr>)</condition> <block pos:start="30:57" pos:end="34:17">{<block_content pos:start="31:21" pos:end="33:26">
                    <expr_stmt pos:start="31:21" pos:end="31:29"><expr pos:start="31:21" pos:end="31:28"><name pos:start="31:21" pos:end="31:24">flag</name> <operator pos:start="31:26" pos:end="31:26">=</operator> <literal type="number" pos:start="31:28" pos:end="31:28">1</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="32:21" pos:end="32:73"><expr pos:start="32:21" pos:end="32:72"><name pos:start="32:21" pos:end="32:24">cout</name> <operator pos:start="32:26" pos:end="32:27">&lt;&lt;</operator> <name pos:start="32:29" pos:end="32:29">i</name> <operator pos:start="32:31" pos:end="32:32">&lt;&lt;</operator> <literal type="string" pos:start="32:34" pos:end="32:36">" "</literal> <operator pos:start="32:38" pos:end="32:39">&lt;&lt;</operator> <name pos:start="32:41" pos:end="32:41">j</name> <operator pos:start="32:43" pos:end="32:44">&lt;&lt;</operator> <literal type="string" pos:start="32:46" pos:end="32:48">" "</literal> <operator pos:start="32:50" pos:end="32:51">&lt;&lt;</operator> <name pos:start="32:53" pos:end="32:53">k</name> <operator pos:start="32:55" pos:end="32:56">&lt;&lt;</operator> <literal type="string" pos:start="32:58" pos:end="32:60">" "</literal><operator pos:start="32:61" pos:end="32:62">&lt;&lt;</operator> <name pos:start="32:64" pos:end="32:64">d</name> <operator pos:start="32:66" pos:end="32:67">&lt;&lt;</operator> <name pos:start="32:69" pos:end="32:72">endl</name></expr>;</expr_stmt>
                    <break pos:start="33:21" pos:end="33:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <return pos:start="38:5" pos:end="38:13">return <expr pos:start="38:12" pos:end="38:12"><literal type="number" pos:start="38:12" pos:end="38:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
