<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/12/12.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:17">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:17">&lt;cstring&gt;</cpp:file></cpp:include>
<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<function pos:start="6:1" pos:end="36:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list><block pos:start="6:11" pos:end="36:1">{<block_content pos:start="7:5" pos:end="35:5">
    <expr_stmt pos:start="7:5" pos:end="7:30"><expr pos:start="7:5" pos:end="7:29"><call pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:29">(<argument pos:start="7:13" pos:end="7:18"><expr pos:start="7:13" pos:end="7:18"><literal type="string" pos:start="7:13" pos:end="7:18">"p.in"</literal></expr></argument>,<argument pos:start="7:20" pos:end="7:22"><expr pos:start="7:20" pos:end="7:22"><literal type="string" pos:start="7:20" pos:end="7:22">"r"</literal></expr></argument>,<argument pos:start="7:24" pos:end="7:28"><expr pos:start="7:24" pos:end="7:28"><name pos:start="7:24" pos:end="7:28">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:32"><expr pos:start="8:5" pos:end="8:31"><call pos:start="8:5" pos:end="8:31"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:31">(<argument pos:start="8:13" pos:end="8:19"><expr pos:start="8:13" pos:end="8:19"><literal type="string" pos:start="8:13" pos:end="8:19">"p.out"</literal></expr></argument>,<argument pos:start="8:21" pos:end="8:23"><expr pos:start="8:21" pos:end="8:23"><literal type="string" pos:start="8:21" pos:end="8:23">"w"</literal></expr></argument>,<argument pos:start="8:25" pos:end="8:30"><expr pos:start="8:25" pos:end="8:30"><name pos:start="8:25" pos:end="8:30">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:11"><expr pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:7">cin</name><operator pos:start="10:8" pos:end="10:9">&gt;&gt;</operator><name pos:start="10:10" pos:end="10:10">t</name></expr>;</expr_stmt>
    <for pos:start="11:5" pos:end="35:5">for <control pos:start="11:9" pos:end="11:25">(<init pos:start="11:10" pos:end="11:17"><decl pos:start="11:10" pos:end="11:16"><type pos:start="11:10" pos:end="11:12"><name pos:start="11:10" pos:end="11:12">int</name></type> <name pos:start="11:14" pos:end="11:14">i</name><init pos:start="11:15" pos:end="11:16">=<expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">0</literal></expr></init></decl>;</init><condition pos:start="11:18" pos:end="11:21"><expr pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:18">i</name><operator pos:start="11:19" pos:end="11:19">&lt;</operator><name pos:start="11:20" pos:end="11:20">t</name></expr>;</condition><incr pos:start="11:22" pos:end="11:24"><expr pos:start="11:22" pos:end="11:24"><name pos:start="11:22" pos:end="11:22">i</name><operator pos:start="11:23" pos:end="11:24">++</operator></expr></incr>)</control><block pos:start="11:26" pos:end="35:5">{<block_content pos:start="12:9" pos:end="34:24">
        <decl_stmt pos:start="12:9" pos:end="12:28"><decl pos:start="12:9" pos:end="12:27"><type pos:start="12:9" pos:end="12:19"><name pos:start="12:9" pos:end="12:19"><name pos:start="12:9" pos:end="12:14">vector</name><argument_list type="generic" pos:start="12:15" pos:end="12:19">&lt;<argument pos:start="12:16" pos:end="12:18"><expr pos:start="12:16" pos:end="12:18"><name pos:start="12:16" pos:end="12:18">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="12:21" pos:end="12:27"><name pos:start="12:21" pos:end="12:21">G</name><index pos:start="12:22" pos:end="12:27">[<expr pos:start="12:23" pos:end="12:26"><literal type="number" pos:start="12:23" pos:end="12:26">1005</literal></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="13:9" pos:end="13:14"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">n</name></decl>;</decl_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:15"><expr pos:start="14:9" pos:end="14:14"><name pos:start="14:9" pos:end="14:11">cin</name><operator pos:start="14:12" pos:end="14:13">&gt;&gt;</operator><name pos:start="14:14" pos:end="14:14">n</name></expr>;</expr_stmt>
        <for pos:start="15:9" pos:end="20:9">for <control pos:start="15:13" pos:end="15:32">(<init pos:start="15:14" pos:end="15:21"><decl pos:start="15:14" pos:end="15:20"><type pos:start="15:14" pos:end="15:16"><name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:18">i</name><init pos:start="15:19" pos:end="15:20">=<expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">1</literal></expr></init></decl>;</init><condition pos:start="15:22" pos:end="15:28"><expr pos:start="15:22" pos:end="15:27"><name pos:start="15:22" pos:end="15:22">i</name><operator pos:start="15:23" pos:end="15:24">&lt;=</operator><name pos:start="15:25" pos:end="15:25">n</name><operator pos:start="15:26" pos:end="15:26">-</operator><literal type="number" pos:start="15:27" pos:end="15:27">1</literal></expr>;</condition><incr pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:29">i</name><operator pos:start="15:30" pos:end="15:31">++</operator></expr></incr>)</control><block pos:start="15:33" pos:end="20:9">{<block_content pos:start="16:13" pos:end="19:30">
            <decl_stmt pos:start="16:13" pos:end="16:20"><decl pos:start="16:13" pos:end="16:17"><type pos:start="16:13" pos:end="16:15"><name pos:start="16:13" pos:end="16:15">int</name></type> <name pos:start="16:17" pos:end="16:17">x</name></decl>,<decl pos:start="16:19" pos:end="16:19"><type ref="prev" pos:start="16:13" pos:end="16:15"/><name pos:start="16:19" pos:end="16:19">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:22"><expr pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:15">cin</name><operator pos:start="17:16" pos:end="17:17">&gt;&gt;</operator><name pos:start="17:18" pos:end="17:18">x</name><operator pos:start="17:19" pos:end="17:20">&gt;&gt;</operator><name pos:start="17:21" pos:end="17:21">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:30"><expr pos:start="18:13" pos:end="18:29"><name pos:start="18:13" pos:end="18:16"><name pos:start="18:13" pos:end="18:13">G</name><index pos:start="18:14" pos:end="18:16">[<expr pos:start="18:15" pos:end="18:15"><name pos:start="18:15" pos:end="18:15">x</name></expr>]</index></name><operator pos:start="18:17" pos:end="18:17">.</operator><call pos:start="18:18" pos:end="18:29"><name pos:start="18:18" pos:end="18:26">push_back</name><argument_list pos:start="18:27" pos:end="18:29">(<argument pos:start="18:28" pos:end="18:28"><expr pos:start="18:28" pos:end="18:28"><name pos:start="18:28" pos:end="18:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:30"><expr pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:13">G</name><index pos:start="19:14" pos:end="19:16">[<expr pos:start="19:15" pos:end="19:15"><name pos:start="19:15" pos:end="19:15">y</name></expr>]</index></name><operator pos:start="19:17" pos:end="19:17">.</operator><call pos:start="19:18" pos:end="19:29"><name pos:start="19:18" pos:end="19:26">push_back</name><argument_list pos:start="19:27" pos:end="19:29">(<argument pos:start="19:28" pos:end="19:28"><expr pos:start="19:28" pos:end="19:28"><name pos:start="19:28" pos:end="19:28">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="21:9" pos:end="21:18"><decl pos:start="21:9" pos:end="21:17"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:15">cnt</name><init pos:start="21:16" pos:end="21:17">=<expr pos:start="21:17" pos:end="21:17"><literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="22:9" pos:end="33:9">for <control pos:start="22:13" pos:end="22:30">(<init pos:start="22:14" pos:end="22:21"><decl pos:start="22:14" pos:end="22:20"><type pos:start="22:14" pos:end="22:16"><name pos:start="22:14" pos:end="22:16">int</name></type> <name pos:start="22:18" pos:end="22:18">i</name><init pos:start="22:19" pos:end="22:20">=<expr pos:start="22:20" pos:end="22:20"><literal type="number" pos:start="22:20" pos:end="22:20">1</literal></expr></init></decl>;</init><condition pos:start="22:22" pos:end="22:26"><expr pos:start="22:22" pos:end="22:25"><name pos:start="22:22" pos:end="22:22">i</name><operator pos:start="22:23" pos:end="22:24">&lt;=</operator><name pos:start="22:25" pos:end="22:25">n</name></expr>;</condition><incr pos:start="22:27" pos:end="22:29"><expr pos:start="22:27" pos:end="22:29"><name pos:start="22:27" pos:end="22:27">i</name><operator pos:start="22:28" pos:end="22:29">++</operator></expr></incr>)</control><block pos:start="22:31" pos:end="33:9">{<block_content pos:start="23:13" pos:end="32:13">
            <decl_stmt pos:start="23:13" pos:end="23:25"><decl pos:start="23:13" pos:end="23:24"><type pos:start="23:13" pos:end="23:16"><name pos:start="23:13" pos:end="23:16">bool</name></type> <name pos:start="23:18" pos:end="23:19">ad</name><init pos:start="23:20" pos:end="23:24">=<expr pos:start="23:21" pos:end="23:24"><literal type="boolean" pos:start="23:21" pos:end="23:24">true</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="24:13" pos:end="29:13">for <control pos:start="24:17" pos:end="24:43">(<init pos:start="24:18" pos:end="24:25"><decl pos:start="24:18" pos:end="24:24"><type pos:start="24:18" pos:end="24:20"><name pos:start="24:18" pos:end="24:20">int</name></type> <name pos:start="24:22" pos:end="24:22">j</name><init pos:start="24:23" pos:end="24:24">=<expr pos:start="24:24" pos:end="24:24"><literal type="number" pos:start="24:24" pos:end="24:24">0</literal></expr></init></decl>;</init><condition pos:start="24:26" pos:end="24:39"><expr pos:start="24:26" pos:end="24:38"><name pos:start="24:26" pos:end="24:26">j</name><operator pos:start="24:27" pos:end="24:27">&lt;</operator><name pos:start="24:28" pos:end="24:31"><name pos:start="24:28" pos:end="24:28">G</name><index pos:start="24:29" pos:end="24:31">[<expr pos:start="24:30" pos:end="24:30"><name pos:start="24:30" pos:end="24:30">i</name></expr>]</index></name><operator pos:start="24:32" pos:end="24:32">.</operator><call pos:start="24:33" pos:end="24:38"><name pos:start="24:33" pos:end="24:36">size</name><argument_list pos:start="24:37" pos:end="24:38">()</argument_list></call></expr>;</condition><incr pos:start="24:40" pos:end="24:42"><expr pos:start="24:40" pos:end="24:42"><name pos:start="24:40" pos:end="24:40">j</name><operator pos:start="24:41" pos:end="24:42">++</operator></expr></incr>)</control><block pos:start="24:44" pos:end="29:13">{<block_content pos:start="25:17" pos:end="28:17">
                <if_stmt pos:start="25:17" pos:end="28:17"><if pos:start="25:17" pos:end="28:17">if <condition pos:start="25:20" pos:end="25:50">(<expr pos:start="25:21" pos:end="25:49"><name pos:start="25:21" pos:end="25:30"><name pos:start="25:21" pos:end="25:21">G</name><index pos:start="25:22" pos:end="25:30">[<expr pos:start="25:23" pos:end="25:29"><name pos:start="25:23" pos:end="25:29"><name pos:start="25:23" pos:end="25:23">G</name><index pos:start="25:24" pos:end="25:26">[<expr pos:start="25:25" pos:end="25:25"><name pos:start="25:25" pos:end="25:25">i</name></expr>]</index><index pos:start="25:27" pos:end="25:29">[<expr pos:start="25:28" pos:end="25:28"><name pos:start="25:28" pos:end="25:28">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="25:31" pos:end="25:31">.</operator><call pos:start="25:32" pos:end="25:37"><name pos:start="25:32" pos:end="25:35">size</name><argument_list pos:start="25:36" pos:end="25:37">()</argument_list></call><operator pos:start="25:38" pos:end="25:38">&gt;</operator><name pos:start="25:39" pos:end="25:42"><name pos:start="25:39" pos:end="25:39">G</name><index pos:start="25:40" pos:end="25:42">[<expr pos:start="25:41" pos:end="25:41"><name pos:start="25:41" pos:end="25:41">i</name></expr>]</index></name><operator pos:start="25:43" pos:end="25:43">.</operator><call pos:start="25:44" pos:end="25:49"><name pos:start="25:44" pos:end="25:47">size</name><argument_list pos:start="25:48" pos:end="25:49">()</argument_list></call></expr>)</condition><block pos:start="25:51" pos:end="28:17">{<block_content pos:start="26:21" pos:end="27:26">
                    <expr_stmt pos:start="26:21" pos:end="26:29"><expr pos:start="26:21" pos:end="26:28"><name pos:start="26:21" pos:end="26:22">ad</name><operator pos:start="26:23" pos:end="26:23">=</operator><literal type="boolean" pos:start="26:24" pos:end="26:28">false</literal></expr>;</expr_stmt>
                    <break pos:start="27:21" pos:end="27:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="30:13" pos:end="32:13"><if pos:start="30:13" pos:end="32:13">if <condition pos:start="30:16" pos:end="30:19">(<expr pos:start="30:17" pos:end="30:18"><name pos:start="30:17" pos:end="30:18">ad</name></expr>)</condition><block pos:start="30:20" pos:end="32:13">{<block_content pos:start="31:17" pos:end="31:22">
                <expr_stmt pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:19">cnt</name><operator pos:start="31:20" pos:end="31:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="34:9" pos:end="34:24"><expr pos:start="34:9" pos:end="34:23"><name pos:start="34:9" pos:end="34:12">cout</name><operator pos:start="34:13" pos:end="34:14">&lt;&lt;</operator><name pos:start="34:15" pos:end="34:17">cnt</name><operator pos:start="34:18" pos:end="34:19">&lt;&lt;</operator><name pos:start="34:20" pos:end="34:23">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
</unit>
