<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/190/190.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:13"><decl pos:start="4:1" pos:end="4:12"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:12"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:12">[<expr pos:start="4:7" pos:end="4:11"><literal type="number" pos:start="4:7" pos:end="4:11">10001</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="13:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:7">sum</name> <parameter_list pos:start="5:9" pos:end="5:15">(<parameter pos:start="5:10" pos:end="5:14"><decl pos:start="5:10" pos:end="5:14"><type pos:start="5:10" pos:end="5:12"><name pos:start="5:10" pos:end="5:12">int</name></type> <name pos:start="5:14" pos:end="5:14">x</name></decl></parameter>)</parameter_list> <block pos:start="5:17" pos:end="13:1">{<block_content pos:start="6:5" pos:end="12:15">
    <decl_stmt pos:start="6:5" pos:end="6:16"><decl pos:start="6:5" pos:end="6:15"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">ans</name> <init pos:start="6:13" pos:end="6:15">= <expr pos:start="6:15" pos:end="6:15"><literal type="number" pos:start="6:15" pos:end="6:15">0</literal></expr></init></decl>;</decl_stmt>
<while pos:start="7:1" pos:end="10:1">while <condition pos:start="7:7" pos:end="7:9">(<expr pos:start="7:8" pos:end="7:8"><name pos:start="7:8" pos:end="7:8">x</name></expr>)</condition> <block pos:start="7:11" pos:end="10:1">{<block_content pos:start="8:5" pos:end="9:12">
    <expr_stmt pos:start="8:5" pos:end="8:18"><expr pos:start="8:5" pos:end="8:17"><name pos:start="8:5" pos:end="8:7">ans</name> <operator pos:start="8:9" pos:end="8:10">+=</operator> <name pos:start="8:12" pos:end="8:12">x</name> <operator pos:start="8:14" pos:end="8:14">%</operator> <literal type="number" pos:start="8:16" pos:end="8:17">10</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:12"><expr pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:5">x</name> <operator pos:start="9:7" pos:end="9:8">/=</operator> <literal type="number" pos:start="9:10" pos:end="9:11">10</literal></expr>;</expr_stmt>
</block_content>}</block></while>

    <return pos:start="12:5" pos:end="12:15">return <expr pos:start="12:12" pos:end="12:14"><name pos:start="12:12" pos:end="12:14">ans</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="14:1" pos:end="23:1"><type pos:start="14:1" pos:end="14:4"><name pos:start="14:1" pos:end="14:4">bool</name></type> <name pos:start="14:6" pos:end="14:8">cmp</name> <parameter_list pos:start="14:10" pos:end="14:23">(<parameter pos:start="14:11" pos:end="14:15"><decl pos:start="14:11" pos:end="14:15"><type pos:start="14:11" pos:end="14:15"><name pos:start="14:11" pos:end="14:13">int</name></type> <name pos:start="14:15" pos:end="14:15">x</name></decl></parameter>, <parameter pos:start="14:18" pos:end="14:22"><decl pos:start="14:18" pos:end="14:22"><type pos:start="14:18" pos:end="14:22"><name pos:start="14:18" pos:end="14:20">int</name></type> <name pos:start="14:22" pos:end="14:22">y</name></decl></parameter>)</parameter_list> <block pos:start="14:25" pos:end="23:1">{<block_content pos:start="15:5" pos:end="21:17">
    <if_stmt pos:start="15:5" pos:end="17:5"><if pos:start="15:5" pos:end="17:5">if <condition pos:start="15:8" pos:end="15:25">(<expr pos:start="15:9" pos:end="15:24"><call pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:11">sum</name><argument_list pos:start="15:12" pos:end="15:14">(<argument pos:start="15:13" pos:end="15:13"><expr pos:start="15:13" pos:end="15:13"><name pos:start="15:13" pos:end="15:13">x</name></expr></argument>)</argument_list></call> <operator pos:start="15:16" pos:end="15:17">!=</operator> <call pos:start="15:19" pos:end="15:24"><name pos:start="15:19" pos:end="15:21">sum</name><argument_list pos:start="15:22" pos:end="15:24">(<argument pos:start="15:23" pos:end="15:23"><expr pos:start="15:23" pos:end="15:23"><name pos:start="15:23" pos:end="15:23">y</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:27" pos:end="17:5">{<block_content pos:start="16:9" pos:end="16:31">
        <return pos:start="16:9" pos:end="16:31">return <expr pos:start="16:16" pos:end="16:30"><call pos:start="16:16" pos:end="16:21"><name pos:start="16:16" pos:end="16:18">sum</name><argument_list pos:start="16:19" pos:end="16:21">(<argument pos:start="16:20" pos:end="16:20"><expr pos:start="16:20" pos:end="16:20"><name pos:start="16:20" pos:end="16:20">x</name></expr></argument>)</argument_list></call> <operator pos:start="16:23" pos:end="16:23">&lt;</operator> <call pos:start="16:25" pos:end="16:30"><name pos:start="16:25" pos:end="16:27">sum</name><argument_list pos:start="16:28" pos:end="16:30">(<argument pos:start="16:29" pos:end="16:29"><expr pos:start="16:29" pos:end="16:29"><name pos:start="16:29" pos:end="16:29">y</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="18:5" pos:end="20:5"><if pos:start="18:5" pos:end="20:5">if <condition pos:start="18:8" pos:end="18:23">(<expr pos:start="18:9" pos:end="18:22"><name pos:start="18:9" pos:end="18:9">x</name> <operator pos:start="18:11" pos:end="18:11">%</operator> <literal type="number" pos:start="18:13" pos:end="18:13">2</literal> <operator pos:start="18:15" pos:end="18:16">!=</operator> <name pos:start="18:18" pos:end="18:18">y</name> <operator pos:start="18:20" pos:end="18:20">%</operator> <literal type="number" pos:start="18:22" pos:end="18:22">2</literal></expr>)</condition> <block pos:start="18:25" pos:end="20:5">{<block_content pos:start="19:9" pos:end="19:29">
        <return pos:start="19:9" pos:end="19:29">return <expr pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:16">x</name> <operator pos:start="19:18" pos:end="19:18">%</operator> <literal type="number" pos:start="19:20" pos:end="19:20">2</literal> <operator pos:start="19:22" pos:end="19:22">&lt;</operator> <name pos:start="19:24" pos:end="19:24">y</name> <operator pos:start="19:26" pos:end="19:26">%</operator> <literal type="number" pos:start="19:28" pos:end="19:28">2</literal></expr>;</return>    
    </block_content>}</block></if></if_stmt>
    <return pos:start="21:5" pos:end="21:17">return <expr pos:start="21:12" pos:end="21:16"><name pos:start="21:12" pos:end="21:12">x</name> <operator pos:start="21:14" pos:end="21:14">&lt;</operator> <name pos:start="21:16" pos:end="21:16">y</name></expr>;</return>

</block_content>}</block></function>
<function pos:start="24:1" pos:end="35:1"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:8">main</name><parameter_list pos:start="24:9" pos:end="24:10">()</parameter_list> <block pos:start="24:12" pos:end="35:1">{<block_content pos:start="25:5" pos:end="34:13">
    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:13"><expr pos:start="26:5" pos:end="26:12"><name pos:start="26:5" pos:end="26:7">cin</name> <operator pos:start="26:9" pos:end="26:10">&gt;&gt;</operator> <name pos:start="26:12" pos:end="26:12">n</name></expr>;</expr_stmt>
    <for pos:start="27:5" pos:end="29:5">for <control pos:start="27:9" pos:end="27:31">(<init pos:start="27:10" pos:end="27:19"><decl pos:start="27:10" pos:end="27:18"><type pos:start="27:10" pos:end="27:12"><name pos:start="27:10" pos:end="27:12">int</name></type> <name pos:start="27:14" pos:end="27:14">i</name> <init pos:start="27:16" pos:end="27:18">= <expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr></init></decl>;</init> <condition pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:21">i</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <name pos:start="27:25" pos:end="27:25">n</name></expr>;</condition> <incr pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:28">i</name><operator pos:start="27:29" pos:end="27:30">++</operator></expr></incr>)</control> <block pos:start="27:33" pos:end="29:5">{<block_content pos:start="28:9" pos:end="28:20">
        <expr_stmt pos:start="28:9" pos:end="28:20"><expr pos:start="28:9" pos:end="28:19"><name pos:start="28:9" pos:end="28:11">cin</name> <operator pos:start="28:13" pos:end="28:14">&gt;&gt;</operator> <name pos:start="28:16" pos:end="28:19"><name pos:start="28:16" pos:end="28:16">a</name><index pos:start="28:17" pos:end="28:19">[<expr pos:start="28:18" pos:end="28:18"><name pos:start="28:18" pos:end="28:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="30:5" pos:end="30:24"><expr pos:start="30:5" pos:end="30:23"><call pos:start="30:5" pos:end="30:23"><name pos:start="30:5" pos:end="30:8">sort</name><argument_list pos:start="30:9" pos:end="30:23">(<argument pos:start="30:10" pos:end="30:10"><expr pos:start="30:10" pos:end="30:10"><name pos:start="30:10" pos:end="30:10">a</name></expr></argument>, <argument pos:start="30:13" pos:end="30:17"><expr pos:start="30:13" pos:end="30:17"><name pos:start="30:13" pos:end="30:13">a</name> <operator pos:start="30:15" pos:end="30:15">+</operator> <name pos:start="30:17" pos:end="30:17">n</name></expr></argument>, <argument pos:start="30:20" pos:end="30:22"><expr pos:start="30:20" pos:end="30:22"><name pos:start="30:20" pos:end="30:22">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="31:5" pos:end="33:5">for <control pos:start="31:9" pos:end="31:31">(<init pos:start="31:10" pos:end="31:19"><decl pos:start="31:10" pos:end="31:18"><type pos:start="31:10" pos:end="31:12"><name pos:start="31:10" pos:end="31:12">int</name></type> <name pos:start="31:14" pos:end="31:14">i</name> <init pos:start="31:16" pos:end="31:18">= <expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr></init></decl>;</init> <condition pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:25">n</name></expr>;</condition> <incr pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:28">i</name><operator pos:start="31:29" pos:end="31:30">++</operator></expr></incr>)</control> <block pos:start="31:33" pos:end="33:5">{<block_content pos:start="32:9" pos:end="32:28">
        <expr_stmt pos:start="32:9" pos:end="32:28"><expr pos:start="32:9" pos:end="32:27"><name pos:start="32:9" pos:end="32:12">cout</name> <operator pos:start="32:14" pos:end="32:15">&lt;&lt;</operator> <name pos:start="32:17" pos:end="32:20"><name pos:start="32:17" pos:end="32:17">a</name><index pos:start="32:18" pos:end="32:20">[<expr pos:start="32:19" pos:end="32:19"><name pos:start="32:19" pos:end="32:19">i</name></expr>]</index></name> <operator pos:start="32:22" pos:end="32:23">&lt;&lt;</operator> <literal type="string" pos:start="32:25" pos:end="32:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="34:5" pos:end="34:13">return <expr pos:start="34:12" pos:end="34:12"><literal type="number" pos:start="34:12" pos:end="34:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
