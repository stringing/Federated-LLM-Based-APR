<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/335/335.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:20">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<decl_stmt pos:start="6:1" pos:end="6:6"><decl pos:start="6:1" pos:end="6:5"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:5">n</name></decl>;</decl_stmt> <decl_stmt pos:start="6:8" pos:end="6:26"><decl pos:start="6:8" pos:end="6:25"><type pos:start="6:8" pos:end="6:10"><name pos:start="6:8" pos:end="6:10">int</name></type> <name pos:start="6:12" pos:end="6:18">minDiff</name> <init pos:start="6:20" pos:end="6:25">= <expr pos:start="6:22" pos:end="6:25"><literal type="number" pos:start="6:22" pos:end="6:25">10e5</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:17"><decl pos:start="7:1" pos:end="7:9"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:5">a</name><index pos:start="7:6" pos:end="7:9">[<expr pos:start="7:7" pos:end="7:8"><literal type="number" pos:start="7:7" pos:end="7:8">15</literal></expr>]</index></name></decl>, <decl pos:start="7:12" pos:end="7:16"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:12" pos:end="7:16"><name pos:start="7:12" pos:end="7:12">b</name><index pos:start="7:13" pos:end="7:16">[<expr pos:start="7:14" pos:end="7:15"><literal type="number" pos:start="7:14" pos:end="7:15">15</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:13"><decl pos:start="8:1" pos:end="8:12"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">bool</name></type> <name pos:start="8:6" pos:end="8:12"><name pos:start="8:6" pos:end="8:8">vis</name><index pos:start="8:9" pos:end="8:12">[<expr pos:start="8:10" pos:end="8:11"><literal type="number" pos:start="8:10" pos:end="8:11">15</literal></expr>]</index></name></decl>;</decl_stmt>

<function pos:start="10:1" pos:end="28:1"><type pos:start="10:1" pos:end="10:4"><name pos:start="10:1" pos:end="10:4">void</name></type> <name pos:start="10:6" pos:end="10:8">dfs</name><parameter_list pos:start="10:9" pos:end="10:24">(<parameter pos:start="10:10" pos:end="10:14"><decl pos:start="10:10" pos:end="10:14"><type pos:start="10:10" pos:end="10:14"><name pos:start="10:10" pos:end="10:12">int</name></type> <name pos:start="10:14" pos:end="10:14">u</name></decl></parameter>, <parameter pos:start="10:17" pos:end="10:23"><decl pos:start="10:17" pos:end="10:23"><type pos:start="10:17" pos:end="10:23"><name pos:start="10:17" pos:end="10:19">int</name></type> <name pos:start="10:21" pos:end="10:23">cnt</name></decl></parameter>)</parameter_list> <block pos:start="10:26" pos:end="28:1">{<block_content pos:start="11:5" pos:end="27:5">
    <if_stmt pos:start="11:5" pos:end="21:5"><if pos:start="11:5" pos:end="21:5">if <condition pos:start="11:8" pos:end="11:15">(<expr pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:9">u</name> <operator pos:start="11:11" pos:end="11:12">==</operator> <name pos:start="11:14" pos:end="11:14">n</name></expr>)</condition> <block pos:start="11:17" pos:end="21:5">{<block_content pos:start="12:9" pos:end="20:15">
        <decl_stmt pos:start="12:9" pos:end="12:40"><decl pos:start="12:9" pos:end="12:24"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:20">angerSum</name> <init pos:start="12:22" pos:end="12:24">= <expr pos:start="12:24" pos:end="12:24"><literal type="number" pos:start="12:24" pos:end="12:24">1</literal></expr></init></decl>, <decl pos:start="12:27" pos:end="12:39"><type ref="prev" pos:start="12:9" pos:end="12:11"/><name pos:start="12:27" pos:end="12:35">temperSum</name> <init pos:start="12:37" pos:end="12:39">= <expr pos:start="12:39" pos:end="12:39"><literal type="number" pos:start="12:39" pos:end="12:39">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="13:9" pos:end="18:9">for <control pos:start="13:13" pos:end="13:35">(<init pos:start="13:14" pos:end="13:23"><decl pos:start="13:14" pos:end="13:22"><type pos:start="13:14" pos:end="13:16"><name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">i</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</init> <condition pos:start="13:25" pos:end="13:30"><expr pos:start="13:25" pos:end="13:29"><name pos:start="13:25" pos:end="13:25">i</name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <name pos:start="13:29" pos:end="13:29">n</name></expr>;</condition> <incr pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:32">i</name><operator pos:start="13:33" pos:end="13:34">++</operator></expr></incr>)</control> <block pos:start="13:37" pos:end="18:9">{<block_content pos:start="14:13" pos:end="17:13">
            <if_stmt pos:start="14:13" pos:end="17:13"><if pos:start="14:13" pos:end="17:13">if <condition pos:start="14:16" pos:end="14:23">(<expr pos:start="14:17" pos:end="14:22"><name pos:start="14:17" pos:end="14:22"><name pos:start="14:17" pos:end="14:19">vis</name><index pos:start="14:20" pos:end="14:22">[<expr pos:start="14:21" pos:end="14:21"><name pos:start="14:21" pos:end="14:21">i</name></expr>]</index></name></expr>)</condition> <block pos:start="14:25" pos:end="17:13">{<block_content pos:start="15:17" pos:end="16:34">
                <expr_stmt pos:start="15:17" pos:end="15:33"><expr pos:start="15:17" pos:end="15:32"><name pos:start="15:17" pos:end="15:24">angerSum</name> <operator pos:start="15:26" pos:end="15:27">*=</operator> <name pos:start="15:29" pos:end="15:32"><name pos:start="15:29" pos:end="15:29">a</name><index pos:start="15:30" pos:end="15:32">[<expr pos:start="15:31" pos:end="15:31"><name pos:start="15:31" pos:end="15:31">i</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="16:17" pos:end="16:34"><expr pos:start="16:17" pos:end="16:33"><name pos:start="16:17" pos:end="16:25">temperSum</name> <operator pos:start="16:27" pos:end="16:28">+=</operator> <name pos:start="16:30" pos:end="16:33"><name pos:start="16:30" pos:end="16:30">b</name><index pos:start="16:31" pos:end="16:33">[<expr pos:start="16:32" pos:end="16:32"><name pos:start="16:32" pos:end="16:32">i</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="19:9" pos:end="19:58"><expr pos:start="19:9" pos:end="19:57"><name pos:start="19:9" pos:end="19:15">minDiff</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:57"><name pos:start="19:19" pos:end="19:21">min</name><argument_list pos:start="19:22" pos:end="19:57">(<argument pos:start="19:23" pos:end="19:29"><expr pos:start="19:23" pos:end="19:29"><name pos:start="19:23" pos:end="19:29">minDiff</name></expr></argument>, <argument pos:start="19:32" pos:end="19:56"><expr pos:start="19:32" pos:end="19:56"><call pos:start="19:32" pos:end="19:56"><name pos:start="19:32" pos:end="19:34">abs</name><argument_list pos:start="19:35" pos:end="19:56">(<argument pos:start="19:36" pos:end="19:55"><expr pos:start="19:36" pos:end="19:55"><name pos:start="19:36" pos:end="19:43">angerSum</name> <operator pos:start="19:45" pos:end="19:45">-</operator> <name pos:start="19:47" pos:end="19:55">temperSum</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="20:9" pos:end="20:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:18"><expr pos:start="22:5" pos:end="22:17"><name pos:start="22:5" pos:end="22:10"><name pos:start="22:5" pos:end="22:7">vis</name><index pos:start="22:8" pos:end="22:10">[<expr pos:start="22:9" pos:end="22:9"><name pos:start="22:9" pos:end="22:9">u</name></expr>]</index></name> <operator pos:start="22:12" pos:end="22:12">=</operator> <literal type="boolean" pos:start="22:14" pos:end="22:17">true</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><call pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:7">dfs</name><argument_list pos:start="23:8" pos:end="23:23">(<argument pos:start="23:9" pos:end="23:13"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">u</name> <operator pos:start="23:11" pos:end="23:11">+</operator> <literal type="number" pos:start="23:13" pos:end="23:13">1</literal></expr></argument>, <argument pos:start="23:16" pos:end="23:22"><expr pos:start="23:16" pos:end="23:22"><name pos:start="23:16" pos:end="23:18">cnt</name> <operator pos:start="23:20" pos:end="23:20">+</operator> <literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:19"><expr pos:start="24:5" pos:end="24:18"><name pos:start="24:5" pos:end="24:10"><name pos:start="24:5" pos:end="24:7">vis</name><index pos:start="24:8" pos:end="24:10">[<expr pos:start="24:9" pos:end="24:9"><name pos:start="24:9" pos:end="24:9">u</name></expr>]</index></name> <operator pos:start="24:12" pos:end="24:12">=</operator> <literal type="boolean" pos:start="24:14" pos:end="24:18">false</literal></expr>;</expr_stmt>
    <if_stmt pos:start="25:5" pos:end="27:5"><if pos:start="25:5" pos:end="27:5">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:11">cnt</name> <operator pos:start="25:13" pos:end="25:14">!=</operator> <literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>)</condition> <block pos:start="25:19" pos:end="27:5">{<block_content pos:start="26:9" pos:end="26:24">
        <expr_stmt pos:start="26:9" pos:end="26:24"><expr pos:start="26:9" pos:end="26:23"><call pos:start="26:9" pos:end="26:23"><name pos:start="26:9" pos:end="26:11">dfs</name><argument_list pos:start="26:12" pos:end="26:23">(<argument pos:start="26:13" pos:end="26:17"><expr pos:start="26:13" pos:end="26:17"><name pos:start="26:13" pos:end="26:13">u</name> <operator pos:start="26:15" pos:end="26:15">+</operator> <literal type="number" pos:start="26:17" pos:end="26:17">1</literal></expr></argument>, <argument pos:start="26:20" pos:end="26:22"><expr pos:start="26:20" pos:end="26:22"><name pos:start="26:20" pos:end="26:22">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="29:1" pos:end="39:1"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:8">main</name><parameter_list pos:start="29:9" pos:end="29:10">()</parameter_list> <block pos:start="29:12" pos:end="39:1">{<block_content pos:start="30:5" pos:end="38:13">
    <expr_stmt pos:start="30:5" pos:end="30:36"><expr pos:start="30:5" pos:end="30:35"><call pos:start="30:5" pos:end="30:35"><name pos:start="30:5" pos:end="30:11">freopen</name><argument_list pos:start="30:12" pos:end="30:35">(<argument pos:start="30:13" pos:end="30:22"><expr pos:start="30:13" pos:end="30:22"><literal type="string" pos:start="30:13" pos:end="30:22">"stone.in"</literal></expr></argument>, <argument pos:start="30:25" pos:end="30:27"><expr pos:start="30:25" pos:end="30:27"><literal type="string" pos:start="30:25" pos:end="30:27">"r"</literal></expr></argument>, <argument pos:start="30:30" pos:end="30:34"><expr pos:start="30:30" pos:end="30:34"><name pos:start="30:30" pos:end="30:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:38"><expr pos:start="31:5" pos:end="31:37"><call pos:start="31:5" pos:end="31:37"><name pos:start="31:5" pos:end="31:11">freopen</name><argument_list pos:start="31:12" pos:end="31:37">(<argument pos:start="31:13" pos:end="31:23"><expr pos:start="31:13" pos:end="31:23"><literal type="string" pos:start="31:13" pos:end="31:23">"stone.out"</literal></expr></argument>, <argument pos:start="31:26" pos:end="31:28"><expr pos:start="31:26" pos:end="31:28"><literal type="string" pos:start="31:26" pos:end="31:28">"w"</literal></expr></argument>, <argument pos:start="31:31" pos:end="31:36"><expr pos:start="31:31" pos:end="31:36"><name pos:start="31:31" pos:end="31:36">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:13"><expr pos:start="32:5" pos:end="32:12"><name pos:start="32:5" pos:end="32:7">cin</name> <operator pos:start="32:9" pos:end="32:10">&gt;&gt;</operator> <name pos:start="32:12" pos:end="32:12">n</name></expr>;</expr_stmt>
    <for pos:start="33:5" pos:end="35:5">for <control pos:start="33:9" pos:end="33:31">(<init pos:start="33:10" pos:end="33:19"><decl pos:start="33:10" pos:end="33:18"><type pos:start="33:10" pos:end="33:12"><name pos:start="33:10" pos:end="33:12">int</name></type> <name pos:start="33:14" pos:end="33:14">i</name> <init pos:start="33:16" pos:end="33:18">= <expr pos:start="33:18" pos:end="33:18"><literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr></init></decl>;</init> <condition pos:start="33:21" pos:end="33:26"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <name pos:start="33:25" pos:end="33:25">n</name></expr>;</condition> <incr pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:28">i</name><operator pos:start="33:29" pos:end="33:30">++</operator></expr></incr>)</control> <block pos:start="33:33" pos:end="35:5">{<block_content pos:start="34:9" pos:end="34:28">
        <expr_stmt pos:start="34:9" pos:end="34:28"><expr pos:start="34:9" pos:end="34:27"><name pos:start="34:9" pos:end="34:11">cin</name> <operator pos:start="34:13" pos:end="34:14">&gt;&gt;</operator> <name pos:start="34:16" pos:end="34:19"><name pos:start="34:16" pos:end="34:16">a</name><index pos:start="34:17" pos:end="34:19">[<expr pos:start="34:18" pos:end="34:18"><name pos:start="34:18" pos:end="34:18">i</name></expr>]</index></name> <operator pos:start="34:21" pos:end="34:22">&gt;&gt;</operator> <name pos:start="34:24" pos:end="34:27"><name pos:start="34:24" pos:end="34:24">b</name><index pos:start="34:25" pos:end="34:27">[<expr pos:start="34:26" pos:end="34:26"><name pos:start="34:26" pos:end="34:26">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="36:5" pos:end="36:14"><expr pos:start="36:5" pos:end="36:13"><call pos:start="36:5" pos:end="36:13"><name pos:start="36:5" pos:end="36:7">dfs</name><argument_list pos:start="36:8" pos:end="36:13">(<argument pos:start="36:9" pos:end="36:9"><expr pos:start="36:9" pos:end="36:9"><literal type="number" pos:start="36:9" pos:end="36:9">0</literal></expr></argument>, <argument pos:start="36:12" pos:end="36:12"><expr pos:start="36:12" pos:end="36:12"><literal type="number" pos:start="36:12" pos:end="36:12">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:8">cout</name> <operator pos:start="37:10" pos:end="37:11">&lt;&lt;</operator> <name pos:start="37:13" pos:end="37:19">minDiff</name> <operator pos:start="37:21" pos:end="37:22">&lt;&lt;</operator> <name pos:start="37:24" pos:end="37:27">endl</name></expr>;</expr_stmt>
    <return pos:start="38:5" pos:end="38:13">return <expr pos:start="38:12" pos:end="38:12"><literal type="number" pos:start="38:12" pos:end="38:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
