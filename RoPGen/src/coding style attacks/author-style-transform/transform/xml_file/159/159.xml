<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/159/159.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:16"><decl pos:start="3:1" pos:end="3:9"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:9"><name pos:start="3:5" pos:end="3:5">m</name><index pos:start="3:6" pos:end="3:9">[<expr pos:start="3:7" pos:end="3:8"><literal type="number" pos:start="3:7" pos:end="3:8">35</literal></expr>]</index></name></decl>,<decl pos:start="3:11" pos:end="3:15"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:11" pos:end="3:15"><name pos:start="3:11" pos:end="3:11">b</name><index pos:start="3:12" pos:end="3:15">[<expr pos:start="3:13" pos:end="3:14"><literal type="number" pos:start="3:13" pos:end="3:14">35</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:24"><decl pos:start="4:1" pos:end="4:13"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:13"><name pos:start="4:5" pos:end="4:9">treel</name><index pos:start="4:10" pos:end="4:13">[<expr pos:start="4:11" pos:end="4:12"><literal type="number" pos:start="4:11" pos:end="4:12">35</literal></expr>]</index></name></decl>,<decl pos:start="4:15" pos:end="4:23"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:15" pos:end="4:23"><name pos:start="4:15" pos:end="4:19">treer</name><index pos:start="4:20" pos:end="4:23">[<expr pos:start="4:21" pos:end="4:22"><literal type="number" pos:start="4:21" pos:end="4:22">35</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:6"><decl pos:start="5:1" pos:end="5:5"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:5">n</name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="19:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">void</name></type> <name pos:start="6:6" pos:end="6:8">dfs</name><parameter_list pos:start="6:9" pos:end="6:38">(<parameter pos:start="6:10" pos:end="6:14"><decl pos:start="6:10" pos:end="6:14"><type pos:start="6:10" pos:end="6:14"><name pos:start="6:10" pos:end="6:12">int</name></type> <name pos:start="6:14" pos:end="6:14">l</name></decl></parameter>,<parameter pos:start="6:16" pos:end="6:20"><decl pos:start="6:16" pos:end="6:20"><type pos:start="6:16" pos:end="6:20"><name pos:start="6:16" pos:end="6:18">int</name></type> <name pos:start="6:20" pos:end="6:20">r</name></decl></parameter>,<parameter pos:start="6:22" pos:end="6:29"><decl pos:start="6:22" pos:end="6:29"><type pos:start="6:22" pos:end="6:29"><name pos:start="6:22" pos:end="6:24">int</name></type> <name pos:start="6:26" pos:end="6:29">root</name></decl></parameter>,<parameter pos:start="6:31" pos:end="6:37"><decl pos:start="6:31" pos:end="6:37"><type pos:start="6:31" pos:end="6:37"><name pos:start="6:31" pos:end="6:33">int</name></type> <name pos:start="6:35" pos:end="6:37">way</name></decl></parameter>)</parameter_list><block pos:start="6:39" pos:end="19:1">{<block_content pos:start="7:5" pos:end="18:11">
    <for pos:start="7:5" pos:end="17:5">for<control pos:start="7:8" pos:end="7:25">(<init pos:start="7:9" pos:end="7:16"><decl pos:start="7:9" pos:end="7:15"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">i</name><init pos:start="7:14" pos:end="7:15">=<expr pos:start="7:15" pos:end="7:15"><name pos:start="7:15" pos:end="7:15">l</name></expr></init></decl>;</init><condition pos:start="7:17" pos:end="7:21"><expr pos:start="7:17" pos:end="7:20"><name pos:start="7:17" pos:end="7:17">i</name><operator pos:start="7:18" pos:end="7:19">&lt;=</operator><name pos:start="7:20" pos:end="7:20">r</name></expr>;</condition><incr pos:start="7:22" pos:end="7:24"><expr pos:start="7:22" pos:end="7:24"><name pos:start="7:22" pos:end="7:22">i</name><operator pos:start="7:23" pos:end="7:24">++</operator></expr></incr>)</control><block pos:start="7:26" pos:end="17:5">{<block_content pos:start="8:9" pos:end="16:9">
        <if_stmt pos:start="8:9" pos:end="16:9"><if pos:start="8:9" pos:end="16:9">if<condition pos:start="8:11" pos:end="8:22">(<expr pos:start="8:12" pos:end="8:21"><name pos:start="8:12" pos:end="8:15"><name pos:start="8:12" pos:end="8:12">m</name><index pos:start="8:13" pos:end="8:15">[<expr pos:start="8:14" pos:end="8:14"><name pos:start="8:14" pos:end="8:14">i</name></expr>]</index></name><operator pos:start="8:16" pos:end="8:17">==</operator><name pos:start="8:18" pos:end="8:21"><name pos:start="8:18" pos:end="8:18">b</name><index pos:start="8:19" pos:end="8:21">[<expr pos:start="8:20" pos:end="8:20"><name pos:start="8:20" pos:end="8:20">r</name></expr>]</index></name></expr>)</condition><block pos:start="8:23" pos:end="16:9">{<block_content pos:start="8:24" pos:end="15:18"><empty_stmt pos:start="8:24" pos:end="8:24">;</empty_stmt>
            <if_stmt pos:start="9:13" pos:end="12:13"><if pos:start="9:13" pos:end="12:13">if<condition pos:start="9:15" pos:end="9:32">(<expr pos:start="9:16" pos:end="9:31"><name pos:start="9:16" pos:end="9:19">root</name><operator pos:start="9:20" pos:end="9:21">&gt;=</operator><literal type="number" pos:start="9:22" pos:end="9:22">1</literal><operator pos:start="9:23" pos:end="9:24">&amp;&amp;</operator><name pos:start="9:25" pos:end="9:28">root</name><operator pos:start="9:29" pos:end="9:30">&lt;=</operator><name pos:start="9:31" pos:end="9:31">n</name></expr>)</condition><block pos:start="9:33" pos:end="12:13">{<block_content pos:start="10:17" pos:end="11:49">
                <if_stmt pos:start="10:17" pos:end="11:49"><if pos:start="10:17" pos:end="10:44">if<condition pos:start="10:19" pos:end="10:26">(<expr pos:start="10:20" pos:end="10:25"><name pos:start="10:20" pos:end="10:22">way</name><operator pos:start="10:23" pos:end="10:24">==</operator><literal type="number" pos:start="10:25" pos:end="10:25">1</literal></expr>)</condition><block type="pseudo" pos:start="10:28" pos:end="10:44"><block_content pos:start="10:28" pos:end="10:44"> <expr_stmt pos:start="10:28" pos:end="10:44"><expr pos:start="10:28" pos:end="10:43"><name pos:start="10:28" pos:end="10:38"><name pos:start="10:28" pos:end="10:32">treel</name><index pos:start="10:33" pos:end="10:38">[<expr pos:start="10:34" pos:end="10:37"><name pos:start="10:34" pos:end="10:37">root</name></expr>]</index></name><operator pos:start="10:39" pos:end="10:39">=</operator><name pos:start="10:40" pos:end="10:43"><name pos:start="10:40" pos:end="10:40">m</name><index pos:start="10:41" pos:end="10:43">[<expr pos:start="10:42" pos:end="10:42"><name pos:start="10:42" pos:end="10:42">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>
                <if type="elseif" pos:start="11:17" pos:end="11:49">else if<condition pos:start="11:24" pos:end="11:31">(<expr pos:start="11:25" pos:end="11:30"><name pos:start="11:25" pos:end="11:27">way</name><operator pos:start="11:28" pos:end="11:29">==</operator><literal type="number" pos:start="11:30" pos:end="11:30">2</literal></expr>)</condition><block type="pseudo" pos:start="11:33" pos:end="11:49"><block_content pos:start="11:33" pos:end="11:49"> <expr_stmt pos:start="11:33" pos:end="11:49"><expr pos:start="11:33" pos:end="11:48"><name pos:start="11:33" pos:end="11:43"><name pos:start="11:33" pos:end="11:37">treer</name><index pos:start="11:38" pos:end="11:43">[<expr pos:start="11:39" pos:end="11:42"><name pos:start="11:39" pos:end="11:42">root</name></expr>]</index></name><operator pos:start="11:44" pos:end="11:44">=</operator><name pos:start="11:45" pos:end="11:48"><name pos:start="11:45" pos:end="11:45">m</name><index pos:start="11:46" pos:end="11:48">[<expr pos:start="11:47" pos:end="11:47"><name pos:start="11:47" pos:end="11:47">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:27"><expr pos:start="13:13" pos:end="13:26"><call pos:start="13:13" pos:end="13:26"><name pos:start="13:13" pos:end="13:15">dfs</name><argument_list pos:start="13:16" pos:end="13:26">(<argument pos:start="13:17" pos:end="13:17"><expr pos:start="13:17" pos:end="13:17"><name pos:start="13:17" pos:end="13:17">l</name></expr></argument>,<argument pos:start="13:19" pos:end="13:21"><expr pos:start="13:19" pos:end="13:21"><name pos:start="13:19" pos:end="13:19">i</name><operator pos:start="13:20" pos:end="13:20">-</operator><literal type="number" pos:start="13:21" pos:end="13:21">1</literal></expr></argument>,<argument pos:start="13:23" pos:end="13:23"><expr pos:start="13:23" pos:end="13:23"><name pos:start="13:23" pos:end="13:23">i</name></expr></argument>,<argument pos:start="13:25" pos:end="13:25"><expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:27"><expr pos:start="14:13" pos:end="14:26"><call pos:start="14:13" pos:end="14:26"><name pos:start="14:13" pos:end="14:15">dfs</name><argument_list pos:start="14:16" pos:end="14:26">(<argument pos:start="14:17" pos:end="14:19"><expr pos:start="14:17" pos:end="14:19"><name pos:start="14:17" pos:end="14:17">i</name><operator pos:start="14:18" pos:end="14:18">+</operator><literal type="number" pos:start="14:19" pos:end="14:19">1</literal></expr></argument>,<argument pos:start="14:21" pos:end="14:21"><expr pos:start="14:21" pos:end="14:21"><name pos:start="14:21" pos:end="14:21">r</name></expr></argument>,<argument pos:start="14:23" pos:end="14:23"><expr pos:start="14:23" pos:end="14:23"><name pos:start="14:23" pos:end="14:23">i</name></expr></argument>,<argument pos:start="14:25" pos:end="14:25"><expr pos:start="14:25" pos:end="14:25"><literal type="number" pos:start="14:25" pos:end="14:25">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="15:13" pos:end="15:18">break;</break>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="18:5" pos:end="18:11">return;</return>
</block_content>}</block></function> 
<function pos:start="20:1" pos:end="33:1"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:8">main</name><parameter_list pos:start="20:9" pos:end="20:10">()</parameter_list><block pos:start="20:11" pos:end="33:1">{<block_content pos:start="21:5" pos:end="32:13">
    <expr_stmt pos:start="21:5" pos:end="21:13"><expr pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:7">cin</name> <operator pos:start="21:9" pos:end="21:10">&gt;&gt;</operator> <name pos:start="21:12" pos:end="21:12">n</name></expr>;</expr_stmt>
    <for pos:start="22:5" pos:end="24:5">for<control pos:start="22:8" pos:end="22:25">(<init pos:start="22:9" pos:end="22:16"><decl pos:start="22:9" pos:end="22:15"><type pos:start="22:9" pos:end="22:11"><name pos:start="22:9" pos:end="22:11">int</name></type> <name pos:start="22:13" pos:end="22:13">i</name><init pos:start="22:14" pos:end="22:15">=<expr pos:start="22:15" pos:end="22:15"><literal type="number" pos:start="22:15" pos:end="22:15">1</literal></expr></init></decl>;</init><condition pos:start="22:17" pos:end="22:21"><expr pos:start="22:17" pos:end="22:20"><name pos:start="22:17" pos:end="22:17">i</name><operator pos:start="22:18" pos:end="22:19">&lt;=</operator><name pos:start="22:20" pos:end="22:20">n</name></expr>;</condition><incr pos:start="22:22" pos:end="22:24"><expr pos:start="22:22" pos:end="22:24"><name pos:start="22:22" pos:end="22:22">i</name><operator pos:start="22:23" pos:end="22:24">++</operator></expr></incr>)</control><block pos:start="22:26" pos:end="24:5">{<block_content pos:start="23:9" pos:end="23:20">
        <expr_stmt pos:start="23:9" pos:end="23:20"><expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:11">cin</name> <operator pos:start="23:13" pos:end="23:14">&gt;&gt;</operator> <name pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:16">b</name><index pos:start="23:17" pos:end="23:19">[<expr pos:start="23:18" pos:end="23:18"><name pos:start="23:18" pos:end="23:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="25:5" pos:end="27:5">for<control pos:start="25:8" pos:end="25:25">(<init pos:start="25:9" pos:end="25:16"><decl pos:start="25:9" pos:end="25:15"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">i</name><init pos:start="25:14" pos:end="25:15">=<expr pos:start="25:15" pos:end="25:15"><literal type="number" pos:start="25:15" pos:end="25:15">1</literal></expr></init></decl>;</init><condition pos:start="25:17" pos:end="25:21"><expr pos:start="25:17" pos:end="25:20"><name pos:start="25:17" pos:end="25:17">i</name><operator pos:start="25:18" pos:end="25:19">&lt;=</operator><name pos:start="25:20" pos:end="25:20">n</name></expr>;</condition><incr pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:22">i</name><operator pos:start="25:23" pos:end="25:24">++</operator></expr></incr>)</control><block pos:start="25:26" pos:end="27:5">{<block_content pos:start="26:9" pos:end="26:20">
        <expr_stmt pos:start="26:9" pos:end="26:20"><expr pos:start="26:9" pos:end="26:19"><name pos:start="26:9" pos:end="26:11">cin</name> <operator pos:start="26:13" pos:end="26:14">&gt;&gt;</operator> <name pos:start="26:16" pos:end="26:19"><name pos:start="26:16" pos:end="26:16">m</name><index pos:start="26:17" pos:end="26:19">[<expr pos:start="26:18" pos:end="26:18"><name pos:start="26:18" pos:end="26:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="28:5" pos:end="28:18"><expr pos:start="28:5" pos:end="28:17"><call pos:start="28:5" pos:end="28:17"><name pos:start="28:5" pos:end="28:7">dfs</name><argument_list pos:start="28:8" pos:end="28:17">(<argument pos:start="28:9" pos:end="28:9"><expr pos:start="28:9" pos:end="28:9"><literal type="number" pos:start="28:9" pos:end="28:9">1</literal></expr></argument>,<argument pos:start="28:11" pos:end="28:11"><expr pos:start="28:11" pos:end="28:11"><name pos:start="28:11" pos:end="28:11">n</name></expr></argument>,<argument pos:start="28:13" pos:end="28:14"><expr pos:start="28:13" pos:end="28:14"><operator pos:start="28:13" pos:end="28:13">-</operator><literal type="number" pos:start="28:14" pos:end="28:14">1</literal></expr></argument>,<argument pos:start="28:16" pos:end="28:16"><expr pos:start="28:16" pos:end="28:16"><literal type="number" pos:start="28:16" pos:end="28:16">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="29:5" pos:end="31:5">for<control pos:start="29:8" pos:end="29:25">(<init pos:start="29:9" pos:end="29:16"><decl pos:start="29:9" pos:end="29:15"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:13">i</name><init pos:start="29:14" pos:end="29:15">=<expr pos:start="29:15" pos:end="29:15"><literal type="number" pos:start="29:15" pos:end="29:15">1</literal></expr></init></decl>;</init><condition pos:start="29:17" pos:end="29:21"><expr pos:start="29:17" pos:end="29:20"><name pos:start="29:17" pos:end="29:17">i</name><operator pos:start="29:18" pos:end="29:19">&lt;=</operator><name pos:start="29:20" pos:end="29:20">n</name></expr>;</condition><incr pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><name pos:start="29:22" pos:end="29:22">i</name><operator pos:start="29:23" pos:end="29:24">++</operator></expr></incr>)</control><block pos:start="29:26" pos:end="31:5">{<block_content pos:start="30:9" pos:end="30:52">
        <expr_stmt pos:start="30:9" pos:end="30:52"><expr pos:start="30:9" pos:end="30:51"><name pos:start="30:9" pos:end="30:12">cout</name> <operator pos:start="30:14" pos:end="30:15">&lt;&lt;</operator> <name pos:start="30:17" pos:end="30:24"><name pos:start="30:17" pos:end="30:21">treel</name><index pos:start="30:22" pos:end="30:24">[<expr pos:start="30:23" pos:end="30:23"><name pos:start="30:23" pos:end="30:23">i</name></expr>]</index></name> <operator pos:start="30:26" pos:end="30:27">&lt;&lt;</operator> <literal type="char" pos:start="30:29" pos:end="30:31">' '</literal> <operator pos:start="30:33" pos:end="30:34">&lt;&lt;</operator> <name pos:start="30:36" pos:end="30:43"><name pos:start="30:36" pos:end="30:40">treer</name><index pos:start="30:41" pos:end="30:43">[<expr pos:start="30:42" pos:end="30:42"><name pos:start="30:42" pos:end="30:42">i</name></expr>]</index></name> <operator pos:start="30:45" pos:end="30:46">&lt;&lt;</operator> <name pos:start="30:48" pos:end="30:51">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="32:5" pos:end="32:13">return <expr pos:start="32:12" pos:end="32:12"><literal type="number" pos:start="32:12" pos:end="32:12">0</literal></expr>;</return>
</block_content>}</block></function> 
</unit>
