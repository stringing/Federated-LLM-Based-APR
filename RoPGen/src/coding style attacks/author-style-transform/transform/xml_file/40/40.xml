<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/40/40.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define pos:start="2:1" pos:end="2:18">#<cpp:directive pos:start="2:2" pos:end="2:7">define</cpp:directive> <cpp:macro pos:start="2:9" pos:end="2:11"><name pos:start="2:9" pos:end="2:11">MAX</name></cpp:macro> <cpp:value pos:start="2:13" pos:end="2:18">100000</cpp:value></cpp:define>

<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<function pos:start="5:1" pos:end="37:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list>
<block pos:start="6:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="36:13">
    <expr_stmt pos:start="7:5" pos:end="7:39"><expr pos:start="7:5" pos:end="7:38"><call pos:start="7:5" pos:end="7:38"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:38">(<argument pos:start="7:13" pos:end="7:25"><expr pos:start="7:13" pos:end="7:25"><literal type="string" pos:start="7:13" pos:end="7:25">"elevator.in"</literal></expr></argument>, <argument pos:start="7:28" pos:end="7:30"><expr pos:start="7:28" pos:end="7:30"><literal type="string" pos:start="7:28" pos:end="7:30">"r"</literal></expr></argument>, <argument pos:start="7:33" pos:end="7:37"><expr pos:start="7:33" pos:end="7:37"><name pos:start="7:33" pos:end="7:37">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:41"><expr pos:start="8:5" pos:end="8:40"><call pos:start="8:5" pos:end="8:40"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:40">(<argument pos:start="8:13" pos:end="8:26"><expr pos:start="8:13" pos:end="8:26"><literal type="string" pos:start="8:13" pos:end="8:26">"elevator.out"</literal></expr></argument>, <argument pos:start="8:29" pos:end="8:31"><expr pos:start="8:29" pos:end="8:31"><literal type="string" pos:start="8:29" pos:end="8:31">"w"</literal></expr></argument>, <argument pos:start="8:34" pos:end="8:39"><expr pos:start="8:34" pos:end="8:39"><name pos:start="8:34" pos:end="8:39">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:8">long</name> <name pos:start="9:10" pos:end="9:13">long</name></type> <name pos:start="9:15" pos:end="9:15">T</name></decl>,<decl pos:start="9:17" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:13"/><name pos:start="9:17" pos:end="9:17">n</name></decl>,<decl pos:start="9:19" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:13"/><name pos:start="9:19" pos:end="9:19">i</name></decl>,<decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:13"/><name pos:start="9:21" pos:end="9:21">j</name></decl>,<decl pos:start="9:23" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:13"/><name pos:start="9:23" pos:end="9:28"><name pos:start="9:23" pos:end="9:23">p</name><index pos:start="9:24" pos:end="9:28">[<expr pos:start="9:25" pos:end="9:27"><name pos:start="9:25" pos:end="9:27">MAX</name></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:13"><expr pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:7">cin</name> <operator pos:start="10:9" pos:end="10:10">&gt;&gt;</operator> <name pos:start="10:12" pos:end="10:12">T</name></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:13"><expr pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:7">cin</name> <operator pos:start="11:9" pos:end="11:10">&gt;&gt;</operator> <name pos:start="11:12" pos:end="11:12">n</name></expr>;</expr_stmt>
    <for pos:start="12:5" pos:end="15:5">for<control pos:start="12:8" pos:end="12:21">(<init pos:start="12:9" pos:end="12:12"><expr pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:9">i</name><operator pos:start="12:10" pos:end="12:10">=</operator><literal type="number" pos:start="12:11" pos:end="12:11">1</literal></expr>;</init><condition pos:start="12:13" pos:end="12:17"><expr pos:start="12:13" pos:end="12:16"><name pos:start="12:13" pos:end="12:13">i</name><operator pos:start="12:14" pos:end="12:15">&lt;=</operator><name pos:start="12:16" pos:end="12:16">n</name></expr>;</condition><incr pos:start="12:18" pos:end="12:20"><expr pos:start="12:18" pos:end="12:20"><name pos:start="12:18" pos:end="12:18">i</name><operator pos:start="12:19" pos:end="12:20">++</operator></expr></incr>)</control>
    <block pos:start="13:5" pos:end="15:5">{<block_content pos:start="14:9" pos:end="14:20">
        <expr_stmt pos:start="14:9" pos:end="14:20"><expr pos:start="14:9" pos:end="14:19"><name pos:start="14:9" pos:end="14:11">cin</name> <operator pos:start="14:13" pos:end="14:14">&gt;&gt;</operator> <name pos:start="14:16" pos:end="14:19"><name pos:start="14:16" pos:end="14:16">p</name><index pos:start="14:17" pos:end="14:19">[<expr pos:start="14:18" pos:end="14:18"><name pos:start="14:18" pos:end="14:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="16:5" pos:end="16:20"><expr pos:start="16:5" pos:end="16:19"><call pos:start="16:5" pos:end="16:19"><name pos:start="16:5" pos:end="16:8">sort</name><argument_list pos:start="16:9" pos:end="16:19">(<argument pos:start="16:10" pos:end="16:12"><expr pos:start="16:10" pos:end="16:12"><name pos:start="16:10" pos:end="16:10">p</name><operator pos:start="16:11" pos:end="16:11">+</operator><literal type="number" pos:start="16:12" pos:end="16:12">1</literal></expr></argument>,<argument pos:start="16:14" pos:end="16:18"><expr pos:start="16:14" pos:end="16:18"><name pos:start="16:14" pos:end="16:14">p</name><operator pos:start="16:15" pos:end="16:15">+</operator><name pos:start="16:16" pos:end="16:16">n</name><operator pos:start="16:17" pos:end="16:17">+</operator><literal type="number" pos:start="16:18" pos:end="16:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:8">long</name> <name pos:start="17:10" pos:end="17:13">long</name></type> <name pos:start="17:15" pos:end="17:18">time</name><init pos:start="17:19" pos:end="17:32">=<expr pos:start="17:20" pos:end="17:32"><literal type="number" pos:start="17:20" pos:end="17:20">5</literal><operator pos:start="17:21" pos:end="17:21">*</operator><name pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:22">p</name><index pos:start="17:23" pos:end="17:25">[<expr pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">n</name></expr>]</index></name><operator pos:start="17:26" pos:end="17:26">+</operator><literal type="number" pos:start="17:27" pos:end="17:27">4</literal><operator pos:start="17:28" pos:end="17:28">*</operator><name pos:start="17:29" pos:end="17:32"><name pos:start="17:29" pos:end="17:29">p</name><index pos:start="17:30" pos:end="17:32">[<expr pos:start="17:31" pos:end="17:31"><name pos:start="17:31" pos:end="17:31">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <for pos:start="18:5" pos:end="34:5">for<control pos:start="18:8" pos:end="18:24">(<init pos:start="18:9" pos:end="18:12"><expr pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:9">i</name><operator pos:start="18:10" pos:end="18:10">=</operator><literal type="number" pos:start="18:11" pos:end="18:11">0</literal></expr>;</init><condition pos:start="18:13" pos:end="18:20"><expr pos:start="18:13" pos:end="18:19"><name pos:start="18:13" pos:end="18:13">i</name><operator pos:start="18:14" pos:end="18:15">&lt;=</operator><literal type="number" pos:start="18:16" pos:end="18:19">1000</literal></expr>;</condition><incr pos:start="18:21" pos:end="18:23"><expr pos:start="18:21" pos:end="18:23"><name pos:start="18:21" pos:end="18:21">i</name><operator pos:start="18:22" pos:end="18:23">++</operator></expr></incr>)</control>
    <block pos:start="19:5" pos:end="34:5">{<block_content pos:start="20:9" pos:end="33:20">
        <decl_stmt pos:start="20:9" pos:end="20:31"><decl pos:start="20:9" pos:end="20:23"><type pos:start="20:9" pos:end="20:17"><name pos:start="20:9" pos:end="20:12">long</name> <name pos:start="20:14" pos:end="20:17">long</name></type> <name pos:start="20:19" pos:end="20:21">num</name><init pos:start="20:22" pos:end="20:23">=<expr pos:start="20:23" pos:end="20:23"><literal type="number" pos:start="20:23" pos:end="20:23">0</literal></expr></init></decl>,<decl pos:start="20:25" pos:end="20:30"><type ref="prev" pos:start="20:9" pos:end="20:17"/><name pos:start="20:25" pos:end="20:28">flag</name><init pos:start="20:29" pos:end="20:30">=<expr pos:start="20:30" pos:end="20:30"><literal type="number" pos:start="20:30" pos:end="20:30">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="21:9" pos:end="28:9">for<control pos:start="21:12" pos:end="21:25">(<init pos:start="21:13" pos:end="21:16"><expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:13">j</name><operator pos:start="21:14" pos:end="21:14">=</operator><literal type="number" pos:start="21:15" pos:end="21:15">1</literal></expr>;</init><condition pos:start="21:17" pos:end="21:21"><expr pos:start="21:17" pos:end="21:20"><name pos:start="21:17" pos:end="21:17">j</name><operator pos:start="21:18" pos:end="21:19">&lt;=</operator><name pos:start="21:20" pos:end="21:20">n</name></expr>;</condition><incr pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:22">j</name><operator pos:start="21:23" pos:end="21:24">++</operator></expr></incr>)</control>
        <block pos:start="22:9" pos:end="28:9">{<block_content pos:start="23:13" pos:end="27:13">
            <if_stmt pos:start="23:13" pos:end="27:13"><if pos:start="23:13" pos:end="27:13">if<condition pos:start="23:15" pos:end="23:23">(<expr pos:start="23:16" pos:end="23:22"><name pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:16">p</name><index pos:start="23:17" pos:end="23:19">[<expr pos:start="23:18" pos:end="23:18"><name pos:start="23:18" pos:end="23:18">j</name></expr>]</index></name><operator pos:start="23:20" pos:end="23:21">==</operator><name pos:start="23:22" pos:end="23:22">i</name></expr>)</condition>
            <block pos:start="24:13" pos:end="27:13">{<block_content pos:start="25:17" pos:end="26:22">
                <expr_stmt pos:start="25:17" pos:end="25:23"><expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:20">flag</name><operator pos:start="25:21" pos:end="25:21">=</operator><literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="26:17" pos:end="26:22"><expr pos:start="26:17" pos:end="26:21"><name pos:start="26:17" pos:end="26:19">num</name><operator pos:start="26:20" pos:end="26:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <if_stmt pos:start="29:9" pos:end="32:9"><if pos:start="29:9" pos:end="32:9">if<condition pos:start="29:11" pos:end="29:21">(<expr pos:start="29:12" pos:end="29:20"><name pos:start="29:12" pos:end="29:15">flag</name> <operator pos:start="29:17" pos:end="29:18">==</operator> <literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr>)</condition>
        <block pos:start="30:9" pos:end="32:9">{<block_content pos:start="31:13" pos:end="31:20">
            <expr_stmt pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:16">time</name><operator pos:start="31:17" pos:end="31:18">+=</operator><literal type="number" pos:start="31:19" pos:end="31:19">3</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="33:9" pos:end="33:20"><expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:12">time</name><operator pos:start="33:13" pos:end="33:14">+=</operator><name pos:start="33:15" pos:end="33:17">num</name><operator pos:start="33:18" pos:end="33:18">*</operator><literal type="number" pos:start="33:19" pos:end="33:19">2</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="35:5" pos:end="35:17"><expr pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:8">cout</name> <operator pos:start="35:10" pos:end="35:11">&lt;&lt;</operator> <name pos:start="35:13" pos:end="35:16">time</name></expr>;</expr_stmt>
    <return pos:start="36:5" pos:end="36:13">return <expr pos:start="36:12" pos:end="36:12"><literal type="number" pos:start="36:12" pos:end="36:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
