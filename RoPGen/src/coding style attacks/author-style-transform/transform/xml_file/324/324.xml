<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/324/324.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="11:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:7">sum</name><parameter_list pos:start="4:8" pos:end="4:14">(<parameter pos:start="4:9" pos:end="4:13"><decl pos:start="4:9" pos:end="4:13"><type pos:start="4:9" pos:end="4:11"><name pos:start="4:9" pos:end="4:11">int</name></type> <name pos:start="4:13" pos:end="4:13">n</name></decl></parameter>)</parameter_list> <block pos:start="4:16" pos:end="11:1">{<block_content pos:start="5:5" pos:end="10:15">
    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">cnt</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="6:5" pos:end="9:5">while <condition pos:start="6:11" pos:end="6:17">(<expr pos:start="6:12" pos:end="6:16"><name pos:start="6:12" pos:end="6:12">n</name> <operator pos:start="6:14" pos:end="6:14">&gt;</operator> <literal type="number" pos:start="6:16" pos:end="6:16">0</literal></expr>)</condition> <block pos:start="6:19" pos:end="9:5">{<block_content pos:start="7:9" pos:end="8:22">
        <expr_stmt pos:start="7:9" pos:end="7:16"><expr pos:start="7:9" pos:end="7:15"><name pos:start="7:9" pos:end="7:9">n</name> <operator pos:start="7:11" pos:end="7:12">/=</operator> <literal type="number" pos:start="7:14" pos:end="7:15">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:22"><expr pos:start="8:9" pos:end="8:21"><name pos:start="8:9" pos:end="8:11">cnt</name> <operator pos:start="8:13" pos:end="8:14">+=</operator> <name pos:start="8:16" pos:end="8:16">n</name> <operator pos:start="8:18" pos:end="8:18">%</operator> <literal type="number" pos:start="8:20" pos:end="8:21">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="10:5" pos:end="10:15">return <expr pos:start="10:12" pos:end="10:14"><name pos:start="10:12" pos:end="10:14">cnt</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="12:1" pos:end="19:1"><type pos:start="12:1" pos:end="12:4"><name pos:start="12:1" pos:end="12:4">bool</name></type> <name pos:start="12:6" pos:end="12:8">cmp</name><parameter_list pos:start="12:9" pos:end="12:23">(<parameter pos:start="12:10" pos:end="12:14"><decl pos:start="12:10" pos:end="12:14"><type pos:start="12:10" pos:end="12:14"><name pos:start="12:10" pos:end="12:12">int</name></type> <name pos:start="12:14" pos:end="12:14">x</name></decl></parameter> , <parameter pos:start="12:18" pos:end="12:22"><decl pos:start="12:18" pos:end="12:22"><type pos:start="12:18" pos:end="12:22"><name pos:start="12:18" pos:end="12:20">int</name></type> <name pos:start="12:22" pos:end="12:22">y</name></decl></parameter>)</parameter_list><block pos:start="12:24" pos:end="19:1">{<block_content pos:start="13:5" pos:end="18:5">
    <if_stmt pos:start="13:5" pos:end="18:5"><if pos:start="13:5" pos:end="15:5">if <condition pos:start="13:8" pos:end="13:25">(<expr pos:start="13:9" pos:end="13:24"><call pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:11">sum</name><argument_list pos:start="13:12" pos:end="13:14">(<argument pos:start="13:13" pos:end="13:13"><expr pos:start="13:13" pos:end="13:13"><name pos:start="13:13" pos:end="13:13">x</name></expr></argument>)</argument_list></call> <operator pos:start="13:16" pos:end="13:17">!=</operator> <call pos:start="13:19" pos:end="13:24"><name pos:start="13:19" pos:end="13:21">sum</name><argument_list pos:start="13:22" pos:end="13:24">(<argument pos:start="13:23" pos:end="13:23"><expr pos:start="13:23" pos:end="13:23"><name pos:start="13:23" pos:end="13:23">y</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:27" pos:end="15:5">{<block_content pos:start="14:9" pos:end="14:31">
        <return pos:start="14:9" pos:end="14:31">return <expr pos:start="14:16" pos:end="14:30"><call pos:start="14:16" pos:end="14:21"><name pos:start="14:16" pos:end="14:18">sum</name><argument_list pos:start="14:19" pos:end="14:21">(<argument pos:start="14:20" pos:end="14:20"><expr pos:start="14:20" pos:end="14:20"><name pos:start="14:20" pos:end="14:20">x</name></expr></argument>)</argument_list></call> <operator pos:start="14:23" pos:end="14:23">&lt;</operator> <call pos:start="14:25" pos:end="14:30"><name pos:start="14:25" pos:end="14:27">sum</name><argument_list pos:start="14:28" pos:end="14:30">(<argument pos:start="14:29" pos:end="14:29"><expr pos:start="14:29" pos:end="14:29"><name pos:start="14:29" pos:end="14:29">y</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if>
    <if type="elseif" pos:start="16:5" pos:end="18:5">else if <condition pos:start="16:13" pos:end="16:30">(<expr pos:start="16:14" pos:end="16:29"><call pos:start="16:14" pos:end="16:19"><name pos:start="16:14" pos:end="16:16">sum</name><argument_list pos:start="16:17" pos:end="16:19">(<argument pos:start="16:18" pos:end="16:18"><expr pos:start="16:18" pos:end="16:18"><name pos:start="16:18" pos:end="16:18">x</name></expr></argument>)</argument_list></call> <operator pos:start="16:21" pos:end="16:22">==</operator> <call pos:start="16:24" pos:end="16:29"><name pos:start="16:24" pos:end="16:26">sum</name><argument_list pos:start="16:27" pos:end="16:29">(<argument pos:start="16:28" pos:end="16:28"><expr pos:start="16:28" pos:end="16:28"><name pos:start="16:28" pos:end="16:28">y</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="16:32" pos:end="18:5">{<block_content pos:start="17:9" pos:end="17:21">
        <return pos:start="17:9" pos:end="17:21">return <expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:16">x</name> <operator pos:start="17:18" pos:end="17:18">&lt;</operator> <name pos:start="17:20" pos:end="17:20">y</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="20:1" pos:end="32:1"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:8">main</name><parameter_list pos:start="20:9" pos:end="20:10">()</parameter_list> <block pos:start="20:12" pos:end="32:1">{<block_content pos:start="21:5" pos:end="31:13">
    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">string</name></type> <name pos:start="21:12" pos:end="21:17"><name pos:start="21:12" pos:end="21:12">s</name><index pos:start="21:13" pos:end="21:17">[<expr pos:start="21:14" pos:end="21:16"><literal type="number" pos:start="21:14" pos:end="21:16">101</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="22:5" pos:end="22:10"><decl pos:start="22:5" pos:end="22:9"><type pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></type> <name pos:start="22:9" pos:end="22:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:13"><expr pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:7">cin</name> <operator pos:start="23:9" pos:end="23:10">&gt;&gt;</operator> <name pos:start="23:12" pos:end="23:12">n</name></expr>;</expr_stmt>
    <for pos:start="24:5" pos:end="26:5">for <control pos:start="24:9" pos:end="24:31">(<init pos:start="24:10" pos:end="24:19"><decl pos:start="24:10" pos:end="24:18"><type pos:start="24:10" pos:end="24:12"><name pos:start="24:10" pos:end="24:12">int</name></type> <name pos:start="24:14" pos:end="24:14">i</name> <init pos:start="24:16" pos:end="24:18">= <expr pos:start="24:18" pos:end="24:18"><literal type="number" pos:start="24:18" pos:end="24:18">0</literal></expr></init></decl>;</init> <condition pos:start="24:21" pos:end="24:26"><expr pos:start="24:21" pos:end="24:25"><name pos:start="24:21" pos:end="24:21">i</name> <operator pos:start="24:23" pos:end="24:23">&lt;</operator> <name pos:start="24:25" pos:end="24:25">n</name></expr>;</condition> <incr pos:start="24:28" pos:end="24:30"><expr pos:start="24:28" pos:end="24:30"><name pos:start="24:28" pos:end="24:28">i</name><operator pos:start="24:29" pos:end="24:30">++</operator></expr></incr>)</control> <block pos:start="24:33" pos:end="26:5">{<block_content pos:start="25:9" pos:end="25:20">
        <expr_stmt pos:start="25:9" pos:end="25:20"><expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:11">cin</name> <operator pos:start="25:13" pos:end="25:14">&gt;&gt;</operator> <name pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:16">s</name><index pos:start="25:17" pos:end="25:19">[<expr pos:start="25:18" pos:end="25:18"><name pos:start="25:18" pos:end="25:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><call pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:8">sort</name><argument_list pos:start="27:9" pos:end="27:31">(<argument pos:start="27:10" pos:end="27:13"><expr pos:start="27:10" pos:end="27:13"><name pos:start="27:10" pos:end="27:13"><name pos:start="27:10" pos:end="27:10">s</name><index pos:start="27:11" pos:end="27:13">[<expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>]</index></name></expr></argument> , <argument pos:start="27:17" pos:end="27:24"><expr pos:start="27:17" pos:end="27:24"><name pos:start="27:17" pos:end="27:24"><name pos:start="27:17" pos:end="27:17">s</name><index pos:start="27:18" pos:end="27:24">[<expr pos:start="27:19" pos:end="27:23"><name pos:start="27:19" pos:end="27:19">n</name> <operator pos:start="27:21" pos:end="27:21">-</operator> <literal type="number" pos:start="27:23" pos:end="27:23">1</literal></expr>]</index></name></expr></argument> , <argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="28:5" pos:end="30:5">for <control pos:start="28:9" pos:end="28:31">(<init pos:start="28:10" pos:end="28:19"><decl pos:start="28:10" pos:end="28:18"><type pos:start="28:10" pos:end="28:12"><name pos:start="28:10" pos:end="28:12">int</name></type> <name pos:start="28:14" pos:end="28:14">i</name> <init pos:start="28:16" pos:end="28:18">= <expr pos:start="28:18" pos:end="28:18"><literal type="number" pos:start="28:18" pos:end="28:18">0</literal></expr></init></decl>;</init> <condition pos:start="28:21" pos:end="28:26"><expr pos:start="28:21" pos:end="28:25"><name pos:start="28:21" pos:end="28:21">i</name> <operator pos:start="28:23" pos:end="28:23">&lt;</operator> <name pos:start="28:25" pos:end="28:25">n</name></expr>;</condition> <incr pos:start="28:28" pos:end="28:30"><expr pos:start="28:28" pos:end="28:30"><name pos:start="28:28" pos:end="28:28">i</name><operator pos:start="28:29" pos:end="28:30">++</operator></expr></incr>)</control> <block pos:start="28:33" pos:end="30:5">{<block_content pos:start="29:9" pos:end="29:28">
        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:12">cout</name> <operator pos:start="29:14" pos:end="29:15">&lt;&lt;</operator> <name pos:start="29:17" pos:end="29:20"><name pos:start="29:17" pos:end="29:17">s</name><index pos:start="29:18" pos:end="29:20">[<expr pos:start="29:19" pos:end="29:19"><name pos:start="29:19" pos:end="29:19">i</name></expr>]</index></name> <operator pos:start="29:22" pos:end="29:23">&lt;&lt;</operator> <literal type="string" pos:start="29:25" pos:end="29:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
