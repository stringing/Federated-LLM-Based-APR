<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/212/212.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="19:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list> <block pos:start="3:12" pos:end="19:1">{<block_content pos:start="4:5" pos:end="18:13">
    <decl_stmt pos:start="4:5" pos:end="4:15"><decl pos:start="4:5" pos:end="4:12"><type pos:start="4:5" pos:end="4:10"><name pos:start="4:5" pos:end="4:10">string</name></type> <name pos:start="4:12" pos:end="4:12">a</name></decl>,<decl pos:start="4:14" pos:end="4:14"><type ref="prev" pos:start="4:5" pos:end="4:10"/><name pos:start="4:14" pos:end="4:14">b</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name> <init pos:start="5:11" pos:end="5:13">= <expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>, <decl pos:start="5:16" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:16">i</name> <init pos:start="5:18" pos:end="5:20">= <expr pos:start="5:20" pos:end="5:20"><literal type="number" pos:start="5:20" pos:end="5:20">0</literal></expr></init></decl>, <decl pos:start="5:23" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:23" pos:end="5:25">max</name> <init pos:start="5:27" pos:end="5:30">= <expr pos:start="5:29" pos:end="5:30"><operator pos:start="5:29" pos:end="5:29">-</operator><literal type="number" pos:start="5:30" pos:end="5:30">1</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="6:5" pos:end="16:5">while<condition pos:start="6:10" pos:end="6:12">(<expr pos:start="6:11" pos:end="6:11"><literal type="number" pos:start="6:11" pos:end="6:11">0</literal></expr>)</condition><block pos:start="6:13" pos:end="16:5">{<block_content pos:start="7:13" pos:end="15:13">
            <expr_stmt pos:start="7:13" pos:end="7:19"><expr pos:start="7:13" pos:end="7:18"><name pos:start="7:13" pos:end="7:15">cin</name><operator pos:start="7:16" pos:end="7:17">&gt;&gt;</operator><name pos:start="7:18" pos:end="7:18">a</name></expr>;</expr_stmt>
            <if_stmt pos:start="8:13" pos:end="15:13"><if pos:start="8:13" pos:end="10:13">if<condition pos:start="8:15" pos:end="8:21">(<expr pos:start="8:16" pos:end="8:20"><name pos:start="8:16" pos:end="8:16">a</name><operator pos:start="8:17" pos:end="8:18">==</operator><literal type="string" pos:start="8:19" pos:end="8:20">""</literal></expr>)</condition><block pos:start="8:22" pos:end="10:13">{<block_content pos:start="9:17" pos:end="9:26">
                <expr_stmt pos:start="9:17" pos:end="9:26"><expr pos:start="9:17" pos:end="9:25"><name pos:start="9:17" pos:end="9:20">cout</name> <operator pos:start="9:22" pos:end="9:23">&lt;&lt;</operator> <name pos:start="9:25" pos:end="9:25">b</name></expr>;</expr_stmt>
            </block_content>}</block></if><else pos:start="10:14" pos:end="15:13">else<block pos:start="10:18" pos:end="15:13">{<block_content pos:start="11:17" pos:end="14:17">
                <if_stmt pos:start="11:17" pos:end="14:17"><if pos:start="11:17" pos:end="14:17">if<condition pos:start="11:19" pos:end="11:34">(<expr pos:start="11:20" pos:end="11:33"><call pos:start="11:20" pos:end="11:27"><name pos:start="11:20" pos:end="11:25"><name pos:start="11:20" pos:end="11:20">a</name><operator pos:start="11:21" pos:end="11:21">.</operator><name pos:start="11:22" pos:end="11:25">size</name></name><argument_list pos:start="11:26" pos:end="11:27">()</argument_list></call> <operator pos:start="11:29" pos:end="11:29">&gt;</operator> <name pos:start="11:31" pos:end="11:33">max</name></expr>)</condition><block pos:start="11:35" pos:end="14:17">{<block_content pos:start="12:19" pos:end="13:31">
                  <expr_stmt pos:start="12:19" pos:end="12:22"><expr pos:start="12:19" pos:end="12:21"><name pos:start="12:19" pos:end="12:19">b</name><operator pos:start="12:20" pos:end="12:20">=</operator><name pos:start="12:21" pos:end="12:21">a</name></expr>;</expr_stmt> 
                  <expr_stmt pos:start="13:19" pos:end="13:31"><expr pos:start="13:19" pos:end="13:30"><name pos:start="13:19" pos:end="13:21">max</name><operator pos:start="13:22" pos:end="13:22">=</operator><call pos:start="13:23" pos:end="13:30"><name pos:start="13:23" pos:end="13:28"><name pos:start="13:23" pos:end="13:23">a</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:28">size</name></name><argument_list pos:start="13:29" pos:end="13:30">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt> 
            </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    
    <return pos:start="18:5" pos:end="18:13">return <expr pos:start="18:12" pos:end="18:12"><literal type="number" pos:start="18:12" pos:end="18:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
