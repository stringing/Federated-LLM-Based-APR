<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/994/994.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:17">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:18">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:18">&lt;cstring&gt;</cpp:file></cpp:include>
<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<decl_stmt pos:start="6:1" pos:end="6:20"><decl pos:start="6:1" pos:end="6:19"><type pos:start="6:1" pos:end="6:11"><name pos:start="6:1" pos:end="6:11"><name pos:start="6:1" pos:end="6:6">vector</name><argument_list type="generic" pos:start="6:7" pos:end="6:11">&lt;<argument pos:start="6:8" pos:end="6:10"><expr pos:start="6:8" pos:end="6:10"><name pos:start="6:8" pos:end="6:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:13" pos:end="6:19"><name pos:start="6:13" pos:end="6:13">f</name><index pos:start="6:14" pos:end="6:19">[<expr pos:start="6:15" pos:end="6:18"><literal type="number" pos:start="6:15" pos:end="6:18">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:13"><decl pos:start="7:1" pos:end="7:12"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:6">du</name><index pos:start="7:7" pos:end="7:12">[<expr pos:start="7:8" pos:end="7:11"><literal type="number" pos:start="7:8" pos:end="7:11">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="8:1" pos:end="43:1"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:8">main</name><parameter_list pos:start="8:9" pos:end="8:10">()</parameter_list> <block pos:start="8:12" pos:end="43:1">{<block_content pos:start="9:5" pos:end="42:13">
    <expr_stmt pos:start="9:5" pos:end="9:32"><expr pos:start="9:5" pos:end="9:31"><call pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:11">freopen</name><argument_list pos:start="9:12" pos:end="9:31">(<argument pos:start="9:13" pos:end="9:18"><expr pos:start="9:13" pos:end="9:18"><literal type="string" pos:start="9:13" pos:end="9:18">"p.in"</literal></expr></argument>, <argument pos:start="9:21" pos:end="9:23"><expr pos:start="9:21" pos:end="9:23"><literal type="string" pos:start="9:21" pos:end="9:23">"r"</literal></expr></argument>, <argument pos:start="9:26" pos:end="9:30"><expr pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:34"><expr pos:start="10:5" pos:end="10:33"><call pos:start="10:5" pos:end="10:33"><name pos:start="10:5" pos:end="10:11">freopen</name><argument_list pos:start="10:12" pos:end="10:33">(<argument pos:start="10:13" pos:end="10:19"><expr pos:start="10:13" pos:end="10:19"><literal type="string" pos:start="10:13" pos:end="10:19">"p.out"</literal></expr></argument>, <argument pos:start="10:22" pos:end="10:24"><expr pos:start="10:22" pos:end="10:24"><literal type="string" pos:start="10:22" pos:end="10:24">"w"</literal></expr></argument>, <argument pos:start="10:27" pos:end="10:32"><expr pos:start="10:27" pos:end="10:32"><name pos:start="10:27" pos:end="10:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:13"><expr pos:start="12:5" pos:end="12:12"><name pos:start="12:5" pos:end="12:7">cin</name> <operator pos:start="12:9" pos:end="12:10">&gt;&gt;</operator> <name pos:start="12:12" pos:end="12:12">t</name></expr>;</expr_stmt>
    <while pos:start="13:5" pos:end="41:5">while <condition pos:start="13:11" pos:end="13:15">(<expr pos:start="13:12" pos:end="13:14"><name pos:start="13:12" pos:end="13:12">t</name><operator pos:start="13:13" pos:end="13:14">--</operator></expr>)</condition> <block pos:start="13:17" pos:end="41:5">{<block_content pos:start="14:9" pos:end="40:28">
        <for pos:start="14:9" pos:end="16:9">for <control pos:start="14:13" pos:end="14:39">(<init pos:start="14:14" pos:end="14:23"><decl pos:start="14:14" pos:end="14:22"><type pos:start="14:14" pos:end="14:16"><name pos:start="14:14" pos:end="14:16">int</name></type> <name pos:start="14:18" pos:end="14:18">i</name> <init pos:start="14:20" pos:end="14:22">= <expr pos:start="14:22" pos:end="14:22"><literal type="number" pos:start="14:22" pos:end="14:22">0</literal></expr></init></decl>;</init> <condition pos:start="14:25" pos:end="14:34"><expr pos:start="14:25" pos:end="14:33"><name pos:start="14:25" pos:end="14:25">i</name> <operator pos:start="14:27" pos:end="14:28">&lt;=</operator> <literal type="number" pos:start="14:30" pos:end="14:33">1000</literal></expr>;</condition> <incr pos:start="14:36" pos:end="14:38"><expr pos:start="14:36" pos:end="14:38"><name pos:start="14:36" pos:end="14:36">i</name><operator pos:start="14:37" pos:end="14:38">++</operator></expr></incr>)</control> <block pos:start="14:41" pos:end="16:9">{<block_content pos:start="15:13" pos:end="15:25">
            <expr_stmt pos:start="15:13" pos:end="15:25"><expr pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:13">f</name><index pos:start="15:14" pos:end="15:16">[<expr pos:start="15:15" pos:end="15:15"><name pos:start="15:15" pos:end="15:15">i</name></expr>]</index></name><operator pos:start="15:17" pos:end="15:17">.</operator><call pos:start="15:18" pos:end="15:24"><name pos:start="15:18" pos:end="15:22">clear</name><argument_list pos:start="15:23" pos:end="15:24">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="17:9" pos:end="17:34"><expr pos:start="17:9" pos:end="17:33"><call pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:14">memset</name><argument_list pos:start="17:15" pos:end="17:33">(<argument pos:start="17:16" pos:end="17:17"><expr pos:start="17:16" pos:end="17:17"><name pos:start="17:16" pos:end="17:17">du</name></expr></argument>, <argument pos:start="17:20" pos:end="17:20"><expr pos:start="17:20" pos:end="17:20"><literal type="number" pos:start="17:20" pos:end="17:20">0</literal></expr></argument>, <argument pos:start="17:23" pos:end="17:32"><expr pos:start="17:23" pos:end="17:32"><sizeof pos:start="17:23" pos:end="17:32">sizeof<argument_list pos:start="17:29" pos:end="17:32">(<argument pos:start="17:30" pos:end="17:31"><expr pos:start="17:30" pos:end="17:31"><name pos:start="17:30" pos:end="17:31">du</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="18:9" pos:end="18:14"><decl pos:start="18:9" pos:end="18:13"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">n</name></decl>;</decl_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:17"><expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:11">cin</name> <operator pos:start="19:13" pos:end="19:14">&gt;&gt;</operator> <name pos:start="19:16" pos:end="19:16">n</name></expr>;</expr_stmt>
        <for pos:start="20:9" pos:end="27:9">for <control pos:start="20:13" pos:end="20:35">(<init pos:start="20:14" pos:end="20:23"><decl pos:start="20:14" pos:end="20:22"><type pos:start="20:14" pos:end="20:16"><name pos:start="20:14" pos:end="20:16">int</name></type> <name pos:start="20:18" pos:end="20:18">i</name> <init pos:start="20:20" pos:end="20:22">= <expr pos:start="20:22" pos:end="20:22"><literal type="number" pos:start="20:22" pos:end="20:22">1</literal></expr></init></decl>;</init> <condition pos:start="20:25" pos:end="20:30"><expr pos:start="20:25" pos:end="20:29"><name pos:start="20:25" pos:end="20:25">i</name> <operator pos:start="20:27" pos:end="20:27">&lt;</operator> <name pos:start="20:29" pos:end="20:29">n</name></expr>;</condition> <incr pos:start="20:32" pos:end="20:34"><expr pos:start="20:32" pos:end="20:34"><name pos:start="20:32" pos:end="20:32">i</name><operator pos:start="20:33" pos:end="20:34">++</operator></expr></incr>)</control> <block pos:start="20:37" pos:end="27:9">{<block_content pos:start="21:13" pos:end="26:20">
            <decl_stmt pos:start="21:13" pos:end="21:21"><decl pos:start="21:13" pos:end="21:17"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:17">x</name></decl>, <decl pos:start="21:20" pos:end="21:20"><type ref="prev" pos:start="21:13" pos:end="21:15"/><name pos:start="21:20" pos:end="21:20">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:26"><expr pos:start="22:13" pos:end="22:25"><name pos:start="22:13" pos:end="22:15">cin</name> <operator pos:start="22:17" pos:end="22:18">&gt;&gt;</operator> <name pos:start="22:20" pos:end="22:20">x</name> <operator pos:start="22:22" pos:end="22:23">&gt;&gt;</operator> <name pos:start="22:25" pos:end="22:25">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:30"><expr pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:16"><name pos:start="23:13" pos:end="23:13">f</name><index pos:start="23:14" pos:end="23:16">[<expr pos:start="23:15" pos:end="23:15"><name pos:start="23:15" pos:end="23:15">x</name></expr>]</index></name><operator pos:start="23:17" pos:end="23:17">.</operator><call pos:start="23:18" pos:end="23:29"><name pos:start="23:18" pos:end="23:26">push_back</name><argument_list pos:start="23:27" pos:end="23:29">(<argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="24:13" pos:end="24:30"><expr pos:start="24:13" pos:end="24:29"><name pos:start="24:13" pos:end="24:16"><name pos:start="24:13" pos:end="24:13">f</name><index pos:start="24:14" pos:end="24:16">[<expr pos:start="24:15" pos:end="24:15"><name pos:start="24:15" pos:end="24:15">y</name></expr>]</index></name><operator pos:start="24:17" pos:end="24:17">.</operator><call pos:start="24:18" pos:end="24:29"><name pos:start="24:18" pos:end="24:26">push_back</name><argument_list pos:start="24:27" pos:end="24:29">(<argument pos:start="24:28" pos:end="24:28"><expr pos:start="24:28" pos:end="24:28"><name pos:start="24:28" pos:end="24:28">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="25:13" pos:end="25:20"><expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:14">du</name><index pos:start="25:15" pos:end="25:17">[<expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">x</name></expr>]</index></name><operator pos:start="25:18" pos:end="25:19">++</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="26:13" pos:end="26:20"><expr pos:start="26:13" pos:end="26:19"><name pos:start="26:13" pos:end="26:17"><name pos:start="26:13" pos:end="26:14">du</name><index pos:start="26:15" pos:end="26:17">[<expr pos:start="26:16" pos:end="26:16"><name pos:start="26:16" pos:end="26:16">y</name></expr>]</index></name><operator pos:start="26:18" pos:end="26:19">++</operator></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="28:9" pos:end="28:20"><decl pos:start="28:9" pos:end="28:19"><type pos:start="28:9" pos:end="28:11"><name pos:start="28:9" pos:end="28:11">int</name></type> <name pos:start="28:13" pos:end="28:15">res</name> <init pos:start="28:17" pos:end="28:19">= <expr pos:start="28:19" pos:end="28:19"><literal type="number" pos:start="28:19" pos:end="28:19">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="29:9" pos:end="39:9">for <control pos:start="29:13" pos:end="29:36">(<init pos:start="29:14" pos:end="29:23"><decl pos:start="29:14" pos:end="29:22"><type pos:start="29:14" pos:end="29:16"><name pos:start="29:14" pos:end="29:16">int</name></type> <name pos:start="29:18" pos:end="29:18">i</name> <init pos:start="29:20" pos:end="29:22">= <expr pos:start="29:22" pos:end="29:22"><literal type="number" pos:start="29:22" pos:end="29:22">1</literal></expr></init></decl>;</init> <condition pos:start="29:25" pos:end="29:31"><expr pos:start="29:25" pos:end="29:30"><name pos:start="29:25" pos:end="29:25">i</name> <operator pos:start="29:27" pos:end="29:28">&lt;=</operator> <name pos:start="29:30" pos:end="29:30">n</name></expr>;</condition> <incr pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><name pos:start="29:33" pos:end="29:33">i</name><operator pos:start="29:34" pos:end="29:35">++</operator></expr></incr>)</control> <block pos:start="29:38" pos:end="39:9">{<block_content pos:start="30:13" pos:end="38:13">
            <decl_stmt pos:start="30:13" pos:end="30:22"><decl pos:start="30:13" pos:end="30:21"><type pos:start="30:13" pos:end="30:15"><name pos:start="30:13" pos:end="30:15">int</name></type> <name pos:start="30:17" pos:end="30:17">j</name> <init pos:start="30:19" pos:end="30:21">= <expr pos:start="30:21" pos:end="30:21"><literal type="number" pos:start="30:21" pos:end="30:21">1</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="31:13" pos:end="35:13">for <control pos:start="31:17" pos:end="31:45">(<init pos:start="31:18" pos:end="31:23"><expr pos:start="31:18" pos:end="31:22"><name pos:start="31:18" pos:end="31:18">j</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>;</init> <condition pos:start="31:25" pos:end="31:40"><expr pos:start="31:25" pos:end="31:39"><name pos:start="31:25" pos:end="31:25">j</name> <operator pos:start="31:27" pos:end="31:27">&lt;</operator> <name pos:start="31:29" pos:end="31:32"><name pos:start="31:29" pos:end="31:29">f</name><index pos:start="31:30" pos:end="31:32">[<expr pos:start="31:31" pos:end="31:31"><name pos:start="31:31" pos:end="31:31">i</name></expr>]</index></name><operator pos:start="31:33" pos:end="31:33">.</operator><call pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:37">size</name><argument_list pos:start="31:38" pos:end="31:39">()</argument_list></call></expr>;</condition> <incr pos:start="31:42" pos:end="31:44"><expr pos:start="31:42" pos:end="31:44"><name pos:start="31:42" pos:end="31:42">j</name><operator pos:start="31:43" pos:end="31:44">++</operator></expr></incr>)</control> <block pos:start="31:47" pos:end="35:13">{<block_content pos:start="32:17" pos:end="34:17">
                <if_stmt pos:start="32:17" pos:end="34:17"><if pos:start="32:17" pos:end="34:17">if <condition pos:start="32:20" pos:end="32:40">(<expr pos:start="32:21" pos:end="32:39"><name pos:start="32:21" pos:end="32:25"><name pos:start="32:21" pos:end="32:22">du</name><index pos:start="32:23" pos:end="32:25">[<expr pos:start="32:24" pos:end="32:24"><name pos:start="32:24" pos:end="32:24">i</name></expr>]</index></name> <operator pos:start="32:27" pos:end="32:27">&lt;</operator> <name pos:start="32:29" pos:end="32:39"><name pos:start="32:29" pos:end="32:30">du</name><index pos:start="32:31" pos:end="32:39">[<expr pos:start="32:32" pos:end="32:38"><name pos:start="32:32" pos:end="32:38"><name pos:start="32:32" pos:end="32:32">f</name><index pos:start="32:33" pos:end="32:35">[<expr pos:start="32:34" pos:end="32:34"><name pos:start="32:34" pos:end="32:34">i</name></expr>]</index><index pos:start="32:36" pos:end="32:38">[<expr pos:start="32:37" pos:end="32:37"><name pos:start="32:37" pos:end="32:37">j</name></expr>]</index></name></expr>]</index></name></expr>)</condition> <block pos:start="32:42" pos:end="34:17">{<block_content pos:start="33:21" pos:end="33:26">
                    <break pos:start="33:21" pos:end="33:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="36:13" pos:end="38:13"><if pos:start="36:13" pos:end="38:13">if <condition pos:start="36:16" pos:end="36:33">(<expr pos:start="36:17" pos:end="36:32"><name pos:start="36:17" pos:end="36:17">j</name> <operator pos:start="36:19" pos:end="36:20">==</operator> <name pos:start="36:22" pos:end="36:25"><name pos:start="36:22" pos:end="36:22">f</name><index pos:start="36:23" pos:end="36:25">[<expr pos:start="36:24" pos:end="36:24"><name pos:start="36:24" pos:end="36:24">i</name></expr>]</index></name><operator pos:start="36:26" pos:end="36:26">.</operator><call pos:start="36:27" pos:end="36:32"><name pos:start="36:27" pos:end="36:30">size</name><argument_list pos:start="36:31" pos:end="36:32">()</argument_list></call></expr>)</condition> <block pos:start="36:35" pos:end="38:13">{<block_content pos:start="37:17" pos:end="37:22">
                <expr_stmt pos:start="37:17" pos:end="37:22"><expr pos:start="37:17" pos:end="37:21"><name pos:start="37:17" pos:end="37:19">res</name><operator pos:start="37:20" pos:end="37:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for> 
        <expr_stmt pos:start="40:9" pos:end="40:28"><expr pos:start="40:9" pos:end="40:27"><name pos:start="40:9" pos:end="40:12">cout</name> <operator pos:start="40:14" pos:end="40:15">&lt;&lt;</operator> <name pos:start="40:17" pos:end="40:19">res</name> <operator pos:start="40:21" pos:end="40:22">&lt;&lt;</operator> <name pos:start="40:24" pos:end="40:27">endl</name></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="42:5" pos:end="42:13">return <expr pos:start="42:12" pos:end="42:12"><literal type="number" pos:start="42:12" pos:end="42:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
