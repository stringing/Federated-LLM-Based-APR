<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/179/179.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="43:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="43:1">{<block_content pos:start="4:5" pos:end="42:5">
    <decl_stmt pos:start="4:5" pos:end="4:14"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">n</name></decl>,<decl pos:start="4:11" pos:end="4:13"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:11" pos:end="4:11">x</name><init pos:start="4:12" pos:end="4:13">=<expr pos:start="4:13" pos:end="4:13"><literal type="number" pos:start="4:13" pos:end="4:13">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:11"><expr pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:7">cin</name><operator pos:start="5:8" pos:end="5:9">&gt;&gt;</operator><name pos:start="5:10" pos:end="5:10">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:14"><expr pos:start="6:5" pos:end="6:13"><call pos:start="6:5" pos:end="6:13"><name pos:start="6:5" pos:end="6:11">getchar</name><argument_list pos:start="6:12" pos:end="6:13">()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">string</name></type> <name pos:start="7:12" pos:end="7:18"><name pos:start="7:12" pos:end="7:12">a</name><index pos:start="7:13" pos:end="7:18">[<expr pos:start="7:14" pos:end="7:17"><literal type="number" pos:start="7:14" pos:end="7:17">1999</literal></expr>]</index></name><init pos:start="7:19" pos:end="7:21">=<expr pos:start="7:20" pos:end="7:21"><block pos:start="7:20" pos:end="7:21">{}</block></expr></init></decl>;</decl_stmt>
    <while pos:start="8:5" pos:end="42:5">while<condition pos:start="8:10" pos:end="8:14">(<expr pos:start="8:11" pos:end="8:13"><name pos:start="8:11" pos:end="8:11">n</name><operator pos:start="8:12" pos:end="8:13">--</operator></expr>)</condition><block pos:start="8:15" pos:end="42:5">{<block_content pos:start="9:9" pos:end="41:19">
        <for pos:start="9:9" pos:end="11:9">for<control pos:start="9:12" pos:end="9:31">(<init pos:start="9:13" pos:end="9:20"><decl pos:start="9:13" pos:end="9:19"><type pos:start="9:13" pos:end="9:15"><name pos:start="9:13" pos:end="9:15">int</name></type> <name pos:start="9:17" pos:end="9:17">i</name><init pos:start="9:18" pos:end="9:19">=<expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr></init></decl>;</init><condition pos:start="9:21" pos:end="9:27"><expr pos:start="9:21" pos:end="9:26"><name pos:start="9:21" pos:end="9:21">i</name><operator pos:start="9:22" pos:end="9:22">&lt;</operator><literal type="number" pos:start="9:23" pos:end="9:26">1999</literal></expr>;</condition><incr pos:start="9:28" pos:end="9:30"><expr pos:start="9:28" pos:end="9:30"><name pos:start="9:28" pos:end="9:28">i</name><operator pos:start="9:29" pos:end="9:30">++</operator></expr></incr>)</control><block pos:start="9:32" pos:end="11:9">{<block_content pos:start="10:13" pos:end="10:20">
            <expr_stmt pos:start="10:13" pos:end="10:20"><expr pos:start="10:13" pos:end="10:19"><name pos:start="10:13" pos:end="10:16"><name pos:start="10:13" pos:end="10:13">a</name><index pos:start="10:14" pos:end="10:16">[<expr pos:start="10:15" pos:end="10:15"><name pos:start="10:15" pos:end="10:15">i</name></expr>]</index></name><operator pos:start="10:17" pos:end="10:17">=</operator><literal type="string" pos:start="10:18" pos:end="10:19">""</literal></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="12:9" pos:end="12:12"><expr pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:9">x</name><operator pos:start="12:10" pos:end="12:10">=</operator><literal type="number" pos:start="12:11" pos:end="12:11">0</literal></expr>;</expr_stmt>
        <decl_stmt pos:start="13:9" pos:end="13:17"><decl pos:start="13:9" pos:end="13:16"><type pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:14">string</name></type> <name pos:start="13:16" pos:end="13:16">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:23"><expr pos:start="14:9" pos:end="14:22"><call pos:start="14:9" pos:end="14:22"><name pos:start="14:9" pos:end="14:15">getline</name><argument_list pos:start="14:16" pos:end="14:22">(<argument pos:start="14:17" pos:end="14:19"><expr pos:start="14:17" pos:end="14:19"><name pos:start="14:17" pos:end="14:19">cin</name></expr></argument>,<argument pos:start="14:21" pos:end="14:21"><expr pos:start="14:21" pos:end="14:21"><name pos:start="14:21" pos:end="14:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="15:9" pos:end="27:9">for<control pos:start="15:12" pos:end="15:35">(<init pos:start="15:13" pos:end="15:20"><decl pos:start="15:13" pos:end="15:19"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:17">i</name><init pos:start="15:18" pos:end="15:19">=<expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr></init></decl>;</init><condition pos:start="15:21" pos:end="15:31"><expr pos:start="15:21" pos:end="15:30"><name pos:start="15:21" pos:end="15:21">i</name><operator pos:start="15:22" pos:end="15:22">&lt;</operator><call pos:start="15:23" pos:end="15:30"><name pos:start="15:23" pos:end="15:28"><name pos:start="15:23" pos:end="15:23">s</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:28">size</name></name><argument_list pos:start="15:29" pos:end="15:30">()</argument_list></call></expr>;</condition><incr pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:32">i</name><operator pos:start="15:33" pos:end="15:34">++</operator></expr></incr>)</control><block pos:start="15:36" pos:end="27:9">{<block_content pos:start="16:13" pos:end="26:13">
            <if_stmt pos:start="16:13" pos:end="18:13"><if pos:start="16:13" pos:end="18:13">if<condition pos:start="16:15" pos:end="16:47">(<expr pos:start="16:16" pos:end="16:46"><name pos:start="16:16" pos:end="16:19"><name pos:start="16:16" pos:end="16:16">s</name><index pos:start="16:17" pos:end="16:19">[<expr pos:start="16:18" pos:end="16:18"><name pos:start="16:18" pos:end="16:18">i</name></expr>]</index></name><operator pos:start="16:20" pos:end="16:21">&gt;=</operator><literal type="char" pos:start="16:22" pos:end="16:24">'A'</literal><operator pos:start="16:25" pos:end="16:26">&amp;&amp;</operator><name pos:start="16:27" pos:end="16:30"><name pos:start="16:27" pos:end="16:27">s</name><index pos:start="16:28" pos:end="16:30">[<expr pos:start="16:29" pos:end="16:29"><name pos:start="16:29" pos:end="16:29">i</name></expr>]</index></name><operator pos:start="16:31" pos:end="16:32">&lt;=</operator><literal type="char" pos:start="16:33" pos:end="16:35">'Z'</literal><operator pos:start="16:36" pos:end="16:37">&amp;&amp;</operator><name pos:start="16:38" pos:end="16:41"><name pos:start="16:38" pos:end="16:38">s</name><index pos:start="16:39" pos:end="16:41">[<expr pos:start="16:40" pos:end="16:40"><name pos:start="16:40" pos:end="16:40">i</name></expr>]</index></name><operator pos:start="16:42" pos:end="16:43">!=</operator><literal type="char" pos:start="16:44" pos:end="16:46">'I'</literal></expr>)</condition><block pos:start="16:48" pos:end="18:13">{<block_content pos:start="17:17" pos:end="17:25">
                <expr_stmt pos:start="17:17" pos:end="17:25"><expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:20"><name pos:start="17:17" pos:end="17:17">s</name><index pos:start="17:18" pos:end="17:20">[<expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">i</name></expr>]</index></name><operator pos:start="17:21" pos:end="17:22">+=</operator><literal type="number" pos:start="17:23" pos:end="17:24">32</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="19:13" pos:end="21:13"><if pos:start="19:13" pos:end="21:13">if<condition pos:start="19:15" pos:end="19:25">(<expr pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:16">s</name><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><name pos:start="19:18" pos:end="19:18">i</name></expr>]</index></name><operator pos:start="19:20" pos:end="19:21">==</operator><literal type="char" pos:start="19:22" pos:end="19:24">'?'</literal></expr>)</condition><block pos:start="19:26" pos:end="21:13">{<block_content pos:start="20:17" pos:end="20:25">
                <expr_stmt pos:start="20:17" pos:end="20:25"><expr pos:start="20:17" pos:end="20:24"><name pos:start="20:17" pos:end="20:20"><name pos:start="20:17" pos:end="20:17">s</name><index pos:start="20:18" pos:end="20:20">[<expr pos:start="20:19" pos:end="20:19"><name pos:start="20:19" pos:end="20:19">i</name></expr>]</index></name><operator pos:start="20:21" pos:end="20:21">=</operator><literal type="char" pos:start="20:22" pos:end="20:24">'!'</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="22:13" pos:end="26:13"><if pos:start="22:13" pos:end="24:13">if<condition pos:start="22:15" pos:end="22:25">(<expr pos:start="22:16" pos:end="22:24"><name pos:start="22:16" pos:end="22:19"><name pos:start="22:16" pos:end="22:16">s</name><index pos:start="22:17" pos:end="22:19">[<expr pos:start="22:18" pos:end="22:18"><name pos:start="22:18" pos:end="22:18">i</name></expr>]</index></name><operator pos:start="22:20" pos:end="22:21">!=</operator><literal type="char" pos:start="22:22" pos:end="22:24">' '</literal></expr>)</condition><block pos:start="22:26" pos:end="24:13">{<block_content pos:start="23:17" pos:end="23:27">
                <expr_stmt pos:start="23:17" pos:end="23:27"><expr pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:20"><name pos:start="23:17" pos:end="23:17">a</name><index pos:start="23:18" pos:end="23:20">[<expr pos:start="23:19" pos:end="23:19"><name pos:start="23:19" pos:end="23:19">x</name></expr>]</index></name><operator pos:start="23:21" pos:end="23:22">+=</operator><name pos:start="23:23" pos:end="23:26"><name pos:start="23:23" pos:end="23:23">s</name><index pos:start="23:24" pos:end="23:26">[<expr pos:start="23:25" pos:end="23:25"><name pos:start="23:25" pos:end="23:25">i</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if><else pos:start="24:14" pos:end="26:13">else<block pos:start="24:18" pos:end="26:13">{<block_content pos:start="25:17" pos:end="25:20">
                <expr_stmt pos:start="25:17" pos:end="25:20"><expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:17">x</name><operator pos:start="25:18" pos:end="25:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
        <for pos:start="28:9" pos:end="40:9">for<control pos:start="28:12" pos:end="28:29">(<init pos:start="28:13" pos:end="28:20"><decl pos:start="28:13" pos:end="28:19"><type pos:start="28:13" pos:end="28:15"><name pos:start="28:13" pos:end="28:15">int</name></type> <name pos:start="28:17" pos:end="28:17">i</name><init pos:start="28:18" pos:end="28:19">=<expr pos:start="28:19" pos:end="28:19"><literal type="number" pos:start="28:19" pos:end="28:19">0</literal></expr></init></decl>;</init><condition pos:start="28:21" pos:end="28:25"><expr pos:start="28:21" pos:end="28:24"><name pos:start="28:21" pos:end="28:21">i</name><operator pos:start="28:22" pos:end="28:23">&lt;=</operator><name pos:start="28:24" pos:end="28:24">x</name></expr>;</condition><incr pos:start="28:26" pos:end="28:28"><expr pos:start="28:26" pos:end="28:28"><name pos:start="28:26" pos:end="28:26">i</name><operator pos:start="28:27" pos:end="28:28">++</operator></expr></incr>)</control><block pos:start="28:30" pos:end="40:9">{<block_content pos:start="29:13" pos:end="39:13">
            <if_stmt pos:start="29:13" pos:end="39:13"><if pos:start="29:13" pos:end="33:13">if<condition pos:start="29:15" pos:end="29:42">(<expr pos:start="29:16" pos:end="29:41"><name pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:16">a</name><index pos:start="29:17" pos:end="29:19">[<expr pos:start="29:18" pos:end="29:18"><name pos:start="29:18" pos:end="29:18">i</name></expr>]</index></name><operator pos:start="29:20" pos:end="29:21">==</operator><literal type="string" pos:start="29:22" pos:end="29:26">"can"</literal><operator pos:start="29:27" pos:end="29:28">||</operator><name pos:start="29:29" pos:end="29:32"><name pos:start="29:29" pos:end="29:29">a</name><index pos:start="29:30" pos:end="29:32">[<expr pos:start="29:31" pos:end="29:31"><name pos:start="29:31" pos:end="29:31">i</name></expr>]</index></name><operator pos:start="29:33" pos:end="29:34">==</operator><literal type="string" pos:start="29:35" pos:end="29:41">"could"</literal></expr>)</condition><block pos:start="29:43" pos:end="33:13">{<block_content pos:start="30:17" pos:end="32:17">
                <if_stmt pos:start="30:17" pos:end="32:17"><if pos:start="30:17" pos:end="32:17">if<condition pos:start="30:19" pos:end="30:33">(<expr pos:start="30:20" pos:end="30:32"><name pos:start="30:20" pos:end="30:25"><name pos:start="30:20" pos:end="30:20">a</name><index pos:start="30:21" pos:end="30:25">[<expr pos:start="30:22" pos:end="30:24"><name pos:start="30:22" pos:end="30:22">i</name><operator pos:start="30:23" pos:end="30:23">+</operator><literal type="number" pos:start="30:24" pos:end="30:24">1</literal></expr>]</index></name><operator pos:start="30:26" pos:end="30:27">==</operator><literal type="string" pos:start="30:28" pos:end="30:32">"you"</literal></expr>)</condition><block pos:start="30:34" pos:end="32:17">{<block_content pos:start="31:21" pos:end="31:42">
                    <expr_stmt pos:start="31:21" pos:end="31:42"><expr pos:start="31:21" pos:end="31:41"><name pos:start="31:21" pos:end="31:24">cout</name><operator pos:start="31:25" pos:end="31:26">&lt;&lt;</operator><literal type="string" pos:start="31:27" pos:end="31:30">"I "</literal><operator pos:start="31:31" pos:end="31:32">&lt;&lt;</operator><name pos:start="31:33" pos:end="31:36"><name pos:start="31:33" pos:end="31:33">a</name><index pos:start="31:34" pos:end="31:36">[<expr pos:start="31:35" pos:end="31:35"><name pos:start="31:35" pos:end="31:35">i</name></expr>]</index></name><operator pos:start="31:37" pos:end="31:38">&lt;&lt;</operator><literal type="string" pos:start="31:39" pos:end="31:41">" "</literal></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="34:13" pos:end="36:13">else if<condition pos:start="34:20" pos:end="34:42">(<expr pos:start="34:21" pos:end="34:41"><name pos:start="34:21" pos:end="34:24"><name pos:start="34:21" pos:end="34:21">a</name><index pos:start="34:22" pos:end="34:24">[<expr pos:start="34:23" pos:end="34:23"><name pos:start="34:23" pos:end="34:23">i</name></expr>]</index></name><operator pos:start="34:25" pos:end="34:26">==</operator><literal type="string" pos:start="34:27" pos:end="34:30">"me"</literal><operator pos:start="34:31" pos:end="34:32">||</operator><name pos:start="34:33" pos:end="34:36"><name pos:start="34:33" pos:end="34:33">a</name><index pos:start="34:34" pos:end="34:36">[<expr pos:start="34:35" pos:end="34:35"><name pos:start="34:35" pos:end="34:35">i</name></expr>]</index></name><operator pos:start="34:37" pos:end="34:38">==</operator><literal type="string" pos:start="34:39" pos:end="34:41">"I"</literal></expr>)</condition><block pos:start="34:43" pos:end="36:13">{<block_content pos:start="35:17" pos:end="35:29">
                <expr_stmt pos:start="35:17" pos:end="35:29"><expr pos:start="35:17" pos:end="35:28"><name pos:start="35:17" pos:end="35:20">cout</name><operator pos:start="35:21" pos:end="35:22">&lt;&lt;</operator><literal type="string" pos:start="35:23" pos:end="35:28">"you "</literal></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="37:13" pos:end="39:13">else<block pos:start="37:17" pos:end="39:13">{<block_content pos:start="38:17" pos:end="38:32">
                <expr_stmt pos:start="38:17" pos:end="38:32"><expr pos:start="38:17" pos:end="38:31"><name pos:start="38:17" pos:end="38:20">cout</name><operator pos:start="38:21" pos:end="38:22">&lt;&lt;</operator><name pos:start="38:23" pos:end="38:26"><name pos:start="38:23" pos:end="38:23">a</name><index pos:start="38:24" pos:end="38:26">[<expr pos:start="38:25" pos:end="38:25"><name pos:start="38:25" pos:end="38:25">i</name></expr>]</index></name><operator pos:start="38:27" pos:end="38:28">&lt;&lt;</operator><literal type="string" pos:start="38:29" pos:end="38:31">" "</literal></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="41:9" pos:end="41:19"><expr pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:12">cout</name><operator pos:start="41:13" pos:end="41:14">&lt;&lt;</operator><name pos:start="41:15" pos:end="41:18">endl</name></expr>;</expr_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>
</unit>
