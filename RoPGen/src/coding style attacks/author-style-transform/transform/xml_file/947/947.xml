<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/947/947.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:6"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:14"><decl pos:start="4:1" pos:end="4:13"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:13"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:9">[<expr pos:start="4:7" pos:end="4:8"><literal type="number" pos:start="4:7" pos:end="4:8">11</literal></expr>]</index><index pos:start="4:10" pos:end="4:13">[<expr pos:start="4:11" pos:end="4:12"><literal type="number" pos:start="4:11" pos:end="4:12">11</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:29"><decl pos:start="5:1" pos:end="5:12"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:12"><name pos:start="5:6" pos:end="5:8">row</name><index pos:start="5:9" pos:end="5:12">[<expr pos:start="5:10" pos:end="5:11"><literal type="number" pos:start="5:10" pos:end="5:11">10</literal></expr>]</index></name></decl>, <decl pos:start="5:15" pos:end="5:20"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:15" pos:end="5:20"><name pos:start="5:15" pos:end="5:16">x1</name><index pos:start="5:17" pos:end="5:20">[<expr pos:start="5:18" pos:end="5:19"><literal type="number" pos:start="5:18" pos:end="5:19">20</literal></expr>]</index></name></decl>, <decl pos:start="5:23" pos:end="5:28"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:24">x2</name><index pos:start="5:25" pos:end="5:28">[<expr pos:start="5:26" pos:end="5:27"><literal type="number" pos:start="5:26" pos:end="5:27">20</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:8"><decl pos:start="6:1" pos:end="6:7"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:7">ans</name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="9:1"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">bool</name></type> <name pos:start="7:6" pos:end="7:10">check</name><parameter_list pos:start="7:11" pos:end="7:24">(<parameter pos:start="7:12" pos:end="7:16"><decl pos:start="7:12" pos:end="7:16"><type pos:start="7:12" pos:end="7:16"><name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:16">i</name></decl></parameter>, <parameter pos:start="7:19" pos:end="7:23"><decl pos:start="7:19" pos:end="7:23"><type pos:start="7:19" pos:end="7:23"><name pos:start="7:19" pos:end="7:21">int</name></type> <name pos:start="7:23" pos:end="7:23">c</name></decl></parameter>)</parameter_list> <block pos:start="7:26" pos:end="9:1">{<block_content pos:start="8:5" pos:end="8:51">
    <return pos:start="8:5" pos:end="8:51">return <expr pos:start="8:12" pos:end="8:50"><operator pos:start="8:12" pos:end="8:12">!</operator><name pos:start="8:13" pos:end="8:18"><name pos:start="8:13" pos:end="8:15">row</name><index pos:start="8:16" pos:end="8:18">[<expr pos:start="8:17" pos:end="8:17"><name pos:start="8:17" pos:end="8:17">i</name></expr>]</index></name> <operator pos:start="8:20" pos:end="8:21">&amp;&amp;</operator> <operator pos:start="8:23" pos:end="8:23">!</operator><name pos:start="8:24" pos:end="8:32"><name pos:start="8:24" pos:end="8:25">x1</name><index pos:start="8:26" pos:end="8:32">[<expr pos:start="8:27" pos:end="8:31"><name pos:start="8:27" pos:end="8:27">i</name> <operator pos:start="8:29" pos:end="8:29">+</operator> <name pos:start="8:31" pos:end="8:31">c</name></expr>]</index></name> <operator pos:start="8:34" pos:end="8:35">&amp;&amp;</operator> <operator pos:start="8:37" pos:end="8:37">!</operator><name pos:start="8:38" pos:end="8:50"><name pos:start="8:38" pos:end="8:39">x2</name><index pos:start="8:40" pos:end="8:50">[<expr pos:start="8:41" pos:end="8:49"><name pos:start="8:41" pos:end="8:41">i</name> <operator pos:start="8:43" pos:end="8:43">-</operator> <name pos:start="8:45" pos:end="8:45">c</name> <operator pos:start="8:47" pos:end="8:47">+</operator> <name pos:start="8:49" pos:end="8:49">n</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>
<function pos:start="10:1" pos:end="25:1"><type pos:start="10:1" pos:end="10:4"><name pos:start="10:1" pos:end="10:4">void</name></type> <name pos:start="10:6" pos:end="10:8">dfs</name><parameter_list pos:start="10:9" pos:end="10:22">(<parameter pos:start="10:10" pos:end="10:14"><decl pos:start="10:10" pos:end="10:14"><type pos:start="10:10" pos:end="10:14"><name pos:start="10:10" pos:end="10:12">int</name></type> <name pos:start="10:14" pos:end="10:14">c</name></decl></parameter>, <parameter pos:start="10:17" pos:end="10:21"><decl pos:start="10:17" pos:end="10:21"><type pos:start="10:17" pos:end="10:21"><name pos:start="10:17" pos:end="10:19">int</name></type> <name pos:start="10:21" pos:end="10:21">p</name></decl></parameter>)</parameter_list> <block pos:start="10:24" pos:end="25:1">{<block_content pos:start="11:5" pos:end="24:5">
    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if<condition pos:start="11:7" pos:end="11:14">(<expr pos:start="11:8" pos:end="11:13"><name pos:start="11:8" pos:end="11:8">c</name> <operator pos:start="11:10" pos:end="11:11">==</operator> <name pos:start="11:13" pos:end="11:13">n</name></expr>)</condition> <block pos:start="11:16" pos:end="17:5">{<block_content pos:start="12:9" pos:end="16:22">
        <if_stmt pos:start="12:9" pos:end="15:9"><if pos:start="12:9" pos:end="15:9">if<condition pos:start="12:11" pos:end="12:18">(<expr pos:start="12:12" pos:end="12:17"><name pos:start="12:12" pos:end="12:12">p</name> <operator pos:start="12:14" pos:end="12:15">&gt;=</operator> <literal type="number" pos:start="12:17" pos:end="12:17">1</literal></expr>)</condition> <block pos:start="12:20" pos:end="15:9">{<block_content pos:start="13:13" pos:end="14:19">
            <expr_stmt pos:start="13:13" pos:end="13:18"><expr pos:start="13:13" pos:end="13:17"><name pos:start="13:13" pos:end="13:15">ans</name><operator pos:start="13:16" pos:end="13:17">++</operator></expr>;</expr_stmt>
            <return pos:start="14:13" pos:end="14:19">return;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:22"><expr pos:start="16:9" pos:end="16:21"><call pos:start="16:9" pos:end="16:21"><name pos:start="16:9" pos:end="16:11">dfs</name><argument_list pos:start="16:12" pos:end="16:21">(<argument pos:start="16:13" pos:end="16:13"><expr pos:start="16:13" pos:end="16:13"><literal type="number" pos:start="16:13" pos:end="16:13">0</literal></expr></argument>, <argument pos:start="16:16" pos:end="16:20"><expr pos:start="16:16" pos:end="16:20"><name pos:start="16:16" pos:end="16:16">p</name> <operator pos:start="16:18" pos:end="16:18">+</operator> <literal type="number" pos:start="16:20" pos:end="16:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <for pos:start="18:5" pos:end="24:5">for<control pos:start="18:8" pos:end="18:30">(<init pos:start="18:9" pos:end="18:18"><decl pos:start="18:9" pos:end="18:17"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">i</name> <init pos:start="18:15" pos:end="18:17">= <expr pos:start="18:17" pos:end="18:17"><literal type="number" pos:start="18:17" pos:end="18:17">0</literal></expr></init></decl>;</init> <condition pos:start="18:20" pos:end="18:25"><expr pos:start="18:20" pos:end="18:24"><name pos:start="18:20" pos:end="18:20">i</name> <operator pos:start="18:22" pos:end="18:22">&lt;</operator> <name pos:start="18:24" pos:end="18:24">n</name></expr>;</condition> <incr pos:start="18:27" pos:end="18:29"><expr pos:start="18:27" pos:end="18:29"><name pos:start="18:27" pos:end="18:27">i</name><operator pos:start="18:28" pos:end="18:29">++</operator></expr></incr>)</control> <block pos:start="18:32" pos:end="24:5">{<block_content pos:start="19:9" pos:end="23:9">
        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if<condition pos:start="19:11" pos:end="19:39">(<expr pos:start="19:12" pos:end="19:38"><call pos:start="19:12" pos:end="19:22"><name pos:start="19:12" pos:end="19:16">check</name><argument_list pos:start="19:17" pos:end="19:22">(<argument pos:start="19:18" pos:end="19:18"><expr pos:start="19:18" pos:end="19:18"><name pos:start="19:18" pos:end="19:18">i</name></expr></argument>, <argument pos:start="19:21" pos:end="19:21"><expr pos:start="19:21" pos:end="19:21"><name pos:start="19:21" pos:end="19:21">c</name></expr></argument>)</argument_list></call> <operator pos:start="19:24" pos:end="19:25">&amp;&amp;</operator> <name pos:start="19:27" pos:end="19:33"><name pos:start="19:27" pos:end="19:27">a</name><index pos:start="19:28" pos:end="19:30">[<expr pos:start="19:29" pos:end="19:29"><name pos:start="19:29" pos:end="19:29">i</name></expr>]</index><index pos:start="19:31" pos:end="19:33">[<expr pos:start="19:32" pos:end="19:32"><name pos:start="19:32" pos:end="19:32">c</name></expr>]</index></name> <operator pos:start="19:35" pos:end="19:36">!=</operator> <literal type="number" pos:start="19:38" pos:end="19:38">0</literal></expr>)</condition> <block pos:start="19:41" pos:end="23:9">{<block_content pos:start="20:13" pos:end="22:55">
            <expr_stmt pos:start="20:13" pos:end="20:54"><expr pos:start="20:13" pos:end="20:53"><name pos:start="20:13" pos:end="20:18"><name pos:start="20:13" pos:end="20:15">row</name><index pos:start="20:16" pos:end="20:18">[<expr pos:start="20:17" pos:end="20:17"><name pos:start="20:17" pos:end="20:17">i</name></expr>]</index></name> <operator pos:start="20:20" pos:end="20:20">=</operator> <name pos:start="20:22" pos:end="20:30"><name pos:start="20:22" pos:end="20:23">x1</name><index pos:start="20:24" pos:end="20:30">[<expr pos:start="20:25" pos:end="20:29"><name pos:start="20:25" pos:end="20:25">i</name> <operator pos:start="20:27" pos:end="20:27">+</operator> <name pos:start="20:29" pos:end="20:29">c</name></expr>]</index></name> <operator pos:start="20:32" pos:end="20:32">=</operator> <name pos:start="20:34" pos:end="20:46"><name pos:start="20:34" pos:end="20:35">x2</name><index pos:start="20:36" pos:end="20:46">[<expr pos:start="20:37" pos:end="20:45"><name pos:start="20:37" pos:end="20:37">i</name> <operator pos:start="20:39" pos:end="20:39">-</operator> <name pos:start="20:41" pos:end="20:41">c</name> <operator pos:start="20:43" pos:end="20:43">+</operator> <name pos:start="20:45" pos:end="20:45">n</name></expr>]</index></name> <operator pos:start="20:48" pos:end="20:48">=</operator> <literal type="boolean" pos:start="20:50" pos:end="20:53">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:26"><expr pos:start="21:13" pos:end="21:25"><call pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:15">dfs</name><argument_list pos:start="21:16" pos:end="21:25">(<argument pos:start="21:17" pos:end="21:21"><expr pos:start="21:17" pos:end="21:21"><name pos:start="21:17" pos:end="21:17">c</name> <operator pos:start="21:19" pos:end="21:19">+</operator> <literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr></argument>, <argument pos:start="21:24" pos:end="21:24"><expr pos:start="21:24" pos:end="21:24"><name pos:start="21:24" pos:end="21:24">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:55"><expr pos:start="22:13" pos:end="22:54"><name pos:start="22:13" pos:end="22:18"><name pos:start="22:13" pos:end="22:15">row</name><index pos:start="22:16" pos:end="22:18">[<expr pos:start="22:17" pos:end="22:17"><name pos:start="22:17" pos:end="22:17">i</name></expr>]</index></name> <operator pos:start="22:20" pos:end="22:20">=</operator> <name pos:start="22:22" pos:end="22:30"><name pos:start="22:22" pos:end="22:23">x1</name><index pos:start="22:24" pos:end="22:30">[<expr pos:start="22:25" pos:end="22:29"><name pos:start="22:25" pos:end="22:25">i</name> <operator pos:start="22:27" pos:end="22:27">+</operator> <name pos:start="22:29" pos:end="22:29">c</name></expr>]</index></name> <operator pos:start="22:32" pos:end="22:32">=</operator> <name pos:start="22:34" pos:end="22:46"><name pos:start="22:34" pos:end="22:35">x2</name><index pos:start="22:36" pos:end="22:46">[<expr pos:start="22:37" pos:end="22:45"><name pos:start="22:37" pos:end="22:37">i</name> <operator pos:start="22:39" pos:end="22:39">-</operator> <name pos:start="22:41" pos:end="22:41">c</name> <operator pos:start="22:43" pos:end="22:43">+</operator> <name pos:start="22:45" pos:end="22:45">n</name></expr>]</index></name> <operator pos:start="22:48" pos:end="22:48">=</operator> <literal type="boolean" pos:start="22:50" pos:end="22:54">false</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="26:1" pos:end="38:1"><type pos:start="26:1" pos:end="26:3"><name pos:start="26:1" pos:end="26:3">int</name></type> <name pos:start="26:5" pos:end="26:8">main</name><parameter_list pos:start="26:9" pos:end="26:10">()</parameter_list> <block pos:start="26:12" pos:end="38:1">{<block_content pos:start="27:5" pos:end="37:13">
    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><call pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:11">freopen</name><argument_list pos:start="27:12" pos:end="27:35">(<argument pos:start="27:13" pos:end="27:22"><expr pos:start="27:13" pos:end="27:22"><literal type="string" pos:start="27:13" pos:end="27:22">"queen.in"</literal></expr></argument>, <argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><literal type="string" pos:start="27:25" pos:end="27:27">"r"</literal></expr></argument>, <argument pos:start="27:30" pos:end="27:34"><expr pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:38"><expr pos:start="28:5" pos:end="28:37"><call pos:start="28:5" pos:end="28:37"><name pos:start="28:5" pos:end="28:11">freopen</name><argument_list pos:start="28:12" pos:end="28:37">(<argument pos:start="28:13" pos:end="28:23"><expr pos:start="28:13" pos:end="28:23"><literal type="string" pos:start="28:13" pos:end="28:23">"queen.out"</literal></expr></argument>, <argument pos:start="28:26" pos:end="28:28"><expr pos:start="28:26" pos:end="28:28"><literal type="string" pos:start="28:26" pos:end="28:28">"w"</literal></expr></argument>, <argument pos:start="28:31" pos:end="28:36"><expr pos:start="28:31" pos:end="28:36"><name pos:start="28:31" pos:end="28:36">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:13"><expr pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:7">cin</name> <operator pos:start="29:9" pos:end="29:10">&gt;&gt;</operator> <name pos:start="29:12" pos:end="29:12">n</name></expr>;</expr_stmt>
    <for pos:start="30:5" pos:end="34:5">for<control pos:start="30:8" pos:end="30:30">(<init pos:start="30:9" pos:end="30:18"><decl pos:start="30:9" pos:end="30:17"><type pos:start="30:9" pos:end="30:11"><name pos:start="30:9" pos:end="30:11">int</name></type> <name pos:start="30:13" pos:end="30:13">i</name> <init pos:start="30:15" pos:end="30:17">= <expr pos:start="30:17" pos:end="30:17"><literal type="number" pos:start="30:17" pos:end="30:17">0</literal></expr></init></decl>;</init> <condition pos:start="30:20" pos:end="30:25"><expr pos:start="30:20" pos:end="30:24"><name pos:start="30:20" pos:end="30:20">i</name> <operator pos:start="30:22" pos:end="30:22">&lt;</operator> <name pos:start="30:24" pos:end="30:24">n</name></expr>;</condition> <incr pos:start="30:27" pos:end="30:29"><expr pos:start="30:27" pos:end="30:29"><name pos:start="30:27" pos:end="30:27">i</name><operator pos:start="30:28" pos:end="30:29">++</operator></expr></incr>)</control> <block pos:start="30:32" pos:end="34:5">{<block_content pos:start="31:9" pos:end="33:9">
        <for pos:start="31:9" pos:end="33:9">for<control pos:start="31:12" pos:end="31:34">(<init pos:start="31:13" pos:end="31:22"><decl pos:start="31:13" pos:end="31:21"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:17">j</name> <init pos:start="31:19" pos:end="31:21">= <expr pos:start="31:21" pos:end="31:21"><literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr></init></decl>;</init> <condition pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:28"><name pos:start="31:24" pos:end="31:24">j</name> <operator pos:start="31:26" pos:end="31:26">&lt;</operator> <name pos:start="31:28" pos:end="31:28">n</name></expr>;</condition> <incr pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:31">j</name><operator pos:start="31:32" pos:end="31:33">++</operator></expr></incr>)</control> <block pos:start="31:36" pos:end="33:9">{<block_content pos:start="32:13" pos:end="32:27">
            <expr_stmt pos:start="32:13" pos:end="32:27"><expr pos:start="32:13" pos:end="32:26"><name pos:start="32:13" pos:end="32:15">cin</name> <operator pos:start="32:17" pos:end="32:18">&gt;&gt;</operator> <name pos:start="32:20" pos:end="32:26"><name pos:start="32:20" pos:end="32:20">a</name><index pos:start="32:21" pos:end="32:23">[<expr pos:start="32:22" pos:end="32:22"><name pos:start="32:22" pos:end="32:22">i</name></expr>]</index><index pos:start="32:24" pos:end="32:26">[<expr pos:start="32:25" pos:end="32:25"><name pos:start="32:25" pos:end="32:25">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="35:5" pos:end="35:14"><expr pos:start="35:5" pos:end="35:13"><call pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:7">dfs</name><argument_list pos:start="35:8" pos:end="35:13">(<argument pos:start="35:9" pos:end="35:9"><expr pos:start="35:9" pos:end="35:9"><literal type="number" pos:start="35:9" pos:end="35:9">0</literal></expr></argument>, <argument pos:start="35:12" pos:end="35:12"><expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:16"><expr pos:start="36:5" pos:end="36:15"><name pos:start="36:5" pos:end="36:8">cout</name> <operator pos:start="36:10" pos:end="36:11">&lt;&lt;</operator> <name pos:start="36:13" pos:end="36:15">ans</name></expr>;</expr_stmt>
    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
