<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/509/509.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>

<decl_stmt pos:start="5:1" pos:end="5:73"><decl pos:start="5:1" pos:end="5:13"><type pos:start="5:1" pos:end="5:9"><name pos:start="5:1" pos:end="5:4">long</name> <name pos:start="5:6" pos:end="5:9">long</name></type> <name pos:start="5:11" pos:end="5:13">ans</name></decl>, <decl pos:start="5:16" pos:end="5:18"><type ref="prev" pos:start="5:1" pos:end="5:9"/><name pos:start="5:16" pos:end="5:18">cnt</name></decl>, <decl pos:start="5:21" pos:end="5:21"><type ref="prev" pos:start="5:1" pos:end="5:9"/><name pos:start="5:21" pos:end="5:21">n</name></decl>, <decl pos:start="5:24" pos:end="5:24"><type ref="prev" pos:start="5:1" pos:end="5:9"/><name pos:start="5:24" pos:end="5:24">m</name></decl>, <decl pos:start="5:27" pos:end="5:27"><type ref="prev" pos:start="5:1" pos:end="5:9"/><name pos:start="5:27" pos:end="5:27">k</name></decl>, <decl pos:start="5:30" pos:end="5:30"><type ref="prev" pos:start="5:1" pos:end="5:9"/><name pos:start="5:30" pos:end="5:30">x</name></decl>, <decl pos:start="5:33" pos:end="5:33"><type ref="prev" pos:start="5:1" pos:end="5:9"/><name pos:start="5:33" pos:end="5:33">y</name></decl>, <decl pos:start="5:36" pos:end="5:36"><type ref="prev" pos:start="5:1" pos:end="5:9"/><name pos:start="5:36" pos:end="5:36">c</name></decl>, <decl pos:start="5:39" pos:end="5:49"><type ref="prev" pos:start="5:1" pos:end="5:9"/><name pos:start="5:39" pos:end="5:49"><name pos:start="5:39" pos:end="5:41">ext</name><index pos:start="5:42" pos:end="5:45">[<expr pos:start="5:43" pos:end="5:44"><literal type="number" pos:start="5:43" pos:end="5:44">20</literal></expr>]</index><index pos:start="5:46" pos:end="5:49">[<expr pos:start="5:47" pos:end="5:48"><literal type="number" pos:start="5:47" pos:end="5:48">20</literal></expr>]</index></name></decl>, <decl pos:start="5:52" pos:end="5:56"><type ref="prev" pos:start="5:1" pos:end="5:9"/><name pos:start="5:52" pos:end="5:56"><name pos:start="5:52" pos:end="5:52">a</name><index pos:start="5:53" pos:end="5:56">[<expr pos:start="5:54" pos:end="5:55"><literal type="number" pos:start="5:54" pos:end="5:55">20</literal></expr>]</index></name></decl>, <decl pos:start="5:59" pos:end="5:72"><type ref="prev" pos:start="5:1" pos:end="5:9"/><name pos:start="5:59" pos:end="5:72"><name pos:start="5:59" pos:end="5:59">f</name><index pos:start="5:60" pos:end="5:68">[<expr pos:start="5:61" pos:end="5:67"><literal type="number" pos:start="5:61" pos:end="5:61">1</literal> <operator pos:start="5:63" pos:end="5:64">&lt;&lt;</operator> <literal type="number" pos:start="5:66" pos:end="5:67">20</literal></expr>]</index><index pos:start="5:69" pos:end="5:72">[<expr pos:start="5:70" pos:end="5:71"><literal type="number" pos:start="5:70" pos:end="5:71">20</literal></expr>]</index></name></decl>;</decl_stmt>

<function pos:start="7:1" pos:end="11:1"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">bool</name></type> <name pos:start="7:6" pos:end="7:10">check</name><parameter_list pos:start="7:11" pos:end="7:17">(<parameter pos:start="7:12" pos:end="7:16"><decl pos:start="7:12" pos:end="7:16"><type pos:start="7:12" pos:end="7:14"><name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:16">t</name></decl></parameter>)</parameter_list><block pos:start="7:18" pos:end="11:1">{<block_content pos:start="8:5" pos:end="10:18">
    <expr_stmt pos:start="8:5" pos:end="8:17"><expr pos:start="8:5" pos:end="8:9"><name pos:start="8:5" pos:end="8:5">x</name> <operator pos:start="8:7" pos:end="8:7">=</operator> <name pos:start="8:9" pos:end="8:9">t</name></expr><operator pos:start="8:10" pos:end="8:10">,</operator> <expr pos:start="8:12" pos:end="8:16"><name pos:start="8:12" pos:end="8:12">y</name> <operator pos:start="8:14" pos:end="8:14">=</operator> <literal type="number" pos:start="8:16" pos:end="8:16">0</literal></expr>;</expr_stmt>
    <while pos:start="9:5" pos:end="9:57">while<condition pos:start="9:10" pos:end="9:12">(<expr pos:start="9:11" pos:end="9:11"><name pos:start="9:11" pos:end="9:11">x</name></expr>)</condition><block type="pseudo" pos:start="9:14" pos:end="9:57"><block_content pos:start="9:14" pos:end="9:57"> <expr_stmt pos:start="9:14" pos:end="9:57"><expr pos:start="9:14" pos:end="9:48"><name pos:start="9:14" pos:end="9:14">y</name> <operator pos:start="9:16" pos:end="9:17">+=</operator> <operator pos:start="9:19" pos:end="9:19">(</operator><ternary pos:start="9:20" pos:end="9:47"><condition pos:start="9:20" pos:end="9:41"><expr pos:start="9:20" pos:end="9:39"><name pos:start="9:20" pos:end="9:20">x</name> <operator pos:start="9:22" pos:end="9:22">-</operator> <operator pos:start="9:24" pos:end="9:24">(</operator><name pos:start="9:25" pos:end="9:25">x</name> <operator pos:start="9:27" pos:end="9:27">/</operator> <literal type="number" pos:start="9:29" pos:end="9:29">2</literal><operator pos:start="9:30" pos:end="9:30">)</operator> <operator pos:start="9:32" pos:end="9:32">*</operator> <literal type="number" pos:start="9:34" pos:end="9:34">2</literal> <operator pos:start="9:36" pos:end="9:37">==</operator> <literal type="number" pos:start="9:39" pos:end="9:39">1</literal></expr> ?</condition><then pos:start="9:43" pos:end="9:43"> <expr pos:start="9:43" pos:end="9:43"><literal type="number" pos:start="9:43" pos:end="9:43">1</literal></expr> </then><else pos:start="9:45" pos:end="9:47">: <expr pos:start="9:47" pos:end="9:47"><literal type="number" pos:start="9:47" pos:end="9:47">0</literal></expr></else></ternary><operator pos:start="9:48" pos:end="9:48">)</operator></expr><operator pos:start="9:49" pos:end="9:49">,</operator> <expr pos:start="9:51" pos:end="9:56"><name pos:start="9:51" pos:end="9:51">x</name> <operator pos:start="9:53" pos:end="9:54">/=</operator> <literal type="number" pos:start="9:56" pos:end="9:56">2</literal></expr>;</expr_stmt></block_content></block></while>
    <return pos:start="10:5" pos:end="10:18">return <expr pos:start="10:12" pos:end="10:17"><name pos:start="10:12" pos:end="10:12">y</name> <operator pos:start="10:14" pos:end="10:15">==</operator> <name pos:start="10:17" pos:end="10:17">m</name></expr>;</return>
</block_content>}</block></function>

<function pos:start="13:1" pos:end="34:1"><type pos:start="13:1" pos:end="13:3"><name pos:start="13:1" pos:end="13:3">int</name></type> <name pos:start="13:5" pos:end="13:8">main</name><parameter_list pos:start="13:9" pos:end="13:10">()</parameter_list><block pos:start="13:11" pos:end="34:1">{<block_content pos:start="14:5" pos:end="33:13">
    <expr_stmt pos:start="14:5" pos:end="14:35"><expr pos:start="14:5" pos:end="14:34"><call pos:start="14:5" pos:end="14:34"><name pos:start="14:5" pos:end="14:11">freopen</name><argument_list pos:start="14:12" pos:end="14:34">(<argument pos:start="14:13" pos:end="14:21"><expr pos:start="14:13" pos:end="14:21"><literal type="string" pos:start="14:13" pos:end="14:21">"meal.in"</literal></expr></argument>, <argument pos:start="14:24" pos:end="14:26"><expr pos:start="14:24" pos:end="14:26"><literal type="string" pos:start="14:24" pos:end="14:26">"r"</literal></expr></argument>, <argument pos:start="14:29" pos:end="14:33"><expr pos:start="14:29" pos:end="14:33"><name pos:start="14:29" pos:end="14:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><call pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:11">freopen</name><argument_list pos:start="15:12" pos:end="15:36">(<argument pos:start="15:13" pos:end="15:22"><expr pos:start="15:13" pos:end="15:22"><literal type="string" pos:start="15:13" pos:end="15:22">"meal.out"</literal></expr></argument>, <argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><literal type="string" pos:start="15:25" pos:end="15:27">"w"</literal></expr></argument>, <argument pos:start="15:30" pos:end="15:35"><expr pos:start="15:30" pos:end="15:35"><name pos:start="15:30" pos:end="15:35">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:32"><expr pos:start="16:5" pos:end="16:31"><call pos:start="16:5" pos:end="16:31"><name pos:start="16:5" pos:end="16:10">memset</name><argument_list pos:start="16:11" pos:end="16:31">(<argument pos:start="16:12" pos:end="16:14"><expr pos:start="16:12" pos:end="16:14"><name pos:start="16:12" pos:end="16:14">ext</name></expr></argument>, <argument pos:start="16:17" pos:end="16:17"><expr pos:start="16:17" pos:end="16:17"><literal type="number" pos:start="16:17" pos:end="16:17">0</literal></expr></argument>, <argument pos:start="16:20" pos:end="16:30"><expr pos:start="16:20" pos:end="16:30"><sizeof pos:start="16:20" pos:end="16:30">sizeof<argument_list pos:start="16:26" pos:end="16:30">(<argument pos:start="16:27" pos:end="16:29"><expr pos:start="16:27" pos:end="16:29"><name pos:start="16:27" pos:end="16:29">ext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><call pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:9">scanf</name><argument_list pos:start="17:10" pos:end="17:37">(<argument pos:start="17:11" pos:end="17:24"><expr pos:start="17:11" pos:end="17:24"><literal type="string" pos:start="17:11" pos:end="17:24">"%lld%lld%lld"</literal></expr></argument>, <argument pos:start="17:27" pos:end="17:28"><expr pos:start="17:27" pos:end="17:28"><operator pos:start="17:27" pos:end="17:27">&amp;</operator><name pos:start="17:28" pos:end="17:28">n</name></expr></argument>, <argument pos:start="17:31" pos:end="17:32"><expr pos:start="17:31" pos:end="17:32"><operator pos:start="17:31" pos:end="17:31">&amp;</operator><name pos:start="17:32" pos:end="17:32">m</name></expr></argument>, <argument pos:start="17:35" pos:end="17:36"><expr pos:start="17:35" pos:end="17:36"><operator pos:start="17:35" pos:end="17:35">&amp;</operator><name pos:start="17:36" pos:end="17:36">k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="18:5" pos:end="18:52">for<control pos:start="18:8" pos:end="18:30">(<init pos:start="18:9" pos:end="18:18"><decl pos:start="18:9" pos:end="18:17"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">i</name> <init pos:start="18:15" pos:end="18:17">= <expr pos:start="18:17" pos:end="18:17"><literal type="number" pos:start="18:17" pos:end="18:17">0</literal></expr></init></decl>;</init> <condition pos:start="18:20" pos:end="18:25"><expr pos:start="18:20" pos:end="18:24"><name pos:start="18:20" pos:end="18:20">i</name> <operator pos:start="18:22" pos:end="18:22">&lt;</operator> <name pos:start="18:24" pos:end="18:24">n</name></expr>;</condition> <incr pos:start="18:27" pos:end="18:29"><expr pos:start="18:27" pos:end="18:29"><operator pos:start="18:27" pos:end="18:28">++</operator><name pos:start="18:29" pos:end="18:29">i</name></expr></incr>)</control><block type="pseudo" pos:start="18:32" pos:end="18:52"><block_content pos:start="18:32" pos:end="18:52"> <expr_stmt pos:start="18:32" pos:end="18:52"><expr pos:start="18:32" pos:end="18:51"><call pos:start="18:32" pos:end="18:51"><name pos:start="18:32" pos:end="18:36">scanf</name><argument_list pos:start="18:37" pos:end="18:51">(<argument pos:start="18:38" pos:end="18:43"><expr pos:start="18:38" pos:end="18:43"><literal type="string" pos:start="18:38" pos:end="18:43">"%lld"</literal></expr></argument>, <argument pos:start="18:46" pos:end="18:50"><expr pos:start="18:46" pos:end="18:50"><operator pos:start="18:46" pos:end="18:46">&amp;</operator><name pos:start="18:47" pos:end="18:50"><name pos:start="18:47" pos:end="18:47">a</name><index pos:start="18:48" pos:end="18:50">[<expr pos:start="18:49" pos:end="18:49"><name pos:start="18:49" pos:end="18:49">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <for pos:start="19:5" pos:end="19:80">for<control pos:start="19:8" pos:end="19:30">(<init pos:start="19:9" pos:end="19:18"><decl pos:start="19:9" pos:end="19:17"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">i</name> <init pos:start="19:15" pos:end="19:17">= <expr pos:start="19:17" pos:end="19:17"><literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr></init></decl>;</init> <condition pos:start="19:20" pos:end="19:25"><expr pos:start="19:20" pos:end="19:24"><name pos:start="19:20" pos:end="19:20">i</name> <operator pos:start="19:22" pos:end="19:22">&lt;</operator> <name pos:start="19:24" pos:end="19:24">k</name></expr>;</condition> <incr pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><operator pos:start="19:27" pos:end="19:28">++</operator><name pos:start="19:29" pos:end="19:29">i</name></expr></incr>)</control><block type="pseudo" pos:start="19:32" pos:end="19:80"><block_content pos:start="19:32" pos:end="19:80"> <expr_stmt pos:start="19:32" pos:end="19:80"><expr pos:start="19:32" pos:end="19:64"><call pos:start="19:32" pos:end="19:64"><name pos:start="19:32" pos:end="19:36">scanf</name><argument_list pos:start="19:37" pos:end="19:64">(<argument pos:start="19:38" pos:end="19:51"><expr pos:start="19:38" pos:end="19:51"><literal type="string" pos:start="19:38" pos:end="19:51">"%lld%lld%lld"</literal></expr></argument>, <argument pos:start="19:54" pos:end="19:55"><expr pos:start="19:54" pos:end="19:55"><operator pos:start="19:54" pos:end="19:54">&amp;</operator><name pos:start="19:55" pos:end="19:55">x</name></expr></argument>, <argument pos:start="19:58" pos:end="19:59"><expr pos:start="19:58" pos:end="19:59"><operator pos:start="19:58" pos:end="19:58">&amp;</operator><name pos:start="19:59" pos:end="19:59">y</name></expr></argument>, <argument pos:start="19:62" pos:end="19:63"><expr pos:start="19:62" pos:end="19:63"><operator pos:start="19:62" pos:end="19:62">&amp;</operator><name pos:start="19:63" pos:end="19:63">c</name></expr></argument>)</argument_list></call></expr><operator pos:start="19:65" pos:end="19:65">,</operator> <expr pos:start="19:67" pos:end="19:79"><name pos:start="19:67" pos:end="19:75"><name pos:start="19:67" pos:end="19:69">ext</name><index pos:start="19:70" pos:end="19:72">[<expr pos:start="19:71" pos:end="19:71"><name pos:start="19:71" pos:end="19:71">x</name></expr>]</index><index pos:start="19:73" pos:end="19:75">[<expr pos:start="19:74" pos:end="19:74"><name pos:start="19:74" pos:end="19:74">y</name></expr>]</index></name> <operator pos:start="19:77" pos:end="19:77">=</operator> <name pos:start="19:79" pos:end="19:79">c</name></expr>;</expr_stmt></block_content></block></for>
    <for pos:start="20:5" pos:end="20:51">for<control pos:start="20:8" pos:end="20:30">(<init pos:start="20:9" pos:end="20:18"><decl pos:start="20:9" pos:end="20:17"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:13">i</name> <init pos:start="20:15" pos:end="20:17">= <expr pos:start="20:17" pos:end="20:17"><literal type="number" pos:start="20:17" pos:end="20:17">0</literal></expr></init></decl>;</init> <condition pos:start="20:20" pos:end="20:25"><expr pos:start="20:20" pos:end="20:24"><name pos:start="20:20" pos:end="20:20">i</name> <operator pos:start="20:22" pos:end="20:22">&lt;</operator> <name pos:start="20:24" pos:end="20:24">n</name></expr>;</condition> <incr pos:start="20:27" pos:end="20:29"><expr pos:start="20:27" pos:end="20:29"><operator pos:start="20:27" pos:end="20:28">++</operator><name pos:start="20:29" pos:end="20:29">i</name></expr></incr>)</control><block type="pseudo" pos:start="20:32" pos:end="20:51"><block_content pos:start="20:32" pos:end="20:51"> <expr_stmt pos:start="20:32" pos:end="20:51"><expr pos:start="20:32" pos:end="20:50"><name pos:start="20:32" pos:end="20:43"><name pos:start="20:32" pos:end="20:32">f</name><index pos:start="20:33" pos:end="20:40">[<expr pos:start="20:34" pos:end="20:39"><literal type="number" pos:start="20:34" pos:end="20:34">1</literal> <operator pos:start="20:36" pos:end="20:37">&lt;&lt;</operator> <name pos:start="20:39" pos:end="20:39">i</name></expr>]</index><index pos:start="20:41" pos:end="20:43">[<expr pos:start="20:42" pos:end="20:42"><name pos:start="20:42" pos:end="20:42">i</name></expr>]</index></name> <operator pos:start="20:45" pos:end="20:45">=</operator> <name pos:start="20:47" pos:end="20:50"><name pos:start="20:47" pos:end="20:47">a</name><index pos:start="20:48" pos:end="20:50">[<expr pos:start="20:49" pos:end="20:49"><name pos:start="20:49" pos:end="20:49">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <for pos:start="21:5" pos:end="26:97">for<control pos:start="21:8" pos:end="21:37">(<init pos:start="21:9" pos:end="21:18"><decl pos:start="21:9" pos:end="21:17"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">i</name> <init pos:start="21:15" pos:end="21:17">= <expr pos:start="21:17" pos:end="21:17"><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr></init></decl>;</init> <condition pos:start="21:20" pos:end="21:32"><expr pos:start="21:20" pos:end="21:31"><name pos:start="21:20" pos:end="21:20">i</name> <operator pos:start="21:22" pos:end="21:22">&lt;</operator> <operator pos:start="21:24" pos:end="21:24">(</operator><literal type="number" pos:start="21:25" pos:end="21:25">1</literal> <operator pos:start="21:27" pos:end="21:28">&lt;&lt;</operator> <name pos:start="21:30" pos:end="21:30">n</name><operator pos:start="21:31" pos:end="21:31">)</operator></expr>;</condition> <incr pos:start="21:34" pos:end="21:36"><expr pos:start="21:34" pos:end="21:36"><operator pos:start="21:34" pos:end="21:35">++</operator><name pos:start="21:36" pos:end="21:36">i</name></expr></incr>)</control><block type="pseudo" pos:start="22:9" pos:end="26:97"><block_content pos:start="22:9" pos:end="26:97">
        <for pos:start="22:9" pos:end="26:97">for<control pos:start="22:12" pos:end="22:34">(<init pos:start="22:13" pos:end="22:22"><decl pos:start="22:13" pos:end="22:21"><type pos:start="22:13" pos:end="22:15"><name pos:start="22:13" pos:end="22:15">int</name></type> <name pos:start="22:17" pos:end="22:17">j</name> <init pos:start="22:19" pos:end="22:21">= <expr pos:start="22:21" pos:end="22:21"><literal type="number" pos:start="22:21" pos:end="22:21">0</literal></expr></init></decl>;</init> <condition pos:start="22:24" pos:end="22:29"><expr pos:start="22:24" pos:end="22:28"><name pos:start="22:24" pos:end="22:24">j</name> <operator pos:start="22:26" pos:end="22:26">&lt;</operator> <name pos:start="22:28" pos:end="22:28">n</name></expr>;</condition> <incr pos:start="22:31" pos:end="22:33"><expr pos:start="22:31" pos:end="22:33"><operator pos:start="22:31" pos:end="22:32">++</operator><name pos:start="22:33" pos:end="22:33">j</name></expr></incr>)</control><block type="pseudo" pos:start="23:13" pos:end="26:97"><block_content pos:start="23:13" pos:end="26:97">
            <if_stmt pos:start="23:13" pos:end="26:97"><if pos:start="23:13" pos:end="26:97">if<condition pos:start="23:15" pos:end="23:31">(<expr pos:start="23:16" pos:end="23:30"><operator pos:start="23:16" pos:end="23:16">!</operator><operator pos:start="23:17" pos:end="23:17">(</operator><name pos:start="23:18" pos:end="23:18">i</name> <operator pos:start="23:20" pos:end="23:20">&amp;</operator> <operator pos:start="23:22" pos:end="23:22">(</operator><literal type="number" pos:start="23:23" pos:end="23:23">1</literal> <operator pos:start="23:25" pos:end="23:26">&lt;&lt;</operator> <name pos:start="23:28" pos:end="23:28">j</name><operator pos:start="23:29" pos:end="23:29">)</operator><operator pos:start="23:30" pos:end="23:30">)</operator></expr>)</condition><block type="pseudo" pos:start="24:17" pos:end="26:97"><block_content pos:start="24:17" pos:end="26:97">
                <for pos:start="24:17" pos:end="26:97">for<control pos:start="24:20" pos:end="24:42">(<init pos:start="24:21" pos:end="24:30"><decl pos:start="24:21" pos:end="24:29"><type pos:start="24:21" pos:end="24:23"><name pos:start="24:21" pos:end="24:23">int</name></type> <name pos:start="24:25" pos:end="24:25">k</name> <init pos:start="24:27" pos:end="24:29">= <expr pos:start="24:29" pos:end="24:29"><literal type="number" pos:start="24:29" pos:end="24:29">0</literal></expr></init></decl>;</init> <condition pos:start="24:32" pos:end="24:37"><expr pos:start="24:32" pos:end="24:36"><name pos:start="24:32" pos:end="24:32">k</name> <operator pos:start="24:34" pos:end="24:34">&lt;</operator> <name pos:start="24:36" pos:end="24:36">n</name></expr>;</condition> <incr pos:start="24:39" pos:end="24:41"><expr pos:start="24:39" pos:end="24:41"><operator pos:start="24:39" pos:end="24:40">++</operator><name pos:start="24:41" pos:end="24:41">k</name></expr></incr>)</control><block type="pseudo" pos:start="25:21" pos:end="26:97"><block_content pos:start="25:21" pos:end="26:97">
                    <if_stmt pos:start="25:21" pos:end="26:97"><if pos:start="25:21" pos:end="26:97">if<condition pos:start="25:23" pos:end="25:36">(<expr pos:start="25:24" pos:end="25:35"><name pos:start="25:24" pos:end="25:24">i</name> <operator pos:start="25:26" pos:end="25:26">&amp;</operator> <operator pos:start="25:28" pos:end="25:28">(</operator><literal type="number" pos:start="25:29" pos:end="25:29">1</literal> <operator pos:start="25:31" pos:end="25:32">&lt;&lt;</operator> <name pos:start="25:34" pos:end="25:34">k</name><operator pos:start="25:35" pos:end="25:35">)</operator></expr>)</condition><block type="pseudo" pos:start="26:25" pos:end="26:97"><block_content pos:start="26:25" pos:end="26:97">
                        <expr_stmt pos:start="26:25" pos:end="26:97"><expr pos:start="26:25" pos:end="26:96"><name pos:start="26:25" pos:end="26:42"><name pos:start="26:25" pos:end="26:25">f</name><index pos:start="26:26" pos:end="26:39">[<expr pos:start="26:27" pos:end="26:38"><name pos:start="26:27" pos:end="26:27">i</name> <operator pos:start="26:29" pos:end="26:29">|</operator> <operator pos:start="26:31" pos:end="26:31">(</operator><literal type="number" pos:start="26:32" pos:end="26:32">1</literal> <operator pos:start="26:34" pos:end="26:35">&lt;&lt;</operator> <name pos:start="26:37" pos:end="26:37">j</name><operator pos:start="26:38" pos:end="26:38">)</operator></expr>]</index><index pos:start="26:40" pos:end="26:42">[<expr pos:start="26:41" pos:end="26:41"><name pos:start="26:41" pos:end="26:41">j</name></expr>]</index></name> <operator pos:start="26:44" pos:end="26:44">=</operator> <call pos:start="26:46" pos:end="26:96"><name pos:start="26:46" pos:end="26:48">max</name><argument_list pos:start="26:49" pos:end="26:96">(<argument pos:start="26:50" pos:end="26:75"><expr pos:start="26:50" pos:end="26:75"><name pos:start="26:50" pos:end="26:56"><name pos:start="26:50" pos:end="26:50">f</name><index pos:start="26:51" pos:end="26:53">[<expr pos:start="26:52" pos:end="26:52"><name pos:start="26:52" pos:end="26:52">i</name></expr>]</index><index pos:start="26:54" pos:end="26:56">[<expr pos:start="26:55" pos:end="26:55"><name pos:start="26:55" pos:end="26:55">k</name></expr>]</index></name> <operator pos:start="26:58" pos:end="26:58">+</operator> <name pos:start="26:60" pos:end="26:63"><name pos:start="26:60" pos:end="26:60">a</name><index pos:start="26:61" pos:end="26:63">[<expr pos:start="26:62" pos:end="26:62"><name pos:start="26:62" pos:end="26:62">j</name></expr>]</index></name> <operator pos:start="26:65" pos:end="26:65">+</operator> <name pos:start="26:67" pos:end="26:75"><name pos:start="26:67" pos:end="26:69">ext</name><index pos:start="26:70" pos:end="26:72">[<expr pos:start="26:71" pos:end="26:71"><name pos:start="26:71" pos:end="26:71">k</name></expr>]</index><index pos:start="26:73" pos:end="26:75">[<expr pos:start="26:74" pos:end="26:74"><name pos:start="26:74" pos:end="26:74">j</name></expr>]</index></name></expr></argument>, <argument pos:start="26:78" pos:end="26:95"><expr pos:start="26:78" pos:end="26:95"><name pos:start="26:78" pos:end="26:95"><name pos:start="26:78" pos:end="26:78">f</name><index pos:start="26:79" pos:end="26:92">[<expr pos:start="26:80" pos:end="26:91"><name pos:start="26:80" pos:end="26:80">i</name> <operator pos:start="26:82" pos:end="26:82">|</operator> <operator pos:start="26:84" pos:end="26:84">(</operator><literal type="number" pos:start="26:85" pos:end="26:85">1</literal> <operator pos:start="26:87" pos:end="26:88">&lt;&lt;</operator> <name pos:start="26:90" pos:end="26:90">j</name><operator pos:start="26:91" pos:end="26:91">)</operator></expr>]</index><index pos:start="26:93" pos:end="26:95">[<expr pos:start="26:94" pos:end="26:94"><name pos:start="26:94" pos:end="26:94">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for>
    <for pos:start="27:5" pos:end="30:5">for<control pos:start="27:8" pos:end="27:37">(<init pos:start="27:9" pos:end="27:18"><decl pos:start="27:9" pos:end="27:17"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">i</name> <init pos:start="27:15" pos:end="27:17">= <expr pos:start="27:17" pos:end="27:17"><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr></init></decl>;</init> <condition pos:start="27:20" pos:end="27:32"><expr pos:start="27:20" pos:end="27:31"><name pos:start="27:20" pos:end="27:20">i</name> <operator pos:start="27:22" pos:end="27:22">&lt;</operator> <operator pos:start="27:24" pos:end="27:24">(</operator><literal type="number" pos:start="27:25" pos:end="27:25">1</literal> <operator pos:start="27:27" pos:end="27:28">&lt;&lt;</operator> <name pos:start="27:30" pos:end="27:30">n</name><operator pos:start="27:31" pos:end="27:31">)</operator></expr>;</condition> <incr pos:start="27:34" pos:end="27:36"><expr pos:start="27:34" pos:end="27:36"><operator pos:start="27:34" pos:end="27:35">++</operator><name pos:start="27:36" pos:end="27:36">i</name></expr></incr>)</control><block pos:start="27:38" pos:end="30:5">{<block_content pos:start="28:9" pos:end="29:59">
        <if_stmt pos:start="28:9" pos:end="28:31"><if pos:start="28:9" pos:end="28:31">if<condition pos:start="28:11" pos:end="28:21">(<expr pos:start="28:12" pos:end="28:20"><operator pos:start="28:12" pos:end="28:12">!</operator><call pos:start="28:13" pos:end="28:20"><name pos:start="28:13" pos:end="28:17">check</name><argument_list pos:start="28:18" pos:end="28:20">(<argument pos:start="28:19" pos:end="28:19"><expr pos:start="28:19" pos:end="28:19"><name pos:start="28:19" pos:end="28:19">i</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="28:23" pos:end="28:31"><block_content pos:start="28:23" pos:end="28:31"> <continue pos:start="28:23" pos:end="28:31">continue;</continue></block_content></block></if></if_stmt>
        <for pos:start="29:9" pos:end="29:59">for<control pos:start="29:12" pos:end="29:34">(<init pos:start="29:13" pos:end="29:22"><decl pos:start="29:13" pos:end="29:21"><type pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">int</name></type> <name pos:start="29:17" pos:end="29:17">j</name> <init pos:start="29:19" pos:end="29:21">= <expr pos:start="29:21" pos:end="29:21"><literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr></init></decl>;</init> <condition pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:28"><name pos:start="29:24" pos:end="29:24">j</name> <operator pos:start="29:26" pos:end="29:26">&lt;</operator> <name pos:start="29:28" pos:end="29:28">n</name></expr>;</condition> <incr pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><operator pos:start="29:31" pos:end="29:32">++</operator><name pos:start="29:33" pos:end="29:33">j</name></expr></incr>)</control><block type="pseudo" pos:start="29:36" pos:end="29:59"><block_content pos:start="29:36" pos:end="29:59"> <expr_stmt pos:start="29:36" pos:end="29:59"><expr pos:start="29:36" pos:end="29:58"><name pos:start="29:36" pos:end="29:38">ans</name> <operator pos:start="29:40" pos:end="29:40">=</operator> <call pos:start="29:42" pos:end="29:58"><name pos:start="29:42" pos:end="29:44">max</name><argument_list pos:start="29:45" pos:end="29:58">(<argument pos:start="29:46" pos:end="29:48"><expr pos:start="29:46" pos:end="29:48"><name pos:start="29:46" pos:end="29:48">ans</name></expr></argument>, <argument pos:start="29:51" pos:end="29:57"><expr pos:start="29:51" pos:end="29:57"><name pos:start="29:51" pos:end="29:57"><name pos:start="29:51" pos:end="29:51">f</name><index pos:start="29:52" pos:end="29:54">[<expr pos:start="29:53" pos:end="29:53"><name pos:start="29:53" pos:end="29:53">i</name></expr>]</index><index pos:start="29:55" pos:end="29:57">[<expr pos:start="29:56" pos:end="29:56"><name pos:start="29:56" pos:end="29:56">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><call pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:10">printf</name><argument_list pos:start="31:11" pos:end="31:25">(<argument pos:start="31:12" pos:end="31:19"><expr pos:start="31:12" pos:end="31:19"><literal type="string" pos:start="31:12" pos:end="31:19">"%lld\n"</literal></expr></argument>, <argument pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:24">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
