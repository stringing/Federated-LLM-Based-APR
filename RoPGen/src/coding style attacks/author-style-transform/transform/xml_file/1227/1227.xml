<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1227/1227.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="11:3"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:7">sum</name><parameter_list pos:start="4:8" pos:end="4:14">(<parameter pos:start="4:9" pos:end="4:13"><decl pos:start="4:9" pos:end="4:13"><type pos:start="4:9" pos:end="4:11"><name pos:start="4:9" pos:end="4:11">int</name></type> <name pos:start="4:13" pos:end="4:13">x</name></decl></parameter>)</parameter_list> <block pos:start="4:16" pos:end="11:3">{<block_content pos:start="5:5" pos:end="10:13">
    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">s</name> <init pos:start="5:11" pos:end="5:13">= <expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="6:5" pos:end="9:5">while<condition pos:start="6:10" pos:end="6:12">(<expr pos:start="6:11" pos:end="6:11"><name pos:start="6:11" pos:end="6:11">x</name></expr>)</condition> <block pos:start="6:14" pos:end="9:5">{<block_content pos:start="7:7" pos:end="8:12">
      <expr_stmt pos:start="7:7" pos:end="7:14"><expr pos:start="7:7" pos:end="7:13"><name pos:start="7:7" pos:end="7:7">s</name><operator pos:start="7:8" pos:end="7:9">+=</operator><name pos:start="7:10" pos:end="7:10">x</name><operator pos:start="7:11" pos:end="7:11">%</operator><literal type="number" pos:start="7:12" pos:end="7:13">10</literal></expr>;</expr_stmt>
      <expr_stmt pos:start="8:7" pos:end="8:12"><expr pos:start="8:7" pos:end="8:11"><name pos:start="8:7" pos:end="8:7">x</name><operator pos:start="8:8" pos:end="8:9">/=</operator><literal type="number" pos:start="8:10" pos:end="8:11">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="10:5" pos:end="10:13">return <expr pos:start="10:12" pos:end="10:12"><name pos:start="10:12" pos:end="10:12">s</name></expr>;</return>
  </block_content>}</block></function>
  
<function pos:start="13:1" pos:end="18:1"><type pos:start="13:1" pos:end="13:9"><name pos:start="13:1" pos:end="13:4">void</name> <name pos:start="13:6" pos:end="13:9">bool</name></type> <name pos:start="13:11" pos:end="13:13">cmp</name><parameter_list pos:start="13:14" pos:end="13:27">(<parameter pos:start="13:15" pos:end="13:19"><decl pos:start="13:15" pos:end="13:19"><type pos:start="13:15" pos:end="13:19"><name pos:start="13:15" pos:end="13:17">int</name></type> <name pos:start="13:19" pos:end="13:19">a</name></decl></parameter>, <parameter pos:start="13:22" pos:end="13:26"><decl pos:start="13:22" pos:end="13:26"><type pos:start="13:22" pos:end="13:26"><name pos:start="13:22" pos:end="13:24">int</name></type> <name pos:start="13:26" pos:end="13:26">b</name></decl></parameter>)</parameter_list><block pos:start="13:28" pos:end="18:1">{<block_content pos:start="14:3" pos:end="17:15">
  <if_stmt pos:start="14:3" pos:end="16:3"><if pos:start="14:3" pos:end="16:3">if <condition pos:start="14:6" pos:end="14:21">(<expr pos:start="14:7" pos:end="14:20"><call pos:start="14:7" pos:end="14:12"><name pos:start="14:7" pos:end="14:9">sum</name><argument_list pos:start="14:10" pos:end="14:12">(<argument pos:start="14:11" pos:end="14:11"><expr pos:start="14:11" pos:end="14:11"><name pos:start="14:11" pos:end="14:11">a</name></expr></argument>)</argument_list></call><operator pos:start="14:13" pos:end="14:14">!=</operator><call pos:start="14:15" pos:end="14:20"><name pos:start="14:15" pos:end="14:17">sum</name><argument_list pos:start="14:18" pos:end="14:20">(<argument pos:start="14:19" pos:end="14:19"><expr pos:start="14:19" pos:end="14:19"><name pos:start="14:19" pos:end="14:19">b</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="14:23" pos:end="16:3">{<block_content pos:start="15:5" pos:end="15:27">
    <return pos:start="15:5" pos:end="15:27">return <expr pos:start="15:12" pos:end="15:26"><call pos:start="15:12" pos:end="15:17"><name pos:start="15:12" pos:end="15:14">sum</name><argument_list pos:start="15:15" pos:end="15:17">(<argument pos:start="15:16" pos:end="15:16"><expr pos:start="15:16" pos:end="15:16"><name pos:start="15:16" pos:end="15:16">a</name></expr></argument>)</argument_list></call> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <call pos:start="15:21" pos:end="15:26"><name pos:start="15:21" pos:end="15:23">sum</name><argument_list pos:start="15:24" pos:end="15:26">(<argument pos:start="15:25" pos:end="15:25"><expr pos:start="15:25" pos:end="15:25"><name pos:start="15:25" pos:end="15:25">b</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></if></if_stmt>
  <return pos:start="17:3" pos:end="17:15">return <expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">a</name> <operator pos:start="17:12" pos:end="17:12">&gt;</operator> <name pos:start="17:14" pos:end="17:14">b</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="19:1" pos:end="32:1"><type pos:start="19:1" pos:end="19:3"><name pos:start="19:1" pos:end="19:3">int</name></type> <name pos:start="19:5" pos:end="19:8">main</name><parameter_list pos:start="19:9" pos:end="19:10">()</parameter_list><block pos:start="19:11" pos:end="32:1">{<block_content pos:start="20:3" pos:end="31:11">
  <decl_stmt pos:start="20:3" pos:end="20:8"><decl pos:start="20:3" pos:end="20:7"><type pos:start="20:3" pos:end="20:5"><name pos:start="20:3" pos:end="20:5">int</name></type> <name pos:start="20:7" pos:end="20:7">a</name></decl>;</decl_stmt>
  <expr_stmt pos:start="21:3" pos:end="21:9"><expr pos:start="21:3" pos:end="21:8"><name pos:start="21:3" pos:end="21:5">cin</name><operator pos:start="21:6" pos:end="21:7">&gt;&gt;</operator><name pos:start="21:8" pos:end="21:8">a</name></expr>;</expr_stmt>
  <decl_stmt pos:start="22:3" pos:end="22:18"><decl pos:start="22:3" pos:end="22:17"><type pos:start="22:3" pos:end="22:8"><name pos:start="22:3" pos:end="22:8">string</name></type> <name pos:start="22:10" pos:end="22:17"><name pos:start="22:10" pos:end="22:12">num</name><index pos:start="22:13" pos:end="22:17">[<expr pos:start="22:14" pos:end="22:16"><literal type="number" pos:start="22:14" pos:end="22:16">105</literal></expr>]</index></name></decl>;</decl_stmt>
    <for pos:start="23:5" pos:end="25:5">for <control pos:start="23:9" pos:end="23:31">(<init pos:start="23:10" pos:end="23:19"><decl pos:start="23:10" pos:end="23:18"><type pos:start="23:10" pos:end="23:12"><name pos:start="23:10" pos:end="23:12">int</name></type> <name pos:start="23:14" pos:end="23:14">i</name> <init pos:start="23:16" pos:end="23:18">= <expr pos:start="23:18" pos:end="23:18"><literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr></init></decl>;</init> <condition pos:start="23:21" pos:end="23:26"><expr pos:start="23:21" pos:end="23:25"><name pos:start="23:21" pos:end="23:21">i</name> <operator pos:start="23:23" pos:end="23:23">&lt;</operator> <name pos:start="23:25" pos:end="23:25">a</name></expr>;</condition> <incr pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:28">i</name><operator pos:start="23:29" pos:end="23:30">++</operator></expr></incr>)</control><block pos:start="23:32" pos:end="25:5">{<block_content pos:start="24:7" pos:end="24:18">
      <expr_stmt pos:start="24:7" pos:end="24:18"><expr pos:start="24:7" pos:end="24:17"><name pos:start="24:7" pos:end="24:9">cin</name><operator pos:start="24:10" pos:end="24:11">&gt;&gt;</operator><name pos:start="24:12" pos:end="24:17"><name pos:start="24:12" pos:end="24:14">num</name><index pos:start="24:15" pos:end="24:17">[<expr pos:start="24:16" pos:end="24:16"><name pos:start="24:16" pos:end="24:16">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
  <expr_stmt pos:start="26:3" pos:end="26:22"><expr pos:start="26:3" pos:end="26:21"><call pos:start="26:3" pos:end="26:21"><name pos:start="26:3" pos:end="26:6">sort</name><argument_list pos:start="26:7" pos:end="26:21">(<argument pos:start="26:8" pos:end="26:10"><expr pos:start="26:8" pos:end="26:10"><name pos:start="26:8" pos:end="26:10">num</name></expr></argument>,<argument pos:start="26:12" pos:end="26:16"><expr pos:start="26:12" pos:end="26:16"><name pos:start="26:12" pos:end="26:14">num</name><operator pos:start="26:15" pos:end="26:15">+</operator><name pos:start="26:16" pos:end="26:16">a</name></expr></argument>,<argument pos:start="26:18" pos:end="26:20"><expr pos:start="26:18" pos:end="26:20"><name pos:start="26:18" pos:end="26:20">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <for pos:start="27:3" pos:end="29:3">for <control pos:start="27:7" pos:end="27:30">(<init pos:start="27:8" pos:end="27:17"><decl pos:start="27:8" pos:end="27:16"><type pos:start="27:8" pos:end="27:10"><name pos:start="27:8" pos:end="27:10">int</name></type> <name pos:start="27:12" pos:end="27:12">j</name> <init pos:start="27:14" pos:end="27:16">= <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr></init></decl>;</init> <condition pos:start="27:19" pos:end="27:24"><expr pos:start="27:19" pos:end="27:23"><name pos:start="27:19" pos:end="27:19">j</name> <operator pos:start="27:21" pos:end="27:21">&lt;</operator> <name pos:start="27:23" pos:end="27:23">a</name></expr>;</condition> <incr pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:26">j</name><operator pos:start="27:27" pos:end="27:28">++</operator></expr></incr> )</control><block pos:start="27:31" pos:end="29:3">{<block_content pos:start="28:5" pos:end="28:22">
    <expr_stmt pos:start="28:5" pos:end="28:22"><expr pos:start="28:5" pos:end="28:21"><name pos:start="28:5" pos:end="28:8">cout</name><operator pos:start="28:9" pos:end="28:10">&lt;&lt;</operator><name pos:start="28:11" pos:end="28:16"><name pos:start="28:11" pos:end="28:13">num</name><index pos:start="28:14" pos:end="28:16">[<expr pos:start="28:15" pos:end="28:15"><name pos:start="28:15" pos:end="28:15">j</name></expr>]</index></name><operator pos:start="28:17" pos:end="28:18">&lt;&lt;</operator><literal type="string" pos:start="28:19" pos:end="28:21">" "</literal></expr>;</expr_stmt>
  </block_content>}</block></for>
    
  <return pos:start="31:3" pos:end="31:11">return <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
