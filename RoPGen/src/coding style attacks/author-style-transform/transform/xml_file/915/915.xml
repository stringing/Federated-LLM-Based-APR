<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/915/915.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="56:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="56:1">{<block_content pos:start="4:5" pos:end="55:5">
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:13"><expr pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:7">cin</name> <operator pos:start="5:9" pos:end="5:10">&gt;&gt;</operator> <name pos:start="5:12" pos:end="5:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:21"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:9">stack</name> <argument_list type="generic" pos:start="6:11" pos:end="6:15">&lt;<argument pos:start="6:12" pos:end="6:14"><expr pos:start="6:12" pos:end="6:14"><name pos:start="6:12" pos:end="6:14">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:17" pos:end="6:17">a</name></decl>, <decl pos:start="6:20" pos:end="6:20"><type ref="prev" pos:start="6:5" pos:end="6:15"/><name pos:start="6:20" pos:end="6:20">b</name></decl>;</decl_stmt>
    <while pos:start="7:5" pos:end="55:5">while<condition pos:start="7:10" pos:end="7:14">(<expr pos:start="7:11" pos:end="7:13"><name pos:start="7:11" pos:end="7:11">n</name><operator pos:start="7:12" pos:end="7:13">--</operator></expr>)</condition><block pos:start="7:15" pos:end="55:5">{<block_content pos:start="8:9" pos:end="54:9">
        <decl_stmt pos:start="8:9" pos:end="8:15"><decl pos:start="8:9" pos:end="8:14"><type pos:start="8:9" pos:end="8:12"><name pos:start="8:9" pos:end="8:12">char</name></type> <name pos:start="8:14" pos:end="8:14">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:17"><expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">cin</name> <operator pos:start="9:13" pos:end="9:14">&gt;&gt;</operator> <name pos:start="9:16" pos:end="9:16">s</name></expr>;</expr_stmt>
        <if_stmt pos:start="10:9" pos:end="54:9"><if pos:start="10:9" pos:end="32:9">if<condition pos:start="10:11" pos:end="10:20">(<expr pos:start="10:12" pos:end="10:19"><name pos:start="10:12" pos:end="10:12">s</name> <operator pos:start="10:14" pos:end="10:15">==</operator> <literal type="char" pos:start="10:17" pos:end="10:19">'A'</literal></expr>)</condition><block pos:start="10:21" pos:end="32:9">{<block_content pos:start="11:13" pos:end="31:13">
            <decl_stmt pos:start="11:13" pos:end="11:19"><decl pos:start="11:13" pos:end="11:18"><type pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">char</name></type> <name pos:start="11:18" pos:end="11:18">x</name></decl>;</decl_stmt>
            <expr_stmt pos:start="12:13" pos:end="12:21"><expr pos:start="12:13" pos:end="12:20"><name pos:start="12:13" pos:end="12:15">cin</name> <operator pos:start="12:17" pos:end="12:18">&gt;&gt;</operator> <name pos:start="12:20" pos:end="12:20">x</name></expr>;</expr_stmt>
            <if_stmt pos:start="13:13" pos:end="31:13"><if pos:start="13:13" pos:end="17:13">if<condition pos:start="13:15" pos:end="13:24">(<expr pos:start="13:16" pos:end="13:23"><name pos:start="13:16" pos:end="13:16">x</name> <operator pos:start="13:18" pos:end="13:19">==</operator> <literal type="char" pos:start="13:21" pos:end="13:23">'I'</literal></expr>)</condition><block pos:start="13:25" pos:end="17:13">{<block_content pos:start="14:17" pos:end="16:29">
                <decl_stmt pos:start="14:17" pos:end="14:25"><decl pos:start="14:17" pos:end="14:24"><type pos:start="14:17" pos:end="14:19"><name pos:start="14:17" pos:end="14:19">int</name></type> <name pos:start="14:21" pos:end="14:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="15:17" pos:end="15:28"><expr pos:start="15:17" pos:end="15:27"><name pos:start="15:17" pos:end="15:19">cin</name> <operator pos:start="15:21" pos:end="15:22">&gt;&gt;</operator> <name pos:start="15:24" pos:end="15:27">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="16:17" pos:end="16:29"><expr pos:start="16:17" pos:end="16:28"><call pos:start="16:17" pos:end="16:28"><name pos:start="16:17" pos:end="16:22"><name pos:start="16:17" pos:end="16:17">a</name><operator pos:start="16:18" pos:end="16:18">.</operator><name pos:start="16:19" pos:end="16:22">push</name></name><argument_list pos:start="16:23" pos:end="16:28">(<argument pos:start="16:24" pos:end="16:27"><expr pos:start="16:24" pos:end="16:27"><name pos:start="16:24" pos:end="16:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="17:15" pos:end="21:13">else if<condition pos:start="17:22" pos:end="17:31">(<expr pos:start="17:23" pos:end="17:30"><name pos:start="17:23" pos:end="17:23">x</name> <operator pos:start="17:25" pos:end="17:26">==</operator> <literal type="char" pos:start="17:28" pos:end="17:30">'D'</literal></expr>)</condition><block pos:start="17:32" pos:end="21:13">{<block_content pos:start="18:17" pos:end="20:17">
                <if_stmt pos:start="18:17" pos:end="20:17"><if pos:start="18:17" pos:end="20:17">if<condition pos:start="18:19" pos:end="18:30">(<expr pos:start="18:20" pos:end="18:29"><operator pos:start="18:20" pos:end="18:20">!</operator><call pos:start="18:21" pos:end="18:29"><name pos:start="18:21" pos:end="18:27"><name pos:start="18:21" pos:end="18:21">a</name><operator pos:start="18:22" pos:end="18:22">.</operator><name pos:start="18:23" pos:end="18:27">empty</name></name><argument_list pos:start="18:28" pos:end="18:29">()</argument_list></call></expr>)</condition><block pos:start="18:31" pos:end="20:17">{<block_content pos:start="19:21" pos:end="19:28">
                    <expr_stmt pos:start="19:21" pos:end="19:28"><expr pos:start="19:21" pos:end="19:27"><call pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">a</name><operator pos:start="19:22" pos:end="19:22">.</operator><name pos:start="19:23" pos:end="19:25">pop</name></name><argument_list pos:start="19:26" pos:end="19:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if> <else pos:start="21:15" pos:end="31:13">else <block pos:start="21:20" pos:end="31:13">{<block_content pos:start="22:17" pos:end="30:17">
                <decl_stmt pos:start="22:17" pos:end="22:30"><decl pos:start="22:17" pos:end="22:29"><type pos:start="22:17" pos:end="22:27"><name pos:start="22:17" pos:end="22:27"><name pos:start="22:17" pos:end="22:21">stack</name> <argument_list type="generic" pos:start="22:23" pos:end="22:27">&lt;<argument pos:start="22:24" pos:end="22:26"><expr pos:start="22:24" pos:end="22:26"><name pos:start="22:24" pos:end="22:26">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="22:29" pos:end="22:29">c</name></decl>;</decl_stmt>
                <while pos:start="23:17" pos:end="26:17">while<condition pos:start="23:22" pos:end="23:33">(<expr pos:start="23:23" pos:end="23:32"><operator pos:start="23:23" pos:end="23:23">!</operator><call pos:start="23:24" pos:end="23:32"><name pos:start="23:24" pos:end="23:30"><name pos:start="23:24" pos:end="23:24">b</name><operator pos:start="23:25" pos:end="23:25">.</operator><name pos:start="23:26" pos:end="23:30">empty</name></name><argument_list pos:start="23:31" pos:end="23:32">()</argument_list></call></expr>)</condition><block pos:start="23:34" pos:end="26:17">{<block_content pos:start="24:21" pos:end="25:28">
                    <expr_stmt pos:start="24:21" pos:end="24:36"><expr pos:start="24:21" pos:end="24:35"><call pos:start="24:21" pos:end="24:35"><name pos:start="24:21" pos:end="24:26"><name pos:start="24:21" pos:end="24:21">c</name><operator pos:start="24:22" pos:end="24:22">.</operator><name pos:start="24:23" pos:end="24:26">push</name></name><argument_list pos:start="24:27" pos:end="24:35">(<argument pos:start="24:28" pos:end="24:34"><expr pos:start="24:28" pos:end="24:34"><call pos:start="24:28" pos:end="24:34"><name pos:start="24:28" pos:end="24:32"><name pos:start="24:28" pos:end="24:28">b</name><operator pos:start="24:29" pos:end="24:29">.</operator><name pos:start="24:30" pos:end="24:32">top</name></name><argument_list pos:start="24:33" pos:end="24:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="25:21" pos:end="25:28"><expr pos:start="25:21" pos:end="25:27"><call pos:start="25:21" pos:end="25:27"><name pos:start="25:21" pos:end="25:25"><name pos:start="25:21" pos:end="25:21">b</name><operator pos:start="25:22" pos:end="25:22">.</operator><name pos:start="25:23" pos:end="25:25">pop</name></name><argument_list pos:start="25:26" pos:end="25:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="27:17" pos:end="30:17">while<condition pos:start="27:22" pos:end="27:33">(<expr pos:start="27:23" pos:end="27:32"><operator pos:start="27:23" pos:end="27:23">!</operator><call pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:30"><name pos:start="27:24" pos:end="27:24">c</name><operator pos:start="27:25" pos:end="27:25">.</operator><name pos:start="27:26" pos:end="27:30">empty</name></name><argument_list pos:start="27:31" pos:end="27:32">()</argument_list></call></expr>)</condition><block pos:start="27:34" pos:end="30:17">{<block_content pos:start="28:21" pos:end="29:28">
                    <expr_stmt pos:start="28:21" pos:end="28:36"><expr pos:start="28:21" pos:end="28:35"><call pos:start="28:21" pos:end="28:35"><name pos:start="28:21" pos:end="28:26"><name pos:start="28:21" pos:end="28:21">a</name><operator pos:start="28:22" pos:end="28:22">.</operator><name pos:start="28:23" pos:end="28:26">push</name></name><argument_list pos:start="28:27" pos:end="28:35">(<argument pos:start="28:28" pos:end="28:34"><expr pos:start="28:28" pos:end="28:34"><call pos:start="28:28" pos:end="28:34"><name pos:start="28:28" pos:end="28:32"><name pos:start="28:28" pos:end="28:28">c</name><operator pos:start="28:29" pos:end="28:29">.</operator><name pos:start="28:30" pos:end="28:32">top</name></name><argument_list pos:start="28:33" pos:end="28:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="29:21" pos:end="29:28"><expr pos:start="29:21" pos:end="29:27"><call pos:start="29:21" pos:end="29:27"><name pos:start="29:21" pos:end="29:25"><name pos:start="29:21" pos:end="29:21">c</name><operator pos:start="29:22" pos:end="29:22">.</operator><name pos:start="29:23" pos:end="29:25">pop</name></name><argument_list pos:start="29:26" pos:end="29:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if> <else pos:start="32:11" pos:end="54:9">else <block pos:start="32:16" pos:end="54:9">{<block_content pos:start="33:13" pos:end="53:13">
            <decl_stmt pos:start="33:13" pos:end="33:19"><decl pos:start="33:13" pos:end="33:18"><type pos:start="33:13" pos:end="33:16"><name pos:start="33:13" pos:end="33:16">char</name></type> <name pos:start="33:18" pos:end="33:18">x</name></decl>;</decl_stmt>
            <expr_stmt pos:start="34:13" pos:end="34:21"><expr pos:start="34:13" pos:end="34:20"><name pos:start="34:13" pos:end="34:15">cin</name> <operator pos:start="34:17" pos:end="34:18">&gt;&gt;</operator> <name pos:start="34:20" pos:end="34:20">x</name></expr>;</expr_stmt>
            <if_stmt pos:start="35:13" pos:end="53:13"><if pos:start="35:13" pos:end="39:13">if<condition pos:start="35:15" pos:end="35:24">(<expr pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:16">x</name> <operator pos:start="35:18" pos:end="35:19">==</operator> <literal type="char" pos:start="35:21" pos:end="35:23">'I'</literal></expr>)</condition><block pos:start="35:25" pos:end="39:13">{<block_content pos:start="36:17" pos:end="38:29">
                <decl_stmt pos:start="36:17" pos:end="36:25"><decl pos:start="36:17" pos:end="36:24"><type pos:start="36:17" pos:end="36:19"><name pos:start="36:17" pos:end="36:19">int</name></type> <name pos:start="36:21" pos:end="36:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="37:17" pos:end="37:28"><expr pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:19">cin</name> <operator pos:start="37:21" pos:end="37:22">&gt;&gt;</operator> <name pos:start="37:24" pos:end="37:27">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="38:17" pos:end="38:29"><expr pos:start="38:17" pos:end="38:28"><call pos:start="38:17" pos:end="38:28"><name pos:start="38:17" pos:end="38:22"><name pos:start="38:17" pos:end="38:17">a</name><operator pos:start="38:18" pos:end="38:18">.</operator><name pos:start="38:19" pos:end="38:22">push</name></name><argument_list pos:start="38:23" pos:end="38:28">(<argument pos:start="38:24" pos:end="38:27"><expr pos:start="38:24" pos:end="38:27"><name pos:start="38:24" pos:end="38:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="39:15" pos:end="43:13">else if<condition pos:start="39:22" pos:end="39:31">(<expr pos:start="39:23" pos:end="39:30"><name pos:start="39:23" pos:end="39:23">x</name> <operator pos:start="39:25" pos:end="39:26">==</operator> <literal type="char" pos:start="39:28" pos:end="39:30">'D'</literal></expr>)</condition><block pos:start="39:32" pos:end="43:13">{<block_content pos:start="40:17" pos:end="42:17">
                <if_stmt pos:start="40:17" pos:end="42:17"><if pos:start="40:17" pos:end="42:17">if<condition pos:start="40:19" pos:end="40:30">(<expr pos:start="40:20" pos:end="40:29"><operator pos:start="40:20" pos:end="40:20">!</operator><call pos:start="40:21" pos:end="40:29"><name pos:start="40:21" pos:end="40:27"><name pos:start="40:21" pos:end="40:21">a</name><operator pos:start="40:22" pos:end="40:22">.</operator><name pos:start="40:23" pos:end="40:27">empty</name></name><argument_list pos:start="40:28" pos:end="40:29">()</argument_list></call></expr>)</condition><block pos:start="40:31" pos:end="42:17">{<block_content pos:start="41:21" pos:end="41:28">
                    <expr_stmt pos:start="41:21" pos:end="41:28"><expr pos:start="41:21" pos:end="41:27"><call pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:21">a</name><operator pos:start="41:22" pos:end="41:22">.</operator><name pos:start="41:23" pos:end="41:25">pop</name></name><argument_list pos:start="41:26" pos:end="41:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if> <else pos:start="43:15" pos:end="53:13">else <block pos:start="43:20" pos:end="53:13">{<block_content pos:start="44:17" pos:end="52:17">
                <decl_stmt pos:start="44:17" pos:end="44:30"><decl pos:start="44:17" pos:end="44:29"><type pos:start="44:17" pos:end="44:27"><name pos:start="44:17" pos:end="44:27"><name pos:start="44:17" pos:end="44:21">stack</name> <argument_list type="generic" pos:start="44:23" pos:end="44:27">&lt;<argument pos:start="44:24" pos:end="44:26"><expr pos:start="44:24" pos:end="44:26"><name pos:start="44:24" pos:end="44:26">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="44:29" pos:end="44:29">c</name></decl>;</decl_stmt>
                <while pos:start="45:17" pos:end="48:17">while<condition pos:start="45:22" pos:end="45:33">(<expr pos:start="45:23" pos:end="45:32"><operator pos:start="45:23" pos:end="45:23">!</operator><call pos:start="45:24" pos:end="45:32"><name pos:start="45:24" pos:end="45:30"><name pos:start="45:24" pos:end="45:24">b</name><operator pos:start="45:25" pos:end="45:25">.</operator><name pos:start="45:26" pos:end="45:30">empty</name></name><argument_list pos:start="45:31" pos:end="45:32">()</argument_list></call></expr>)</condition><block pos:start="45:34" pos:end="48:17">{<block_content pos:start="46:21" pos:end="47:28">
                    <expr_stmt pos:start="46:21" pos:end="46:36"><expr pos:start="46:21" pos:end="46:35"><call pos:start="46:21" pos:end="46:35"><name pos:start="46:21" pos:end="46:26"><name pos:start="46:21" pos:end="46:21">c</name><operator pos:start="46:22" pos:end="46:22">.</operator><name pos:start="46:23" pos:end="46:26">push</name></name><argument_list pos:start="46:27" pos:end="46:35">(<argument pos:start="46:28" pos:end="46:34"><expr pos:start="46:28" pos:end="46:34"><call pos:start="46:28" pos:end="46:34"><name pos:start="46:28" pos:end="46:32"><name pos:start="46:28" pos:end="46:28">b</name><operator pos:start="46:29" pos:end="46:29">.</operator><name pos:start="46:30" pos:end="46:32">top</name></name><argument_list pos:start="46:33" pos:end="46:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="47:21" pos:end="47:28"><expr pos:start="47:21" pos:end="47:27"><call pos:start="47:21" pos:end="47:27"><name pos:start="47:21" pos:end="47:25"><name pos:start="47:21" pos:end="47:21">b</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:25">pop</name></name><argument_list pos:start="47:26" pos:end="47:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="49:17" pos:end="52:17">while<condition pos:start="49:22" pos:end="49:33">(<expr pos:start="49:23" pos:end="49:32"><operator pos:start="49:23" pos:end="49:23">!</operator><call pos:start="49:24" pos:end="49:32"><name pos:start="49:24" pos:end="49:30"><name pos:start="49:24" pos:end="49:24">c</name><operator pos:start="49:25" pos:end="49:25">.</operator><name pos:start="49:26" pos:end="49:30">empty</name></name><argument_list pos:start="49:31" pos:end="49:32">()</argument_list></call></expr>)</condition><block pos:start="49:34" pos:end="52:17">{<block_content pos:start="50:21" pos:end="51:28">
                    <expr_stmt pos:start="50:21" pos:end="50:36"><expr pos:start="50:21" pos:end="50:35"><call pos:start="50:21" pos:end="50:35"><name pos:start="50:21" pos:end="50:26"><name pos:start="50:21" pos:end="50:21">a</name><operator pos:start="50:22" pos:end="50:22">.</operator><name pos:start="50:23" pos:end="50:26">push</name></name><argument_list pos:start="50:27" pos:end="50:35">(<argument pos:start="50:28" pos:end="50:34"><expr pos:start="50:28" pos:end="50:34"><call pos:start="50:28" pos:end="50:34"><name pos:start="50:28" pos:end="50:32"><name pos:start="50:28" pos:end="50:28">c</name><operator pos:start="50:29" pos:end="50:29">.</operator><name pos:start="50:30" pos:end="50:32">top</name></name><argument_list pos:start="50:33" pos:end="50:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="51:21" pos:end="51:28"><expr pos:start="51:21" pos:end="51:27"><call pos:start="51:21" pos:end="51:27"><name pos:start="51:21" pos:end="51:25"><name pos:start="51:21" pos:end="51:21">c</name><operator pos:start="51:22" pos:end="51:22">.</operator><name pos:start="51:23" pos:end="51:25">pop</name></name><argument_list pos:start="51:26" pos:end="51:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>
</unit>
