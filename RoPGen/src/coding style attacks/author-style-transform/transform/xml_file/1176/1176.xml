<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1176/1176.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:15">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:15">&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:19">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<decl_stmt pos:start="6:1" pos:end="6:6"><decl pos:start="6:1" pos:end="6:5"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:24"><decl pos:start="7:1" pos:end="7:13"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:5">a</name><index pos:start="7:6" pos:end="7:13">[<expr pos:start="7:7" pos:end="7:12"><literal type="number" pos:start="7:7" pos:end="7:12">100000</literal></expr>]</index></name></decl>,<decl pos:start="7:15" pos:end="7:23"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:15" pos:end="7:23"><name pos:start="7:15" pos:end="7:15">b</name><index pos:start="7:16" pos:end="7:23">[<expr pos:start="7:17" pos:end="7:22"><literal type="number" pos:start="7:17" pos:end="7:22">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:12"><decl pos:start="8:1" pos:end="8:11"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:7">ans</name><init pos:start="8:8" pos:end="8:11">=<expr pos:start="8:9" pos:end="8:11"><literal type="number" pos:start="8:9" pos:end="8:11">1e9</literal></expr></init></decl>;</decl_stmt>
<function pos:start="9:1" pos:end="19:1"><type pos:start="9:1" pos:end="9:4"><name pos:start="9:1" pos:end="9:4">void</name></type> <name pos:start="9:6" pos:end="9:8">dfs</name><parameter_list pos:start="9:9" pos:end="9:41">(<parameter pos:start="9:10" pos:end="9:14"><decl pos:start="9:10" pos:end="9:14"><type pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:14">x</name></decl></parameter>,<parameter pos:start="9:16" pos:end="9:23"><decl pos:start="9:16" pos:end="9:23"><type pos:start="9:16" pos:end="9:23"><name pos:start="9:16" pos:end="9:18">int</name></type> <name pos:start="9:20" pos:end="9:23">suma</name></decl></parameter>,<parameter pos:start="9:25" pos:end="9:32"><decl pos:start="9:25" pos:end="9:32"><type pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:27">int</name></type> <name pos:start="9:29" pos:end="9:32">sumb</name></decl></parameter>,<parameter pos:start="9:34" pos:end="9:40"><decl pos:start="9:34" pos:end="9:40"><type pos:start="9:34" pos:end="9:40"><name pos:start="9:34" pos:end="9:36">int</name></type> <name pos:start="9:38" pos:end="9:40">cnt</name></decl></parameter>)</parameter_list><block pos:start="9:42" pos:end="19:1">{<block_content pos:start="10:5" pos:end="18:27">
    <expr_stmt pos:start="10:5" pos:end="10:10"><expr pos:start="10:5" pos:end="10:9"><name pos:start="10:5" pos:end="10:7">cnt</name><operator pos:start="10:8" pos:end="10:8">=</operator><literal type="number" pos:start="10:9" pos:end="10:9">0</literal></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="16:5"><if pos:start="11:5" pos:end="16:5">if<condition pos:start="11:7" pos:end="11:12">(<expr pos:start="11:8" pos:end="11:11"><name pos:start="11:8" pos:end="11:8">x</name><operator pos:start="11:9" pos:end="11:10">==</operator><name pos:start="11:11" pos:end="11:11">n</name></expr>)</condition><block pos:start="11:13" pos:end="16:5">{<block_content pos:start="12:9" pos:end="15:15">
        <if_stmt pos:start="12:9" pos:end="14:9"><if pos:start="12:9" pos:end="14:9">if<condition pos:start="12:11" pos:end="12:17">(<expr pos:start="12:12" pos:end="12:16"><name pos:start="12:12" pos:end="12:14">cnt</name><operator pos:start="12:15" pos:end="12:15">&gt;</operator><literal type="number" pos:start="12:16" pos:end="12:16">0</literal></expr>)</condition><block pos:start="12:18" pos:end="14:9">{<block_content pos:start="13:13" pos:end="13:40">
            <expr_stmt pos:start="13:13" pos:end="13:40"><expr pos:start="13:13" pos:end="13:39"><name pos:start="13:13" pos:end="13:15">ans</name><operator pos:start="13:16" pos:end="13:16">=</operator><call pos:start="13:17" pos:end="13:39"><name pos:start="13:17" pos:end="13:19">min</name><argument_list pos:start="13:20" pos:end="13:39">(<argument pos:start="13:21" pos:end="13:23"><expr pos:start="13:21" pos:end="13:23"><name pos:start="13:21" pos:end="13:23">ans</name></expr></argument>,<argument pos:start="13:25" pos:end="13:38"><expr pos:start="13:25" pos:end="13:38"><call pos:start="13:25" pos:end="13:38"><name pos:start="13:25" pos:end="13:27">abs</name><argument_list pos:start="13:28" pos:end="13:38">(<argument pos:start="13:29" pos:end="13:37"><expr pos:start="13:29" pos:end="13:37"><name pos:start="13:29" pos:end="13:32">suma</name><operator pos:start="13:33" pos:end="13:33">-</operator><name pos:start="13:34" pos:end="13:37">sumb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return pos:start="15:9" pos:end="15:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:39"><expr pos:start="17:5" pos:end="17:38"><call pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:7">dfs</name><argument_list pos:start="17:8" pos:end="17:38">(<argument pos:start="17:9" pos:end="17:11"><expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:9">x</name><operator pos:start="17:10" pos:end="17:10">+</operator><literal type="number" pos:start="17:11" pos:end="17:11">1</literal></expr></argument>,<argument pos:start="17:13" pos:end="17:21"><expr pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:16">suma</name><operator pos:start="17:17" pos:end="17:17">*</operator><name pos:start="17:18" pos:end="17:21"><name pos:start="17:18" pos:end="17:18">a</name><index pos:start="17:19" pos:end="17:21">[<expr pos:start="17:20" pos:end="17:20"><name pos:start="17:20" pos:end="17:20">x</name></expr>]</index></name></expr></argument>,<argument pos:start="17:23" pos:end="17:31"><expr pos:start="17:23" pos:end="17:31"><name pos:start="17:23" pos:end="17:26">sumb</name><operator pos:start="17:27" pos:end="17:27">+</operator><name pos:start="17:28" pos:end="17:31"><name pos:start="17:28" pos:end="17:28">b</name><index pos:start="17:29" pos:end="17:31">[<expr pos:start="17:30" pos:end="17:30"><name pos:start="17:30" pos:end="17:30">x</name></expr>]</index></name></expr></argument>,<argument pos:start="17:33" pos:end="17:37"><expr pos:start="17:33" pos:end="17:37"><name pos:start="17:33" pos:end="17:35">cnt</name><operator pos:start="17:36" pos:end="17:36">+</operator><literal type="number" pos:start="17:37" pos:end="17:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:27"><expr pos:start="18:5" pos:end="18:26"><call pos:start="18:5" pos:end="18:26"><name pos:start="18:5" pos:end="18:7">dfs</name><argument_list pos:start="18:8" pos:end="18:26">(<argument pos:start="18:9" pos:end="18:11"><expr pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:9">x</name><operator pos:start="18:10" pos:end="18:10">+</operator><literal type="number" pos:start="18:11" pos:end="18:11">1</literal></expr></argument>,<argument pos:start="18:13" pos:end="18:16"><expr pos:start="18:13" pos:end="18:16"><name pos:start="18:13" pos:end="18:16">suma</name></expr></argument>,<argument pos:start="18:18" pos:end="18:21"><expr pos:start="18:18" pos:end="18:21"><name pos:start="18:18" pos:end="18:21">sumb</name></expr></argument>,<argument pos:start="18:23" pos:end="18:25"><expr pos:start="18:23" pos:end="18:25"><name pos:start="18:23" pos:end="18:25">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="20:1" pos:end="29:1"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:8">main</name><parameter_list pos:start="20:9" pos:end="20:10">()</parameter_list><block pos:start="20:11" pos:end="29:1">{<block_content pos:start="21:5" pos:end="28:13">
    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><call pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:11">freopen</name><argument_list pos:start="21:12" pos:end="21:33">(<argument pos:start="21:13" pos:end="21:22"><expr pos:start="21:13" pos:end="21:22"><literal type="string" pos:start="21:13" pos:end="21:22">"stone.in"</literal></expr></argument>,<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><literal type="string" pos:start="21:24" pos:end="21:26">"r"</literal></expr></argument>,<argument pos:start="21:28" pos:end="21:32"><expr pos:start="21:28" pos:end="21:32"><name pos:start="21:28" pos:end="21:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:36"><expr pos:start="22:5" pos:end="22:35"><call pos:start="22:5" pos:end="22:35"><name pos:start="22:5" pos:end="22:11">freopen</name><argument_list pos:start="22:12" pos:end="22:35">(<argument pos:start="22:13" pos:end="22:23"><expr pos:start="22:13" pos:end="22:23"><literal type="string" pos:start="22:13" pos:end="22:23">"stone.out"</literal></expr></argument>,<argument pos:start="22:25" pos:end="22:27"><expr pos:start="22:25" pos:end="22:27"><literal type="string" pos:start="22:25" pos:end="22:27">"w"</literal></expr></argument>,<argument pos:start="22:29" pos:end="22:34"><expr pos:start="22:29" pos:end="22:34"><name pos:start="22:29" pos:end="22:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><call pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:9">scanf</name><argument_list pos:start="23:10" pos:end="23:18">(<argument pos:start="23:11" pos:end="23:14"><expr pos:start="23:11" pos:end="23:14"><literal type="string" pos:start="23:11" pos:end="23:14">"%d"</literal></expr></argument>,<argument pos:start="23:16" pos:end="23:17"><expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">&amp;</operator><name pos:start="23:17" pos:end="23:17">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="24:5" pos:end="25:35">for<control pos:start="24:8" pos:end="24:24">(<init pos:start="24:9" pos:end="24:16"><decl pos:start="24:9" pos:end="24:15"><type pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:11">int</name></type> <name pos:start="24:13" pos:end="24:13">i</name><init pos:start="24:14" pos:end="24:15">=<expr pos:start="24:15" pos:end="24:15"><literal type="number" pos:start="24:15" pos:end="24:15">0</literal></expr></init></decl>;</init><condition pos:start="24:17" pos:end="24:20"><expr pos:start="24:17" pos:end="24:19"><name pos:start="24:17" pos:end="24:17">i</name><operator pos:start="24:18" pos:end="24:18">&lt;</operator><name pos:start="24:19" pos:end="24:19">n</name></expr>;</condition><incr pos:start="24:21" pos:end="24:23"><expr pos:start="24:21" pos:end="24:23"><name pos:start="24:21" pos:end="24:21">i</name><operator pos:start="24:22" pos:end="24:23">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:9" pos:end="25:35"><block_content pos:start="25:9" pos:end="25:35">
        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><call pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:13">scanf</name><argument_list pos:start="25:14" pos:end="25:34">(<argument pos:start="25:15" pos:end="25:21"><expr pos:start="25:15" pos:end="25:21"><literal type="string" pos:start="25:15" pos:end="25:21">"%d %d"</literal></expr></argument>,<argument pos:start="25:23" pos:end="25:27"><expr pos:start="25:23" pos:end="25:27"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:27"><name pos:start="25:24" pos:end="25:24">a</name><index pos:start="25:25" pos:end="25:27">[<expr pos:start="25:26" pos:end="25:26"><name pos:start="25:26" pos:end="25:26">i</name></expr>]</index></name></expr></argument>,<argument pos:start="25:29" pos:end="25:33"><expr pos:start="25:29" pos:end="25:33"><operator pos:start="25:29" pos:end="25:29">&amp;</operator><name pos:start="25:30" pos:end="25:33"><name pos:start="25:30" pos:end="25:30">b</name><index pos:start="25:31" pos:end="25:33">[<expr pos:start="25:32" pos:end="25:32"><name pos:start="25:32" pos:end="25:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="26:5" pos:end="26:17"><expr pos:start="26:5" pos:end="26:16"><call pos:start="26:5" pos:end="26:16"><name pos:start="26:5" pos:end="26:7">dfs</name><argument_list pos:start="26:8" pos:end="26:16">(<argument pos:start="26:9" pos:end="26:9"><expr pos:start="26:9" pos:end="26:9"><name pos:start="26:9" pos:end="26:9">n</name></expr></argument>,<argument pos:start="26:11" pos:end="26:11"><expr pos:start="26:11" pos:end="26:11"><literal type="number" pos:start="26:11" pos:end="26:11">1</literal></expr></argument>,<argument pos:start="26:13" pos:end="26:13"><expr pos:start="26:13" pos:end="26:13"><literal type="number" pos:start="26:13" pos:end="26:13">0</literal></expr></argument>,<argument pos:start="26:15" pos:end="26:15"><expr pos:start="26:15" pos:end="26:15"><literal type="number" pos:start="26:15" pos:end="26:15">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:14"><expr pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:8">cout</name><operator pos:start="27:9" pos:end="27:10">&lt;&lt;</operator><name pos:start="27:11" pos:end="27:13">ans</name></expr>;</expr_stmt>
    <return pos:start="28:5" pos:end="28:13">return <expr pos:start="28:12" pos:end="28:12"><literal type="number" pos:start="28:12" pos:end="28:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
