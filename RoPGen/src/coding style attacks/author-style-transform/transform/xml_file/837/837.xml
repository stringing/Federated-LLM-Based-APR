<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/837/837.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:9"><decl pos:start="3:1" pos:end="3:8"><type pos:start="3:1" pos:end="3:6"><name pos:start="3:1" pos:end="3:6">string</name></type> <name pos:start="3:8" pos:end="3:8">s</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:13"><decl pos:start="4:1" pos:end="4:12"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:12"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:12">[<expr pos:start="4:7" pos:end="4:11"><literal type="number" pos:start="4:7" pos:end="4:11">50000</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="24:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list><block pos:start="5:11" pos:end="24:1">{<block_content pos:start="6:5" pos:end="23:13">
    <expr_stmt pos:start="6:5" pos:end="6:32"><expr pos:start="6:5" pos:end="6:31"><call pos:start="6:5" pos:end="6:31"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:31">(<argument pos:start="6:13" pos:end="6:20"><expr pos:start="6:13" pos:end="6:20"><literal type="string" pos:start="6:13" pos:end="6:20">"zip.in"</literal></expr></argument>,<argument pos:start="6:22" pos:end="6:24"><expr pos:start="6:22" pos:end="6:24"><literal type="string" pos:start="6:22" pos:end="6:24">"r"</literal></expr></argument>,<argument pos:start="6:26" pos:end="6:30"><expr pos:start="6:26" pos:end="6:30"><name pos:start="6:26" pos:end="6:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:34"><expr pos:start="7:5" pos:end="7:33"><call pos:start="7:5" pos:end="7:33"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:33">(<argument pos:start="7:13" pos:end="7:21"><expr pos:start="7:13" pos:end="7:21"><literal type="string" pos:start="7:13" pos:end="7:21">"zip.out"</literal></expr></argument>,<argument pos:start="7:23" pos:end="7:25"><expr pos:start="7:23" pos:end="7:25"><literal type="string" pos:start="7:23" pos:end="7:25">"w"</literal></expr></argument>,<argument pos:start="7:27" pos:end="7:32"><expr pos:start="7:27" pos:end="7:32"><name pos:start="7:27" pos:end="7:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:14"><decl pos:start="8:5" pos:end="8:13"><type pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:10">string</name></type> <name pos:start="8:12" pos:end="8:13">in</name></decl>;</decl_stmt>
    <while pos:start="9:5" pos:end="10:21">while<condition pos:start="9:10" pos:end="9:18">(<expr pos:start="9:11" pos:end="9:17"><name pos:start="9:11" pos:end="9:13">cin</name><operator pos:start="9:14" pos:end="9:15">&gt;&gt;</operator><name pos:start="9:16" pos:end="9:17">in</name></expr>)</condition><block type="pseudo" pos:start="10:9" pos:end="10:21"><block_content pos:start="10:9" pos:end="10:21">
        <expr_stmt pos:start="10:9" pos:end="10:21"><expr pos:start="10:9" pos:end="10:20"><call pos:start="10:9" pos:end="10:20"><name pos:start="10:9" pos:end="10:16"><name pos:start="10:9" pos:end="10:9">s</name><operator pos:start="10:10" pos:end="10:10">.</operator><name pos:start="10:11" pos:end="10:16">append</name></name><argument_list pos:start="10:17" pos:end="10:20">(<argument pos:start="10:18" pos:end="10:19"><expr pos:start="10:18" pos:end="10:19"><name pos:start="10:18" pos:end="10:19">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>
    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:13">flag</name><init pos:start="11:14" pos:end="11:22">=<expr pos:start="11:15" pos:end="11:22"><name pos:start="11:15" pos:end="11:18"><name pos:start="11:15" pos:end="11:15">s</name><index pos:start="11:16" pos:end="11:18">[<expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr>]</index></name><operator pos:start="11:19" pos:end="11:19">-</operator><literal type="char" pos:start="11:20" pos:end="11:22">'0'</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:14"><decl pos:start="12:5" pos:end="12:13"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:11">sum</name><init pos:start="12:12" pos:end="12:13">=<expr pos:start="12:13" pos:end="12:13"><literal type="number" pos:start="12:13" pos:end="12:13">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="13:5" pos:end="22:5">for<control pos:start="13:8" pos:end="13:33">(<init pos:start="13:9" pos:end="13:16"><decl pos:start="13:9" pos:end="13:15"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name><init pos:start="13:14" pos:end="13:15">=<expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</init><condition pos:start="13:17" pos:end="13:29"><expr pos:start="13:17" pos:end="13:28"><name pos:start="13:17" pos:end="13:17">i</name><operator pos:start="13:18" pos:end="13:18">&lt;</operator><call pos:start="13:19" pos:end="13:28"><name pos:start="13:19" pos:end="13:26"><name pos:start="13:19" pos:end="13:19">s</name><operator pos:start="13:20" pos:end="13:20">.</operator><name pos:start="13:21" pos:end="13:26">length</name></name><argument_list pos:start="13:27" pos:end="13:28">()</argument_list></call></expr>;</condition><incr pos:start="13:30" pos:end="13:32"><expr pos:start="13:30" pos:end="13:32"><name pos:start="13:30" pos:end="13:30">i</name><operator pos:start="13:31" pos:end="13:32">++</operator></expr></incr>)</control><block pos:start="13:34" pos:end="22:5">{<block_content pos:start="14:9" pos:end="21:9">
        <if_stmt pos:start="14:9" pos:end="21:9"><if pos:start="14:9" pos:end="18:9">if<condition pos:start="14:11" pos:end="14:37">(<expr pos:start="14:12" pos:end="14:36"><name pos:start="14:12" pos:end="14:15"><name pos:start="14:12" pos:end="14:12">s</name><index pos:start="14:13" pos:end="14:15">[<expr pos:start="14:14" pos:end="14:14"><name pos:start="14:14" pos:end="14:14">i</name></expr>]</index></name><operator pos:start="14:16" pos:end="14:17">!=</operator><call pos:start="14:18" pos:end="14:36"><name pos:start="14:18" pos:end="14:21">char</name><argument_list pos:start="14:22" pos:end="14:36">(<argument pos:start="14:23" pos:end="14:35"><expr pos:start="14:23" pos:end="14:35"><operator pos:start="14:23" pos:end="14:23">(</operator><name pos:start="14:24" pos:end="14:26">int</name><operator pos:start="14:27" pos:end="14:27">)</operator><name pos:start="14:28" pos:end="14:31">flag</name><operator pos:start="14:32" pos:end="14:32">+</operator><literal type="char" pos:start="14:33" pos:end="14:35">'0'</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="14:38" pos:end="18:9">{<block_content pos:start="15:13" pos:end="17:18">
            <expr_stmt pos:start="15:13" pos:end="15:23"><expr pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:16">flag</name><operator pos:start="15:17" pos:end="15:17">=</operator><operator pos:start="15:18" pos:end="15:18">~</operator><name pos:start="15:19" pos:end="15:22">flag</name></expr>;</expr_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:27"><expr pos:start="16:13" pos:end="16:26"><name pos:start="16:13" pos:end="16:16">cout</name><operator pos:start="16:17" pos:end="16:18">&lt;&lt;</operator><name pos:start="16:19" pos:end="16:21">sum</name><operator pos:start="16:22" pos:end="16:23">&lt;&lt;</operator><literal type="string" pos:start="16:24" pos:end="16:26">" "</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:18"><expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:15">sum</name><operator pos:start="17:16" pos:end="17:16">=</operator><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="18:10" pos:end="21:9">else<block pos:start="18:14" pos:end="21:9">{<block_content pos:start="19:13" pos:end="20:21">
            <expr_stmt pos:start="19:13" pos:end="19:18"><expr pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:15">sum</name><operator pos:start="19:16" pos:end="19:17">++</operator></expr>;</expr_stmt>
            <continue pos:start="20:13" pos:end="20:21">continue;</continue>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <return pos:start="23:5" pos:end="23:13">return <expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
