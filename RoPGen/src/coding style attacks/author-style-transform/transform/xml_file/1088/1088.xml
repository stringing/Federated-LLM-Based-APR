<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1088/1088.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:16">&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:20">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:12"><decl pos:start="5:1" pos:end="5:11"><type pos:start="5:1" pos:end="5:9"><name pos:start="5:1" pos:end="5:4">long</name> <name pos:start="5:6" pos:end="5:9">long</name></type> <name pos:start="5:11" pos:end="5:11">n</name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="24:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list><block pos:start="6:11" pos:end="24:1">{<block_content pos:start="7:5" pos:end="23:13">
    <expr_stmt pos:start="7:5" pos:end="7:37"><expr pos:start="7:5" pos:end="7:36"><call pos:start="7:5" pos:end="7:36"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:36">(<argument pos:start="7:13" pos:end="7:23"><expr pos:start="7:13" pos:end="7:23"><literal type="string" pos:start="7:13" pos:end="7:23">"square.in"</literal></expr></argument>, <argument pos:start="7:26" pos:end="7:28"><expr pos:start="7:26" pos:end="7:28"><literal type="string" pos:start="7:26" pos:end="7:28">"r"</literal></expr></argument>, <argument pos:start="7:31" pos:end="7:35"><expr pos:start="7:31" pos:end="7:35"><name pos:start="7:31" pos:end="7:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:39"><expr pos:start="8:5" pos:end="8:38"><call pos:start="8:5" pos:end="8:38"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:38">(<argument pos:start="8:13" pos:end="8:24"><expr pos:start="8:13" pos:end="8:24"><literal type="string" pos:start="8:13" pos:end="8:24">"square.out"</literal></expr></argument>, <argument pos:start="8:27" pos:end="8:29"><expr pos:start="8:27" pos:end="8:29"><literal type="string" pos:start="8:27" pos:end="8:29">"w"</literal></expr></argument>, <argument pos:start="8:32" pos:end="8:37"><expr pos:start="8:32" pos:end="8:37"><name pos:start="8:32" pos:end="8:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:13"><expr pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:7">cin</name> <operator pos:start="9:9" pos:end="9:10">&gt;&gt;</operator> <name pos:start="9:12" pos:end="9:12">n</name></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="12:5"><if pos:start="10:5" pos:end="12:5">if<condition pos:start="10:7" pos:end="10:14">(<expr pos:start="10:8" pos:end="10:13"><name pos:start="10:8" pos:end="10:8">n</name> <operator pos:start="10:10" pos:end="10:11">==</operator> <literal type="number" pos:start="10:13" pos:end="10:13">1</literal></expr>)</condition> <block pos:start="10:16" pos:end="12:5">{<block_content pos:start="11:9" pos:end="11:54">
        <expr_stmt pos:start="11:9" pos:end="11:54"><expr pos:start="11:9" pos:end="11:53"><name pos:start="11:9" pos:end="11:12">cout</name> <operator pos:start="11:14" pos:end="11:15">&lt;&lt;</operator> <literal type="number" pos:start="11:17" pos:end="11:17">0</literal> <operator pos:start="11:19" pos:end="11:20">&lt;&lt;</operator> <literal type="string" pos:start="11:22" pos:end="11:24">" "</literal> <operator pos:start="11:26" pos:end="11:27">&lt;&lt;</operator> <literal type="number" pos:start="11:29" pos:end="11:29">0</literal> <operator pos:start="11:31" pos:end="11:32">&lt;&lt;</operator> <literal type="string" pos:start="11:34" pos:end="11:36">" "</literal> <operator pos:start="11:38" pos:end="11:39">&lt;&lt;</operator> <literal type="number" pos:start="11:41" pos:end="11:41">0</literal> <operator pos:start="11:43" pos:end="11:44">&lt;&lt;</operator> <literal type="string" pos:start="11:46" pos:end="11:48">" "</literal> <operator pos:start="11:50" pos:end="11:51">&lt;&lt;</operator> <literal type="number" pos:start="11:53" pos:end="11:53">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <for pos:start="13:5" pos:end="22:5">for<control pos:start="13:8" pos:end="13:39">(<init pos:start="13:9" pos:end="13:24"><decl pos:start="13:9" pos:end="13:23"><type pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:12">long</name> <name pos:start="13:14" pos:end="13:17">long</name></type> <name pos:start="13:19" pos:end="13:19">i</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>;</init> <condition pos:start="13:26" pos:end="13:34"><expr pos:start="13:26" pos:end="13:33"><name pos:start="13:26" pos:end="13:26">i</name><operator pos:start="13:27" pos:end="13:27">*</operator><name pos:start="13:28" pos:end="13:28">i</name> <operator pos:start="13:30" pos:end="13:31">&lt;=</operator> <name pos:start="13:33" pos:end="13:33">n</name></expr>;</condition> <incr pos:start="13:36" pos:end="13:38"><expr pos:start="13:36" pos:end="13:38"><name pos:start="13:36" pos:end="13:36">i</name><operator pos:start="13:37" pos:end="13:38">++</operator></expr></incr>)</control><block pos:start="13:40" pos:end="22:5">{<block_content pos:start="14:9" pos:end="21:9">
        <for pos:start="14:9" pos:end="21:9">for<control pos:start="14:12" pos:end="14:49">(<init pos:start="14:13" pos:end="14:28"><decl pos:start="14:13" pos:end="14:27"><type pos:start="14:13" pos:end="14:21"><name pos:start="14:13" pos:end="14:16">long</name> <name pos:start="14:18" pos:end="14:21">long</name></type> <name pos:start="14:23" pos:end="14:23">j</name> <init pos:start="14:25" pos:end="14:27">= <expr pos:start="14:27" pos:end="14:27"><literal type="number" pos:start="14:27" pos:end="14:27">0</literal></expr></init></decl>;</init> <condition pos:start="14:30" pos:end="14:44"><expr pos:start="14:30" pos:end="14:43"><name pos:start="14:30" pos:end="14:30">i</name><operator pos:start="14:31" pos:end="14:31">*</operator><name pos:start="14:32" pos:end="14:32">i</name> <operator pos:start="14:34" pos:end="14:34">+</operator> <name pos:start="14:36" pos:end="14:36">j</name><operator pos:start="14:37" pos:end="14:37">*</operator><name pos:start="14:38" pos:end="14:38">j</name> <operator pos:start="14:40" pos:end="14:41">&lt;=</operator> <name pos:start="14:43" pos:end="14:43">n</name></expr>;</condition> <incr pos:start="14:46" pos:end="14:48"><expr pos:start="14:46" pos:end="14:48"><name pos:start="14:46" pos:end="14:46">j</name><operator pos:start="14:47" pos:end="14:48">++</operator></expr></incr>)</control><block pos:start="14:50" pos:end="21:9">{<block_content pos:start="15:13" pos:end="20:13">
            <for pos:start="15:13" pos:end="20:13">for<control pos:start="15:16" pos:end="15:58">(<init pos:start="15:17" pos:end="15:32"><decl pos:start="15:17" pos:end="15:31"><type pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:20">long</name> <name pos:start="15:22" pos:end="15:25">long</name></type> <name pos:start="15:27" pos:end="15:27">k</name> <init pos:start="15:29" pos:end="15:31">= <expr pos:start="15:31" pos:end="15:31"><literal type="number" pos:start="15:31" pos:end="15:31">0</literal></expr></init></decl>;</init> <condition pos:start="15:34" pos:end="15:53"><expr pos:start="15:34" pos:end="15:52"><name pos:start="15:34" pos:end="15:34">i</name><operator pos:start="15:35" pos:end="15:35">*</operator><name pos:start="15:36" pos:end="15:36">i</name> <operator pos:start="15:38" pos:end="15:38">+</operator> <name pos:start="15:40" pos:end="15:40">j</name><operator pos:start="15:41" pos:end="15:41">*</operator><name pos:start="15:42" pos:end="15:42">j</name> <operator pos:start="15:44" pos:end="15:44">+</operator> <name pos:start="15:46" pos:end="15:46">k</name><operator pos:start="15:47" pos:end="15:47">*</operator><name pos:start="15:48" pos:end="15:48">k</name> <operator pos:start="15:50" pos:end="15:50">&lt;</operator> <name pos:start="15:52" pos:end="15:52">n</name></expr>;</condition> <incr pos:start="15:55" pos:end="15:57"><expr pos:start="15:55" pos:end="15:57"><name pos:start="15:55" pos:end="15:55">k</name><operator pos:start="15:56" pos:end="15:57">++</operator></expr></incr>)</control><block pos:start="15:59" pos:end="20:13">{<block_content pos:start="16:17" pos:end="19:17">
                <decl_stmt pos:start="16:17" pos:end="16:50"><decl pos:start="16:17" pos:end="16:49"><type pos:start="16:17" pos:end="16:19"><name pos:start="16:17" pos:end="16:19">int</name></type> <name pos:start="16:21" pos:end="16:21">d</name> <init pos:start="16:23" pos:end="16:49">= <expr pos:start="16:25" pos:end="16:49"><call pos:start="16:25" pos:end="16:49"><name pos:start="16:25" pos:end="16:28">sqrt</name><argument_list pos:start="16:29" pos:end="16:49">(<argument pos:start="16:30" pos:end="16:48"><expr pos:start="16:30" pos:end="16:48"><name pos:start="16:30" pos:end="16:30">n</name> <operator pos:start="16:32" pos:end="16:32">-</operator> <name pos:start="16:34" pos:end="16:34">i</name><operator pos:start="16:35" pos:end="16:35">*</operator><name pos:start="16:36" pos:end="16:36">i</name> <operator pos:start="16:38" pos:end="16:38">-</operator> <name pos:start="16:40" pos:end="16:40">j</name><operator pos:start="16:41" pos:end="16:41">*</operator><name pos:start="16:42" pos:end="16:42">j</name> <operator pos:start="16:44" pos:end="16:44">-</operator> <name pos:start="16:46" pos:end="16:46">k</name><operator pos:start="16:47" pos:end="16:47">*</operator><name pos:start="16:48" pos:end="16:48">k</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="17:17" pos:end="19:17"><if pos:start="17:17" pos:end="19:17">if<condition pos:start="17:19" pos:end="17:26">(<expr pos:start="17:20" pos:end="17:25"><name pos:start="17:20" pos:end="17:20">d</name> <operator pos:start="17:22" pos:end="17:23">==</operator> <name pos:start="17:25" pos:end="17:25">n</name></expr>)</condition><block pos:start="17:27" pos:end="19:17">{<block_content pos:start="18:21" pos:end="18:30">
                    <expr_stmt pos:start="18:21" pos:end="18:30"><expr pos:start="18:21" pos:end="18:29"><name pos:start="18:21" pos:end="18:24">cout</name> <operator pos:start="18:26" pos:end="18:27">&lt;&lt;</operator> <name pos:start="18:29" pos:end="18:29">d</name></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <return pos:start="23:5" pos:end="23:13">return <expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
