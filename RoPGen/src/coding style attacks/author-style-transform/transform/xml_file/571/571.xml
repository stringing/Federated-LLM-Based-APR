<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/571/571.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:23"><decl pos:start="3:1" pos:end="3:22"><type pos:start="3:1" pos:end="3:9"><specifier pos:start="3:1" pos:end="3:5">const</specifier> <name pos:start="3:7" pos:end="3:9">int</name></type> <name pos:start="3:11" pos:end="3:11">N</name> <init pos:start="3:13" pos:end="3:22">= <expr pos:start="3:15" pos:end="3:22"><literal type="number" pos:start="3:15" pos:end="3:19">2e5</literal> <operator pos:start="3:19" pos:end="3:19">+</operator> <literal type="number" pos:start="3:21" pos:end="3:22">10</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:10"><decl pos:start="4:1" pos:end="4:9"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">char</name></type> <name pos:start="4:6" pos:end="4:9"><name pos:start="4:6" pos:end="4:6">s</name><index pos:start="4:7" pos:end="4:9">[<expr pos:start="4:8" pos:end="4:8"><name pos:start="4:8" pos:end="4:8">N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:6"><decl pos:start="5:1" pos:end="5:5"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:5">n</name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="23:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">bool</name></type> <name pos:start="6:6" pos:end="6:6">a</name><parameter_list pos:start="6:7" pos:end="6:8">()</parameter_list><block pos:start="6:9" pos:end="23:1">{<block_content pos:start="7:5" pos:end="22:5">
    <if_stmt pos:start="7:5" pos:end="7:32"><if pos:start="7:5" pos:end="7:32">if<condition pos:start="7:7" pos:end="7:18">(<expr pos:start="7:8" pos:end="7:17"><name pos:start="7:8" pos:end="7:8">n</name> <operator pos:start="7:10" pos:end="7:10">%</operator> <literal type="number" pos:start="7:12" pos:end="7:12">8</literal> <operator pos:start="7:14" pos:end="7:15">!=</operator> <literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr>)</condition><block type="pseudo" pos:start="7:20" pos:end="7:32"><block_content pos:start="7:20" pos:end="7:32"> <return pos:start="7:20" pos:end="7:32">return <expr pos:start="7:27" pos:end="7:31"><literal type="boolean" pos:start="7:27" pos:end="7:31">false</literal></expr>;</return></block_content></block></if></if_stmt>
    <for pos:start="8:5" pos:end="10:5">for<control pos:start="8:8" pos:end="8:31">(<init pos:start="8:9" pos:end="8:18"><decl pos:start="8:9" pos:end="8:17"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:13">i</name> <init pos:start="8:15" pos:end="8:17">= <expr pos:start="8:17" pos:end="8:17"><literal type="number" pos:start="8:17" pos:end="8:17">1</literal></expr></init></decl>;</init> <condition pos:start="8:20" pos:end="8:26"><expr pos:start="8:20" pos:end="8:25"><name pos:start="8:20" pos:end="8:20">i</name> <operator pos:start="8:22" pos:end="8:23">&lt;=</operator> <name pos:start="8:25" pos:end="8:25">n</name></expr>;</condition> <incr pos:start="8:28" pos:end="8:30"><expr pos:start="8:28" pos:end="8:30"><name pos:start="8:28" pos:end="8:28">i</name><operator pos:start="8:29" pos:end="8:30">++</operator></expr></incr>)</control><block pos:start="8:32" pos:end="10:5">{<block_content pos:start="9:9" pos:end="9:48">
        <if_stmt pos:start="9:9" pos:end="9:48"><if pos:start="9:9" pos:end="9:48">if<condition pos:start="9:11" pos:end="9:34">(<expr pos:start="9:12" pos:end="9:33"><name pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:12">s</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><name pos:start="9:14" pos:end="9:14">i</name></expr>]</index></name> <operator pos:start="9:17" pos:end="9:18">!=</operator> <literal type="number" pos:start="9:20" pos:end="9:20">0</literal> <operator pos:start="9:22" pos:end="9:23">&amp;&amp;</operator> <name pos:start="9:25" pos:end="9:28"><name pos:start="9:25" pos:end="9:25">s</name><index pos:start="9:26" pos:end="9:28">[<expr pos:start="9:27" pos:end="9:27"><name pos:start="9:27" pos:end="9:27">i</name></expr>]</index></name> <operator pos:start="9:30" pos:end="9:31">!=</operator> <literal type="number" pos:start="9:33" pos:end="9:33">1</literal></expr>)</condition><block type="pseudo" pos:start="9:36" pos:end="9:48"><block_content pos:start="9:36" pos:end="9:48"> <return pos:start="9:36" pos:end="9:48">return <expr pos:start="9:43" pos:end="9:47"><literal type="boolean" pos:start="9:43" pos:end="9:47">false</literal></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="11:5" pos:end="22:5">for<control pos:start="11:8" pos:end="11:34">(<init pos:start="11:9" pos:end="11:18"><decl pos:start="11:9" pos:end="11:17"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr></init></decl>;</init> <condition pos:start="11:20" pos:end="11:26"><expr pos:start="11:20" pos:end="11:25"><name pos:start="11:20" pos:end="11:20">i</name> <operator pos:start="11:22" pos:end="11:23">&lt;=</operator> <name pos:start="11:25" pos:end="11:25">n</name></expr>;</condition> <incr pos:start="11:28" pos:end="11:33"><expr pos:start="11:28" pos:end="11:33"><name pos:start="11:28" pos:end="11:28">i</name> <operator pos:start="11:30" pos:end="11:31">+=</operator> <literal type="number" pos:start="11:33" pos:end="11:33">8</literal></expr></incr>)</control><block pos:start="11:35" pos:end="22:5">{<block_content pos:start="12:9" pos:end="21:9">
        <if_stmt pos:start="12:9" pos:end="12:88"><if pos:start="12:9" pos:end="12:88">if<condition pos:start="12:11" pos:end="12:74">(<expr pos:start="12:12" pos:end="12:73"><call pos:start="12:12" pos:end="12:35"><name pos:start="12:12" pos:end="12:18">strncmp</name><argument_list pos:start="12:19" pos:end="12:35">(<argument pos:start="12:20" pos:end="12:24"><expr pos:start="12:20" pos:end="12:24"><name pos:start="12:20" pos:end="12:20">s</name> <operator pos:start="12:22" pos:end="12:22">+</operator> <name pos:start="12:24" pos:end="12:24">i</name></expr></argument>, <argument pos:start="12:27" pos:end="12:31"><expr pos:start="12:27" pos:end="12:31"><literal type="string" pos:start="12:27" pos:end="12:31">"100"</literal></expr></argument>, <argument pos:start="12:34" pos:end="12:34"><expr pos:start="12:34" pos:end="12:34"><literal type="number" pos:start="12:34" pos:end="12:34">3</literal></expr></argument>)</argument_list></call> <operator pos:start="12:37" pos:end="12:38">==</operator> <literal type="number" pos:start="12:40" pos:end="12:40">0</literal> <operator pos:start="12:42" pos:end="12:43">||</operator> <call pos:start="12:45" pos:end="12:68"><name pos:start="12:45" pos:end="12:51">strncmp</name><argument_list pos:start="12:52" pos:end="12:68">(<argument pos:start="12:53" pos:end="12:57"><expr pos:start="12:53" pos:end="12:57"><name pos:start="12:53" pos:end="12:53">s</name> <operator pos:start="12:55" pos:end="12:55">+</operator> <name pos:start="12:57" pos:end="12:57">i</name></expr></argument>, <argument pos:start="12:60" pos:end="12:64"><expr pos:start="12:60" pos:end="12:64"><literal type="string" pos:start="12:60" pos:end="12:64">"110"</literal></expr></argument>, <argument pos:start="12:67" pos:end="12:67"><expr pos:start="12:67" pos:end="12:67"><literal type="number" pos:start="12:67" pos:end="12:67">3</literal></expr></argument>)</argument_list></call> <operator pos:start="12:70" pos:end="12:71">==</operator> <literal type="number" pos:start="12:73" pos:end="12:73">0</literal></expr>)</condition><block type="pseudo" pos:start="12:76" pos:end="12:88"><block_content pos:start="12:76" pos:end="12:88"> <return pos:start="12:76" pos:end="12:88">return <expr pos:start="12:83" pos:end="12:87"><literal type="boolean" pos:start="12:83" pos:end="12:87">false</literal></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt pos:start="13:9" pos:end="16:9"><if pos:start="13:9" pos:end="16:9">if<condition pos:start="13:11" pos:end="13:23">(<expr pos:start="13:12" pos:end="13:22"><name pos:start="13:12" pos:end="13:15"><name pos:start="13:12" pos:end="13:12">s</name><index pos:start="13:13" pos:end="13:15">[<expr pos:start="13:14" pos:end="13:14"><name pos:start="13:14" pos:end="13:14">i</name></expr>]</index></name> <operator pos:start="13:17" pos:end="13:18">==</operator> <literal type="char" pos:start="13:20" pos:end="13:22">'0'</literal></expr>)</condition><block pos:start="13:24" pos:end="16:9">{<block_content pos:start="14:13" pos:end="15:19">
            <if_stmt pos:start="14:13" pos:end="14:58"><if pos:start="14:13" pos:end="14:58">if<condition pos:start="14:15" pos:end="14:44">(<expr pos:start="14:16" pos:end="14:43"><name pos:start="14:16" pos:end="14:16">i</name> <operator pos:start="14:18" pos:end="14:18">+</operator> <literal type="number" pos:start="14:20" pos:end="14:20">8</literal> <operator pos:start="14:22" pos:end="14:22">&gt;</operator> <name pos:start="14:24" pos:end="14:24">n</name> <operator pos:start="14:26" pos:end="14:27">||</operator> <name pos:start="14:29" pos:end="14:36"><name pos:start="14:29" pos:end="14:29">s</name><index pos:start="14:30" pos:end="14:36">[<expr pos:start="14:31" pos:end="14:35"><name pos:start="14:31" pos:end="14:31">i</name> <operator pos:start="14:33" pos:end="14:33">+</operator> <literal type="number" pos:start="14:35" pos:end="14:35">8</literal></expr>]</index></name> <operator pos:start="14:38" pos:end="14:39">!=</operator> <literal type="char" pos:start="14:41" pos:end="14:43">'0'</literal></expr>)</condition><block type="pseudo" pos:start="14:46" pos:end="14:58"><block_content pos:start="14:46" pos:end="14:58"> <return pos:start="14:46" pos:end="14:58">return <expr pos:start="14:53" pos:end="14:57"><literal type="boolean" pos:start="14:53" pos:end="14:57">false</literal></expr>;</return></block_content></block></if></if_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:19"><expr pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:13">i</name> <operator pos:start="15:15" pos:end="15:16">+=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">8</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if<condition pos:start="17:11" pos:end="17:41">(<expr pos:start="17:12" pos:end="17:40"><call pos:start="17:12" pos:end="17:35"><name pos:start="17:12" pos:end="17:18">strncmp</name><argument_list pos:start="17:19" pos:end="17:35">(<argument pos:start="17:20" pos:end="17:24"><expr pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:20">s</name> <operator pos:start="17:22" pos:end="17:22">+</operator> <name pos:start="17:24" pos:end="17:24">i</name></expr></argument>, <argument pos:start="17:27" pos:end="17:31"><expr pos:start="17:27" pos:end="17:31"><literal type="string" pos:start="17:27" pos:end="17:31">"101"</literal></expr></argument>, <argument pos:start="17:34" pos:end="17:34"><expr pos:start="17:34" pos:end="17:34"><literal type="number" pos:start="17:34" pos:end="17:34">3</literal></expr></argument>)</argument_list></call> <operator pos:start="17:37" pos:end="17:38">==</operator> <literal type="number" pos:start="17:40" pos:end="17:40">0</literal></expr>)</condition> <block pos:start="17:43" pos:end="21:9">{<block_content pos:start="18:13" pos:end="20:39">
            <decl_stmt pos:start="18:13" pos:end="18:24"><decl pos:start="18:13" pos:end="18:23"><type pos:start="18:13" pos:end="18:15"><name pos:start="18:13" pos:end="18:15">int</name></type> <name pos:start="18:17" pos:end="18:19">tmp</name> <init pos:start="18:21" pos:end="18:23">= <expr pos:start="18:23" pos:end="18:23"><literal type="number" pos:start="18:23" pos:end="18:23">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="19:13" pos:end="19:76">for<control pos:start="19:16" pos:end="19:46">(<init pos:start="19:17" pos:end="19:30"><decl pos:start="19:17" pos:end="19:29"><type pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">int</name></type> <name pos:start="19:21" pos:end="19:21">j</name> <init pos:start="19:23" pos:end="19:29">= <expr pos:start="19:25" pos:end="19:29"><name pos:start="19:25" pos:end="19:25">i</name> <operator pos:start="19:27" pos:end="19:27">+</operator> <literal type="number" pos:start="19:29" pos:end="19:29">3</literal></expr></init></decl>;</init> <condition pos:start="19:32" pos:end="19:41"><expr pos:start="19:32" pos:end="19:40"><name pos:start="19:32" pos:end="19:32">j</name> <operator pos:start="19:34" pos:end="19:34">&lt;</operator> <name pos:start="19:36" pos:end="19:36">i</name> <operator pos:start="19:38" pos:end="19:38">+</operator> <literal type="number" pos:start="19:40" pos:end="19:40">8</literal></expr>;</condition> <incr pos:start="19:43" pos:end="19:45"><expr pos:start="19:43" pos:end="19:45"><operator pos:start="19:43" pos:end="19:44">++</operator><name pos:start="19:45" pos:end="19:45">j</name></expr></incr>)</control><block type="pseudo" pos:start="19:48" pos:end="19:76"><block_content pos:start="19:48" pos:end="19:76"> <expr_stmt pos:start="19:48" pos:end="19:76"><expr pos:start="19:48" pos:end="19:75"><name pos:start="19:48" pos:end="19:50">tmp</name> <operator pos:start="19:52" pos:end="19:52">=</operator> <name pos:start="19:54" pos:end="19:56">tmp</name> <operator pos:start="19:58" pos:end="19:58">*</operator> <literal type="number" pos:start="19:60" pos:end="19:62">2</literal> <operator pos:start="19:62" pos:end="19:62">+</operator> <operator pos:start="19:64" pos:end="19:64">(</operator><name pos:start="19:65" pos:end="19:68"><name pos:start="19:65" pos:end="19:65">s</name><index pos:start="19:66" pos:end="19:68">[<expr pos:start="19:67" pos:end="19:67"><name pos:start="19:67" pos:end="19:67">j</name></expr>]</index></name> <operator pos:start="19:70" pos:end="19:70">-</operator> <literal type="char" pos:start="19:72" pos:end="19:74">'0'</literal><operator pos:start="19:75" pos:end="19:75">)</operator></expr>;</expr_stmt></block_content></block></for>
            <if_stmt pos:start="20:13" pos:end="20:39"><if pos:start="20:13" pos:end="20:39">if<condition pos:start="20:15" pos:end="20:25">(<expr pos:start="20:16" pos:end="20:24"><name pos:start="20:16" pos:end="20:18">tmp</name> <operator pos:start="20:20" pos:end="20:21">&gt;=</operator> <literal type="number" pos:start="20:23" pos:end="20:24">26</literal></expr>)</condition><block type="pseudo" pos:start="20:27" pos:end="20:39"><block_content pos:start="20:27" pos:end="20:39"> <return pos:start="20:27" pos:end="20:39">return <expr pos:start="20:34" pos:end="20:38"><literal type="boolean" pos:start="20:34" pos:end="20:38">false</literal></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="24:1" pos:end="48:1"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:8">main</name><parameter_list pos:start="24:9" pos:end="24:10">()</parameter_list><block pos:start="24:11" pos:end="48:1">{<block_content pos:start="25:5" pos:end="47:13">
    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><call pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:11">freopen</name><argument_list pos:start="25:12" pos:end="25:41">(<argument pos:start="25:13" pos:end="25:28"><expr pos:start="25:13" pos:end="25:28"><literal type="string" pos:start="25:13" pos:end="25:28">"information.in"</literal></expr></argument>, <argument pos:start="25:31" pos:end="25:33"><expr pos:start="25:31" pos:end="25:33"><literal type="string" pos:start="25:31" pos:end="25:33">"r"</literal></expr></argument>, <argument pos:start="25:36" pos:end="25:40"><expr pos:start="25:36" pos:end="25:40"><name pos:start="25:36" pos:end="25:40">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:44"><expr pos:start="26:5" pos:end="26:43"><call pos:start="26:5" pos:end="26:43"><name pos:start="26:5" pos:end="26:11">freopen</name><argument_list pos:start="26:12" pos:end="26:43">(<argument pos:start="26:13" pos:end="26:29"><expr pos:start="26:13" pos:end="26:29"><literal type="string" pos:start="26:13" pos:end="26:29">"information.out"</literal></expr></argument>, <argument pos:start="26:32" pos:end="26:34"><expr pos:start="26:32" pos:end="26:34"><literal type="string" pos:start="26:32" pos:end="26:34">"w"</literal></expr></argument>, <argument pos:start="26:37" pos:end="26:42"><expr pos:start="26:37" pos:end="26:42"><name pos:start="26:37" pos:end="26:42">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:23"><expr pos:start="27:5" pos:end="27:22"><call pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:9">scanf</name><argument_list pos:start="27:10" pos:end="27:22">(<argument pos:start="27:11" pos:end="27:14"><expr pos:start="27:11" pos:end="27:14"><literal type="string" pos:start="27:11" pos:end="27:14">"%s"</literal></expr></argument>, <argument pos:start="27:17" pos:end="27:21"><expr pos:start="27:17" pos:end="27:21"><name pos:start="27:17" pos:end="27:17">s</name> <operator pos:start="27:19" pos:end="27:19">+</operator> <literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:22"><expr pos:start="28:5" pos:end="28:21"><name pos:start="28:5" pos:end="28:5">n</name> <operator pos:start="28:7" pos:end="28:7">=</operator> <call pos:start="28:9" pos:end="28:21"><name pos:start="28:9" pos:end="28:14">strlen</name><argument_list pos:start="28:15" pos:end="28:21">(<argument pos:start="28:16" pos:end="28:20"><expr pos:start="28:16" pos:end="28:20"><name pos:start="28:16" pos:end="28:16">s</name> <operator pos:start="28:18" pos:end="28:18">+</operator> <literal type="number" pos:start="28:20" pos:end="28:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="29:5" pos:end="46:5"><if pos:start="29:5" pos:end="31:5">if<condition pos:start="29:7" pos:end="29:12">(<expr pos:start="29:8" pos:end="29:11"><operator pos:start="29:8" pos:end="29:8">!</operator><call pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:9">a</name><argument_list pos:start="29:10" pos:end="29:11">()</argument_list></call></expr>)</condition><block pos:start="29:13" pos:end="31:5">{<block_content pos:start="30:9" pos:end="30:32">
        <expr_stmt pos:start="30:9" pos:end="30:32"><expr pos:start="30:9" pos:end="30:31"><name pos:start="30:9" pos:end="30:12">cout</name> <operator pos:start="30:14" pos:end="30:15">&lt;&lt;</operator> <literal type="string" pos:start="30:17" pos:end="30:23">"Error"</literal> <operator pos:start="30:25" pos:end="30:26">&lt;&lt;</operator> <name pos:start="30:28" pos:end="30:31">endl</name></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="31:6" pos:end="46:5">else<block pos:start="31:10" pos:end="46:5">{<block_content pos:start="32:9" pos:end="45:9">
        <for pos:start="32:9" pos:end="45:9">for<control pos:start="32:12" pos:end="32:38">(<init pos:start="32:13" pos:end="32:22"><decl pos:start="32:13" pos:end="32:21"><type pos:start="32:13" pos:end="32:15"><name pos:start="32:13" pos:end="32:15">int</name></type> <name pos:start="32:17" pos:end="32:17">i</name> <init pos:start="32:19" pos:end="32:21">= <expr pos:start="32:21" pos:end="32:21"><literal type="number" pos:start="32:21" pos:end="32:21">1</literal></expr></init></decl>;</init> <condition pos:start="32:24" pos:end="32:30"><expr pos:start="32:24" pos:end="32:29"><name pos:start="32:24" pos:end="32:24">i</name> <operator pos:start="32:26" pos:end="32:27">&lt;=</operator> <name pos:start="32:29" pos:end="32:29">n</name></expr>;</condition> <incr pos:start="32:32" pos:end="32:37"><expr pos:start="32:32" pos:end="32:37"><name pos:start="32:32" pos:end="32:32">i</name> <operator pos:start="32:34" pos:end="32:35">+=</operator> <literal type="number" pos:start="32:37" pos:end="32:37">8</literal></expr></incr>)</control><block pos:start="32:39" pos:end="45:9">{<block_content pos:start="33:13" pos:end="44:13">
            <if_stmt pos:start="33:13" pos:end="44:13"><if pos:start="33:13" pos:end="37:13">if<condition pos:start="33:15" pos:end="33:45">(<expr pos:start="33:16" pos:end="33:44"><call pos:start="33:16" pos:end="33:39"><name pos:start="33:16" pos:end="33:22">strncmp</name><argument_list pos:start="33:23" pos:end="33:39">(<argument pos:start="33:24" pos:end="33:28"><expr pos:start="33:24" pos:end="33:28"><name pos:start="33:24" pos:end="33:24">s</name> <operator pos:start="33:26" pos:end="33:26">+</operator> <name pos:start="33:28" pos:end="33:28">i</name></expr></argument>, <argument pos:start="33:31" pos:end="33:35"><expr pos:start="33:31" pos:end="33:35"><literal type="string" pos:start="33:31" pos:end="33:35">"101"</literal></expr></argument>, <argument pos:start="33:38" pos:end="33:38"><expr pos:start="33:38" pos:end="33:38"><literal type="number" pos:start="33:38" pos:end="33:38">3</literal></expr></argument>)</argument_list></call> <operator pos:start="33:41" pos:end="33:42">==</operator> <literal type="number" pos:start="33:44" pos:end="33:44">0</literal></expr>)</condition> <block pos:start="33:47" pos:end="37:13">{<block_content pos:start="34:17" pos:end="36:40">
                <decl_stmt pos:start="34:17" pos:end="34:28"><decl pos:start="34:17" pos:end="34:27"><type pos:start="34:17" pos:end="34:19"><name pos:start="34:17" pos:end="34:19">int</name></type> <name pos:start="34:21" pos:end="34:23">tmp</name> <init pos:start="34:25" pos:end="34:27">= <expr pos:start="34:27" pos:end="34:27"><literal type="number" pos:start="34:27" pos:end="34:27">0</literal></expr></init></decl>;</decl_stmt>
                <for pos:start="35:17" pos:end="35:80">for<control pos:start="35:20" pos:end="35:50">(<init pos:start="35:21" pos:end="35:34"><decl pos:start="35:21" pos:end="35:33"><type pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:23">int</name></type> <name pos:start="35:25" pos:end="35:25">j</name> <init pos:start="35:27" pos:end="35:33">= <expr pos:start="35:29" pos:end="35:33"><name pos:start="35:29" pos:end="35:29">i</name> <operator pos:start="35:31" pos:end="35:31">+</operator> <literal type="number" pos:start="35:33" pos:end="35:33">3</literal></expr></init></decl>;</init> <condition pos:start="35:36" pos:end="35:45"><expr pos:start="35:36" pos:end="35:44"><name pos:start="35:36" pos:end="35:36">j</name> <operator pos:start="35:38" pos:end="35:38">&lt;</operator> <name pos:start="35:40" pos:end="35:40">i</name> <operator pos:start="35:42" pos:end="35:42">+</operator> <literal type="number" pos:start="35:44" pos:end="35:44">8</literal></expr>;</condition> <incr pos:start="35:47" pos:end="35:49"><expr pos:start="35:47" pos:end="35:49"><operator pos:start="35:47" pos:end="35:48">++</operator><name pos:start="35:49" pos:end="35:49">j</name></expr></incr>)</control><block type="pseudo" pos:start="35:52" pos:end="35:80"><block_content pos:start="35:52" pos:end="35:80"> <expr_stmt pos:start="35:52" pos:end="35:80"><expr pos:start="35:52" pos:end="35:79"><name pos:start="35:52" pos:end="35:54">tmp</name> <operator pos:start="35:56" pos:end="35:56">=</operator> <name pos:start="35:58" pos:end="35:60">tmp</name> <operator pos:start="35:62" pos:end="35:62">*</operator> <literal type="number" pos:start="35:64" pos:end="35:66">2</literal> <operator pos:start="35:66" pos:end="35:66">+</operator> <operator pos:start="35:68" pos:end="35:68">(</operator><name pos:start="35:69" pos:end="35:72"><name pos:start="35:69" pos:end="35:69">s</name><index pos:start="35:70" pos:end="35:72">[<expr pos:start="35:71" pos:end="35:71"><name pos:start="35:71" pos:end="35:71">j</name></expr>]</index></name> <operator pos:start="35:74" pos:end="35:74">-</operator> <literal type="char" pos:start="35:76" pos:end="35:78">'0'</literal><operator pos:start="35:79" pos:end="35:79">)</operator></expr>;</expr_stmt></block_content></block></for>
                <expr_stmt pos:start="36:17" pos:end="36:40"><expr pos:start="36:17" pos:end="36:39"><call pos:start="36:17" pos:end="36:39"><name pos:start="36:17" pos:end="36:22">printf</name><argument_list pos:start="36:23" pos:end="36:39">(<argument pos:start="36:24" pos:end="36:27"><expr pos:start="36:24" pos:end="36:27"><literal type="string" pos:start="36:24" pos:end="36:27">"%c"</literal></expr></argument>, <argument pos:start="36:30" pos:end="36:38"><expr pos:start="36:30" pos:end="36:38"><literal type="char" pos:start="36:30" pos:end="36:32">'A'</literal> <operator pos:start="36:34" pos:end="36:34">+</operator> <name pos:start="36:36" pos:end="36:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="37:14" pos:end="37:64">else if<condition pos:start="37:21" pos:end="37:51">(<expr pos:start="37:22" pos:end="37:50"><call pos:start="37:22" pos:end="37:45"><name pos:start="37:22" pos:end="37:28">strncmp</name><argument_list pos:start="37:29" pos:end="37:45">(<argument pos:start="37:30" pos:end="37:34"><expr pos:start="37:30" pos:end="37:34"><name pos:start="37:30" pos:end="37:30">s</name> <operator pos:start="37:32" pos:end="37:32">+</operator> <name pos:start="37:34" pos:end="37:34">i</name></expr></argument>, <argument pos:start="37:37" pos:end="37:41"><expr pos:start="37:37" pos:end="37:41"><literal type="string" pos:start="37:37" pos:end="37:41">"111"</literal></expr></argument>, <argument pos:start="37:44" pos:end="37:44"><expr pos:start="37:44" pos:end="37:44"><literal type="number" pos:start="37:44" pos:end="37:44">3</literal></expr></argument>)</argument_list></call> <operator pos:start="37:47" pos:end="37:48">==</operator> <literal type="number" pos:start="37:50" pos:end="37:50">0</literal></expr>)</condition><block type="pseudo" pos:start="37:53" pos:end="37:64"><block_content pos:start="37:53" pos:end="37:64"> <expr_stmt pos:start="37:53" pos:end="37:64"><expr pos:start="37:53" pos:end="37:63"><call pos:start="37:53" pos:end="37:63"><name pos:start="37:53" pos:end="37:58">printf</name><argument_list pos:start="37:59" pos:end="37:63">(<argument pos:start="37:60" pos:end="37:62"><expr pos:start="37:60" pos:end="37:62"><literal type="string" pos:start="37:60" pos:end="37:62">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="38:13" pos:end="44:13">else<block pos:start="38:17" pos:end="44:13">{<block_content pos:start="39:17" pos:end="43:56">
                <decl_stmt pos:start="39:17" pos:end="39:39"><decl pos:start="39:17" pos:end="39:28"><type pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">int</name></type> <name pos:start="39:21" pos:end="39:24">tmp1</name> <init pos:start="39:26" pos:end="39:28">= <expr pos:start="39:28" pos:end="39:28"><literal type="number" pos:start="39:28" pos:end="39:28">0</literal></expr></init></decl>, <decl pos:start="39:31" pos:end="39:38"><type ref="prev" pos:start="39:17" pos:end="39:19"/><name pos:start="39:31" pos:end="39:34">tmp2</name> <init pos:start="39:36" pos:end="39:38">= <expr pos:start="39:38" pos:end="39:38"><literal type="number" pos:start="39:38" pos:end="39:38">0</literal></expr></init></decl>;</decl_stmt>
                <for pos:start="40:17" pos:end="40:82">for<control pos:start="40:20" pos:end="40:50">(<init pos:start="40:21" pos:end="40:34"><decl pos:start="40:21" pos:end="40:33"><type pos:start="40:21" pos:end="40:23"><name pos:start="40:21" pos:end="40:23">int</name></type> <name pos:start="40:25" pos:end="40:25">j</name> <init pos:start="40:27" pos:end="40:33">= <expr pos:start="40:29" pos:end="40:33"><name pos:start="40:29" pos:end="40:29">i</name> <operator pos:start="40:31" pos:end="40:31">+</operator> <literal type="number" pos:start="40:33" pos:end="40:33">1</literal></expr></init></decl>;</init> <condition pos:start="40:36" pos:end="40:45"><expr pos:start="40:36" pos:end="40:44"><name pos:start="40:36" pos:end="40:36">j</name> <operator pos:start="40:38" pos:end="40:38">&lt;</operator> <name pos:start="40:40" pos:end="40:40">i</name> <operator pos:start="40:42" pos:end="40:42">+</operator> <literal type="number" pos:start="40:44" pos:end="40:44">8</literal></expr>;</condition> <incr pos:start="40:47" pos:end="40:49"><expr pos:start="40:47" pos:end="40:49"><operator pos:start="40:47" pos:end="40:48">++</operator><name pos:start="40:49" pos:end="40:49">j</name></expr></incr>)</control><block type="pseudo" pos:start="40:52" pos:end="40:82"><block_content pos:start="40:52" pos:end="40:82"> <expr_stmt pos:start="40:52" pos:end="40:82"><expr pos:start="40:52" pos:end="40:81"><name pos:start="40:52" pos:end="40:55">tmp1</name> <operator pos:start="40:57" pos:end="40:57">=</operator> <name pos:start="40:59" pos:end="40:62">tmp1</name> <operator pos:start="40:64" pos:end="40:64">*</operator> <literal type="number" pos:start="40:66" pos:end="40:68">2</literal> <operator pos:start="40:68" pos:end="40:68">+</operator> <operator pos:start="40:70" pos:end="40:70">(</operator><name pos:start="40:71" pos:end="40:74"><name pos:start="40:71" pos:end="40:71">s</name><index pos:start="40:72" pos:end="40:74">[<expr pos:start="40:73" pos:end="40:73"><name pos:start="40:73" pos:end="40:73">j</name></expr>]</index></name> <operator pos:start="40:76" pos:end="40:76">-</operator> <literal type="char" pos:start="40:78" pos:end="40:80">'0'</literal><operator pos:start="40:81" pos:end="40:81">)</operator></expr>;</expr_stmt></block_content></block></for>
                <expr_stmt pos:start="41:17" pos:end="41:23"><expr pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:20">+=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">8</literal></expr>;</expr_stmt>
                <for pos:start="42:17" pos:end="42:82">for<control pos:start="42:20" pos:end="42:50">(<init pos:start="42:21" pos:end="42:34"><decl pos:start="42:21" pos:end="42:33"><type pos:start="42:21" pos:end="42:23"><name pos:start="42:21" pos:end="42:23">int</name></type> <name pos:start="42:25" pos:end="42:25">j</name> <init pos:start="42:27" pos:end="42:33">= <expr pos:start="42:29" pos:end="42:33"><name pos:start="42:29" pos:end="42:29">i</name> <operator pos:start="42:31" pos:end="42:31">+</operator> <literal type="number" pos:start="42:33" pos:end="42:33">1</literal></expr></init></decl>;</init> <condition pos:start="42:36" pos:end="42:45"><expr pos:start="42:36" pos:end="42:44"><name pos:start="42:36" pos:end="42:36">j</name> <operator pos:start="42:38" pos:end="42:38">&lt;</operator> <name pos:start="42:40" pos:end="42:40">i</name> <operator pos:start="42:42" pos:end="42:42">+</operator> <literal type="number" pos:start="42:44" pos:end="42:44">8</literal></expr>;</condition> <incr pos:start="42:47" pos:end="42:49"><expr pos:start="42:47" pos:end="42:49"><operator pos:start="42:47" pos:end="42:48">++</operator><name pos:start="42:49" pos:end="42:49">j</name></expr></incr>)</control><block type="pseudo" pos:start="42:52" pos:end="42:82"><block_content pos:start="42:52" pos:end="42:82"> <expr_stmt pos:start="42:52" pos:end="42:82"><expr pos:start="42:52" pos:end="42:81"><name pos:start="42:52" pos:end="42:55">tmp2</name> <operator pos:start="42:57" pos:end="42:57">=</operator> <name pos:start="42:59" pos:end="42:62">tmp2</name> <operator pos:start="42:64" pos:end="42:64">*</operator> <literal type="number" pos:start="42:66" pos:end="42:68">2</literal> <operator pos:start="42:68" pos:end="42:68">+</operator> <operator pos:start="42:70" pos:end="42:70">(</operator><name pos:start="42:71" pos:end="42:74"><name pos:start="42:71" pos:end="42:71">s</name><index pos:start="42:72" pos:end="42:74">[<expr pos:start="42:73" pos:end="42:73"><name pos:start="42:73" pos:end="42:73">j</name></expr>]</index></name> <operator pos:start="42:76" pos:end="42:76">-</operator> <literal type="char" pos:start="42:78" pos:end="42:80">'0'</literal><operator pos:start="42:81" pos:end="42:81">)</operator></expr>;</expr_stmt></block_content></block></for>
                <expr_stmt pos:start="43:17" pos:end="43:56"><expr pos:start="43:17" pos:end="43:55"><call pos:start="43:17" pos:end="43:55"><name pos:start="43:17" pos:end="43:22">printf</name><argument_list pos:start="43:23" pos:end="43:55">(<argument pos:start="43:24" pos:end="43:27"><expr pos:start="43:24" pos:end="43:27"><literal type="string" pos:start="43:24" pos:end="43:27">"%d"</literal></expr></argument>, <argument pos:start="43:30" pos:end="43:54"><expr pos:start="43:30" pos:end="43:54"><operator pos:start="43:30" pos:end="43:30">(</operator><name pos:start="43:31" pos:end="43:34">tmp1</name> <operator pos:start="43:36" pos:end="43:37">&gt;&gt;</operator> <literal type="number" pos:start="43:39" pos:end="43:39">1</literal><operator pos:start="43:40" pos:end="43:40">)</operator> <operator pos:start="43:42" pos:end="43:42">+</operator> <operator pos:start="43:44" pos:end="43:44">(</operator><name pos:start="43:45" pos:end="43:48">tmp2</name> <operator pos:start="43:50" pos:end="43:51">&gt;&gt;</operator> <literal type="number" pos:start="43:53" pos:end="43:53">1</literal><operator pos:start="43:54" pos:end="43:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></else></if_stmt>
    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
