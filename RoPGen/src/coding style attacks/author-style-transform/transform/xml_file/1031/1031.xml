<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1031/1031.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:12"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:7"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:7">m</name></decl>,<decl pos:start="3:9" pos:end="3:11"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:9" pos:end="3:11">cnt</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:20"><decl pos:start="4:1" pos:end="4:19"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">char</name></type> <name pos:start="4:6" pos:end="4:19"><name pos:start="4:6" pos:end="4:9">maze</name><index pos:start="4:10" pos:end="4:14">[<expr pos:start="4:11" pos:end="4:13"><literal type="number" pos:start="4:11" pos:end="4:13">105</literal></expr>]</index><index pos:start="4:15" pos:end="4:19">[<expr pos:start="4:16" pos:end="4:18"><literal type="number" pos:start="4:16" pos:end="4:18">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:19"><decl pos:start="5:1" pos:end="5:18"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:18"><name pos:start="5:6" pos:end="5:8">vis</name><index pos:start="5:9" pos:end="5:13">[<expr pos:start="5:10" pos:end="5:12"><literal type="number" pos:start="5:10" pos:end="5:12">105</literal></expr>]</index><index pos:start="5:14" pos:end="5:18">[<expr pos:start="5:15" pos:end="5:17"><literal type="number" pos:start="5:15" pos:end="5:17">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:42"><decl pos:start="6:1" pos:end="6:41"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:13"><name pos:start="6:5" pos:end="6:7">dir</name><index pos:start="6:8" pos:end="6:10">[<expr pos:start="6:9" pos:end="6:9"><literal type="number" pos:start="6:9" pos:end="6:9">4</literal></expr>]</index><index pos:start="6:11" pos:end="6:13">[<expr pos:start="6:12" pos:end="6:12"><literal type="number" pos:start="6:12" pos:end="6:12">2</literal></expr>]</index></name><init pos:start="6:14" pos:end="6:41">=<expr pos:start="6:15" pos:end="6:41"><block pos:start="6:15" pos:end="6:41">{<expr pos:start="6:16" pos:end="6:20"><block pos:start="6:16" pos:end="6:20">{<expr pos:start="6:17" pos:end="6:17"><literal type="number" pos:start="6:17" pos:end="6:17">1</literal></expr>,<expr pos:start="6:19" pos:end="6:19"><literal type="number" pos:start="6:19" pos:end="6:19">0</literal></expr>}</block></expr>,<expr pos:start="6:22" pos:end="6:27"><block pos:start="6:22" pos:end="6:27">{<expr pos:start="6:23" pos:end="6:24"><operator pos:start="6:23" pos:end="6:23">-</operator><literal type="number" pos:start="6:24" pos:end="6:24">1</literal></expr>,<expr pos:start="6:26" pos:end="6:26"><literal type="number" pos:start="6:26" pos:end="6:26">0</literal></expr>}</block></expr>,<expr pos:start="6:29" pos:end="6:33"><block pos:start="6:29" pos:end="6:33">{<expr pos:start="6:30" pos:end="6:30"><literal type="number" pos:start="6:30" pos:end="6:30">0</literal></expr>,<expr pos:start="6:32" pos:end="6:32"><literal type="number" pos:start="6:32" pos:end="6:32">1</literal></expr>}</block></expr>,<expr pos:start="6:35" pos:end="6:40"><block pos:start="6:35" pos:end="6:40">{<expr pos:start="6:36" pos:end="6:36"><literal type="number" pos:start="6:36" pos:end="6:36">0</literal></expr>,<expr pos:start="6:38" pos:end="6:39"><operator pos:start="6:38" pos:end="6:38">-</operator><literal type="number" pos:start="6:39" pos:end="6:39">1</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="9:1"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">bool</name></type> <name pos:start="7:6" pos:end="7:7">in</name><parameter_list pos:start="7:8" pos:end="7:20">(<parameter pos:start="7:9" pos:end="7:13"><decl pos:start="7:9" pos:end="7:13"><type pos:start="7:9" pos:end="7:13"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">x</name></decl></parameter>,<parameter pos:start="7:15" pos:end="7:19"><decl pos:start="7:15" pos:end="7:19"><type pos:start="7:15" pos:end="7:19"><name pos:start="7:15" pos:end="7:17">int</name></type> <name pos:start="7:19" pos:end="7:19">y</name></decl></parameter>)</parameter_list><block pos:start="7:21" pos:end="9:1">{<block_content pos:start="8:5" pos:end="8:34">
    <return pos:start="8:5" pos:end="8:34">return <expr pos:start="8:12" pos:end="8:33"><literal type="number" pos:start="8:12" pos:end="8:12">0</literal><operator pos:start="8:13" pos:end="8:14">&lt;=</operator><name pos:start="8:15" pos:end="8:15">x</name><operator pos:start="8:16" pos:end="8:17">&amp;&amp;</operator><name pos:start="8:18" pos:end="8:18">x</name><operator pos:start="8:19" pos:end="8:20">&lt;=</operator><name pos:start="8:21" pos:end="8:21">n</name><operator pos:start="8:22" pos:end="8:23">&amp;&amp;</operator><literal type="number" pos:start="8:24" pos:end="8:24">0</literal><operator pos:start="8:25" pos:end="8:26">&lt;=</operator><name pos:start="8:27" pos:end="8:27">y</name><operator pos:start="8:28" pos:end="8:29">&amp;&amp;</operator><name pos:start="8:30" pos:end="8:30">y</name><operator pos:start="8:31" pos:end="8:32">&lt;=</operator><name pos:start="8:33" pos:end="8:33">m</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="10:1" pos:end="17:1"><type pos:start="10:1" pos:end="10:4"><name pos:start="10:1" pos:end="10:4">void</name></type> <name pos:start="10:6" pos:end="10:8">dfs</name><parameter_list pos:start="10:9" pos:end="10:21">(<parameter pos:start="10:10" pos:end="10:14"><decl pos:start="10:10" pos:end="10:14"><type pos:start="10:10" pos:end="10:14"><name pos:start="10:10" pos:end="10:12">int</name></type> <name pos:start="10:14" pos:end="10:14">x</name></decl></parameter>,<parameter pos:start="10:16" pos:end="10:20"><decl pos:start="10:16" pos:end="10:20"><type pos:start="10:16" pos:end="10:20"><name pos:start="10:16" pos:end="10:18">int</name></type> <name pos:start="10:20" pos:end="10:20">y</name></decl></parameter>)</parameter_list><block pos:start="10:22" pos:end="17:1">{<block_content pos:start="11:5" pos:end="16:5">
    <expr_stmt pos:start="11:5" pos:end="11:16"><expr pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:7">vis</name><index pos:start="11:8" pos:end="11:10">[<expr pos:start="11:9" pos:end="11:9"><name pos:start="11:9" pos:end="11:9">x</name></expr>]</index><index pos:start="11:11" pos:end="11:13">[<expr pos:start="11:12" pos:end="11:12"><name pos:start="11:12" pos:end="11:12">y</name></expr>]</index></name><operator pos:start="11:14" pos:end="11:14">=</operator><literal type="number" pos:start="11:15" pos:end="11:15">1</literal></expr>;</expr_stmt>
    <for pos:start="12:5" pos:end="16:5">for<control pos:start="12:8" pos:end="12:24">(<init pos:start="12:9" pos:end="12:16"><decl pos:start="12:9" pos:end="12:15"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">i</name><init pos:start="12:14" pos:end="12:15">=<expr pos:start="12:15" pos:end="12:15"><literal type="number" pos:start="12:15" pos:end="12:15">0</literal></expr></init></decl>;</init><condition pos:start="12:17" pos:end="12:20"><expr pos:start="12:17" pos:end="12:19"><name pos:start="12:17" pos:end="12:17">i</name><operator pos:start="12:18" pos:end="12:18">&lt;</operator><literal type="number" pos:start="12:19" pos:end="12:19">4</literal></expr>;</condition><incr pos:start="12:21" pos:end="12:23"><expr pos:start="12:21" pos:end="12:23"><name pos:start="12:21" pos:end="12:21">i</name><operator pos:start="12:22" pos:end="12:23">++</operator></expr></incr>)</control><block pos:start="12:25" pos:end="16:5">{<block_content pos:start="13:9" pos:end="15:65">
        <decl_stmt pos:start="13:9" pos:end="13:27"><decl pos:start="13:9" pos:end="13:26"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:14">tx</name><init pos:start="13:15" pos:end="13:26">=<expr pos:start="13:16" pos:end="13:26"><name pos:start="13:16" pos:end="13:16">x</name><operator pos:start="13:17" pos:end="13:17">+</operator><name pos:start="13:18" pos:end="13:26"><name pos:start="13:18" pos:end="13:20">dir</name><index pos:start="13:21" pos:end="13:23">[<expr pos:start="13:22" pos:end="13:22"><name pos:start="13:22" pos:end="13:22">i</name></expr>]</index><index pos:start="13:24" pos:end="13:26">[<expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="14:9" pos:end="14:27"><decl pos:start="14:9" pos:end="14:26"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:14">ty</name><init pos:start="14:15" pos:end="14:26">=<expr pos:start="14:16" pos:end="14:26"><name pos:start="14:16" pos:end="14:16">y</name><operator pos:start="14:17" pos:end="14:17">+</operator><name pos:start="14:18" pos:end="14:26"><name pos:start="14:18" pos:end="14:20">dir</name><index pos:start="14:21" pos:end="14:23">[<expr pos:start="14:22" pos:end="14:22"><name pos:start="14:22" pos:end="14:22">i</name></expr>]</index><index pos:start="14:24" pos:end="14:26">[<expr pos:start="14:25" pos:end="14:25"><literal type="number" pos:start="14:25" pos:end="14:25">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="15:9" pos:end="15:65"><if pos:start="15:9" pos:end="15:65">if<condition pos:start="15:11" pos:end="15:54">(<expr pos:start="15:12" pos:end="15:53"><call pos:start="15:12" pos:end="15:20"><name pos:start="15:12" pos:end="15:13">in</name><argument_list pos:start="15:14" pos:end="15:20">(<argument pos:start="15:15" pos:end="15:16"><expr pos:start="15:15" pos:end="15:16"><name pos:start="15:15" pos:end="15:16">tx</name></expr></argument>,<argument pos:start="15:18" pos:end="15:19"><expr pos:start="15:18" pos:end="15:19"><name pos:start="15:18" pos:end="15:19">ty</name></expr></argument>)</argument_list></call><operator pos:start="15:21" pos:end="15:22">&amp;&amp;</operator><name pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:26">maze</name><index pos:start="15:27" pos:end="15:30">[<expr pos:start="15:28" pos:end="15:29"><name pos:start="15:28" pos:end="15:29">tx</name></expr>]</index><index pos:start="15:31" pos:end="15:34">[<expr pos:start="15:32" pos:end="15:33"><name pos:start="15:32" pos:end="15:33">ty</name></expr>]</index></name><operator pos:start="15:35" pos:end="15:36">==</operator><literal type="char" pos:start="15:37" pos:end="15:39">'#'</literal><operator pos:start="15:40" pos:end="15:41">&amp;&amp;</operator><operator pos:start="15:42" pos:end="15:42">!</operator><name pos:start="15:43" pos:end="15:53"><name pos:start="15:43" pos:end="15:45">vis</name><index pos:start="15:46" pos:end="15:49">[<expr pos:start="15:47" pos:end="15:48"><name pos:start="15:47" pos:end="15:48">tx</name></expr>]</index><index pos:start="15:50" pos:end="15:53">[<expr pos:start="15:51" pos:end="15:52"><name pos:start="15:51" pos:end="15:52">ty</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="15:55" pos:end="15:65"><block_content pos:start="15:55" pos:end="15:65"><expr_stmt pos:start="15:55" pos:end="15:65"><expr pos:start="15:55" pos:end="15:64"><call pos:start="15:55" pos:end="15:64"><name pos:start="15:55" pos:end="15:57">dfs</name><argument_list pos:start="15:58" pos:end="15:64">(<argument pos:start="15:59" pos:end="15:60"><expr pos:start="15:59" pos:end="15:60"><name pos:start="15:59" pos:end="15:60">tx</name></expr></argument>,<argument pos:start="15:62" pos:end="15:63"><expr pos:start="15:62" pos:end="15:63"><name pos:start="15:62" pos:end="15:63">ty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="18:1" pos:end="27:1"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:8">main</name><parameter_list pos:start="18:9" pos:end="18:10">()</parameter_list><block pos:start="18:11" pos:end="27:1">{<block_content pos:start="19:5" pos:end="26:13">
    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><call pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:11">freopen</name><argument_list pos:start="19:12" pos:end="19:34">(<argument pos:start="19:13" pos:end="19:23"><expr pos:start="19:13" pos:end="19:23"><literal type="string" pos:start="19:13" pos:end="19:23">"hiking.in"</literal></expr></argument>,<argument pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><literal type="string" pos:start="19:25" pos:end="19:27">"r"</literal></expr></argument>,<argument pos:start="19:29" pos:end="19:33"><expr pos:start="19:29" pos:end="19:33"><name pos:start="19:29" pos:end="19:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt pos:start="19:36" pos:end="19:68"><expr pos:start="19:36" pos:end="19:67"><call pos:start="19:36" pos:end="19:67"><name pos:start="19:36" pos:end="19:42">freopen</name><argument_list pos:start="19:43" pos:end="19:67">(<argument pos:start="19:44" pos:end="19:55"><expr pos:start="19:44" pos:end="19:55"><literal type="string" pos:start="19:44" pos:end="19:55">"hiking.out"</literal></expr></argument>,<argument pos:start="19:57" pos:end="19:59"><expr pos:start="19:57" pos:end="19:59"><literal type="string" pos:start="19:57" pos:end="19:59">"w"</literal></expr></argument>,<argument pos:start="19:61" pos:end="19:66"><expr pos:start="19:61" pos:end="19:66"><name pos:start="19:61" pos:end="19:66">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:14"><expr pos:start="20:5" pos:end="20:13"><name pos:start="20:5" pos:end="20:7">cin</name><operator pos:start="20:8" pos:end="20:9">&gt;&gt;</operator><name pos:start="20:10" pos:end="20:10">n</name><operator pos:start="20:11" pos:end="20:12">&gt;&gt;</operator><name pos:start="20:13" pos:end="20:13">m</name></expr>;</expr_stmt>
    <for pos:start="21:5" pos:end="24:5">for<control pos:start="21:8" pos:end="21:24">(<init pos:start="21:9" pos:end="21:16"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">i</name><init pos:start="21:14" pos:end="21:15">=<expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr></init></decl>;</init><condition pos:start="21:17" pos:end="21:20"><expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:17">i</name><operator pos:start="21:18" pos:end="21:18">&lt;</operator><name pos:start="21:19" pos:end="21:19">n</name></expr>;</condition><incr pos:start="21:21" pos:end="21:23"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:21">i</name><operator pos:start="21:22" pos:end="21:23">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:25" pos:end="24:5"><block_content pos:start="21:25" pos:end="24:5"><for pos:start="21:25" pos:end="24:5">for<control pos:start="21:28" pos:end="21:44">(<init pos:start="21:29" pos:end="21:36"><decl pos:start="21:29" pos:end="21:35"><type pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:31">int</name></type> <name pos:start="21:33" pos:end="21:33">j</name><init pos:start="21:34" pos:end="21:35">=<expr pos:start="21:35" pos:end="21:35"><literal type="number" pos:start="21:35" pos:end="21:35">0</literal></expr></init></decl>;</init><condition pos:start="21:37" pos:end="21:40"><expr pos:start="21:37" pos:end="21:39"><name pos:start="21:37" pos:end="21:37">j</name><operator pos:start="21:38" pos:end="21:38">&lt;</operator><name pos:start="21:39" pos:end="21:39">m</name></expr>;</condition><incr pos:start="21:41" pos:end="21:43"><expr pos:start="21:41" pos:end="21:43"><name pos:start="21:41" pos:end="21:41">j</name><operator pos:start="21:42" pos:end="21:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:45" pos:end="24:5"><block_content pos:start="21:45" pos:end="24:5"><if_stmt pos:start="21:45" pos:end="24:5"><if pos:start="21:45" pos:end="24:5">if<condition pos:start="21:47" pos:end="21:75">(<expr pos:start="21:48" pos:end="21:74"><name pos:start="21:48" pos:end="21:57"><name pos:start="21:48" pos:end="21:51">maze</name><index pos:start="21:52" pos:end="21:54">[<expr pos:start="21:53" pos:end="21:53"><name pos:start="21:53" pos:end="21:53">i</name></expr>]</index><index pos:start="21:55" pos:end="21:57">[<expr pos:start="21:56" pos:end="21:56"><name pos:start="21:56" pos:end="21:56">j</name></expr>]</index></name><operator pos:start="21:58" pos:end="21:59">==</operator><literal type="char" pos:start="21:60" pos:end="21:62">'#'</literal><operator pos:start="21:63" pos:end="21:64">&amp;&amp;</operator><operator pos:start="21:65" pos:end="21:65">!</operator><name pos:start="21:66" pos:end="21:74"><name pos:start="21:66" pos:end="21:68">vis</name><index pos:start="21:69" pos:end="21:71">[<expr pos:start="21:70" pos:end="21:70"><name pos:start="21:70" pos:end="21:70">i</name></expr>]</index><index pos:start="21:72" pos:end="21:74">[<expr pos:start="21:73" pos:end="21:73"><name pos:start="21:73" pos:end="21:73">j</name></expr>]</index></name></expr>)</condition><block pos:start="21:76" pos:end="24:5">{<block_content pos:start="23:9" pos:end="23:23">
        
        <expr_stmt pos:start="23:9" pos:end="23:17"><expr pos:start="23:9" pos:end="23:16"><call pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:11">dfs</name><argument_list pos:start="23:12" pos:end="23:16">(<argument pos:start="23:13" pos:end="23:13"><expr pos:start="23:13" pos:end="23:13"><name pos:start="23:13" pos:end="23:13">i</name></expr></argument>,<argument pos:start="23:15" pos:end="23:15"><expr pos:start="23:15" pos:end="23:15"><name pos:start="23:15" pos:end="23:15">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt pos:start="23:18" pos:end="23:23"><expr pos:start="23:18" pos:end="23:22"><name pos:start="23:18" pos:end="23:20">cnt</name><operator pos:start="23:21" pos:end="23:22">++</operator></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt></block_content></block></for></block_content></block></for>
    <expr_stmt pos:start="25:5" pos:end="25:14"><expr pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:8">cout</name><operator pos:start="25:9" pos:end="25:10">&lt;&lt;</operator><name pos:start="25:11" pos:end="25:13">cnt</name></expr>;</expr_stmt>
    <return pos:start="26:5" pos:end="26:13">return <expr pos:start="26:12" pos:end="26:12"><literal type="number" pos:start="26:12" pos:end="26:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
