<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1207/1207.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="19:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="19:1">{<block_content pos:start="5:5" pos:end="18:13">
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:12">a</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:16"><decl pos:start="6:5" pos:end="6:15"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">min</name> <init pos:start="6:13" pos:end="6:15">= <expr pos:start="6:15" pos:end="6:15"><literal type="number" pos:start="6:15" pos:end="6:15">0</literal></expr></init></decl>;</decl_stmt> 
    <expr_stmt pos:start="7:5" pos:end="7:20"><expr pos:start="7:5" pos:end="7:19"><call pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:11">getline</name><argument_list pos:start="7:12" pos:end="7:19">(<argument pos:start="7:13" pos:end="7:15"><expr pos:start="7:13" pos:end="7:15"><name pos:start="7:13" pos:end="7:15">cin</name></expr></argument>, <argument pos:start="7:18" pos:end="7:18"><expr pos:start="7:18" pos:end="7:18"><name pos:start="7:18" pos:end="7:18">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while pos:start="8:5" pos:end="17:5">while <condition pos:start="8:11" pos:end="8:25">(<expr pos:start="8:12" pos:end="8:24"><call pos:start="8:12" pos:end="8:19"><name pos:start="8:12" pos:end="8:17"><name pos:start="8:12" pos:end="8:12">a</name><operator pos:start="8:13" pos:end="8:13">.</operator><name pos:start="8:14" pos:end="8:17">size</name></name><argument_list pos:start="8:18" pos:end="8:19">()</argument_list></call> <operator pos:start="8:21" pos:end="8:22">!=</operator> <literal type="number" pos:start="8:24" pos:end="8:24">1</literal></expr>)</condition> <block pos:start="8:27" pos:end="17:5">{<block_content pos:start="9:9" pos:end="16:9">
        <decl_stmt pos:start="9:9" pos:end="9:14"><decl pos:start="9:9" pos:end="9:13"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">k</name></decl>;</decl_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:24"><expr pos:start="10:9" pos:end="10:23"><name pos:start="10:9" pos:end="10:9">k</name> <operator pos:start="10:11" pos:end="10:11">=</operator> <call pos:start="10:13" pos:end="10:23"><name pos:start="10:13" pos:end="10:18"><name pos:start="10:13" pos:end="10:13">a</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:18">find</name></name><argument_list pos:start="10:19" pos:end="10:23">(<argument pos:start="10:20" pos:end="10:22"><expr pos:start="10:20" pos:end="10:22"><literal type="char" pos:start="10:20" pos:end="10:22">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="11:9" pos:end="11:34"><decl pos:start="11:9" pos:end="11:33"><type pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:14">string</name></type> <name pos:start="11:16" pos:end="11:16">b</name> <init pos:start="11:18" pos:end="11:33">= <expr pos:start="11:20" pos:end="11:33"><call pos:start="11:20" pos:end="11:33"><name pos:start="11:20" pos:end="11:27"><name pos:start="11:20" pos:end="11:20">a</name><operator pos:start="11:21" pos:end="11:21">.</operator><name pos:start="11:22" pos:end="11:27">substr</name></name><argument_list pos:start="11:28" pos:end="11:33">(<argument pos:start="11:29" pos:end="11:29"><expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">0</literal></expr></argument>, <argument pos:start="11:32" pos:end="11:32"><expr pos:start="11:32" pos:end="11:32"><name pos:start="11:32" pos:end="11:32">k</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:32"><expr pos:start="12:9" pos:end="12:31"><call pos:start="12:9" pos:end="12:31"><name pos:start="12:9" pos:end="12:17"><name pos:start="12:9" pos:end="12:9">a</name><operator pos:start="12:10" pos:end="12:10">.</operator><name pos:start="12:11" pos:end="12:17">replace</name></name><argument_list pos:start="12:18" pos:end="12:31">(<argument pos:start="12:19" pos:end="12:19"><expr pos:start="12:19" pos:end="12:19"><literal type="number" pos:start="12:19" pos:end="12:19">0</literal></expr></argument>, <argument pos:start="12:22" pos:end="12:26"><expr pos:start="12:22" pos:end="12:26"><name pos:start="12:22" pos:end="12:22">k</name> <operator pos:start="12:24" pos:end="12:24">-</operator> <literal type="number" pos:start="12:26" pos:end="12:26">1</literal></expr></argument>, <argument pos:start="12:29" pos:end="12:30"><expr pos:start="12:29" pos:end="12:30"><literal type="string" pos:start="12:29" pos:end="12:30">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="13:9" pos:end="16:9"><if pos:start="13:9" pos:end="16:9">if <condition pos:start="13:12" pos:end="13:28">(<expr pos:start="13:13" pos:end="13:27"><call pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:13">b</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:18">size</name></name><argument_list pos:start="13:19" pos:end="13:20">()</argument_list></call> <operator pos:start="13:22" pos:end="13:23">&gt;=</operator> <name pos:start="13:25" pos:end="13:27">min</name></expr>)</condition> <block pos:start="13:30" pos:end="16:9">{<block_content pos:start="14:13" pos:end="15:24">
            <expr_stmt pos:start="14:13" pos:end="14:27"><expr pos:start="14:13" pos:end="14:26"><name pos:start="14:13" pos:end="14:15">min</name> <operator pos:start="14:17" pos:end="14:17">=</operator> <call pos:start="14:19" pos:end="14:26"><name pos:start="14:19" pos:end="14:24"><name pos:start="14:19" pos:end="14:19">b</name><operator pos:start="14:20" pos:end="14:20">.</operator><name pos:start="14:21" pos:end="14:24">size</name></name><argument_list pos:start="14:25" pos:end="14:26">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:24"><expr pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:16">cout</name> <operator pos:start="15:18" pos:end="15:19">&lt;&lt;</operator> <name pos:start="15:21" pos:end="15:23">min</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></while>
    <return pos:start="18:5" pos:end="18:13">return <expr pos:start="18:12" pos:end="18:12"><literal type="number" pos:start="18:12" pos:end="18:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
