<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/847/847.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:17">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:16">&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:19">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:26"><decl pos:start="5:1" pos:end="5:13"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:5">a</name><index pos:start="5:6" pos:end="5:9">[<expr pos:start="5:7" pos:end="5:8"><literal type="number" pos:start="5:7" pos:end="5:8">10</literal></expr>]</index><index pos:start="5:10" pos:end="5:13">[<expr pos:start="5:11" pos:end="5:12"><literal type="number" pos:start="5:11" pos:end="5:12">10</literal></expr>]</index></name></decl>,<decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:15" pos:end="5:19"><name pos:start="5:15" pos:end="5:15">b</name><index pos:start="5:16" pos:end="5:19">[<expr pos:start="5:17" pos:end="5:18"><literal type="number" pos:start="5:17" pos:end="5:18">10</literal></expr>]</index></name></decl>,<decl pos:start="5:21" pos:end="5:25"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:21" pos:end="5:25"><name pos:start="5:21" pos:end="5:21">w</name><index pos:start="5:22" pos:end="5:25">[<expr pos:start="5:23" pos:end="5:24"><literal type="number" pos:start="5:23" pos:end="5:24">10</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:10"><decl pos:start="6:1" pos:end="6:5"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:5">n</name></decl>,<decl pos:start="6:7" pos:end="6:9"><type ref="prev" pos:start="6:1" pos:end="6:3"/><name pos:start="6:7" pos:end="6:9">num</name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="24:1"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">void</name></type> <name pos:start="7:6" pos:end="7:10">check</name><parameter_list pos:start="7:11" pos:end="7:19">(<parameter pos:start="7:12" pos:end="7:18"><decl pos:start="7:12" pos:end="7:18"><type pos:start="7:12" pos:end="7:14"><name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:18">pos</name></decl></parameter>)</parameter_list> <block pos:start="7:21" pos:end="24:1">{<block_content pos:start="8:5" pos:end="23:5">
    <for pos:start="8:5" pos:end="13:5">for<control pos:start="8:8" pos:end="8:36">(<init pos:start="8:9" pos:end="8:18"><decl pos:start="8:9" pos:end="8:17"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:13">i</name> <init pos:start="8:15" pos:end="8:17">= <expr pos:start="8:17" pos:end="8:17"><literal type="number" pos:start="8:17" pos:end="8:17">0</literal></expr></init></decl>;</init> <condition pos:start="8:20" pos:end="8:31"><expr pos:start="8:20" pos:end="8:30"><name pos:start="8:20" pos:end="8:20">i</name> <operator pos:start="8:22" pos:end="8:22">&lt;</operator> <name pos:start="8:24" pos:end="8:26">pos</name> <operator pos:start="8:28" pos:end="8:28">-</operator> <literal type="number" pos:start="8:30" pos:end="8:30">1</literal></expr>;</condition> <incr pos:start="8:33" pos:end="8:35"><expr pos:start="8:33" pos:end="8:35"><name pos:start="8:33" pos:end="8:33">i</name><operator pos:start="8:34" pos:end="8:35">++</operator></expr></incr>)</control><block pos:start="8:37" pos:end="13:5">{<block_content pos:start="9:9" pos:end="12:9">
        <decl_stmt pos:start="9:9" pos:end="9:34"><decl pos:start="9:9" pos:end="9:33"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">t</name> <init pos:start="9:15" pos:end="9:33">= <expr pos:start="9:17" pos:end="9:33"><name pos:start="9:17" pos:end="9:26"><name pos:start="9:17" pos:end="9:17">b</name><index pos:start="9:18" pos:end="9:26">[<expr pos:start="9:19" pos:end="9:25"><name pos:start="9:19" pos:end="9:21">pos</name> <operator pos:start="9:23" pos:end="9:23">-</operator> <literal type="number" pos:start="9:25" pos:end="9:25">1</literal></expr>]</index></name> <operator pos:start="9:28" pos:end="9:28">-</operator> <name pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:30">b</name><index pos:start="9:31" pos:end="9:33">[<expr pos:start="9:32" pos:end="9:32"><name pos:start="9:32" pos:end="9:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="10:9" pos:end="12:9"><if pos:start="10:9" pos:end="12:9">if<condition pos:start="10:11" pos:end="10:38">(<expr pos:start="10:12" pos:end="10:37"><name pos:start="10:12" pos:end="10:12">t</name> <operator pos:start="10:14" pos:end="10:15">==</operator> <literal type="number" pos:start="10:17" pos:end="10:17">0</literal> <operator pos:start="10:19" pos:end="10:20">||</operator> <name pos:start="10:22" pos:end="10:22">t</name> <operator pos:start="10:24" pos:end="10:25">==</operator> <name pos:start="10:27" pos:end="10:29">pos</name> <operator pos:start="10:31" pos:end="10:31">-</operator> <literal type="number" pos:start="10:33" pos:end="10:35">1</literal> <operator pos:start="10:35" pos:end="10:35">-</operator> <name pos:start="10:37" pos:end="10:37">i</name></expr>)</condition><block pos:start="10:39" pos:end="12:9">{<block_content pos:start="11:13" pos:end="11:19">
            <return pos:start="11:13" pos:end="11:19">return;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="14:5" pos:end="17:5"><if pos:start="14:5" pos:end="17:5">if <condition pos:start="14:8" pos:end="14:17">(<expr pos:start="14:9" pos:end="14:16"><name pos:start="14:9" pos:end="14:11">pos</name> <operator pos:start="14:13" pos:end="14:14">==</operator> <name pos:start="14:16" pos:end="14:16">n</name></expr>)</condition> <block pos:start="14:19" pos:end="17:5">{<block_content pos:start="15:9" pos:end="16:15">
        <expr_stmt pos:start="15:9" pos:end="15:14"><expr pos:start="15:9" pos:end="15:13"><name pos:start="15:9" pos:end="15:11">num</name><operator pos:start="15:12" pos:end="15:13">++</operator></expr>;</expr_stmt>
        <return pos:start="16:9" pos:end="16:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="18:5" pos:end="23:5">for<control pos:start="18:8" pos:end="18:30">(<init pos:start="18:9" pos:end="18:18"><decl pos:start="18:9" pos:end="18:17"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">i</name> <init pos:start="18:15" pos:end="18:17">= <expr pos:start="18:17" pos:end="18:17"><literal type="number" pos:start="18:17" pos:end="18:17">0</literal></expr></init></decl>;</init> <condition pos:start="18:20" pos:end="18:25"><expr pos:start="18:20" pos:end="18:24"><name pos:start="18:20" pos:end="18:20">i</name> <operator pos:start="18:22" pos:end="18:22">&lt;</operator> <name pos:start="18:24" pos:end="18:24">n</name></expr>;</condition> <incr pos:start="18:27" pos:end="18:29"><expr pos:start="18:27" pos:end="18:29"><name pos:start="18:27" pos:end="18:27">i</name><operator pos:start="18:28" pos:end="18:29">++</operator></expr></incr>)</control><block pos:start="18:31" pos:end="23:5">{<block_content pos:start="19:9" pos:end="22:9">
        <if_stmt pos:start="19:9" pos:end="22:9"><if pos:start="19:9" pos:end="22:9">if<condition pos:start="19:11" pos:end="19:36">(<expr pos:start="19:12" pos:end="19:35"><name pos:start="19:12" pos:end="19:12">i</name> <operator pos:start="19:14" pos:end="19:15">!=</operator> <name pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:17">w</name><index pos:start="19:18" pos:end="19:22">[<expr pos:start="19:19" pos:end="19:21"><name pos:start="19:19" pos:end="19:21">pos</name></expr>]</index></name> <operator pos:start="19:24" pos:end="19:25">&amp;&amp;</operator> <name pos:start="19:27" pos:end="19:35"><name pos:start="19:27" pos:end="19:27">a</name><index pos:start="19:28" pos:end="19:32">[<expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:31">pos</name></expr>]</index><index pos:start="19:33" pos:end="19:35">[<expr pos:start="19:34" pos:end="19:34"><name pos:start="19:34" pos:end="19:34">i</name></expr>]</index></name></expr>)</condition><block pos:start="19:37" pos:end="22:9">{<block_content pos:start="20:13" pos:end="21:27">
            <expr_stmt pos:start="20:13" pos:end="20:23"><expr pos:start="20:13" pos:end="20:22"><name pos:start="20:13" pos:end="20:18"><name pos:start="20:13" pos:end="20:13">b</name><index pos:start="20:14" pos:end="20:18">[<expr pos:start="20:15" pos:end="20:17"><name pos:start="20:15" pos:end="20:17">pos</name></expr>]</index></name> <operator pos:start="20:20" pos:end="20:20">=</operator> <name pos:start="20:22" pos:end="20:22">i</name></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:27"><expr pos:start="21:13" pos:end="21:26"><call pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:17">check</name><argument_list pos:start="21:18" pos:end="21:26">(<argument pos:start="21:19" pos:end="21:25"><expr pos:start="21:19" pos:end="21:25"><name pos:start="21:19" pos:end="21:21">pos</name> <operator pos:start="21:23" pos:end="21:23">+</operator> <literal type="number" pos:start="21:25" pos:end="21:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="25:1" pos:end="42:1"><type pos:start="25:1" pos:end="25:4"><name pos:start="25:1" pos:end="25:4">void</name></type> <name pos:start="25:6" pos:end="25:8">dfs</name><parameter_list pos:start="25:9" pos:end="25:17">(<parameter pos:start="25:10" pos:end="25:16"><decl pos:start="25:10" pos:end="25:16"><type pos:start="25:10" pos:end="25:12"><name pos:start="25:10" pos:end="25:12">int</name></type> <name pos:start="25:14" pos:end="25:16">pos</name></decl></parameter>)</parameter_list><block pos:start="25:18" pos:end="42:1">{<block_content pos:start="26:5" pos:end="41:5">
    <for pos:start="26:5" pos:end="31:5">for <control pos:start="26:9" pos:end="26:37">(<init pos:start="26:10" pos:end="26:19"><decl pos:start="26:10" pos:end="26:18"><type pos:start="26:10" pos:end="26:12"><name pos:start="26:10" pos:end="26:12">int</name></type> <name pos:start="26:14" pos:end="26:14">i</name> <init pos:start="26:16" pos:end="26:18">= <expr pos:start="26:18" pos:end="26:18"><literal type="number" pos:start="26:18" pos:end="26:18">0</literal></expr></init></decl>;</init> <condition pos:start="26:21" pos:end="26:32"><expr pos:start="26:21" pos:end="26:31"><name pos:start="26:21" pos:end="26:21">i</name> <operator pos:start="26:23" pos:end="26:23">&lt;</operator> <name pos:start="26:25" pos:end="26:27">pos</name> <operator pos:start="26:29" pos:end="26:29">-</operator> <literal type="number" pos:start="26:31" pos:end="26:31">1</literal></expr>;</condition> <incr pos:start="26:34" pos:end="26:36"><expr pos:start="26:34" pos:end="26:36"><name pos:start="26:34" pos:end="26:34">i</name><operator pos:start="26:35" pos:end="26:36">++</operator></expr></incr>)</control> <block pos:start="26:39" pos:end="31:5">{<block_content pos:start="27:9" pos:end="30:9">
        <decl_stmt pos:start="27:9" pos:end="27:34"><decl pos:start="27:9" pos:end="27:33"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">t</name> <init pos:start="27:15" pos:end="27:33">= <expr pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:26"><name pos:start="27:17" pos:end="27:17">w</name><index pos:start="27:18" pos:end="27:26">[<expr pos:start="27:19" pos:end="27:25"><name pos:start="27:19" pos:end="27:21">pos</name> <operator pos:start="27:23" pos:end="27:23">-</operator> <literal type="number" pos:start="27:25" pos:end="27:25">1</literal></expr>]</index></name> <operator pos:start="27:28" pos:end="27:28">-</operator> <name pos:start="27:30" pos:end="27:33"><name pos:start="27:30" pos:end="27:30">w</name><index pos:start="27:31" pos:end="27:33">[<expr pos:start="27:32" pos:end="27:32"><name pos:start="27:32" pos:end="27:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="28:9" pos:end="30:9"><if pos:start="28:9" pos:end="30:9">if <condition pos:start="28:12" pos:end="28:39">(<expr pos:start="28:13" pos:end="28:38"><call pos:start="28:13" pos:end="28:18"><name pos:start="28:13" pos:end="28:15">abs</name><argument_list pos:start="28:16" pos:end="28:18">(<argument pos:start="28:17" pos:end="28:17"><expr pos:start="28:17" pos:end="28:17"><name pos:start="28:17" pos:end="28:17">t</name></expr></argument>)</argument_list></call> <operator pos:start="28:20" pos:end="28:21">==</operator> <call pos:start="28:23" pos:end="28:38"><name pos:start="28:23" pos:end="28:25">abs</name><argument_list pos:start="28:26" pos:end="28:38">(<argument pos:start="28:27" pos:end="28:37"><expr pos:start="28:27" pos:end="28:37"><name pos:start="28:27" pos:end="28:29">pos</name> <operator pos:start="28:31" pos:end="28:31">-</operator> <literal type="number" pos:start="28:33" pos:end="28:35">1</literal> <operator pos:start="28:35" pos:end="28:35">-</operator> <name pos:start="28:37" pos:end="28:37">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="28:41" pos:end="30:9">{<block_content pos:start="29:13" pos:end="29:19">
            <return pos:start="29:13" pos:end="29:19">return;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="32:5" pos:end="35:5"><if pos:start="32:5" pos:end="35:5">if <condition pos:start="32:8" pos:end="32:17">(<expr pos:start="32:9" pos:end="32:16"><name pos:start="32:9" pos:end="32:11">pos</name> <operator pos:start="32:13" pos:end="32:14">==</operator> <name pos:start="32:16" pos:end="32:16">n</name></expr>)</condition> <block pos:start="32:19" pos:end="35:5">{<block_content pos:start="33:9" pos:end="34:15">
        <expr_stmt pos:start="33:9" pos:end="33:17"><expr pos:start="33:9" pos:end="33:16"><call pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:13">check</name><argument_list pos:start="33:14" pos:end="33:16">(<argument pos:start="33:15" pos:end="33:15"><expr pos:start="33:15" pos:end="33:15"><literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="34:9" pos:end="34:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="36:5" pos:end="41:5">for<control pos:start="36:8" pos:end="36:30">(<init pos:start="36:9" pos:end="36:18"><decl pos:start="36:9" pos:end="36:17"><type pos:start="36:9" pos:end="36:11"><name pos:start="36:9" pos:end="36:11">int</name></type> <name pos:start="36:13" pos:end="36:13">i</name> <init pos:start="36:15" pos:end="36:17">= <expr pos:start="36:17" pos:end="36:17"><literal type="number" pos:start="36:17" pos:end="36:17">0</literal></expr></init></decl>;</init> <condition pos:start="36:20" pos:end="36:25"><expr pos:start="36:20" pos:end="36:24"><name pos:start="36:20" pos:end="36:20">i</name> <operator pos:start="36:22" pos:end="36:22">&lt;</operator> <name pos:start="36:24" pos:end="36:24">n</name></expr>;</condition> <incr pos:start="36:27" pos:end="36:29"><expr pos:start="36:27" pos:end="36:29"><name pos:start="36:27" pos:end="36:27">i</name><operator pos:start="36:28" pos:end="36:29">++</operator></expr></incr>)</control><block pos:start="36:31" pos:end="41:5">{<block_content pos:start="37:9" pos:end="40:9">
        <if_stmt pos:start="37:9" pos:end="40:9"><if pos:start="37:9" pos:end="40:9">if<condition pos:start="37:11" pos:end="37:21">(<expr pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:12">a</name><index pos:start="37:13" pos:end="37:17">[<expr pos:start="37:14" pos:end="37:16"><name pos:start="37:14" pos:end="37:16">pos</name></expr>]</index><index pos:start="37:18" pos:end="37:20">[<expr pos:start="37:19" pos:end="37:19"><name pos:start="37:19" pos:end="37:19">i</name></expr>]</index></name></expr>)</condition><block pos:start="37:22" pos:end="40:9">{<block_content pos:start="38:13" pos:end="39:25">
            <expr_stmt pos:start="38:13" pos:end="38:23"><expr pos:start="38:13" pos:end="38:22"><name pos:start="38:13" pos:end="38:18"><name pos:start="38:13" pos:end="38:13">w</name><index pos:start="38:14" pos:end="38:18">[<expr pos:start="38:15" pos:end="38:17"><name pos:start="38:15" pos:end="38:17">pos</name></expr>]</index></name> <operator pos:start="38:20" pos:end="38:20">=</operator> <name pos:start="38:22" pos:end="38:22">i</name></expr>;</expr_stmt>
            <expr_stmt pos:start="39:13" pos:end="39:25"><expr pos:start="39:13" pos:end="39:24"><call pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:15">dfs</name><argument_list pos:start="39:16" pos:end="39:24">(<argument pos:start="39:17" pos:end="39:23"><expr pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:19">pos</name> <operator pos:start="39:21" pos:end="39:21">+</operator> <literal type="number" pos:start="39:23" pos:end="39:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="43:1" pos:end="56:1"><type pos:start="43:1" pos:end="43:3"><name pos:start="43:1" pos:end="43:3">int</name></type> <name pos:start="43:5" pos:end="43:8">main</name><parameter_list pos:start="43:9" pos:end="43:10">()</parameter_list> <block pos:start="43:12" pos:end="56:1">{<block_content pos:start="44:5" pos:end="55:13">
    <expr_stmt pos:start="44:5" pos:end="44:34"><expr pos:start="44:5" pos:end="44:33"><call pos:start="44:5" pos:end="44:33"><name pos:start="44:5" pos:end="44:11">freopen</name><argument_list pos:start="44:12" pos:end="44:33">(<argument pos:start="44:13" pos:end="44:22"><expr pos:start="44:13" pos:end="44:22"><literal type="string" pos:start="44:13" pos:end="44:22">"queen.in"</literal></expr></argument>,<argument pos:start="44:24" pos:end="44:26"><expr pos:start="44:24" pos:end="44:26"><literal type="string" pos:start="44:24" pos:end="44:26">"r"</literal></expr></argument>,<argument pos:start="44:28" pos:end="44:32"><expr pos:start="44:28" pos:end="44:32"><name pos:start="44:28" pos:end="44:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><call pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:11">freopen</name><argument_list pos:start="45:12" pos:end="45:35">(<argument pos:start="45:13" pos:end="45:23"><expr pos:start="45:13" pos:end="45:23"><literal type="string" pos:start="45:13" pos:end="45:23">"queen.out"</literal></expr></argument>,<argument pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><literal type="string" pos:start="45:25" pos:end="45:27">"w"</literal></expr></argument>,<argument pos:start="45:29" pos:end="45:34"><expr pos:start="45:29" pos:end="45:34"><name pos:start="45:29" pos:end="45:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="46:5" pos:end="46:13"><expr pos:start="46:5" pos:end="46:12"><name pos:start="46:5" pos:end="46:7">cin</name> <operator pos:start="46:9" pos:end="46:10">&gt;&gt;</operator> <name pos:start="46:12" pos:end="46:12">n</name></expr>;</expr_stmt>
    <for pos:start="47:5" pos:end="51:5">for <control pos:start="47:9" pos:end="47:31">(<init pos:start="47:10" pos:end="47:19"><decl pos:start="47:10" pos:end="47:18"><type pos:start="47:10" pos:end="47:12"><name pos:start="47:10" pos:end="47:12">int</name></type> <name pos:start="47:14" pos:end="47:14">i</name> <init pos:start="47:16" pos:end="47:18">= <expr pos:start="47:18" pos:end="47:18"><literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr></init></decl>;</init> <condition pos:start="47:21" pos:end="47:26"><expr pos:start="47:21" pos:end="47:25"><name pos:start="47:21" pos:end="47:21">i</name> <operator pos:start="47:23" pos:end="47:23">&lt;</operator> <name pos:start="47:25" pos:end="47:25">n</name></expr>;</condition> <incr pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:28">i</name><operator pos:start="47:29" pos:end="47:30">++</operator></expr></incr>)</control> <block pos:start="47:33" pos:end="51:5">{<block_content pos:start="48:9" pos:end="50:9">
        <for pos:start="48:9" pos:end="50:9">for <control pos:start="48:13" pos:end="48:35">(<init pos:start="48:14" pos:end="48:23"><decl pos:start="48:14" pos:end="48:22"><type pos:start="48:14" pos:end="48:16"><name pos:start="48:14" pos:end="48:16">int</name></type> <name pos:start="48:18" pos:end="48:18">j</name> <init pos:start="48:20" pos:end="48:22">= <expr pos:start="48:22" pos:end="48:22"><literal type="number" pos:start="48:22" pos:end="48:22">0</literal></expr></init></decl>;</init> <condition pos:start="48:25" pos:end="48:30"><expr pos:start="48:25" pos:end="48:29"><name pos:start="48:25" pos:end="48:25">j</name> <operator pos:start="48:27" pos:end="48:27">&lt;</operator> <name pos:start="48:29" pos:end="48:29">n</name></expr>;</condition> <incr pos:start="48:32" pos:end="48:34"><expr pos:start="48:32" pos:end="48:34"><name pos:start="48:32" pos:end="48:32">j</name><operator pos:start="48:33" pos:end="48:34">++</operator></expr></incr>)</control> <block pos:start="48:37" pos:end="50:9">{<block_content pos:start="49:13" pos:end="49:27">
            <expr_stmt pos:start="49:13" pos:end="49:27"><expr pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:15">cin</name> <operator pos:start="49:17" pos:end="49:18">&gt;&gt;</operator> <name pos:start="49:20" pos:end="49:26"><name pos:start="49:20" pos:end="49:20">a</name><index pos:start="49:21" pos:end="49:23">[<expr pos:start="49:22" pos:end="49:22"><name pos:start="49:22" pos:end="49:22">i</name></expr>]</index><index pos:start="49:24" pos:end="49:26">[<expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="52:5" pos:end="52:12"><expr pos:start="52:5" pos:end="52:11"><name pos:start="52:5" pos:end="52:7">num</name> <operator pos:start="52:9" pos:end="52:9">=</operator> <literal type="number" pos:start="52:11" pos:end="52:11">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="53:5" pos:end="53:11"><expr pos:start="53:5" pos:end="53:10"><call pos:start="53:5" pos:end="53:10"><name pos:start="53:5" pos:end="53:7">dfs</name><argument_list pos:start="53:8" pos:end="53:10">(<argument pos:start="53:9" pos:end="53:9"><expr pos:start="53:9" pos:end="53:9"><literal type="number" pos:start="53:9" pos:end="53:9">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="54:5" pos:end="54:24"><expr pos:start="54:5" pos:end="54:23"><name pos:start="54:5" pos:end="54:8">cout</name> <operator pos:start="54:10" pos:end="54:11">&lt;&lt;</operator> <name pos:start="54:13" pos:end="54:15">num</name> <operator pos:start="54:17" pos:end="54:18">&lt;&lt;</operator> <name pos:start="54:20" pos:end="54:23">endl</name></expr>;</expr_stmt>
    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
