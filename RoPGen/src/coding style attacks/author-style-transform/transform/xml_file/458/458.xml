<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/458/458.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:16">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:16">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:18">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:18">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="41:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:7">min</name><parameter_list pos:start="4:8" pos:end="4:9">()</parameter_list><block pos:start="4:10" pos:end="41:1">{<block_content pos:start="5:5" pos:end="40:13">
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:13"><expr pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:7">cin</name> <operator pos:start="6:9" pos:end="6:10">&gt;&gt;</operator> <name pos:start="6:12" pos:end="6:12">x</name></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:15"><expr pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:5">x</name> <operator pos:start="7:7" pos:end="7:7">=</operator> <name pos:start="7:9" pos:end="7:9">x</name> <operator pos:start="7:11" pos:end="7:11">*</operator> <literal type="number" pos:start="7:13" pos:end="7:14">60</literal></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:18"><decl pos:start="8:5" pos:end="8:17"><type pos:start="8:5" pos:end="8:15"><name pos:start="8:5" pos:end="8:15"><name pos:start="8:5" pos:end="8:10">vector</name><argument_list type="generic" pos:start="8:11" pos:end="8:15">&lt;<argument pos:start="8:12" pos:end="8:14"><expr pos:start="8:12" pos:end="8:14"><name pos:start="8:12" pos:end="8:14">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="8:17" pos:end="8:17">v</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">string</name></type> <name pos:start="9:12" pos:end="9:14">cvz</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:14"><decl pos:start="10:5" pos:end="10:13"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">i</name> <init pos:start="10:11" pos:end="10:13">= <expr pos:start="10:13" pos:end="10:13"><literal type="number" pos:start="10:13" pos:end="10:13">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">u</name> <init pos:start="11:11" pos:end="11:13">= <expr pos:start="11:13" pos:end="11:13"><literal type="number" pos:start="11:13" pos:end="11:13">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="12:5" pos:end="20:5">while<condition pos:start="12:10" pos:end="12:14">(<expr pos:start="12:11" pos:end="12:13"><name pos:start="12:11" pos:end="12:13">cvz</name></expr>)</condition><block pos:start="12:15" pos:end="20:5">{<block_content pos:start="13:9" pos:end="19:13">
        <if_stmt pos:start="13:9" pos:end="18:9"><if pos:start="13:9" pos:end="15:9">if<condition pos:start="13:11" pos:end="13:35">(<expr pos:start="13:12" pos:end="13:34"><name pos:start="13:12" pos:end="13:17"><name pos:start="13:12" pos:end="13:14">cvz</name><index pos:start="13:15" pos:end="13:17">[<expr pos:start="13:16" pos:end="13:16"><name pos:start="13:16" pos:end="13:16">u</name></expr>]</index></name><operator pos:start="13:18" pos:end="13:19">==</operator> <literal type="string" pos:start="13:21" pos:end="13:34">"tingtingting"</literal></expr>)</condition><block pos:start="13:36" pos:end="15:9">{<block_content pos:start="14:13" pos:end="14:21">
            <continue pos:start="14:13" pos:end="14:21">continue;</continue>
        </block_content>}</block></if>
        <else pos:start="16:9" pos:end="18:9">else<block pos:start="16:13" pos:end="18:9">{<block_content pos:start="17:9" pos:end="17:20">
        <expr_stmt pos:start="17:9" pos:end="17:20"><expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:11">cin</name> <operator pos:start="17:13" pos:end="17:14">&gt;&gt;</operator> <name pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:16">v</name><index pos:start="17:17" pos:end="17:19">[<expr pos:start="17:18" pos:end="17:18"><name pos:start="17:18" pos:end="17:18">u</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:13"><expr pos:start="19:9" pos:end="19:13"><name pos:start="19:9" pos:end="19:9">u</name><operator pos:start="19:10" pos:end="19:10">=</operator><name pos:start="19:11" pos:end="19:11">u</name><operator pos:start="19:12" pos:end="19:12">+</operator><literal type="number" pos:start="19:13" pos:end="19:13">1</literal></expr></expr_stmt>
    </block_content>}</block></while>
    <while pos:start="21:5" pos:end="38:5">while<condition pos:start="21:10" pos:end="21:16">(<expr pos:start="21:11" pos:end="21:15"><name pos:start="21:11" pos:end="21:11">x</name><operator pos:start="21:12" pos:end="21:13">&gt;=</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition><block pos:start="21:17" pos:end="38:5">{<block_content pos:start="22:9" pos:end="37:18">
        <if_stmt pos:start="22:9" pos:end="36:5"><if pos:start="22:9" pos:end="30:9">if<condition pos:start="22:11" pos:end="22:33">(<expr pos:start="22:12" pos:end="22:32"><name pos:start="22:12" pos:end="22:17"><name pos:start="22:12" pos:end="22:14">cvz</name><index pos:start="22:15" pos:end="22:17">[<expr pos:start="22:16" pos:end="22:16"><name pos:start="22:16" pos:end="22:16">i</name></expr>]</index></name> <operator pos:start="22:19" pos:end="22:19">=</operator> <literal type="string" pos:start="22:21" pos:end="22:32">"kaomianjin"</literal></expr>)</condition><block pos:start="22:34" pos:end="30:9">{<block_content pos:start="23:13" pos:end="29:13">
            <if_stmt pos:start="23:13" pos:end="29:13"><if pos:start="23:13" pos:end="26:13">if<condition pos:start="23:15" pos:end="23:40">(<expr pos:start="23:16" pos:end="23:39"><name pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:18">cvz</name><index pos:start="23:19" pos:end="23:23">[<expr pos:start="23:20" pos:end="23:22"><name pos:start="23:20" pos:end="23:20">i</name><operator pos:start="23:21" pos:end="23:21">+</operator><literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr>]</index></name><operator pos:start="23:24" pos:end="23:25">==</operator><literal type="string" pos:start="23:26" pos:end="23:39">"tingtingting"</literal></expr>)</condition><block pos:start="23:41" pos:end="26:13">{<block_content pos:start="24:17" pos:end="25:25">
                <expr_stmt pos:start="24:17" pos:end="24:34"><expr pos:start="24:17" pos:end="24:33"><name pos:start="24:17" pos:end="24:20">cout</name> <operator pos:start="24:22" pos:end="24:23">&lt;&lt;</operator> <literal type="string" pos:start="24:25" pos:end="24:33">"Hahaha."</literal></expr>;</expr_stmt>
                <return pos:start="25:17" pos:end="25:25">return <expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr>;</return>
            </block_content>}</block></if><else pos:start="26:14" pos:end="29:13">else<block pos:start="26:18" pos:end="29:13">{<block_content pos:start="27:17" pos:end="28:25">
                <expr_stmt pos:start="27:17" pos:end="27:43"><expr pos:start="27:17" pos:end="27:42"><name pos:start="27:17" pos:end="27:20">cout</name> <operator pos:start="27:22" pos:end="27:23">&lt;&lt;</operator> <literal type="string" pos:start="27:25" pos:end="27:42">"Congratulations!"</literal></expr>;</expr_stmt>
                <return pos:start="28:17" pos:end="28:25">return <expr pos:start="28:24" pos:end="28:24"><literal type="number" pos:start="28:24" pos:end="28:24">0</literal></expr>;</return>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if><else pos:start="30:10" pos:end="36:5">else<block pos:start="30:14" pos:end="36:5">{<block_content pos:start="31:13" pos:end="35:13">
            <if_stmt pos:start="31:13" pos:end="35:13"><if pos:start="31:13" pos:end="33:13">if<condition pos:start="31:15" pos:end="31:41">(<expr pos:start="31:16" pos:end="31:40"><name pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:18">cvz</name><index pos:start="31:19" pos:end="31:23">[<expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:20">i</name><operator pos:start="31:21" pos:end="31:21">+</operator><literal type="number" pos:start="31:22" pos:end="31:22">1</literal></expr>]</index></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <literal type="string" pos:start="31:27" pos:end="31:40">"tingtingting"</literal></expr>)</condition><block pos:start="31:42" pos:end="33:13">{<block_content pos:start="32:17" pos:end="32:25">
                <continue pos:start="32:17" pos:end="32:25">continue;</continue>
            </block_content>}</block></if><else pos:start="33:14" pos:end="35:13">else<block pos:start="33:18" pos:end="35:13">{<block_content pos:start="34:17" pos:end="34:29">
                <expr_stmt pos:start="34:17" pos:end="34:29"><expr pos:start="34:17" pos:end="34:28"><name pos:start="34:17" pos:end="34:17">x</name> <operator pos:start="34:19" pos:end="34:19">=</operator> <name pos:start="34:21" pos:end="34:21">x</name> <operator pos:start="34:23" pos:end="34:23">-</operator> <name pos:start="34:25" pos:end="34:28"><name pos:start="34:25" pos:end="34:25">v</name><index pos:start="34:26" pos:end="34:28">[<expr pos:start="34:27" pos:end="34:27"><name pos:start="34:27" pos:end="34:27">i</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
    </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="37:9" pos:end="37:18"><expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:9">i</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <name pos:start="37:13" pos:end="37:13">i</name> <operator pos:start="37:15" pos:end="37:15">+</operator> <literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:8">cout</name> <operator pos:start="39:10" pos:end="39:11">&lt;&lt;</operator> <literal type="string" pos:start="39:13" pos:end="39:28">"Unfortunately."</literal></expr>;</expr_stmt>
    <return pos:start="40:5" pos:end="40:13">return <expr pos:start="40:12" pos:end="40:12"><literal type="number" pos:start="40:12" pos:end="40:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
