<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/116/116.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:15">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:15">&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:19">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:11"><decl pos:start="5:1" pos:end="5:10"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:6">fn</name><index pos:start="5:7" pos:end="5:10">[<expr pos:start="5:8" pos:end="5:9"><literal type="number" pos:start="5:8" pos:end="5:9">11</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:11"><decl pos:start="6:1" pos:end="6:10"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:6">bz</name><index pos:start="6:7" pos:end="6:10">[<expr pos:start="6:8" pos:end="6:9"><literal type="number" pos:start="6:8" pos:end="6:9">11</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:13"><decl pos:start="7:1" pos:end="7:12"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">bool</name></type> <name pos:start="7:6" pos:end="7:12"><name pos:start="7:6" pos:end="7:8">fn1</name><index pos:start="7:9" pos:end="7:12">[<expr pos:start="7:10" pos:end="7:11"><literal type="number" pos:start="7:10" pos:end="7:11">11</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:13"><decl pos:start="8:1" pos:end="8:12"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">bool</name></type> <name pos:start="8:6" pos:end="8:12"><name pos:start="8:6" pos:end="8:8">bz1</name><index pos:start="8:9" pos:end="8:12">[<expr pos:start="8:10" pos:end="8:11"><literal type="number" pos:start="8:10" pos:end="8:11">11</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="9:1" pos:end="9:8"><decl pos:start="9:1" pos:end="9:7"><type pos:start="9:1" pos:end="9:3"><name pos:start="9:1" pos:end="9:3">int</name></type> <name pos:start="9:5" pos:end="9:7">dep</name></decl>;</decl_stmt>
<decl_stmt pos:start="10:1" pos:end="10:28"><decl pos:start="10:1" pos:end="10:10"><type pos:start="10:1" pos:end="10:3"><name pos:start="10:1" pos:end="10:3">int</name></type> <name pos:start="10:5" pos:end="10:8">sum1</name><init pos:start="10:9" pos:end="10:10">=<expr pos:start="10:10" pos:end="10:10"><literal type="number" pos:start="10:10" pos:end="10:10">1</literal></expr></init></decl>,<decl pos:start="10:12" pos:end="10:15"><type ref="prev" pos:start="10:1" pos:end="10:3"/><name pos:start="10:12" pos:end="10:15">sum2</name></decl>,<decl pos:start="10:17" pos:end="10:27"><type ref="prev" pos:start="10:1" pos:end="10:3"/><name pos:start="10:17" pos:end="10:20">sum3</name><init pos:start="10:21" pos:end="10:27">=<expr pos:start="10:22" pos:end="10:27"><literal type="number" pos:start="10:22" pos:end="10:27">114514</literal></expr></init></decl>;</decl_stmt>
<function pos:start="11:1" pos:end="13:1"><type pos:start="11:1" pos:end="11:4"><name pos:start="11:1" pos:end="11:4">void</name></type> <name pos:start="11:6" pos:end="11:8">dfs</name><parameter_list pos:start="11:9" pos:end="11:29">(<parameter pos:start="11:10" pos:end="11:14"><decl pos:start="11:10" pos:end="11:14"><type pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:12">int</name></type> <name pos:start="11:14" pos:end="11:14">x</name></decl></parameter>,<parameter pos:start="11:16" pos:end="11:20"><decl pos:start="11:16" pos:end="11:20"><type pos:start="11:16" pos:end="11:20"><name pos:start="11:16" pos:end="11:18">int</name></type> <name pos:start="11:20" pos:end="11:20">y</name></decl></parameter>,<parameter pos:start="11:22" pos:end="11:28"><decl pos:start="11:22" pos:end="11:28"><type pos:start="11:22" pos:end="11:28"><name pos:start="11:22" pos:end="11:24">int</name></type> <name pos:start="11:26" pos:end="11:28">dep</name></decl></parameter>)</parameter_list><block pos:start="11:30" pos:end="13:1">{<block_content>
    
</block_content>}</block></function>
<function pos:start="14:1" pos:end="23:1"><type pos:start="14:1" pos:end="14:3"><name pos:start="14:1" pos:end="14:3">int</name></type> <name pos:start="14:5" pos:end="14:8">mian</name><parameter_list pos:start="14:9" pos:end="14:10">()</parameter_list><block pos:start="14:11" pos:end="23:1">{<block_content pos:start="15:5" pos:end="22:13">
    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><call pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:11">freopen</name><argument_list pos:start="15:12" pos:end="15:33">(<argument pos:start="15:13" pos:end="15:22"><expr pos:start="15:13" pos:end="15:22"><literal type="string" pos:start="15:13" pos:end="15:22">"stone.in"</literal></expr></argument>,<argument pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><literal type="string" pos:start="15:24" pos:end="15:26">"r"</literal></expr></argument>,<argument pos:start="15:28" pos:end="15:32"><expr pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:36"><expr pos:start="16:5" pos:end="16:35"><call pos:start="16:5" pos:end="16:35"><name pos:start="16:5" pos:end="16:11">freopen</name><argument_list pos:start="16:12" pos:end="16:35">(<argument pos:start="16:13" pos:end="16:23"><expr pos:start="16:13" pos:end="16:23"><literal type="string" pos:start="16:13" pos:end="16:23">"stone.out"</literal></expr></argument>,<argument pos:start="16:25" pos:end="16:27"><expr pos:start="16:25" pos:end="16:27"><literal type="string" pos:start="16:25" pos:end="16:27">"w"</literal></expr></argument>,<argument pos:start="16:29" pos:end="16:34"><expr pos:start="16:29" pos:end="16:34"><name pos:start="16:29" pos:end="16:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:11"><expr pos:start="18:5" pos:end="18:10"><name pos:start="18:5" pos:end="18:7">cin</name><operator pos:start="18:8" pos:end="18:9">&gt;&gt;</operator><name pos:start="18:10" pos:end="18:10">n</name></expr>;</expr_stmt>
    <for pos:start="19:5" pos:end="20:37">for<control pos:start="19:8" pos:end="19:24">(<init pos:start="19:9" pos:end="19:16"><decl pos:start="19:9" pos:end="19:15"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">i</name><init pos:start="19:14" pos:end="19:15">=<expr pos:start="19:15" pos:end="19:15"><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr></init></decl>;</init><condition pos:start="19:17" pos:end="19:20"><expr pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:17">i</name><operator pos:start="19:18" pos:end="19:18">&lt;</operator><name pos:start="19:19" pos:end="19:19">n</name></expr>;</condition><incr pos:start="19:21" pos:end="19:23"><expr pos:start="19:21" pos:end="19:23"><name pos:start="19:21" pos:end="19:21">i</name><operator pos:start="19:22" pos:end="19:23">++</operator></expr></incr>)</control><block type="pseudo" pos:start="20:9" pos:end="20:37"><block_content pos:start="20:9" pos:end="20:37">
        <expr_stmt pos:start="20:9" pos:end="20:37"><expr pos:start="20:9" pos:end="20:36"><call pos:start="20:9" pos:end="20:36"><name pos:start="20:9" pos:end="20:13">scanf</name><argument_list pos:start="20:14" pos:end="20:36">(<argument pos:start="20:15" pos:end="20:21"><expr pos:start="20:15" pos:end="20:21"><literal type="string" pos:start="20:15" pos:end="20:21">"%d %d"</literal></expr></argument>,<argument pos:start="20:23" pos:end="20:28"><expr pos:start="20:23" pos:end="20:28"><operator pos:start="20:23" pos:end="20:23">&amp;</operator><name pos:start="20:24" pos:end="20:28"><name pos:start="20:24" pos:end="20:25">fn</name><index pos:start="20:26" pos:end="20:28">[<expr pos:start="20:27" pos:end="20:27"><name pos:start="20:27" pos:end="20:27">i</name></expr>]</index></name></expr></argument>,<argument pos:start="20:30" pos:end="20:35"><expr pos:start="20:30" pos:end="20:35"><operator pos:start="20:30" pos:end="20:30">&amp;</operator><name pos:start="20:31" pos:end="20:35"><name pos:start="20:31" pos:end="20:32">bz</name><index pos:start="20:33" pos:end="20:35">[<expr pos:start="20:34" pos:end="20:34"><name pos:start="20:34" pos:end="20:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <macro pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:7">dfs</name><argument_list pos:start="21:8" pos:end="21:9">()</argument_list></macro>
    <return pos:start="22:5" pos:end="22:13">return <expr pos:start="22:12" pos:end="22:12"><literal type="number" pos:start="22:12" pos:end="22:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
