<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/711/711.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:11"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>, <decl pos:start="3:8" pos:end="3:10"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:8" pos:end="3:10">ans</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:16"><decl pos:start="4:1" pos:end="4:15"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:15"><name pos:start="4:5" pos:end="4:7">map</name><index pos:start="4:8" pos:end="4:11">[<expr pos:start="4:9" pos:end="4:10"><literal type="number" pos:start="4:9" pos:end="4:10">15</literal></expr>]</index><index pos:start="4:12" pos:end="4:15">[<expr pos:start="4:13" pos:end="4:14"><literal type="number" pos:start="4:13" pos:end="4:14">15</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:44"><decl pos:start="5:1" pos:end="5:17"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:17"><name pos:start="5:6" pos:end="5:13">rowWhite</name><index pos:start="5:14" pos:end="5:17">[<expr pos:start="5:15" pos:end="5:16"><literal type="number" pos:start="5:15" pos:end="5:16">15</literal></expr>]</index></name></decl>, <decl pos:start="5:20" pos:end="5:30"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:20" pos:end="5:30"><name pos:start="5:20" pos:end="5:26">x1White</name><index pos:start="5:27" pos:end="5:30">[<expr pos:start="5:28" pos:end="5:29"><literal type="number" pos:start="5:28" pos:end="5:29">20</literal></expr>]</index></name></decl>, <decl pos:start="5:33" pos:end="5:43"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:33" pos:end="5:43"><name pos:start="5:33" pos:end="5:39">x2White</name><index pos:start="5:40" pos:end="5:43">[<expr pos:start="5:41" pos:end="5:42"><literal type="number" pos:start="5:41" pos:end="5:42">20</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:44"><decl pos:start="6:1" pos:end="6:17"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">bool</name></type> <name pos:start="6:6" pos:end="6:17"><name pos:start="6:6" pos:end="6:13">rowBlack</name><index pos:start="6:14" pos:end="6:17">[<expr pos:start="6:15" pos:end="6:16"><literal type="number" pos:start="6:15" pos:end="6:16">15</literal></expr>]</index></name></decl>, <decl pos:start="6:20" pos:end="6:30"><type ref="prev" pos:start="6:1" pos:end="6:4"/><name pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:26">x1Black</name><index pos:start="6:27" pos:end="6:30">[<expr pos:start="6:28" pos:end="6:29"><literal type="number" pos:start="6:28" pos:end="6:29">20</literal></expr>]</index></name></decl>, <decl pos:start="6:33" pos:end="6:43"><type ref="prev" pos:start="6:1" pos:end="6:4"/><name pos:start="6:33" pos:end="6:43"><name pos:start="6:33" pos:end="6:39">x2Black</name><index pos:start="6:40" pos:end="6:43">[<expr pos:start="6:41" pos:end="6:42"><literal type="number" pos:start="6:41" pos:end="6:42">20</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="14:1"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">bool</name></type> <name pos:start="7:6" pos:end="7:10">check</name><parameter_list pos:start="7:11" pos:end="7:34">(<parameter pos:start="7:12" pos:end="7:16"><decl pos:start="7:12" pos:end="7:16"><type pos:start="7:12" pos:end="7:16"><name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:16">i</name></decl></parameter>, <parameter pos:start="7:19" pos:end="7:23"><decl pos:start="7:19" pos:end="7:23"><type pos:start="7:19" pos:end="7:23"><name pos:start="7:19" pos:end="7:21">int</name></type> <name pos:start="7:23" pos:end="7:23">c</name></decl></parameter>, <parameter pos:start="7:26" pos:end="7:33"><decl pos:start="7:26" pos:end="7:33"><type pos:start="7:26" pos:end="7:33"><name pos:start="7:26" pos:end="7:29">bool</name></type> <name pos:start="7:31" pos:end="7:33">col</name></decl></parameter>)</parameter_list> <block pos:start="7:36" pos:end="14:1">{<block_content pos:start="8:5" pos:end="13:5">
    <if_stmt pos:start="8:5" pos:end="10:5"><if pos:start="8:5" pos:end="10:5">if <condition pos:start="8:8" pos:end="8:17">(<expr pos:start="8:9" pos:end="8:16"><name pos:start="8:9" pos:end="8:11">col</name> <operator pos:start="8:13" pos:end="8:14">==</operator> <literal type="number" pos:start="8:16" pos:end="8:16">0</literal></expr>)</condition> <block pos:start="8:19" pos:end="10:5">{<block_content pos:start="9:9" pos:end="9:88">
        <return pos:start="9:9" pos:end="9:88">return <expr pos:start="9:16" pos:end="9:87"><name pos:start="9:16" pos:end="9:24"><name pos:start="9:16" pos:end="9:18">map</name><index pos:start="9:19" pos:end="9:21">[<expr pos:start="9:20" pos:end="9:20"><name pos:start="9:20" pos:end="9:20">c</name></expr>]</index><index pos:start="9:22" pos:end="9:24">[<expr pos:start="9:23" pos:end="9:23"><name pos:start="9:23" pos:end="9:23">i</name></expr>]</index></name> <operator pos:start="9:26" pos:end="9:27">!=</operator> <literal type="number" pos:start="9:29" pos:end="9:29">0</literal> <operator pos:start="9:31" pos:end="9:32">&amp;&amp;</operator> <operator pos:start="9:34" pos:end="9:34">!</operator><name pos:start="9:35" pos:end="9:45"><name pos:start="9:35" pos:end="9:42">rowBlack</name><index pos:start="9:43" pos:end="9:45">[<expr pos:start="9:44" pos:end="9:44"><name pos:start="9:44" pos:end="9:44">i</name></expr>]</index></name> <operator pos:start="9:47" pos:end="9:48">&amp;&amp;</operator> <operator pos:start="9:50" pos:end="9:50">!</operator><name pos:start="9:51" pos:end="9:64"><name pos:start="9:51" pos:end="9:57">x1Black</name><index pos:start="9:58" pos:end="9:64">[<expr pos:start="9:59" pos:end="9:63"><name pos:start="9:59" pos:end="9:59">i</name> <operator pos:start="9:61" pos:end="9:61">+</operator> <name pos:start="9:63" pos:end="9:63">c</name></expr>]</index></name> <operator pos:start="9:66" pos:end="9:67">&amp;&amp;</operator> <operator pos:start="9:69" pos:end="9:69">!</operator><name pos:start="9:70" pos:end="9:87"><name pos:start="9:70" pos:end="9:76">x2Black</name><index pos:start="9:77" pos:end="9:87">[<expr pos:start="9:78" pos:end="9:86"><name pos:start="9:78" pos:end="9:78">i</name> <operator pos:start="9:80" pos:end="9:80">-</operator> <name pos:start="9:82" pos:end="9:82">c</name> <operator pos:start="9:84" pos:end="9:84">+</operator> <name pos:start="9:86" pos:end="9:86">n</name></expr>]</index></name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="11:5" pos:end="13:5"><if pos:start="11:5" pos:end="13:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:11">col</name> <operator pos:start="11:13" pos:end="11:14">==</operator> <literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr>)</condition> <block pos:start="11:19" pos:end="13:5">{<block_content pos:start="12:9" pos:end="12:88">
        <return pos:start="12:9" pos:end="12:88">return <expr pos:start="12:16" pos:end="12:87"><name pos:start="12:16" pos:end="12:24"><name pos:start="12:16" pos:end="12:18">map</name><index pos:start="12:19" pos:end="12:21">[<expr pos:start="12:20" pos:end="12:20"><name pos:start="12:20" pos:end="12:20">c</name></expr>]</index><index pos:start="12:22" pos:end="12:24">[<expr pos:start="12:23" pos:end="12:23"><name pos:start="12:23" pos:end="12:23">i</name></expr>]</index></name> <operator pos:start="12:26" pos:end="12:27">!=</operator> <literal type="number" pos:start="12:29" pos:end="12:29">0</literal> <operator pos:start="12:31" pos:end="12:32">&amp;&amp;</operator> <operator pos:start="12:34" pos:end="12:34">!</operator><name pos:start="12:35" pos:end="12:45"><name pos:start="12:35" pos:end="12:42">rowWhite</name><index pos:start="12:43" pos:end="12:45">[<expr pos:start="12:44" pos:end="12:44"><name pos:start="12:44" pos:end="12:44">i</name></expr>]</index></name> <operator pos:start="12:47" pos:end="12:48">&amp;&amp;</operator> <operator pos:start="12:50" pos:end="12:50">!</operator><name pos:start="12:51" pos:end="12:64"><name pos:start="12:51" pos:end="12:57">x1White</name><index pos:start="12:58" pos:end="12:64">[<expr pos:start="12:59" pos:end="12:63"><name pos:start="12:59" pos:end="12:59">i</name> <operator pos:start="12:61" pos:end="12:61">+</operator> <name pos:start="12:63" pos:end="12:63">c</name></expr>]</index></name> <operator pos:start="12:66" pos:end="12:67">&amp;&amp;</operator> <operator pos:start="12:69" pos:end="12:69">!</operator><name pos:start="12:70" pos:end="12:87"><name pos:start="12:70" pos:end="12:76">x2White</name><index pos:start="12:77" pos:end="12:87">[<expr pos:start="12:78" pos:end="12:86"><name pos:start="12:78" pos:end="12:78">i</name> <operator pos:start="12:80" pos:end="12:80">-</operator> <name pos:start="12:82" pos:end="12:82">c</name> <operator pos:start="12:84" pos:end="12:84">+</operator> <name pos:start="12:86" pos:end="12:86">n</name></expr>]</index></name></expr>;</return>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="15:1" pos:end="38:1"><type pos:start="15:1" pos:end="15:4"><name pos:start="15:1" pos:end="15:4">void</name></type> <name pos:start="15:6" pos:end="15:8">dfs</name><parameter_list pos:start="15:9" pos:end="15:28">(<parameter pos:start="15:10" pos:end="15:14"><decl pos:start="15:10" pos:end="15:14"><type pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:12">int</name></type> <name pos:start="15:14" pos:end="15:14">c</name></decl></parameter>, <parameter pos:start="15:17" pos:end="15:27"><decl pos:start="15:17" pos:end="15:27"><type pos:start="15:17" pos:end="15:27"><name pos:start="15:17" pos:end="15:20">bool</name></type> <name pos:start="15:22" pos:end="15:27">nowCol</name></decl></parameter>)</parameter_list> <block pos:start="15:30" pos:end="38:1">{<block_content pos:start="16:5" pos:end="37:11">
    <if_stmt pos:start="16:5" pos:end="23:5"><if pos:start="16:5" pos:end="23:5">if <condition pos:start="16:8" pos:end="16:15">(<expr pos:start="16:9" pos:end="16:14"><name pos:start="16:9" pos:end="16:9">c</name> <operator pos:start="16:11" pos:end="16:12">==</operator> <name pos:start="16:14" pos:end="16:14">n</name></expr>)</condition> <block pos:start="16:17" pos:end="23:5">{<block_content pos:start="17:9" pos:end="22:9">
        <if_stmt pos:start="17:9" pos:end="22:9"><if pos:start="17:9" pos:end="19:9">if <condition pos:start="17:12" pos:end="17:24">(<expr pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:18">nowCol</name> <operator pos:start="17:20" pos:end="17:21">==</operator> <literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr>)</condition> <block pos:start="17:26" pos:end="19:9">{<block_content pos:start="18:13" pos:end="18:31">
            <expr_stmt pos:start="18:13" pos:end="18:31"><expr pos:start="18:13" pos:end="18:30"><call pos:start="18:13" pos:end="18:30"><name pos:start="18:13" pos:end="18:15">dfs</name><argument_list pos:start="18:16" pos:end="18:30">(<argument pos:start="18:17" pos:end="18:17"><expr pos:start="18:17" pos:end="18:17"><literal type="number" pos:start="18:17" pos:end="18:17">0</literal></expr></argument>, <argument pos:start="18:20" pos:end="18:29"><expr pos:start="18:20" pos:end="18:29"><name pos:start="18:20" pos:end="18:25">nowCol</name> <operator pos:start="18:27" pos:end="18:27">+</operator> <literal type="number" pos:start="18:29" pos:end="18:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="19:11" pos:end="22:9">else <block pos:start="19:16" pos:end="22:9">{<block_content pos:start="20:13" pos:end="21:19">
            <expr_stmt pos:start="20:13" pos:end="20:18"><expr pos:start="20:13" pos:end="20:17"><name pos:start="20:13" pos:end="20:15">ans</name><operator pos:start="20:16" pos:end="20:17">++</operator></expr>;</expr_stmt>
            <return pos:start="21:13" pos:end="21:19">return;</return>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></if></if_stmt>
    <for pos:start="24:5" pos:end="36:5">for <control pos:start="24:9" pos:end="24:31">(<init pos:start="24:10" pos:end="24:19"><decl pos:start="24:10" pos:end="24:18"><type pos:start="24:10" pos:end="24:12"><name pos:start="24:10" pos:end="24:12">int</name></type> <name pos:start="24:14" pos:end="24:14">i</name> <init pos:start="24:16" pos:end="24:18">= <expr pos:start="24:18" pos:end="24:18"><literal type="number" pos:start="24:18" pos:end="24:18">0</literal></expr></init></decl>;</init> <condition pos:start="24:21" pos:end="24:26"><expr pos:start="24:21" pos:end="24:25"><name pos:start="24:21" pos:end="24:21">i</name> <operator pos:start="24:23" pos:end="24:23">&lt;</operator> <name pos:start="24:25" pos:end="24:25">n</name></expr>;</condition> <incr pos:start="24:28" pos:end="24:30"><expr pos:start="24:28" pos:end="24:30"><name pos:start="24:28" pos:end="24:28">i</name><operator pos:start="24:29" pos:end="24:30">++</operator></expr></incr>)</control> <block pos:start="24:33" pos:end="36:5">{<block_content pos:start="25:9" pos:end="35:9">
        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="25:32">(<expr pos:start="25:13" pos:end="25:31"><call pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:17">check</name><argument_list pos:start="25:18" pos:end="25:31">(<argument pos:start="25:19" pos:end="25:19"><expr pos:start="25:19" pos:end="25:19"><name pos:start="25:19" pos:end="25:19">i</name></expr></argument>, <argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><name pos:start="25:22" pos:end="25:22">c</name></expr></argument>, <argument pos:start="25:25" pos:end="25:30"><expr pos:start="25:25" pos:end="25:30"><name pos:start="25:25" pos:end="25:30">nowCol</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:34" pos:end="35:9">{<block_content pos:start="26:13" pos:end="34:13">
            <if_stmt pos:start="26:13" pos:end="34:13"><if pos:start="26:13" pos:end="30:13">if <condition pos:start="26:16" pos:end="26:28">(<expr pos:start="26:17" pos:end="26:27"><name pos:start="26:17" pos:end="26:22">nowCol</name> <operator pos:start="26:24" pos:end="26:25">==</operator> <literal type="number" pos:start="26:27" pos:end="26:27">0</literal></expr>)</condition> <block pos:start="26:30" pos:end="30:13">{<block_content pos:start="27:17" pos:end="29:74">
                <expr_stmt pos:start="27:17" pos:end="27:73"><expr pos:start="27:17" pos:end="27:72"><name pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:24">rowBlack</name><index pos:start="27:25" pos:end="27:27">[<expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">i</name></expr>]</index></name> <operator pos:start="27:29" pos:end="27:29">=</operator> <name pos:start="27:31" pos:end="27:44"><name pos:start="27:31" pos:end="27:37">x1Black</name><index pos:start="27:38" pos:end="27:44">[<expr pos:start="27:39" pos:end="27:43"><name pos:start="27:39" pos:end="27:39">i</name> <operator pos:start="27:41" pos:end="27:41">+</operator> <name pos:start="27:43" pos:end="27:43">c</name></expr>]</index></name> <operator pos:start="27:46" pos:end="27:46">=</operator> <name pos:start="27:48" pos:end="27:65"><name pos:start="27:48" pos:end="27:54">x2Black</name><index pos:start="27:55" pos:end="27:65">[<expr pos:start="27:56" pos:end="27:64"><name pos:start="27:56" pos:end="27:56">i</name> <operator pos:start="27:58" pos:end="27:58">-</operator> <name pos:start="27:60" pos:end="27:60">c</name> <operator pos:start="27:62" pos:end="27:62">+</operator> <name pos:start="27:64" pos:end="27:64">n</name></expr>]</index></name> <operator pos:start="27:67" pos:end="27:67">=</operator> <literal type="boolean" pos:start="27:69" pos:end="27:72">true</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="28:17" pos:end="28:35"><expr pos:start="28:17" pos:end="28:34"><call pos:start="28:17" pos:end="28:34"><name pos:start="28:17" pos:end="28:19">dfs</name><argument_list pos:start="28:20" pos:end="28:34">(<argument pos:start="28:21" pos:end="28:25"><expr pos:start="28:21" pos:end="28:25"><name pos:start="28:21" pos:end="28:21">c</name> <operator pos:start="28:23" pos:end="28:23">+</operator> <literal type="number" pos:start="28:25" pos:end="28:25">1</literal></expr></argument>, <argument pos:start="28:28" pos:end="28:33"><expr pos:start="28:28" pos:end="28:33"><name pos:start="28:28" pos:end="28:33">nowCol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="29:17" pos:end="29:74"><expr pos:start="29:17" pos:end="29:73"><name pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:24">rowBlack</name><index pos:start="29:25" pos:end="29:27">[<expr pos:start="29:26" pos:end="29:26"><name pos:start="29:26" pos:end="29:26">i</name></expr>]</index></name> <operator pos:start="29:29" pos:end="29:29">=</operator> <name pos:start="29:31" pos:end="29:44"><name pos:start="29:31" pos:end="29:37">x1Black</name><index pos:start="29:38" pos:end="29:44">[<expr pos:start="29:39" pos:end="29:43"><name pos:start="29:39" pos:end="29:39">i</name> <operator pos:start="29:41" pos:end="29:41">+</operator> <name pos:start="29:43" pos:end="29:43">c</name></expr>]</index></name> <operator pos:start="29:46" pos:end="29:46">=</operator> <name pos:start="29:48" pos:end="29:65"><name pos:start="29:48" pos:end="29:54">x2Black</name><index pos:start="29:55" pos:end="29:65">[<expr pos:start="29:56" pos:end="29:64"><name pos:start="29:56" pos:end="29:56">i</name> <operator pos:start="29:58" pos:end="29:58">-</operator> <name pos:start="29:60" pos:end="29:60">c</name> <operator pos:start="29:62" pos:end="29:62">+</operator> <name pos:start="29:64" pos:end="29:64">n</name></expr>]</index></name> <operator pos:start="29:67" pos:end="29:67">=</operator> <literal type="boolean" pos:start="29:69" pos:end="29:73">false</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="30:15" pos:end="34:13">else <block pos:start="30:20" pos:end="34:13">{<block_content pos:start="31:17" pos:end="33:74">
                <expr_stmt pos:start="31:17" pos:end="31:73"><expr pos:start="31:17" pos:end="31:72"><name pos:start="31:17" pos:end="31:27"><name pos:start="31:17" pos:end="31:24">rowWhite</name><index pos:start="31:25" pos:end="31:27">[<expr pos:start="31:26" pos:end="31:26"><name pos:start="31:26" pos:end="31:26">i</name></expr>]</index></name> <operator pos:start="31:29" pos:end="31:29">=</operator> <name pos:start="31:31" pos:end="31:44"><name pos:start="31:31" pos:end="31:37">x1White</name><index pos:start="31:38" pos:end="31:44">[<expr pos:start="31:39" pos:end="31:43"><name pos:start="31:39" pos:end="31:39">i</name> <operator pos:start="31:41" pos:end="31:41">+</operator> <name pos:start="31:43" pos:end="31:43">c</name></expr>]</index></name> <operator pos:start="31:46" pos:end="31:46">=</operator> <name pos:start="31:48" pos:end="31:65"><name pos:start="31:48" pos:end="31:54">x2White</name><index pos:start="31:55" pos:end="31:65">[<expr pos:start="31:56" pos:end="31:64"><name pos:start="31:56" pos:end="31:56">i</name> <operator pos:start="31:58" pos:end="31:58">-</operator> <name pos:start="31:60" pos:end="31:60">c</name> <operator pos:start="31:62" pos:end="31:62">+</operator> <name pos:start="31:64" pos:end="31:64">n</name></expr>]</index></name> <operator pos:start="31:67" pos:end="31:67">=</operator> <literal type="boolean" pos:start="31:69" pos:end="31:72">true</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="32:17" pos:end="32:35"><expr pos:start="32:17" pos:end="32:34"><call pos:start="32:17" pos:end="32:34"><name pos:start="32:17" pos:end="32:19">dfs</name><argument_list pos:start="32:20" pos:end="32:34">(<argument pos:start="32:21" pos:end="32:25"><expr pos:start="32:21" pos:end="32:25"><name pos:start="32:21" pos:end="32:21">c</name> <operator pos:start="32:23" pos:end="32:23">+</operator> <literal type="number" pos:start="32:25" pos:end="32:25">1</literal></expr></argument>, <argument pos:start="32:28" pos:end="32:33"><expr pos:start="32:28" pos:end="32:33"><name pos:start="32:28" pos:end="32:33">nowCol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="33:17" pos:end="33:74"><expr pos:start="33:17" pos:end="33:73"><name pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:24">rowWhite</name><index pos:start="33:25" pos:end="33:27">[<expr pos:start="33:26" pos:end="33:26"><name pos:start="33:26" pos:end="33:26">i</name></expr>]</index></name> <operator pos:start="33:29" pos:end="33:29">=</operator> <name pos:start="33:31" pos:end="33:44"><name pos:start="33:31" pos:end="33:37">x1White</name><index pos:start="33:38" pos:end="33:44">[<expr pos:start="33:39" pos:end="33:43"><name pos:start="33:39" pos:end="33:39">i</name> <operator pos:start="33:41" pos:end="33:41">+</operator> <name pos:start="33:43" pos:end="33:43">c</name></expr>]</index></name> <operator pos:start="33:46" pos:end="33:46">=</operator> <name pos:start="33:48" pos:end="33:65"><name pos:start="33:48" pos:end="33:54">x2White</name><index pos:start="33:55" pos:end="33:65">[<expr pos:start="33:56" pos:end="33:64"><name pos:start="33:56" pos:end="33:56">i</name> <operator pos:start="33:58" pos:end="33:58">-</operator> <name pos:start="33:60" pos:end="33:60">c</name> <operator pos:start="33:62" pos:end="33:62">+</operator> <name pos:start="33:64" pos:end="33:64">n</name></expr>]</index></name> <operator pos:start="33:67" pos:end="33:67">=</operator> <literal type="boolean" pos:start="33:69" pos:end="33:73">false</literal></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="37:5" pos:end="37:11">return;</return>
</block_content>}</block></function>
<function pos:start="39:1" pos:end="51:1"><type pos:start="39:1" pos:end="39:3"><name pos:start="39:1" pos:end="39:3">int</name></type> <name pos:start="39:5" pos:end="39:8">main</name><parameter_list pos:start="39:9" pos:end="39:10">()</parameter_list> <block pos:start="39:12" pos:end="51:1">{<block_content pos:start="40:5" pos:end="50:13">
    <expr_stmt pos:start="40:5" pos:end="40:36"><expr pos:start="40:5" pos:end="40:35"><call pos:start="40:5" pos:end="40:35"><name pos:start="40:5" pos:end="40:11">freopen</name><argument_list pos:start="40:12" pos:end="40:35">(<argument pos:start="40:13" pos:end="40:22"><expr pos:start="40:13" pos:end="40:22"><literal type="string" pos:start="40:13" pos:end="40:22">"queen.in"</literal></expr></argument>, <argument pos:start="40:25" pos:end="40:27"><expr pos:start="40:25" pos:end="40:27"><literal type="string" pos:start="40:25" pos:end="40:27">"r"</literal></expr></argument>, <argument pos:start="40:30" pos:end="40:34"><expr pos:start="40:30" pos:end="40:34"><name pos:start="40:30" pos:end="40:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><call pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:11">freopen</name><argument_list pos:start="41:12" pos:end="41:37">(<argument pos:start="41:13" pos:end="41:23"><expr pos:start="41:13" pos:end="41:23"><literal type="string" pos:start="41:13" pos:end="41:23">"queen.out"</literal></expr></argument>, <argument pos:start="41:26" pos:end="41:28"><expr pos:start="41:26" pos:end="41:28"><literal type="string" pos:start="41:26" pos:end="41:28">"w"</literal></expr></argument>, <argument pos:start="41:31" pos:end="41:36"><expr pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:36">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:13"><expr pos:start="42:5" pos:end="42:12"><name pos:start="42:5" pos:end="42:7">cin</name> <operator pos:start="42:9" pos:end="42:10">&gt;&gt;</operator> <name pos:start="42:12" pos:end="42:12">n</name></expr>;</expr_stmt>
    <for pos:start="43:5" pos:end="47:5">for <control pos:start="43:9" pos:end="43:31">(<init pos:start="43:10" pos:end="43:19"><decl pos:start="43:10" pos:end="43:18"><type pos:start="43:10" pos:end="43:12"><name pos:start="43:10" pos:end="43:12">int</name></type> <name pos:start="43:14" pos:end="43:14">i</name> <init pos:start="43:16" pos:end="43:18">= <expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr></init></decl>;</init> <condition pos:start="43:21" pos:end="43:26"><expr pos:start="43:21" pos:end="43:25"><name pos:start="43:21" pos:end="43:21">i</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <name pos:start="43:25" pos:end="43:25">n</name></expr>;</condition> <incr pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><name pos:start="43:28" pos:end="43:28">i</name><operator pos:start="43:29" pos:end="43:30">++</operator></expr></incr>)</control> <block pos:start="43:33" pos:end="47:5">{<block_content pos:start="44:9" pos:end="46:9">
        <for pos:start="44:9" pos:end="46:9">for <control pos:start="44:13" pos:end="44:35">(<init pos:start="44:14" pos:end="44:23"><decl pos:start="44:14" pos:end="44:22"><type pos:start="44:14" pos:end="44:16"><name pos:start="44:14" pos:end="44:16">int</name></type> <name pos:start="44:18" pos:end="44:18">j</name> <init pos:start="44:20" pos:end="44:22">= <expr pos:start="44:22" pos:end="44:22"><literal type="number" pos:start="44:22" pos:end="44:22">0</literal></expr></init></decl>;</init> <condition pos:start="44:25" pos:end="44:30"><expr pos:start="44:25" pos:end="44:29"><name pos:start="44:25" pos:end="44:25">j</name> <operator pos:start="44:27" pos:end="44:27">&lt;</operator> <name pos:start="44:29" pos:end="44:29">n</name></expr>;</condition> <incr pos:start="44:32" pos:end="44:34"><expr pos:start="44:32" pos:end="44:34"><name pos:start="44:32" pos:end="44:32">j</name><operator pos:start="44:33" pos:end="44:34">++</operator></expr></incr>)</control> <block pos:start="44:37" pos:end="46:9">{<block_content pos:start="45:13" pos:end="45:29">
            <expr_stmt pos:start="45:13" pos:end="45:29"><expr pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:15">cin</name> <operator pos:start="45:17" pos:end="45:18">&gt;&gt;</operator> <name pos:start="45:20" pos:end="45:28"><name pos:start="45:20" pos:end="45:22">map</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">i</name></expr>]</index><index pos:start="45:26" pos:end="45:28">[<expr pos:start="45:27" pos:end="45:27"><name pos:start="45:27" pos:end="45:27">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="48:5" pos:end="48:14"><expr pos:start="48:5" pos:end="48:13"><call pos:start="48:5" pos:end="48:13"><name pos:start="48:5" pos:end="48:7">dfs</name><argument_list pos:start="48:8" pos:end="48:13">(<argument pos:start="48:9" pos:end="48:9"><expr pos:start="48:9" pos:end="48:9"><literal type="number" pos:start="48:9" pos:end="48:9">0</literal></expr></argument>, <argument pos:start="48:12" pos:end="48:12"><expr pos:start="48:12" pos:end="48:12"><literal type="number" pos:start="48:12" pos:end="48:12">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="49:5" pos:end="49:16"><expr pos:start="49:5" pos:end="49:15"><name pos:start="49:5" pos:end="49:8">cout</name> <operator pos:start="49:10" pos:end="49:11">&lt;&lt;</operator> <name pos:start="49:13" pos:end="49:15">ans</name></expr>;</expr_stmt>
    <return pos:start="50:5" pos:end="50:13">return <expr pos:start="50:12" pos:end="50:12"><literal type="number" pos:start="50:12" pos:end="50:12">0</literal></expr>;</return>    
</block_content>}</block></function>
</unit>
