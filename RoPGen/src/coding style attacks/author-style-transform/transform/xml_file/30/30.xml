<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/30/30.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="33:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="33:1">{<block_content pos:start="5:5" pos:end="32:13">
    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:13">s1</name></decl>, <decl pos:start="5:16" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:10"/><name pos:start="5:16" pos:end="5:17">s2</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:20"><expr pos:start="6:5" pos:end="6:19"><name pos:start="6:5" pos:end="6:7">cin</name> <operator pos:start="6:9" pos:end="6:10">&gt;&gt;</operator> <name pos:start="6:12" pos:end="6:13">s1</name> <operator pos:start="6:15" pos:end="6:16">&gt;&gt;</operator> <name pos:start="6:18" pos:end="6:19">s2</name></expr>;</expr_stmt>
    
    <decl_stmt pos:start="8:5" pos:end="8:16"><decl pos:start="8:5" pos:end="8:15"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:11">rel</name> <init pos:start="8:13" pos:end="8:15">= <expr pos:start="8:15" pos:end="8:15"><literal type="number" pos:start="8:15" pos:end="8:15">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name> <init pos:start="9:13" pos:end="9:23">= <expr pos:start="9:15" pos:end="9:23"><call pos:start="9:15" pos:end="9:23"><name pos:start="9:15" pos:end="9:21"><name pos:start="9:15" pos:end="9:16">s2</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:21">size</name></name><argument_list pos:start="9:22" pos:end="9:23">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for pos:start="10:5" pos:end="12:5">for<control pos:start="10:8" pos:end="10:30">(<init pos:start="10:9" pos:end="10:18"><decl pos:start="10:9" pos:end="10:17"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">i</name> <init pos:start="10:15" pos:end="10:17">= <expr pos:start="10:17" pos:end="10:17"><literal type="number" pos:start="10:17" pos:end="10:17">0</literal></expr></init></decl>;</init><condition pos:start="10:19" pos:end="10:26"><expr pos:start="10:19" pos:end="10:25"><name pos:start="10:19" pos:end="10:19">i</name> <operator pos:start="10:21" pos:end="10:21">&lt;</operator> <name pos:start="10:23" pos:end="10:25">len</name></expr>;</condition><incr pos:start="10:27" pos:end="10:29"><expr pos:start="10:27" pos:end="10:29"><name pos:start="10:27" pos:end="10:27">i</name><operator pos:start="10:28" pos:end="10:29">++</operator></expr></incr>)</control><block pos:start="10:31" pos:end="12:5">{<block_content pos:start="11:9" pos:end="11:41">
        <expr_stmt pos:start="11:9" pos:end="11:41"><expr pos:start="11:9" pos:end="11:40"><name pos:start="11:9" pos:end="11:11">rel</name> <operator pos:start="11:13" pos:end="11:14">+=</operator> <operator pos:start="11:16" pos:end="11:16">(</operator><name pos:start="11:17" pos:end="11:19">len</name> <operator pos:start="11:21" pos:end="11:21">-</operator> <name pos:start="11:23" pos:end="11:23">i</name><operator pos:start="11:24" pos:end="11:24">)</operator> <operator pos:start="11:26" pos:end="11:26">*</operator> <operator pos:start="11:28" pos:end="11:28">(</operator><name pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:30">s2</name><index pos:start="11:31" pos:end="11:33">[<expr pos:start="11:32" pos:end="11:32"><name pos:start="11:32" pos:end="11:32">i</name></expr>]</index></name> <operator pos:start="11:35" pos:end="11:35">-</operator> <literal type="char" pos:start="11:37" pos:end="11:39">'0'</literal><operator pos:start="11:40" pos:end="11:40">)</operator></expr>;</expr_stmt>
    </block_content>}</block></for>
    
    <decl_stmt pos:start="14:5" pos:end="14:19"><decl pos:start="14:5" pos:end="14:18"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:14">result</name> <init pos:start="14:16" pos:end="14:18">= <expr pos:start="14:18" pos:end="14:18"><literal type="number" pos:start="14:18" pos:end="14:18">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">len1</name> <init pos:start="15:14" pos:end="15:24">= <expr pos:start="15:16" pos:end="15:24"><call pos:start="15:16" pos:end="15:24"><name pos:start="15:16" pos:end="15:22"><name pos:start="15:16" pos:end="15:17">s1</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:22">size</name></name><argument_list pos:start="15:23" pos:end="15:24">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="16:5" pos:end="16:16"><decl pos:start="16:5" pos:end="16:15"><type pos:start="16:5" pos:end="16:7"><name pos:start="16:5" pos:end="16:7">int</name></type> <name pos:start="16:9" pos:end="16:11">num</name> <init pos:start="16:13" pos:end="16:15">= <expr pos:start="16:15" pos:end="16:15"><literal type="number" pos:start="16:15" pos:end="16:15">0</literal></expr></init></decl>;</decl_stmt> 
    <for pos:start="17:5" pos:end="23:5">for <control pos:start="17:9" pos:end="17:33">(<init pos:start="17:10" pos:end="17:19"><decl pos:start="17:10" pos:end="17:18"><type pos:start="17:10" pos:end="17:12"><name pos:start="17:10" pos:end="17:12">int</name></type> <name pos:start="17:14" pos:end="17:14">i</name> <init pos:start="17:16" pos:end="17:18">= <expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr></init></decl>;</init> <condition pos:start="17:21" pos:end="17:29"><expr pos:start="17:21" pos:end="17:28"><name pos:start="17:21" pos:end="17:21">i</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <name pos:start="17:25" pos:end="17:28">len1</name></expr>;</condition><incr pos:start="17:30" pos:end="17:32"><expr pos:start="17:30" pos:end="17:32"><name pos:start="17:30" pos:end="17:30">i</name><operator pos:start="17:31" pos:end="17:32">++</operator></expr></incr>)</control><block pos:start="17:34" pos:end="23:5">{<block_content pos:start="18:9" pos:end="22:9">
        <if_stmt pos:start="18:9" pos:end="22:9"><if pos:start="18:9" pos:end="20:9">if <condition pos:start="18:12" pos:end="18:25">(<expr pos:start="18:13" pos:end="18:24"><name pos:start="18:13" pos:end="18:17"><name pos:start="18:13" pos:end="18:14">s1</name><index pos:start="18:15" pos:end="18:17">[<expr pos:start="18:16" pos:end="18:16"><name pos:start="18:16" pos:end="18:16">i</name></expr>]</index></name> <operator pos:start="18:19" pos:end="18:20">==</operator> <literal type="char" pos:start="18:22" pos:end="18:24">'?'</literal></expr>)</condition><block pos:start="18:26" pos:end="20:9">{<block_content pos:start="19:13" pos:end="19:27">
            <expr_stmt pos:start="19:13" pos:end="19:27"><expr pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:15">num</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:22">len1</name> <operator pos:start="19:24" pos:end="19:24">-</operator> <name pos:start="19:26" pos:end="19:26">i</name></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="20:10" pos:end="22:9">else<block pos:start="20:14" pos:end="22:9">{<block_content pos:start="21:13" pos:end="21:49">
            <expr_stmt pos:start="21:13" pos:end="21:49"><expr pos:start="21:13" pos:end="21:48"><name pos:start="21:13" pos:end="21:18">result</name> <operator pos:start="21:20" pos:end="21:21">+=</operator> <operator pos:start="21:23" pos:end="21:23">(</operator><name pos:start="21:24" pos:end="21:27">len1</name> <operator pos:start="21:29" pos:end="21:29">-</operator> <name pos:start="21:31" pos:end="21:31">i</name><operator pos:start="21:32" pos:end="21:32">)</operator> <operator pos:start="21:34" pos:end="21:34">*</operator> <operator pos:start="21:36" pos:end="21:36">(</operator><name pos:start="21:37" pos:end="21:41"><name pos:start="21:37" pos:end="21:38">s1</name><index pos:start="21:39" pos:end="21:41">[<expr pos:start="21:40" pos:end="21:40"><name pos:start="21:40" pos:end="21:40">i</name></expr>]</index></name> <operator pos:start="21:43" pos:end="21:43">-</operator> <literal type="string" pos:start="21:45" pos:end="21:47">"0"</literal><operator pos:start="21:48" pos:end="21:48">)</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    
    <decl_stmt pos:start="25:5" pos:end="25:27"><decl pos:start="25:5" pos:end="25:26"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">ans</name> <init pos:start="25:13" pos:end="25:26">= <expr pos:start="25:15" pos:end="25:26"><name pos:start="25:15" pos:end="25:17">rel</name> <operator pos:start="25:19" pos:end="25:19">-</operator> <name pos:start="25:21" pos:end="25:26">result</name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="26:5" pos:end="30:5"><if pos:start="26:5" pos:end="28:5">if<condition pos:start="26:7" pos:end="26:58">(<expr pos:start="26:8" pos:end="26:57"><name pos:start="26:8" pos:end="26:10">ans</name> <operator pos:start="26:12" pos:end="26:12">/</operator> <name pos:start="26:14" pos:end="26:16">num</name> <operator pos:start="26:18" pos:end="26:19">&gt;=</operator> <literal type="number" pos:start="26:21" pos:end="26:21">0</literal> <operator pos:start="26:23" pos:end="26:24">&amp;&amp;</operator> <name pos:start="26:26" pos:end="26:28">ans</name> <operator pos:start="26:30" pos:end="26:30">/</operator> <name pos:start="26:32" pos:end="26:34">num</name> <operator pos:start="26:36" pos:end="26:37">&lt;=</operator> <literal type="number" pos:start="26:39" pos:end="26:39">9</literal> <operator pos:start="26:41" pos:end="26:42">&amp;&amp;</operator> <name pos:start="26:44" pos:end="26:46">ans</name> <operator pos:start="26:48" pos:end="26:48">%</operator> <name pos:start="26:50" pos:end="26:52">num</name> <operator pos:start="26:54" pos:end="26:55">==</operator> <literal type="number" pos:start="26:57" pos:end="26:57">0</literal></expr>)</condition><block pos:start="26:59" pos:end="28:5">{<block_content pos:start="27:9" pos:end="27:34">
        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:12">cout</name> <operator pos:start="27:14" pos:end="27:15">&lt;&lt;</operator> <name pos:start="27:17" pos:end="27:19">ans</name> <operator pos:start="27:21" pos:end="27:21">/</operator> <name pos:start="27:23" pos:end="27:25">num</name> <operator pos:start="27:27" pos:end="27:28">&lt;&lt;</operator> <name pos:start="27:30" pos:end="27:33">endl</name></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="28:6" pos:end="30:5">else<block pos:start="28:10" pos:end="30:5">{<block_content pos:start="29:9" pos:end="29:23">
        <expr_stmt pos:start="29:9" pos:end="29:23"><expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:12">cout</name> <operator pos:start="29:14" pos:end="29:15">&lt;&lt;</operator> <literal type="string" pos:start="29:17" pos:end="29:22">"Lier"</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    
    <return pos:start="32:5" pos:end="32:13">return <expr pos:start="32:12" pos:end="32:12"><literal type="number" pos:start="32:12" pos:end="32:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
