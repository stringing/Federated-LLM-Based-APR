<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/51/51.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:20">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<function pos:start="5:1" pos:end="39:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list> <block pos:start="5:12" pos:end="39:1">{<block_content pos:start="6:5" pos:end="38:5">
    <decl_stmt pos:start="6:5" pos:end="6:10"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:13"><expr pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">cin</name> <operator pos:start="7:9" pos:end="7:10">&gt;&gt;</operator> <name pos:start="7:12" pos:end="7:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:14"><expr pos:start="8:5" pos:end="8:13"><call pos:start="8:5" pos:end="8:13"><name pos:start="8:5" pos:end="8:11">getchar</name><argument_list pos:start="8:12" pos:end="8:13">()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">string</name></type> <name pos:start="9:12" pos:end="9:12">s</name></decl>;</decl_stmt>
    <while pos:start="10:5" pos:end="38:5">while <condition pos:start="10:11" pos:end="10:15">(<expr pos:start="10:12" pos:end="10:14"><name pos:start="10:12" pos:end="10:12">n</name><operator pos:start="10:13" pos:end="10:14">--</operator></expr>)</condition><block pos:start="10:16" pos:end="38:5">{<block_content pos:start="11:9" pos:end="37:21">
        <expr_stmt pos:start="11:9" pos:end="11:24"><expr pos:start="11:9" pos:end="11:23"><call pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:15">getline</name><argument_list pos:start="11:16" pos:end="11:23">(<argument pos:start="11:17" pos:end="11:19"><expr pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:19">cin</name></expr></argument>, <argument pos:start="11:22" pos:end="11:22"><expr pos:start="11:22" pos:end="11:22"><name pos:start="11:22" pos:end="11:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="12:9" pos:end="12:28"><decl pos:start="12:9" pos:end="12:27"><type pos:start="12:9" pos:end="12:14"><name pos:start="12:9" pos:end="12:14">string</name></type> <name pos:start="12:16" pos:end="12:22"><name pos:start="12:16" pos:end="12:16">f</name><index pos:start="12:17" pos:end="12:22">[<expr pos:start="12:18" pos:end="12:21"><literal type="number" pos:start="12:18" pos:end="12:21">1005</literal></expr>]</index></name> <init pos:start="12:24" pos:end="12:27">= <expr pos:start="12:26" pos:end="12:27"><block pos:start="12:26" pos:end="12:27">{}</block></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="13:9" pos:end="13:18"><decl pos:start="13:9" pos:end="13:17"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">x</name> <init pos:start="13:15" pos:end="13:17">= <expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="14:9" pos:end="26:9">for <control pos:start="14:13" pos:end="14:42">(<init pos:start="14:14" pos:end="14:23"><decl pos:start="14:14" pos:end="14:22"><type pos:start="14:14" pos:end="14:16"><name pos:start="14:14" pos:end="14:16">int</name></type> <name pos:start="14:18" pos:end="14:18">i</name> <init pos:start="14:20" pos:end="14:22">= <expr pos:start="14:22" pos:end="14:22"><literal type="number" pos:start="14:22" pos:end="14:22">0</literal></expr></init></decl>;</init> <condition pos:start="14:25" pos:end="14:37"><expr pos:start="14:25" pos:end="14:36"><name pos:start="14:25" pos:end="14:25">i</name> <operator pos:start="14:27" pos:end="14:27">&lt;</operator> <call pos:start="14:29" pos:end="14:36"><name pos:start="14:29" pos:end="14:34"><name pos:start="14:29" pos:end="14:29">s</name><operator pos:start="14:30" pos:end="14:30">.</operator><name pos:start="14:31" pos:end="14:34">size</name></name><argument_list pos:start="14:35" pos:end="14:36">()</argument_list></call></expr>;</condition> <incr pos:start="14:39" pos:end="14:41"><expr pos:start="14:39" pos:end="14:41"><name pos:start="14:39" pos:end="14:39">i</name><operator pos:start="14:40" pos:end="14:41">++</operator></expr></incr>)</control> <block pos:start="14:44" pos:end="26:9">{<block_content pos:start="15:13" pos:end="25:13">
            <if_stmt pos:start="15:13" pos:end="17:13"><if pos:start="15:13" pos:end="17:13">if <condition pos:start="15:16" pos:end="15:58">(<expr pos:start="15:17" pos:end="15:57"><name pos:start="15:17" pos:end="15:20"><name pos:start="15:17" pos:end="15:17">s</name><index pos:start="15:18" pos:end="15:20">[<expr pos:start="15:19" pos:end="15:19"><name pos:start="15:19" pos:end="15:19">i</name></expr>]</index></name> <operator pos:start="15:22" pos:end="15:23">!=</operator> <literal type="char" pos:start="15:25" pos:end="15:27">'I'</literal> <operator pos:start="15:29" pos:end="15:30">&amp;&amp;</operator> <name pos:start="15:32" pos:end="15:35"><name pos:start="15:32" pos:end="15:32">s</name><index pos:start="15:33" pos:end="15:35">[<expr pos:start="15:34" pos:end="15:34"><name pos:start="15:34" pos:end="15:34">i</name></expr>]</index></name> <operator pos:start="15:37" pos:end="15:38">&gt;=</operator> <literal type="char" pos:start="15:40" pos:end="15:42">'A'</literal> <operator pos:start="15:44" pos:end="15:45">&amp;&amp;</operator> <name pos:start="15:47" pos:end="15:50"><name pos:start="15:47" pos:end="15:47">s</name><index pos:start="15:48" pos:end="15:50">[<expr pos:start="15:49" pos:end="15:49"><name pos:start="15:49" pos:end="15:49">i</name></expr>]</index></name> <operator pos:start="15:52" pos:end="15:53">&lt;=</operator> <literal type="char" pos:start="15:55" pos:end="15:57">'Z'</literal></expr>)</condition> <block pos:start="15:60" pos:end="17:13">{<block_content pos:start="16:17" pos:end="16:27">
                <expr_stmt pos:start="16:17" pos:end="16:27"><expr pos:start="16:17" pos:end="16:26"><name pos:start="16:17" pos:end="16:20"><name pos:start="16:17" pos:end="16:17">s</name><index pos:start="16:18" pos:end="16:20">[<expr pos:start="16:19" pos:end="16:19"><name pos:start="16:19" pos:end="16:19">i</name></expr>]</index></name> <operator pos:start="16:22" pos:end="16:23">+=</operator> <literal type="number" pos:start="16:25" pos:end="16:26">32</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="18:13" pos:end="20:13"><if pos:start="18:13" pos:end="20:13">if <condition pos:start="18:16" pos:end="18:28">(<expr pos:start="18:17" pos:end="18:27"><name pos:start="18:17" pos:end="18:20"><name pos:start="18:17" pos:end="18:17">s</name><index pos:start="18:18" pos:end="18:20">[<expr pos:start="18:19" pos:end="18:19"><name pos:start="18:19" pos:end="18:19">i</name></expr>]</index></name> <operator pos:start="18:22" pos:end="18:23">==</operator> <literal type="char" pos:start="18:25" pos:end="18:27">'?'</literal></expr>)</condition> <block pos:start="18:30" pos:end="20:13">{<block_content pos:start="19:17" pos:end="19:28">
                <expr_stmt pos:start="19:17" pos:end="19:28"><expr pos:start="19:17" pos:end="19:27"><name pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:17">s</name><index pos:start="19:18" pos:end="19:20">[<expr pos:start="19:19" pos:end="19:19"><name pos:start="19:19" pos:end="19:19">i</name></expr>]</index></name> <operator pos:start="19:22" pos:end="19:23">==</operator> <literal type="char" pos:start="19:25" pos:end="19:27">'!'</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="21:13" pos:end="25:13"><if pos:start="21:13" pos:end="23:13">if <condition pos:start="21:16" pos:end="21:28">(<expr pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:20"><name pos:start="21:17" pos:end="21:17">s</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><name pos:start="21:19" pos:end="21:19">i</name></expr>]</index></name> <operator pos:start="21:22" pos:end="21:23">==</operator> <literal type="char" pos:start="21:25" pos:end="21:27">' '</literal></expr>)</condition> <block pos:start="21:30" pos:end="23:13">{<block_content pos:start="22:17" pos:end="22:29">
                <expr_stmt pos:start="22:17" pos:end="22:29"><expr pos:start="22:17" pos:end="22:28"><name pos:start="22:17" pos:end="22:20"><name pos:start="22:17" pos:end="22:17">f</name><index pos:start="22:18" pos:end="22:20">[<expr pos:start="22:19" pos:end="22:19"><name pos:start="22:19" pos:end="22:19">x</name></expr>]</index></name> <operator pos:start="22:22" pos:end="22:23">+=</operator> <name pos:start="22:25" pos:end="22:28"><name pos:start="22:25" pos:end="22:25">s</name><index pos:start="22:26" pos:end="22:28">[<expr pos:start="22:27" pos:end="22:27"><name pos:start="22:27" pos:end="22:27">i</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="23:15" pos:end="25:13">else <block pos:start="23:20" pos:end="25:13">{<block_content pos:start="24:17" pos:end="24:20">
                <expr_stmt pos:start="24:17" pos:end="24:20"><expr pos:start="24:17" pos:end="24:19"><name pos:start="24:17" pos:end="24:17">x</name><operator pos:start="24:18" pos:end="24:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
        <for pos:start="27:9" pos:end="36:9">for <control pos:start="27:13" pos:end="27:36">(<init pos:start="27:14" pos:end="27:23"><decl pos:start="27:14" pos:end="27:22"><type pos:start="27:14" pos:end="27:16"><name pos:start="27:14" pos:end="27:16">int</name></type> <name pos:start="27:18" pos:end="27:18">i</name> <init pos:start="27:20" pos:end="27:22">= <expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr></init></decl>;</init> <condition pos:start="27:25" pos:end="27:31"><expr pos:start="27:25" pos:end="27:30"><name pos:start="27:25" pos:end="27:25">i</name> <operator pos:start="27:27" pos:end="27:28">&lt;=</operator> <name pos:start="27:30" pos:end="27:30">x</name></expr>;</condition> <incr pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:33">i</name><operator pos:start="27:34" pos:end="27:35">++</operator></expr></incr>)</control> <block pos:start="27:38" pos:end="36:9">{<block_content pos:start="28:13" pos:end="35:13">
            <if_stmt pos:start="28:13" pos:end="35:13"><if pos:start="28:13" pos:end="31:13">if<condition pos:start="28:15" pos:end="28:69">(<expr pos:start="28:16" pos:end="28:68"><operator pos:start="28:16" pos:end="28:16">(</operator><name pos:start="28:17" pos:end="28:20"><name pos:start="28:17" pos:end="28:17">f</name><index pos:start="28:18" pos:end="28:20">[<expr pos:start="28:19" pos:end="28:19"><name pos:start="28:19" pos:end="28:19">i</name></expr>]</index></name> <operator pos:start="28:22" pos:end="28:23">==</operator> <literal type="string" pos:start="28:25" pos:end="28:29">"can"</literal> <operator pos:start="28:31" pos:end="28:32">||</operator> <name pos:start="28:34" pos:end="28:37"><name pos:start="28:34" pos:end="28:34">f</name><index pos:start="28:35" pos:end="28:37">[<expr pos:start="28:36" pos:end="28:36"><name pos:start="28:36" pos:end="28:36">i</name></expr>]</index></name> <operator pos:start="28:39" pos:end="28:40">==</operator> <literal type="string" pos:start="28:42" pos:end="28:48">"could"</literal><operator pos:start="28:49" pos:end="28:49">)</operator> <operator pos:start="28:51" pos:end="28:52">&amp;&amp;</operator> <name pos:start="28:54" pos:end="28:59"><name pos:start="28:54" pos:end="28:54">f</name><index pos:start="28:55" pos:end="28:59">[<expr pos:start="28:56" pos:end="28:58"><name pos:start="28:56" pos:end="28:56">i</name><operator pos:start="28:57" pos:end="28:57">+</operator><literal type="number" pos:start="28:58" pos:end="28:58">1</literal></expr>]</index></name> <operator pos:start="28:61" pos:end="28:62">==</operator> <literal type="string" pos:start="28:64" pos:end="28:68">"you"</literal></expr>)</condition> <block pos:start="28:71" pos:end="31:13">{<block_content pos:start="29:17" pos:end="30:20">
                <expr_stmt pos:start="29:17" pos:end="29:44"><expr pos:start="29:17" pos:end="29:43"><name pos:start="29:17" pos:end="29:20">cout</name> <operator pos:start="29:22" pos:end="29:23">&lt;&lt;</operator> <literal type="string" pos:start="29:25" pos:end="29:28">"I "</literal> <operator pos:start="29:30" pos:end="29:31">&lt;&lt;</operator> <name pos:start="29:33" pos:end="29:36"><name pos:start="29:33" pos:end="29:33">f</name><index pos:start="29:34" pos:end="29:36">[<expr pos:start="29:35" pos:end="29:35"><name pos:start="29:35" pos:end="29:35">i</name></expr>]</index></name> <operator pos:start="29:38" pos:end="29:39">&lt;&lt;</operator> <literal type="string" pos:start="29:41" pos:end="29:43">" "</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="30:17" pos:end="30:20"><expr pos:start="30:17" pos:end="30:19"><name pos:start="30:17" pos:end="30:17">i</name><operator pos:start="30:18" pos:end="30:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="31:15" pos:end="33:13">else if <condition pos:start="31:23" pos:end="31:51">(<expr pos:start="31:24" pos:end="31:50"><name pos:start="31:24" pos:end="31:27"><name pos:start="31:24" pos:end="31:24">f</name><index pos:start="31:25" pos:end="31:27">[<expr pos:start="31:26" pos:end="31:26"><name pos:start="31:26" pos:end="31:26">i</name></expr>]</index></name> <operator pos:start="31:29" pos:end="31:30">==</operator> <literal type="string" pos:start="31:32" pos:end="31:34">"I"</literal> <operator pos:start="31:36" pos:end="31:37">||</operator> <name pos:start="31:39" pos:end="31:42"><name pos:start="31:39" pos:end="31:39">f</name><index pos:start="31:40" pos:end="31:42">[<expr pos:start="31:41" pos:end="31:41"><name pos:start="31:41" pos:end="31:41">i</name></expr>]</index></name> <operator pos:start="31:44" pos:end="31:45">==</operator> <literal type="string" pos:start="31:47" pos:end="31:50">"me"</literal></expr>)</condition> <block pos:start="31:53" pos:end="33:13">{<block_content pos:start="32:17" pos:end="32:32">
                <expr_stmt pos:start="32:17" pos:end="32:32"><expr pos:start="32:17" pos:end="32:30"><name pos:start="32:17" pos:end="32:20">cout</name> <operator pos:start="32:22" pos:end="32:23">&lt;&lt;</operator> <literal type="string" pos:start="32:25" pos:end="32:30">"you "</literal></expr> ;</expr_stmt>
            </block_content>}</block></if> <else pos:start="33:15" pos:end="35:13">else <block pos:start="33:20" pos:end="35:13">{<block_content pos:start="34:17" pos:end="34:37">
                <expr_stmt pos:start="34:17" pos:end="34:37"><expr pos:start="34:17" pos:end="34:35"><name pos:start="34:17" pos:end="34:20">cout</name> <operator pos:start="34:22" pos:end="34:23">&lt;&lt;</operator> <name pos:start="34:25" pos:end="34:28"><name pos:start="34:25" pos:end="34:25">f</name><index pos:start="34:26" pos:end="34:28">[<expr pos:start="34:27" pos:end="34:27"><name pos:start="34:27" pos:end="34:27">i</name></expr>]</index></name> <operator pos:start="34:30" pos:end="34:31">&lt;&lt;</operator> <literal type="string" pos:start="34:33" pos:end="34:35">" "</literal></expr> ;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="37:9" pos:end="37:21"><expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:12">cout</name> <operator pos:start="37:14" pos:end="37:15">&lt;&lt;</operator> <name pos:start="37:17" pos:end="37:20">endl</name></expr>;</expr_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>
</unit>
