<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/680/680.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:22"><decl pos:start="3:1" pos:end="3:21"><type pos:start="3:1" pos:end="3:19"><name pos:start="3:1" pos:end="3:19"><name pos:start="3:1" pos:end="3:3">map</name><argument_list type="generic" pos:start="3:4" pos:end="3:19">&lt;<argument pos:start="3:5" pos:end="3:10"><expr pos:start="3:5" pos:end="3:10"><name pos:start="3:5" pos:end="3:10">string</name></expr></argument>, <argument pos:start="3:13" pos:end="3:18"><expr pos:start="3:13" pos:end="3:18"><name pos:start="3:13" pos:end="3:18">string</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="3:21" pos:end="3:21">m</name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="32:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">void</name></type> <name pos:start="4:6" pos:end="4:9">init</name><parameter_list pos:start="4:10" pos:end="4:11">()</parameter_list> <block pos:start="4:13" pos:end="32:1">{<block_content pos:start="5:5" pos:end="31:11">
    <expr_stmt pos:start="5:5" pos:end="5:24"><expr pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:5">m</name><index pos:start="5:6" pos:end="5:17">[<expr pos:start="5:7" pos:end="5:16"><literal type="string" pos:start="5:7" pos:end="5:16">"10100000"</literal></expr>]</index></name> <operator pos:start="5:19" pos:end="5:19">=</operator> <literal type="string" pos:start="5:21" pos:end="5:23">"A"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:24"><expr pos:start="6:5" pos:end="6:23"><name pos:start="6:5" pos:end="6:17"><name pos:start="6:5" pos:end="6:5">m</name><index pos:start="6:6" pos:end="6:17">[<expr pos:start="6:7" pos:end="6:16"><literal type="string" pos:start="6:7" pos:end="6:16">"10100001"</literal></expr>]</index></name> <operator pos:start="6:19" pos:end="6:19">=</operator> <literal type="string" pos:start="6:21" pos:end="6:23">"B"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:24"><expr pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:5">m</name><index pos:start="7:6" pos:end="7:17">[<expr pos:start="7:7" pos:end="7:16"><literal type="string" pos:start="7:7" pos:end="7:16">"10100010"</literal></expr>]</index></name> <operator pos:start="7:19" pos:end="7:19">=</operator> <literal type="string" pos:start="7:21" pos:end="7:23">"C"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:24"><expr pos:start="8:5" pos:end="8:23"><name pos:start="8:5" pos:end="8:17"><name pos:start="8:5" pos:end="8:5">m</name><index pos:start="8:6" pos:end="8:17">[<expr pos:start="8:7" pos:end="8:16"><literal type="string" pos:start="8:7" pos:end="8:16">"10100011"</literal></expr>]</index></name> <operator pos:start="8:19" pos:end="8:19">=</operator> <literal type="string" pos:start="8:21" pos:end="8:23">"C"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:5">m</name><index pos:start="9:6" pos:end="9:17">[<expr pos:start="9:7" pos:end="9:16"><literal type="string" pos:start="9:7" pos:end="9:16">"10100100"</literal></expr>]</index></name> <operator pos:start="9:19" pos:end="9:19">=</operator> <literal type="string" pos:start="9:21" pos:end="9:23">"E"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:24"><expr pos:start="10:5" pos:end="10:23"><name pos:start="10:5" pos:end="10:17"><name pos:start="10:5" pos:end="10:5">m</name><index pos:start="10:6" pos:end="10:17">[<expr pos:start="10:7" pos:end="10:16"><literal type="string" pos:start="10:7" pos:end="10:16">"10100101"</literal></expr>]</index></name> <operator pos:start="10:19" pos:end="10:19">=</operator> <literal type="string" pos:start="10:21" pos:end="10:23">"F"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:5">m</name><index pos:start="11:6" pos:end="11:17">[<expr pos:start="11:7" pos:end="11:16"><literal type="string" pos:start="11:7" pos:end="11:16">"10100110"</literal></expr>]</index></name> <operator pos:start="11:19" pos:end="11:19">=</operator> <literal type="string" pos:start="11:21" pos:end="11:23">"G"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:24"><expr pos:start="12:5" pos:end="12:23"><name pos:start="12:5" pos:end="12:17"><name pos:start="12:5" pos:end="12:5">m</name><index pos:start="12:6" pos:end="12:17">[<expr pos:start="12:7" pos:end="12:16"><literal type="string" pos:start="12:7" pos:end="12:16">"10100111"</literal></expr>]</index></name> <operator pos:start="12:19" pos:end="12:19">=</operator> <literal type="string" pos:start="12:21" pos:end="12:23">"H"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:24"><expr pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:5">m</name><index pos:start="13:6" pos:end="13:17">[<expr pos:start="13:7" pos:end="13:16"><literal type="string" pos:start="13:7" pos:end="13:16">"10101000"</literal></expr>]</index></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <literal type="string" pos:start="13:21" pos:end="13:23">"I"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:24"><expr pos:start="14:5" pos:end="14:23"><name pos:start="14:5" pos:end="14:17"><name pos:start="14:5" pos:end="14:5">m</name><index pos:start="14:6" pos:end="14:17">[<expr pos:start="14:7" pos:end="14:16"><literal type="string" pos:start="14:7" pos:end="14:16">"10101001"</literal></expr>]</index></name> <operator pos:start="14:19" pos:end="14:19">=</operator> <literal type="string" pos:start="14:21" pos:end="14:23">"J"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:5">m</name><index pos:start="15:6" pos:end="15:17">[<expr pos:start="15:7" pos:end="15:16"><literal type="string" pos:start="15:7" pos:end="15:16">"10101010"</literal></expr>]</index></name> <operator pos:start="15:19" pos:end="15:19">=</operator> <literal type="string" pos:start="15:21" pos:end="15:23">"K"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:24"><expr pos:start="16:5" pos:end="16:23"><name pos:start="16:5" pos:end="16:17"><name pos:start="16:5" pos:end="16:5">m</name><index pos:start="16:6" pos:end="16:17">[<expr pos:start="16:7" pos:end="16:16"><literal type="string" pos:start="16:7" pos:end="16:16">"10101011"</literal></expr>]</index></name> <operator pos:start="16:19" pos:end="16:19">=</operator> <literal type="string" pos:start="16:21" pos:end="16:23">"L"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:5">m</name><index pos:start="17:6" pos:end="17:17">[<expr pos:start="17:7" pos:end="17:16"><literal type="string" pos:start="17:7" pos:end="17:16">"10101100"</literal></expr>]</index></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="string" pos:start="17:21" pos:end="17:23">"M"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:24"><expr pos:start="18:5" pos:end="18:23"><name pos:start="18:5" pos:end="18:17"><name pos:start="18:5" pos:end="18:5">m</name><index pos:start="18:6" pos:end="18:17">[<expr pos:start="18:7" pos:end="18:16"><literal type="string" pos:start="18:7" pos:end="18:16">"10101101"</literal></expr>]</index></name> <operator pos:start="18:19" pos:end="18:19">=</operator> <literal type="string" pos:start="18:21" pos:end="18:23">"N"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:5">m</name><index pos:start="19:6" pos:end="19:17">[<expr pos:start="19:7" pos:end="19:16"><literal type="string" pos:start="19:7" pos:end="19:16">"10101110"</literal></expr>]</index></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <literal type="string" pos:start="19:21" pos:end="19:23">"O"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:24"><expr pos:start="20:5" pos:end="20:23"><name pos:start="20:5" pos:end="20:17"><name pos:start="20:5" pos:end="20:5">m</name><index pos:start="20:6" pos:end="20:17">[<expr pos:start="20:7" pos:end="20:16"><literal type="string" pos:start="20:7" pos:end="20:16">"10101111"</literal></expr>]</index></name> <operator pos:start="20:19" pos:end="20:19">=</operator> <literal type="string" pos:start="20:21" pos:end="20:23">"P"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:5">m</name><index pos:start="21:6" pos:end="21:17">[<expr pos:start="21:7" pos:end="21:16"><literal type="string" pos:start="21:7" pos:end="21:16">"10110000"</literal></expr>]</index></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <literal type="string" pos:start="21:21" pos:end="21:23">"Q"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:24"><expr pos:start="22:5" pos:end="22:23"><name pos:start="22:5" pos:end="22:17"><name pos:start="22:5" pos:end="22:5">m</name><index pos:start="22:6" pos:end="22:17">[<expr pos:start="22:7" pos:end="22:16"><literal type="string" pos:start="22:7" pos:end="22:16">"10110001"</literal></expr>]</index></name> <operator pos:start="22:19" pos:end="22:19">=</operator> <literal type="string" pos:start="22:21" pos:end="22:23">"R"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:5">m</name><index pos:start="23:6" pos:end="23:17">[<expr pos:start="23:7" pos:end="23:16"><literal type="string" pos:start="23:7" pos:end="23:16">"10110010"</literal></expr>]</index></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <literal type="string" pos:start="23:21" pos:end="23:23">"S"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:24"><expr pos:start="24:5" pos:end="24:23"><name pos:start="24:5" pos:end="24:17"><name pos:start="24:5" pos:end="24:5">m</name><index pos:start="24:6" pos:end="24:17">[<expr pos:start="24:7" pos:end="24:16"><literal type="string" pos:start="24:7" pos:end="24:16">"10110011"</literal></expr>]</index></name> <operator pos:start="24:19" pos:end="24:19">=</operator> <literal type="string" pos:start="24:21" pos:end="24:23">"T"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:5">m</name><index pos:start="25:6" pos:end="25:17">[<expr pos:start="25:7" pos:end="25:16"><literal type="string" pos:start="25:7" pos:end="25:16">"10110100"</literal></expr>]</index></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="string" pos:start="25:21" pos:end="25:23">"U"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:24"><expr pos:start="26:5" pos:end="26:23"><name pos:start="26:5" pos:end="26:17"><name pos:start="26:5" pos:end="26:5">m</name><index pos:start="26:6" pos:end="26:17">[<expr pos:start="26:7" pos:end="26:16"><literal type="string" pos:start="26:7" pos:end="26:16">"10110101"</literal></expr>]</index></name> <operator pos:start="26:19" pos:end="26:19">=</operator> <literal type="string" pos:start="26:21" pos:end="26:23">"V"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:5">m</name><index pos:start="27:6" pos:end="27:17">[<expr pos:start="27:7" pos:end="27:16"><literal type="string" pos:start="27:7" pos:end="27:16">"10110110"</literal></expr>]</index></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="string" pos:start="27:21" pos:end="27:23">"W"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:24"><expr pos:start="28:5" pos:end="28:23"><name pos:start="28:5" pos:end="28:17"><name pos:start="28:5" pos:end="28:5">m</name><index pos:start="28:6" pos:end="28:17">[<expr pos:start="28:7" pos:end="28:16"><literal type="string" pos:start="28:7" pos:end="28:16">"10110111"</literal></expr>]</index></name> <operator pos:start="28:19" pos:end="28:19">=</operator> <literal type="string" pos:start="28:21" pos:end="28:23">"X"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:5">m</name><index pos:start="29:6" pos:end="29:17">[<expr pos:start="29:7" pos:end="29:16"><literal type="string" pos:start="29:7" pos:end="29:16">"10111000"</literal></expr>]</index></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <literal type="string" pos:start="29:21" pos:end="29:23">"Y"</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:24"><expr pos:start="30:5" pos:end="30:23"><name pos:start="30:5" pos:end="30:17"><name pos:start="30:5" pos:end="30:5">m</name><index pos:start="30:6" pos:end="30:17">[<expr pos:start="30:7" pos:end="30:16"><literal type="string" pos:start="30:7" pos:end="30:16">"10111001"</literal></expr>]</index></name> <operator pos:start="30:19" pos:end="30:19">=</operator> <literal type="string" pos:start="30:21" pos:end="30:23">"Z"</literal></expr>;</expr_stmt>
    <return pos:start="31:5" pos:end="31:11">return;</return>
</block_content>}</block></function>
<function pos:start="33:1" pos:end="45:1"><type pos:start="33:1" pos:end="33:3"><name pos:start="33:1" pos:end="33:3">int</name></type> <name pos:start="33:5" pos:end="33:12">StrToInt</name><parameter_list pos:start="33:13" pos:end="33:22">(<parameter pos:start="33:14" pos:end="33:21"><decl pos:start="33:14" pos:end="33:21"><type pos:start="33:14" pos:end="33:19"><name pos:start="33:14" pos:end="33:19">string</name></type> <name pos:start="33:21" pos:end="33:21">s</name></decl></parameter>)</parameter_list> <block pos:start="33:24" pos:end="45:1">{<block_content pos:start="34:5" pos:end="44:15">
    <decl_stmt pos:start="34:5" pos:end="34:25"><decl pos:start="34:5" pos:end="34:15"><type pos:start="34:5" pos:end="34:7"><name pos:start="34:5" pos:end="34:7">int</name></type> <name pos:start="34:9" pos:end="34:11">bin</name> <init pos:start="34:13" pos:end="34:15">= <expr pos:start="34:15" pos:end="34:15"><literal type="number" pos:start="34:15" pos:end="34:15">0</literal></expr></init></decl>, <decl pos:start="34:18" pos:end="34:24"><type ref="prev" pos:start="34:5" pos:end="34:7"/><name pos:start="34:18" pos:end="34:20">dec</name> <init pos:start="34:22" pos:end="34:24">= <expr pos:start="34:24" pos:end="34:24"><literal type="number" pos:start="34:24" pos:end="34:24">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="35:5" pos:end="37:5">for <control pos:start="35:9" pos:end="35:38">(<init pos:start="35:10" pos:end="35:19"><decl pos:start="35:10" pos:end="35:18"><type pos:start="35:10" pos:end="35:12"><name pos:start="35:10" pos:end="35:12">int</name></type> <name pos:start="35:14" pos:end="35:14">i</name> <init pos:start="35:16" pos:end="35:18">= <expr pos:start="35:18" pos:end="35:18"><literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr></init></decl>;</init> <condition pos:start="35:21" pos:end="35:33"><expr pos:start="35:21" pos:end="35:32"><name pos:start="35:21" pos:end="35:21">i</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <call pos:start="35:25" pos:end="35:32"><name pos:start="35:25" pos:end="35:30"><name pos:start="35:25" pos:end="35:25">s</name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:30">size</name></name><argument_list pos:start="35:31" pos:end="35:32">()</argument_list></call></expr>;</condition> <incr pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:35">i</name><operator pos:start="35:36" pos:end="35:37">++</operator></expr></incr>)</control> <block pos:start="35:40" pos:end="37:5">{<block_content pos:start="36:9" pos:end="36:38">
        <expr_stmt pos:start="36:9" pos:end="36:38"><expr pos:start="36:9" pos:end="36:37"><name pos:start="36:9" pos:end="36:11">bin</name> <operator pos:start="36:13" pos:end="36:13">=</operator> <name pos:start="36:15" pos:end="36:17">bin</name> <operator pos:start="36:19" pos:end="36:19">*</operator> <literal type="number" pos:start="36:21" pos:end="36:24">10</literal> <operator pos:start="36:24" pos:end="36:24">+</operator> <operator pos:start="36:26" pos:end="36:26">(</operator><name pos:start="36:27" pos:end="36:30"><name pos:start="36:27" pos:end="36:27">s</name><index pos:start="36:28" pos:end="36:30">[<expr pos:start="36:29" pos:end="36:29"><name pos:start="36:29" pos:end="36:29">i</name></expr>]</index></name> <operator pos:start="36:32" pos:end="36:32">-</operator> <literal type="char" pos:start="36:34" pos:end="36:36">'0'</literal><operator pos:start="36:37" pos:end="36:37">)</operator></expr>;</expr_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="38:5" pos:end="38:14"><decl pos:start="38:5" pos:end="38:13"><type pos:start="38:5" pos:end="38:7"><name pos:start="38:5" pos:end="38:7">int</name></type> <name pos:start="38:9" pos:end="38:9">i</name> <init pos:start="38:11" pos:end="38:13">= <expr pos:start="38:13" pos:end="38:13"><literal type="number" pos:start="38:13" pos:end="38:13">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="39:5" pos:end="43:5">while <condition pos:start="39:11" pos:end="39:20">(<expr pos:start="39:12" pos:end="39:19"><name pos:start="39:12" pos:end="39:14">bin</name> <operator pos:start="39:16" pos:end="39:17">!=</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>)</condition> <block pos:start="39:22" pos:end="43:5">{<block_content pos:start="40:9" pos:end="42:31">
        <decl_stmt pos:start="40:9" pos:end="40:25"><decl pos:start="40:9" pos:end="40:24"><type pos:start="40:9" pos:end="40:11"><name pos:start="40:9" pos:end="40:11">int</name></type> <name pos:start="40:13" pos:end="40:13">m</name> <init pos:start="40:15" pos:end="40:24">= <expr pos:start="40:17" pos:end="40:24"><name pos:start="40:17" pos:end="40:19">bin</name> <operator pos:start="40:21" pos:end="40:21">%</operator> <literal type="number" pos:start="40:23" pos:end="40:24">10</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="41:9" pos:end="41:18"><expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:11">bin</name> <operator pos:start="41:13" pos:end="41:14">/=</operator> <literal type="number" pos:start="41:16" pos:end="41:17">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="42:9" pos:end="42:31"><expr pos:start="42:9" pos:end="42:30"><name pos:start="42:9" pos:end="42:11">dec</name> <operator pos:start="42:13" pos:end="42:14">+=</operator> <name pos:start="42:16" pos:end="42:16">m</name> <operator pos:start="42:18" pos:end="42:18">*</operator> <call pos:start="42:20" pos:end="42:30"><name pos:start="42:20" pos:end="42:22">pow</name><argument_list pos:start="42:23" pos:end="42:30">(<argument pos:start="42:24" pos:end="42:24"><expr pos:start="42:24" pos:end="42:24"><literal type="number" pos:start="42:24" pos:end="42:24">2</literal></expr></argument>, <argument pos:start="42:27" pos:end="42:29"><expr pos:start="42:27" pos:end="42:29"><name pos:start="42:27" pos:end="42:27">i</name><operator pos:start="42:28" pos:end="42:29">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="44:5" pos:end="44:15">return <expr pos:start="44:12" pos:end="44:14"><name pos:start="44:12" pos:end="44:14">dec</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="46:1" pos:end="55:1"><type pos:start="46:1" pos:end="46:6"><name pos:start="46:1" pos:end="46:6">string</name></type> <name pos:start="46:8" pos:end="46:15">IntToStr</name><parameter_list pos:start="46:16" pos:end="46:22">(<parameter pos:start="46:17" pos:end="46:21"><decl pos:start="46:17" pos:end="46:21"><type pos:start="46:17" pos:end="46:19"><name pos:start="46:17" pos:end="46:19">int</name></type> <name pos:start="46:21" pos:end="46:21">n</name></decl></parameter>)</parameter_list> <block pos:start="46:24" pos:end="55:1">{<block_content pos:start="47:5" pos:end="54:13">
    <decl_stmt pos:start="47:5" pos:end="47:18"><decl pos:start="47:5" pos:end="47:17"><type pos:start="47:5" pos:end="47:10"><name pos:start="47:5" pos:end="47:10">string</name></type> <name pos:start="47:12" pos:end="47:12">s</name> <init pos:start="47:14" pos:end="47:17">= <expr pos:start="47:16" pos:end="47:17"><literal type="string" pos:start="47:16" pos:end="47:17">""</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="48:5" pos:end="53:5">while <condition pos:start="48:11" pos:end="48:13">(<expr pos:start="48:12" pos:end="48:12"><name pos:start="48:12" pos:end="48:12">n</name></expr>)</condition> <block pos:start="48:15" pos:end="53:5">{<block_content pos:start="49:9" pos:end="52:16">
        <decl_stmt pos:start="49:9" pos:end="49:24"><decl pos:start="49:9" pos:end="49:23"><type pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:14">string</name></type> <name pos:start="49:16" pos:end="49:18">tmp</name> <init pos:start="49:20" pos:end="49:23">= <expr pos:start="49:22" pos:end="49:23"><literal type="string" pos:start="49:22" pos:end="49:23">""</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="50:9" pos:end="50:36"><expr pos:start="50:9" pos:end="50:35"><name pos:start="50:9" pos:end="50:14"><name pos:start="50:9" pos:end="50:11">tmp</name><index pos:start="50:12" pos:end="50:14">[<expr pos:start="50:13" pos:end="50:13"><literal type="number" pos:start="50:13" pos:end="50:13">0</literal></expr>]</index></name> <operator pos:start="50:16" pos:end="50:16">=</operator> <operator pos:start="50:18" pos:end="50:18">(</operator><name pos:start="50:19" pos:end="50:22">char</name><operator pos:start="50:23" pos:end="50:23">)</operator><name pos:start="50:24" pos:end="50:24">n</name> <operator pos:start="50:26" pos:end="50:26">%</operator> <literal type="number" pos:start="50:28" pos:end="50:31">10</literal> <operator pos:start="50:31" pos:end="50:31">+</operator> <literal type="char" pos:start="50:33" pos:end="50:35">'0'</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="51:9" pos:end="51:32"><expr pos:start="51:9" pos:end="51:31"><call pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:10">.</operator><name pos:start="51:11" pos:end="51:16">insert</name></name><argument_list pos:start="51:17" pos:end="51:31">(<argument pos:start="51:18" pos:end="51:25"><expr pos:start="51:18" pos:end="51:25"><call pos:start="51:18" pos:end="51:25"><name pos:start="51:18" pos:end="51:23"><name pos:start="51:18" pos:end="51:18">s</name><operator pos:start="51:19" pos:end="51:19">.</operator><name pos:start="51:20" pos:end="51:23">size</name></name><argument_list pos:start="51:24" pos:end="51:25">()</argument_list></call></expr></argument>, <argument pos:start="51:28" pos:end="51:30"><expr pos:start="51:28" pos:end="51:30"><name pos:start="51:28" pos:end="51:30">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="52:9" pos:end="52:16"><expr pos:start="52:9" pos:end="52:15"><name pos:start="52:9" pos:end="52:9">n</name> <operator pos:start="52:11" pos:end="52:12">/=</operator> <literal type="number" pos:start="52:14" pos:end="52:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="54:5" pos:end="54:13">return <expr pos:start="54:12" pos:end="54:12"><name pos:start="54:12" pos:end="54:12">s</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="56:1" pos:end="94:1"><type pos:start="56:1" pos:end="56:3"><name pos:start="56:1" pos:end="56:3">int</name></type> <name pos:start="56:5" pos:end="56:8">main</name><parameter_list pos:start="56:9" pos:end="56:10">()</parameter_list> <block pos:start="56:12" pos:end="94:1">{<block_content pos:start="57:5" pos:end="93:24">
    <expr_stmt pos:start="57:5" pos:end="57:42"><expr pos:start="57:5" pos:end="57:41"><call pos:start="57:5" pos:end="57:41"><name pos:start="57:5" pos:end="57:11">freopen</name><argument_list pos:start="57:12" pos:end="57:41">(<argument pos:start="57:13" pos:end="57:28"><expr pos:start="57:13" pos:end="57:28"><literal type="string" pos:start="57:13" pos:end="57:28">"information.in"</literal></expr></argument>, <argument pos:start="57:31" pos:end="57:33"><expr pos:start="57:31" pos:end="57:33"><literal type="string" pos:start="57:31" pos:end="57:33">"r"</literal></expr></argument>, <argument pos:start="57:36" pos:end="57:40"><expr pos:start="57:36" pos:end="57:40"><name pos:start="57:36" pos:end="57:40">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="58:5" pos:end="58:44"><expr pos:start="58:5" pos:end="58:43"><call pos:start="58:5" pos:end="58:43"><name pos:start="58:5" pos:end="58:11">freopen</name><argument_list pos:start="58:12" pos:end="58:43">(<argument pos:start="58:13" pos:end="58:29"><expr pos:start="58:13" pos:end="58:29"><literal type="string" pos:start="58:13" pos:end="58:29">"information.out"</literal></expr></argument>, <argument pos:start="58:32" pos:end="58:34"><expr pos:start="58:32" pos:end="58:34"><literal type="string" pos:start="58:32" pos:end="58:34">"w"</literal></expr></argument>, <argument pos:start="58:37" pos:end="58:42"><expr pos:start="58:37" pos:end="58:42"><name pos:start="58:37" pos:end="58:42">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="59:5" pos:end="59:11"><expr pos:start="59:5" pos:end="59:10"><call pos:start="59:5" pos:end="59:10"><name pos:start="59:5" pos:end="59:8">init</name><argument_list pos:start="59:9" pos:end="59:10">()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="60:5" pos:end="60:23"><decl pos:start="60:5" pos:end="60:12"><type pos:start="60:5" pos:end="60:10"><name pos:start="60:5" pos:end="60:10">string</name></type> <name pos:start="60:12" pos:end="60:12">s</name></decl>, <decl pos:start="60:15" pos:end="60:22"><type ref="prev" pos:start="60:5" pos:end="60:10"/><name pos:start="60:15" pos:end="60:17">ans</name> <init pos:start="60:19" pos:end="60:22">= <expr pos:start="60:21" pos:end="60:22"><literal type="string" pos:start="60:21" pos:end="60:22">""</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="61:5" pos:end="61:13"><expr pos:start="61:5" pos:end="61:12"><name pos:start="61:5" pos:end="61:7">cin</name> <operator pos:start="61:9" pos:end="61:10">&gt;&gt;</operator> <name pos:start="61:12" pos:end="61:12">s</name></expr>;</expr_stmt>
    <if_stmt pos:start="62:5" pos:end="65:5"><if pos:start="62:5" pos:end="65:5">if <condition pos:start="62:8" pos:end="62:26">(<expr pos:start="62:9" pos:end="62:25"><call pos:start="62:9" pos:end="62:16"><name pos:start="62:9" pos:end="62:14"><name pos:start="62:9" pos:end="62:9">s</name><operator pos:start="62:10" pos:end="62:10">.</operator><name pos:start="62:11" pos:end="62:14">size</name></name><argument_list pos:start="62:15" pos:end="62:16">()</argument_list></call> <operator pos:start="62:18" pos:end="62:18">%</operator> <literal type="number" pos:start="62:20" pos:end="62:20">8</literal> <operator pos:start="62:22" pos:end="62:23">!=</operator> <literal type="number" pos:start="62:25" pos:end="62:25">0</literal></expr>)</condition> <block pos:start="62:28" pos:end="65:5">{<block_content pos:start="63:9" pos:end="64:17">
        <expr_stmt pos:start="63:9" pos:end="63:32"><expr pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:12">cout</name> <operator pos:start="63:14" pos:end="63:15">&lt;&lt;</operator> <literal type="string" pos:start="63:17" pos:end="63:23">"Error"</literal> <operator pos:start="63:25" pos:end="63:26">&lt;&lt;</operator> <name pos:start="63:28" pos:end="63:31">endl</name></expr>;</expr_stmt>
        <return pos:start="64:9" pos:end="64:17">return <expr pos:start="64:16" pos:end="64:16"><literal type="number" pos:start="64:16" pos:end="64:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="66:5" pos:end="92:5">for <control pos:start="66:9" pos:end="66:41">(<init pos:start="66:10" pos:end="66:19"><decl pos:start="66:10" pos:end="66:18"><type pos:start="66:10" pos:end="66:12"><name pos:start="66:10" pos:end="66:12">int</name></type> <name pos:start="66:14" pos:end="66:14">i</name> <init pos:start="66:16" pos:end="66:18">= <expr pos:start="66:18" pos:end="66:18"><literal type="number" pos:start="66:18" pos:end="66:18">0</literal></expr></init></decl>;</init> <condition pos:start="66:21" pos:end="66:33"><expr pos:start="66:21" pos:end="66:32"><name pos:start="66:21" pos:end="66:21">i</name> <operator pos:start="66:23" pos:end="66:23">&lt;</operator> <call pos:start="66:25" pos:end="66:32"><name pos:start="66:25" pos:end="66:30"><name pos:start="66:25" pos:end="66:25">s</name><operator pos:start="66:26" pos:end="66:26">.</operator><name pos:start="66:27" pos:end="66:30">size</name></name><argument_list pos:start="66:31" pos:end="66:32">()</argument_list></call></expr>;</condition> <incr pos:start="66:35" pos:end="66:40"><expr pos:start="66:35" pos:end="66:40"><name pos:start="66:35" pos:end="66:35">i</name> <operator pos:start="66:37" pos:end="66:38">+=</operator> <literal type="number" pos:start="66:40" pos:end="66:40">8</literal></expr></incr>)</control> <block pos:start="66:43" pos:end="92:5">{<block_content pos:start="67:9" pos:end="91:9">
        <if_stmt pos:start="67:9" pos:end="91:9"><if pos:start="67:9" pos:end="80:9">if <condition pos:start="67:12" pos:end="67:24">(<expr pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:16"><name pos:start="67:13" pos:end="67:13">s</name><index pos:start="67:14" pos:end="67:16">[<expr pos:start="67:15" pos:end="67:15"><name pos:start="67:15" pos:end="67:15">i</name></expr>]</index></name> <operator pos:start="67:18" pos:end="67:19">==</operator> <literal type="char" pos:start="67:21" pos:end="67:23">'1'</literal></expr>)</condition> <block pos:start="67:26" pos:end="80:9">{<block_content pos:start="68:13" pos:end="79:13">
            <if_stmt pos:start="68:13" pos:end="79:13"><if pos:start="68:13" pos:end="74:13">if <condition pos:start="68:16" pos:end="68:51">(<expr pos:start="68:17" pos:end="68:50"><name pos:start="68:17" pos:end="68:24"><name pos:start="68:17" pos:end="68:17">s</name><index pos:start="68:18" pos:end="68:24">[<expr pos:start="68:19" pos:end="68:23"><name pos:start="68:19" pos:end="68:19">i</name> <operator pos:start="68:21" pos:end="68:21">+</operator> <literal type="number" pos:start="68:23" pos:end="68:23">1</literal></expr>]</index></name> <operator pos:start="68:26" pos:end="68:27">==</operator> <literal type="char" pos:start="68:29" pos:end="68:31">'0'</literal> <operator pos:start="68:33" pos:end="68:34">&amp;&amp;</operator> <name pos:start="68:36" pos:end="68:43"><name pos:start="68:36" pos:end="68:36">s</name><index pos:start="68:37" pos:end="68:43">[<expr pos:start="68:38" pos:end="68:42"><name pos:start="68:38" pos:end="68:38">i</name> <operator pos:start="68:40" pos:end="68:40">+</operator> <literal type="number" pos:start="68:42" pos:end="68:42">2</literal></expr>]</index></name> <operator pos:start="68:45" pos:end="68:46">==</operator> <literal type="char" pos:start="68:48" pos:end="68:50">'1'</literal></expr>)</condition> <block pos:start="68:53" pos:end="74:13">{<block_content pos:start="69:17" pos:end="73:58">
                <if_stmt pos:start="69:17" pos:end="72:17"><if pos:start="69:17" pos:end="72:17">if <condition pos:start="69:20" pos:end="69:44">(<expr pos:start="69:21" pos:end="69:43"><name pos:start="69:21" pos:end="69:37"><name pos:start="69:21" pos:end="69:21">m</name><index pos:start="69:22" pos:end="69:37">[<expr pos:start="69:23" pos:end="69:36"><call pos:start="69:23" pos:end="69:36"><name pos:start="69:23" pos:end="69:30"><name pos:start="69:23" pos:end="69:23">s</name><operator pos:start="69:24" pos:end="69:24">.</operator><name pos:start="69:25" pos:end="69:30">substr</name></name><argument_list pos:start="69:31" pos:end="69:36">(<argument pos:start="69:32" pos:end="69:32"><expr pos:start="69:32" pos:end="69:32"><name pos:start="69:32" pos:end="69:32">i</name></expr></argument>, <argument pos:start="69:35" pos:end="69:35"><expr pos:start="69:35" pos:end="69:35"><literal type="number" pos:start="69:35" pos:end="69:35">8</literal></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="69:39" pos:end="69:39">&lt;</operator> <literal type="string" pos:start="69:41" pos:end="69:43">"A"</literal></expr>)</condition> <block pos:start="69:46" pos:end="72:17">{<block_content pos:start="70:21" pos:end="71:29">
                    <expr_stmt pos:start="70:21" pos:end="70:44"><expr pos:start="70:21" pos:end="70:43"><name pos:start="70:21" pos:end="70:24">cout</name> <operator pos:start="70:26" pos:end="70:27">&lt;&lt;</operator> <literal type="string" pos:start="70:29" pos:end="70:35">"Error"</literal> <operator pos:start="70:37" pos:end="70:38">&lt;&lt;</operator> <name pos:start="70:40" pos:end="70:43">endl</name></expr>;</expr_stmt>
                    <return pos:start="71:21" pos:end="71:29">return <expr pos:start="71:28" pos:end="71:28"><literal type="number" pos:start="71:28" pos:end="71:28">0</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>
                <expr_stmt pos:start="73:17" pos:end="73:58"><expr pos:start="73:17" pos:end="73:57"><call pos:start="73:17" pos:end="73:57"><name pos:start="73:17" pos:end="73:26"><name pos:start="73:17" pos:end="73:19">ans</name><operator pos:start="73:20" pos:end="73:20">.</operator><name pos:start="73:21" pos:end="73:26">insert</name></name><argument_list pos:start="73:27" pos:end="73:57">(<argument pos:start="73:28" pos:end="73:37"><expr pos:start="73:28" pos:end="73:37"><call pos:start="73:28" pos:end="73:37"><name pos:start="73:28" pos:end="73:35"><name pos:start="73:28" pos:end="73:30">ans</name><operator pos:start="73:31" pos:end="73:31">.</operator><name pos:start="73:32" pos:end="73:35">size</name></name><argument_list pos:start="73:36" pos:end="73:37">()</argument_list></call></expr></argument>, <argument pos:start="73:40" pos:end="73:56"><expr pos:start="73:40" pos:end="73:56"><name pos:start="73:40" pos:end="73:56"><name pos:start="73:40" pos:end="73:40">m</name><index pos:start="73:41" pos:end="73:56">[<expr pos:start="73:42" pos:end="73:55"><call pos:start="73:42" pos:end="73:55"><name pos:start="73:42" pos:end="73:49"><name pos:start="73:42" pos:end="73:42">s</name><operator pos:start="73:43" pos:end="73:43">.</operator><name pos:start="73:44" pos:end="73:49">substr</name></name><argument_list pos:start="73:50" pos:end="73:55">(<argument pos:start="73:51" pos:end="73:51"><expr pos:start="73:51" pos:end="73:51"><name pos:start="73:51" pos:end="73:51">i</name></expr></argument>, <argument pos:start="73:54" pos:end="73:54"><expr pos:start="73:54" pos:end="73:54"><literal type="number" pos:start="73:54" pos:end="73:54">8</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="74:15" pos:end="76:13">else if <condition pos:start="74:23" pos:end="74:58">(<expr pos:start="74:24" pos:end="74:57"><name pos:start="74:24" pos:end="74:31"><name pos:start="74:24" pos:end="74:24">s</name><index pos:start="74:25" pos:end="74:31">[<expr pos:start="74:26" pos:end="74:30"><name pos:start="74:26" pos:end="74:26">i</name> <operator pos:start="74:28" pos:end="74:28">+</operator> <literal type="number" pos:start="74:30" pos:end="74:30">1</literal></expr>]</index></name> <operator pos:start="74:33" pos:end="74:34">==</operator> <literal type="char" pos:start="74:36" pos:end="74:38">'1'</literal> <operator pos:start="74:40" pos:end="74:41">&amp;&amp;</operator> <name pos:start="74:43" pos:end="74:50"><name pos:start="74:43" pos:end="74:43">s</name><index pos:start="74:44" pos:end="74:50">[<expr pos:start="74:45" pos:end="74:49"><name pos:start="74:45" pos:end="74:45">i</name> <operator pos:start="74:47" pos:end="74:47">+</operator> <literal type="number" pos:start="74:49" pos:end="74:49">2</literal></expr>]</index></name> <operator pos:start="74:52" pos:end="74:53">==</operator> <literal type="char" pos:start="74:55" pos:end="74:57">'1'</literal></expr>)</condition> <block pos:start="74:60" pos:end="76:13">{<block_content pos:start="75:17" pos:end="75:44">
                <expr_stmt pos:start="75:17" pos:end="75:44"><expr pos:start="75:17" pos:end="75:43"><call pos:start="75:17" pos:end="75:43"><name pos:start="75:17" pos:end="75:26"><name pos:start="75:17" pos:end="75:19">ans</name><operator pos:start="75:20" pos:end="75:20">.</operator><name pos:start="75:21" pos:end="75:26">insert</name></name><argument_list pos:start="75:27" pos:end="75:43">(<argument pos:start="75:28" pos:end="75:37"><expr pos:start="75:28" pos:end="75:37"><call pos:start="75:28" pos:end="75:37"><name pos:start="75:28" pos:end="75:35"><name pos:start="75:28" pos:end="75:30">ans</name><operator pos:start="75:31" pos:end="75:31">.</operator><name pos:start="75:32" pos:end="75:35">size</name></name><argument_list pos:start="75:36" pos:end="75:37">()</argument_list></call></expr></argument>, <argument pos:start="75:40" pos:end="75:42"><expr pos:start="75:40" pos:end="75:42"><literal type="string" pos:start="75:40" pos:end="75:42">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="76:15" pos:end="79:13">else <block pos:start="76:20" pos:end="79:13">{<block_content pos:start="77:17" pos:end="78:25">
                <expr_stmt pos:start="77:17" pos:end="77:40"><expr pos:start="77:17" pos:end="77:39"><name pos:start="77:17" pos:end="77:20">cout</name> <operator pos:start="77:22" pos:end="77:23">&lt;&lt;</operator> <literal type="string" pos:start="77:25" pos:end="77:31">"Error"</literal> <operator pos:start="77:33" pos:end="77:34">&lt;&lt;</operator> <name pos:start="77:36" pos:end="77:39">endl</name></expr>;</expr_stmt>
                <return pos:start="78:17" pos:end="78:25">return <expr pos:start="78:24" pos:end="78:24"><literal type="number" pos:start="78:24" pos:end="78:24">0</literal></expr>;</return>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if> <else pos:start="80:11" pos:end="91:9">else <block pos:start="80:16" pos:end="91:9">{<block_content pos:start="81:13" pos:end="90:19">
            <if_stmt pos:start="81:13" pos:end="84:13"><if pos:start="81:13" pos:end="84:13">if <condition pos:start="81:16" pos:end="81:35">(<expr pos:start="81:17" pos:end="81:34"><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">+</operator> <literal type="number" pos:start="81:21" pos:end="81:22">15</literal> <operator pos:start="81:24" pos:end="81:25">&gt;=</operator> <call pos:start="81:27" pos:end="81:34"><name pos:start="81:27" pos:end="81:32"><name pos:start="81:27" pos:end="81:27">s</name><operator pos:start="81:28" pos:end="81:28">.</operator><name pos:start="81:29" pos:end="81:32">size</name></name><argument_list pos:start="81:33" pos:end="81:34">()</argument_list></call></expr>)</condition> <block pos:start="81:37" pos:end="84:13">{<block_content pos:start="82:17" pos:end="83:25">
                <expr_stmt pos:start="82:17" pos:end="82:40"><expr pos:start="82:17" pos:end="82:39"><name pos:start="82:17" pos:end="82:20">cout</name> <operator pos:start="82:22" pos:end="82:23">&lt;&lt;</operator> <literal type="string" pos:start="82:25" pos:end="82:31">"Error"</literal> <operator pos:start="82:33" pos:end="82:34">&lt;&lt;</operator> <name pos:start="82:36" pos:end="82:39">endl</name></expr>;</expr_stmt>
                <return pos:start="83:17" pos:end="83:25">return <expr pos:start="83:24" pos:end="83:24"><literal type="number" pos:start="83:24" pos:end="83:24">0</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="85:13" pos:end="88:13"><if pos:start="85:13" pos:end="88:13">if <condition pos:start="85:16" pos:end="85:30">(<expr pos:start="85:17" pos:end="85:29"><name pos:start="85:17" pos:end="85:24"><name pos:start="85:17" pos:end="85:17">s</name><index pos:start="85:18" pos:end="85:24">[<expr pos:start="85:19" pos:end="85:23"><name pos:start="85:19" pos:end="85:19">i</name> <operator pos:start="85:21" pos:end="85:21">+</operator> <literal type="number" pos:start="85:23" pos:end="85:23">9</literal></expr>]</index></name> <operator pos:start="85:26" pos:end="85:27">==</operator> <literal type="number" pos:start="85:29" pos:end="85:29">0</literal></expr>)</condition> <block pos:start="85:32" pos:end="88:13">{<block_content pos:start="86:17" pos:end="87:25">
                <expr_stmt pos:start="86:17" pos:end="86:40"><expr pos:start="86:17" pos:end="86:39"><name pos:start="86:17" pos:end="86:20">cout</name> <operator pos:start="86:22" pos:end="86:23">&lt;&lt;</operator> <literal type="string" pos:start="86:25" pos:end="86:31">"Error"</literal> <operator pos:start="86:33" pos:end="86:34">&lt;&lt;</operator> <name pos:start="86:36" pos:end="86:39">endl</name></expr>;</expr_stmt>
                <return pos:start="87:17" pos:end="87:25">return <expr pos:start="87:24" pos:end="87:24"><literal type="number" pos:start="87:24" pos:end="87:24">0</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="89:13" pos:end="89:110"><expr pos:start="89:13" pos:end="89:109"><call pos:start="89:13" pos:end="89:109"><name pos:start="89:13" pos:end="89:22"><name pos:start="89:13" pos:end="89:15">ans</name><operator pos:start="89:16" pos:end="89:16">.</operator><name pos:start="89:17" pos:end="89:22">insert</name></name><argument_list pos:start="89:23" pos:end="89:109">(<argument pos:start="89:24" pos:end="89:33"><expr pos:start="89:24" pos:end="89:33"><call pos:start="89:24" pos:end="89:33"><name pos:start="89:24" pos:end="89:31"><name pos:start="89:24" pos:end="89:26">ans</name><operator pos:start="89:27" pos:end="89:27">.</operator><name pos:start="89:28" pos:end="89:31">size</name></name><argument_list pos:start="89:32" pos:end="89:33">()</argument_list></call></expr></argument>, <argument pos:start="89:36" pos:end="89:108"><expr pos:start="89:36" pos:end="89:108"><call pos:start="89:36" pos:end="89:108"><name pos:start="89:36" pos:end="89:43">IntToStr</name><argument_list pos:start="89:44" pos:end="89:108">(<argument pos:start="89:45" pos:end="89:107"><expr pos:start="89:45" pos:end="89:107"><call pos:start="89:45" pos:end="89:68"><name pos:start="89:45" pos:end="89:52">StrToInt</name><argument_list pos:start="89:53" pos:end="89:68">(<argument pos:start="89:54" pos:end="89:67"><expr pos:start="89:54" pos:end="89:67"><call pos:start="89:54" pos:end="89:67"><name pos:start="89:54" pos:end="89:61"><name pos:start="89:54" pos:end="89:54">s</name><operator pos:start="89:55" pos:end="89:55">.</operator><name pos:start="89:56" pos:end="89:61">substr</name></name><argument_list pos:start="89:62" pos:end="89:67">(<argument pos:start="89:63" pos:end="89:63"><expr pos:start="89:63" pos:end="89:63"><name pos:start="89:63" pos:end="89:63">i</name></expr></argument>, <argument pos:start="89:66" pos:end="89:66"><expr pos:start="89:66" pos:end="89:66"><literal type="number" pos:start="89:66" pos:end="89:66">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="89:70" pos:end="89:70">/</operator> <literal type="number" pos:start="89:72" pos:end="89:74">2</literal> <operator pos:start="89:74" pos:end="89:74">+</operator> <call pos:start="89:76" pos:end="89:103"><name pos:start="89:76" pos:end="89:83">StrToInt</name><argument_list pos:start="89:84" pos:end="89:103">(<argument pos:start="89:85" pos:end="89:102"><expr pos:start="89:85" pos:end="89:102"><call pos:start="89:85" pos:end="89:102"><name pos:start="89:85" pos:end="89:92"><name pos:start="89:85" pos:end="89:85">s</name><operator pos:start="89:86" pos:end="89:86">.</operator><name pos:start="89:87" pos:end="89:92">substr</name></name><argument_list pos:start="89:93" pos:end="89:102">(<argument pos:start="89:94" pos:end="89:98"><expr pos:start="89:94" pos:end="89:98"><name pos:start="89:94" pos:end="89:94">i</name> <operator pos:start="89:96" pos:end="89:96">+</operator> <literal type="number" pos:start="89:98" pos:end="89:98">9</literal></expr></argument>, <argument pos:start="89:101" pos:end="89:101"><expr pos:start="89:101" pos:end="89:101"><literal type="number" pos:start="89:101" pos:end="89:101">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="89:105" pos:end="89:105">/</operator> <literal type="number" pos:start="89:107" pos:end="89:107">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="90:13" pos:end="90:19"><expr pos:start="90:13" pos:end="90:18"><name pos:start="90:13" pos:end="90:13">i</name> <operator pos:start="90:15" pos:end="90:16">+=</operator> <literal type="number" pos:start="90:18" pos:end="90:18">8</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="93:5" pos:end="93:24"><expr pos:start="93:5" pos:end="93:23"><name pos:start="93:5" pos:end="93:8">cout</name> <operator pos:start="93:10" pos:end="93:11">&lt;&lt;</operator> <name pos:start="93:13" pos:end="93:15">ans</name> <operator pos:start="93:17" pos:end="93:18">&lt;&lt;</operator> <name pos:start="93:20" pos:end="93:23">endl</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
