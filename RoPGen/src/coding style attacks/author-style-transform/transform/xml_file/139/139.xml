<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/139/139.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:17">&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:15">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:15">&lt;stack&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:13">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive><cpp:file pos:start="5:9" pos:end="5:13">&lt;set&gt;</cpp:file></cpp:include>
<cpp:include pos:start="6:1" pos:end="6:13">#<cpp:directive pos:start="6:2" pos:end="6:8">include</cpp:directive><cpp:file pos:start="6:9" pos:end="6:13">&lt;map&gt;</cpp:file></cpp:include>
<cpp:include pos:start="7:1" pos:end="7:19">#<cpp:directive pos:start="7:2" pos:end="7:8">include</cpp:directive><cpp:file pos:start="7:9" pos:end="7:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="8:1" pos:end="8:15">#<cpp:directive pos:start="8:2" pos:end="8:8">include</cpp:directive><cpp:file pos:start="8:9" pos:end="8:15">&lt;queue&gt;</cpp:file></cpp:include>
<cpp:define pos:start="9:1" pos:end="9:45">#<cpp:directive pos:start="9:2" pos:end="9:7">define</cpp:directive> <cpp:macro pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:12">_for</name><parameter_list pos:start="9:13" pos:end="9:19">(<parameter pos:start="9:14" pos:end="9:14"><type pos:start="9:14" pos:end="9:14"><name pos:start="9:14" pos:end="9:14">i</name></type></parameter>,<parameter pos:start="9:16" pos:end="9:16"><type pos:start="9:16" pos:end="9:16"><name pos:start="9:16" pos:end="9:16">a</name></type></parameter>,<parameter pos:start="9:18" pos:end="9:18"><type pos:start="9:18" pos:end="9:18"><name pos:start="9:18" pos:end="9:18">b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="9:21" pos:end="9:45">for (int i=(a);i&lt;(b);i++)</cpp:value></cpp:define>
<using pos:start="10:1" pos:end="10:20">using <namespace pos:start="10:7" pos:end="10:20">namespace <name pos:start="10:17" pos:end="10:19">std</name>;</namespace></using>
<typedef pos:start="11:1" pos:end="11:26">typedef <type pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:12">pair</name><argument_list type="generic" pos:start="11:13" pos:end="11:21">&lt;<argument pos:start="11:14" pos:end="11:16"><expr pos:start="11:14" pos:end="11:16"><name pos:start="11:14" pos:end="11:16">int</name></expr></argument>,<argument pos:start="11:18" pos:end="11:20"><expr pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:20">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="11:23" pos:end="11:25">PII</name>;</typedef>
<decl_stmt pos:start="12:1" pos:end="12:41"><decl pos:start="12:1" pos:end="12:17"><type pos:start="12:1" pos:end="12:9"><specifier pos:start="12:1" pos:end="12:5">const</specifier> <name pos:start="12:7" pos:end="12:9">int</name></type> <name pos:start="12:11" pos:end="12:11">N</name><init pos:start="12:12" pos:end="12:17">=<expr pos:start="12:13" pos:end="12:17"><literal type="number" pos:start="12:13" pos:end="12:17">10005</literal></expr></init></decl>,<decl pos:start="12:19" pos:end="12:25"><type ref="prev" pos:start="12:1" pos:end="12:9"/><name pos:start="12:19" pos:end="12:19">M</name><init pos:start="12:20" pos:end="12:25">=<expr pos:start="12:21" pos:end="12:25"><literal type="number" pos:start="12:21" pos:end="12:25">21000</literal></expr></init></decl>,<decl pos:start="12:27" pos:end="12:40"><type ref="prev" pos:start="12:1" pos:end="12:9"/><name pos:start="12:27" pos:end="12:29">INF</name><init pos:start="12:30" pos:end="12:40">=<expr pos:start="12:31" pos:end="12:40"><literal type="number" pos:start="12:31" pos:end="12:40">0x3f3f3f3f</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="13:1" pos:end="13:8"><decl pos:start="13:1" pos:end="13:5"><type pos:start="13:1" pos:end="13:3"><name pos:start="13:1" pos:end="13:3">int</name></type> <name pos:start="13:5" pos:end="13:5">n</name></decl>,<decl pos:start="13:7" pos:end="13:7"><type ref="prev" pos:start="13:1" pos:end="13:3"/><name pos:start="13:7" pos:end="13:7">m</name></decl>;</decl_stmt>
<decl_stmt pos:start="14:1" pos:end="14:12"><decl pos:start="14:1" pos:end="14:11"><type pos:start="14:1" pos:end="14:6"><name pos:start="14:1" pos:end="14:6">string</name></type> <name pos:start="14:8" pos:end="14:11"><name pos:start="14:8" pos:end="14:8">a</name><index pos:start="14:9" pos:end="14:11">[<expr pos:start="14:10" pos:end="14:10"><name pos:start="14:10" pos:end="14:10">N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="15:1" pos:end="15:24"><decl pos:start="15:1" pos:end="15:8"><type pos:start="15:1" pos:end="15:3"><name pos:start="15:1" pos:end="15:3">int</name></type> <name pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:5">e</name><index pos:start="15:6" pos:end="15:8">[<expr pos:start="15:7" pos:end="15:7"><name pos:start="15:7" pos:end="15:7">M</name></expr>]</index></name></decl>,<decl pos:start="15:10" pos:end="15:14"><type ref="prev" pos:start="15:1" pos:end="15:3"/><name pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:11">ne</name><index pos:start="15:12" pos:end="15:14">[<expr pos:start="15:13" pos:end="15:13"><name pos:start="15:13" pos:end="15:13">M</name></expr>]</index></name></decl>,<decl pos:start="15:16" pos:end="15:19"><type ref="prev" pos:start="15:1" pos:end="15:3"/><name pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:16">h</name><index pos:start="15:17" pos:end="15:19">[<expr pos:start="15:18" pos:end="15:18"><name pos:start="15:18" pos:end="15:18">N</name></expr>]</index></name></decl>,<decl pos:start="15:21" pos:end="15:23"><type ref="prev" pos:start="15:1" pos:end="15:3"/><name pos:start="15:21" pos:end="15:23">idx</name></decl>;</decl_stmt>
<decl_stmt pos:start="16:1" pos:end="16:40"><decl pos:start="16:1" pos:end="16:12"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:12"><name pos:start="16:5" pos:end="16:9">new_h</name><index pos:start="16:10" pos:end="16:12">[<expr pos:start="16:11" pos:end="16:11"><name pos:start="16:11" pos:end="16:11">N</name></expr>]</index></name></decl>,<decl pos:start="16:14" pos:end="16:21"><type ref="prev" pos:start="16:1" pos:end="16:3"/><name pos:start="16:14" pos:end="16:21"><name pos:start="16:14" pos:end="16:18">new_e</name><index pos:start="16:19" pos:end="16:21">[<expr pos:start="16:20" pos:end="16:20"><name pos:start="16:20" pos:end="16:20">M</name></expr>]</index></name></decl>,<decl pos:start="16:23" pos:end="16:31"><type ref="prev" pos:start="16:1" pos:end="16:3"/><name pos:start="16:23" pos:end="16:31"><name pos:start="16:23" pos:end="16:28">new_ne</name><index pos:start="16:29" pos:end="16:31">[<expr pos:start="16:30" pos:end="16:30"><name pos:start="16:30" pos:end="16:30">M</name></expr>]</index></name></decl>,<decl pos:start="16:33" pos:end="16:39"><type ref="prev" pos:start="16:1" pos:end="16:3"/><name pos:start="16:33" pos:end="16:39">new_idx</name></decl>;</decl_stmt>
<decl_stmt pos:start="17:1" pos:end="17:16"><decl pos:start="17:1" pos:end="17:15"><type pos:start="17:1" pos:end="17:12"><name pos:start="17:1" pos:end="17:12"><name pos:start="17:1" pos:end="17:3">map</name><argument_list type="generic" pos:start="17:4" pos:end="17:12">&lt;<argument pos:start="17:5" pos:end="17:7"><expr pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></expr></argument>,<argument pos:start="17:9" pos:end="17:11"><expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="17:14" pos:end="17:15">mp</name></decl>;</decl_stmt>
<decl_stmt pos:start="18:1" pos:end="18:12"><decl pos:start="18:1" pos:end="18:11"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:9">times</name><init pos:start="18:10" pos:end="18:11">=<expr pos:start="18:11" pos:end="18:11"><literal type="number" pos:start="18:11" pos:end="18:11">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="19:1" pos:end="19:18"><decl pos:start="19:1" pos:end="19:10"><type pos:start="19:1" pos:end="19:3"><name pos:start="19:1" pos:end="19:3">int</name></type> <name pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:7">dfn</name><index pos:start="19:8" pos:end="19:10">[<expr pos:start="19:9" pos:end="19:9"><name pos:start="19:9" pos:end="19:9">N</name></expr>]</index></name></decl>,<decl pos:start="19:12" pos:end="19:17"><type ref="prev" pos:start="19:1" pos:end="19:3"/><name pos:start="19:12" pos:end="19:17"><name pos:start="19:12" pos:end="19:14">low</name><index pos:start="19:15" pos:end="19:17">[<expr pos:start="19:16" pos:end="19:16"><name pos:start="19:16" pos:end="19:16">N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="20:1" pos:end="20:14"><decl pos:start="20:1" pos:end="20:13"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:11">scc_cnt</name><init pos:start="20:12" pos:end="20:13">=<expr pos:start="20:13" pos:end="20:13"><literal type="number" pos:start="20:13" pos:end="20:13">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="21:1" pos:end="21:18"><decl pos:start="21:1" pos:end="21:12"><type pos:start="21:1" pos:end="21:3"><name pos:start="21:1" pos:end="21:3">int</name></type> <name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:9">sccno</name><index pos:start="21:10" pos:end="21:12">[<expr pos:start="21:11" pos:end="21:11"><name pos:start="21:11" pos:end="21:11">N</name></expr>]</index></name></decl>,<decl pos:start="21:14" pos:end="21:17"><type ref="prev" pos:start="21:1" pos:end="21:3"/><name pos:start="21:14" pos:end="21:17"><name pos:start="21:14" pos:end="21:14">w</name><index pos:start="21:15" pos:end="21:17">[<expr pos:start="21:16" pos:end="21:16"><name pos:start="21:16" pos:end="21:16">N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="22:1" pos:end="22:16"><decl pos:start="22:1" pos:end="22:15"><type pos:start="22:1" pos:end="22:8"><name pos:start="22:1" pos:end="22:8"><name pos:start="22:1" pos:end="22:3">set</name><argument_list type="generic" pos:start="22:4" pos:end="22:8">&lt;<argument pos:start="22:5" pos:end="22:7"><expr pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="22:10" pos:end="22:15"><name pos:start="22:10" pos:end="22:12">scc</name><index pos:start="22:13" pos:end="22:15">[<expr pos:start="22:14" pos:end="22:14"><name pos:start="22:14" pos:end="22:14">N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="23:1" pos:end="23:13"><decl pos:start="23:1" pos:end="23:12"><type pos:start="23:1" pos:end="23:8"><name pos:start="23:1" pos:end="23:8"><name pos:start="23:1" pos:end="23:3">set</name><argument_list type="generic" pos:start="23:4" pos:end="23:8">&lt;<argument pos:start="23:5" pos:end="23:7"><expr pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">PII</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="23:10" pos:end="23:12">vis</name></decl>;</decl_stmt>
<decl_stmt pos:start="24:1" pos:end="24:13"><decl pos:start="24:1" pos:end="24:12"><type pos:start="24:1" pos:end="24:10"><name pos:start="24:1" pos:end="24:10"><name pos:start="24:1" pos:end="24:5">stack</name><argument_list type="generic" pos:start="24:6" pos:end="24:10">&lt;<argument pos:start="24:7" pos:end="24:9"><expr pos:start="24:7" pos:end="24:9"><name pos:start="24:7" pos:end="24:9">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="24:12" pos:end="24:12">S</name></decl>;</decl_stmt>
<decl_stmt pos:start="25:1" pos:end="25:9"><decl pos:start="25:1" pos:end="25:8"><type pos:start="25:1" pos:end="25:3"><name pos:start="25:1" pos:end="25:3">int</name></type> <name pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:5">f</name><index pos:start="25:6" pos:end="25:8">[<expr pos:start="25:7" pos:end="25:7"><name pos:start="25:7" pos:end="25:7">N</name></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="26:1" pos:end="30:1"><type pos:start="26:1" pos:end="26:11"><specifier pos:start="26:1" pos:end="26:6">inline</specifier> <name pos:start="26:8" pos:end="26:11">void</name></type> <name pos:start="26:13" pos:end="26:18">c_plus</name><parameter_list pos:start="26:19" pos:end="26:20">()</parameter_list><block pos:start="26:21" pos:end="30:1">{<block_content pos:start="27:5" pos:end="29:16">
    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><call pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:7">ios</name><operator pos:start="27:8" pos:end="27:9">::</operator><name pos:start="27:10" pos:end="27:24">sync_with_stdio</name></name><argument_list pos:start="27:25" pos:end="27:31">(<argument pos:start="27:26" pos:end="27:30"><expr pos:start="27:26" pos:end="27:30"><literal type="boolean" pos:start="27:26" pos:end="27:30">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:15"><expr pos:start="28:5" pos:end="28:14"><call pos:start="28:5" pos:end="28:14"><name pos:start="28:5" pos:end="28:11"><name pos:start="28:5" pos:end="28:7">cin</name><operator pos:start="28:8" pos:end="28:8">.</operator><name pos:start="28:9" pos:end="28:11">tie</name></name><argument_list pos:start="28:12" pos:end="28:14">(<argument pos:start="28:13" pos:end="28:13"><expr pos:start="28:13" pos:end="28:13"><literal type="number" pos:start="28:13" pos:end="28:13">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:16"><expr pos:start="29:5" pos:end="29:15"><call pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:8">cout</name><operator pos:start="29:9" pos:end="29:9">.</operator><name pos:start="29:10" pos:end="29:12">tie</name></name><argument_list pos:start="29:13" pos:end="29:15">(<argument pos:start="29:14" pos:end="29:14"><expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="31:1" pos:end="33:1"><type pos:start="31:1" pos:end="31:10"><specifier pos:start="31:1" pos:end="31:6">inline</specifier> <name pos:start="31:8" pos:end="31:10">int</name></type> <name pos:start="31:12" pos:end="31:12">c</name><parameter_list pos:start="31:13" pos:end="31:25">(<parameter pos:start="31:14" pos:end="31:18"><decl pos:start="31:14" pos:end="31:18"><type pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:16">int</name></type> <name pos:start="31:18" pos:end="31:18">x</name></decl></parameter>,<parameter pos:start="31:20" pos:end="31:24"><decl pos:start="31:20" pos:end="31:24"><type pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:22">int</name></type> <name pos:start="31:24" pos:end="31:24">y</name></decl></parameter>)</parameter_list><block pos:start="31:26" pos:end="33:1">{<block_content pos:start="32:5" pos:end="32:19">
    <return pos:start="32:5" pos:end="32:19">return <expr pos:start="32:12" pos:end="32:18"><name pos:start="32:12" pos:end="32:12">m</name><operator pos:start="32:13" pos:end="32:13">*</operator><name pos:start="32:14" pos:end="32:14">x</name><operator pos:start="32:15" pos:end="32:15">+</operator><name pos:start="32:16" pos:end="32:16">y</name><operator pos:start="32:17" pos:end="32:17">+</operator><literal type="number" pos:start="32:18" pos:end="32:18">1</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="34:1" pos:end="37:1"><type pos:start="34:1" pos:end="34:11"><specifier pos:start="34:1" pos:end="34:6">inline</specifier> <name pos:start="34:8" pos:end="34:11">void</name></type> <name pos:start="34:13" pos:end="34:16">init</name><parameter_list pos:start="34:17" pos:end="34:18">()</parameter_list><block pos:start="34:19" pos:end="37:1">{<block_content pos:start="35:5" pos:end="36:27">
    <expr_stmt pos:start="35:5" pos:end="35:10"><expr pos:start="35:5" pos:end="35:9"><name pos:start="35:5" pos:end="35:7">idx</name><operator pos:start="35:8" pos:end="35:8">=</operator><literal type="number" pos:start="35:9" pos:end="35:9">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:27"><expr pos:start="36:5" pos:end="36:26"><call pos:start="36:5" pos:end="36:26"><name pos:start="36:5" pos:end="36:10">memset</name><argument_list pos:start="36:11" pos:end="36:26">(<argument pos:start="36:12" pos:end="36:12"><expr pos:start="36:12" pos:end="36:12"><name pos:start="36:12" pos:end="36:12">h</name></expr></argument>,<argument pos:start="36:14" pos:end="36:15"><expr pos:start="36:14" pos:end="36:15"><operator pos:start="36:14" pos:end="36:14">-</operator><literal type="number" pos:start="36:15" pos:end="36:15">1</literal></expr></argument>,<argument pos:start="36:17" pos:end="36:25"><expr pos:start="36:17" pos:end="36:25"><sizeof pos:start="36:17" pos:end="36:25">sizeof<argument_list pos:start="36:23" pos:end="36:25">(<argument pos:start="36:24" pos:end="36:24"><expr pos:start="36:24" pos:end="36:24"><name pos:start="36:24" pos:end="36:24">h</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="38:1" pos:end="42:1"><type pos:start="38:1" pos:end="38:11"><specifier pos:start="38:1" pos:end="38:6">inline</specifier> <name pos:start="38:8" pos:end="38:11">void</name></type> <name pos:start="38:13" pos:end="38:15">add</name><parameter_list pos:start="38:16" pos:end="38:28">(<parameter pos:start="38:17" pos:end="38:21"><decl pos:start="38:17" pos:end="38:21"><type pos:start="38:17" pos:end="38:21"><name pos:start="38:17" pos:end="38:19">int</name></type> <name pos:start="38:21" pos:end="38:21">a</name></decl></parameter>,<parameter pos:start="38:23" pos:end="38:27"><decl pos:start="38:23" pos:end="38:27"><type pos:start="38:23" pos:end="38:27"><name pos:start="38:23" pos:end="38:25">int</name></type> <name pos:start="38:27" pos:end="38:27">b</name></decl></parameter>)</parameter_list><block pos:start="38:29" pos:end="42:1">{<block_content pos:start="39:5" pos:end="41:15">
    <expr_stmt pos:start="39:5" pos:end="39:13"><expr pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:5">e</name><index pos:start="39:6" pos:end="39:10">[<expr pos:start="39:7" pos:end="39:9"><name pos:start="39:7" pos:end="39:9">idx</name></expr>]</index></name><operator pos:start="39:11" pos:end="39:11">=</operator><name pos:start="39:12" pos:end="39:12">b</name></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:17"><expr pos:start="40:5" pos:end="40:16"><name pos:start="40:5" pos:end="40:11"><name pos:start="40:5" pos:end="40:6">ne</name><index pos:start="40:7" pos:end="40:11">[<expr pos:start="40:8" pos:end="40:10"><name pos:start="40:8" pos:end="40:10">idx</name></expr>]</index></name><operator pos:start="40:12" pos:end="40:12">=</operator><name pos:start="40:13" pos:end="40:16"><name pos:start="40:13" pos:end="40:13">h</name><index pos:start="40:14" pos:end="40:16">[<expr pos:start="40:15" pos:end="40:15"><name pos:start="40:15" pos:end="40:15">a</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:15"><expr pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:8"><name pos:start="41:5" pos:end="41:5">h</name><index pos:start="41:6" pos:end="41:8">[<expr pos:start="41:7" pos:end="41:7"><name pos:start="41:7" pos:end="41:7">a</name></expr>]</index></name><operator pos:start="41:9" pos:end="41:9">=</operator><name pos:start="41:10" pos:end="41:12">idx</name><operator pos:start="41:13" pos:end="41:14">++</operator></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="43:1" pos:end="46:1"><type pos:start="43:1" pos:end="43:11"><specifier pos:start="43:1" pos:end="43:6">inline</specifier> <name pos:start="43:8" pos:end="43:11">void</name></type> <name pos:start="43:13" pos:end="43:20">new_init</name><parameter_list pos:start="43:21" pos:end="43:22">()</parameter_list><block pos:start="43:23" pos:end="46:1">{<block_content pos:start="44:5" pos:end="45:35">
    <expr_stmt pos:start="44:5" pos:end="44:14"><expr pos:start="44:5" pos:end="44:13"><name pos:start="44:5" pos:end="44:11">new_idx</name><operator pos:start="44:12" pos:end="44:12">=</operator><literal type="number" pos:start="44:13" pos:end="44:13">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><call pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:10">memset</name><argument_list pos:start="45:11" pos:end="45:34">(<argument pos:start="45:12" pos:end="45:16"><expr pos:start="45:12" pos:end="45:16"><name pos:start="45:12" pos:end="45:16">new_h</name></expr></argument>,<argument pos:start="45:18" pos:end="45:19"><expr pos:start="45:18" pos:end="45:19"><operator pos:start="45:18" pos:end="45:18">-</operator><literal type="number" pos:start="45:19" pos:end="45:19">1</literal></expr></argument>,<argument pos:start="45:21" pos:end="45:33"><expr pos:start="45:21" pos:end="45:33"><sizeof pos:start="45:21" pos:end="45:33">sizeof<argument_list pos:start="45:27" pos:end="45:33">(<argument pos:start="45:28" pos:end="45:32"><expr pos:start="45:28" pos:end="45:32"><name pos:start="45:28" pos:end="45:32">new_h</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="47:1" pos:end="51:1"><type pos:start="47:1" pos:end="47:11"><specifier pos:start="47:1" pos:end="47:6">inline</specifier> <name pos:start="47:8" pos:end="47:11">void</name></type> <name pos:start="47:13" pos:end="47:19">new_add</name><parameter_list pos:start="47:20" pos:end="47:32">(<parameter pos:start="47:21" pos:end="47:25"><decl pos:start="47:21" pos:end="47:25"><type pos:start="47:21" pos:end="47:25"><name pos:start="47:21" pos:end="47:23">int</name></type> <name pos:start="47:25" pos:end="47:25">a</name></decl></parameter>,<parameter pos:start="47:27" pos:end="47:31"><decl pos:start="47:27" pos:end="47:31"><type pos:start="47:27" pos:end="47:31"><name pos:start="47:27" pos:end="47:29">int</name></type> <name pos:start="47:31" pos:end="47:31">b</name></decl></parameter>)</parameter_list><block pos:start="47:33" pos:end="51:1">{<block_content pos:start="48:5" pos:end="50:23">
    <expr_stmt pos:start="48:5" pos:end="48:21"><expr pos:start="48:5" pos:end="48:20"><name pos:start="48:5" pos:end="48:18"><name pos:start="48:5" pos:end="48:9">new_e</name><index pos:start="48:10" pos:end="48:18">[<expr pos:start="48:11" pos:end="48:17"><name pos:start="48:11" pos:end="48:17">new_idx</name></expr>]</index></name><operator pos:start="48:19" pos:end="48:19">=</operator><name pos:start="48:20" pos:end="48:20">b</name></expr>;</expr_stmt>
    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:10">new_ne</name><index pos:start="49:11" pos:end="49:19">[<expr pos:start="49:12" pos:end="49:18"><name pos:start="49:12" pos:end="49:18">new_idx</name></expr>]</index></name><operator pos:start="49:20" pos:end="49:20">=</operator><name pos:start="49:21" pos:end="49:28"><name pos:start="49:21" pos:end="49:25">new_h</name><index pos:start="49:26" pos:end="49:28">[<expr pos:start="49:27" pos:end="49:27"><name pos:start="49:27" pos:end="49:27">a</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="50:5" pos:end="50:23"><expr pos:start="50:5" pos:end="50:22"><name pos:start="50:5" pos:end="50:12"><name pos:start="50:5" pos:end="50:9">new_h</name><index pos:start="50:10" pos:end="50:12">[<expr pos:start="50:11" pos:end="50:11"><name pos:start="50:11" pos:end="50:11">a</name></expr>]</index></name><operator pos:start="50:13" pos:end="50:13">=</operator><name pos:start="50:14" pos:end="50:20">new_idx</name><operator pos:start="50:21" pos:end="50:22">++</operator></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="52:1" pos:end="77:1"><type pos:start="52:1" pos:end="52:4"><name pos:start="52:1" pos:end="52:4">void</name></type> <name pos:start="52:6" pos:end="52:11">tarjan</name><parameter_list pos:start="52:12" pos:end="52:18">(<parameter pos:start="52:13" pos:end="52:17"><decl pos:start="52:13" pos:end="52:17"><type pos:start="52:13" pos:end="52:15"><name pos:start="52:13" pos:end="52:15">int</name></type> <name pos:start="52:17" pos:end="52:17">u</name></decl></parameter>)</parameter_list><block pos:start="52:19" pos:end="77:1">{<block_content pos:start="53:5" pos:end="76:5">
    <expr_stmt pos:start="53:5" pos:end="53:26"><expr pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:10"><name pos:start="53:5" pos:end="53:7">dfn</name><index pos:start="53:8" pos:end="53:10">[<expr pos:start="53:9" pos:end="53:9"><name pos:start="53:9" pos:end="53:9">u</name></expr>]</index></name><operator pos:start="53:11" pos:end="53:11">=</operator><name pos:start="53:12" pos:end="53:17"><name pos:start="53:12" pos:end="53:14">low</name><index pos:start="53:15" pos:end="53:17">[<expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">u</name></expr>]</index></name><operator pos:start="53:18" pos:end="53:18">=</operator><operator pos:start="53:19" pos:end="53:20">++</operator><name pos:start="53:21" pos:end="53:25">times</name></expr>;</expr_stmt>
    <expr_stmt pos:start="54:5" pos:end="54:14"><expr pos:start="54:5" pos:end="54:13"><call pos:start="54:5" pos:end="54:13"><name pos:start="54:5" pos:end="54:10"><name pos:start="54:5" pos:end="54:5">S</name><operator pos:start="54:6" pos:end="54:6">.</operator><name pos:start="54:7" pos:end="54:10">push</name></name><argument_list pos:start="54:11" pos:end="54:13">(<argument pos:start="54:12" pos:end="54:12"><expr pos:start="54:12" pos:end="54:12"><name pos:start="54:12" pos:end="54:12">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="55:5" pos:end="63:5">for <control pos:start="55:9" pos:end="55:31">(<init pos:start="55:10" pos:end="55:20"><decl pos:start="55:10" pos:end="55:19"><type pos:start="55:10" pos:end="55:12"><name pos:start="55:10" pos:end="55:12">int</name></type> <name pos:start="55:14" pos:end="55:14">i</name><init pos:start="55:15" pos:end="55:19">=<expr pos:start="55:16" pos:end="55:19"><name pos:start="55:16" pos:end="55:19"><name pos:start="55:16" pos:end="55:16">h</name><index pos:start="55:17" pos:end="55:19">[<expr pos:start="55:18" pos:end="55:18"><name pos:start="55:18" pos:end="55:18">u</name></expr>]</index></name></expr></init></decl>;</init><condition pos:start="55:21" pos:end="55:23"><expr pos:start="55:21" pos:end="55:22"><operator pos:start="55:21" pos:end="55:21">~</operator><name pos:start="55:22" pos:end="55:22">i</name></expr>;</condition><incr pos:start="55:24" pos:end="55:30"><expr pos:start="55:24" pos:end="55:30"><name pos:start="55:24" pos:end="55:24">i</name><operator pos:start="55:25" pos:end="55:25">=</operator><name pos:start="55:26" pos:end="55:30"><name pos:start="55:26" pos:end="55:27">ne</name><index pos:start="55:28" pos:end="55:30">[<expr pos:start="55:29" pos:end="55:29"><name pos:start="55:29" pos:end="55:29">i</name></expr>]</index></name></expr></incr>)</control><block pos:start="55:32" pos:end="63:5">{<block_content pos:start="56:9" pos:end="62:9">
        <decl_stmt pos:start="56:9" pos:end="56:19"><decl pos:start="56:9" pos:end="56:18"><type pos:start="56:9" pos:end="56:11"><name pos:start="56:9" pos:end="56:11">int</name></type> <name pos:start="56:13" pos:end="56:13">v</name><init pos:start="56:14" pos:end="56:18">=<expr pos:start="56:15" pos:end="56:18"><name pos:start="56:15" pos:end="56:18"><name pos:start="56:15" pos:end="56:15">e</name><index pos:start="56:16" pos:end="56:18">[<expr pos:start="56:17" pos:end="56:17"><name pos:start="56:17" pos:end="56:17">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="57:9" pos:end="62:9"><if pos:start="57:9" pos:end="60:9">if <condition pos:start="57:12" pos:end="57:22">(<expr pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:18"><name pos:start="57:13" pos:end="57:15">dfn</name><index pos:start="57:16" pos:end="57:18">[<expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">v</name></expr>]</index></name><operator pos:start="57:19" pos:end="57:20">==</operator><literal type="number" pos:start="57:21" pos:end="57:21">0</literal></expr>)</condition><block pos:start="57:23" pos:end="60:9">{<block_content pos:start="58:13" pos:end="59:38">
            <expr_stmt pos:start="58:13" pos:end="58:22"><expr pos:start="58:13" pos:end="58:21"><call pos:start="58:13" pos:end="58:21"><name pos:start="58:13" pos:end="58:18">tarjan</name><argument_list pos:start="58:19" pos:end="58:21">(<argument pos:start="58:20" pos:end="58:20"><expr pos:start="58:20" pos:end="58:20"><name pos:start="58:20" pos:end="58:20">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="59:13" pos:end="59:38"><expr pos:start="59:13" pos:end="59:37"><name pos:start="59:13" pos:end="59:18"><name pos:start="59:13" pos:end="59:15">low</name><index pos:start="59:16" pos:end="59:18">[<expr pos:start="59:17" pos:end="59:17"><name pos:start="59:17" pos:end="59:17">u</name></expr>]</index></name><operator pos:start="59:19" pos:end="59:19">=</operator><call pos:start="59:20" pos:end="59:37"><name pos:start="59:20" pos:end="59:22">min</name><argument_list pos:start="59:23" pos:end="59:37">(<argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:26">low</name><index pos:start="59:27" pos:end="59:29">[<expr pos:start="59:28" pos:end="59:28"><name pos:start="59:28" pos:end="59:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="59:31" pos:end="59:36"><expr pos:start="59:31" pos:end="59:36"><name pos:start="59:31" pos:end="59:36"><name pos:start="59:31" pos:end="59:33">low</name><index pos:start="59:34" pos:end="59:36">[<expr pos:start="59:35" pos:end="59:35"><name pos:start="59:35" pos:end="59:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="60:10" pos:end="62:9">else if <condition pos:start="60:18" pos:end="60:28">(<expr pos:start="60:19" pos:end="60:27"><operator pos:start="60:19" pos:end="60:19">!</operator><name pos:start="60:20" pos:end="60:27"><name pos:start="60:20" pos:end="60:24">sccno</name><index pos:start="60:25" pos:end="60:27">[<expr pos:start="60:26" pos:end="60:26"><name pos:start="60:26" pos:end="60:26">v</name></expr>]</index></name></expr>)</condition><block pos:start="60:29" pos:end="62:9">{<block_content pos:start="61:13" pos:end="61:38">
            <expr_stmt pos:start="61:13" pos:end="61:38"><expr pos:start="61:13" pos:end="61:37"><name pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:15">low</name><index pos:start="61:16" pos:end="61:18">[<expr pos:start="61:17" pos:end="61:17"><name pos:start="61:17" pos:end="61:17">u</name></expr>]</index></name><operator pos:start="61:19" pos:end="61:19">=</operator><call pos:start="61:20" pos:end="61:37"><name pos:start="61:20" pos:end="61:22">min</name><argument_list pos:start="61:23" pos:end="61:37">(<argument pos:start="61:24" pos:end="61:29"><expr pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:26">low</name><index pos:start="61:27" pos:end="61:29">[<expr pos:start="61:28" pos:end="61:28"><name pos:start="61:28" pos:end="61:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="61:31" pos:end="61:36"><expr pos:start="61:31" pos:end="61:36"><name pos:start="61:31" pos:end="61:36"><name pos:start="61:31" pos:end="61:33">dfn</name><index pos:start="61:34" pos:end="61:36">[<expr pos:start="61:35" pos:end="61:35"><name pos:start="61:35" pos:end="61:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="64:5" pos:end="76:5"><if pos:start="64:5" pos:end="76:5">if <condition pos:start="64:8" pos:end="64:23">(<expr pos:start="64:9" pos:end="64:22"><name pos:start="64:9" pos:end="64:14"><name pos:start="64:9" pos:end="64:11">low</name><index pos:start="64:12" pos:end="64:14">[<expr pos:start="64:13" pos:end="64:13"><name pos:start="64:13" pos:end="64:13">u</name></expr>]</index></name><operator pos:start="64:15" pos:end="64:16">==</operator><name pos:start="64:17" pos:end="64:22"><name pos:start="64:17" pos:end="64:19">dfn</name><index pos:start="64:20" pos:end="64:22">[<expr pos:start="64:21" pos:end="64:21"><name pos:start="64:21" pos:end="64:21">u</name></expr>]</index></name></expr>)</condition><block pos:start="64:24" pos:end="76:5">{<block_content pos:start="65:9" pos:end="75:9">
        <expr_stmt pos:start="65:9" pos:end="65:18"><expr pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:15">scc_cnt</name><operator pos:start="65:16" pos:end="65:17">++</operator></expr>;</expr_stmt>
        <while pos:start="66:9" pos:end="75:9">while <condition pos:start="66:15" pos:end="66:20">(<expr pos:start="66:16" pos:end="66:19"><literal type="boolean" pos:start="66:16" pos:end="66:19">true</literal></expr>)</condition><block pos:start="66:21" pos:end="75:9">{<block_content pos:start="67:13" pos:end="74:13">
            <decl_stmt pos:start="67:13" pos:end="67:26"><decl pos:start="67:13" pos:end="67:25"><type pos:start="67:13" pos:end="67:15"><name pos:start="67:13" pos:end="67:15">int</name></type> <name pos:start="67:17" pos:end="67:17">x</name><init pos:start="67:18" pos:end="67:25">=<expr pos:start="67:19" pos:end="67:25"><call pos:start="67:19" pos:end="67:25"><name pos:start="67:19" pos:end="67:23"><name pos:start="67:19" pos:end="67:19">S</name><operator pos:start="67:20" pos:end="67:20">.</operator><name pos:start="67:21" pos:end="67:23">top</name></name><argument_list pos:start="67:24" pos:end="67:25">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="68:13" pos:end="68:20"><expr pos:start="68:13" pos:end="68:19"><call pos:start="68:13" pos:end="68:19"><name pos:start="68:13" pos:end="68:17"><name pos:start="68:13" pos:end="68:13">S</name><operator pos:start="68:14" pos:end="68:14">.</operator><name pos:start="68:15" pos:end="68:17">pop</name></name><argument_list pos:start="68:18" pos:end="68:19">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="69:13" pos:end="69:35"><expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:15">scc</name><index pos:start="69:16" pos:end="69:24">[<expr pos:start="69:17" pos:end="69:23"><name pos:start="69:17" pos:end="69:23">scc_cnt</name></expr>]</index></name><operator pos:start="69:25" pos:end="69:25">.</operator><call pos:start="69:26" pos:end="69:34"><name pos:start="69:26" pos:end="69:31">insert</name><argument_list pos:start="69:32" pos:end="69:34">(<argument pos:start="69:33" pos:end="69:33"><expr pos:start="69:33" pos:end="69:33"><name pos:start="69:33" pos:end="69:33">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="70:13" pos:end="70:29"><expr pos:start="70:13" pos:end="70:28"><name pos:start="70:13" pos:end="70:20"><name pos:start="70:13" pos:end="70:17">sccno</name><index pos:start="70:18" pos:end="70:20">[<expr pos:start="70:19" pos:end="70:19"><name pos:start="70:19" pos:end="70:19">x</name></expr>]</index></name><operator pos:start="70:21" pos:end="70:21">=</operator><name pos:start="70:22" pos:end="70:28">scc_cnt</name></expr>;</expr_stmt>
            <expr_stmt pos:start="71:13" pos:end="71:30"><expr pos:start="71:13" pos:end="71:29"><name pos:start="71:13" pos:end="71:22"><name pos:start="71:13" pos:end="71:13">w</name><index pos:start="71:14" pos:end="71:22">[<expr pos:start="71:15" pos:end="71:21"><name pos:start="71:15" pos:end="71:21">scc_cnt</name></expr>]</index></name><operator pos:start="71:23" pos:end="71:24">+=</operator><name pos:start="71:25" pos:end="71:29"><name pos:start="71:25" pos:end="71:26">mp</name><index pos:start="71:27" pos:end="71:29">[<expr pos:start="71:28" pos:end="71:28"><name pos:start="71:28" pos:end="71:28">x</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="72:13" pos:end="74:13"><if pos:start="72:13" pos:end="74:13">if <condition pos:start="72:16" pos:end="72:21">(<expr pos:start="72:17" pos:end="72:20"><name pos:start="72:17" pos:end="72:17">x</name><operator pos:start="72:18" pos:end="72:19">==</operator><name pos:start="72:20" pos:end="72:20">u</name></expr>)</condition><block pos:start="72:22" pos:end="74:13">{<block_content pos:start="73:17" pos:end="73:22">
                <break pos:start="73:17" pos:end="73:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="78:1" pos:end="88:1"><type pos:start="78:1" pos:end="78:3"><name pos:start="78:1" pos:end="78:3">int</name></type> <name pos:start="78:5" pos:end="78:7">dfs</name><parameter_list pos:start="78:8" pos:end="78:14">(<parameter pos:start="78:9" pos:end="78:13"><decl pos:start="78:9" pos:end="78:13"><type pos:start="78:9" pos:end="78:11"><name pos:start="78:9" pos:end="78:11">int</name></type> <name pos:start="78:13" pos:end="78:13">u</name></decl></parameter>)</parameter_list><block pos:start="78:15" pos:end="88:1">{<block_content pos:start="79:5" pos:end="87:32">
    <if_stmt pos:start="79:5" pos:end="81:5"><if pos:start="79:5" pos:end="81:5">if <condition pos:start="79:8" pos:end="79:17">(<expr pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:12"><name pos:start="79:9" pos:end="79:9">f</name><index pos:start="79:10" pos:end="79:12">[<expr pos:start="79:11" pos:end="79:11"><name pos:start="79:11" pos:end="79:11">u</name></expr>]</index></name><operator pos:start="79:13" pos:end="79:14">!=</operator><operator pos:start="79:15" pos:end="79:15">-</operator><literal type="number" pos:start="79:16" pos:end="79:16">1</literal></expr>)</condition><block pos:start="79:18" pos:end="81:5">{<block_content pos:start="80:9" pos:end="80:20">
        <return pos:start="80:9" pos:end="80:20">return <expr pos:start="80:16" pos:end="80:19"><name pos:start="80:16" pos:end="80:19"><name pos:start="80:16" pos:end="80:16">f</name><index pos:start="80:17" pos:end="80:19">[<expr pos:start="80:18" pos:end="80:18"><name pos:start="80:18" pos:end="80:18">u</name></expr>]</index></name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt pos:start="82:5" pos:end="82:14"><decl pos:start="82:5" pos:end="82:13"><type pos:start="82:5" pos:end="82:7"><name pos:start="82:5" pos:end="82:7">int</name></type> <name pos:start="82:9" pos:end="82:11">res</name><init pos:start="82:12" pos:end="82:13">=<expr pos:start="82:13" pos:end="82:13"><literal type="number" pos:start="82:13" pos:end="82:13">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="83:5" pos:end="86:5">for <control pos:start="83:9" pos:end="83:39">(<init pos:start="83:10" pos:end="83:24"><decl pos:start="83:10" pos:end="83:23"><type pos:start="83:10" pos:end="83:12"><name pos:start="83:10" pos:end="83:12">int</name></type> <name pos:start="83:14" pos:end="83:14">i</name><init pos:start="83:15" pos:end="83:23">=<expr pos:start="83:16" pos:end="83:23"><name pos:start="83:16" pos:end="83:23"><name pos:start="83:16" pos:end="83:20">new_h</name><index pos:start="83:21" pos:end="83:23">[<expr pos:start="83:22" pos:end="83:22"><name pos:start="83:22" pos:end="83:22">u</name></expr>]</index></name></expr></init></decl>;</init><condition pos:start="83:25" pos:end="83:27"><expr pos:start="83:25" pos:end="83:26"><operator pos:start="83:25" pos:end="83:25">~</operator><name pos:start="83:26" pos:end="83:26">i</name></expr>;</condition><incr pos:start="83:28" pos:end="83:38"><expr pos:start="83:28" pos:end="83:38"><name pos:start="83:28" pos:end="83:28">i</name><operator pos:start="83:29" pos:end="83:29">=</operator><name pos:start="83:30" pos:end="83:38"><name pos:start="83:30" pos:end="83:35">new_ne</name><index pos:start="83:36" pos:end="83:38">[<expr pos:start="83:37" pos:end="83:37"><name pos:start="83:37" pos:end="83:37">i</name></expr>]</index></name></expr></incr>)</control><block pos:start="83:40" pos:end="86:5">{<block_content pos:start="84:9" pos:end="85:28">
        <decl_stmt pos:start="84:9" pos:end="84:23"><decl pos:start="84:9" pos:end="84:22"><type pos:start="84:9" pos:end="84:11"><name pos:start="84:9" pos:end="84:11">int</name></type> <name pos:start="84:13" pos:end="84:13">v</name><init pos:start="84:14" pos:end="84:22">=<expr pos:start="84:15" pos:end="84:22"><name pos:start="84:15" pos:end="84:22"><name pos:start="84:15" pos:end="84:19">new_e</name><index pos:start="84:20" pos:end="84:22">[<expr pos:start="84:21" pos:end="84:21"><name pos:start="84:21" pos:end="84:21">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="85:9" pos:end="85:28"><expr pos:start="85:9" pos:end="85:27"><name pos:start="85:9" pos:end="85:11">res</name><operator pos:start="85:12" pos:end="85:12">=</operator><call pos:start="85:13" pos:end="85:27"><name pos:start="85:13" pos:end="85:15">max</name><argument_list pos:start="85:16" pos:end="85:27">(<argument pos:start="85:17" pos:end="85:19"><expr pos:start="85:17" pos:end="85:19"><name pos:start="85:17" pos:end="85:19">res</name></expr></argument>,<argument pos:start="85:21" pos:end="85:26"><expr pos:start="85:21" pos:end="85:26"><call pos:start="85:21" pos:end="85:26"><name pos:start="85:21" pos:end="85:23">dfs</name><argument_list pos:start="85:24" pos:end="85:26">(<argument pos:start="85:25" pos:end="85:25"><expr pos:start="85:25" pos:end="85:25"><name pos:start="85:25" pos:end="85:25">v</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="87:5" pos:end="87:32">return <expr pos:start="87:12" pos:end="87:31"><name pos:start="87:12" pos:end="87:15"><name pos:start="87:12" pos:end="87:12">f</name><index pos:start="87:13" pos:end="87:15">[<expr pos:start="87:14" pos:end="87:14"><name pos:start="87:14" pos:end="87:14">u</name></expr>]</index></name><operator pos:start="87:16" pos:end="87:16">=</operator><name pos:start="87:17" pos:end="87:19">res</name><operator pos:start="87:20" pos:end="87:20">+</operator><name pos:start="87:21" pos:end="87:31"><name pos:start="87:21" pos:end="87:21">w</name><index pos:start="87:22" pos:end="87:31">[<expr pos:start="87:23" pos:end="87:30"><name pos:start="87:23" pos:end="87:30"><name pos:start="87:23" pos:end="87:27">sccno</name><index pos:start="87:28" pos:end="87:30">[<expr pos:start="87:29" pos:end="87:29"><name pos:start="87:29" pos:end="87:29">u</name></expr>]</index></name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>
<function pos:start="89:1" pos:end="144:1"><type pos:start="89:1" pos:end="89:3"><name pos:start="89:1" pos:end="89:3">int</name></type> <name pos:start="89:5" pos:end="89:8">main</name><parameter_list pos:start="89:9" pos:end="89:10">()</parameter_list><block pos:start="89:11" pos:end="144:1">{<block_content pos:start="90:5" pos:end="143:13">
    <expr_stmt pos:start="90:5" pos:end="90:13"><expr pos:start="90:5" pos:end="90:12"><call pos:start="90:5" pos:end="90:12"><name pos:start="90:5" pos:end="90:10">c_plus</name><argument_list pos:start="90:11" pos:end="90:12">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="91:5" pos:end="91:11"><expr pos:start="91:5" pos:end="91:10"><call pos:start="91:5" pos:end="91:10"><name pos:start="91:5" pos:end="91:8">init</name><argument_list pos:start="91:9" pos:end="91:10">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="92:5" pos:end="92:14"><expr pos:start="92:5" pos:end="92:13"><name pos:start="92:5" pos:end="92:7">cin</name><operator pos:start="92:8" pos:end="92:9">&gt;&gt;</operator><name pos:start="92:10" pos:end="92:10">n</name><operator pos:start="92:11" pos:end="92:12">&gt;&gt;</operator><name pos:start="92:13" pos:end="92:13">m</name></expr>;</expr_stmt>
    <macro pos:start="93:5" pos:end="93:15"><name pos:start="93:5" pos:end="93:8">_for</name><argument_list pos:start="93:9" pos:end="93:15">(<argument pos:start="93:10" pos:end="93:10">i</argument>,<argument pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></argument>,<argument pos:start="93:14" pos:end="93:14">n</argument>)</argument_list></macro><block pos:start="93:16" pos:end="95:5">{<block_content pos:start="94:9" pos:end="94:18">
        <expr_stmt pos:start="94:9" pos:end="94:18"><expr pos:start="94:9" pos:end="94:17"><name pos:start="94:9" pos:end="94:11">cin</name><operator pos:start="94:12" pos:end="94:13">&gt;&gt;</operator><name pos:start="94:14" pos:end="94:17"><name pos:start="94:14" pos:end="94:14">a</name><index pos:start="94:15" pos:end="94:17">[<expr pos:start="94:16" pos:end="94:16"><name pos:start="94:16" pos:end="94:16">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block>
    <decl_stmt pos:start="96:5" pos:end="96:14"><decl pos:start="96:5" pos:end="96:10"><type pos:start="96:5" pos:end="96:7"><name pos:start="96:5" pos:end="96:7">int</name></type> <name pos:start="96:9" pos:end="96:10">ex</name></decl>,<decl pos:start="96:12" pos:end="96:13"><type ref="prev" pos:start="96:5" pos:end="96:7"/><name pos:start="96:12" pos:end="96:13">ey</name></decl>;</decl_stmt>
    <expr_stmt pos:start="97:5" pos:end="97:16"><expr pos:start="97:5" pos:end="97:15"><name pos:start="97:5" pos:end="97:7">cin</name><operator pos:start="97:8" pos:end="97:9">&gt;&gt;</operator><name pos:start="97:10" pos:end="97:11">ex</name><operator pos:start="97:12" pos:end="97:13">&gt;&gt;</operator><name pos:start="97:14" pos:end="97:15">ey</name></expr>;</expr_stmt>
    <macro pos:start="98:5" pos:end="98:15"><name pos:start="98:5" pos:end="98:8">_for</name><argument_list pos:start="98:9" pos:end="98:15">(<argument pos:start="98:10" pos:end="98:10">i</argument>,<argument pos:start="98:12" pos:end="98:12"><literal type="number" pos:start="98:12" pos:end="98:12">0</literal></argument>,<argument pos:start="98:14" pos:end="98:14">n</argument>)</argument_list></macro><block pos:start="98:16" pos:end="122:5">{<block_content pos:start="99:9" pos:end="121:9">
        <macro pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:12">_for</name><argument_list pos:start="99:13" pos:end="99:19">(<argument pos:start="99:14" pos:end="99:14">j</argument>,<argument pos:start="99:16" pos:end="99:16"><literal type="number" pos:start="99:16" pos:end="99:16">0</literal></argument>,<argument pos:start="99:18" pos:end="99:18">m</argument>)</argument_list></macro><block pos:start="99:20" pos:end="121:9">{<block_content pos:start="100:13" pos:end="120:13">
            <if_stmt pos:start="100:13" pos:end="103:13"><if pos:start="100:13" pos:end="103:13">if <condition pos:start="100:16" pos:end="100:29">(<expr pos:start="100:17" pos:end="100:28"><name pos:start="100:17" pos:end="100:23"><name pos:start="100:17" pos:end="100:17">a</name><index pos:start="100:18" pos:end="100:20">[<expr pos:start="100:19" pos:end="100:19"><name pos:start="100:19" pos:end="100:19">i</name></expr>]</index><index pos:start="100:21" pos:end="100:23">[<expr pos:start="100:22" pos:end="100:22"><name pos:start="100:22" pos:end="100:22">j</name></expr>]</index></name><operator pos:start="100:24" pos:end="100:25">==</operator><literal type="char" pos:start="100:26" pos:end="100:28">'#'</literal></expr>)</condition><block pos:start="100:30" pos:end="103:13">{<block_content pos:start="101:17" pos:end="102:25">
                <expr_stmt pos:start="101:17" pos:end="101:32"><expr pos:start="101:17" pos:end="101:31"><name pos:start="101:17" pos:end="101:26"><name pos:start="101:17" pos:end="101:18">mp</name><index pos:start="101:19" pos:end="101:26">[<expr pos:start="101:20" pos:end="101:25"><call pos:start="101:20" pos:end="101:25"><name pos:start="101:20" pos:end="101:20">c</name><argument_list pos:start="101:21" pos:end="101:25">(<argument pos:start="101:22" pos:end="101:22"><expr pos:start="101:22" pos:end="101:22"><name pos:start="101:22" pos:end="101:22">i</name></expr></argument>,<argument pos:start="101:24" pos:end="101:24"><expr pos:start="101:24" pos:end="101:24"><name pos:start="101:24" pos:end="101:24">j</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="101:27" pos:end="101:27">=</operator><operator pos:start="101:28" pos:end="101:28">-</operator><name pos:start="101:29" pos:end="101:31">INF</name></expr>;</expr_stmt>
                <continue pos:start="102:17" pos:end="102:25">continue;</continue>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="104:13" pos:end="107:13"><if pos:start="104:13" pos:end="107:13">if <condition pos:start="104:16" pos:end="104:29">(<expr pos:start="104:17" pos:end="104:28"><name pos:start="104:17" pos:end="104:23"><name pos:start="104:17" pos:end="104:17">a</name><index pos:start="104:18" pos:end="104:20">[<expr pos:start="104:19" pos:end="104:19"><name pos:start="104:19" pos:end="104:19">i</name></expr>]</index><index pos:start="104:21" pos:end="104:23">[<expr pos:start="104:22" pos:end="104:22"><name pos:start="104:22" pos:end="104:22">j</name></expr>]</index></name><operator pos:start="104:24" pos:end="104:25">==</operator><literal type="char" pos:start="104:26" pos:end="104:28">'*'</literal></expr>)</condition><block pos:start="104:30" pos:end="107:13">{<block_content pos:start="105:17" pos:end="106:29">
                <expr_stmt pos:start="105:17" pos:end="105:37"><expr pos:start="105:17" pos:end="105:36"><call pos:start="105:17" pos:end="105:36"><name pos:start="105:17" pos:end="105:19">add</name><argument_list pos:start="105:20" pos:end="105:36">(<argument pos:start="105:21" pos:end="105:26"><expr pos:start="105:21" pos:end="105:26"><call pos:start="105:21" pos:end="105:26"><name pos:start="105:21" pos:end="105:21">c</name><argument_list pos:start="105:22" pos:end="105:26">(<argument pos:start="105:23" pos:end="105:23"><expr pos:start="105:23" pos:end="105:23"><name pos:start="105:23" pos:end="105:23">i</name></expr></argument>,<argument pos:start="105:25" pos:end="105:25"><expr pos:start="105:25" pos:end="105:25"><name pos:start="105:25" pos:end="105:25">j</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="105:28" pos:end="105:35"><expr pos:start="105:28" pos:end="105:35"><call pos:start="105:28" pos:end="105:35"><name pos:start="105:28" pos:end="105:28">c</name><argument_list pos:start="105:29" pos:end="105:35">(<argument pos:start="105:30" pos:end="105:31"><expr pos:start="105:30" pos:end="105:31"><name pos:start="105:30" pos:end="105:31">ex</name></expr></argument>,<argument pos:start="105:33" pos:end="105:34"><expr pos:start="105:33" pos:end="105:34"><name pos:start="105:33" pos:end="105:34">ey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="106:17" pos:end="106:29"><expr pos:start="106:17" pos:end="106:28"><name pos:start="106:17" pos:end="106:26"><name pos:start="106:17" pos:end="106:18">mp</name><index pos:start="106:19" pos:end="106:26">[<expr pos:start="106:20" pos:end="106:25"><call pos:start="106:20" pos:end="106:25"><name pos:start="106:20" pos:end="106:20">c</name><argument_list pos:start="106:21" pos:end="106:25">(<argument pos:start="106:22" pos:end="106:22"><expr pos:start="106:22" pos:end="106:22"><name pos:start="106:22" pos:end="106:22">i</name></expr></argument>,<argument pos:start="106:24" pos:end="106:24"><expr pos:start="106:24" pos:end="106:24"><name pos:start="106:24" pos:end="106:24">j</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="106:27" pos:end="106:27">=</operator><literal type="number" pos:start="106:28" pos:end="106:28">0</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="108:13" pos:end="112:13"><if pos:start="108:13" pos:end="112:13">if <condition pos:start="108:16" pos:end="108:21">(<expr pos:start="108:17" pos:end="108:20"><name pos:start="108:17" pos:end="108:17">i</name><operator pos:start="108:18" pos:end="108:19">!=</operator><literal type="number" pos:start="108:20" pos:end="108:20">0</literal></expr>)</condition><block pos:start="108:22" pos:end="112:13">{<block_content pos:start="109:17" pos:end="111:17">
                <if_stmt pos:start="109:17" pos:end="111:17"><if pos:start="109:17" pos:end="111:17">if <condition pos:start="109:20" pos:end="109:35">(<expr pos:start="109:21" pos:end="109:34"><name pos:start="109:21" pos:end="109:29"><name pos:start="109:21" pos:end="109:21">a</name><index pos:start="109:22" pos:end="109:26">[<expr pos:start="109:23" pos:end="109:25"><name pos:start="109:23" pos:end="109:23">i</name><operator pos:start="109:24" pos:end="109:24">-</operator><literal type="number" pos:start="109:25" pos:end="109:25">1</literal></expr>]</index><index pos:start="109:27" pos:end="109:29">[<expr pos:start="109:28" pos:end="109:28"><name pos:start="109:28" pos:end="109:28">j</name></expr>]</index></name><operator pos:start="109:30" pos:end="109:31">!=</operator><literal type="char" pos:start="109:32" pos:end="109:34">'#'</literal></expr>)</condition><block pos:start="109:36" pos:end="111:17">{<block_content pos:start="110:21" pos:end="110:41">
                    <expr_stmt pos:start="110:21" pos:end="110:41"><expr pos:start="110:21" pos:end="110:40"><call pos:start="110:21" pos:end="110:40"><name pos:start="110:21" pos:end="110:23">add</name><argument_list pos:start="110:24" pos:end="110:40">(<argument pos:start="110:25" pos:end="110:32"><expr pos:start="110:25" pos:end="110:32"><call pos:start="110:25" pos:end="110:32"><name pos:start="110:25" pos:end="110:25">c</name><argument_list pos:start="110:26" pos:end="110:32">(<argument pos:start="110:27" pos:end="110:29"><expr pos:start="110:27" pos:end="110:29"><name pos:start="110:27" pos:end="110:27">i</name><operator pos:start="110:28" pos:end="110:28">-</operator><literal type="number" pos:start="110:29" pos:end="110:29">1</literal></expr></argument>,<argument pos:start="110:31" pos:end="110:31"><expr pos:start="110:31" pos:end="110:31"><name pos:start="110:31" pos:end="110:31">j</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="110:34" pos:end="110:39"><expr pos:start="110:34" pos:end="110:39"><call pos:start="110:34" pos:end="110:39"><name pos:start="110:34" pos:end="110:34">c</name><argument_list pos:start="110:35" pos:end="110:39">(<argument pos:start="110:36" pos:end="110:36"><expr pos:start="110:36" pos:end="110:36"><name pos:start="110:36" pos:end="110:36">i</name></expr></argument>,<argument pos:start="110:38" pos:end="110:38"><expr pos:start="110:38" pos:end="110:38"><name pos:start="110:38" pos:end="110:38">j</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="113:13" pos:end="117:13"><if pos:start="113:13" pos:end="117:13">if <condition pos:start="113:16" pos:end="113:21">(<expr pos:start="113:17" pos:end="113:20"><name pos:start="113:17" pos:end="113:17">j</name><operator pos:start="113:18" pos:end="113:19">!=</operator><literal type="number" pos:start="113:20" pos:end="113:20">0</literal></expr>)</condition><block pos:start="113:22" pos:end="117:13">{<block_content pos:start="114:17" pos:end="116:17">
                <if_stmt pos:start="114:17" pos:end="116:17"><if pos:start="114:17" pos:end="116:17">if <condition pos:start="114:20" pos:end="114:35">(<expr pos:start="114:21" pos:end="114:34"><name pos:start="114:21" pos:end="114:29"><name pos:start="114:21" pos:end="114:21">a</name><index pos:start="114:22" pos:end="114:24">[<expr pos:start="114:23" pos:end="114:23"><name pos:start="114:23" pos:end="114:23">i</name></expr>]</index><index pos:start="114:25" pos:end="114:29">[<expr pos:start="114:26" pos:end="114:28"><name pos:start="114:26" pos:end="114:26">j</name><operator pos:start="114:27" pos:end="114:27">-</operator><literal type="number" pos:start="114:28" pos:end="114:28">1</literal></expr>]</index></name><operator pos:start="114:30" pos:end="114:31">!=</operator><literal type="char" pos:start="114:32" pos:end="114:34">'#'</literal></expr>)</condition><block pos:start="114:36" pos:end="116:17">{<block_content pos:start="115:21" pos:end="115:41">
                    <expr_stmt pos:start="115:21" pos:end="115:41"><expr pos:start="115:21" pos:end="115:40"><call pos:start="115:21" pos:end="115:40"><name pos:start="115:21" pos:end="115:23">add</name><argument_list pos:start="115:24" pos:end="115:40">(<argument pos:start="115:25" pos:end="115:32"><expr pos:start="115:25" pos:end="115:32"><call pos:start="115:25" pos:end="115:32"><name pos:start="115:25" pos:end="115:25">c</name><argument_list pos:start="115:26" pos:end="115:32">(<argument pos:start="115:27" pos:end="115:27"><expr pos:start="115:27" pos:end="115:27"><name pos:start="115:27" pos:end="115:27">i</name></expr></argument>,<argument pos:start="115:29" pos:end="115:31"><expr pos:start="115:29" pos:end="115:31"><name pos:start="115:29" pos:end="115:29">j</name><operator pos:start="115:30" pos:end="115:30">-</operator><literal type="number" pos:start="115:31" pos:end="115:31">1</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="115:34" pos:end="115:39"><expr pos:start="115:34" pos:end="115:39"><call pos:start="115:34" pos:end="115:39"><name pos:start="115:34" pos:end="115:34">c</name><argument_list pos:start="115:35" pos:end="115:39">(<argument pos:start="115:36" pos:end="115:36"><expr pos:start="115:36" pos:end="115:36"><name pos:start="115:36" pos:end="115:36">i</name></expr></argument>,<argument pos:start="115:38" pos:end="115:38"><expr pos:start="115:38" pos:end="115:38"><name pos:start="115:38" pos:end="115:38">j</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="118:13" pos:end="120:13"><if pos:start="118:13" pos:end="120:13">if <condition pos:start="118:16" pos:end="118:34">(<expr pos:start="118:17" pos:end="118:33"><operator pos:start="118:17" pos:end="118:17">!</operator><call pos:start="118:18" pos:end="118:33"><name pos:start="118:18" pos:end="118:25"><name pos:start="118:18" pos:end="118:19">mp</name><operator pos:start="118:20" pos:end="118:20">.</operator><name pos:start="118:21" pos:end="118:25">count</name></name><argument_list pos:start="118:26" pos:end="118:33">(<argument pos:start="118:27" pos:end="118:32"><expr pos:start="118:27" pos:end="118:32"><call pos:start="118:27" pos:end="118:32"><name pos:start="118:27" pos:end="118:27">c</name><argument_list pos:start="118:28" pos:end="118:32">(<argument pos:start="118:29" pos:end="118:29"><expr pos:start="118:29" pos:end="118:29"><name pos:start="118:29" pos:end="118:29">i</name></expr></argument>,<argument pos:start="118:31" pos:end="118:31"><expr pos:start="118:31" pos:end="118:31"><name pos:start="118:31" pos:end="118:31">j</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="118:35" pos:end="120:13">{<block_content pos:start="119:17" pos:end="119:39">
                <expr_stmt pos:start="119:17" pos:end="119:39"><expr pos:start="119:17" pos:end="119:38"><name pos:start="119:17" pos:end="119:26"><name pos:start="119:17" pos:end="119:18">mp</name><index pos:start="119:19" pos:end="119:26">[<expr pos:start="119:20" pos:end="119:25"><call pos:start="119:20" pos:end="119:25"><name pos:start="119:20" pos:end="119:20">c</name><argument_list pos:start="119:21" pos:end="119:25">(<argument pos:start="119:22" pos:end="119:22"><expr pos:start="119:22" pos:end="119:22"><name pos:start="119:22" pos:end="119:22">i</name></expr></argument>,<argument pos:start="119:24" pos:end="119:24"><expr pos:start="119:24" pos:end="119:24"><name pos:start="119:24" pos:end="119:24">j</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="119:27" pos:end="119:27">=</operator><name pos:start="119:28" pos:end="119:34"><name pos:start="119:28" pos:end="119:28">a</name><index pos:start="119:29" pos:end="119:31">[<expr pos:start="119:30" pos:end="119:30"><name pos:start="119:30" pos:end="119:30">i</name></expr>]</index><index pos:start="119:32" pos:end="119:34">[<expr pos:start="119:33" pos:end="119:33"><name pos:start="119:33" pos:end="119:33">j</name></expr>]</index></name><operator pos:start="119:35" pos:end="119:35">-</operator><literal type="char" pos:start="119:36" pos:end="119:38">'0'</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block>
    </block_content>}</block>
    <decl_stmt pos:start="123:5" pos:end="123:19"><decl pos:start="123:5" pos:end="123:18"><type pos:start="123:5" pos:end="123:7"><name pos:start="123:5" pos:end="123:7">int</name></type> <name pos:start="123:9" pos:end="123:12">ncnt</name><init pos:start="123:13" pos:end="123:18">=<expr pos:start="123:14" pos:end="123:18"><name pos:start="123:14" pos:end="123:14">n</name><operator pos:start="123:15" pos:end="123:15">*</operator><name pos:start="123:16" pos:end="123:16">m</name><operator pos:start="123:17" pos:end="123:17">+</operator><literal type="number" pos:start="123:18" pos:end="123:18">1</literal></expr></init></decl>;</decl_stmt>
    <macro pos:start="124:5" pos:end="124:18"><name pos:start="124:5" pos:end="124:8">_for</name><argument_list pos:start="124:9" pos:end="124:18">(<argument pos:start="124:10" pos:end="124:10">i</argument>,<argument pos:start="124:12" pos:end="124:12"><literal type="number" pos:start="124:12" pos:end="124:12">1</literal></argument>,<argument pos:start="124:14" pos:end="124:17">ncnt</argument>)</argument_list></macro><block pos:start="124:19" pos:end="128:5">{<block_content pos:start="125:9" pos:end="127:9">
        <if_stmt pos:start="125:9" pos:end="127:9"><if pos:start="125:9" pos:end="127:9">if <condition pos:start="125:12" pos:end="125:35">(<expr pos:start="125:13" pos:end="125:34"><operator pos:start="125:13" pos:end="125:13">!</operator><name pos:start="125:14" pos:end="125:19"><name pos:start="125:14" pos:end="125:16">dfn</name><index pos:start="125:17" pos:end="125:19">[<expr pos:start="125:18" pos:end="125:18"><name pos:start="125:18" pos:end="125:18">i</name></expr>]</index></name> <operator pos:start="125:21" pos:end="125:22">&amp;&amp;</operator> <name pos:start="125:24" pos:end="125:28"><name pos:start="125:24" pos:end="125:25">mp</name><index pos:start="125:26" pos:end="125:28">[<expr pos:start="125:27" pos:end="125:27"><name pos:start="125:27" pos:end="125:27">i</name></expr>]</index></name><operator pos:start="125:29" pos:end="125:30">!=</operator><operator pos:start="125:31" pos:end="125:31">-</operator><name pos:start="125:32" pos:end="125:34">INF</name></expr>)</condition><block pos:start="125:36" pos:end="127:9">{<block_content pos:start="126:13" pos:end="126:22">
            <expr_stmt pos:start="126:13" pos:end="126:22"><expr pos:start="126:13" pos:end="126:21"><call pos:start="126:13" pos:end="126:21"><name pos:start="126:13" pos:end="126:18">tarjan</name><argument_list pos:start="126:19" pos:end="126:21">(<argument pos:start="126:20" pos:end="126:20"><expr pos:start="126:20" pos:end="126:20"><name pos:start="126:20" pos:end="126:20">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block>
    <expr_stmt pos:start="129:5" pos:end="129:15"><expr pos:start="129:5" pos:end="129:14"><call pos:start="129:5" pos:end="129:14"><name pos:start="129:5" pos:end="129:12">new_init</name><argument_list pos:start="129:13" pos:end="129:14">()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="130:5" pos:end="130:26"><decl pos:start="130:5" pos:end="130:25"><type pos:start="130:5" pos:end="130:7"><name pos:start="130:5" pos:end="130:7">int</name></type> <name pos:start="130:9" pos:end="130:16">first_id</name><init pos:start="130:17" pos:end="130:25">=<expr pos:start="130:18" pos:end="130:25"><name pos:start="130:18" pos:end="130:25"><name pos:start="130:18" pos:end="130:22">sccno</name><index pos:start="130:23" pos:end="130:25">[<expr pos:start="130:24" pos:end="130:24"><literal type="number" pos:start="130:24" pos:end="130:24">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <macro pos:start="131:5" pos:end="131:18"><name pos:start="131:5" pos:end="131:8">_for</name><argument_list pos:start="131:9" pos:end="131:18">(<argument pos:start="131:10" pos:end="131:10">u</argument>,<argument pos:start="131:12" pos:end="131:12"><literal type="number" pos:start="131:12" pos:end="131:12">1</literal></argument>,<argument pos:start="131:14" pos:end="131:17">ncnt</argument>)</argument_list></macro><block pos:start="131:19" pos:end="139:5">{<block_content pos:start="132:9" pos:end="138:9">
        <for pos:start="132:9" pos:end="138:9">for <control pos:start="132:13" pos:end="132:35">(<init pos:start="132:14" pos:end="132:24"><decl pos:start="132:14" pos:end="132:23"><type pos:start="132:14" pos:end="132:16"><name pos:start="132:14" pos:end="132:16">int</name></type> <name pos:start="132:18" pos:end="132:18">i</name><init pos:start="132:19" pos:end="132:23">=<expr pos:start="132:20" pos:end="132:23"><name pos:start="132:20" pos:end="132:23"><name pos:start="132:20" pos:end="132:20">h</name><index pos:start="132:21" pos:end="132:23">[<expr pos:start="132:22" pos:end="132:22"><name pos:start="132:22" pos:end="132:22">u</name></expr>]</index></name></expr></init></decl>;</init><condition pos:start="132:25" pos:end="132:27"><expr pos:start="132:25" pos:end="132:26"><operator pos:start="132:25" pos:end="132:25">~</operator><name pos:start="132:26" pos:end="132:26">i</name></expr>;</condition><incr pos:start="132:28" pos:end="132:34"><expr pos:start="132:28" pos:end="132:34"><name pos:start="132:28" pos:end="132:28">i</name><operator pos:start="132:29" pos:end="132:29">=</operator><name pos:start="132:30" pos:end="132:34"><name pos:start="132:30" pos:end="132:31">ne</name><index pos:start="132:32" pos:end="132:34">[<expr pos:start="132:33" pos:end="132:33"><name pos:start="132:33" pos:end="132:33">i</name></expr>]</index></name></expr></incr>)</control><block pos:start="132:36" pos:end="138:9">{<block_content pos:start="133:13" pos:end="137:13">
            <decl_stmt pos:start="133:13" pos:end="133:23"><decl pos:start="133:13" pos:end="133:22"><type pos:start="133:13" pos:end="133:15"><name pos:start="133:13" pos:end="133:15">int</name></type> <name pos:start="133:17" pos:end="133:17">v</name><init pos:start="133:18" pos:end="133:22">=<expr pos:start="133:19" pos:end="133:22"><name pos:start="133:19" pos:end="133:22"><name pos:start="133:19" pos:end="133:19">e</name><index pos:start="133:20" pos:end="133:22">[<expr pos:start="133:21" pos:end="133:21"><name pos:start="133:21" pos:end="133:21">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="134:13" pos:end="137:13"><if pos:start="134:13" pos:end="137:13">if <condition pos:start="134:16" pos:end="134:70">(<expr pos:start="134:17" pos:end="134:69"><name pos:start="134:17" pos:end="134:24"><name pos:start="134:17" pos:end="134:21">sccno</name><index pos:start="134:22" pos:end="134:24">[<expr pos:start="134:23" pos:end="134:23"><name pos:start="134:23" pos:end="134:23">u</name></expr>]</index></name><operator pos:start="134:25" pos:end="134:26">!=</operator><name pos:start="134:27" pos:end="134:34"><name pos:start="134:27" pos:end="134:31">sccno</name><index pos:start="134:32" pos:end="134:34">[<expr pos:start="134:33" pos:end="134:33"><name pos:start="134:33" pos:end="134:33">v</name></expr>]</index></name> <operator pos:start="134:36" pos:end="134:37">&amp;&amp;</operator> <operator pos:start="134:39" pos:end="134:39">!</operator><call pos:start="134:40" pos:end="134:69"><name pos:start="134:40" pos:end="134:48"><name pos:start="134:40" pos:end="134:42">vis</name><operator pos:start="134:43" pos:end="134:43">.</operator><name pos:start="134:44" pos:end="134:48">count</name></name><argument_list pos:start="134:49" pos:end="134:69">(<argument pos:start="134:50" pos:end="134:68"><expr pos:start="134:50" pos:end="134:68"><block pos:start="134:50" pos:end="134:68">{<expr pos:start="134:51" pos:end="134:58"><name pos:start="134:51" pos:end="134:58"><name pos:start="134:51" pos:end="134:55">sccno</name><index pos:start="134:56" pos:end="134:58">[<expr pos:start="134:57" pos:end="134:57"><name pos:start="134:57" pos:end="134:57">u</name></expr>]</index></name></expr>,<expr pos:start="134:60" pos:end="134:67"><name pos:start="134:60" pos:end="134:67"><name pos:start="134:60" pos:end="134:64">sccno</name><index pos:start="134:65" pos:end="134:67">[<expr pos:start="134:66" pos:end="134:66"><name pos:start="134:66" pos:end="134:66">v</name></expr>]</index></name></expr>}</block></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="134:71" pos:end="137:13">{<block_content pos:start="135:17" pos:end="136:43">
                <expr_stmt pos:start="135:17" pos:end="135:48"><expr pos:start="135:17" pos:end="135:47"><call pos:start="135:17" pos:end="135:47"><name pos:start="135:17" pos:end="135:26"><name pos:start="135:17" pos:end="135:19">vis</name><operator pos:start="135:20" pos:end="135:20">.</operator><name pos:start="135:21" pos:end="135:26">insert</name></name><argument_list pos:start="135:27" pos:end="135:47">(<argument pos:start="135:28" pos:end="135:46"><expr pos:start="135:28" pos:end="135:46"><block pos:start="135:28" pos:end="135:46">{<expr pos:start="135:29" pos:end="135:36"><name pos:start="135:29" pos:end="135:36"><name pos:start="135:29" pos:end="135:33">sccno</name><index pos:start="135:34" pos:end="135:36">[<expr pos:start="135:35" pos:end="135:35"><name pos:start="135:35" pos:end="135:35">u</name></expr>]</index></name></expr>,<expr pos:start="135:38" pos:end="135:45"><name pos:start="135:38" pos:end="135:45"><name pos:start="135:38" pos:end="135:42">sccno</name><index pos:start="135:43" pos:end="135:45">[<expr pos:start="135:44" pos:end="135:44"><name pos:start="135:44" pos:end="135:44">v</name></expr>]</index></name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="136:17" pos:end="136:43"><expr pos:start="136:17" pos:end="136:42"><call pos:start="136:17" pos:end="136:42"><name pos:start="136:17" pos:end="136:23">new_add</name><argument_list pos:start="136:24" pos:end="136:42">(<argument pos:start="136:25" pos:end="136:32"><expr pos:start="136:25" pos:end="136:32"><name pos:start="136:25" pos:end="136:32"><name pos:start="136:25" pos:end="136:29">sccno</name><index pos:start="136:30" pos:end="136:32">[<expr pos:start="136:31" pos:end="136:31"><name pos:start="136:31" pos:end="136:31">u</name></expr>]</index></name></expr></argument>,<argument pos:start="136:34" pos:end="136:41"><expr pos:start="136:34" pos:end="136:41"><name pos:start="136:34" pos:end="136:41"><name pos:start="136:34" pos:end="136:38">sccno</name><index pos:start="136:39" pos:end="136:41">[<expr pos:start="136:40" pos:end="136:40"><name pos:start="136:40" pos:end="136:40">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block>
    <expr_stmt pos:start="140:5" pos:end="140:27"><expr pos:start="140:5" pos:end="140:26"><call pos:start="140:5" pos:end="140:26"><name pos:start="140:5" pos:end="140:10">memset</name><argument_list pos:start="140:11" pos:end="140:26">(<argument pos:start="140:12" pos:end="140:12"><expr pos:start="140:12" pos:end="140:12"><name pos:start="140:12" pos:end="140:12">f</name></expr></argument>,<argument pos:start="140:14" pos:end="140:15"><expr pos:start="140:14" pos:end="140:15"><operator pos:start="140:14" pos:end="140:14">-</operator><literal type="number" pos:start="140:15" pos:end="140:15">1</literal></expr></argument>,<argument pos:start="140:17" pos:end="140:25"><expr pos:start="140:17" pos:end="140:25"><sizeof pos:start="140:17" pos:end="140:25">sizeof<argument_list pos:start="140:23" pos:end="140:25">(<argument pos:start="140:24" pos:end="140:24"><expr pos:start="140:24" pos:end="140:24"><name pos:start="140:24" pos:end="140:24">f</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="141:5" pos:end="141:26"><decl pos:start="141:5" pos:end="141:25"><type pos:start="141:5" pos:end="141:7"><name pos:start="141:5" pos:end="141:7">int</name></type> <name pos:start="141:9" pos:end="141:11">ans</name><init pos:start="141:12" pos:end="141:25">=<expr pos:start="141:13" pos:end="141:25"><call pos:start="141:13" pos:end="141:25"><name pos:start="141:13" pos:end="141:15">dfs</name><argument_list pos:start="141:16" pos:end="141:25">(<argument pos:start="141:17" pos:end="141:24"><expr pos:start="141:17" pos:end="141:24"><name pos:start="141:17" pos:end="141:24">first_id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="142:5" pos:end="142:20"><expr pos:start="142:5" pos:end="142:19"><name pos:start="142:5" pos:end="142:8">cout</name><operator pos:start="142:9" pos:end="142:10">&lt;&lt;</operator><name pos:start="142:11" pos:end="142:13">ans</name><operator pos:start="142:14" pos:end="142:15">&lt;&lt;</operator><name pos:start="142:16" pos:end="142:19">endl</name></expr>;</expr_stmt>
    <return pos:start="143:5" pos:end="143:13">return <expr pos:start="143:12" pos:end="143:12"><literal type="number" pos:start="143:12" pos:end="143:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
