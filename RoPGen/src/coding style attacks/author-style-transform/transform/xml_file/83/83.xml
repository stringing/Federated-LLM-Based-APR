<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/83/83.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:26"><decl pos:start="3:1" pos:end="3:19"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:7">sum</name><index pos:start="3:8" pos:end="3:19">[<expr pos:start="3:9" pos:end="3:18"><literal type="number" pos:start="3:9" pos:end="3:16">1000000</literal><operator pos:start="3:16" pos:end="3:16">+</operator><literal type="number" pos:start="3:17" pos:end="3:18">10</literal></expr>]</index></name></decl>,<decl pos:start="3:21" pos:end="3:25"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:21" pos:end="3:23">cnt</name><init pos:start="3:24" pos:end="3:25">=<expr pos:start="3:25" pos:end="3:25"><literal type="number" pos:start="3:25" pos:end="3:25">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="17:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">void</name></type> <name pos:start="4:6" pos:end="4:8">fly</name><parameter_list pos:start="4:9" pos:end="4:15">(<parameter pos:start="4:10" pos:end="4:14"><decl pos:start="4:10" pos:end="4:14"><type pos:start="4:10" pos:end="4:12"><name pos:start="4:10" pos:end="4:12">int</name></type> <name pos:start="4:14" pos:end="4:14">n</name></decl></parameter>)</parameter_list><block pos:start="4:16" pos:end="17:1">{<block_content pos:start="5:5" pos:end="16:5">
    <if_stmt pos:start="5:5" pos:end="5:29"><if pos:start="5:5" pos:end="5:29">if<condition pos:start="5:7" pos:end="5:21">(<expr pos:start="5:8" pos:end="5:20"><call pos:start="5:8" pos:end="5:20"><name pos:start="5:8" pos:end="5:11">find</name><argument_list pos:start="5:12" pos:end="5:20">(<argument pos:start="5:13" pos:end="5:13"><expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">1</literal></expr></argument>,<argument pos:start="5:15" pos:end="5:17"><expr pos:start="5:15" pos:end="5:17"><name pos:start="5:15" pos:end="5:17">cnt</name></expr></argument>,<argument pos:start="5:19" pos:end="5:19"><expr pos:start="5:19" pos:end="5:19"><name pos:start="5:19" pos:end="5:19">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="5:22" pos:end="5:29"><block_content pos:start="5:22" pos:end="5:29"><return pos:start="5:22" pos:end="5:29">return ;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="6:5" pos:end="16:5"><if pos:start="6:5" pos:end="11:5">if<condition pos:start="6:7" pos:end="6:14">(<expr pos:start="6:8" pos:end="6:13"><name pos:start="6:8" pos:end="6:8">n</name><operator pos:start="6:9" pos:end="6:9">%</operator><literal type="number" pos:start="6:10" pos:end="6:10">2</literal><operator pos:start="6:11" pos:end="6:12">==</operator><literal type="number" pos:start="6:13" pos:end="6:13">0</literal></expr>)</condition><block pos:start="6:15" pos:end="11:5">{<block_content pos:start="7:9" pos:end="10:17">
        <expr_stmt pos:start="7:9" pos:end="7:27"><expr pos:start="7:9" pos:end="7:26"><call pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:14">printf</name><argument_list pos:start="7:15" pos:end="7:26">(<argument pos:start="7:16" pos:end="7:21"><expr pos:start="7:16" pos:end="7:21"><literal type="string" pos:start="7:16" pos:end="7:21">", %d"</literal></expr></argument>,<argument pos:start="7:23" pos:end="7:25"><expr pos:start="7:23" pos:end="7:25"><name pos:start="7:23" pos:end="7:23">n</name><operator pos:start="7:24" pos:end="7:24">/</operator><literal type="number" pos:start="7:25" pos:end="7:25">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:14"><expr pos:start="8:9" pos:end="8:13"><name pos:start="8:9" pos:end="8:11">cnt</name><operator pos:start="8:12" pos:end="8:13">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:19"><expr pos:start="9:9" pos:end="9:18"><name pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">sum</name><index pos:start="9:12" pos:end="9:16">[<expr pos:start="9:13" pos:end="9:15"><name pos:start="9:13" pos:end="9:15">cnt</name></expr>]</index></name><operator pos:start="9:17" pos:end="9:17">=</operator><name pos:start="9:18" pos:end="9:18">n</name></expr>;</expr_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:17"><expr pos:start="10:9" pos:end="10:16"><call pos:start="10:9" pos:end="10:16"><name pos:start="10:9" pos:end="10:11">fly</name><argument_list pos:start="10:12" pos:end="10:16">(<argument pos:start="10:13" pos:end="10:15"><expr pos:start="10:13" pos:end="10:15"><name pos:start="10:13" pos:end="10:13">n</name><operator pos:start="10:14" pos:end="10:14">/</operator><literal type="number" pos:start="10:15" pos:end="10:15">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="11:6" pos:end="16:5">else<block pos:start="11:10" pos:end="16:5">{<block_content pos:start="12:9" pos:end="15:27">
        <expr_stmt pos:start="12:9" pos:end="12:37"><expr pos:start="12:9" pos:end="12:36"><call pos:start="12:9" pos:end="12:36"><name pos:start="12:9" pos:end="12:14">printf</name><argument_list pos:start="12:15" pos:end="12:36">(<argument pos:start="12:16" pos:end="12:21"><expr pos:start="12:16" pos:end="12:21"><literal type="string" pos:start="12:16" pos:end="12:21">", %d"</literal></expr></argument>,<argument pos:start="12:23" pos:end="12:35"><expr pos:start="12:23" pos:end="12:35"><literal type="number" pos:start="12:23" pos:end="12:23">6</literal><operator pos:start="12:24" pos:end="12:24">*</operator><operator pos:start="12:25" pos:end="12:25">(</operator><operator pos:start="12:26" pos:end="12:26">(</operator><name pos:start="12:27" pos:end="12:27">n</name><operator pos:start="12:28" pos:end="12:28">-</operator><literal type="number" pos:start="12:29" pos:end="12:29">1</literal><operator pos:start="12:30" pos:end="12:30">)</operator><operator pos:start="12:31" pos:end="12:31">/</operator><literal type="number" pos:start="12:32" pos:end="12:32">2</literal><operator pos:start="12:33" pos:end="12:33">)</operator><operator pos:start="12:34" pos:end="12:34">+</operator><literal type="number" pos:start="12:35" pos:end="12:35">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:14"><expr pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:11">cnt</name><operator pos:start="13:12" pos:end="13:13">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:19"><expr pos:start="14:9" pos:end="14:18"><name pos:start="14:9" pos:end="14:16"><name pos:start="14:9" pos:end="14:11">sum</name><index pos:start="14:12" pos:end="14:16">[<expr pos:start="14:13" pos:end="14:15"><name pos:start="14:13" pos:end="14:15">cnt</name></expr>]</index></name><operator pos:start="14:17" pos:end="14:17">=</operator><name pos:start="14:18" pos:end="14:18">n</name></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:27"><expr pos:start="15:9" pos:end="15:26"><call pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:11">fly</name><argument_list pos:start="15:12" pos:end="15:26">(<argument pos:start="15:13" pos:end="15:25"><expr pos:start="15:13" pos:end="15:25"><literal type="number" pos:start="15:13" pos:end="15:13">6</literal><operator pos:start="15:14" pos:end="15:14">*</operator><operator pos:start="15:15" pos:end="15:15">(</operator><operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:17">n</name><operator pos:start="15:18" pos:end="15:18">-</operator><literal type="number" pos:start="15:19" pos:end="15:19">1</literal><operator pos:start="15:20" pos:end="15:20">)</operator><operator pos:start="15:21" pos:end="15:21">/</operator><literal type="number" pos:start="15:22" pos:end="15:22">2</literal><operator pos:start="15:23" pos:end="15:23">)</operator><operator pos:start="15:24" pos:end="15:24">+</operator><literal type="number" pos:start="15:25" pos:end="15:25">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="18:1" pos:end="23:1"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:8">main</name><parameter_list pos:start="18:9" pos:end="18:10">()</parameter_list><block pos:start="18:11" pos:end="23:1">{<block_content pos:start="19:5" pos:end="22:11">
    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:11"><expr pos:start="20:5" pos:end="20:10"><name pos:start="20:5" pos:end="20:7">cin</name><operator pos:start="20:8" pos:end="20:9">&gt;&gt;</operator><name pos:start="20:10" pos:end="20:10">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:12"><expr pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:8">cout</name><operator pos:start="21:9" pos:end="21:10">&lt;&lt;</operator><name pos:start="21:11" pos:end="21:11">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:11"><expr pos:start="22:5" pos:end="22:10"><call pos:start="22:5" pos:end="22:10"><name pos:start="22:5" pos:end="22:7">fly</name><argument_list pos:start="22:8" pos:end="22:10">(<argument pos:start="22:9" pos:end="22:9"><expr pos:start="22:9" pos:end="22:9"><name pos:start="22:9" pos:end="22:9">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
