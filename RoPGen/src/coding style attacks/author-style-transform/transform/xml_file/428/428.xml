<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/428/428.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:17">&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:16">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:16">&lt;vector&gt;</cpp:file></cpp:include>
<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<decl_stmt pos:start="6:1" pos:end="6:19"><decl pos:start="6:1" pos:end="6:18"><type pos:start="6:1" pos:end="6:11"><name pos:start="6:1" pos:end="6:11"><name pos:start="6:1" pos:end="6:6">vector</name><argument_list type="generic" pos:start="6:7" pos:end="6:11">&lt;<argument pos:start="6:8" pos:end="6:10"><expr pos:start="6:8" pos:end="6:10"><name pos:start="6:8" pos:end="6:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:13" pos:end="6:18"><name pos:start="6:13" pos:end="6:13">a</name><index pos:start="6:14" pos:end="6:18">[<expr pos:start="6:15" pos:end="6:17"><literal type="number" pos:start="6:15" pos:end="6:17">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:13"><decl pos:start="7:1" pos:end="7:12"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:6">fa</name><index pos:start="7:7" pos:end="7:12">[<expr pos:start="7:8" pos:end="7:11"><literal type="number" pos:start="7:8" pos:end="7:11">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="8:1" pos:end="42:1"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:8">main</name><parameter_list pos:start="8:9" pos:end="8:10">()</parameter_list><block pos:start="8:11" pos:end="42:1">{<block_content pos:start="9:5" pos:end="41:13">
    <expr_stmt pos:start="9:5" pos:end="9:30"><expr pos:start="9:5" pos:end="9:29"><call pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:11">freopen</name><argument_list pos:start="9:12" pos:end="9:29">(<argument pos:start="9:13" pos:end="9:18"><expr pos:start="9:13" pos:end="9:18"><literal type="string" pos:start="9:13" pos:end="9:18">"p.in"</literal></expr></argument>,<argument pos:start="9:20" pos:end="9:22"><expr pos:start="9:20" pos:end="9:22"><literal type="string" pos:start="9:20" pos:end="9:22">"r"</literal></expr></argument>,<argument pos:start="9:24" pos:end="9:28"><expr pos:start="9:24" pos:end="9:28"><name pos:start="9:24" pos:end="9:28">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:32"><expr pos:start="10:5" pos:end="10:31"><call pos:start="10:5" pos:end="10:31"><name pos:start="10:5" pos:end="10:11">freopen</name><argument_list pos:start="10:12" pos:end="10:31">(<argument pos:start="10:13" pos:end="10:19"><expr pos:start="10:13" pos:end="10:19"><literal type="string" pos:start="10:13" pos:end="10:19">"p.out"</literal></expr></argument>,<argument pos:start="10:21" pos:end="10:23"><expr pos:start="10:21" pos:end="10:23"><literal type="string" pos:start="10:21" pos:end="10:23">"w"</literal></expr></argument>,<argument pos:start="10:25" pos:end="10:30"><expr pos:start="10:25" pos:end="10:30"><name pos:start="10:25" pos:end="10:30">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:11"><expr pos:start="12:5" pos:end="12:10"><name pos:start="12:5" pos:end="12:7">cin</name><operator pos:start="12:8" pos:end="12:9">&gt;&gt;</operator><name pos:start="12:10" pos:end="12:10">t</name></expr>;</expr_stmt>
    <while pos:start="13:5" pos:end="40:5">while<condition pos:start="13:10" pos:end="13:14">(<expr pos:start="13:11" pos:end="13:13"><name pos:start="13:11" pos:end="13:11">t</name><operator pos:start="13:12" pos:end="13:13">--</operator></expr>)</condition><block pos:start="13:15" pos:end="40:5">{<block_content pos:start="14:9" pos:end="39:32">
        <decl_stmt pos:start="14:9" pos:end="14:14"><decl pos:start="14:9" pos:end="14:13"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:13">n</name></decl>;</decl_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:15"><expr pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:11">cin</name><operator pos:start="15:12" pos:end="15:13">&gt;&gt;</operator><name pos:start="15:14" pos:end="15:14">n</name></expr>;</expr_stmt>
        <for pos:start="16:9" pos:end="21:9">for<control pos:start="16:12" pos:end="16:32">(<init pos:start="16:13" pos:end="16:20"><decl pos:start="16:13" pos:end="16:19"><type pos:start="16:13" pos:end="16:15"><name pos:start="16:13" pos:end="16:15">int</name></type> <name pos:start="16:17" pos:end="16:17">i</name><init pos:start="16:18" pos:end="16:19">=<expr pos:start="16:19" pos:end="16:19"><literal type="number" pos:start="16:19" pos:end="16:19">0</literal></expr></init></decl>;</init> <condition pos:start="16:22" pos:end="16:27"><expr pos:start="16:22" pos:end="16:26"><name pos:start="16:22" pos:end="16:22">i</name><operator pos:start="16:23" pos:end="16:23">&lt;</operator><name pos:start="16:24" pos:end="16:24">n</name><operator pos:start="16:25" pos:end="16:25">-</operator><literal type="number" pos:start="16:26" pos:end="16:26">1</literal></expr>;</condition> <incr pos:start="16:29" pos:end="16:31"><expr pos:start="16:29" pos:end="16:31"><name pos:start="16:29" pos:end="16:29">i</name><operator pos:start="16:30" pos:end="16:31">++</operator></expr></incr>)</control><block pos:start="16:33" pos:end="21:9">{<block_content pos:start="17:13" pos:end="20:20">
            <decl_stmt pos:start="17:13" pos:end="17:20"><decl pos:start="17:13" pos:end="17:17"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:17">x</name></decl>,<decl pos:start="17:19" pos:end="17:19"><type ref="prev" pos:start="17:13" pos:end="17:15"/><name pos:start="17:19" pos:end="17:19">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:22"><expr pos:start="18:13" pos:end="18:21"><name pos:start="18:13" pos:end="18:15">cin</name><operator pos:start="18:16" pos:end="18:17">&gt;&gt;</operator><name pos:start="18:18" pos:end="18:18">x</name><operator pos:start="18:19" pos:end="18:20">&gt;&gt;</operator><name pos:start="18:21" pos:end="18:21">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:30"><expr pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:13">a</name><index pos:start="19:14" pos:end="19:16">[<expr pos:start="19:15" pos:end="19:15"><name pos:start="19:15" pos:end="19:15">x</name></expr>]</index></name><operator pos:start="19:17" pos:end="19:17">.</operator><call pos:start="19:18" pos:end="19:29"><name pos:start="19:18" pos:end="19:26">push_back</name><argument_list pos:start="19:27" pos:end="19:29">(<argument pos:start="19:28" pos:end="19:28"><expr pos:start="19:28" pos:end="19:28"><name pos:start="19:28" pos:end="19:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:20"><expr pos:start="20:13" pos:end="20:19"><name pos:start="20:13" pos:end="20:17"><name pos:start="20:13" pos:end="20:14">fa</name><index pos:start="20:15" pos:end="20:17">[<expr pos:start="20:16" pos:end="20:16"><name pos:start="20:16" pos:end="20:16">y</name></expr>]</index></name><operator pos:start="20:18" pos:end="20:18">=</operator><name pos:start="20:19" pos:end="20:19">x</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="22:9" pos:end="22:18"><decl pos:start="22:9" pos:end="22:17"><type pos:start="22:9" pos:end="22:11"><name pos:start="22:9" pos:end="22:11">int</name></type> <name pos:start="22:13" pos:end="22:15">ans</name><init pos:start="22:16" pos:end="22:17">=<expr pos:start="22:17" pos:end="22:17"><literal type="number" pos:start="22:17" pos:end="22:17">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="23:9" pos:end="34:9">for<control pos:start="23:12" pos:end="23:31">(<init pos:start="23:13" pos:end="23:20"><decl pos:start="23:13" pos:end="23:19"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:17">i</name><init pos:start="23:18" pos:end="23:19">=<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">1</literal></expr></init></decl>;</init> <condition pos:start="23:22" pos:end="23:26"><expr pos:start="23:22" pos:end="23:25"><name pos:start="23:22" pos:end="23:22">i</name><operator pos:start="23:23" pos:end="23:24">&lt;=</operator><name pos:start="23:25" pos:end="23:25">n</name></expr>;</condition> <incr pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:28">i</name><operator pos:start="23:29" pos:end="23:30">++</operator></expr></incr>)</control><block pos:start="23:32" pos:end="34:9">{<block_content pos:start="24:13" pos:end="33:13">
            <decl_stmt pos:start="24:13" pos:end="24:24"><decl pos:start="24:13" pos:end="24:23"><type pos:start="24:13" pos:end="24:16"><name pos:start="24:13" pos:end="24:16">bool</name></type> <name pos:start="24:18" pos:end="24:18">f</name><init pos:start="24:19" pos:end="24:23">=<expr pos:start="24:20" pos:end="24:23"><literal type="boolean" pos:start="24:20" pos:end="24:23">true</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="25:13" pos:end="30:13">for<control pos:start="25:16" pos:end="25:44">(<init pos:start="25:17" pos:end="25:24"><decl pos:start="25:17" pos:end="25:23"><type pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">int</name></type> <name pos:start="25:21" pos:end="25:21">j</name><init pos:start="25:22" pos:end="25:23">=<expr pos:start="25:23" pos:end="25:23"><literal type="number" pos:start="25:23" pos:end="25:23">0</literal></expr></init></decl>;</init> <condition pos:start="25:26" pos:end="25:39"><expr pos:start="25:26" pos:end="25:38"><name pos:start="25:26" pos:end="25:26">j</name><operator pos:start="25:27" pos:end="25:27">&lt;</operator><name pos:start="25:28" pos:end="25:31"><name pos:start="25:28" pos:end="25:28">a</name><index pos:start="25:29" pos:end="25:31">[<expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">i</name></expr>]</index></name><operator pos:start="25:32" pos:end="25:32">.</operator><call pos:start="25:33" pos:end="25:38"><name pos:start="25:33" pos:end="25:36">size</name><argument_list pos:start="25:37" pos:end="25:38">()</argument_list></call></expr>;</condition> <incr pos:start="25:41" pos:end="25:43"><expr pos:start="25:41" pos:end="25:43"><name pos:start="25:41" pos:end="25:41">j</name><operator pos:start="25:42" pos:end="25:43">++</operator></expr></incr>)</control><block pos:start="25:45" pos:end="30:13">{<block_content pos:start="26:17" pos:end="29:17">
                <if_stmt pos:start="26:17" pos:end="29:17"><if pos:start="26:17" pos:end="29:17">if<condition pos:start="26:19" pos:end="26:52">(<expr pos:start="26:20" pos:end="26:51"><name pos:start="26:20" pos:end="26:23"><name pos:start="26:20" pos:end="26:20">a</name><index pos:start="26:21" pos:end="26:23">[<expr pos:start="26:22" pos:end="26:22"><name pos:start="26:22" pos:end="26:22">i</name></expr>]</index></name><operator pos:start="26:24" pos:end="26:24">.</operator><call pos:start="26:25" pos:end="26:30"><name pos:start="26:25" pos:end="26:28">size</name><argument_list pos:start="26:29" pos:end="26:30">()</argument_list></call> <operator pos:start="26:32" pos:end="26:33">&lt;=</operator> <name pos:start="26:35" pos:end="26:44"><name pos:start="26:35" pos:end="26:35">a</name><index pos:start="26:36" pos:end="26:44">[<expr pos:start="26:37" pos:end="26:43"><name pos:start="26:37" pos:end="26:43"><name pos:start="26:37" pos:end="26:37">a</name><index pos:start="26:38" pos:end="26:40">[<expr pos:start="26:39" pos:end="26:39"><name pos:start="26:39" pos:end="26:39">i</name></expr>]</index><index pos:start="26:41" pos:end="26:43">[<expr pos:start="26:42" pos:end="26:42"><name pos:start="26:42" pos:end="26:42">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="26:45" pos:end="26:45">.</operator><call pos:start="26:46" pos:end="26:51"><name pos:start="26:46" pos:end="26:49">size</name><argument_list pos:start="26:50" pos:end="26:51">()</argument_list></call></expr>)</condition><block pos:start="26:53" pos:end="29:17">{<block_content pos:start="27:21" pos:end="28:26">
                    <expr_stmt pos:start="27:21" pos:end="27:28"><expr pos:start="27:21" pos:end="27:27"><name pos:start="27:21" pos:end="27:21">f</name><operator pos:start="27:22" pos:end="27:22">=</operator><literal type="boolean" pos:start="27:23" pos:end="27:27">false</literal></expr>;</expr_stmt>
                    <break pos:start="28:21" pos:end="28:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="31:13" pos:end="33:13"><if pos:start="31:13" pos:end="33:13">if<condition pos:start="31:15" pos:end="31:49">(<expr pos:start="31:16" pos:end="31:48"><name pos:start="31:16" pos:end="31:16">f</name> <operator pos:start="31:18" pos:end="31:19">&amp;&amp;</operator> <name pos:start="31:21" pos:end="31:24"><name pos:start="31:21" pos:end="31:21">a</name><index pos:start="31:22" pos:end="31:24">[<expr pos:start="31:23" pos:end="31:23"><name pos:start="31:23" pos:end="31:23">i</name></expr>]</index></name><operator pos:start="31:25" pos:end="31:25">.</operator><call pos:start="31:26" pos:end="31:31"><name pos:start="31:26" pos:end="31:29">size</name><argument_list pos:start="31:30" pos:end="31:31">()</argument_list></call><operator pos:start="31:32" pos:end="31:33">&gt;=</operator><name pos:start="31:34" pos:end="31:41"><name pos:start="31:34" pos:end="31:34">a</name><index pos:start="31:35" pos:end="31:41">[<expr pos:start="31:36" pos:end="31:40"><name pos:start="31:36" pos:end="31:40"><name pos:start="31:36" pos:end="31:37">fa</name><index pos:start="31:38" pos:end="31:40">[<expr pos:start="31:39" pos:end="31:39"><name pos:start="31:39" pos:end="31:39">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="31:42" pos:end="31:42">.</operator><call pos:start="31:43" pos:end="31:48"><name pos:start="31:43" pos:end="31:46">size</name><argument_list pos:start="31:47" pos:end="31:48">()</argument_list></call></expr>)</condition><block pos:start="31:50" pos:end="33:13">{<block_content pos:start="32:17" pos:end="32:22">
                <expr_stmt pos:start="32:17" pos:end="32:22"><expr pos:start="32:17" pos:end="32:21"><name pos:start="32:17" pos:end="32:19">ans</name><operator pos:start="32:20" pos:end="32:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:12">cout</name><operator pos:start="35:13" pos:end="35:14">&lt;&lt;</operator><name pos:start="35:15" pos:end="35:17">ans</name><operator pos:start="35:18" pos:end="35:19">&lt;&lt;</operator><name pos:start="35:20" pos:end="35:23">endl</name></expr>;</expr_stmt>
        <for pos:start="36:9" pos:end="38:9">for<control pos:start="36:12" pos:end="36:31">(<init pos:start="36:13" pos:end="36:20"><decl pos:start="36:13" pos:end="36:19"><type pos:start="36:13" pos:end="36:15"><name pos:start="36:13" pos:end="36:15">int</name></type> <name pos:start="36:17" pos:end="36:17">i</name><init pos:start="36:18" pos:end="36:19">=<expr pos:start="36:19" pos:end="36:19"><literal type="number" pos:start="36:19" pos:end="36:19">1</literal></expr></init></decl>;</init> <condition pos:start="36:22" pos:end="36:26"><expr pos:start="36:22" pos:end="36:25"><name pos:start="36:22" pos:end="36:22">i</name><operator pos:start="36:23" pos:end="36:24">&lt;=</operator><name pos:start="36:25" pos:end="36:25">n</name></expr>;</condition> <incr pos:start="36:28" pos:end="36:30"><expr pos:start="36:28" pos:end="36:30"><name pos:start="36:28" pos:end="36:28">i</name><operator pos:start="36:29" pos:end="36:30">++</operator></expr></incr>)</control><block pos:start="36:32" pos:end="38:9">{<block_content pos:start="37:13" pos:end="37:37">
            <expr_stmt pos:start="37:13" pos:end="37:37"><expr pos:start="37:13" pos:end="37:36"><call pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:18">vector</name><argument_list type="generic" pos:start="37:19" pos:end="37:23">&lt;<argument pos:start="37:20" pos:end="37:22"><expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:start="37:24" pos:end="37:25">()</argument_list></call><operator pos:start="37:26" pos:end="37:26">.</operator><call pos:start="37:27" pos:end="37:36"><name pos:start="37:27" pos:end="37:30">swap</name><argument_list pos:start="37:31" pos:end="37:36">(<argument pos:start="37:32" pos:end="37:35"><expr pos:start="37:32" pos:end="37:35"><name pos:start="37:32" pos:end="37:35"><name pos:start="37:32" pos:end="37:32">a</name><index pos:start="37:33" pos:end="37:35">[<expr pos:start="37:34" pos:end="37:34"><name pos:start="37:34" pos:end="37:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="39:9" pos:end="39:32"><expr pos:start="39:9" pos:end="39:31"><call pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:14">memset</name><argument_list pos:start="39:15" pos:end="39:31">(<argument pos:start="39:16" pos:end="39:17"><expr pos:start="39:16" pos:end="39:17"><name pos:start="39:16" pos:end="39:17">fa</name></expr></argument>,<argument pos:start="39:19" pos:end="39:19"><expr pos:start="39:19" pos:end="39:19"><literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr></argument>,<argument pos:start="39:21" pos:end="39:30"><expr pos:start="39:21" pos:end="39:30"><sizeof pos:start="39:21" pos:end="39:30">sizeof<argument_list pos:start="39:27" pos:end="39:30">(<argument pos:start="39:28" pos:end="39:29"><expr pos:start="39:28" pos:end="39:29"><name pos:start="39:28" pos:end="39:29">fa</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
