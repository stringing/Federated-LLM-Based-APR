<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/275/275.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:9"><decl pos:start="3:1" pos:end="3:8"><type pos:start="3:1" pos:end="3:6"><name pos:start="3:1" pos:end="3:6">string</name></type> <name pos:start="3:8" pos:end="3:8">o</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:16"><decl pos:start="4:1" pos:end="4:15"><type pos:start="4:1" pos:end="4:9"><name pos:start="4:1" pos:end="4:4">long</name> <name pos:start="4:6" pos:end="4:9">long</name></type> <name pos:start="4:11" pos:end="4:13">sum</name><init pos:start="4:14" pos:end="4:15">=<expr pos:start="4:15" pos:end="4:15"><literal type="number" pos:start="4:15" pos:end="4:15">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:16"><decl pos:start="5:1" pos:end="5:15"><type pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:6">vector</name><argument_list type="generic" pos:start="5:7" pos:end="5:11">&lt;<argument pos:start="5:8" pos:end="5:10"><expr pos:start="5:8" pos:end="5:10"><name pos:start="5:8" pos:end="5:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="5:13" pos:end="5:15">ret</name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="18:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">char</name></type> <name pos:start="6:6" pos:end="6:12">getchar</name><parameter_list pos:start="6:13" pos:end="6:25">(<parameter pos:start="6:14" pos:end="6:24"><decl pos:start="6:14" pos:end="6:24"><type pos:start="6:14" pos:end="6:19"><name pos:start="6:14" pos:end="6:19">string</name></type> <name pos:start="6:21" pos:end="6:24">pass</name></decl></parameter>)</parameter_list>
<block pos:start="7:1" pos:end="18:1">{<block_content pos:start="8:5" pos:end="17:17">
    <decl_stmt pos:start="8:5" pos:end="8:12"><decl pos:start="8:5" pos:end="8:11"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">a</name><init pos:start="8:10" pos:end="8:11">=<expr pos:start="8:11" pos:end="8:11"><literal type="number" pos:start="8:11" pos:end="8:11">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="9:5" pos:end="12:5">for<control pos:start="9:8" pos:end="9:24">(<init pos:start="9:9" pos:end="9:16"><decl pos:start="9:9" pos:end="9:15"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">i</name><init pos:start="9:14" pos:end="9:15">=<expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">3</literal></expr></init></decl>;</init><condition pos:start="9:17" pos:end="9:20"><expr pos:start="9:17" pos:end="9:19"><name pos:start="9:17" pos:end="9:17">i</name><operator pos:start="9:18" pos:end="9:18">&lt;</operator><literal type="number" pos:start="9:19" pos:end="9:19">8</literal></expr>;</condition><incr pos:start="9:21" pos:end="9:23"><expr pos:start="9:21" pos:end="9:23"><operator pos:start="9:21" pos:end="9:22">++</operator><name pos:start="9:23" pos:end="9:23">i</name></expr></incr>)</control>
    <block pos:start="10:5" pos:end="12:5">{<block_content pos:start="11:9" pos:end="11:44">
        <expr_stmt pos:start="11:9" pos:end="11:44"><expr pos:start="11:9" pos:end="11:43"><name pos:start="11:9" pos:end="11:9">a</name><operator pos:start="11:10" pos:end="11:10">=</operator><name pos:start="11:11" pos:end="11:11">a</name><operator pos:start="11:12" pos:end="11:12">+</operator><operator pos:start="11:13" pos:end="11:13">(</operator><operator pos:start="11:14" pos:end="11:14">(</operator><name pos:start="11:15" pos:end="11:17">int</name><operator pos:start="11:18" pos:end="11:18">)</operator><operator pos:start="11:19" pos:end="11:19">(</operator><name pos:start="11:20" pos:end="11:26"><name pos:start="11:20" pos:end="11:23">pass</name><index pos:start="11:24" pos:end="11:26">[<expr pos:start="11:25" pos:end="11:25"><name pos:start="11:25" pos:end="11:25">i</name></expr>]</index></name><operator pos:start="11:27" pos:end="11:27">-</operator><literal type="char" pos:start="11:28" pos:end="11:30">'0'</literal><operator pos:start="11:31" pos:end="11:31">)</operator><operator pos:start="11:32" pos:end="11:32">)</operator><operator pos:start="11:33" pos:end="11:33">*</operator><call pos:start="11:34" pos:end="11:43"><name pos:start="11:34" pos:end="11:36">pow</name><argument_list pos:start="11:37" pos:end="11:43">(<argument pos:start="11:38" pos:end="11:38"><expr pos:start="11:38" pos:end="11:38"><literal type="number" pos:start="11:38" pos:end="11:38">2</literal></expr></argument>,<argument pos:start="11:40" pos:end="11:42"><expr pos:start="11:40" pos:end="11:42"><literal type="number" pos:start="11:40" pos:end="11:41">7</literal><operator pos:start="11:41" pos:end="11:41">-</operator><name pos:start="11:42" pos:end="11:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="13:5" pos:end="16:5"><if pos:start="13:5" pos:end="16:5">if<condition pos:start="13:7" pos:end="13:13">(<expr pos:start="13:8" pos:end="13:12"><name pos:start="13:8" pos:end="13:8">a</name><operator pos:start="13:9" pos:end="13:10">&gt;=</operator><literal type="number" pos:start="13:11" pos:end="13:12">26</literal></expr>)</condition>
    <block pos:start="14:5" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:19">
        <return pos:start="15:9" pos:end="15:19">return <expr pos:start="15:16" pos:end="15:18"><literal type="char" pos:start="15:16" pos:end="15:18">'e'</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="17:5" pos:end="17:17">return <expr pos:start="17:12" pos:end="17:16"><literal type="char" pos:start="17:12" pos:end="17:14">'A'</literal><operator pos:start="17:15" pos:end="17:15">+</operator><name pos:start="17:16" pos:end="17:16">a</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="19:1" pos:end="27:1"><type pos:start="19:1" pos:end="19:3"><name pos:start="19:1" pos:end="19:3">int</name></type> <name pos:start="19:5" pos:end="19:10">getint</name><parameter_list pos:start="19:11" pos:end="19:23">(<parameter pos:start="19:12" pos:end="19:22"><decl pos:start="19:12" pos:end="19:22"><type pos:start="19:12" pos:end="19:17"><name pos:start="19:12" pos:end="19:17">string</name></type> <name pos:start="19:19" pos:end="19:22">pass</name></decl></parameter>)</parameter_list>
<block pos:start="20:1" pos:end="27:1">{<block_content pos:start="21:5" pos:end="26:13">
    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">a</name><init pos:start="21:10" pos:end="21:11">=<expr pos:start="21:11" pos:end="21:11"><literal type="number" pos:start="21:11" pos:end="21:11">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="22:5" pos:end="25:5">for<control pos:start="22:8" pos:end="22:24">(<init pos:start="22:9" pos:end="22:16"><decl pos:start="22:9" pos:end="22:15"><type pos:start="22:9" pos:end="22:11"><name pos:start="22:9" pos:end="22:11">int</name></type> <name pos:start="22:13" pos:end="22:13">i</name><init pos:start="22:14" pos:end="22:15">=<expr pos:start="22:15" pos:end="22:15"><literal type="number" pos:start="22:15" pos:end="22:15">3</literal></expr></init></decl>;</init><condition pos:start="22:17" pos:end="22:20"><expr pos:start="22:17" pos:end="22:19"><name pos:start="22:17" pos:end="22:17">i</name><operator pos:start="22:18" pos:end="22:18">&lt;</operator><literal type="number" pos:start="22:19" pos:end="22:19">8</literal></expr>;</condition><incr pos:start="22:21" pos:end="22:23"><expr pos:start="22:21" pos:end="22:23"><operator pos:start="22:21" pos:end="22:22">++</operator><name pos:start="22:23" pos:end="22:23">i</name></expr></incr>)</control>
    <block pos:start="23:5" pos:end="25:5">{<block_content pos:start="24:9" pos:end="24:44">
        <expr_stmt pos:start="24:9" pos:end="24:44"><expr pos:start="24:9" pos:end="24:43"><name pos:start="24:9" pos:end="24:9">a</name><operator pos:start="24:10" pos:end="24:10">=</operator><name pos:start="24:11" pos:end="24:11">a</name><operator pos:start="24:12" pos:end="24:12">+</operator><operator pos:start="24:13" pos:end="24:13">(</operator><operator pos:start="24:14" pos:end="24:14">(</operator><name pos:start="24:15" pos:end="24:17">int</name><operator pos:start="24:18" pos:end="24:18">)</operator><operator pos:start="24:19" pos:end="24:19">(</operator><name pos:start="24:20" pos:end="24:26"><name pos:start="24:20" pos:end="24:23">pass</name><index pos:start="24:24" pos:end="24:26">[<expr pos:start="24:25" pos:end="24:25"><name pos:start="24:25" pos:end="24:25">i</name></expr>]</index></name><operator pos:start="24:27" pos:end="24:27">-</operator><literal type="char" pos:start="24:28" pos:end="24:30">'0'</literal><operator pos:start="24:31" pos:end="24:31">)</operator><operator pos:start="24:32" pos:end="24:32">)</operator><operator pos:start="24:33" pos:end="24:33">*</operator><call pos:start="24:34" pos:end="24:43"><name pos:start="24:34" pos:end="24:36">pow</name><argument_list pos:start="24:37" pos:end="24:43">(<argument pos:start="24:38" pos:end="24:38"><expr pos:start="24:38" pos:end="24:38"><literal type="number" pos:start="24:38" pos:end="24:38">2</literal></expr></argument>,<argument pos:start="24:40" pos:end="24:42"><expr pos:start="24:40" pos:end="24:42"><literal type="number" pos:start="24:40" pos:end="24:41">7</literal><operator pos:start="24:41" pos:end="24:41">-</operator><name pos:start="24:42" pos:end="24:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="26:5" pos:end="26:13">return <expr pos:start="26:12" pos:end="26:12"><name pos:start="26:12" pos:end="26:12">a</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="28:1" pos:end="55:1"><type pos:start="28:1" pos:end="28:3"><name pos:start="28:1" pos:end="28:3">int</name></type> <name pos:start="28:5" pos:end="28:9">fanyi</name><parameter_list pos:start="28:10" pos:end="28:19">(<parameter pos:start="28:11" pos:end="28:18"><decl pos:start="28:11" pos:end="28:18"><type pos:start="28:11" pos:end="28:16"><name pos:start="28:11" pos:end="28:16">string</name></type> <name pos:start="28:18" pos:end="28:18">s</name></decl></parameter>)</parameter_list>
<block pos:start="29:1" pos:end="55:1">{<block_content pos:start="30:5" pos:end="54:13">
    <for pos:start="30:5" pos:end="33:5">for<control pos:start="30:8" pos:end="30:24">(<init pos:start="30:9" pos:end="30:16"><decl pos:start="30:9" pos:end="30:15"><type pos:start="30:9" pos:end="30:11"><name pos:start="30:9" pos:end="30:11">int</name></type> <name pos:start="30:13" pos:end="30:13">i</name><init pos:start="30:14" pos:end="30:15">=<expr pos:start="30:15" pos:end="30:15"><literal type="number" pos:start="30:15" pos:end="30:15">0</literal></expr></init></decl>;</init><condition pos:start="30:17" pos:end="30:20"><expr pos:start="30:17" pos:end="30:19"><name pos:start="30:17" pos:end="30:17">i</name><operator pos:start="30:18" pos:end="30:18">&lt;</operator><literal type="number" pos:start="30:19" pos:end="30:19">8</literal></expr>;</condition><incr pos:start="30:21" pos:end="30:23"><expr pos:start="30:21" pos:end="30:23"><operator pos:start="30:21" pos:end="30:22">++</operator><name pos:start="30:23" pos:end="30:23">i</name></expr></incr>)</control>
    <block pos:start="31:5" pos:end="33:5">{<block_content pos:start="32:9" pos:end="32:45">
        <if_stmt pos:start="32:9" pos:end="32:45"><if pos:start="32:9" pos:end="32:45">if<condition pos:start="32:11" pos:end="32:32">(<expr pos:start="32:12" pos:end="32:31"><name pos:start="32:12" pos:end="32:15"><name pos:start="32:12" pos:end="32:12">s</name><index pos:start="32:13" pos:end="32:15">[<expr pos:start="32:14" pos:end="32:14"><name pos:start="32:14" pos:end="32:14">i</name></expr>]</index></name><operator pos:start="32:16" pos:end="32:17">!=</operator><literal type="char" pos:start="32:18" pos:end="32:20">'0'</literal><operator pos:start="32:21" pos:end="32:22">&amp;&amp;</operator><name pos:start="32:23" pos:end="32:26"><name pos:start="32:23" pos:end="32:23">s</name><index pos:start="32:24" pos:end="32:26">[<expr pos:start="32:25" pos:end="32:25"><name pos:start="32:25" pos:end="32:25">i</name></expr>]</index></name><operator pos:start="32:27" pos:end="32:28">!=</operator><literal type="char" pos:start="32:29" pos:end="32:31">'1'</literal></expr>)</condition><block type="pseudo" pos:start="32:37" pos:end="32:45"><block_content pos:start="32:37" pos:end="32:45">    <return pos:start="32:37" pos:end="32:45">return <expr pos:start="32:44" pos:end="32:44"><literal type="number" pos:start="32:44" pos:end="32:44">1</literal></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="34:5" pos:end="38:5"><if pos:start="34:5" pos:end="38:5">if<condition pos:start="34:7" pos:end="34:17">(<expr pos:start="34:8" pos:end="34:16"><name pos:start="34:8" pos:end="34:11"><name pos:start="34:8" pos:end="34:8">s</name><index pos:start="34:9" pos:end="34:11">[<expr pos:start="34:10" pos:end="34:10"><literal type="number" pos:start="34:10" pos:end="34:10">0</literal></expr>]</index></name><operator pos:start="34:12" pos:end="34:13">==</operator><literal type="char" pos:start="34:14" pos:end="34:16">'0'</literal></expr>)</condition>
    <block pos:start="35:5" pos:end="38:5">{<block_content pos:start="36:9" pos:end="37:17">
        <expr_stmt pos:start="36:9" pos:end="36:23"><expr pos:start="36:9" pos:end="36:22"><name pos:start="36:9" pos:end="36:11">sum</name><operator pos:start="36:12" pos:end="36:13">+=</operator><call pos:start="36:14" pos:end="36:22"><name pos:start="36:14" pos:end="36:19">getint</name><argument_list pos:start="36:20" pos:end="36:22">(<argument pos:start="36:21" pos:end="36:21"><expr pos:start="36:21" pos:end="36:21"><name pos:start="36:21" pos:end="36:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">2</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if<condition pos:start="39:7" pos:end="39:39">(<expr pos:start="39:8" pos:end="39:38"><name pos:start="39:8" pos:end="39:11"><name pos:start="39:8" pos:end="39:8">s</name><index pos:start="39:9" pos:end="39:11">[<expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">0</literal></expr>]</index></name><operator pos:start="39:12" pos:end="39:13">==</operator><literal type="char" pos:start="39:14" pos:end="39:16">'1'</literal><operator pos:start="39:17" pos:end="39:18">&amp;&amp;</operator><name pos:start="39:19" pos:end="39:22"><name pos:start="39:19" pos:end="39:19">s</name><index pos:start="39:20" pos:end="39:22">[<expr pos:start="39:21" pos:end="39:21"><literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>]</index></name><operator pos:start="39:23" pos:end="39:24">==</operator><literal type="char" pos:start="39:25" pos:end="39:27">'1'</literal><operator pos:start="39:28" pos:end="39:29">&amp;&amp;</operator><name pos:start="39:30" pos:end="39:33"><name pos:start="39:30" pos:end="39:30">s</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><literal type="number" pos:start="39:32" pos:end="39:32">2</literal></expr>]</index></name><operator pos:start="39:34" pos:end="39:35">==</operator><literal type="char" pos:start="39:36" pos:end="39:38">'1'</literal></expr>)</condition>
    <block pos:start="40:5" pos:end="43:5">{<block_content pos:start="41:9" pos:end="42:17">
        <expr_stmt pos:start="41:9" pos:end="41:15"><expr pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:9">o</name><operator pos:start="41:10" pos:end="41:11">+=</operator><literal type="char" pos:start="41:12" pos:end="41:14">' '</literal></expr>;</expr_stmt>
        <return pos:start="42:9" pos:end="42:17">return <expr pos:start="42:16" pos:end="42:16"><literal type="number" pos:start="42:16" pos:end="42:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="44:5" pos:end="53:5"><if pos:start="44:5" pos:end="53:5">if<condition pos:start="44:7" pos:end="44:39">(<expr pos:start="44:8" pos:end="44:38"><name pos:start="44:8" pos:end="44:11"><name pos:start="44:8" pos:end="44:8">s</name><index pos:start="44:9" pos:end="44:11">[<expr pos:start="44:10" pos:end="44:10"><literal type="number" pos:start="44:10" pos:end="44:10">0</literal></expr>]</index></name><operator pos:start="44:12" pos:end="44:13">==</operator><literal type="char" pos:start="44:14" pos:end="44:16">'1'</literal><operator pos:start="44:17" pos:end="44:18">&amp;&amp;</operator><name pos:start="44:19" pos:end="44:22"><name pos:start="44:19" pos:end="44:19">s</name><index pos:start="44:20" pos:end="44:22">[<expr pos:start="44:21" pos:end="44:21"><literal type="number" pos:start="44:21" pos:end="44:21">1</literal></expr>]</index></name><operator pos:start="44:23" pos:end="44:24">==</operator><literal type="char" pos:start="44:25" pos:end="44:27">'0'</literal><operator pos:start="44:28" pos:end="44:29">&amp;&amp;</operator><name pos:start="44:30" pos:end="44:33"><name pos:start="44:30" pos:end="44:30">s</name><index pos:start="44:31" pos:end="44:33">[<expr pos:start="44:32" pos:end="44:32"><literal type="number" pos:start="44:32" pos:end="44:32">2</literal></expr>]</index></name><operator pos:start="44:34" pos:end="44:35">==</operator><literal type="char" pos:start="44:36" pos:end="44:38">'1'</literal></expr>)</condition>
    <block pos:start="45:5" pos:end="53:5">{<block_content pos:start="46:9" pos:end="52:17">
        <decl_stmt pos:start="46:9" pos:end="46:28"><decl pos:start="46:9" pos:end="46:27"><type pos:start="46:9" pos:end="46:12"><name pos:start="46:9" pos:end="46:12">char</name></type> <name pos:start="46:14" pos:end="46:16">cha</name><init pos:start="46:17" pos:end="46:27">=<expr pos:start="46:18" pos:end="46:27"><call pos:start="46:18" pos:end="46:27"><name pos:start="46:18" pos:end="46:24">getchar</name><argument_list pos:start="46:25" pos:end="46:27">(<argument pos:start="46:26" pos:end="46:26"><expr pos:start="46:26" pos:end="46:26"><name pos:start="46:26" pos:end="46:26">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="47:9" pos:end="50:9"><if pos:start="47:9" pos:end="50:9">if<condition pos:start="47:11" pos:end="47:20">(<expr pos:start="47:12" pos:end="47:19"><name pos:start="47:12" pos:end="47:14">cha</name><operator pos:start="47:15" pos:end="47:16">==</operator><literal type="char" pos:start="47:17" pos:end="47:19">'e'</literal></expr>)</condition>
        <block pos:start="48:9" pos:end="50:9">{<block_content pos:start="49:13" pos:end="49:21">
            <return pos:start="49:13" pos:end="49:21">return <expr pos:start="49:20" pos:end="49:20"><literal type="number" pos:start="49:20" pos:end="49:20">1</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="51:9" pos:end="51:15"><expr pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:9">o</name><operator pos:start="51:10" pos:end="51:11">+=</operator><name pos:start="51:12" pos:end="51:14">cha</name></expr>;</expr_stmt>
        <return pos:start="52:9" pos:end="52:17">return <expr pos:start="52:16" pos:end="52:16"><literal type="number" pos:start="52:16" pos:end="52:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="54:5" pos:end="54:13">return <expr pos:start="54:12" pos:end="54:12"><literal type="number" pos:start="54:12" pos:end="54:12">1</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="56:1" pos:end="103:1"><type pos:start="56:1" pos:end="56:3"><name pos:start="56:1" pos:end="56:3">int</name></type> <name pos:start="56:5" pos:end="56:8">main</name><parameter_list pos:start="56:9" pos:end="56:10">()</parameter_list>
<block pos:start="57:1" pos:end="103:1">{<block_content pos:start="58:5" pos:end="102:17">
    <expr_stmt pos:start="58:5" pos:end="58:40"><expr pos:start="58:5" pos:end="58:39"><call pos:start="58:5" pos:end="58:39"><name pos:start="58:5" pos:end="58:11">freopen</name><argument_list pos:start="58:12" pos:end="58:39">(<argument pos:start="58:13" pos:end="58:28"><expr pos:start="58:13" pos:end="58:28"><literal type="string" pos:start="58:13" pos:end="58:28">"information.in"</literal></expr></argument>,<argument pos:start="58:30" pos:end="58:32"><expr pos:start="58:30" pos:end="58:32"><literal type="string" pos:start="58:30" pos:end="58:32">"r"</literal></expr></argument>,<argument pos:start="58:34" pos:end="58:38"><expr pos:start="58:34" pos:end="58:38"><name pos:start="58:34" pos:end="58:38">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="59:5" pos:end="59:42"><expr pos:start="59:5" pos:end="59:41"><call pos:start="59:5" pos:end="59:41"><name pos:start="59:5" pos:end="59:11">freopen</name><argument_list pos:start="59:12" pos:end="59:41">(<argument pos:start="59:13" pos:end="59:29"><expr pos:start="59:13" pos:end="59:29"><literal type="string" pos:start="59:13" pos:end="59:29">"information.out"</literal></expr></argument>,<argument pos:start="59:31" pos:end="59:33"><expr pos:start="59:31" pos:end="59:33"><literal type="string" pos:start="59:31" pos:end="59:33">"w"</literal></expr></argument>,<argument pos:start="59:35" pos:end="59:40"><expr pos:start="59:35" pos:end="59:40"><name pos:start="59:35" pos:end="59:40">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="60:5" pos:end="60:13"><decl pos:start="60:5" pos:end="60:12"><type pos:start="60:5" pos:end="60:10"><name pos:start="60:5" pos:end="60:10">string</name></type> <name pos:start="60:12" pos:end="60:12">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="61:5" pos:end="61:11"><expr pos:start="61:5" pos:end="61:10"><name pos:start="61:5" pos:end="61:7">cin</name><operator pos:start="61:8" pos:end="61:9">&gt;&gt;</operator><name pos:start="61:10" pos:end="61:10">s</name></expr>;</expr_stmt>
    <if_stmt pos:start="62:5" pos:end="66:5"><if pos:start="62:5" pos:end="66:5">if<condition pos:start="62:7" pos:end="62:21">(<expr pos:start="62:8" pos:end="62:20"><call pos:start="62:8" pos:end="62:15"><name pos:start="62:8" pos:end="62:13"><name pos:start="62:8" pos:end="62:8">s</name><operator pos:start="62:9" pos:end="62:9">.</operator><name pos:start="62:10" pos:end="62:13">size</name></name><argument_list pos:start="62:14" pos:end="62:15">()</argument_list></call><operator pos:start="62:16" pos:end="62:16">%</operator><literal type="number" pos:start="62:17" pos:end="62:17">8</literal><operator pos:start="62:18" pos:end="62:19">!=</operator><literal type="number" pos:start="62:20" pos:end="62:20">0</literal></expr>)</condition>
    <block pos:start="63:5" pos:end="66:5">{<block_content pos:start="64:9" pos:end="65:17">
        <expr_stmt pos:start="64:9" pos:end="64:22"><expr pos:start="64:9" pos:end="64:21"><name pos:start="64:9" pos:end="64:12">cout</name><operator pos:start="64:13" pos:end="64:14">&lt;&lt;</operator><literal type="string" pos:start="64:15" pos:end="64:21">"Error"</literal></expr>;</expr_stmt>
        <return pos:start="65:9" pos:end="65:17">return <expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="67:5" pos:end="83:5">for<control pos:start="67:8" pos:end="67:32">(<init pos:start="67:9" pos:end="67:16"><decl pos:start="67:9" pos:end="67:15"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:13">i</name><init pos:start="67:14" pos:end="67:15">=<expr pos:start="67:15" pos:end="67:15"><literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr></init></decl>;</init><condition pos:start="67:17" pos:end="67:27"><expr pos:start="67:17" pos:end="67:26"><name pos:start="67:17" pos:end="67:17">i</name><operator pos:start="67:18" pos:end="67:18">&lt;</operator><call pos:start="67:19" pos:end="67:26"><name pos:start="67:19" pos:end="67:24"><name pos:start="67:19" pos:end="67:19">s</name><operator pos:start="67:20" pos:end="67:20">.</operator><name pos:start="67:21" pos:end="67:24">size</name></name><argument_list pos:start="67:25" pos:end="67:26">()</argument_list></call></expr>;</condition><incr pos:start="67:28" pos:end="67:31"><expr pos:start="67:28" pos:end="67:31"><name pos:start="67:28" pos:end="67:28">i</name><operator pos:start="67:29" pos:end="67:30">+=</operator><literal type="number" pos:start="67:31" pos:end="67:31">8</literal></expr></incr>)</control>
    <block pos:start="68:5" pos:end="83:5">{<block_content pos:start="69:9" pos:end="82:9">
        <decl_stmt pos:start="69:9" pos:end="69:22"><decl pos:start="69:9" pos:end="69:21"><type pos:start="69:9" pos:end="69:14"><name pos:start="69:9" pos:end="69:14">string</name></type> <name pos:start="69:16" pos:end="69:18">str</name><init pos:start="69:19" pos:end="69:21">=<expr pos:start="69:20" pos:end="69:21"><literal type="string" pos:start="69:20" pos:end="69:21">""</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="70:9" pos:end="73:9">for<control pos:start="70:12" pos:end="70:28">(<init pos:start="70:13" pos:end="70:20"><decl pos:start="70:13" pos:end="70:19"><type pos:start="70:13" pos:end="70:15"><name pos:start="70:13" pos:end="70:15">int</name></type> <name pos:start="70:17" pos:end="70:17">j</name><init pos:start="70:18" pos:end="70:19">=<expr pos:start="70:19" pos:end="70:19"><literal type="number" pos:start="70:19" pos:end="70:19">0</literal></expr></init></decl>;</init><condition pos:start="70:21" pos:end="70:24"><expr pos:start="70:21" pos:end="70:23"><name pos:start="70:21" pos:end="70:21">j</name><operator pos:start="70:22" pos:end="70:22">&lt;</operator><literal type="number" pos:start="70:23" pos:end="70:23">8</literal></expr>;</condition><incr pos:start="70:25" pos:end="70:27"><expr pos:start="70:25" pos:end="70:27"><operator pos:start="70:25" pos:end="70:26">++</operator><name pos:start="70:27" pos:end="70:27">j</name></expr></incr>)</control>
        <block pos:start="71:9" pos:end="73:9">{<block_content pos:start="72:13" pos:end="72:34">
            <expr_stmt pos:start="72:13" pos:end="72:34"><expr pos:start="72:13" pos:end="72:33"><call pos:start="72:13" pos:end="72:33"><name pos:start="72:13" pos:end="72:25"><name pos:start="72:13" pos:end="72:15">str</name><operator pos:start="72:16" pos:end="72:16">.</operator><name pos:start="72:17" pos:end="72:25">push_back</name></name><argument_list pos:start="72:26" pos:end="72:33">(<argument pos:start="72:27" pos:end="72:32"><expr pos:start="72:27" pos:end="72:32"><name pos:start="72:27" pos:end="72:32"><name pos:start="72:27" pos:end="72:27">s</name><index pos:start="72:28" pos:end="72:32">[<expr pos:start="72:29" pos:end="72:31"><name pos:start="72:29" pos:end="72:29">i</name><operator pos:start="72:30" pos:end="72:30">+</operator><name pos:start="72:31" pos:end="72:31">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="74:9" pos:end="74:28"><decl pos:start="74:9" pos:end="74:27"><type pos:start="74:9" pos:end="74:11"><name pos:start="74:9" pos:end="74:11">int</name></type> <name pos:start="74:13" pos:end="74:16">retu</name><init pos:start="74:17" pos:end="74:27">=<expr pos:start="74:18" pos:end="74:27"><call pos:start="74:18" pos:end="74:27"><name pos:start="74:18" pos:end="74:22">fanyi</name><argument_list pos:start="74:23" pos:end="74:27">(<argument pos:start="74:24" pos:end="74:26"><expr pos:start="74:24" pos:end="74:26"><name pos:start="74:24" pos:end="74:26">str</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="75:9" pos:end="82:9"><if pos:start="75:9" pos:end="79:9">if<condition pos:start="75:11" pos:end="75:19">(<expr pos:start="75:12" pos:end="75:18"><name pos:start="75:12" pos:end="75:15">retu</name><operator pos:start="75:16" pos:end="75:17">==</operator><literal type="number" pos:start="75:18" pos:end="75:18">1</literal></expr>)</condition>
        <block pos:start="76:9" pos:end="79:9">{<block_content pos:start="77:13" pos:end="78:21">
            <expr_stmt pos:start="77:13" pos:end="77:26"><expr pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:16">cout</name><operator pos:start="77:17" pos:end="77:18">&lt;&lt;</operator><literal type="string" pos:start="77:19" pos:end="77:25">"Error"</literal></expr>;</expr_stmt>
            <return pos:start="78:13" pos:end="78:21">return <expr pos:start="78:20" pos:end="78:20"><literal type="number" pos:start="78:20" pos:end="78:20">0</literal></expr>;</return>
        </block_content>}</block></if><else pos:start="79:10" pos:end="82:9">else
        <block pos:start="80:9" pos:end="82:9">{<block_content pos:start="81:13" pos:end="81:32">
            <expr_stmt pos:start="81:13" pos:end="81:32"><expr pos:start="81:13" pos:end="81:31"><call pos:start="81:13" pos:end="81:31"><name pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:15">ret</name><operator pos:start="81:16" pos:end="81:16">.</operator><name pos:start="81:17" pos:end="81:25">push_back</name></name><argument_list pos:start="81:26" pos:end="81:31">(<argument pos:start="81:27" pos:end="81:30"><expr pos:start="81:27" pos:end="81:30"><name pos:start="81:27" pos:end="81:30">retu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="84:5" pos:end="84:18"><decl pos:start="84:5" pos:end="84:17"><type pos:start="84:5" pos:end="84:7"><name pos:start="84:5" pos:end="84:7">int</name></type> <name pos:start="84:9" pos:end="84:15">num_cnt</name><init pos:start="84:16" pos:end="84:17">=<expr pos:start="84:17" pos:end="84:17"><literal type="number" pos:start="84:17" pos:end="84:17">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="85:5" pos:end="96:5">for<control pos:start="85:8" pos:end="85:35">(<init pos:start="85:9" pos:end="85:16"><decl pos:start="85:9" pos:end="85:15"><type pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">int</name></type> <name pos:start="85:13" pos:end="85:13">i</name><init pos:start="85:14" pos:end="85:15">=<expr pos:start="85:15" pos:end="85:15"><literal type="number" pos:start="85:15" pos:end="85:15">1</literal></expr></init></decl>;</init><condition pos:start="85:17" pos:end="85:31"><expr pos:start="85:17" pos:end="85:30"><name pos:start="85:17" pos:end="85:17">i</name><operator pos:start="85:18" pos:end="85:18">&lt;</operator><call pos:start="85:19" pos:end="85:28"><name pos:start="85:19" pos:end="85:26"><name pos:start="85:19" pos:end="85:21">ret</name><operator pos:start="85:22" pos:end="85:22">.</operator><name pos:start="85:23" pos:end="85:26">size</name></name><argument_list pos:start="85:27" pos:end="85:28">()</argument_list></call><operator pos:start="85:29" pos:end="85:29">-</operator><literal type="number" pos:start="85:30" pos:end="85:30">1</literal></expr>;</condition><incr pos:start="85:32" pos:end="85:34"><expr pos:start="85:32" pos:end="85:34"><operator pos:start="85:32" pos:end="85:33">++</operator><name pos:start="85:34" pos:end="85:34">i</name></expr></incr>)</control>
    <block pos:start="86:5" pos:end="96:5">{<block_content pos:start="87:9" pos:end="95:9">
        <if_stmt pos:start="87:9" pos:end="91:9"><if pos:start="87:9" pos:end="91:9">if<condition pos:start="87:11" pos:end="87:47">(<expr pos:start="87:12" pos:end="87:46"><name pos:start="87:12" pos:end="87:17"><name pos:start="87:12" pos:end="87:14">ret</name><index pos:start="87:15" pos:end="87:17">[<expr pos:start="87:16" pos:end="87:16"><name pos:start="87:16" pos:end="87:16">i</name></expr>]</index></name><operator pos:start="87:18" pos:end="87:19">==</operator><literal type="number" pos:start="87:20" pos:end="87:20">2</literal><operator pos:start="87:21" pos:end="87:22">&amp;&amp;</operator><name pos:start="87:23" pos:end="87:30"><name pos:start="87:23" pos:end="87:25">ret</name><index pos:start="87:26" pos:end="87:30">[<expr pos:start="87:27" pos:end="87:29"><name pos:start="87:27" pos:end="87:27">i</name><operator pos:start="87:28" pos:end="87:28">-</operator><literal type="number" pos:start="87:29" pos:end="87:29">1</literal></expr>]</index></name><operator pos:start="87:31" pos:end="87:32">!=</operator><literal type="number" pos:start="87:33" pos:end="87:33">2</literal><operator pos:start="87:34" pos:end="87:35">&amp;&amp;</operator><name pos:start="87:36" pos:end="87:43"><name pos:start="87:36" pos:end="87:38">ret</name><index pos:start="87:39" pos:end="87:43">[<expr pos:start="87:40" pos:end="87:42"><name pos:start="87:40" pos:end="87:40">i</name><operator pos:start="87:41" pos:end="87:41">+</operator><literal type="number" pos:start="87:42" pos:end="87:42">1</literal></expr>]</index></name><operator pos:start="87:44" pos:end="87:45">!=</operator><literal type="number" pos:start="87:46" pos:end="87:46">2</literal></expr>)</condition>
        <block pos:start="88:9" pos:end="91:9">{<block_content pos:start="89:13" pos:end="90:21">
            <expr_stmt pos:start="89:13" pos:end="89:26"><expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:16">cout</name><operator pos:start="89:17" pos:end="89:18">&lt;&lt;</operator><literal type="string" pos:start="89:19" pos:end="89:25">"Error"</literal></expr>;</expr_stmt>
            <return pos:start="90:13" pos:end="90:21">return <expr pos:start="90:20" pos:end="90:20"><literal type="number" pos:start="90:20" pos:end="90:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="92:9" pos:end="95:9"><if pos:start="92:9" pos:end="95:9">if<condition pos:start="92:11" pos:end="92:21">(<expr pos:start="92:12" pos:end="92:20"><name pos:start="92:12" pos:end="92:17"><name pos:start="92:12" pos:end="92:14">ret</name><index pos:start="92:15" pos:end="92:17">[<expr pos:start="92:16" pos:end="92:16"><name pos:start="92:16" pos:end="92:16">i</name></expr>]</index></name><operator pos:start="92:18" pos:end="92:19">==</operator><literal type="number" pos:start="92:20" pos:end="92:20">2</literal></expr>)</condition>
        <block pos:start="93:9" pos:end="95:9">{<block_content pos:start="94:13" pos:end="94:22">
            <expr_stmt pos:start="94:13" pos:end="94:22"><expr pos:start="94:13" pos:end="94:21"><operator pos:start="94:13" pos:end="94:14">++</operator><name pos:start="94:15" pos:end="94:21">num_cnt</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="97:5" pos:end="101:5"><if pos:start="97:5" pos:end="101:5">if<condition pos:start="97:7" pos:end="97:20">(<expr pos:start="97:8" pos:end="97:19"><name pos:start="97:8" pos:end="97:14">num_cnt</name><operator pos:start="97:15" pos:end="97:15">%</operator><literal type="number" pos:start="97:16" pos:end="97:16">2</literal><operator pos:start="97:17" pos:end="97:18">==</operator><literal type="number" pos:start="97:19" pos:end="97:19">1</literal></expr>)</condition>
    <block pos:start="98:5" pos:end="101:5">{<block_content pos:start="99:9" pos:end="100:17">
        <expr_stmt pos:start="99:9" pos:end="99:22"><expr pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:12">cout</name><operator pos:start="99:13" pos:end="99:14">&lt;&lt;</operator><literal type="string" pos:start="99:15" pos:end="99:21">"Error"</literal></expr>;</expr_stmt>
        <return pos:start="100:9" pos:end="100:17">return <expr pos:start="100:16" pos:end="100:16"><literal type="number" pos:start="100:16" pos:end="100:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="102:5" pos:end="102:17"><expr pos:start="102:5" pos:end="102:16"><name pos:start="102:5" pos:end="102:8">cout</name><operator pos:start="102:9" pos:end="102:10">&lt;&lt;</operator><name pos:start="102:11" pos:end="102:13">sum</name><operator pos:start="102:14" pos:end="102:15">&lt;&lt;</operator><name pos:start="102:16" pos:end="102:16">o</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
