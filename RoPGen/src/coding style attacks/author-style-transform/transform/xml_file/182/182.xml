<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/182/182.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<struct pos:start="3:1" pos:end="5:11">struct <name pos:start="3:8" pos:end="3:11">Edge</name> <block pos:start="3:13" pos:end="5:1">{<public type="default" pos:start="4:5" pos:end="4:17">
    <decl_stmt pos:start="4:5" pos:end="4:17"><decl pos:start="4:5" pos:end="4:10"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:10">to</name></decl>, <decl pos:start="4:13" pos:end="4:16"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:13" pos:end="4:16">next</name></decl>;</decl_stmt>
</public>}</block> <decl pos:start="5:3" pos:end="5:10"><name pos:start="5:3" pos:end="5:10"><name pos:start="5:3" pos:end="5:3">e</name><index pos:start="5:4" pos:end="5:10">[<expr pos:start="5:5" pos:end="5:9"><literal type="number" pos:start="5:5" pos:end="5:9">20010</literal></expr>]</index></name></decl>;</struct>
<decl_stmt pos:start="6:1" pos:end="6:9"><decl pos:start="6:1" pos:end="6:8"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">ecnt</name></decl>;</decl_stmt> 
<decl_stmt pos:start="7:1" pos:end="7:16"><decl pos:start="7:1" pos:end="7:15"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:8">head</name><index pos:start="7:9" pos:end="7:15">[<expr pos:start="7:10" pos:end="7:14"><literal type="number" pos:start="7:10" pos:end="7:14">10010</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="8:1" pos:end="13:1"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">void</name></type> <name pos:start="8:6" pos:end="8:12">addEdge</name><parameter_list pos:start="8:13" pos:end="8:26">(<parameter pos:start="8:14" pos:end="8:18"><decl pos:start="8:14" pos:end="8:18"><type pos:start="8:14" pos:end="8:18"><name pos:start="8:14" pos:end="8:16">int</name></type> <name pos:start="8:18" pos:end="8:18">u</name></decl></parameter>, <parameter pos:start="8:21" pos:end="8:25"><decl pos:start="8:21" pos:end="8:25"><type pos:start="8:21" pos:end="8:25"><name pos:start="8:21" pos:end="8:23">int</name></type> <name pos:start="8:25" pos:end="8:25">v</name></decl></parameter>)</parameter_list> <block pos:start="8:28" pos:end="13:1">{<block_content pos:start="9:5" pos:end="12:19"> 
    <expr_stmt pos:start="9:5" pos:end="9:11"><expr pos:start="9:5" pos:end="9:10"><operator pos:start="9:5" pos:end="9:6">++</operator><name pos:start="9:7" pos:end="9:10">ecnt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:19"><expr pos:start="10:5" pos:end="10:18"><name pos:start="10:5" pos:end="10:11"><name pos:start="10:5" pos:end="10:5">e</name><index pos:start="10:6" pos:end="10:11">[<expr pos:start="10:7" pos:end="10:10"><name pos:start="10:7" pos:end="10:10">ecnt</name></expr>]</index></name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:14">to</name> <operator pos:start="10:16" pos:end="10:16">=</operator> <name pos:start="10:18" pos:end="10:18">v</name></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:5">e</name><index pos:start="11:6" pos:end="11:11">[<expr pos:start="11:7" pos:end="11:10"><name pos:start="11:7" pos:end="11:10">ecnt</name></expr>]</index></name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:16">next</name> <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:26"><name pos:start="11:20" pos:end="11:23">head</name><index pos:start="11:24" pos:end="11:26">[<expr pos:start="11:25" pos:end="11:25"><name pos:start="11:25" pos:end="11:25">u</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:19"><expr pos:start="12:5" pos:end="12:18"><name pos:start="12:5" pos:end="12:11"><name pos:start="12:5" pos:end="12:8">head</name><index pos:start="12:9" pos:end="12:11">[<expr pos:start="12:10" pos:end="12:10"><name pos:start="12:10" pos:end="12:10">u</name></expr>]</index></name> <operator pos:start="12:13" pos:end="12:13">=</operator> <name pos:start="12:15" pos:end="12:18">ecnt</name></expr>;</expr_stmt>
</block_content>}</block></function>
<decl_stmt pos:start="14:1" pos:end="14:6"><decl pos:start="14:1" pos:end="14:5"><type pos:start="14:1" pos:end="14:3"><name pos:start="14:1" pos:end="14:3">int</name></type> <name pos:start="14:5" pos:end="14:5">n</name></decl>;</decl_stmt>            
<decl_stmt pos:start="15:1" pos:end="15:6"><decl pos:start="15:1" pos:end="15:5"><type pos:start="15:1" pos:end="15:3"><name pos:start="15:1" pos:end="15:3">int</name></type> <name pos:start="15:5" pos:end="15:5">m</name></decl>;</decl_stmt>               
<decl_stmt pos:start="16:1" pos:end="16:15"><decl pos:start="16:1" pos:end="16:14"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:14"><name pos:start="16:5" pos:end="16:7">dfn</name><index pos:start="16:8" pos:end="16:14">[<expr pos:start="16:9" pos:end="16:13"><literal type="number" pos:start="16:9" pos:end="16:13">10010</literal></expr>]</index></name></decl>;</decl_stmt>   
<decl_stmt pos:start="17:1" pos:end="17:15"><decl pos:start="17:1" pos:end="17:14"><type pos:start="17:1" pos:end="17:3"><name pos:start="17:1" pos:end="17:3">int</name></type> <name pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:7">low</name><index pos:start="17:8" pos:end="17:14">[<expr pos:start="17:9" pos:end="17:13"><literal type="number" pos:start="17:9" pos:end="17:13">10010</literal></expr>]</index></name></decl>;</decl_stmt>   
<decl_stmt pos:start="18:1" pos:end="18:10"><decl pos:start="18:1" pos:end="18:9"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:9">timer</name></decl>;</decl_stmt>       
<decl_stmt pos:start="19:1" pos:end="19:12"><decl pos:start="19:1" pos:end="19:11"><type pos:start="19:1" pos:end="19:3"><name pos:start="19:1" pos:end="19:3">int</name></type> <name pos:start="19:5" pos:end="19:11">scc_cnt</name></decl>;</decl_stmt>     
<decl_stmt pos:start="20:1" pos:end="20:23"><decl pos:start="20:1" pos:end="20:22"><type pos:start="20:1" pos:end="20:11"><name pos:start="20:1" pos:end="20:11"><name pos:start="20:1" pos:end="20:6">vector</name><argument_list type="generic" pos:start="20:7" pos:end="20:11">&lt;<argument pos:start="20:8" pos:end="20:10"><expr pos:start="20:8" pos:end="20:10"><name pos:start="20:8" pos:end="20:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="20:13" pos:end="20:22"><name pos:start="20:13" pos:end="20:15">scc</name><index pos:start="20:16" pos:end="20:22">[<expr pos:start="20:17" pos:end="20:21"><literal type="number" pos:start="20:17" pos:end="20:21">10010</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="21:1" pos:end="21:13"><decl pos:start="21:1" pos:end="21:12"><type pos:start="21:1" pos:end="21:10"><name pos:start="21:1" pos:end="21:10"><name pos:start="21:1" pos:end="21:5">stack</name><argument_list type="generic" pos:start="21:6" pos:end="21:10">&lt;<argument pos:start="21:7" pos:end="21:9"><expr pos:start="21:7" pos:end="21:9"><name pos:start="21:7" pos:end="21:9">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="21:12" pos:end="21:12">S</name></decl>;</decl_stmt>
<decl_stmt pos:start="22:1" pos:end="22:15"><decl pos:start="22:1" pos:end="22:14"><type pos:start="22:1" pos:end="22:5"><name pos:start="22:1" pos:end="22:5">short</name></type> <name pos:start="22:7" pos:end="22:14"><name pos:start="22:7" pos:end="22:7">a</name><index pos:start="22:8" pos:end="22:14">[<expr pos:start="22:9" pos:end="22:13"><literal type="number" pos:start="22:9" pos:end="22:13">10010</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="23:1" pos:end="23:21"><decl pos:start="23:1" pos:end="23:20"><type pos:start="23:1" pos:end="23:4"><name pos:start="23:1" pos:end="23:4">bool</name></type> <name pos:start="23:6" pos:end="23:20"><name pos:start="23:6" pos:end="23:13">in_stack</name><index pos:start="23:14" pos:end="23:20">[<expr pos:start="23:15" pos:end="23:19"><literal type="number" pos:start="23:15" pos:end="23:19">10010</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="24:1" pos:end="24:17"><decl pos:start="24:1" pos:end="24:16"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:16"><name pos:start="24:5" pos:end="24:9">sccno</name><index pos:start="24:10" pos:end="24:16">[<expr pos:start="24:11" pos:end="24:15"><literal type="number" pos:start="24:11" pos:end="24:15">10010</literal></expr>]</index></name></decl>;</decl_stmt>

<function pos:start="26:1" pos:end="50:1"><type pos:start="26:1" pos:end="26:4"><name pos:start="26:1" pos:end="26:4">void</name></type> <name pos:start="26:6" pos:end="26:11">tarjan</name><parameter_list pos:start="26:12" pos:end="26:18">(<parameter pos:start="26:13" pos:end="26:17"><decl pos:start="26:13" pos:end="26:17"><type pos:start="26:13" pos:end="26:15"><name pos:start="26:13" pos:end="26:15">int</name></type> <name pos:start="26:17" pos:end="26:17">u</name></decl></parameter>)</parameter_list> <block pos:start="26:20" pos:end="50:1">{<block_content pos:start="27:5" pos:end="49:5">
    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:7">dfn</name><index pos:start="27:8" pos:end="27:10">[<expr pos:start="27:9" pos:end="27:9"><name pos:start="27:9" pos:end="27:9">u</name></expr>]</index></name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:19"><name pos:start="27:14" pos:end="27:16">low</name><index pos:start="27:17" pos:end="27:19">[<expr pos:start="27:18" pos:end="27:18"><name pos:start="27:18" pos:end="27:18">u</name></expr>]</index></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <operator pos:start="27:23" pos:end="27:24">++</operator><name pos:start="27:25" pos:end="27:29">timer</name></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:14"><expr pos:start="28:5" pos:end="28:13"><call pos:start="28:5" pos:end="28:13"><name pos:start="28:5" pos:end="28:10"><name pos:start="28:5" pos:end="28:5">S</name><operator pos:start="28:6" pos:end="28:6">.</operator><name pos:start="28:7" pos:end="28:10">push</name></name><argument_list pos:start="28:11" pos:end="28:13">(<argument pos:start="28:12" pos:end="28:12"><expr pos:start="28:12" pos:end="28:12"><name pos:start="28:12" pos:end="28:12">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:23"><expr pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:12">in_stack</name><index pos:start="29:13" pos:end="29:15">[<expr pos:start="29:14" pos:end="29:14"><name pos:start="29:14" pos:end="29:14">u</name></expr>]</index></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <literal type="boolean" pos:start="29:19" pos:end="29:22">true</literal></expr>;</expr_stmt>
    <for pos:start="30:5" pos:end="38:5">for <control pos:start="30:9" pos:end="30:43">(<init pos:start="30:10" pos:end="30:25"><decl pos:start="30:10" pos:end="30:24"><type pos:start="30:10" pos:end="30:12"><name pos:start="30:10" pos:end="30:12">int</name></type> <name pos:start="30:14" pos:end="30:14">i</name> <init pos:start="30:16" pos:end="30:24">= <expr pos:start="30:18" pos:end="30:24"><name pos:start="30:18" pos:end="30:24"><name pos:start="30:18" pos:end="30:21">head</name><index pos:start="30:22" pos:end="30:24">[<expr pos:start="30:23" pos:end="30:23"><name pos:start="30:23" pos:end="30:23">u</name></expr>]</index></name></expr></init></decl>;</init> <condition pos:start="30:27" pos:end="30:28"><expr pos:start="30:27" pos:end="30:27"><name pos:start="30:27" pos:end="30:27">i</name></expr>;</condition> <incr pos:start="30:30" pos:end="30:42"><expr pos:start="30:30" pos:end="30:42"><name pos:start="30:30" pos:end="30:30">i</name> <operator pos:start="30:32" pos:end="30:32">=</operator> <name pos:start="30:34" pos:end="30:37"><name pos:start="30:34" pos:end="30:34">e</name><index pos:start="30:35" pos:end="30:37">[<expr pos:start="30:36" pos:end="30:36"><name pos:start="30:36" pos:end="30:36">i</name></expr>]</index></name><operator pos:start="30:38" pos:end="30:38">.</operator><name pos:start="30:39" pos:end="30:42">next</name></expr></incr>)</control> <block pos:start="30:45" pos:end="38:5">{<block_content pos:start="31:9" pos:end="37:9">
        <decl_stmt pos:start="31:9" pos:end="31:24"><decl pos:start="31:9" pos:end="31:23"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">v</name> <init pos:start="31:15" pos:end="31:23">= <expr pos:start="31:17" pos:end="31:23"><name pos:start="31:17" pos:end="31:20"><name pos:start="31:17" pos:end="31:17">e</name><index pos:start="31:18" pos:end="31:20">[<expr pos:start="31:19" pos:end="31:19"><name pos:start="31:19" pos:end="31:19">i</name></expr>]</index></name><operator pos:start="31:21" pos:end="31:21">.</operator><name pos:start="31:22" pos:end="31:23">to</name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="32:9" pos:end="37:9"><if pos:start="32:9" pos:end="35:9">if <condition pos:start="32:12" pos:end="32:24">(<expr pos:start="32:13" pos:end="32:23"><name pos:start="32:13" pos:end="32:18"><name pos:start="32:13" pos:end="32:15">dfn</name><index pos:start="32:16" pos:end="32:18">[<expr pos:start="32:17" pos:end="32:17"><name pos:start="32:17" pos:end="32:17">v</name></expr>]</index></name> <operator pos:start="32:20" pos:end="32:21">==</operator> <literal type="number" pos:start="32:23" pos:end="32:23">0</literal></expr>)</condition> <block pos:start="32:26" pos:end="35:9">{<block_content pos:start="33:13" pos:end="34:41">
            <expr_stmt pos:start="33:13" pos:end="33:22"><expr pos:start="33:13" pos:end="33:21"><call pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:18">tarjan</name><argument_list pos:start="33:19" pos:end="33:21">(<argument pos:start="33:20" pos:end="33:20"><expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="34:13" pos:end="34:41"><expr pos:start="34:13" pos:end="34:40"><name pos:start="34:13" pos:end="34:18"><name pos:start="34:13" pos:end="34:15">low</name><index pos:start="34:16" pos:end="34:18">[<expr pos:start="34:17" pos:end="34:17"><name pos:start="34:17" pos:end="34:17">u</name></expr>]</index></name> <operator pos:start="34:20" pos:end="34:20">=</operator> <call pos:start="34:22" pos:end="34:40"><name pos:start="34:22" pos:end="34:24">min</name><argument_list pos:start="34:25" pos:end="34:40">(<argument pos:start="34:26" pos:end="34:31"><expr pos:start="34:26" pos:end="34:31"><name pos:start="34:26" pos:end="34:31"><name pos:start="34:26" pos:end="34:28">low</name><index pos:start="34:29" pos:end="34:31">[<expr pos:start="34:30" pos:end="34:30"><name pos:start="34:30" pos:end="34:30">u</name></expr>]</index></name></expr></argument>, <argument pos:start="34:34" pos:end="34:39"><expr pos:start="34:34" pos:end="34:39"><name pos:start="34:34" pos:end="34:39"><name pos:start="34:34" pos:end="34:36">low</name><index pos:start="34:37" pos:end="34:39">[<expr pos:start="34:38" pos:end="34:38"><name pos:start="34:38" pos:end="34:38">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="35:11" pos:end="37:9">else if <condition pos:start="35:19" pos:end="35:31">(<expr pos:start="35:20" pos:end="35:30"><name pos:start="35:20" pos:end="35:30"><name pos:start="35:20" pos:end="35:27">in_stack</name><index pos:start="35:28" pos:end="35:30">[<expr pos:start="35:29" pos:end="35:29"><name pos:start="35:29" pos:end="35:29">v</name></expr>]</index></name></expr>)</condition> <block pos:start="35:33" pos:end="37:9">{<block_content pos:start="36:13" pos:end="36:41">
            <expr_stmt pos:start="36:13" pos:end="36:41"><expr pos:start="36:13" pos:end="36:40"><name pos:start="36:13" pos:end="36:18"><name pos:start="36:13" pos:end="36:15">low</name><index pos:start="36:16" pos:end="36:18">[<expr pos:start="36:17" pos:end="36:17"><name pos:start="36:17" pos:end="36:17">u</name></expr>]</index></name> <operator pos:start="36:20" pos:end="36:20">=</operator> <call pos:start="36:22" pos:end="36:40"><name pos:start="36:22" pos:end="36:24">min</name><argument_list pos:start="36:25" pos:end="36:40">(<argument pos:start="36:26" pos:end="36:31"><expr pos:start="36:26" pos:end="36:31"><name pos:start="36:26" pos:end="36:31"><name pos:start="36:26" pos:end="36:28">low</name><index pos:start="36:29" pos:end="36:31">[<expr pos:start="36:30" pos:end="36:30"><name pos:start="36:30" pos:end="36:30">u</name></expr>]</index></name></expr></argument>, <argument pos:start="36:34" pos:end="36:39"><expr pos:start="36:34" pos:end="36:39"><name pos:start="36:34" pos:end="36:39"><name pos:start="36:34" pos:end="36:36">dfn</name><index pos:start="36:37" pos:end="36:39">[<expr pos:start="36:38" pos:end="36:38"><name pos:start="36:38" pos:end="36:38">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="39:5" pos:end="49:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="39:25">(<expr pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:11">low</name><index pos:start="39:12" pos:end="39:14">[<expr pos:start="39:13" pos:end="39:13"><name pos:start="39:13" pos:end="39:13">u</name></expr>]</index></name> <operator pos:start="39:16" pos:end="39:17">==</operator> <name pos:start="39:19" pos:end="39:24"><name pos:start="39:19" pos:end="39:21">dfn</name><index pos:start="39:22" pos:end="39:24">[<expr pos:start="39:23" pos:end="39:23"><name pos:start="39:23" pos:end="39:23">u</name></expr>]</index></name></expr>)</condition> <block pos:start="39:27" pos:end="49:5">{<block_content pos:start="40:9" pos:end="48:9">
        <expr_stmt pos:start="40:9" pos:end="40:18"><expr pos:start="40:9" pos:end="40:17"><name pos:start="40:9" pos:end="40:15">scc_cnt</name><operator pos:start="40:16" pos:end="40:17">++</operator></expr>;</expr_stmt>
        <while pos:start="41:9" pos:end="48:9">while <condition pos:start="41:15" pos:end="41:26">(<expr pos:start="41:16" pos:end="41:25"><operator pos:start="41:16" pos:end="41:16">!</operator><call pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:23"><name pos:start="41:17" pos:end="41:17">S</name><operator pos:start="41:18" pos:end="41:18">.</operator><name pos:start="41:19" pos:end="41:23">empty</name></name><argument_list pos:start="41:24" pos:end="41:25">()</argument_list></call></expr>)</condition> <block pos:start="41:28" pos:end="48:9">{<block_content pos:start="42:13" pos:end="47:32">
            <decl_stmt pos:start="42:13" pos:end="42:30"><decl pos:start="42:13" pos:end="42:29"><type pos:start="42:13" pos:end="42:15"><name pos:start="42:13" pos:end="42:15">int</name></type> <name pos:start="42:17" pos:end="42:19">now</name> <init pos:start="42:21" pos:end="42:29">= <expr pos:start="42:23" pos:end="42:29"><call pos:start="42:23" pos:end="42:29"><name pos:start="42:23" pos:end="42:27"><name pos:start="42:23" pos:end="42:23">S</name><operator pos:start="42:24" pos:end="42:24">.</operator><name pos:start="42:25" pos:end="42:27">top</name></name><argument_list pos:start="42:28" pos:end="42:29">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="43:13" pos:end="43:20"><expr pos:start="43:13" pos:end="43:19"><call pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:17"><name pos:start="43:13" pos:end="43:13">S</name><operator pos:start="43:14" pos:end="43:14">.</operator><name pos:start="43:15" pos:end="43:17">pop</name></name><argument_list pos:start="43:18" pos:end="43:19">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="44:13" pos:end="44:40"><expr pos:start="44:13" pos:end="44:39"><name pos:start="44:13" pos:end="44:24"><name pos:start="44:13" pos:end="44:15">scc</name><index pos:start="44:16" pos:end="44:24">[<expr pos:start="44:17" pos:end="44:23"><name pos:start="44:17" pos:end="44:23">scc_cnt</name></expr>]</index></name><operator pos:start="44:25" pos:end="44:25">.</operator><call pos:start="44:26" pos:end="44:39"><name pos:start="44:26" pos:end="44:34">push_back</name><argument_list pos:start="44:35" pos:end="44:39">(<argument pos:start="44:36" pos:end="44:38"><expr pos:start="44:36" pos:end="44:38"><name pos:start="44:36" pos:end="44:38">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="45:13" pos:end="45:33"><expr pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:17">sccno</name><index pos:start="45:18" pos:end="45:22">[<expr pos:start="45:19" pos:end="45:21"><name pos:start="45:19" pos:end="45:21">now</name></expr>]</index></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:32">scc_cnt</name></expr>;</expr_stmt>
            <expr_stmt pos:start="46:13" pos:end="46:34"><expr pos:start="46:13" pos:end="46:33"><name pos:start="46:13" pos:end="46:25"><name pos:start="46:13" pos:end="46:20">in_stack</name><index pos:start="46:21" pos:end="46:25">[<expr pos:start="46:22" pos:end="46:24"><name pos:start="46:22" pos:end="46:24">now</name></expr>]</index></name> <operator pos:start="46:27" pos:end="46:27">=</operator> <literal type="boolean" pos:start="46:29" pos:end="46:33">false</literal></expr>;</expr_stmt>
            <if_stmt pos:start="47:13" pos:end="47:32"><if pos:start="47:13" pos:end="47:32">if <condition pos:start="47:16" pos:end="47:25">(<expr pos:start="47:17" pos:end="47:24"><name pos:start="47:17" pos:end="47:19">now</name> <operator pos:start="47:21" pos:end="47:22">==</operator> <name pos:start="47:24" pos:end="47:24">u</name></expr>)</condition><block type="pseudo" pos:start="47:27" pos:end="47:32"><block_content pos:start="47:27" pos:end="47:32"> <break pos:start="47:27" pos:end="47:32">break;</break></block_content></block></if></if_stmt>
        </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<decl_stmt pos:start="51:1" pos:end="51:21"><decl pos:start="51:1" pos:end="51:20"><type pos:start="51:1" pos:end="51:4"><name pos:start="51:1" pos:end="51:4">Edge</name></type> <name pos:start="51:6" pos:end="51:20"><name pos:start="51:6" pos:end="51:13">new_edge</name><index pos:start="51:14" pos:end="51:20">[<expr pos:start="51:15" pos:end="51:19"><literal type="number" pos:start="51:15" pos:end="51:19">20010</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="52:1" pos:end="52:13"><decl pos:start="52:1" pos:end="52:12"><type pos:start="52:1" pos:end="52:3"><name pos:start="52:1" pos:end="52:3">int</name></type> <name pos:start="52:5" pos:end="52:12">new_ecnt</name></decl>;</decl_stmt>

<decl_stmt pos:start="54:1" pos:end="54:20"><decl pos:start="54:1" pos:end="54:19"><type pos:start="54:1" pos:end="54:3"><name pos:start="54:1" pos:end="54:3">int</name></type> <name pos:start="54:5" pos:end="54:19"><name pos:start="54:5" pos:end="54:12">new_head</name><index pos:start="54:13" pos:end="54:19">[<expr pos:start="54:14" pos:end="54:18"><literal type="number" pos:start="54:14" pos:end="54:18">10010</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="55:1" pos:end="60:1"><type pos:start="55:1" pos:end="55:4"><name pos:start="55:1" pos:end="55:4">void</name></type> <name pos:start="55:6" pos:end="55:15">addNewEdge</name><parameter_list pos:start="55:16" pos:end="55:28">(<parameter pos:start="55:17" pos:end="55:21"><decl pos:start="55:17" pos:end="55:21"><type pos:start="55:17" pos:end="55:21"><name pos:start="55:17" pos:end="55:19">int</name></type> <name pos:start="55:21" pos:end="55:21">u</name></decl></parameter>,<parameter pos:start="55:23" pos:end="55:27"><decl pos:start="55:23" pos:end="55:27"><type pos:start="55:23" pos:end="55:27"><name pos:start="55:23" pos:end="55:25">int</name></type> <name pos:start="55:27" pos:end="55:27">v</name></decl></parameter>)</parameter_list><block pos:start="55:29" pos:end="60:1">{<block_content pos:start="56:5" pos:end="59:25">
    <expr_stmt pos:start="56:5" pos:end="56:15"><expr pos:start="56:5" pos:end="56:14"><operator pos:start="56:5" pos:end="56:6">++</operator><name pos:start="56:7" pos:end="56:14">new_ecnt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="57:5" pos:end="57:28"><expr pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:12">new_edge</name><index pos:start="57:13" pos:end="57:22">[<expr pos:start="57:14" pos:end="57:21"><name pos:start="57:14" pos:end="57:21">new_ecnt</name></expr>]</index></name><operator pos:start="57:23" pos:end="57:23">.</operator><name pos:start="57:24" pos:end="57:25">to</name><operator pos:start="57:26" pos:end="57:26">=</operator><name pos:start="57:27" pos:end="57:27">v</name></expr>;</expr_stmt>
    <expr_stmt pos:start="58:5" pos:end="58:40"><expr pos:start="58:5" pos:end="58:39"><name pos:start="58:5" pos:end="58:22"><name pos:start="58:5" pos:end="58:12">new_edge</name><index pos:start="58:13" pos:end="58:22">[<expr pos:start="58:14" pos:end="58:21"><name pos:start="58:14" pos:end="58:21">new_ecnt</name></expr>]</index></name><operator pos:start="58:23" pos:end="58:23">.</operator><name pos:start="58:24" pos:end="58:27">next</name><operator pos:start="58:28" pos:end="58:28">=</operator><name pos:start="58:29" pos:end="58:39"><name pos:start="58:29" pos:end="58:36">new_head</name><index pos:start="58:37" pos:end="58:39">[<expr pos:start="58:38" pos:end="58:38"><name pos:start="58:38" pos:end="58:38">u</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="59:5" pos:end="59:25"><expr pos:start="59:5" pos:end="59:24"><name pos:start="59:5" pos:end="59:15"><name pos:start="59:5" pos:end="59:12">new_head</name><index pos:start="59:13" pos:end="59:15">[<expr pos:start="59:14" pos:end="59:14"><name pos:start="59:14" pos:end="59:14">u</name></expr>]</index></name><operator pos:start="59:16" pos:end="59:16">=</operator><name pos:start="59:17" pos:end="59:24">new_ecnt</name></expr>;</expr_stmt>
</block_content>}</block></function>
<decl_stmt pos:start="61:1" pos:end="61:21"><decl pos:start="61:1" pos:end="61:20"><type pos:start="61:1" pos:end="61:3"><name pos:start="61:1" pos:end="61:3">int</name></type> <name pos:start="61:5" pos:end="61:20"><name pos:start="61:5" pos:end="61:13">chuansong</name><index pos:start="61:14" pos:end="61:20">[<expr pos:start="61:15" pos:end="61:19"><literal type="number" pos:start="61:15" pos:end="61:19">10010</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt pos:start="62:1" pos:end="62:10"><decl pos:start="62:1" pos:end="62:9"><type pos:start="62:1" pos:end="62:3"><name pos:start="62:1" pos:end="62:3">int</name></type> <name pos:start="62:5" pos:end="62:7">pos</name><init pos:start="62:8" pos:end="62:9">=<expr pos:start="62:9" pos:end="62:9"><literal type="number" pos:start="62:9" pos:end="62:9">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="63:1" pos:end="63:16"><decl pos:start="63:1" pos:end="63:15"><type pos:start="63:1" pos:end="63:4"><name pos:start="63:1" pos:end="63:4">bool</name></type> <name pos:start="63:6" pos:end="63:15"><name pos:start="63:6" pos:end="63:8">vis</name><index pos:start="63:9" pos:end="63:15">[<expr pos:start="63:10" pos:end="63:14"><literal type="number" pos:start="63:10" pos:end="63:14">10100</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="64:1" pos:end="64:16"><decl pos:start="64:1" pos:end="64:15"><type pos:start="64:1" pos:end="64:9"><name pos:start="64:1" pos:end="64:4">long</name> <name pos:start="64:6" pos:end="64:9">long</name></type> <name pos:start="64:11" pos:end="64:13">ans</name><init pos:start="64:14" pos:end="64:15">=<expr pos:start="64:15" pos:end="64:15"><literal type="number" pos:start="64:15" pos:end="64:15">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="65:1" pos:end="76:1"><type pos:start="65:1" pos:end="65:4"><name pos:start="65:1" pos:end="65:4">void</name></type> <name pos:start="65:6" pos:end="65:8">dfs</name><parameter_list pos:start="65:9" pos:end="65:15">(<parameter pos:start="65:10" pos:end="65:14"><decl pos:start="65:10" pos:end="65:14"><type pos:start="65:10" pos:end="65:12"><name pos:start="65:10" pos:end="65:12">int</name></type> <name pos:start="65:14" pos:end="65:14">u</name></decl></parameter>)</parameter_list><block pos:start="65:16" pos:end="76:1">{<block_content pos:start="66:5" pos:end="75:5">
    <if_stmt pos:start="66:5" pos:end="66:22"><if pos:start="66:5" pos:end="66:22">if<condition pos:start="66:7" pos:end="66:14">(<expr pos:start="66:8" pos:end="66:13"><name pos:start="66:8" pos:end="66:13"><name pos:start="66:8" pos:end="66:10">vis</name><index pos:start="66:11" pos:end="66:13">[<expr pos:start="66:12" pos:end="66:12"><name pos:start="66:12" pos:end="66:12">u</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="66:16" pos:end="66:22"><block_content pos:start="66:16" pos:end="66:22"> <return pos:start="66:16" pos:end="66:22">return;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="67:5" pos:end="67:13"><expr pos:start="67:5" pos:end="67:12"><name pos:start="67:5" pos:end="67:10"><name pos:start="67:5" pos:end="67:7">vis</name><index pos:start="67:8" pos:end="67:10">[<expr pos:start="67:9" pos:end="67:9"><name pos:start="67:9" pos:end="67:9">u</name></expr>]</index></name><operator pos:start="67:11" pos:end="67:11">=</operator><literal type="number" pos:start="67:12" pos:end="67:12">1</literal></expr>;</expr_stmt>
    <for pos:start="68:5" pos:end="71:5">for<control pos:start="68:8" pos:end="68:36">(<init pos:start="68:9" pos:end="68:16"><decl pos:start="68:9" pos:end="68:15"><type pos:start="68:9" pos:end="68:11"><name pos:start="68:9" pos:end="68:11">int</name></type> <name pos:start="68:13" pos:end="68:13">i</name><init pos:start="68:14" pos:end="68:15">=<expr pos:start="68:15" pos:end="68:15"><literal type="number" pos:start="68:15" pos:end="68:15">0</literal></expr></init></decl>;</init><condition pos:start="68:17" pos:end="68:32"><expr pos:start="68:17" pos:end="68:31"><name pos:start="68:17" pos:end="68:17">i</name><operator pos:start="68:18" pos:end="68:18">&lt;</operator><name pos:start="68:19" pos:end="68:24"><name pos:start="68:19" pos:end="68:21">scc</name><index pos:start="68:22" pos:end="68:24">[<expr pos:start="68:23" pos:end="68:23"><name pos:start="68:23" pos:end="68:23">u</name></expr>]</index></name><operator pos:start="68:25" pos:end="68:25">.</operator><call pos:start="68:26" pos:end="68:31"><name pos:start="68:26" pos:end="68:29">size</name><argument_list pos:start="68:30" pos:end="68:31">()</argument_list></call></expr>;</condition><incr pos:start="68:33" pos:end="68:35"><expr pos:start="68:33" pos:end="68:35"><name pos:start="68:33" pos:end="68:33">i</name><operator pos:start="68:34" pos:end="68:35">++</operator></expr></incr>)</control><block pos:start="68:37" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:26">
        <expr_stmt pos:start="69:9" pos:end="69:26"><expr pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:11">ans</name><operator pos:start="69:12" pos:end="69:13">+=</operator><name pos:start="69:14" pos:end="69:25"><name pos:start="69:14" pos:end="69:14">a</name><index pos:start="69:15" pos:end="69:25">[<expr pos:start="69:16" pos:end="69:24"><name pos:start="69:16" pos:end="69:24"><name pos:start="69:16" pos:end="69:18">scc</name><index pos:start="69:19" pos:end="69:21">[<expr pos:start="69:20" pos:end="69:20"><name pos:start="69:20" pos:end="69:20">u</name></expr>]</index><index pos:start="69:22" pos:end="69:24">[<expr pos:start="69:23" pos:end="69:23"><name pos:start="69:23" pos:end="69:23">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>
        
    </block_content>}</block></for>
    <expr_stmt pos:start="72:5" pos:end="72:26"><expr pos:start="72:5" pos:end="72:25"><name pos:start="72:5" pos:end="72:8">cout</name> <operator pos:start="72:10" pos:end="72:11">&lt;&lt;</operator> <literal type="string" pos:start="72:13" pos:end="72:17">"cnm"</literal> <operator pos:start="72:19" pos:end="72:20">&lt;&lt;</operator> <name pos:start="72:22" pos:end="72:25">endl</name></expr>;</expr_stmt>
    <for pos:start="73:5" pos:end="75:5">for<control pos:start="73:8" pos:end="73:47">(<init pos:start="73:9" pos:end="73:26"><decl pos:start="73:9" pos:end="73:25"><type pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">int</name></type> <name pos:start="73:13" pos:end="73:13">i</name><init pos:start="73:14" pos:end="73:25">=<expr pos:start="73:15" pos:end="73:25"><name pos:start="73:15" pos:end="73:25"><name pos:start="73:15" pos:end="73:22">new_head</name><index pos:start="73:23" pos:end="73:25">[<expr pos:start="73:24" pos:end="73:24"><name pos:start="73:24" pos:end="73:24">u</name></expr>]</index></name></expr></init></decl>;</init><condition pos:start="73:27" pos:end="73:28"><expr pos:start="73:27" pos:end="73:27"><name pos:start="73:27" pos:end="73:27">i</name></expr>;</condition><incr pos:start="73:29" pos:end="73:46"><expr pos:start="73:29" pos:end="73:46"><name pos:start="73:29" pos:end="73:29">i</name><operator pos:start="73:30" pos:end="73:30">=</operator><name pos:start="73:31" pos:end="73:41"><name pos:start="73:31" pos:end="73:38">new_edge</name><index pos:start="73:39" pos:end="73:41">[<expr pos:start="73:40" pos:end="73:40"><name pos:start="73:40" pos:end="73:40">i</name></expr>]</index></name><operator pos:start="73:42" pos:end="73:42">.</operator><name pos:start="73:43" pos:end="73:46">next</name></expr></incr>)</control><block pos:start="73:48" pos:end="75:5">{<block_content pos:start="74:9" pos:end="74:28">
        <expr_stmt pos:start="74:9" pos:end="74:28"><expr pos:start="74:9" pos:end="74:27"><call pos:start="74:9" pos:end="74:27"><name pos:start="74:9" pos:end="74:11">dfs</name><argument_list pos:start="74:12" pos:end="74:27">(<argument pos:start="74:13" pos:end="74:26"><expr pos:start="74:13" pos:end="74:26"><name pos:start="74:13" pos:end="74:23"><name pos:start="74:13" pos:end="74:20">new_edge</name><index pos:start="74:21" pos:end="74:23">[<expr pos:start="74:22" pos:end="74:22"><name pos:start="74:22" pos:end="74:22">i</name></expr>]</index></name><operator pos:start="74:24" pos:end="74:24">.</operator><name pos:start="74:25" pos:end="74:26">to</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="77:1" pos:end="129:1"><type pos:start="77:1" pos:end="77:3"><name pos:start="77:1" pos:end="77:3">int</name></type> <name pos:start="77:5" pos:end="77:8">main</name><parameter_list pos:start="77:9" pos:end="77:10">()</parameter_list> <block pos:start="77:12" pos:end="129:1">{<block_content pos:start="78:5" pos:end="128:13">
    <expr_stmt pos:start="78:5" pos:end="78:37"><expr pos:start="78:5" pos:end="78:36"><call pos:start="78:5" pos:end="78:36"><name pos:start="78:5" pos:end="78:11">freopen</name><argument_list pos:start="78:12" pos:end="78:36">(<argument pos:start="78:13" pos:end="78:25"><expr pos:start="78:13" pos:end="78:25"><literal type="string" pos:start="78:13" pos:end="78:25">"treasure.in"</literal></expr></argument>,<argument pos:start="78:27" pos:end="78:29"><expr pos:start="78:27" pos:end="78:29"><literal type="string" pos:start="78:27" pos:end="78:29">"r"</literal></expr></argument>,<argument pos:start="78:31" pos:end="78:35"><expr pos:start="78:31" pos:end="78:35"><name pos:start="78:31" pos:end="78:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="79:5" pos:end="79:39"><expr pos:start="79:5" pos:end="79:38"><call pos:start="79:5" pos:end="79:38"><name pos:start="79:5" pos:end="79:11">freopen</name><argument_list pos:start="79:12" pos:end="79:38">(<argument pos:start="79:13" pos:end="79:26"><expr pos:start="79:13" pos:end="79:26"><literal type="string" pos:start="79:13" pos:end="79:26">"treasure.out"</literal></expr></argument>,<argument pos:start="79:28" pos:end="79:30"><expr pos:start="79:28" pos:end="79:30"><literal type="string" pos:start="79:28" pos:end="79:30">"w"</literal></expr></argument>,<argument pos:start="79:32" pos:end="79:37"><expr pos:start="79:32" pos:end="79:37"><name pos:start="79:32" pos:end="79:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="80:5" pos:end="80:26"><expr pos:start="80:5" pos:end="80:25"><call pos:start="80:5" pos:end="80:25"><name pos:start="80:5" pos:end="80:9">scanf</name><argument_list pos:start="80:10" pos:end="80:25">(<argument pos:start="80:11" pos:end="80:16"><expr pos:start="80:11" pos:end="80:16"><literal type="string" pos:start="80:11" pos:end="80:16">"%d%d"</literal></expr></argument>, <argument pos:start="80:19" pos:end="80:20"><expr pos:start="80:19" pos:end="80:20"><operator pos:start="80:19" pos:end="80:19">&amp;</operator><name pos:start="80:20" pos:end="80:20">n</name></expr></argument>, <argument pos:start="80:23" pos:end="80:24"><expr pos:start="80:23" pos:end="80:24"><operator pos:start="80:23" pos:end="80:23">&amp;</operator><name pos:start="80:24" pos:end="80:24">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <for pos:start="82:5" pos:end="93:5">for<control pos:start="82:8" pos:end="82:25">(<init pos:start="82:9" pos:end="82:16"><decl pos:start="82:9" pos:end="82:15"><type pos:start="82:9" pos:end="82:11"><name pos:start="82:9" pos:end="82:11">int</name></type> <name pos:start="82:13" pos:end="82:13">i</name><init pos:start="82:14" pos:end="82:15">=<expr pos:start="82:15" pos:end="82:15"><literal type="number" pos:start="82:15" pos:end="82:15">1</literal></expr></init></decl>;</init><condition pos:start="82:17" pos:end="82:21"><expr pos:start="82:17" pos:end="82:20"><name pos:start="82:17" pos:end="82:17">i</name><operator pos:start="82:18" pos:end="82:19">&lt;=</operator><name pos:start="82:20" pos:end="82:20">n</name></expr>;</condition><incr pos:start="82:22" pos:end="82:24"><expr pos:start="82:22" pos:end="82:24"><name pos:start="82:22" pos:end="82:22">i</name><operator pos:start="82:23" pos:end="82:24">++</operator></expr></incr>)</control><block pos:start="82:26" pos:end="93:5">{<block_content pos:start="83:9" pos:end="92:18">
        <for pos:start="83:9" pos:end="91:9">for<control pos:start="83:12" pos:end="83:29">(<init pos:start="83:13" pos:end="83:20"><decl pos:start="83:13" pos:end="83:19"><type pos:start="83:13" pos:end="83:15"><name pos:start="83:13" pos:end="83:15">int</name></type> <name pos:start="83:17" pos:end="83:17">j</name><init pos:start="83:18" pos:end="83:19">=<expr pos:start="83:19" pos:end="83:19"><literal type="number" pos:start="83:19" pos:end="83:19">1</literal></expr></init></decl>;</init><condition pos:start="83:21" pos:end="83:25"><expr pos:start="83:21" pos:end="83:24"><name pos:start="83:21" pos:end="83:21">j</name><operator pos:start="83:22" pos:end="83:23">&lt;=</operator><name pos:start="83:24" pos:end="83:24">m</name></expr>;</condition><incr pos:start="83:26" pos:end="83:28"><expr pos:start="83:26" pos:end="83:28"><name pos:start="83:26" pos:end="83:26">j</name><operator pos:start="83:27" pos:end="83:28">++</operator></expr></incr>)</control><block pos:start="83:30" pos:end="91:9">{<block_content pos:start="84:13" pos:end="90:33">
            <expr_stmt pos:start="84:13" pos:end="84:37"><expr pos:start="84:13" pos:end="84:36"><name pos:start="84:13" pos:end="84:22"><name pos:start="84:13" pos:end="84:13">a</name><index pos:start="84:14" pos:end="84:22">[<expr pos:start="84:15" pos:end="84:21"><name pos:start="84:15" pos:end="84:15">i</name><operator pos:start="84:16" pos:end="84:16">*</operator><name pos:start="84:17" pos:end="84:17">m</name><operator pos:start="84:18" pos:end="84:18">+</operator><name pos:start="84:19" pos:end="84:19">j</name><operator pos:start="84:20" pos:end="84:20">-</operator><name pos:start="84:21" pos:end="84:21">m</name></expr>]</index></name><operator pos:start="84:23" pos:end="84:23">=</operator><call pos:start="84:24" pos:end="84:32"><name pos:start="84:24" pos:end="84:30">getchar</name><argument_list pos:start="84:31" pos:end="84:32">()</argument_list></call><operator pos:start="84:33" pos:end="84:33">-</operator><literal type="char" pos:start="84:34" pos:end="84:36">'0'</literal></expr>;</expr_stmt>
            <if_stmt pos:start="85:13" pos:end="90:33"><if pos:start="85:13" pos:end="88:13">if<condition pos:start="85:15" pos:end="85:35">(<expr pos:start="85:16" pos:end="85:34"><name pos:start="85:16" pos:end="85:25"><name pos:start="85:16" pos:end="85:16">a</name><index pos:start="85:17" pos:end="85:25">[<expr pos:start="85:18" pos:end="85:24"><name pos:start="85:18" pos:end="85:18">i</name><operator pos:start="85:19" pos:end="85:19">*</operator><name pos:start="85:20" pos:end="85:20">m</name><operator pos:start="85:21" pos:end="85:21">+</operator><name pos:start="85:22" pos:end="85:22">j</name><operator pos:start="85:23" pos:end="85:23">-</operator><name pos:start="85:24" pos:end="85:24">m</name></expr>]</index></name><operator pos:start="85:26" pos:end="85:27">==</operator><literal type="char" pos:start="85:28" pos:end="85:30">'*'</literal><operator pos:start="85:31" pos:end="85:31">-</operator><literal type="char" pos:start="85:32" pos:end="85:34">'0'</literal></expr>)</condition><block pos:start="85:36" pos:end="88:13">{<block_content pos:start="86:17" pos:end="87:41">
                <expr_stmt pos:start="86:17" pos:end="86:29"><expr pos:start="86:17" pos:end="86:28"><name pos:start="86:17" pos:end="86:26"><name pos:start="86:17" pos:end="86:17">a</name><index pos:start="86:18" pos:end="86:26">[<expr pos:start="86:19" pos:end="86:25"><name pos:start="86:19" pos:end="86:19">i</name><operator pos:start="86:20" pos:end="86:20">*</operator><name pos:start="86:21" pos:end="86:21">m</name><operator pos:start="86:22" pos:end="86:22">+</operator><name pos:start="86:23" pos:end="86:23">j</name><operator pos:start="86:24" pos:end="86:24">-</operator><name pos:start="86:25" pos:end="86:25">m</name></expr>]</index></name><operator pos:start="86:27" pos:end="86:27">=</operator><literal type="number" pos:start="86:28" pos:end="86:28">0</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="87:17" pos:end="87:41"><expr pos:start="87:17" pos:end="87:40"><name pos:start="87:17" pos:end="87:32"><name pos:start="87:17" pos:end="87:25">chuansong</name><index pos:start="87:26" pos:end="87:32">[<expr pos:start="87:27" pos:end="87:31"><name pos:start="87:27" pos:end="87:29">pos</name><operator pos:start="87:30" pos:end="87:31">++</operator></expr>]</index></name><operator pos:start="87:33" pos:end="87:33">=</operator><name pos:start="87:34" pos:end="87:34">i</name><operator pos:start="87:35" pos:end="87:35">*</operator><name pos:start="87:36" pos:end="87:36">m</name><operator pos:start="87:37" pos:end="87:37">-</operator><name pos:start="87:38" pos:end="87:38">m</name><operator pos:start="87:39" pos:end="87:39">+</operator><name pos:start="87:40" pos:end="87:40">j</name></expr>;</expr_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="89:13" pos:end="89:53">else if<condition pos:start="89:20" pos:end="89:40">(<expr pos:start="89:21" pos:end="89:39"><name pos:start="89:21" pos:end="89:30"><name pos:start="89:21" pos:end="89:21">a</name><index pos:start="89:22" pos:end="89:30">[<expr pos:start="89:23" pos:end="89:29"><name pos:start="89:23" pos:end="89:23">i</name><operator pos:start="89:24" pos:end="89:24">*</operator><name pos:start="89:25" pos:end="89:25">m</name><operator pos:start="89:26" pos:end="89:26">+</operator><name pos:start="89:27" pos:end="89:27">j</name><operator pos:start="89:28" pos:end="89:28">-</operator><name pos:start="89:29" pos:end="89:29">m</name></expr>]</index></name><operator pos:start="89:31" pos:end="89:32">==</operator><literal type="char" pos:start="89:33" pos:end="89:35">' '</literal><operator pos:start="89:36" pos:end="89:36">-</operator><literal type="char" pos:start="89:37" pos:end="89:39">'0'</literal></expr>)</condition><block type="pseudo" pos:start="89:41" pos:end="89:53"><block_content pos:start="89:41" pos:end="89:53"><expr_stmt pos:start="89:41" pos:end="89:53"><expr pos:start="89:41" pos:end="89:52"><name pos:start="89:41" pos:end="89:50"><name pos:start="89:41" pos:end="89:41">a</name><index pos:start="89:42" pos:end="89:50">[<expr pos:start="89:43" pos:end="89:49"><name pos:start="89:43" pos:end="89:43">i</name><operator pos:start="89:44" pos:end="89:44">*</operator><name pos:start="89:45" pos:end="89:45">m</name><operator pos:start="89:46" pos:end="89:46">-</operator><name pos:start="89:47" pos:end="89:47">m</name><operator pos:start="89:48" pos:end="89:48">+</operator><name pos:start="89:49" pos:end="89:49">j</name></expr>]</index></name><operator pos:start="89:51" pos:end="89:51">=</operator><literal type="number" pos:start="89:52" pos:end="89:52">0</literal></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="90:13" pos:end="90:33">else<block type="pseudo" pos:start="90:18" pos:end="90:33"><block_content pos:start="90:18" pos:end="90:33"> <expr_stmt pos:start="90:18" pos:end="90:33"><expr pos:start="90:18" pos:end="90:32"><name pos:start="90:18" pos:end="90:29"><name pos:start="90:18" pos:end="90:18">a</name><index pos:start="90:19" pos:end="90:29">[<expr pos:start="90:20" pos:end="90:28"><name pos:start="90:20" pos:end="90:20">i</name><operator pos:start="90:21" pos:end="90:21">*</operator><name pos:start="90:22" pos:end="90:22">m</name><operator pos:start="90:23" pos:end="90:23">-</operator><name pos:start="90:24" pos:end="90:24">m</name><operator pos:start="90:25" pos:end="90:25">+</operator><name pos:start="90:26" pos:end="90:26">j</name><operator pos:start="90:27" pos:end="90:27">-</operator><name pos:start="90:28" pos:end="90:28">m</name></expr>]</index></name><operator pos:start="90:30" pos:end="90:30">=</operator><operator pos:start="90:31" pos:end="90:31">-</operator><literal type="number" pos:start="90:32" pos:end="90:32">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="92:9" pos:end="92:18"><expr pos:start="92:9" pos:end="92:17"><call pos:start="92:9" pos:end="92:17"><name pos:start="92:9" pos:end="92:15">getchar</name><argument_list pos:start="92:16" pos:end="92:17">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="94:5" pos:end="103:5">for<control pos:start="94:8" pos:end="94:24">(<init pos:start="94:9" pos:end="94:16"><decl pos:start="94:9" pos:end="94:15"><type pos:start="94:9" pos:end="94:11"><name pos:start="94:9" pos:end="94:11">int</name></type> <name pos:start="94:13" pos:end="94:13">i</name><init pos:start="94:14" pos:end="94:15">=<expr pos:start="94:15" pos:end="94:15"><literal type="number" pos:start="94:15" pos:end="94:15">1</literal></expr></init></decl>;</init><condition pos:start="94:17" pos:end="94:20"><expr pos:start="94:17" pos:end="94:19"><name pos:start="94:17" pos:end="94:17">i</name><operator pos:start="94:18" pos:end="94:18">&lt;</operator><name pos:start="94:19" pos:end="94:19">n</name></expr>;</condition><incr pos:start="94:21" pos:end="94:23"><expr pos:start="94:21" pos:end="94:23"><name pos:start="94:21" pos:end="94:21">i</name><operator pos:start="94:22" pos:end="94:23">++</operator></expr></incr>)</control><block pos:start="94:25" pos:end="103:5">{<block_content pos:start="95:9" pos:end="102:9">
        <for pos:start="95:9" pos:end="102:9">for<control pos:start="95:12" pos:end="95:28">(<init pos:start="95:13" pos:end="95:20"><decl pos:start="95:13" pos:end="95:19"><type pos:start="95:13" pos:end="95:15"><name pos:start="95:13" pos:end="95:15">int</name></type> <name pos:start="95:17" pos:end="95:17">j</name><init pos:start="95:18" pos:end="95:19">=<expr pos:start="95:19" pos:end="95:19"><literal type="number" pos:start="95:19" pos:end="95:19">1</literal></expr></init></decl>;</init><condition pos:start="95:21" pos:end="95:24"><expr pos:start="95:21" pos:end="95:23"><name pos:start="95:21" pos:end="95:21">j</name><operator pos:start="95:22" pos:end="95:22">&lt;</operator><name pos:start="95:23" pos:end="95:23">m</name></expr>;</condition><incr pos:start="95:25" pos:end="95:27"><expr pos:start="95:25" pos:end="95:27"><name pos:start="95:25" pos:end="95:25">j</name><operator pos:start="95:26" pos:end="95:27">++</operator></expr></incr>)</control><block pos:start="95:29" pos:end="102:9">{<block_content pos:start="96:13" pos:end="101:13">
            <if_stmt pos:start="96:13" pos:end="98:13"><if pos:start="96:13" pos:end="98:13">if<condition pos:start="96:15" pos:end="96:52">(<expr pos:start="96:16" pos:end="96:51"><name pos:start="96:16" pos:end="96:25"><name pos:start="96:16" pos:end="96:16">a</name><index pos:start="96:17" pos:end="96:25">[<expr pos:start="96:18" pos:end="96:24"><name pos:start="96:18" pos:end="96:18">i</name><operator pos:start="96:19" pos:end="96:19">*</operator><name pos:start="96:20" pos:end="96:20">m</name><operator pos:start="96:21" pos:end="96:21">+</operator><name pos:start="96:22" pos:end="96:22">j</name><operator pos:start="96:23" pos:end="96:23">-</operator><name pos:start="96:24" pos:end="96:24">m</name></expr>]</index></name><operator pos:start="96:26" pos:end="96:27">!=</operator><literal type="char" pos:start="96:28" pos:end="96:30">'#'</literal> <operator pos:start="96:32" pos:end="96:33">&amp;&amp;</operator> <name pos:start="96:35" pos:end="96:46"><name pos:start="96:35" pos:end="96:35">a</name><index pos:start="96:36" pos:end="96:46">[<expr pos:start="96:37" pos:end="96:45"><name pos:start="96:37" pos:end="96:37">i</name><operator pos:start="96:38" pos:end="96:38">*</operator><name pos:start="96:39" pos:end="96:39">m</name><operator pos:start="96:40" pos:end="96:40">-</operator><name pos:start="96:41" pos:end="96:41">m</name><operator pos:start="96:42" pos:end="96:42">+</operator><name pos:start="96:43" pos:end="96:43">j</name><operator pos:start="96:44" pos:end="96:44">+</operator><literal type="number" pos:start="96:45" pos:end="96:45">1</literal></expr>]</index></name><operator pos:start="96:47" pos:end="96:48">!=</operator><literal type="char" pos:start="96:49" pos:end="96:51">'#'</literal></expr>)</condition><block pos:start="96:53" pos:end="98:13">{<block_content pos:start="97:17" pos:end="97:43">
                <expr_stmt pos:start="97:17" pos:end="97:43"><expr pos:start="97:17" pos:end="97:42"><call pos:start="97:17" pos:end="97:42"><name pos:start="97:17" pos:end="97:23">addEdge</name><argument_list pos:start="97:24" pos:end="97:42">(<argument pos:start="97:25" pos:end="97:31"><expr pos:start="97:25" pos:end="97:31"><name pos:start="97:25" pos:end="97:25">i</name><operator pos:start="97:26" pos:end="97:26">*</operator><name pos:start="97:27" pos:end="97:27">m</name><operator pos:start="97:28" pos:end="97:28">-</operator><name pos:start="97:29" pos:end="97:29">m</name><operator pos:start="97:30" pos:end="97:30">+</operator><name pos:start="97:31" pos:end="97:31">j</name></expr></argument>,<argument pos:start="97:33" pos:end="97:41"><expr pos:start="97:33" pos:end="97:41"><name pos:start="97:33" pos:end="97:33">i</name><operator pos:start="97:34" pos:end="97:34">*</operator><name pos:start="97:35" pos:end="97:35">m</name><operator pos:start="97:36" pos:end="97:36">-</operator><name pos:start="97:37" pos:end="97:37">m</name><operator pos:start="97:38" pos:end="97:38">+</operator><name pos:start="97:39" pos:end="97:39">j</name><operator pos:start="97:40" pos:end="97:40">+</operator><literal type="number" pos:start="97:41" pos:end="97:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="99:13" pos:end="101:13"><if pos:start="99:13" pos:end="101:13">if<condition pos:start="99:15" pos:end="99:48">(<expr pos:start="99:16" pos:end="99:47"><name pos:start="99:16" pos:end="99:25"><name pos:start="99:16" pos:end="99:16">a</name><index pos:start="99:17" pos:end="99:25">[<expr pos:start="99:18" pos:end="99:24"><name pos:start="99:18" pos:end="99:18">i</name><operator pos:start="99:19" pos:end="99:19">*</operator><name pos:start="99:20" pos:end="99:20">m</name><operator pos:start="99:21" pos:end="99:21">+</operator><name pos:start="99:22" pos:end="99:22">j</name><operator pos:start="99:23" pos:end="99:23">-</operator><name pos:start="99:24" pos:end="99:24">m</name></expr>]</index></name><operator pos:start="99:26" pos:end="99:27">!=</operator><literal type="char" pos:start="99:28" pos:end="99:30">'#'</literal> <operator pos:start="99:32" pos:end="99:33">&amp;&amp;</operator> <name pos:start="99:35" pos:end="99:42"><name pos:start="99:35" pos:end="99:35">a</name><index pos:start="99:36" pos:end="99:42">[<expr pos:start="99:37" pos:end="99:41"><name pos:start="99:37" pos:end="99:37">i</name><operator pos:start="99:38" pos:end="99:38">*</operator><name pos:start="99:39" pos:end="99:39">m</name><operator pos:start="99:40" pos:end="99:40">+</operator><name pos:start="99:41" pos:end="99:41">j</name></expr>]</index></name><operator pos:start="99:43" pos:end="99:44">!=</operator><literal type="char" pos:start="99:45" pos:end="99:47">'#'</literal></expr>)</condition><block pos:start="99:49" pos:end="101:13">{<block_content pos:start="100:17" pos:end="100:39">
                <expr_stmt pos:start="100:17" pos:end="100:39"><expr pos:start="100:17" pos:end="100:38"><call pos:start="100:17" pos:end="100:38"><name pos:start="100:17" pos:end="100:23">addEdge</name><argument_list pos:start="100:24" pos:end="100:38">(<argument pos:start="100:25" pos:end="100:31"><expr pos:start="100:25" pos:end="100:31"><name pos:start="100:25" pos:end="100:25">i</name><operator pos:start="100:26" pos:end="100:26">*</operator><name pos:start="100:27" pos:end="100:27">m</name><operator pos:start="100:28" pos:end="100:28">+</operator><name pos:start="100:29" pos:end="100:29">j</name><operator pos:start="100:30" pos:end="100:30">-</operator><name pos:start="100:31" pos:end="100:31">m</name></expr></argument>,<argument pos:start="100:33" pos:end="100:37"><expr pos:start="100:33" pos:end="100:37"><name pos:start="100:33" pos:end="100:33">i</name><operator pos:start="100:34" pos:end="100:34">*</operator><name pos:start="100:35" pos:end="100:35">m</name><operator pos:start="100:36" pos:end="100:36">+</operator><name pos:start="100:37" pos:end="100:37">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="104:5" pos:end="111:5">for<control pos:start="104:8" pos:end="104:26">(<init pos:start="104:9" pos:end="104:16"><decl pos:start="104:9" pos:end="104:15"><type pos:start="104:9" pos:end="104:11"><name pos:start="104:9" pos:end="104:11">int</name></type> <name pos:start="104:13" pos:end="104:13">i</name><init pos:start="104:14" pos:end="104:15">=<expr pos:start="104:15" pos:end="104:15"><literal type="number" pos:start="104:15" pos:end="104:15">0</literal></expr></init></decl>;</init><condition pos:start="104:17" pos:end="104:22"><expr pos:start="104:17" pos:end="104:21"><name pos:start="104:17" pos:end="104:17">i</name><operator pos:start="104:18" pos:end="104:18">&lt;</operator><name pos:start="104:19" pos:end="104:21">pos</name></expr>;</condition><incr pos:start="104:23" pos:end="104:25"><expr pos:start="104:23" pos:end="104:25"><name pos:start="104:23" pos:end="104:23">i</name><operator pos:start="104:24" pos:end="104:25">++</operator></expr></incr>)</control><block pos:start="104:27" pos:end="111:5">{<block_content pos:start="105:9" pos:end="110:77">
        <decl_stmt pos:start="105:9" pos:end="105:16"><decl pos:start="105:9" pos:end="105:13"><type pos:start="105:9" pos:end="105:11"><name pos:start="105:9" pos:end="105:11">int</name></type> <name pos:start="105:13" pos:end="105:13">x</name></decl>,<decl pos:start="105:15" pos:end="105:15"><type ref="prev" pos:start="105:9" pos:end="105:11"/><name pos:start="105:15" pos:end="105:15">y</name></decl>;</decl_stmt>
        
        <expr_stmt pos:start="107:9" pos:end="107:29"><expr pos:start="107:9" pos:end="107:28"><call pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:13">scanf</name><argument_list pos:start="107:14" pos:end="107:28">(<argument pos:start="107:15" pos:end="107:21"><expr pos:start="107:15" pos:end="107:21"><literal type="string" pos:start="107:15" pos:end="107:21">"%d %d"</literal></expr></argument>,<argument pos:start="107:23" pos:end="107:24"><expr pos:start="107:23" pos:end="107:24"><operator pos:start="107:23" pos:end="107:23">&amp;</operator><name pos:start="107:24" pos:end="107:24">x</name></expr></argument>,<argument pos:start="107:26" pos:end="107:27"><expr pos:start="107:26" pos:end="107:27"><operator pos:start="107:26" pos:end="107:26">&amp;</operator><name pos:start="107:27" pos:end="107:27">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="108:9" pos:end="108:12"><expr pos:start="108:9" pos:end="108:11"><name pos:start="108:9" pos:end="108:9">x</name><operator pos:start="108:10" pos:end="108:11">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="109:9" pos:end="109:12"><expr pos:start="109:9" pos:end="109:11"><name pos:start="109:9" pos:end="109:9">y</name><operator pos:start="109:10" pos:end="109:11">++</operator></expr>;</expr_stmt>
        <if_stmt pos:start="110:9" pos:end="110:77"><if pos:start="110:9" pos:end="110:77">if<condition pos:start="110:11" pos:end="110:49">(<expr pos:start="110:12" pos:end="110:48"><name pos:start="110:12" pos:end="110:26"><name pos:start="110:12" pos:end="110:12">a</name><index pos:start="110:13" pos:end="110:26">[<expr pos:start="110:14" pos:end="110:25"><name pos:start="110:14" pos:end="110:25"><name pos:start="110:14" pos:end="110:22">chuansong</name><index pos:start="110:23" pos:end="110:25">[<expr pos:start="110:24" pos:end="110:24"><name pos:start="110:24" pos:end="110:24">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="110:27" pos:end="110:28">!=</operator><operator pos:start="110:29" pos:end="110:29">-</operator><literal type="number" pos:start="110:30" pos:end="110:30">1</literal> <operator pos:start="110:32" pos:end="110:33">&amp;&amp;</operator> <name pos:start="110:35" pos:end="110:44"><name pos:start="110:35" pos:end="110:35">a</name><index pos:start="110:36" pos:end="110:44">[<expr pos:start="110:37" pos:end="110:43"><name pos:start="110:37" pos:end="110:37">x</name><operator pos:start="110:38" pos:end="110:38">*</operator><name pos:start="110:39" pos:end="110:39">m</name><operator pos:start="110:40" pos:end="110:40">+</operator><name pos:start="110:41" pos:end="110:41">y</name><operator pos:start="110:42" pos:end="110:42">-</operator><name pos:start="110:43" pos:end="110:43">m</name></expr>]</index></name><operator pos:start="110:45" pos:end="110:46">!=</operator><operator pos:start="110:47" pos:end="110:47">-</operator><literal type="number" pos:start="110:48" pos:end="110:48">1</literal></expr>)</condition><block type="pseudo" pos:start="110:50" pos:end="110:77"><block_content pos:start="110:50" pos:end="110:77"><expr_stmt pos:start="110:50" pos:end="110:77"><expr pos:start="110:50" pos:end="110:76"><call pos:start="110:50" pos:end="110:76"><name pos:start="110:50" pos:end="110:56">addEdge</name><argument_list pos:start="110:57" pos:end="110:76">(<argument pos:start="110:58" pos:end="110:69"><expr pos:start="110:58" pos:end="110:69"><name pos:start="110:58" pos:end="110:69"><name pos:start="110:58" pos:end="110:66">chuansong</name><index pos:start="110:67" pos:end="110:69">[<expr pos:start="110:68" pos:end="110:68"><name pos:start="110:68" pos:end="110:68">i</name></expr>]</index></name></expr></argument>,<argument pos:start="110:71" pos:end="110:75"><expr pos:start="110:71" pos:end="110:75"><name pos:start="110:71" pos:end="110:71">x</name><operator pos:start="110:72" pos:end="110:72">*</operator><name pos:start="110:73" pos:end="110:73">m</name><operator pos:start="110:74" pos:end="110:74">+</operator><name pos:start="110:75" pos:end="110:75">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="112:5" pos:end="116:5">for<control pos:start="112:8" pos:end="112:27">(<init pos:start="112:9" pos:end="112:16"><decl pos:start="112:9" pos:end="112:15"><type pos:start="112:9" pos:end="112:11"><name pos:start="112:9" pos:end="112:11">int</name></type> <name pos:start="112:13" pos:end="112:13">i</name><init pos:start="112:14" pos:end="112:15">=<expr pos:start="112:15" pos:end="112:15"><literal type="number" pos:start="112:15" pos:end="112:15">1</literal></expr></init></decl>;</init><condition pos:start="112:17" pos:end="112:23"><expr pos:start="112:17" pos:end="112:22"><name pos:start="112:17" pos:end="112:17">i</name><operator pos:start="112:18" pos:end="112:19">&lt;=</operator><name pos:start="112:20" pos:end="112:20">n</name><operator pos:start="112:21" pos:end="112:21">*</operator><name pos:start="112:22" pos:end="112:22">m</name></expr>;</condition><incr pos:start="112:24" pos:end="112:26"><expr pos:start="112:24" pos:end="112:26"><name pos:start="112:24" pos:end="112:24">i</name><operator pos:start="112:25" pos:end="112:26">++</operator></expr></incr>)</control><block pos:start="112:28" pos:end="116:5">{<block_content pos:start="113:9" pos:end="115:9">
        <if_stmt pos:start="113:9" pos:end="115:9"><if pos:start="113:9" pos:end="115:9">if<condition pos:start="113:11" pos:end="113:21">(<expr pos:start="113:12" pos:end="113:20"><name pos:start="113:12" pos:end="113:17"><name pos:start="113:12" pos:end="113:14">dfn</name><index pos:start="113:15" pos:end="113:17">[<expr pos:start="113:16" pos:end="113:16"><name pos:start="113:16" pos:end="113:16">i</name></expr>]</index></name><operator pos:start="113:18" pos:end="113:19">==</operator><literal type="number" pos:start="113:20" pos:end="113:20">0</literal></expr>)</condition><block pos:start="113:22" pos:end="115:9">{<block_content pos:start="114:13" pos:end="114:22">
            <expr_stmt pos:start="114:13" pos:end="114:22"><expr pos:start="114:13" pos:end="114:21"><call pos:start="114:13" pos:end="114:21"><name pos:start="114:13" pos:end="114:18">tarjan</name><argument_list pos:start="114:19" pos:end="114:21">(<argument pos:start="114:20" pos:end="114:20"><expr pos:start="114:20" pos:end="114:20"><name pos:start="114:20" pos:end="114:20">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="117:5" pos:end="125:5">for<control pos:start="117:8" pos:end="117:25">(<init pos:start="117:9" pos:end="117:16"><decl pos:start="117:9" pos:end="117:15"><type pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">int</name></type> <name pos:start="117:13" pos:end="117:13">u</name><init pos:start="117:14" pos:end="117:15">=<expr pos:start="117:15" pos:end="117:15"><literal type="number" pos:start="117:15" pos:end="117:15">1</literal></expr></init></decl>;</init><condition pos:start="117:17" pos:end="117:21"><expr pos:start="117:17" pos:end="117:20"><name pos:start="117:17" pos:end="117:17">u</name><operator pos:start="117:18" pos:end="117:19">&lt;=</operator><name pos:start="117:20" pos:end="117:20">n</name></expr>;</condition><incr pos:start="117:22" pos:end="117:24"><expr pos:start="117:22" pos:end="117:24"><name pos:start="117:22" pos:end="117:22">u</name><operator pos:start="117:23" pos:end="117:24">++</operator></expr></incr>)</control><block pos:start="117:26" pos:end="125:5">{<block_content pos:start="118:9" pos:end="124:9">
        <for pos:start="118:9" pos:end="124:9">for<control pos:start="118:12" pos:end="118:40">(<init pos:start="118:13" pos:end="118:26"><decl pos:start="118:13" pos:end="118:25"><type pos:start="118:13" pos:end="118:15"><name pos:start="118:13" pos:end="118:15">int</name></type> <name pos:start="118:17" pos:end="118:17">i</name><init pos:start="118:18" pos:end="118:25">=<expr pos:start="118:19" pos:end="118:25"><name pos:start="118:19" pos:end="118:25"><name pos:start="118:19" pos:end="118:22">head</name><index pos:start="118:23" pos:end="118:25">[<expr pos:start="118:24" pos:end="118:24"><name pos:start="118:24" pos:end="118:24">u</name></expr>]</index></name></expr></init></decl>;</init><condition pos:start="118:27" pos:end="118:28"><expr pos:start="118:27" pos:end="118:27"><name pos:start="118:27" pos:end="118:27">i</name></expr>;</condition><incr pos:start="118:29" pos:end="118:39"><expr pos:start="118:29" pos:end="118:39"><name pos:start="118:29" pos:end="118:29">i</name><operator pos:start="118:30" pos:end="118:30">=</operator><name pos:start="118:31" pos:end="118:34"><name pos:start="118:31" pos:end="118:31">e</name><index pos:start="118:32" pos:end="118:34">[<expr pos:start="118:33" pos:end="118:33"><name pos:start="118:33" pos:end="118:33">i</name></expr>]</index></name><operator pos:start="118:35" pos:end="118:35">.</operator><name pos:start="118:36" pos:end="118:39">next</name></expr></incr>)</control><block pos:start="118:41" pos:end="124:9">{<block_content pos:start="119:13" pos:end="123:13">
            <decl_stmt pos:start="119:13" pos:end="119:26"><decl pos:start="119:13" pos:end="119:25"><type pos:start="119:13" pos:end="119:15"><name pos:start="119:13" pos:end="119:15">int</name></type> <name pos:start="119:17" pos:end="119:17">v</name><init pos:start="119:18" pos:end="119:25">=<expr pos:start="119:19" pos:end="119:25"><name pos:start="119:19" pos:end="119:22"><name pos:start="119:19" pos:end="119:19">e</name><index pos:start="119:20" pos:end="119:22">[<expr pos:start="119:21" pos:end="119:21"><name pos:start="119:21" pos:end="119:21">i</name></expr>]</index></name><operator pos:start="119:23" pos:end="119:23">.</operator><name pos:start="119:24" pos:end="119:25">to</name></expr></init></decl>;</decl_stmt>
            
            <if_stmt pos:start="121:13" pos:end="123:13"><if pos:start="121:13" pos:end="123:13">if<condition pos:start="121:15" pos:end="121:34">(<expr pos:start="121:16" pos:end="121:33"><name pos:start="121:16" pos:end="121:23"><name pos:start="121:16" pos:end="121:20">sccno</name><index pos:start="121:21" pos:end="121:23">[<expr pos:start="121:22" pos:end="121:22"><name pos:start="121:22" pos:end="121:22">u</name></expr>]</index></name><operator pos:start="121:24" pos:end="121:25">!=</operator><name pos:start="121:26" pos:end="121:33"><name pos:start="121:26" pos:end="121:30">sccno</name><index pos:start="121:31" pos:end="121:33">[<expr pos:start="121:32" pos:end="121:32"><name pos:start="121:32" pos:end="121:32">v</name></expr>]</index></name></expr>)</condition><block pos:start="121:35" pos:end="123:13">{<block_content pos:start="122:17" pos:end="122:46">
                <expr_stmt pos:start="122:17" pos:end="122:46"><expr pos:start="122:17" pos:end="122:45"><call pos:start="122:17" pos:end="122:45"><name pos:start="122:17" pos:end="122:26">addNewEdge</name><argument_list pos:start="122:27" pos:end="122:45">(<argument pos:start="122:28" pos:end="122:35"><expr pos:start="122:28" pos:end="122:35"><name pos:start="122:28" pos:end="122:35"><name pos:start="122:28" pos:end="122:32">sccno</name><index pos:start="122:33" pos:end="122:35">[<expr pos:start="122:34" pos:end="122:34"><name pos:start="122:34" pos:end="122:34">u</name></expr>]</index></name></expr></argument>,<argument pos:start="122:37" pos:end="122:44"><expr pos:start="122:37" pos:end="122:44"><name pos:start="122:37" pos:end="122:44"><name pos:start="122:37" pos:end="122:41">sccno</name><index pos:start="122:42" pos:end="122:44">[<expr pos:start="122:43" pos:end="122:43"><name pos:start="122:43" pos:end="122:43">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="126:5" pos:end="126:18"><expr pos:start="126:5" pos:end="126:17"><call pos:start="126:5" pos:end="126:17"><name pos:start="126:5" pos:end="126:7">dfs</name><argument_list pos:start="126:8" pos:end="126:17">(<argument pos:start="126:9" pos:end="126:16"><expr pos:start="126:9" pos:end="126:16"><name pos:start="126:9" pos:end="126:16"><name pos:start="126:9" pos:end="126:13">sccno</name><index pos:start="126:14" pos:end="126:16">[<expr pos:start="126:15" pos:end="126:15"><literal type="number" pos:start="126:15" pos:end="126:15">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="127:5" pos:end="127:24"><expr pos:start="127:5" pos:end="127:23"><name pos:start="127:5" pos:end="127:8">cout</name> <operator pos:start="127:10" pos:end="127:11">&lt;&lt;</operator> <name pos:start="127:13" pos:end="127:15">ans</name> <operator pos:start="127:17" pos:end="127:18">&lt;&lt;</operator> <name pos:start="127:20" pos:end="127:23">endl</name></expr>;</expr_stmt>
    <return pos:start="128:5" pos:end="128:13">return <expr pos:start="128:12" pos:end="128:12"><literal type="number" pos:start="128:12" pos:end="128:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
