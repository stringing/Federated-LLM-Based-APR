<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/878/878.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:20">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="20:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:11">intcmp</name><parameter_list pos:start="4:12" pos:end="4:25">(<parameter pos:start="4:13" pos:end="4:17"><decl pos:start="4:13" pos:end="4:17"><type pos:start="4:13" pos:end="4:17"><name pos:start="4:13" pos:end="4:15">int</name></type> <name pos:start="4:17" pos:end="4:17">x</name></decl></parameter>, <parameter pos:start="4:20" pos:end="4:24"><decl pos:start="4:20" pos:end="4:24"><type pos:start="4:20" pos:end="4:24"><name pos:start="4:20" pos:end="4:22">int</name></type> <name pos:start="4:24" pos:end="4:24">y</name></decl></parameter>)</parameter_list> <block pos:start="4:27" pos:end="20:1">{<block_content pos:start="5:5" pos:end="19:5">
    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">s1</name> <init pos:start="5:12" pos:end="5:14">= <expr pos:start="5:14" pos:end="5:14"><literal type="number" pos:start="5:14" pos:end="5:14">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="6:5" pos:end="9:5">while <condition pos:start="6:11" pos:end="6:13">(<expr pos:start="6:12" pos:end="6:12"><name pos:start="6:12" pos:end="6:12">x</name></expr>)</condition> <block pos:start="6:15" pos:end="9:5">{<block_content pos:start="7:9" pos:end="8:16">
        <expr_stmt pos:start="7:9" pos:end="7:21"><expr pos:start="7:9" pos:end="7:20"><name pos:start="7:9" pos:end="7:10">s1</name> <operator pos:start="7:12" pos:end="7:13">+=</operator> <name pos:start="7:15" pos:end="7:15">x</name> <operator pos:start="7:17" pos:end="7:17">%</operator> <literal type="number" pos:start="7:19" pos:end="7:20">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:16"><expr pos:start="8:9" pos:end="8:15"><name pos:start="8:9" pos:end="8:9">x</name> <operator pos:start="8:11" pos:end="8:12">/=</operator> <literal type="number" pos:start="8:14" pos:end="8:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <decl_stmt pos:start="10:5" pos:end="10:15"><decl pos:start="10:5" pos:end="10:14"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:10">s2</name> <init pos:start="10:12" pos:end="10:14">= <expr pos:start="10:14" pos:end="10:14"><literal type="number" pos:start="10:14" pos:end="10:14">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="11:5" pos:end="14:5">while <condition pos:start="11:11" pos:end="11:13">(<expr pos:start="11:12" pos:end="11:12"><name pos:start="11:12" pos:end="11:12">y</name></expr>)</condition> <block pos:start="11:15" pos:end="14:5">{<block_content pos:start="12:9" pos:end="13:16">
        <expr_stmt pos:start="12:9" pos:end="12:21"><expr pos:start="12:9" pos:end="12:20"><name pos:start="12:9" pos:end="12:10">s2</name> <operator pos:start="12:12" pos:end="12:13">+=</operator> <name pos:start="12:15" pos:end="12:15">y</name> <operator pos:start="12:17" pos:end="12:17">%</operator> <literal type="number" pos:start="12:19" pos:end="12:20">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:16"><expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:9">y</name> <operator pos:start="13:11" pos:end="13:12">/=</operator> <literal type="number" pos:start="13:14" pos:end="13:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="17:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:10">s1</name> <operator pos:start="15:12" pos:end="15:13">!=</operator> <name pos:start="15:15" pos:end="15:16">s2</name></expr>)</condition> <block pos:start="15:19" pos:end="17:5">{<block_content pos:start="16:9" pos:end="16:23">
        <return pos:start="16:9" pos:end="16:23">return <expr pos:start="16:16" pos:end="16:22"><name pos:start="16:16" pos:end="16:17">s1</name> <operator pos:start="16:19" pos:end="16:19">&lt;</operator> <name pos:start="16:21" pos:end="16:22">s2</name></expr>;</return>
    </block_content>}</block></if> <else pos:start="17:7" pos:end="19:5">else <block pos:start="17:12" pos:end="19:5">{<block_content pos:start="18:9" pos:end="18:21">
        <return pos:start="18:9" pos:end="18:21">return <expr pos:start="18:16" pos:end="18:20"><name pos:start="18:16" pos:end="18:16">x</name> <operator pos:start="18:18" pos:end="18:18">&lt;</operator> <name pos:start="18:20" pos:end="18:20">y</name></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<decl_stmt pos:start="22:1" pos:end="22:13"><decl pos:start="22:1" pos:end="22:12"><type pos:start="22:1" pos:end="22:3"><name pos:start="22:1" pos:end="22:3">int</name></type> <name pos:start="22:5" pos:end="22:12"><name pos:start="22:5" pos:end="22:5">a</name><index pos:start="22:6" pos:end="22:12">[<expr pos:start="22:7" pos:end="22:11"><literal type="number" pos:start="22:7" pos:end="22:11">10000</literal></expr>]</index></name></decl>;</decl_stmt>

<function pos:start="24:1" pos:end="36:1"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:8">main</name><parameter_list pos:start="24:9" pos:end="24:10">()</parameter_list> <block pos:start="24:12" pos:end="36:1">{<block_content pos:start="25:5" pos:end="35:13">
    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:13"><expr pos:start="26:5" pos:end="26:12"><name pos:start="26:5" pos:end="26:7">cin</name> <operator pos:start="26:9" pos:end="26:10">&gt;&gt;</operator> <name pos:start="26:12" pos:end="26:12">n</name></expr>;</expr_stmt>
    <for pos:start="27:5" pos:end="29:5">for <control pos:start="27:9" pos:end="27:31">(<init pos:start="27:10" pos:end="27:19"><decl pos:start="27:10" pos:end="27:18"><type pos:start="27:10" pos:end="27:12"><name pos:start="27:10" pos:end="27:12">int</name></type> <name pos:start="27:14" pos:end="27:14">i</name> <init pos:start="27:16" pos:end="27:18">= <expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr></init></decl>;</init> <condition pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:21">i</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <name pos:start="27:25" pos:end="27:25">n</name></expr>;</condition> <incr pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:28">i</name><operator pos:start="27:29" pos:end="27:30">++</operator></expr></incr>)</control> <block pos:start="27:33" pos:end="29:5">{<block_content pos:start="28:9" pos:end="28:20">
        <expr_stmt pos:start="28:9" pos:end="28:20"><expr pos:start="28:9" pos:end="28:19"><name pos:start="28:9" pos:end="28:11">cin</name> <operator pos:start="28:13" pos:end="28:14">&gt;&gt;</operator> <name pos:start="28:16" pos:end="28:19"><name pos:start="28:16" pos:end="28:16">a</name><index pos:start="28:17" pos:end="28:19">[<expr pos:start="28:18" pos:end="28:18"><name pos:start="28:18" pos:end="28:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="30:5" pos:end="30:27"><expr pos:start="30:5" pos:end="30:26"><call pos:start="30:5" pos:end="30:26"><name pos:start="30:5" pos:end="30:8">sort</name><argument_list pos:start="30:9" pos:end="30:26">(<argument pos:start="30:10" pos:end="30:10"><expr pos:start="30:10" pos:end="30:10"><name pos:start="30:10" pos:end="30:10">a</name></expr></argument>, <argument pos:start="30:13" pos:end="30:17"><expr pos:start="30:13" pos:end="30:17"><name pos:start="30:13" pos:end="30:13">a</name> <operator pos:start="30:15" pos:end="30:15">+</operator> <name pos:start="30:17" pos:end="30:17">n</name></expr></argument>, <argument pos:start="30:20" pos:end="30:25"><expr pos:start="30:20" pos:end="30:25"><name pos:start="30:20" pos:end="30:25">intcmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="31:5" pos:end="33:5">for <control pos:start="31:9" pos:end="31:31">(<init pos:start="31:10" pos:end="31:19"><decl pos:start="31:10" pos:end="31:18"><type pos:start="31:10" pos:end="31:12"><name pos:start="31:10" pos:end="31:12">int</name></type> <name pos:start="31:14" pos:end="31:14">i</name> <init pos:start="31:16" pos:end="31:18">= <expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr></init></decl>;</init> <condition pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:25">n</name></expr>;</condition> <incr pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:28">i</name><operator pos:start="31:29" pos:end="31:30">++</operator></expr></incr>)</control> <block pos:start="31:33" pos:end="33:5">{<block_content pos:start="32:9" pos:end="32:28">
        <expr_stmt pos:start="32:9" pos:end="32:28"><expr pos:start="32:9" pos:end="32:27"><name pos:start="32:9" pos:end="32:12">cout</name> <operator pos:start="32:14" pos:end="32:15">&lt;&lt;</operator> <name pos:start="32:17" pos:end="32:20"><name pos:start="32:17" pos:end="32:17">a</name><index pos:start="32:18" pos:end="32:20">[<expr pos:start="32:19" pos:end="32:19"><name pos:start="32:19" pos:end="32:19">i</name></expr>]</index></name> <operator pos:start="32:22" pos:end="32:23">&lt;&lt;</operator> <literal type="string" pos:start="32:25" pos:end="32:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="34:5" pos:end="34:17"><expr pos:start="34:5" pos:end="34:16"><name pos:start="34:5" pos:end="34:8">cout</name> <operator pos:start="34:10" pos:end="34:11">&lt;&lt;</operator> <name pos:start="34:13" pos:end="34:16">endl</name></expr>;</expr_stmt>
    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
