<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/924/924.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:16">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:16">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:15">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive><cpp:file pos:start="5:9" pos:end="5:15">&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include pos:start="6:1" pos:end="6:17">#<cpp:directive pos:start="6:2" pos:end="6:8">include</cpp:directive><cpp:file pos:start="6:9" pos:end="6:17">&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include pos:start="7:1" pos:end="7:13">#<cpp:directive pos:start="7:2" pos:end="7:8">include</cpp:directive><cpp:file pos:start="7:9" pos:end="7:13">&lt;map&gt;</cpp:file></cpp:include>
<cpp:include pos:start="8:1" pos:end="8:16">#<cpp:directive pos:start="8:2" pos:end="8:8">include</cpp:directive><cpp:file pos:start="8:9" pos:end="8:16">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:define pos:start="9:1" pos:end="9:29">#<cpp:directive pos:start="9:2" pos:end="9:7">define</cpp:directive> <cpp:macro pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">bug</name></cpp:macro> <cpp:value pos:start="9:13" pos:end="9:29">cout&lt;&lt;"bug"&lt;&lt;endl</cpp:value></cpp:define>
<cpp:define pos:start="10:1" pos:end="10:20">#<cpp:directive pos:start="10:2" pos:end="10:7">define</cpp:directive> <cpp:macro pos:start="10:9" pos:end="10:10"><name pos:start="10:9" pos:end="10:10">ll</name></cpp:macro> <cpp:value pos:start="10:12" pos:end="10:20">long long</cpp:value></cpp:define>
<cpp:define pos:start="11:1" pos:end="11:22">#<cpp:directive pos:start="11:2" pos:end="11:7">define</cpp:directive> <cpp:macro pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">inf</name></cpp:macro> <cpp:value pos:start="11:13" pos:end="11:22">0x3f3f3f3f</cpp:value></cpp:define>
<cpp:define pos:start="12:1" pos:end="12:22">#<cpp:directive pos:start="12:2" pos:end="12:7">define</cpp:directive> <cpp:macro pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">MOD</name></cpp:macro> <cpp:value pos:start="12:13" pos:end="12:22">1000000007</cpp:value></cpp:define>
<using pos:start="13:1" pos:end="13:20">using <namespace pos:start="13:7" pos:end="13:20">namespace <name pos:start="13:17" pos:end="13:19">std</name>;</namespace></using>
<function pos:start="14:1" pos:end="18:1"><type pos:start="14:1" pos:end="14:10"><specifier pos:start="14:1" pos:end="14:6">inline</specifier> <name pos:start="14:8" pos:end="14:10">int</name></type> <name pos:start="14:12" pos:end="14:15">read</name><parameter_list pos:start="14:16" pos:end="14:17">()</parameter_list><block pos:start="14:18" pos:end="18:1">{<block_content pos:start="14:21" pos:end="17:15">  <decl_stmt pos:start="14:21" pos:end="14:32"><decl pos:start="14:21" pos:end="14:27"><type pos:start="14:21" pos:end="14:23"><name pos:start="14:21" pos:end="14:23">int</name></type> <name pos:start="14:25" pos:end="14:25">x</name><init pos:start="14:26" pos:end="14:27">=<expr pos:start="14:27" pos:end="14:27"><literal type="number" pos:start="14:27" pos:end="14:27">0</literal></expr></init></decl>,<decl pos:start="14:29" pos:end="14:31"><type ref="prev" pos:start="14:21" pos:end="14:23"/><name pos:start="14:29" pos:end="14:29">f</name><init pos:start="14:30" pos:end="14:31">=<expr pos:start="14:31" pos:end="14:31"><literal type="number" pos:start="14:31" pos:end="14:31">1</literal></expr></init></decl>;</decl_stmt><decl_stmt pos:start="14:33" pos:end="14:50"><decl pos:start="14:33" pos:end="14:49"><type pos:start="14:33" pos:end="14:36"><name pos:start="14:33" pos:end="14:36">char</name></type> <name pos:start="14:38" pos:end="14:39">ch</name><init pos:start="14:40" pos:end="14:49">=<expr pos:start="14:41" pos:end="14:49"><call pos:start="14:41" pos:end="14:49"><name pos:start="14:41" pos:end="14:47">getchar</name><argument_list pos:start="14:48" pos:end="14:49">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <while pos:start="15:5" pos:end="15:59">while <condition pos:start="15:11" pos:end="15:26">(<expr pos:start="15:12" pos:end="15:25"><name pos:start="15:12" pos:end="15:22"><name pos:start="15:12" pos:end="15:13">ch</name><argument_list type="generic" pos:start="15:14" pos:end="15:22">&lt;<argument pos:start="15:15" pos:end="15:21"><expr pos:start="15:15" pos:end="15:21"><literal type="char" pos:start="15:15" pos:end="15:17">'0'</literal><operator pos:start="15:18" pos:end="15:19">||</operator><name pos:start="15:20" pos:end="15:21">ch</name></expr></argument>&gt;</argument_list></name><literal type="char" pos:start="15:23" pos:end="15:25">'9'</literal></expr>)</condition><block pos:start="15:27" pos:end="15:59">{<block_content pos:start="15:28" pos:end="15:58"><if_stmt pos:start="15:28" pos:end="15:45"><if pos:start="15:28" pos:end="15:45">if <condition pos:start="15:31" pos:end="15:39">(<expr pos:start="15:32" pos:end="15:38"><name pos:start="15:32" pos:end="15:33">ch</name><operator pos:start="15:34" pos:end="15:35">==</operator><literal type="char" pos:start="15:36" pos:end="15:38">'-'</literal></expr>)</condition><block type="pseudo" pos:start="15:41" pos:end="15:45"><block_content pos:start="15:41" pos:end="15:45"> <expr_stmt pos:start="15:41" pos:end="15:45"><expr pos:start="15:41" pos:end="15:44"><name pos:start="15:41" pos:end="15:41">f</name><operator pos:start="15:42" pos:end="15:42">=</operator><operator pos:start="15:43" pos:end="15:43">-</operator><literal type="number" pos:start="15:44" pos:end="15:44">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt><expr_stmt pos:start="15:46" pos:end="15:58"><expr pos:start="15:46" pos:end="15:57"><name pos:start="15:46" pos:end="15:47">ch</name><operator pos:start="15:48" pos:end="15:48">=</operator><call pos:start="15:49" pos:end="15:57"><name pos:start="15:49" pos:end="15:55">getchar</name><argument_list pos:start="15:56" pos:end="15:57">()</argument_list></call></expr>;</expr_stmt></block_content>}</block></while>
    <while pos:start="16:5" pos:end="16:56">while <condition pos:start="16:11" pos:end="16:28">(<expr pos:start="16:12" pos:end="16:27"><name pos:start="16:12" pos:end="16:13">ch</name><operator pos:start="16:14" pos:end="16:15">&gt;=</operator><literal type="char" pos:start="16:16" pos:end="16:18">'0'</literal><operator pos:start="16:19" pos:end="16:20">&amp;&amp;</operator><name pos:start="16:21" pos:end="16:22">ch</name><operator pos:start="16:23" pos:end="16:24">&lt;=</operator><literal type="char" pos:start="16:25" pos:end="16:27">'9'</literal></expr>)</condition><block pos:start="16:29" pos:end="16:56">{<block_content pos:start="16:30" pos:end="16:55"><expr_stmt pos:start="16:30" pos:end="16:42"><expr pos:start="16:30" pos:end="16:41"><name pos:start="16:30" pos:end="16:30">x</name><operator pos:start="16:31" pos:end="16:31">=</operator><name pos:start="16:32" pos:end="16:32">x</name><operator pos:start="16:33" pos:end="16:33">*</operator><literal type="number" pos:start="16:34" pos:end="16:36">10</literal><operator pos:start="16:36" pos:end="16:36">+</operator><name pos:start="16:37" pos:end="16:38">ch</name><operator pos:start="16:39" pos:end="16:39">-</operator><literal type="number" pos:start="16:40" pos:end="16:41">48</literal></expr>;</expr_stmt><expr_stmt pos:start="16:43" pos:end="16:55"><expr pos:start="16:43" pos:end="16:54"><name pos:start="16:43" pos:end="16:44">ch</name><operator pos:start="16:45" pos:end="16:45">=</operator><call pos:start="16:46" pos:end="16:54"><name pos:start="16:46" pos:end="16:52">getchar</name><argument_list pos:start="16:53" pos:end="16:54">()</argument_list></call></expr>;</expr_stmt></block_content>}</block></while>
    <return pos:start="17:5" pos:end="17:15">return <expr pos:start="17:12" pos:end="17:14"><name pos:start="17:12" pos:end="17:12">x</name><operator pos:start="17:13" pos:end="17:13">*</operator><name pos:start="17:14" pos:end="17:14">f</name></expr>;</return>
</block_content>}</block></function>
<decl_stmt pos:start="19:1" pos:end="19:8"><decl pos:start="19:1" pos:end="19:5"><type pos:start="19:1" pos:end="19:3"><name pos:start="19:1" pos:end="19:3">int</name></type> <name pos:start="19:5" pos:end="19:5">n</name></decl>,<decl pos:start="19:7" pos:end="19:7"><type ref="prev" pos:start="19:1" pos:end="19:3"/><name pos:start="19:7" pos:end="19:7">m</name></decl>;</decl_stmt>
<struct pos:start="20:1" pos:end="23:14">struct <name pos:start="20:8" pos:end="20:11">node</name><block pos:start="20:12" pos:end="23:1">{<public type="default" pos:start="21:5" pos:end="22:10">
    <decl_stmt pos:start="21:5" pos:end="21:10"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">u</name></decl>;</decl_stmt>
    <decl_stmt pos:start="22:5" pos:end="22:10"><decl pos:start="22:5" pos:end="22:9"><type pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></type> <name pos:start="22:9" pos:end="22:9">v</name></decl>;</decl_stmt>
</public>}</block><decl pos:start="23:2" pos:end="23:13"><name pos:start="23:2" pos:end="23:13"><name pos:start="23:2" pos:end="23:5">zhan</name><index pos:start="23:6" pos:end="23:13">[<expr pos:start="23:7" pos:end="23:12"><literal type="number" pos:start="23:7" pos:end="23:12">100000</literal></expr>]</index></name></decl>;</struct>
<decl_stmt pos:start="24:1" pos:end="24:24"><decl pos:start="24:1" pos:end="24:23"><type pos:start="24:1" pos:end="24:11"><name pos:start="24:1" pos:end="24:11"><name pos:start="24:1" pos:end="24:6">vector</name><argument_list type="generic" pos:start="24:7" pos:end="24:11">&lt;<argument pos:start="24:8" pos:end="24:10"><expr pos:start="24:8" pos:end="24:10"><name pos:start="24:8" pos:end="24:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="24:13" pos:end="24:23"><name pos:start="24:13" pos:end="24:15">ver</name><index pos:start="24:16" pos:end="24:23">[<expr pos:start="24:17" pos:end="24:22"><literal type="number" pos:start="24:17" pos:end="24:22">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="25:1" pos:end="25:25"><decl pos:start="25:1" pos:end="25:24"><type pos:start="25:1" pos:end="25:11"><name pos:start="25:1" pos:end="25:11"><name pos:start="25:1" pos:end="25:6">vector</name><argument_list type="generic" pos:start="25:7" pos:end="25:11">&lt;<argument pos:start="25:8" pos:end="25:10"><expr pos:start="25:8" pos:end="25:10"><name pos:start="25:8" pos:end="25:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:16">ver1</name><index pos:start="25:17" pos:end="25:24">[<expr pos:start="25:18" pos:end="25:23"><literal type="number" pos:start="25:18" pos:end="25:23">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="26:1" pos:end="26:28"><decl pos:start="26:1" pos:end="26:15"><type pos:start="26:1" pos:end="26:3"><name pos:start="26:1" pos:end="26:3">int</name></type> <name pos:start="26:5" pos:end="26:15"><name pos:start="26:5" pos:end="26:7">dfn</name><index pos:start="26:8" pos:end="26:15">[<expr pos:start="26:9" pos:end="26:14"><literal type="number" pos:start="26:9" pos:end="26:14">100000</literal></expr>]</index></name></decl>,<decl pos:start="26:17" pos:end="26:27"><type ref="prev" pos:start="26:1" pos:end="26:3"/><name pos:start="26:17" pos:end="26:27"><name pos:start="26:17" pos:end="26:19">low</name><index pos:start="26:20" pos:end="26:27">[<expr pos:start="26:21" pos:end="26:26"><literal type="number" pos:start="26:21" pos:end="26:26">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="27:1" pos:end="27:10"><decl pos:start="27:1" pos:end="27:9"><type pos:start="27:1" pos:end="27:3"><name pos:start="27:1" pos:end="27:3">int</name></type> <name pos:start="27:5" pos:end="27:7">tot</name><init pos:start="27:8" pos:end="27:9">=<expr pos:start="27:9" pos:end="27:9"><literal type="number" pos:start="27:9" pos:end="27:9">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="28:1" pos:end="28:16"><decl pos:start="28:1" pos:end="28:15"><type pos:start="28:1" pos:end="28:3"><name pos:start="28:1" pos:end="28:3">int</name></type> <name pos:start="28:5" pos:end="28:15"><name pos:start="28:5" pos:end="28:8">flag</name><index pos:start="28:9" pos:end="28:15">[<expr pos:start="28:10" pos:end="28:14"><literal type="number" pos:start="28:10" pos:end="28:14">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="29:1" pos:end="29:18"><decl pos:start="29:1" pos:end="29:10"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:8">ans1</name><init pos:start="29:9" pos:end="29:10">=<expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">0</literal></expr></init></decl>,<decl pos:start="29:12" pos:end="29:17"><type ref="prev" pos:start="29:1" pos:end="29:3"/><name pos:start="29:12" pos:end="29:15">ans2</name><init pos:start="29:16" pos:end="29:17">=<expr pos:start="29:17" pos:end="29:17"><literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="30:1" pos:end="30:19"><decl pos:start="30:1" pos:end="30:18"><type pos:start="30:1" pos:end="30:3"><name pos:start="30:1" pos:end="30:3">int</name></type> <name pos:start="30:5" pos:end="30:18"><name pos:start="30:5" pos:end="30:11">sumbian</name><index pos:start="30:12" pos:end="30:18">[<expr pos:start="30:13" pos:end="30:17"><literal type="number" pos:start="30:13" pos:end="30:17">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="31:1" pos:end="31:10"><decl pos:start="31:1" pos:end="31:9"><type pos:start="31:1" pos:end="31:3"><name pos:start="31:1" pos:end="31:3">int</name></type> <name pos:start="31:5" pos:end="31:7">top</name><init pos:start="31:8" pos:end="31:9">=<expr pos:start="31:9" pos:end="31:9"><literal type="number" pos:start="31:9" pos:end="31:9">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="32:1" pos:end="32:10"><decl pos:start="32:1" pos:end="32:9"><type pos:start="32:1" pos:end="32:3"><name pos:start="32:1" pos:end="32:3">int</name></type> <name pos:start="32:5" pos:end="32:7">cnt</name><init pos:start="32:8" pos:end="32:9">=<expr pos:start="32:9" pos:end="32:9"><literal type="number" pos:start="32:9" pos:end="32:9">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="33:1" pos:end="49:1"><type pos:start="33:1" pos:end="33:4"><name pos:start="33:1" pos:end="33:4">void</name></type> <name pos:start="33:6" pos:end="33:12">tarjan1</name><parameter_list pos:start="33:13" pos:end="33:30">(<parameter pos:start="33:14" pos:end="33:18"><decl pos:start="33:14" pos:end="33:18"><type pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:16">int</name></type> <name pos:start="33:18" pos:end="33:18">u</name></decl></parameter>,<parameter pos:start="33:20" pos:end="33:29"><decl pos:start="33:20" pos:end="33:29"><type pos:start="33:20" pos:end="33:29"><name pos:start="33:20" pos:end="33:22">int</name></type> <name pos:start="33:24" pos:end="33:29">father</name></decl></parameter>)</parameter_list><block pos:start="33:31" pos:end="49:1">{<block_content pos:start="34:5" pos:end="48:5">
    <expr_stmt pos:start="34:5" pos:end="34:26"><expr pos:start="34:5" pos:end="34:14"><name pos:start="34:5" pos:end="34:10"><name pos:start="34:5" pos:end="34:7">dfn</name><index pos:start="34:8" pos:end="34:10">[<expr pos:start="34:9" pos:end="34:9"><name pos:start="34:9" pos:end="34:9">u</name></expr>]</index></name><operator pos:start="34:11" pos:end="34:11">=</operator><name pos:start="34:12" pos:end="34:14">tot</name></expr><operator pos:start="34:15" pos:end="34:15">,</operator><expr pos:start="34:16" pos:end="34:25"><name pos:start="34:16" pos:end="34:21"><name pos:start="34:16" pos:end="34:18">low</name><index pos:start="34:19" pos:end="34:21">[<expr pos:start="34:20" pos:end="34:20"><name pos:start="34:20" pos:end="34:20">u</name></expr>]</index></name><operator pos:start="34:22" pos:end="34:22">=</operator><name pos:start="34:23" pos:end="34:25">tot</name></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:10"><expr pos:start="35:5" pos:end="35:9"><name pos:start="35:5" pos:end="35:7">tot</name><operator pos:start="35:8" pos:end="35:9">++</operator></expr>;</expr_stmt>
    <for pos:start="36:5" pos:end="48:5">for<control pos:start="36:8" pos:end="36:36">(<init pos:start="36:9" pos:end="36:16"><decl pos:start="36:9" pos:end="36:15"><type pos:start="36:9" pos:end="36:11"><name pos:start="36:9" pos:end="36:11">int</name></type> <name pos:start="36:13" pos:end="36:13">i</name><init pos:start="36:14" pos:end="36:15">=<expr pos:start="36:15" pos:end="36:15"><literal type="number" pos:start="36:15" pos:end="36:15">0</literal></expr></init></decl>;</init><condition pos:start="36:17" pos:end="36:32"><expr pos:start="36:17" pos:end="36:31"><name pos:start="36:17" pos:end="36:17">i</name><operator pos:start="36:18" pos:end="36:18">&lt;</operator><name pos:start="36:19" pos:end="36:24"><name pos:start="36:19" pos:end="36:21">ver</name><index pos:start="36:22" pos:end="36:24">[<expr pos:start="36:23" pos:end="36:23"><name pos:start="36:23" pos:end="36:23">u</name></expr>]</index></name><operator pos:start="36:25" pos:end="36:25">.</operator><call pos:start="36:26" pos:end="36:31"><name pos:start="36:26" pos:end="36:29">size</name><argument_list pos:start="36:30" pos:end="36:31">()</argument_list></call></expr>;</condition><incr pos:start="36:33" pos:end="36:35"><expr pos:start="36:33" pos:end="36:35"><name pos:start="36:33" pos:end="36:33">i</name><operator pos:start="36:34" pos:end="36:35">++</operator></expr></incr>)</control><block pos:start="36:37" pos:end="48:5">{<block_content pos:start="37:9" pos:end="47:9">
        <decl_stmt pos:start="37:9" pos:end="37:24"><decl pos:start="37:9" pos:end="37:23"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:13">v</name><init pos:start="37:14" pos:end="37:23">=<expr pos:start="37:15" pos:end="37:23"><name pos:start="37:15" pos:end="37:23"><name pos:start="37:15" pos:end="37:17">ver</name><index pos:start="37:18" pos:end="37:20">[<expr pos:start="37:19" pos:end="37:19"><name pos:start="37:19" pos:end="37:19">u</name></expr>]</index><index pos:start="37:21" pos:end="37:23">[<expr pos:start="37:22" pos:end="37:22"><name pos:start="37:22" pos:end="37:22">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="38:9" pos:end="47:9"><if pos:start="38:9" pos:end="44:9">if<condition pos:start="38:11" pos:end="38:21">(<expr pos:start="38:12" pos:end="38:20"><name pos:start="38:12" pos:end="38:17"><name pos:start="38:12" pos:end="38:14">dfn</name><index pos:start="38:15" pos:end="38:17">[<expr pos:start="38:16" pos:end="38:16"><name pos:start="38:16" pos:end="38:16">v</name></expr>]</index></name><operator pos:start="38:18" pos:end="38:19">==</operator><literal type="number" pos:start="38:20" pos:end="38:20">0</literal></expr>)</condition><block pos:start="38:22" pos:end="44:9">{<block_content pos:start="39:13" pos:end="43:13">
            <expr_stmt pos:start="39:13" pos:end="39:25"><expr pos:start="39:13" pos:end="39:24"><call pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:19">tarjan1</name><argument_list pos:start="39:20" pos:end="39:24">(<argument pos:start="39:21" pos:end="39:21"><expr pos:start="39:21" pos:end="39:21"><name pos:start="39:21" pos:end="39:21">v</name></expr></argument>,<argument pos:start="39:23" pos:end="39:23"><expr pos:start="39:23" pos:end="39:23"><name pos:start="39:23" pos:end="39:23">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="40:13" pos:end="40:38"><expr pos:start="40:13" pos:end="40:37"><name pos:start="40:13" pos:end="40:18"><name pos:start="40:13" pos:end="40:15">low</name><index pos:start="40:16" pos:end="40:18">[<expr pos:start="40:17" pos:end="40:17"><name pos:start="40:17" pos:end="40:17">u</name></expr>]</index></name><operator pos:start="40:19" pos:end="40:19">=</operator><call pos:start="40:20" pos:end="40:37"><name pos:start="40:20" pos:end="40:22">min</name><argument_list pos:start="40:23" pos:end="40:37">(<argument pos:start="40:24" pos:end="40:29"><expr pos:start="40:24" pos:end="40:29"><name pos:start="40:24" pos:end="40:29"><name pos:start="40:24" pos:end="40:26">low</name><index pos:start="40:27" pos:end="40:29">[<expr pos:start="40:28" pos:end="40:28"><name pos:start="40:28" pos:end="40:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="40:31" pos:end="40:36"><expr pos:start="40:31" pos:end="40:36"><name pos:start="40:31" pos:end="40:36"><name pos:start="40:31" pos:end="40:33">low</name><index pos:start="40:34" pos:end="40:36">[<expr pos:start="40:35" pos:end="40:35"><name pos:start="40:35" pos:end="40:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="41:13" pos:end="43:13"><if pos:start="41:13" pos:end="43:13">if<condition pos:start="41:15" pos:end="41:29">(<expr pos:start="41:16" pos:end="41:28"><name pos:start="41:16" pos:end="41:21"><name pos:start="41:16" pos:end="41:18">low</name><index pos:start="41:19" pos:end="41:21">[<expr pos:start="41:20" pos:end="41:20"><name pos:start="41:20" pos:end="41:20">v</name></expr>]</index></name><operator pos:start="41:22" pos:end="41:22">&gt;</operator><name pos:start="41:23" pos:end="41:28"><name pos:start="41:23" pos:end="41:25">dfn</name><index pos:start="41:26" pos:end="41:28">[<expr pos:start="41:27" pos:end="41:27"><name pos:start="41:27" pos:end="41:27">u</name></expr>]</index></name></expr>)</condition><block pos:start="41:30" pos:end="43:13">{<block_content pos:start="42:17" pos:end="42:23">
                <expr_stmt pos:start="42:17" pos:end="42:23"><expr pos:start="42:17" pos:end="42:22"><name pos:start="42:17" pos:end="42:20">ans1</name><operator pos:start="42:21" pos:end="42:22">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="45:9" pos:end="47:9">else if<condition pos:start="45:16" pos:end="45:26">(<expr pos:start="45:17" pos:end="45:25"><name pos:start="45:17" pos:end="45:17">v</name><operator pos:start="45:18" pos:end="45:19">!=</operator><name pos:start="45:20" pos:end="45:25">father</name></expr>)</condition><block pos:start="45:27" pos:end="47:9">{<block_content pos:start="46:13" pos:end="46:38">
            <expr_stmt pos:start="46:13" pos:end="46:38"><expr pos:start="46:13" pos:end="46:37"><name pos:start="46:13" pos:end="46:18"><name pos:start="46:13" pos:end="46:15">low</name><index pos:start="46:16" pos:end="46:18">[<expr pos:start="46:17" pos:end="46:17"><name pos:start="46:17" pos:end="46:17">u</name></expr>]</index></name><operator pos:start="46:19" pos:end="46:19">=</operator><call pos:start="46:20" pos:end="46:37"><name pos:start="46:20" pos:end="46:22">min</name><argument_list pos:start="46:23" pos:end="46:37">(<argument pos:start="46:24" pos:end="46:29"><expr pos:start="46:24" pos:end="46:29"><name pos:start="46:24" pos:end="46:29"><name pos:start="46:24" pos:end="46:26">low</name><index pos:start="46:27" pos:end="46:29">[<expr pos:start="46:28" pos:end="46:28"><name pos:start="46:28" pos:end="46:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="46:31" pos:end="46:36"><expr pos:start="46:31" pos:end="46:36"><name pos:start="46:31" pos:end="46:36"><name pos:start="46:31" pos:end="46:33">dfn</name><index pos:start="46:34" pos:end="46:36">[<expr pos:start="46:35" pos:end="46:35"><name pos:start="46:35" pos:end="46:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function> 
<function pos:start="50:1" pos:end="85:1"><type pos:start="50:1" pos:end="50:4"><name pos:start="50:1" pos:end="50:4">void</name></type> <name pos:start="50:6" pos:end="50:12">tarjan2</name><parameter_list pos:start="50:13" pos:end="50:30">(<parameter pos:start="50:14" pos:end="50:18"><decl pos:start="50:14" pos:end="50:18"><type pos:start="50:14" pos:end="50:18"><name pos:start="50:14" pos:end="50:16">int</name></type> <name pos:start="50:18" pos:end="50:18">u</name></decl></parameter>,<parameter pos:start="50:20" pos:end="50:29"><decl pos:start="50:20" pos:end="50:29"><type pos:start="50:20" pos:end="50:29"><name pos:start="50:20" pos:end="50:22">int</name></type> <name pos:start="50:24" pos:end="50:29">father</name></decl></parameter>)</parameter_list><block pos:start="50:31" pos:end="85:1">{<block_content pos:start="51:5" pos:end="84:5">
    <expr_stmt pos:start="51:5" pos:end="51:26"><expr pos:start="51:5" pos:end="51:14"><name pos:start="51:5" pos:end="51:10"><name pos:start="51:5" pos:end="51:7">dfn</name><index pos:start="51:8" pos:end="51:10">[<expr pos:start="51:9" pos:end="51:9"><name pos:start="51:9" pos:end="51:9">u</name></expr>]</index></name><operator pos:start="51:11" pos:end="51:11">=</operator><name pos:start="51:12" pos:end="51:14">tot</name></expr><operator pos:start="51:15" pos:end="51:15">,</operator><expr pos:start="51:16" pos:end="51:25"><name pos:start="51:16" pos:end="51:21"><name pos:start="51:16" pos:end="51:18">low</name><index pos:start="51:19" pos:end="51:21">[<expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">u</name></expr>]</index></name><operator pos:start="51:22" pos:end="51:22">=</operator><name pos:start="51:23" pos:end="51:25">tot</name></expr>;</expr_stmt>
    <expr_stmt pos:start="52:5" pos:end="52:10"><expr pos:start="52:5" pos:end="52:9"><name pos:start="52:5" pos:end="52:7">tot</name><operator pos:start="52:8" pos:end="52:9">++</operator></expr>;</expr_stmt>
    <for pos:start="53:5" pos:end="84:5">for<control pos:start="53:8" pos:end="53:36">(<init pos:start="53:9" pos:end="53:16"><decl pos:start="53:9" pos:end="53:15"><type pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">int</name></type> <name pos:start="53:13" pos:end="53:13">i</name><init pos:start="53:14" pos:end="53:15">=<expr pos:start="53:15" pos:end="53:15"><literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr></init></decl>;</init><condition pos:start="53:17" pos:end="53:32"><expr pos:start="53:17" pos:end="53:31"><name pos:start="53:17" pos:end="53:17">i</name><operator pos:start="53:18" pos:end="53:18">&lt;</operator><name pos:start="53:19" pos:end="53:24"><name pos:start="53:19" pos:end="53:21">ver</name><index pos:start="53:22" pos:end="53:24">[<expr pos:start="53:23" pos:end="53:23"><name pos:start="53:23" pos:end="53:23">u</name></expr>]</index></name><operator pos:start="53:25" pos:end="53:25">.</operator><call pos:start="53:26" pos:end="53:31"><name pos:start="53:26" pos:end="53:29">size</name><argument_list pos:start="53:30" pos:end="53:31">()</argument_list></call></expr>;</condition><incr pos:start="53:33" pos:end="53:35"><expr pos:start="53:33" pos:end="53:35"><name pos:start="53:33" pos:end="53:33">i</name><operator pos:start="53:34" pos:end="53:35">++</operator></expr></incr>)</control><block pos:start="53:37" pos:end="84:5">{<block_content pos:start="54:9" pos:end="83:9">
        <decl_stmt pos:start="54:9" pos:end="54:24"><decl pos:start="54:9" pos:end="54:23"><type pos:start="54:9" pos:end="54:11"><name pos:start="54:9" pos:end="54:11">int</name></type> <name pos:start="54:13" pos:end="54:13">v</name><init pos:start="54:14" pos:end="54:23">=<expr pos:start="54:15" pos:end="54:23"><name pos:start="54:15" pos:end="54:23"><name pos:start="54:15" pos:end="54:17">ver</name><index pos:start="54:18" pos:end="54:20">[<expr pos:start="54:19" pos:end="54:19"><name pos:start="54:19" pos:end="54:19">u</name></expr>]</index><index pos:start="54:21" pos:end="54:23">[<expr pos:start="54:22" pos:end="54:22"><name pos:start="54:22" pos:end="54:22">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="55:9" pos:end="57:9"><if pos:start="55:9" pos:end="57:9">if<condition pos:start="55:11" pos:end="55:21">(<expr pos:start="55:12" pos:end="55:20"><name pos:start="55:12" pos:end="55:12">v</name><operator pos:start="55:13" pos:end="55:14">==</operator><name pos:start="55:15" pos:end="55:20">father</name></expr>)</condition><block pos:start="55:22" pos:end="57:9">{<block_content pos:start="56:13" pos:end="56:21">
            <continue pos:start="56:13" pos:end="56:21">continue;</continue>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="58:9" pos:end="58:22"><expr pos:start="58:9" pos:end="58:21"><name pos:start="58:9" pos:end="58:17"><name pos:start="58:9" pos:end="58:12">zhan</name><index pos:start="58:13" pos:end="58:17">[<expr pos:start="58:14" pos:end="58:16"><name pos:start="58:14" pos:end="58:16">top</name></expr>]</index></name><operator pos:start="58:18" pos:end="58:18">.</operator><name pos:start="58:19" pos:end="58:19">u</name><operator pos:start="58:20" pos:end="58:20">=</operator><name pos:start="58:21" pos:end="58:21">u</name></expr>;</expr_stmt>
        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:12">zhan</name><index pos:start="59:13" pos:end="59:17">[<expr pos:start="59:14" pos:end="59:16"><name pos:start="59:14" pos:end="59:16">top</name></expr>]</index></name><operator pos:start="59:18" pos:end="59:18">.</operator><name pos:start="59:19" pos:end="59:19">v</name><operator pos:start="59:20" pos:end="59:20">=</operator><name pos:start="59:21" pos:end="59:21">v</name></expr>;</expr_stmt>
        <expr_stmt pos:start="60:9" pos:end="60:14"><expr pos:start="60:9" pos:end="60:13"><name pos:start="60:9" pos:end="60:11">top</name><operator pos:start="60:12" pos:end="60:13">++</operator></expr>;</expr_stmt>
        <if_stmt pos:start="61:9" pos:end="83:9"><if pos:start="61:9" pos:end="80:9">if<condition pos:start="61:11" pos:end="61:21">(<expr pos:start="61:12" pos:end="61:20"><name pos:start="61:12" pos:end="61:17"><name pos:start="61:12" pos:end="61:14">dfn</name><index pos:start="61:15" pos:end="61:17">[<expr pos:start="61:16" pos:end="61:16"><name pos:start="61:16" pos:end="61:16">v</name></expr>]</index></name><operator pos:start="61:18" pos:end="61:19">==</operator><literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>)</condition><block pos:start="61:22" pos:end="80:9">{<block_content pos:start="62:13" pos:end="79:13">
            <expr_stmt pos:start="62:13" pos:end="62:25"><expr pos:start="62:13" pos:end="62:24"><call pos:start="62:13" pos:end="62:24"><name pos:start="62:13" pos:end="62:19">tarjan2</name><argument_list pos:start="62:20" pos:end="62:24">(<argument pos:start="62:21" pos:end="62:21"><expr pos:start="62:21" pos:end="62:21"><name pos:start="62:21" pos:end="62:21">v</name></expr></argument>,<argument pos:start="62:23" pos:end="62:23"><expr pos:start="62:23" pos:end="62:23"><name pos:start="62:23" pos:end="62:23">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="63:13" pos:end="63:38"><expr pos:start="63:13" pos:end="63:37"><name pos:start="63:13" pos:end="63:18"><name pos:start="63:13" pos:end="63:15">low</name><index pos:start="63:16" pos:end="63:18">[<expr pos:start="63:17" pos:end="63:17"><name pos:start="63:17" pos:end="63:17">u</name></expr>]</index></name><operator pos:start="63:19" pos:end="63:19">=</operator><call pos:start="63:20" pos:end="63:37"><name pos:start="63:20" pos:end="63:22">min</name><argument_list pos:start="63:23" pos:end="63:37">(<argument pos:start="63:24" pos:end="63:29"><expr pos:start="63:24" pos:end="63:29"><name pos:start="63:24" pos:end="63:29"><name pos:start="63:24" pos:end="63:26">low</name><index pos:start="63:27" pos:end="63:29">[<expr pos:start="63:28" pos:end="63:28"><name pos:start="63:28" pos:end="63:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="63:31" pos:end="63:36"><expr pos:start="63:31" pos:end="63:36"><name pos:start="63:31" pos:end="63:36"><name pos:start="63:31" pos:end="63:33">low</name><index pos:start="63:34" pos:end="63:36">[<expr pos:start="63:35" pos:end="63:35"><name pos:start="63:35" pos:end="63:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="64:13" pos:end="79:13"><if pos:start="64:13" pos:end="79:13">if<condition pos:start="64:15" pos:end="64:30">(<expr pos:start="64:16" pos:end="64:29"><name pos:start="64:16" pos:end="64:21"><name pos:start="64:16" pos:end="64:18">low</name><index pos:start="64:19" pos:end="64:21">[<expr pos:start="64:20" pos:end="64:20"><name pos:start="64:20" pos:end="64:20">v</name></expr>]</index></name><operator pos:start="64:22" pos:end="64:23">&gt;=</operator><name pos:start="64:24" pos:end="64:29"><name pos:start="64:24" pos:end="64:26">dfn</name><index pos:start="64:27" pos:end="64:29">[<expr pos:start="64:28" pos:end="64:28"><name pos:start="64:28" pos:end="64:28">u</name></expr>]</index></name></expr>)</condition><block pos:start="64:31" pos:end="79:13">{<block_content pos:start="65:17" pos:end="78:17">
                <expr_stmt pos:start="65:17" pos:end="65:22"><expr pos:start="65:17" pos:end="65:21"><name pos:start="65:17" pos:end="65:19">cnt</name><operator pos:start="65:20" pos:end="65:21">++</operator></expr>;</expr_stmt>
                <decl_stmt pos:start="66:17" pos:end="66:27"><decl pos:start="66:17" pos:end="66:26"><type pos:start="66:17" pos:end="66:19"><name pos:start="66:17" pos:end="66:19">int</name></type> <name pos:start="66:21" pos:end="66:24">flag</name><init pos:start="66:25" pos:end="66:26">=<expr pos:start="66:26" pos:end="66:26"><literal type="number" pos:start="66:26" pos:end="66:26">0</literal></expr></init></decl>;</decl_stmt>
                <while pos:start="67:17" pos:end="78:17">while<condition pos:start="67:22" pos:end="67:24">(<expr pos:start="67:23" pos:end="67:23"><literal type="number" pos:start="67:23" pos:end="67:23">1</literal></expr>)</condition><block pos:start="67:25" pos:end="78:17">{<block_content pos:start="68:21" pos:end="77:21">
                    <decl_stmt pos:start="68:21" pos:end="68:40"><decl pos:start="68:21" pos:end="68:39"><type pos:start="68:21" pos:end="68:23"><name pos:start="68:21" pos:end="68:23">int</name></type> <name pos:start="68:25" pos:end="68:25">x</name><init pos:start="68:26" pos:end="68:39">=<expr pos:start="68:27" pos:end="68:39"><name pos:start="68:27" pos:end="68:37"><name pos:start="68:27" pos:end="68:30">zhan</name><index pos:start="68:31" pos:end="68:37">[<expr pos:start="68:32" pos:end="68:36"><name pos:start="68:32" pos:end="68:34">top</name><operator pos:start="68:35" pos:end="68:35">-</operator><literal type="number" pos:start="68:36" pos:end="68:36">1</literal></expr>]</index></name><operator pos:start="68:38" pos:end="68:38">.</operator><name pos:start="68:39" pos:end="68:39">u</name></expr></init></decl>;</decl_stmt>
                    <decl_stmt pos:start="69:21" pos:end="69:40"><decl pos:start="69:21" pos:end="69:39"><type pos:start="69:21" pos:end="69:23"><name pos:start="69:21" pos:end="69:23">int</name></type> <name pos:start="69:25" pos:end="69:25">y</name><init pos:start="69:26" pos:end="69:39">=<expr pos:start="69:27" pos:end="69:39"><name pos:start="69:27" pos:end="69:37"><name pos:start="69:27" pos:end="69:30">zhan</name><index pos:start="69:31" pos:end="69:37">[<expr pos:start="69:32" pos:end="69:36"><name pos:start="69:32" pos:end="69:34">top</name><operator pos:start="69:35" pos:end="69:35">-</operator><literal type="number" pos:start="69:36" pos:end="69:36">1</literal></expr>]</index></name><operator pos:start="69:38" pos:end="69:38">.</operator><name pos:start="69:39" pos:end="69:39">v</name></expr></init></decl>;</decl_stmt>
                    <expr_stmt pos:start="70:21" pos:end="70:26"><expr pos:start="70:21" pos:end="70:25"><name pos:start="70:21" pos:end="70:23">top</name><operator pos:start="70:24" pos:end="70:25">--</operator></expr>;</expr_stmt>
                    <expr_stmt pos:start="71:21" pos:end="71:43"><expr pos:start="71:21" pos:end="71:42"><name pos:start="71:21" pos:end="71:29"><name pos:start="71:21" pos:end="71:24">ver1</name><index pos:start="71:25" pos:end="71:29">[<expr pos:start="71:26" pos:end="71:28"><name pos:start="71:26" pos:end="71:28">cnt</name></expr>]</index></name><operator pos:start="71:30" pos:end="71:30">.</operator><call pos:start="71:31" pos:end="71:42"><name pos:start="71:31" pos:end="71:39">push_back</name><argument_list pos:start="71:40" pos:end="71:42">(<argument pos:start="71:41" pos:end="71:41"><expr pos:start="71:41" pos:end="71:41"><name pos:start="71:41" pos:end="71:41">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="72:21" pos:end="72:43"><expr pos:start="72:21" pos:end="72:42"><name pos:start="72:21" pos:end="72:29"><name pos:start="72:21" pos:end="72:24">ver1</name><index pos:start="72:25" pos:end="72:29">[<expr pos:start="72:26" pos:end="72:28"><name pos:start="72:26" pos:end="72:28">cnt</name></expr>]</index></name><operator pos:start="72:30" pos:end="72:30">.</operator><call pos:start="72:31" pos:end="72:42"><name pos:start="72:31" pos:end="72:39">push_back</name><argument_list pos:start="72:40" pos:end="72:42">(<argument pos:start="72:41" pos:end="72:41"><expr pos:start="72:41" pos:end="72:41"><name pos:start="72:41" pos:end="72:41">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if_stmt pos:start="73:21" pos:end="73:47"><if pos:start="73:21" pos:end="73:47">if<condition pos:start="73:23" pos:end="73:31">(<expr pos:start="73:24" pos:end="73:30"><name pos:start="73:24" pos:end="73:27">flag</name><operator pos:start="73:28" pos:end="73:29">==</operator><literal type="number" pos:start="73:30" pos:end="73:30">1</literal></expr>)</condition><block type="pseudo" pos:start="73:33" pos:end="73:47"><block_content pos:start="73:33" pos:end="73:47"> <expr_stmt pos:start="73:33" pos:end="73:47"><expr pos:start="73:33" pos:end="73:46"><name pos:start="73:33" pos:end="73:44"><name pos:start="73:33" pos:end="73:39">sumbian</name><index pos:start="73:40" pos:end="73:44">[<expr pos:start="73:41" pos:end="73:43"><name pos:start="73:41" pos:end="73:43">cnt</name></expr>]</index></name><operator pos:start="73:45" pos:end="73:46">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    <expr_stmt pos:start="74:21" pos:end="74:27"><expr pos:start="74:21" pos:end="74:26"><name pos:start="74:21" pos:end="74:24">flag</name><operator pos:start="74:25" pos:end="74:25">=</operator><literal type="number" pos:start="74:26" pos:end="74:26">1</literal></expr>;</expr_stmt>
                    <if_stmt pos:start="75:21" pos:end="77:21"><if pos:start="75:21" pos:end="77:21">if<condition pos:start="75:23" pos:end="75:34">(<expr pos:start="75:24" pos:end="75:33"><name pos:start="75:24" pos:end="75:24">x</name><operator pos:start="75:25" pos:end="75:26">==</operator><name pos:start="75:27" pos:end="75:27">u</name><operator pos:start="75:28" pos:end="75:29">&amp;&amp;</operator><name pos:start="75:30" pos:end="75:30">y</name><operator pos:start="75:31" pos:end="75:32">==</operator><name pos:start="75:33" pos:end="75:33">v</name></expr>)</condition><block pos:start="75:35" pos:end="77:21">{<block_content pos:start="76:25" pos:end="76:30">
                        <break pos:start="76:25" pos:end="76:30">break;</break>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></while>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if>
        <else pos:start="81:9" pos:end="83:9">else<block pos:start="81:13" pos:end="83:9">{<block_content pos:start="82:13" pos:end="82:38">
            <expr_stmt pos:start="82:13" pos:end="82:38"><expr pos:start="82:13" pos:end="82:37"><name pos:start="82:13" pos:end="82:18"><name pos:start="82:13" pos:end="82:15">low</name><index pos:start="82:16" pos:end="82:18">[<expr pos:start="82:17" pos:end="82:17"><name pos:start="82:17" pos:end="82:17">u</name></expr>]</index></name><operator pos:start="82:19" pos:end="82:19">=</operator><call pos:start="82:20" pos:end="82:37"><name pos:start="82:20" pos:end="82:22">min</name><argument_list pos:start="82:23" pos:end="82:37">(<argument pos:start="82:24" pos:end="82:29"><expr pos:start="82:24" pos:end="82:29"><name pos:start="82:24" pos:end="82:29"><name pos:start="82:24" pos:end="82:26">low</name><index pos:start="82:27" pos:end="82:29">[<expr pos:start="82:28" pos:end="82:28"><name pos:start="82:28" pos:end="82:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="82:31" pos:end="82:36"><expr pos:start="82:31" pos:end="82:36"><name pos:start="82:31" pos:end="82:36"><name pos:start="82:31" pos:end="82:33">dfn</name><index pos:start="82:34" pos:end="82:36">[<expr pos:start="82:35" pos:end="82:35"><name pos:start="82:35" pos:end="82:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function> 
<function pos:start="86:1" pos:end="122:1"><type pos:start="86:1" pos:end="86:3"><name pos:start="86:1" pos:end="86:3">int</name></type> <name pos:start="86:5" pos:end="86:8">main</name><parameter_list pos:start="86:9" pos:end="86:10">()</parameter_list><block pos:start="86:11" pos:end="122:1">{<block_content pos:start="87:5" pos:end="121:13">
    <expr_stmt pos:start="87:5" pos:end="87:33"><expr pos:start="87:5" pos:end="87:32"><call pos:start="87:5" pos:end="87:32"><name pos:start="87:5" pos:end="87:11">freopen</name><argument_list pos:start="87:12" pos:end="87:32">(<argument pos:start="87:13" pos:end="87:21"><expr pos:start="87:13" pos:end="87:21"><literal type="string" pos:start="87:13" pos:end="87:21">"road.in"</literal></expr></argument>,<argument pos:start="87:23" pos:end="87:25"><expr pos:start="87:23" pos:end="87:25"><literal type="string" pos:start="87:23" pos:end="87:25">"r"</literal></expr></argument>,<argument pos:start="87:27" pos:end="87:31"><expr pos:start="87:27" pos:end="87:31"><name pos:start="87:27" pos:end="87:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="88:5" pos:end="88:35"><expr pos:start="88:5" pos:end="88:34"><call pos:start="88:5" pos:end="88:34"><name pos:start="88:5" pos:end="88:11">freopen</name><argument_list pos:start="88:12" pos:end="88:34">(<argument pos:start="88:13" pos:end="88:22"><expr pos:start="88:13" pos:end="88:22"><literal type="string" pos:start="88:13" pos:end="88:22">"road.out"</literal></expr></argument>,<argument pos:start="88:24" pos:end="88:26"><expr pos:start="88:24" pos:end="88:26"><literal type="string" pos:start="88:24" pos:end="88:26">"w"</literal></expr></argument>,<argument pos:start="88:28" pos:end="88:33"><expr pos:start="88:28" pos:end="88:33"><name pos:start="88:28" pos:end="88:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="89:5" pos:end="89:15"><expr pos:start="89:5" pos:end="89:14"><call pos:start="89:5" pos:end="89:14"><name pos:start="89:5" pos:end="89:11"><name pos:start="89:5" pos:end="89:7">cin</name><operator pos:start="89:8" pos:end="89:8">.</operator><name pos:start="89:9" pos:end="89:11">tie</name></name><argument_list pos:start="89:12" pos:end="89:14">(<argument pos:start="89:13" pos:end="89:13"><expr pos:start="89:13" pos:end="89:13"><literal type="number" pos:start="89:13" pos:end="89:13">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="90:5" pos:end="90:16"><expr pos:start="90:5" pos:end="90:15"><call pos:start="90:5" pos:end="90:15"><name pos:start="90:5" pos:end="90:12"><name pos:start="90:5" pos:end="90:8">cout</name><operator pos:start="90:9" pos:end="90:9">.</operator><name pos:start="90:10" pos:end="90:12">tie</name></name><argument_list pos:start="90:13" pos:end="90:15">(<argument pos:start="90:14" pos:end="90:14"><expr pos:start="90:14" pos:end="90:14"><literal type="number" pos:start="90:14" pos:end="90:14">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="91:5" pos:end="91:14"><expr pos:start="91:5" pos:end="91:13"><name pos:start="91:5" pos:end="91:7">cin</name><operator pos:start="91:8" pos:end="91:9">&gt;&gt;</operator><name pos:start="91:10" pos:end="91:10">n</name><operator pos:start="91:11" pos:end="91:12">&gt;&gt;</operator><name pos:start="91:13" pos:end="91:13">m</name></expr>;</expr_stmt>
    <for pos:start="92:5" pos:end="98:5">for<control pos:start="92:8" pos:end="92:25">(<init pos:start="92:9" pos:end="92:16"><decl pos:start="92:9" pos:end="92:15"><type pos:start="92:9" pos:end="92:11"><name pos:start="92:9" pos:end="92:11">int</name></type> <name pos:start="92:13" pos:end="92:13">i</name><init pos:start="92:14" pos:end="92:15">=<expr pos:start="92:15" pos:end="92:15"><literal type="number" pos:start="92:15" pos:end="92:15">1</literal></expr></init></decl>;</init><condition pos:start="92:17" pos:end="92:21"><expr pos:start="92:17" pos:end="92:20"><name pos:start="92:17" pos:end="92:17">i</name><operator pos:start="92:18" pos:end="92:19">&lt;=</operator><name pos:start="92:20" pos:end="92:20">m</name></expr>;</condition><incr pos:start="92:22" pos:end="92:24"><expr pos:start="92:22" pos:end="92:24"><name pos:start="92:22" pos:end="92:22">i</name><operator pos:start="92:23" pos:end="92:24">++</operator></expr></incr>)</control><block pos:start="92:26" pos:end="98:5">{<block_content pos:start="93:9" pos:end="97:28">
        <decl_stmt pos:start="93:9" pos:end="93:16"><decl pos:start="93:9" pos:end="93:13"><type pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:11">int</name></type> <name pos:start="93:13" pos:end="93:13">x</name></decl>,<decl pos:start="93:15" pos:end="93:15"><type ref="prev" pos:start="93:9" pos:end="93:11"/><name pos:start="93:15" pos:end="93:15">y</name></decl>;</decl_stmt>
        <expr_stmt pos:start="94:9" pos:end="94:18"><expr pos:start="94:9" pos:end="94:17"><name pos:start="94:9" pos:end="94:11">cin</name><operator pos:start="94:12" pos:end="94:13">&gt;&gt;</operator><name pos:start="94:14" pos:end="94:14">x</name><operator pos:start="94:15" pos:end="94:16">&gt;&gt;</operator><name pos:start="94:17" pos:end="94:17">y</name></expr>;</expr_stmt>
        <expr_stmt pos:start="95:9" pos:end="95:16"><expr pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:9">x</name><operator pos:start="95:10" pos:end="95:11">++</operator></expr><operator pos:start="95:12" pos:end="95:12">,</operator><expr pos:start="95:13" pos:end="95:15"><name pos:start="95:13" pos:end="95:13">y</name><operator pos:start="95:14" pos:end="95:15">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="96:9" pos:end="96:28"><expr pos:start="96:9" pos:end="96:27"><name pos:start="96:9" pos:end="96:14"><name pos:start="96:9" pos:end="96:11">ver</name><index pos:start="96:12" pos:end="96:14">[<expr pos:start="96:13" pos:end="96:13"><name pos:start="96:13" pos:end="96:13">x</name></expr>]</index></name><operator pos:start="96:15" pos:end="96:15">.</operator><call pos:start="96:16" pos:end="96:27"><name pos:start="96:16" pos:end="96:24">push_back</name><argument_list pos:start="96:25" pos:end="96:27">(<argument pos:start="96:26" pos:end="96:26"><expr pos:start="96:26" pos:end="96:26"><name pos:start="96:26" pos:end="96:26">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="97:9" pos:end="97:28"><expr pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:14"><name pos:start="97:9" pos:end="97:11">ver</name><index pos:start="97:12" pos:end="97:14">[<expr pos:start="97:13" pos:end="97:13"><name pos:start="97:13" pos:end="97:13">y</name></expr>]</index></name><operator pos:start="97:15" pos:end="97:15">.</operator><call pos:start="97:16" pos:end="97:27"><name pos:start="97:16" pos:end="97:24">push_back</name><argument_list pos:start="97:25" pos:end="97:27">(<argument pos:start="97:26" pos:end="97:26"><expr pos:start="97:26" pos:end="97:26"><name pos:start="97:26" pos:end="97:26">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="99:5" pos:end="103:5">for<control pos:start="99:8" pos:end="99:25">(<init pos:start="99:9" pos:end="99:16"><decl pos:start="99:9" pos:end="99:15"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:13">i</name><init pos:start="99:14" pos:end="99:15">=<expr pos:start="99:15" pos:end="99:15"><literal type="number" pos:start="99:15" pos:end="99:15">1</literal></expr></init></decl>;</init><condition pos:start="99:17" pos:end="99:21"><expr pos:start="99:17" pos:end="99:20"><name pos:start="99:17" pos:end="99:17">i</name><operator pos:start="99:18" pos:end="99:19">&lt;=</operator><name pos:start="99:20" pos:end="99:20">n</name></expr>;</condition><incr pos:start="99:22" pos:end="99:24"><expr pos:start="99:22" pos:end="99:24"><name pos:start="99:22" pos:end="99:22">i</name><operator pos:start="99:23" pos:end="99:24">++</operator></expr></incr>)</control><block pos:start="99:26" pos:end="103:5">{<block_content pos:start="100:9" pos:end="102:9">
        <if_stmt pos:start="100:9" pos:end="102:9"><if pos:start="100:9" pos:end="102:9">if<condition pos:start="100:11" pos:end="100:21">(<expr pos:start="100:12" pos:end="100:20"><name pos:start="100:12" pos:end="100:17"><name pos:start="100:12" pos:end="100:14">dfn</name><index pos:start="100:15" pos:end="100:17">[<expr pos:start="100:16" pos:end="100:16"><name pos:start="100:16" pos:end="100:16">i</name></expr>]</index></name><operator pos:start="100:18" pos:end="100:19">==</operator><literal type="number" pos:start="100:20" pos:end="100:20">0</literal></expr>)</condition><block pos:start="100:22" pos:end="102:9">{<block_content pos:start="101:13" pos:end="101:25">
            <expr_stmt pos:start="101:13" pos:end="101:25"><expr pos:start="101:13" pos:end="101:24"><call pos:start="101:13" pos:end="101:24"><name pos:start="101:13" pos:end="101:19">tarjan1</name><argument_list pos:start="101:20" pos:end="101:24">(<argument pos:start="101:21" pos:end="101:21"><expr pos:start="101:21" pos:end="101:21"><name pos:start="101:21" pos:end="101:21">i</name></expr></argument>,<argument pos:start="101:23" pos:end="101:23"><expr pos:start="101:23" pos:end="101:23"><name pos:start="101:23" pos:end="101:23">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="104:5" pos:end="104:20"><expr pos:start="104:5" pos:end="104:19"><name pos:start="104:5" pos:end="104:8">cout</name><operator pos:start="104:9" pos:end="104:10">&lt;&lt;</operator><name pos:start="104:11" pos:end="104:14">ans1</name><operator pos:start="104:15" pos:end="104:16">&lt;&lt;</operator><literal type="string" pos:start="104:17" pos:end="104:19">" "</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="105:5" pos:end="105:30"><expr pos:start="105:5" pos:end="105:29"><call pos:start="105:5" pos:end="105:29"><name pos:start="105:5" pos:end="105:10">memset</name><argument_list pos:start="105:11" pos:end="105:29">(<argument pos:start="105:12" pos:end="105:14"><expr pos:start="105:12" pos:end="105:14"><name pos:start="105:12" pos:end="105:14">dfn</name></expr></argument>,<argument pos:start="105:16" pos:end="105:16"><expr pos:start="105:16" pos:end="105:16"><literal type="number" pos:start="105:16" pos:end="105:16">0</literal></expr></argument>,<argument pos:start="105:18" pos:end="105:28"><expr pos:start="105:18" pos:end="105:28"><sizeof pos:start="105:18" pos:end="105:28">sizeof<argument_list pos:start="105:24" pos:end="105:28">(<argument pos:start="105:25" pos:end="105:27"><expr pos:start="105:25" pos:end="105:27"><name pos:start="105:25" pos:end="105:27">dfn</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="106:5" pos:end="106:30"><expr pos:start="106:5" pos:end="106:29"><call pos:start="106:5" pos:end="106:29"><name pos:start="106:5" pos:end="106:10">memset</name><argument_list pos:start="106:11" pos:end="106:29">(<argument pos:start="106:12" pos:end="106:14"><expr pos:start="106:12" pos:end="106:14"><name pos:start="106:12" pos:end="106:14">low</name></expr></argument>,<argument pos:start="106:16" pos:end="106:16"><expr pos:start="106:16" pos:end="106:16"><literal type="number" pos:start="106:16" pos:end="106:16">0</literal></expr></argument>,<argument pos:start="106:18" pos:end="106:28"><expr pos:start="106:18" pos:end="106:28"><sizeof pos:start="106:18" pos:end="106:28">sizeof<argument_list pos:start="106:24" pos:end="106:28">(<argument pos:start="106:25" pos:end="106:27"><expr pos:start="106:25" pos:end="106:27"><name pos:start="106:25" pos:end="106:27">low</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="107:5" pos:end="107:10"><expr pos:start="107:5" pos:end="107:9"><name pos:start="107:5" pos:end="107:7">tot</name><operator pos:start="107:8" pos:end="107:8">=</operator><literal type="number" pos:start="107:9" pos:end="107:9">1</literal></expr>;</expr_stmt>
    <for pos:start="108:5" pos:end="112:5">for<control pos:start="108:8" pos:end="108:25">(<init pos:start="108:9" pos:end="108:16"><decl pos:start="108:9" pos:end="108:15"><type pos:start="108:9" pos:end="108:11"><name pos:start="108:9" pos:end="108:11">int</name></type> <name pos:start="108:13" pos:end="108:13">i</name><init pos:start="108:14" pos:end="108:15">=<expr pos:start="108:15" pos:end="108:15"><literal type="number" pos:start="108:15" pos:end="108:15">1</literal></expr></init></decl>;</init><condition pos:start="108:17" pos:end="108:21"><expr pos:start="108:17" pos:end="108:20"><name pos:start="108:17" pos:end="108:17">i</name><operator pos:start="108:18" pos:end="108:19">&lt;=</operator><name pos:start="108:20" pos:end="108:20">n</name></expr>;</condition><incr pos:start="108:22" pos:end="108:24"><expr pos:start="108:22" pos:end="108:24"><name pos:start="108:22" pos:end="108:22">i</name><operator pos:start="108:23" pos:end="108:24">++</operator></expr></incr>)</control><block pos:start="108:26" pos:end="112:5">{<block_content pos:start="109:9" pos:end="111:9">
        <if_stmt pos:start="109:9" pos:end="111:9"><if pos:start="109:9" pos:end="111:9">if<condition pos:start="109:11" pos:end="109:21">(<expr pos:start="109:12" pos:end="109:20"><name pos:start="109:12" pos:end="109:17"><name pos:start="109:12" pos:end="109:14">dfn</name><index pos:start="109:15" pos:end="109:17">[<expr pos:start="109:16" pos:end="109:16"><name pos:start="109:16" pos:end="109:16">i</name></expr>]</index></name><operator pos:start="109:18" pos:end="109:19">==</operator><literal type="number" pos:start="109:20" pos:end="109:20">0</literal></expr>)</condition><block pos:start="109:22" pos:end="111:9">{<block_content pos:start="110:13" pos:end="110:25">
            <expr_stmt pos:start="110:13" pos:end="110:25"><expr pos:start="110:13" pos:end="110:24"><call pos:start="110:13" pos:end="110:24"><name pos:start="110:13" pos:end="110:19">tarjan2</name><argument_list pos:start="110:20" pos:end="110:24">(<argument pos:start="110:21" pos:end="110:21"><expr pos:start="110:21" pos:end="110:21"><name pos:start="110:21" pos:end="110:21">i</name></expr></argument>,<argument pos:start="110:23" pos:end="110:23"><expr pos:start="110:23" pos:end="110:23"><name pos:start="110:23" pos:end="110:23">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="113:5" pos:end="119:5">for<control pos:start="113:8" pos:end="113:27">(<init pos:start="113:9" pos:end="113:16"><decl pos:start="113:9" pos:end="113:15"><type pos:start="113:9" pos:end="113:11"><name pos:start="113:9" pos:end="113:11">int</name></type> <name pos:start="113:13" pos:end="113:13">i</name><init pos:start="113:14" pos:end="113:15">=<expr pos:start="113:15" pos:end="113:15"><literal type="number" pos:start="113:15" pos:end="113:15">1</literal></expr></init></decl>;</init><condition pos:start="113:17" pos:end="113:23"><expr pos:start="113:17" pos:end="113:22"><name pos:start="113:17" pos:end="113:17">i</name><operator pos:start="113:18" pos:end="113:19">&lt;=</operator><name pos:start="113:20" pos:end="113:22">cnt</name></expr>;</condition><incr pos:start="113:24" pos:end="113:26"><expr pos:start="113:24" pos:end="113:26"><name pos:start="113:24" pos:end="113:24">i</name><operator pos:start="113:25" pos:end="113:26">++</operator></expr></incr>)</control><block pos:start="113:28" pos:end="119:5">{<block_content pos:start="114:9" pos:end="118:9">
        <expr_stmt pos:start="114:9" pos:end="114:44"><expr pos:start="114:9" pos:end="114:43"><call pos:start="114:9" pos:end="114:43"><name pos:start="114:9" pos:end="114:12">sort</name><argument_list pos:start="114:13" pos:end="114:43">(<argument pos:start="114:14" pos:end="114:28"><expr pos:start="114:14" pos:end="114:28"><name pos:start="114:14" pos:end="114:20"><name pos:start="114:14" pos:end="114:17">ver1</name><index pos:start="114:18" pos:end="114:20">[<expr pos:start="114:19" pos:end="114:19"><name pos:start="114:19" pos:end="114:19">i</name></expr>]</index></name><operator pos:start="114:21" pos:end="114:21">.</operator><call pos:start="114:22" pos:end="114:28"><name pos:start="114:22" pos:end="114:26">begin</name><argument_list pos:start="114:27" pos:end="114:28">()</argument_list></call></expr></argument>,<argument pos:start="114:30" pos:end="114:42"><expr pos:start="114:30" pos:end="114:42"><name pos:start="114:30" pos:end="114:36"><name pos:start="114:30" pos:end="114:33">ver1</name><index pos:start="114:34" pos:end="114:36">[<expr pos:start="114:35" pos:end="114:35"><name pos:start="114:35" pos:end="114:35">i</name></expr>]</index></name><operator pos:start="114:37" pos:end="114:37">.</operator><call pos:start="114:38" pos:end="114:42"><name pos:start="114:38" pos:end="114:40">end</name><argument_list pos:start="114:41" pos:end="114:42">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="115:9" pos:end="115:75"><expr pos:start="115:9" pos:end="115:74"><name pos:start="115:9" pos:end="115:15"><name pos:start="115:9" pos:end="115:12">ver1</name><index pos:start="115:13" pos:end="115:15">[<expr pos:start="115:14" pos:end="115:14"><name pos:start="115:14" pos:end="115:14">i</name></expr>]</index></name><operator pos:start="115:16" pos:end="115:16">.</operator><call pos:start="115:17" pos:end="115:74"><name pos:start="115:17" pos:end="115:21">erase</name><argument_list pos:start="115:22" pos:end="115:74">(<argument pos:start="115:23" pos:end="115:59"><expr pos:start="115:23" pos:end="115:59"><call pos:start="115:23" pos:end="115:59"><name pos:start="115:23" pos:end="115:28">unique</name><argument_list pos:start="115:29" pos:end="115:59">(<argument pos:start="115:30" pos:end="115:44"><expr pos:start="115:30" pos:end="115:44"><name pos:start="115:30" pos:end="115:36"><name pos:start="115:30" pos:end="115:33">ver1</name><index pos:start="115:34" pos:end="115:36">[<expr pos:start="115:35" pos:end="115:35"><name pos:start="115:35" pos:end="115:35">i</name></expr>]</index></name><operator pos:start="115:37" pos:end="115:37">.</operator><call pos:start="115:38" pos:end="115:44"><name pos:start="115:38" pos:end="115:42">begin</name><argument_list pos:start="115:43" pos:end="115:44">()</argument_list></call></expr></argument>,<argument pos:start="115:46" pos:end="115:58"><expr pos:start="115:46" pos:end="115:58"><name pos:start="115:46" pos:end="115:52"><name pos:start="115:46" pos:end="115:49">ver1</name><index pos:start="115:50" pos:end="115:52">[<expr pos:start="115:51" pos:end="115:51"><name pos:start="115:51" pos:end="115:51">i</name></expr>]</index></name><operator pos:start="115:53" pos:end="115:53">.</operator><call pos:start="115:54" pos:end="115:58"><name pos:start="115:54" pos:end="115:56">end</name><argument_list pos:start="115:57" pos:end="115:58">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="115:61" pos:end="115:73"><expr pos:start="115:61" pos:end="115:73"><name pos:start="115:61" pos:end="115:67"><name pos:start="115:61" pos:end="115:64">ver1</name><index pos:start="115:65" pos:end="115:67">[<expr pos:start="115:66" pos:end="115:66"><name pos:start="115:66" pos:end="115:66">i</name></expr>]</index></name><operator pos:start="115:68" pos:end="115:68">.</operator><call pos:start="115:69" pos:end="115:73"><name pos:start="115:69" pos:end="115:71">end</name><argument_list pos:start="115:72" pos:end="115:73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="116:9" pos:end="118:9"><if pos:start="116:9" pos:end="118:9">if<condition pos:start="116:11" pos:end="116:37">(<expr pos:start="116:12" pos:end="116:36"><name pos:start="116:12" pos:end="116:18"><name pos:start="116:12" pos:end="116:15">ver1</name><index pos:start="116:16" pos:end="116:18">[<expr pos:start="116:17" pos:end="116:17"><name pos:start="116:17" pos:end="116:17">i</name></expr>]</index></name><operator pos:start="116:19" pos:end="116:19">.</operator><call pos:start="116:20" pos:end="116:25"><name pos:start="116:20" pos:end="116:23">size</name><argument_list pos:start="116:24" pos:end="116:25">()</argument_list></call><operator pos:start="116:26" pos:end="116:26">&lt;</operator><name pos:start="116:27" pos:end="116:36"><name pos:start="116:27" pos:end="116:33">sumbian</name><index pos:start="116:34" pos:end="116:36">[<expr pos:start="116:35" pos:end="116:35"><name pos:start="116:35" pos:end="116:35">i</name></expr>]</index></name></expr>)</condition><block pos:start="116:38" pos:end="118:9">{<block_content pos:start="117:13" pos:end="117:29">
            <expr_stmt pos:start="117:13" pos:end="117:29"><expr pos:start="117:13" pos:end="117:28"><name pos:start="117:13" pos:end="117:16">ans2</name><operator pos:start="117:17" pos:end="117:18">+=</operator><name pos:start="117:19" pos:end="117:28"><name pos:start="117:19" pos:end="117:25">sumbian</name><index pos:start="117:26" pos:end="117:28">[<expr pos:start="117:27" pos:end="117:27"><name pos:start="117:27" pos:end="117:27">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="120:5" pos:end="120:21"><expr pos:start="120:5" pos:end="120:20"><name pos:start="120:5" pos:end="120:8">cout</name><operator pos:start="120:9" pos:end="120:10">&lt;&lt;</operator><name pos:start="120:11" pos:end="120:14">ans2</name><operator pos:start="120:15" pos:end="120:16">&lt;&lt;</operator><literal type="string" pos:start="120:17" pos:end="120:20">"\n"</literal></expr>;</expr_stmt>
    <return pos:start="121:5" pos:end="121:13">return <expr pos:start="121:12" pos:end="121:12"><literal type="number" pos:start="121:12" pos:end="121:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
