<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/28/28.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:18">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:18">&lt;cstring&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:12"><decl pos:start="5:1" pos:end="5:11"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:7">ans</name> <init pos:start="5:9" pos:end="5:11">= <expr pos:start="5:11" pos:end="5:11"><literal type="number" pos:start="5:11" pos:end="5:11">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:14"><decl pos:start="6:1" pos:end="6:13"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:13"><name pos:start="6:5" pos:end="6:5">p</name><index pos:start="6:6" pos:end="6:9">[<expr pos:start="6:7" pos:end="6:8"><literal type="number" pos:start="6:7" pos:end="6:8">10</literal></expr>]</index><index pos:start="6:10" pos:end="6:13">[<expr pos:start="6:11" pos:end="6:12"><literal type="number" pos:start="6:11" pos:end="6:12">10</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:6"><decl pos:start="7:1" pos:end="7:5"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:29"><decl pos:start="8:1" pos:end="8:12"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">bool</name></type> <name pos:start="8:6" pos:end="8:12"><name pos:start="8:6" pos:end="8:8">row</name><index pos:start="8:9" pos:end="8:12">[<expr pos:start="8:10" pos:end="8:11"><literal type="number" pos:start="8:10" pos:end="8:11">10</literal></expr>]</index></name></decl>, <decl pos:start="8:15" pos:end="8:20"><type ref="prev" pos:start="8:1" pos:end="8:4"/><name pos:start="8:15" pos:end="8:20"><name pos:start="8:15" pos:end="8:16">x1</name><index pos:start="8:17" pos:end="8:20">[<expr pos:start="8:18" pos:end="8:19"><literal type="number" pos:start="8:18" pos:end="8:19">20</literal></expr>]</index></name></decl>, <decl pos:start="8:23" pos:end="8:28"><type ref="prev" pos:start="8:1" pos:end="8:4"/><name pos:start="8:23" pos:end="8:28"><name pos:start="8:23" pos:end="8:24">x2</name><index pos:start="8:25" pos:end="8:28">[<expr pos:start="8:26" pos:end="8:27"><literal type="number" pos:start="8:26" pos:end="8:27">20</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="9:1" pos:end="11:1"><type pos:start="9:1" pos:end="9:4"><name pos:start="9:1" pos:end="9:4">bool</name></type> <name pos:start="9:6" pos:end="9:10">check</name><parameter_list pos:start="9:11" pos:end="9:24">(<parameter pos:start="9:12" pos:end="9:16"><decl pos:start="9:12" pos:end="9:16"><type pos:start="9:12" pos:end="9:16"><name pos:start="9:12" pos:end="9:14">int</name></type> <name pos:start="9:16" pos:end="9:16">c</name></decl></parameter>, <parameter pos:start="9:19" pos:end="9:23"><decl pos:start="9:19" pos:end="9:23"><type pos:start="9:19" pos:end="9:23"><name pos:start="9:19" pos:end="9:21">int</name></type> <name pos:start="9:23" pos:end="9:23">i</name></decl></parameter>)</parameter_list> <block pos:start="9:26" pos:end="11:1">{<block_content pos:start="10:5" pos:end="10:62">
    <return pos:start="10:5" pos:end="10:62">return <expr pos:start="10:12" pos:end="10:61"><operator pos:start="10:12" pos:end="10:12">!</operator><name pos:start="10:13" pos:end="10:18"><name pos:start="10:13" pos:end="10:15">row</name><index pos:start="10:16" pos:end="10:18">[<expr pos:start="10:17" pos:end="10:17"><name pos:start="10:17" pos:end="10:17">i</name></expr>]</index></name> <operator pos:start="10:20" pos:end="10:21">&amp;&amp;</operator> <operator pos:start="10:23" pos:end="10:23">!</operator><name pos:start="10:24" pos:end="10:32"><name pos:start="10:24" pos:end="10:25">x1</name><index pos:start="10:26" pos:end="10:32">[<expr pos:start="10:27" pos:end="10:31"><name pos:start="10:27" pos:end="10:27">c</name> <operator pos:start="10:29" pos:end="10:29">+</operator> <name pos:start="10:31" pos:end="10:31">i</name></expr>]</index></name> <operator pos:start="10:34" pos:end="10:35">&amp;&amp;</operator> <operator pos:start="10:37" pos:end="10:37">!</operator><name pos:start="10:38" pos:end="10:50"><name pos:start="10:38" pos:end="10:39">x2</name><index pos:start="10:40" pos:end="10:50">[<expr pos:start="10:41" pos:end="10:49"><name pos:start="10:41" pos:end="10:41">c</name> <operator pos:start="10:43" pos:end="10:43">-</operator> <name pos:start="10:45" pos:end="10:45">i</name> <operator pos:start="10:47" pos:end="10:47">+</operator> <literal type="number" pos:start="10:49" pos:end="10:49">8</literal></expr>]</index></name> <operator pos:start="10:52" pos:end="10:53">&amp;&amp;</operator> <name pos:start="10:55" pos:end="10:61"><name pos:start="10:55" pos:end="10:55">p</name><index pos:start="10:56" pos:end="10:58">[<expr pos:start="10:57" pos:end="10:57"><name pos:start="10:57" pos:end="10:57">i</name></expr>]</index><index pos:start="10:59" pos:end="10:61">[<expr pos:start="10:60" pos:end="10:60"><name pos:start="10:60" pos:end="10:60">c</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>
<function pos:start="12:1" pos:end="26:1"><type pos:start="12:1" pos:end="12:4"><name pos:start="12:1" pos:end="12:4">void</name></type> <name pos:start="12:6" pos:end="12:8">dfs</name><parameter_list pos:start="12:9" pos:end="12:15">(<parameter pos:start="12:10" pos:end="12:14"><decl pos:start="12:10" pos:end="12:14"><type pos:start="12:10" pos:end="12:12"><name pos:start="12:10" pos:end="12:12">int</name></type> <name pos:start="12:14" pos:end="12:14">c</name></decl></parameter>)</parameter_list> <block pos:start="12:17" pos:end="26:1">{<block_content pos:start="13:5" pos:end="25:5">
    <if_stmt pos:start="13:5" pos:end="16:5"><if pos:start="13:5" pos:end="16:5">if <condition pos:start="13:8" pos:end="13:15">(<expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:9">c</name> <operator pos:start="13:11" pos:end="13:12">==</operator> <name pos:start="13:14" pos:end="13:14">n</name></expr>)</condition> <block pos:start="13:17" pos:end="16:5">{<block_content pos:start="14:9" pos:end="15:15">
        <expr_stmt pos:start="14:9" pos:end="14:14"><expr pos:start="14:9" pos:end="14:13"><name pos:start="14:9" pos:end="14:11">ans</name><operator pos:start="14:12" pos:end="14:13">++</operator></expr>;</expr_stmt>
        <return pos:start="15:9" pos:end="15:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="17:5" pos:end="25:5">for <control pos:start="17:9" pos:end="17:31">(<init pos:start="17:10" pos:end="17:19"><decl pos:start="17:10" pos:end="17:18"><type pos:start="17:10" pos:end="17:12"><name pos:start="17:10" pos:end="17:12">int</name></type> <name pos:start="17:14" pos:end="17:14">i</name> <init pos:start="17:16" pos:end="17:18">= <expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr></init></decl>;</init> <condition pos:start="17:21" pos:end="17:26"><expr pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:21">i</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <literal type="number" pos:start="17:25" pos:end="17:25">8</literal></expr>;</condition> <incr pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:28">i</name><operator pos:start="17:29" pos:end="17:30">++</operator></expr></incr>)</control> <block pos:start="17:33" pos:end="25:5">{<block_content pos:start="18:9" pos:end="24:9">
        <if_stmt pos:start="18:9" pos:end="24:9"><if pos:start="18:9" pos:end="24:9">if <condition pos:start="18:12" pos:end="18:24">(<expr pos:start="18:13" pos:end="18:23"><call pos:start="18:13" pos:end="18:23"><name pos:start="18:13" pos:end="18:17">check</name><argument_list pos:start="18:18" pos:end="18:23">(<argument pos:start="18:19" pos:end="18:19"><expr pos:start="18:19" pos:end="18:19"><name pos:start="18:19" pos:end="18:19">c</name></expr></argument>, <argument pos:start="18:22" pos:end="18:22"><expr pos:start="18:22" pos:end="18:22"><name pos:start="18:22" pos:end="18:22">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="18:26" pos:end="24:9">{<block_content pos:start="19:13" pos:end="23:24">
            <expr_stmt pos:start="19:13" pos:end="19:54"><expr pos:start="19:13" pos:end="19:53"><name pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:15">row</name><index pos:start="19:16" pos:end="19:18">[<expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">i</name></expr>]</index></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:30"><name pos:start="19:22" pos:end="19:23">x1</name><index pos:start="19:24" pos:end="19:30">[<expr pos:start="19:25" pos:end="19:29"><name pos:start="19:25" pos:end="19:25">c</name> <operator pos:start="19:27" pos:end="19:27">+</operator> <name pos:start="19:29" pos:end="19:29">i</name></expr>]</index></name> <operator pos:start="19:32" pos:end="19:32">=</operator> <name pos:start="19:34" pos:end="19:46"><name pos:start="19:34" pos:end="19:35">x2</name><index pos:start="19:36" pos:end="19:46">[<expr pos:start="19:37" pos:end="19:45"><name pos:start="19:37" pos:end="19:37">c</name> <operator pos:start="19:39" pos:end="19:39">-</operator> <name pos:start="19:41" pos:end="19:41">i</name> <operator pos:start="19:43" pos:end="19:43">+</operator> <literal type="number" pos:start="19:45" pos:end="19:45">8</literal></expr>]</index></name> <operator pos:start="19:48" pos:end="19:48">=</operator> <literal type="boolean" pos:start="19:50" pos:end="19:53">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:24"><expr pos:start="20:13" pos:end="20:23"><name pos:start="20:13" pos:end="20:19"><name pos:start="20:13" pos:end="20:13">p</name><index pos:start="20:14" pos:end="20:16">[<expr pos:start="20:15" pos:end="20:15"><name pos:start="20:15" pos:end="20:15">i</name></expr>]</index><index pos:start="20:17" pos:end="20:19">[<expr pos:start="20:18" pos:end="20:18"><name pos:start="20:18" pos:end="20:18">c</name></expr>]</index></name> <operator pos:start="20:21" pos:end="20:21">=</operator> <literal type="number" pos:start="20:23" pos:end="20:23">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:23"><expr pos:start="21:13" pos:end="21:22"><call pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:15">dfs</name><argument_list pos:start="21:16" pos:end="21:22">(<argument pos:start="21:17" pos:end="21:21"><expr pos:start="21:17" pos:end="21:21"><name pos:start="21:17" pos:end="21:17">c</name> <operator pos:start="21:19" pos:end="21:19">+</operator> <literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:55"><expr pos:start="22:13" pos:end="22:54"><name pos:start="22:13" pos:end="22:18"><name pos:start="22:13" pos:end="22:15">row</name><index pos:start="22:16" pos:end="22:18">[<expr pos:start="22:17" pos:end="22:17"><name pos:start="22:17" pos:end="22:17">i</name></expr>]</index></name> <operator pos:start="22:20" pos:end="22:20">=</operator> <name pos:start="22:22" pos:end="22:30"><name pos:start="22:22" pos:end="22:23">x1</name><index pos:start="22:24" pos:end="22:30">[<expr pos:start="22:25" pos:end="22:29"><name pos:start="22:25" pos:end="22:25">c</name> <operator pos:start="22:27" pos:end="22:27">+</operator> <name pos:start="22:29" pos:end="22:29">i</name></expr>]</index></name> <operator pos:start="22:32" pos:end="22:32">=</operator> <name pos:start="22:34" pos:end="22:46"><name pos:start="22:34" pos:end="22:35">x2</name><index pos:start="22:36" pos:end="22:46">[<expr pos:start="22:37" pos:end="22:45"><name pos:start="22:37" pos:end="22:37">c</name> <operator pos:start="22:39" pos:end="22:39">-</operator> <name pos:start="22:41" pos:end="22:41">i</name> <operator pos:start="22:43" pos:end="22:43">+</operator> <literal type="number" pos:start="22:45" pos:end="22:45">8</literal></expr>]</index></name> <operator pos:start="22:48" pos:end="22:48">=</operator> <literal type="boolean" pos:start="22:50" pos:end="22:54">false</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:24"><expr pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:13">p</name><index pos:start="23:14" pos:end="23:16">[<expr pos:start="23:15" pos:end="23:15"><name pos:start="23:15" pos:end="23:15">i</name></expr>]</index><index pos:start="23:17" pos:end="23:19">[<expr pos:start="23:18" pos:end="23:18"><name pos:start="23:18" pos:end="23:18">c</name></expr>]</index></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <literal type="number" pos:start="23:23" pos:end="23:23">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="27:1" pos:end="43:1"><type pos:start="27:1" pos:end="27:3"><name pos:start="27:1" pos:end="27:3">int</name></type> <name pos:start="27:5" pos:end="27:8">main</name><parameter_list pos:start="27:9" pos:end="27:10">()</parameter_list> <block pos:start="27:12" pos:end="43:1">{<block_content pos:start="28:5" pos:end="42:13">
    <expr_stmt pos:start="28:5" pos:end="28:37"><expr pos:start="28:5" pos:end="28:36"><call pos:start="28:5" pos:end="28:36"><name pos:start="28:5" pos:end="28:11">freopen</name> <argument_list pos:start="28:13" pos:end="28:36">(<argument pos:start="28:14" pos:end="28:23"><expr pos:start="28:14" pos:end="28:23"><literal type="string" pos:start="28:14" pos:end="28:23">"queen.in"</literal></expr></argument>, <argument pos:start="28:26" pos:end="28:28"><expr pos:start="28:26" pos:end="28:28"><literal type="string" pos:start="28:26" pos:end="28:28">"r"</literal></expr></argument>, <argument pos:start="28:31" pos:end="28:35"><expr pos:start="28:31" pos:end="28:35"><name pos:start="28:31" pos:end="28:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><call pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:11">freopen</name> <argument_list pos:start="29:13" pos:end="29:38">(<argument pos:start="29:14" pos:end="29:24"><expr pos:start="29:14" pos:end="29:24"><literal type="string" pos:start="29:14" pos:end="29:24">"queen.out"</literal></expr></argument>, <argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><literal type="string" pos:start="29:27" pos:end="29:29">"w"</literal></expr></argument>, <argument pos:start="29:32" pos:end="29:37"><expr pos:start="29:32" pos:end="29:37"><name pos:start="29:32" pos:end="29:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:13"><expr pos:start="30:5" pos:end="30:12"><name pos:start="30:5" pos:end="30:7">cin</name> <operator pos:start="30:9" pos:end="30:10">&gt;&gt;</operator> <name pos:start="30:12" pos:end="30:12">n</name></expr>;</expr_stmt>
    <for pos:start="31:5" pos:end="35:5">for <control pos:start="31:9" pos:end="31:31">(<init pos:start="31:10" pos:end="31:19"><decl pos:start="31:10" pos:end="31:18"><type pos:start="31:10" pos:end="31:12"><name pos:start="31:10" pos:end="31:12">int</name></type> <name pos:start="31:14" pos:end="31:14">i</name> <init pos:start="31:16" pos:end="31:18">= <expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr></init></decl>;</init> <condition pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:25">n</name></expr>;</condition> <incr pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:28">i</name><operator pos:start="31:29" pos:end="31:30">++</operator></expr></incr>)</control> <block pos:start="31:33" pos:end="35:5">{<block_content pos:start="32:9" pos:end="34:9">
        <for pos:start="32:9" pos:end="34:9">for <control pos:start="32:13" pos:end="32:35">(<init pos:start="32:14" pos:end="32:23"><decl pos:start="32:14" pos:end="32:22"><type pos:start="32:14" pos:end="32:16"><name pos:start="32:14" pos:end="32:16">int</name></type> <name pos:start="32:18" pos:end="32:18">j</name> <init pos:start="32:20" pos:end="32:22">= <expr pos:start="32:22" pos:end="32:22"><literal type="number" pos:start="32:22" pos:end="32:22">0</literal></expr></init></decl>;</init> <condition pos:start="32:25" pos:end="32:30"><expr pos:start="32:25" pos:end="32:29"><name pos:start="32:25" pos:end="32:25">j</name> <operator pos:start="32:27" pos:end="32:27">&lt;</operator> <name pos:start="32:29" pos:end="32:29">n</name></expr>;</condition> <incr pos:start="32:32" pos:end="32:34"><expr pos:start="32:32" pos:end="32:34"><name pos:start="32:32" pos:end="32:32">j</name><operator pos:start="32:33" pos:end="32:34">++</operator></expr></incr>)</control> <block pos:start="32:37" pos:end="34:9">{<block_content pos:start="33:13" pos:end="33:27">
            <expr_stmt pos:start="33:13" pos:end="33:27"><expr pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:15">cin</name> <operator pos:start="33:17" pos:end="33:18">&gt;&gt;</operator> <name pos:start="33:20" pos:end="33:26"><name pos:start="33:20" pos:end="33:20">p</name><index pos:start="33:21" pos:end="33:23">[<expr pos:start="33:22" pos:end="33:22"><name pos:start="33:22" pos:end="33:22">i</name></expr>]</index><index pos:start="33:24" pos:end="33:26">[<expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="36:5" pos:end="36:11"><expr pos:start="36:5" pos:end="36:10"><call pos:start="36:5" pos:end="36:10"><name pos:start="36:5" pos:end="36:7">dfs</name><argument_list pos:start="36:8" pos:end="36:10">(<argument pos:start="36:9" pos:end="36:9"><expr pos:start="36:9" pos:end="36:9"><literal type="number" pos:start="36:9" pos:end="36:9">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:32"><expr pos:start="37:5" pos:end="37:31"><call pos:start="37:5" pos:end="37:31"><name pos:start="37:5" pos:end="37:10">memset</name><argument_list pos:start="37:11" pos:end="37:31">(<argument pos:start="37:12" pos:end="37:14"><expr pos:start="37:12" pos:end="37:14"><name pos:start="37:12" pos:end="37:14">row</name></expr></argument>, <argument pos:start="37:17" pos:end="37:17"><expr pos:start="37:17" pos:end="37:17"><literal type="number" pos:start="37:17" pos:end="37:17">0</literal></expr></argument>, <argument pos:start="37:20" pos:end="37:30"><expr pos:start="37:20" pos:end="37:30"><sizeof pos:start="37:20" pos:end="37:30">sizeof<argument_list pos:start="37:26" pos:end="37:30">(<argument pos:start="37:27" pos:end="37:29"><expr pos:start="37:27" pos:end="37:29"><name pos:start="37:27" pos:end="37:29">row</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:30"><expr pos:start="38:5" pos:end="38:29"><call pos:start="38:5" pos:end="38:29"><name pos:start="38:5" pos:end="38:10">memset</name><argument_list pos:start="38:11" pos:end="38:29">(<argument pos:start="38:12" pos:end="38:13"><expr pos:start="38:12" pos:end="38:13"><name pos:start="38:12" pos:end="38:13">x1</name></expr></argument>, <argument pos:start="38:16" pos:end="38:16"><expr pos:start="38:16" pos:end="38:16"><literal type="number" pos:start="38:16" pos:end="38:16">0</literal></expr></argument>, <argument pos:start="38:19" pos:end="38:28"><expr pos:start="38:19" pos:end="38:28"><sizeof pos:start="38:19" pos:end="38:28">sizeof<argument_list pos:start="38:25" pos:end="38:28">(<argument pos:start="38:26" pos:end="38:27"><expr pos:start="38:26" pos:end="38:27"><name pos:start="38:26" pos:end="38:27">x1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:30"><expr pos:start="39:5" pos:end="39:29"><call pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:10">memset</name><argument_list pos:start="39:11" pos:end="39:29">(<argument pos:start="39:12" pos:end="39:13"><expr pos:start="39:12" pos:end="39:13"><name pos:start="39:12" pos:end="39:13">x2</name></expr></argument>, <argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr></argument>, <argument pos:start="39:19" pos:end="39:28"><expr pos:start="39:19" pos:end="39:28"><sizeof pos:start="39:19" pos:end="39:28">sizeof<argument_list pos:start="39:25" pos:end="39:28">(<argument pos:start="39:26" pos:end="39:27"><expr pos:start="39:26" pos:end="39:27"><name pos:start="39:26" pos:end="39:27">x2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:11"><expr pos:start="40:5" pos:end="40:10"><call pos:start="40:5" pos:end="40:10"><name pos:start="40:5" pos:end="40:7">dfs</name><argument_list pos:start="40:8" pos:end="40:10">(<argument pos:start="40:9" pos:end="40:9"><expr pos:start="40:9" pos:end="40:9"><literal type="number" pos:start="40:9" pos:end="40:9">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:24"><expr pos:start="41:5" pos:end="41:23"><name pos:start="41:5" pos:end="41:8">cout</name> <operator pos:start="41:10" pos:end="41:11">&lt;&lt;</operator> <name pos:start="41:13" pos:end="41:15">ans</name> <operator pos:start="41:17" pos:end="41:18">&lt;&lt;</operator> <name pos:start="41:20" pos:end="41:23">endl</name></expr>;</expr_stmt>
    <return pos:start="42:5" pos:end="42:13">return <expr pos:start="42:12" pos:end="42:12"><literal type="number" pos:start="42:12" pos:end="42:12">0</literal></expr>;</return>    
</block_content>}</block></function>
</unit>
