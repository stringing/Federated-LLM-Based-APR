<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/342/342.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:48"><decl pos:start="3:1" pos:end="3:17"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:13">postOrder</name><index pos:start="3:14" pos:end="3:17">[<expr pos:start="3:15" pos:end="3:16"><literal type="number" pos:start="3:15" pos:end="3:16">35</literal></expr>]</index></name></decl>,<decl pos:start="3:19" pos:end="3:29"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:19" pos:end="3:29"><name pos:start="3:19" pos:end="3:25">inOrder</name><index pos:start="3:26" pos:end="3:29">[<expr pos:start="3:27" pos:end="3:28"><literal type="number" pos:start="3:27" pos:end="3:28">35</literal></expr>]</index></name></decl>,<decl pos:start="3:31" pos:end="3:37"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:31" pos:end="3:37"><name pos:start="3:31" pos:end="3:31">l</name><index pos:start="3:32" pos:end="3:37">[<expr pos:start="3:33" pos:end="3:36"><literal type="number" pos:start="3:33" pos:end="3:36">1010</literal></expr>]</index></name></decl>,<decl pos:start="3:39" pos:end="3:45"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:39" pos:end="3:45"><name pos:start="3:39" pos:end="3:39">r</name><index pos:start="3:40" pos:end="3:45">[<expr pos:start="3:41" pos:end="3:44"><literal type="number" pos:start="3:41" pos:end="3:44">1010</literal></expr>]</index></name></decl>,<decl pos:start="3:47" pos:end="3:47"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:47" pos:end="3:47">n</name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="21:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:7">dfs</name><parameter_list pos:start="4:8" pos:end="4:28">(<parameter pos:start="4:9" pos:end="4:13"><decl pos:start="4:9" pos:end="4:13"><type pos:start="4:9" pos:end="4:13"><name pos:start="4:9" pos:end="4:11">int</name></type> <name pos:start="4:13" pos:end="4:13">x</name></decl></parameter>,<parameter pos:start="4:15" pos:end="4:19"><decl pos:start="4:15" pos:end="4:19"><type pos:start="4:15" pos:end="4:19"><name pos:start="4:15" pos:end="4:17">int</name></type> <name pos:start="4:19" pos:end="4:19">y</name></decl></parameter>,<parameter pos:start="4:21" pos:end="4:27"><decl pos:start="4:21" pos:end="4:27"><type pos:start="4:21" pos:end="4:27"><name pos:start="4:21" pos:end="4:23">int</name></type> <name pos:start="4:25" pos:end="4:27">len</name></decl></parameter>)</parameter_list>
<block pos:start="5:1" pos:end="21:1">{<block_content pos:start="6:5" pos:end="20:24">
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:10"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:10">rl</name></decl>,<decl pos:start="6:12" pos:end="6:12"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:12" pos:end="6:12">p</name></decl>;</decl_stmt>
    <if_stmt pos:start="7:5" pos:end="8:17"><if pos:start="7:5" pos:end="8:17">if<condition pos:start="7:7" pos:end="7:14">(<expr pos:start="7:8" pos:end="7:13"><name pos:start="7:8" pos:end="7:10">len</name><operator pos:start="7:11" pos:end="7:12">==</operator><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr>)</condition><block type="pseudo" pos:start="8:9" pos:end="8:17"><block_content pos:start="8:9" pos:end="8:17">
        <return pos:start="8:9" pos:end="8:17">return <expr pos:start="8:16" pos:end="8:16"><literal type="number" pos:start="8:16" pos:end="8:16">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <for pos:start="9:5" pos:end="17:5">for<control pos:start="9:8" pos:end="9:24">(<init pos:start="9:9" pos:end="9:16"><decl pos:start="9:9" pos:end="9:15"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">i</name><init pos:start="9:14" pos:end="9:15">=<expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</init><condition pos:start="9:17" pos:end="9:20"><expr pos:start="9:17" pos:end="9:19"><name pos:start="9:17" pos:end="9:17">i</name><operator pos:start="9:18" pos:end="9:18">&lt;</operator><name pos:start="9:19" pos:end="9:19">n</name></expr>;</condition><incr pos:start="9:21" pos:end="9:23"><expr pos:start="9:21" pos:end="9:23"><name pos:start="9:21" pos:end="9:21">i</name><operator pos:start="9:22" pos:end="9:23">++</operator></expr></incr>)</control>
    <block pos:start="10:5" pos:end="17:5">{<block_content pos:start="11:9" pos:end="16:9">
        <if_stmt pos:start="11:9" pos:end="16:9"><if pos:start="11:9" pos:end="16:9">if<condition pos:start="11:11" pos:end="11:36">(<expr pos:start="11:12" pos:end="11:35"><name pos:start="11:12" pos:end="11:21"><name pos:start="11:12" pos:end="11:18">inOrder</name><index pos:start="11:19" pos:end="11:21">[<expr pos:start="11:20" pos:end="11:20"><name pos:start="11:20" pos:end="11:20">i</name></expr>]</index></name><operator pos:start="11:22" pos:end="11:23">==</operator><name pos:start="11:24" pos:end="11:35"><name pos:start="11:24" pos:end="11:32">postOrder</name><index pos:start="11:33" pos:end="11:35">[<expr pos:start="11:34" pos:end="11:34"><name pos:start="11:34" pos:end="11:34">x</name></expr>]</index></name></expr>)</condition>
        <block pos:start="12:9" pos:end="16:9">{<block_content pos:start="13:13" pos:end="15:18">
            <expr_stmt pos:start="13:13" pos:end="13:19"><expr pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:14">rl</name><operator pos:start="13:15" pos:end="13:15">=</operator><name pos:start="13:16" pos:end="13:16">y</name><operator pos:start="13:17" pos:end="13:17">-</operator><name pos:start="13:18" pos:end="13:18">i</name></expr>;</expr_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:16"><expr pos:start="14:13" pos:end="14:15"><name pos:start="14:13" pos:end="14:13">p</name><operator pos:start="14:14" pos:end="14:14">=</operator><name pos:start="14:15" pos:end="14:15">i</name></expr>;</expr_stmt>
            <break pos:start="15:13" pos:end="15:18">break;</break>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="18:5" pos:end="18:34"><expr pos:start="18:5" pos:end="18:33"><name pos:start="18:5" pos:end="18:19"><name pos:start="18:5" pos:end="18:5">r</name><index pos:start="18:6" pos:end="18:19">[<expr pos:start="18:7" pos:end="18:18"><name pos:start="18:7" pos:end="18:18"><name pos:start="18:7" pos:end="18:15">postOrder</name><index pos:start="18:16" pos:end="18:18">[<expr pos:start="18:17" pos:end="18:17"><name pos:start="18:17" pos:end="18:17">x</name></expr>]</index></name></expr>]</index></name><operator pos:start="18:20" pos:end="18:20">=</operator><call pos:start="18:21" pos:end="18:33"><name pos:start="18:21" pos:end="18:23">dfs</name><argument_list pos:start="18:24" pos:end="18:33">(<argument pos:start="18:25" pos:end="18:27"><expr pos:start="18:25" pos:end="18:27"><name pos:start="18:25" pos:end="18:25">x</name><operator pos:start="18:26" pos:end="18:26">-</operator><literal type="number" pos:start="18:27" pos:end="18:27">1</literal></expr></argument>,<argument pos:start="18:29" pos:end="18:29"><expr pos:start="18:29" pos:end="18:29"><name pos:start="18:29" pos:end="18:29">y</name></expr></argument>,<argument pos:start="18:31" pos:end="18:32"><expr pos:start="18:31" pos:end="18:32"><name pos:start="18:31" pos:end="18:32">rl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:5">l</name><index pos:start="19:6" pos:end="19:19">[<expr pos:start="19:7" pos:end="19:18"><name pos:start="19:7" pos:end="19:18"><name pos:start="19:7" pos:end="19:15">postOrder</name><index pos:start="19:16" pos:end="19:18">[<expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">x</name></expr>]</index></name></expr>]</index></name><operator pos:start="19:20" pos:end="19:20">=</operator><call pos:start="19:21" pos:end="19:44"><name pos:start="19:21" pos:end="19:23">dfs</name><argument_list pos:start="19:24" pos:end="19:44">(<argument pos:start="19:25" pos:end="19:30"><expr pos:start="19:25" pos:end="19:30"><name pos:start="19:25" pos:end="19:25">x</name><operator pos:start="19:26" pos:end="19:26">-</operator><literal type="number" pos:start="19:27" pos:end="19:28">1</literal><operator pos:start="19:28" pos:end="19:28">-</operator><name pos:start="19:29" pos:end="19:30">rl</name></expr></argument>,<argument pos:start="19:32" pos:end="19:34"><expr pos:start="19:32" pos:end="19:34"><name pos:start="19:32" pos:end="19:32">p</name><operator pos:start="19:33" pos:end="19:33">-</operator><literal type="number" pos:start="19:34" pos:end="19:34">1</literal></expr></argument>,<argument pos:start="19:36" pos:end="19:43"><expr pos:start="19:36" pos:end="19:43"><name pos:start="19:36" pos:end="19:38">len</name><operator pos:start="19:39" pos:end="19:39">-</operator><name pos:start="19:40" pos:end="19:41">rl</name><operator pos:start="19:42" pos:end="19:42">-</operator><literal type="number" pos:start="19:43" pos:end="19:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="20:5" pos:end="20:24">return <expr pos:start="20:12" pos:end="20:23"><name pos:start="20:12" pos:end="20:23"><name pos:start="20:12" pos:end="20:20">postOrder</name><index pos:start="20:21" pos:end="20:23">[<expr pos:start="20:22" pos:end="20:22"><name pos:start="20:22" pos:end="20:22">x</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>
<function pos:start="22:1" pos:end="40:1"><type pos:start="22:1" pos:end="22:3"><name pos:start="22:1" pos:end="22:3">int</name></type> <name pos:start="22:5" pos:end="22:8">main</name><parameter_list pos:start="22:9" pos:end="22:10">()</parameter_list>
<block pos:start="23:1" pos:end="40:1">{<block_content pos:start="24:5" pos:end="39:5">
    <expr_stmt pos:start="24:5" pos:end="24:33"><expr pos:start="24:5" pos:end="24:32"><call pos:start="24:5" pos:end="24:32"><name pos:start="24:5" pos:end="24:11">freopen</name><argument_list pos:start="24:12" pos:end="24:32">(<argument pos:start="24:13" pos:end="24:21"><expr pos:start="24:13" pos:end="24:21"><literal type="string" pos:start="24:13" pos:end="24:21">"sort.in"</literal></expr></argument>,<argument pos:start="24:23" pos:end="24:25"><expr pos:start="24:23" pos:end="24:25"><literal type="string" pos:start="24:23" pos:end="24:25">"r"</literal></expr></argument>,<argument pos:start="24:27" pos:end="24:31"><expr pos:start="24:27" pos:end="24:31"><name pos:start="24:27" pos:end="24:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><call pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:11">freopen</name><argument_list pos:start="25:12" pos:end="25:34">(<argument pos:start="25:13" pos:end="25:22"><expr pos:start="25:13" pos:end="25:22"><literal type="string" pos:start="25:13" pos:end="25:22">"sort.out"</literal></expr></argument>,<argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><literal type="string" pos:start="25:24" pos:end="25:26">"w"</literal></expr></argument>,<argument pos:start="25:28" pos:end="25:33"><expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:11"><expr pos:start="26:5" pos:end="26:10"><name pos:start="26:5" pos:end="26:7">cin</name><operator pos:start="26:8" pos:end="26:9">&gt;&gt;</operator><name pos:start="26:10" pos:end="26:10">n</name></expr>;</expr_stmt>
    <for pos:start="27:5" pos:end="30:5">for<control pos:start="27:8" pos:end="27:24">(<init pos:start="27:9" pos:end="27:16"><decl pos:start="27:9" pos:end="27:15"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">i</name><init pos:start="27:14" pos:end="27:15">=<expr pos:start="27:15" pos:end="27:15"><literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr></init></decl>;</init><condition pos:start="27:17" pos:end="27:20"><expr pos:start="27:17" pos:end="27:19"><name pos:start="27:17" pos:end="27:17">i</name><operator pos:start="27:18" pos:end="27:18">&lt;</operator><name pos:start="27:19" pos:end="27:19">n</name></expr>;</condition><incr pos:start="27:21" pos:end="27:23"><expr pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:21">i</name><operator pos:start="27:22" pos:end="27:23">++</operator></expr></incr>)</control>
    <block pos:start="28:5" pos:end="30:5">{<block_content pos:start="29:9" pos:end="29:26">
        <expr_stmt pos:start="29:9" pos:end="29:26"><expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:11">cin</name><operator pos:start="29:12" pos:end="29:13">&gt;&gt;</operator><name pos:start="29:14" pos:end="29:25"><name pos:start="29:14" pos:end="29:22">postOrder</name><index pos:start="29:23" pos:end="29:25">[<expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="31:5" pos:end="34:5">for<control pos:start="31:8" pos:end="31:24">(<init pos:start="31:9" pos:end="31:16"><decl pos:start="31:9" pos:end="31:15"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name><init pos:start="31:14" pos:end="31:15">=<expr pos:start="31:15" pos:end="31:15"><literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr></init></decl>;</init><condition pos:start="31:17" pos:end="31:20"><expr pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:17">i</name><operator pos:start="31:18" pos:end="31:18">&lt;</operator><name pos:start="31:19" pos:end="31:19">n</name></expr>;</condition><incr pos:start="31:21" pos:end="31:23"><expr pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:21">i</name><operator pos:start="31:22" pos:end="31:23">++</operator></expr></incr>)</control>
    <block pos:start="32:5" pos:end="34:5">{<block_content pos:start="33:9" pos:end="33:24">
        <expr_stmt pos:start="33:9" pos:end="33:24"><expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:11">cin</name><operator pos:start="33:12" pos:end="33:13">&gt;&gt;</operator><name pos:start="33:14" pos:end="33:23"><name pos:start="33:14" pos:end="33:20">inOrder</name><index pos:start="33:21" pos:end="33:23">[<expr pos:start="33:22" pos:end="33:22"><name pos:start="33:22" pos:end="33:22">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="35:5" pos:end="35:22"><decl pos:start="35:5" pos:end="35:21"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:10">nq</name><init pos:start="35:11" pos:end="35:21">=<expr pos:start="35:12" pos:end="35:21"><call pos:start="35:12" pos:end="35:21"><name pos:start="35:12" pos:end="35:14">dfs</name><argument_list pos:start="35:15" pos:end="35:21">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">n</name></expr></argument>,<argument pos:start="35:18" pos:end="35:18"><expr pos:start="35:18" pos:end="35:18"><name pos:start="35:18" pos:end="35:18">n</name></expr></argument>,<argument pos:start="35:20" pos:end="35:20"><expr pos:start="35:20" pos:end="35:20"><name pos:start="35:20" pos:end="35:20">n</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for pos:start="36:5" pos:end="39:5">for<control pos:start="36:8" pos:end="36:24">(<init pos:start="36:9" pos:end="36:16"><decl pos:start="36:9" pos:end="36:15"><type pos:start="36:9" pos:end="36:11"><name pos:start="36:9" pos:end="36:11">int</name></type> <name pos:start="36:13" pos:end="36:13">i</name><init pos:start="36:14" pos:end="36:15">=<expr pos:start="36:15" pos:end="36:15"><literal type="number" pos:start="36:15" pos:end="36:15">0</literal></expr></init></decl>;</init><condition pos:start="36:17" pos:end="36:20"><expr pos:start="36:17" pos:end="36:19"><name pos:start="36:17" pos:end="36:17">i</name><operator pos:start="36:18" pos:end="36:18">&lt;</operator><name pos:start="36:19" pos:end="36:19">n</name></expr>;</condition><incr pos:start="36:21" pos:end="36:23"><expr pos:start="36:21" pos:end="36:23"><name pos:start="36:21" pos:end="36:21">i</name><operator pos:start="36:22" pos:end="36:23">++</operator></expr></incr>)</control>
    <block pos:start="37:5" pos:end="39:5">{<block_content pos:start="38:9" pos:end="38:58">
        <expr_stmt pos:start="38:9" pos:end="38:58"><expr pos:start="38:9" pos:end="38:57"><name pos:start="38:9" pos:end="38:12">cout</name><operator pos:start="38:13" pos:end="38:14">&lt;&lt;</operator><name pos:start="38:15" pos:end="38:29"><name pos:start="38:15" pos:end="38:15">l</name><index pos:start="38:16" pos:end="38:29">[<expr pos:start="38:17" pos:end="38:28"><name pos:start="38:17" pos:end="38:28"><name pos:start="38:17" pos:end="38:25">postOrder</name><index pos:start="38:26" pos:end="38:28">[<expr pos:start="38:27" pos:end="38:27"><name pos:start="38:27" pos:end="38:27">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="38:30" pos:end="38:31">&lt;&lt;</operator><literal type="string" pos:start="38:32" pos:end="38:34">" "</literal><operator pos:start="38:35" pos:end="38:36">&lt;&lt;</operator><name pos:start="38:37" pos:end="38:51"><name pos:start="38:37" pos:end="38:37">r</name><index pos:start="38:38" pos:end="38:51">[<expr pos:start="38:39" pos:end="38:50"><name pos:start="38:39" pos:end="38:50"><name pos:start="38:39" pos:end="38:47">postOrder</name><index pos:start="38:48" pos:end="38:50">[<expr pos:start="38:49" pos:end="38:49"><name pos:start="38:49" pos:end="38:49">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="38:52" pos:end="38:53">&lt;&lt;</operator><name pos:start="38:54" pos:end="38:57">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
</unit>
