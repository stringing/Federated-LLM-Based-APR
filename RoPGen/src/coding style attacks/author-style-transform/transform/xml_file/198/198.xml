<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/198/198.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:16">&lt;stack&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:17">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:19">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<function pos:start="6:1" pos:end="64:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list> <block pos:start="6:12" pos:end="64:1">{<block_content pos:start="7:5" pos:end="63:13">
    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:9">stack</name><argument_list type="generic" pos:start="7:10" pos:end="7:14">&lt;<argument pos:start="7:11" pos:end="7:13"><expr pos:start="7:11" pos:end="7:13"><name pos:start="7:11" pos:end="7:13">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="7:15" pos:end="7:16">s1</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:17"><decl pos:start="8:5" pos:end="8:16"><type pos:start="8:5" pos:end="8:14"><name pos:start="8:5" pos:end="8:14"><name pos:start="8:5" pos:end="8:9">stack</name><argument_list type="generic" pos:start="8:10" pos:end="8:14">&lt;<argument pos:start="8:11" pos:end="8:13"><expr pos:start="8:11" pos:end="8:13"><name pos:start="8:11" pos:end="8:13">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="8:15" pos:end="8:16">s2</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:10">a</name></decl>,<decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:8"/><name pos:start="9:12" pos:end="9:12">b</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:10"><decl pos:start="10:5" pos:end="10:9"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">c</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:11"><expr pos:start="12:5" pos:end="12:10"><name pos:start="12:5" pos:end="12:7">cin</name><operator pos:start="12:8" pos:end="12:9">&gt;&gt;</operator><name pos:start="12:10" pos:end="12:10">n</name></expr>;</expr_stmt>
    <for pos:start="13:5" pos:end="44:5">for<control pos:start="13:8" pos:end="13:24">(<init pos:start="13:9" pos:end="13:16"><decl pos:start="13:9" pos:end="13:15"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name><init pos:start="13:14" pos:end="13:15">=<expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</init><condition pos:start="13:17" pos:end="13:20"><expr pos:start="13:17" pos:end="13:19"><name pos:start="13:17" pos:end="13:17">i</name><operator pos:start="13:18" pos:end="13:18">&lt;</operator><name pos:start="13:19" pos:end="13:19">n</name></expr>;</condition><incr pos:start="13:21" pos:end="13:23"><expr pos:start="13:21" pos:end="13:23"><name pos:start="13:21" pos:end="13:21">i</name><operator pos:start="13:22" pos:end="13:23">++</operator></expr></incr>)</control><block pos:start="13:25" pos:end="44:5">{<block_content pos:start="14:9" pos:end="43:9">
        <expr_stmt pos:start="14:9" pos:end="14:18"><expr pos:start="14:9" pos:end="14:17"><name pos:start="14:9" pos:end="14:11">cin</name><operator pos:start="14:12" pos:end="14:13">&gt;&gt;</operator><name pos:start="14:14" pos:end="14:14">a</name><operator pos:start="14:15" pos:end="14:16">&gt;&gt;</operator><name pos:start="14:17" pos:end="14:17">b</name></expr>;</expr_stmt>
        <if_stmt pos:start="15:9" pos:end="43:9"><if pos:start="15:9" pos:end="29:9">if<condition pos:start="15:11" pos:end="15:18">(<expr pos:start="15:12" pos:end="15:17"><name pos:start="15:12" pos:end="15:12">a</name><operator pos:start="15:13" pos:end="15:14">==</operator><literal type="char" pos:start="15:15" pos:end="15:17">'A'</literal></expr>)</condition><block pos:start="15:19" pos:end="29:9">{<block_content pos:start="16:13" pos:end="28:13">
            <if_stmt pos:start="16:13" pos:end="28:13"><if pos:start="16:13" pos:end="19:13">if<condition pos:start="16:15" pos:end="16:22">(<expr pos:start="16:16" pos:end="16:21"><name pos:start="16:16" pos:end="16:16">b</name><operator pos:start="16:17" pos:end="16:18">==</operator><literal type="char" pos:start="16:19" pos:end="16:21">'I'</literal></expr>)</condition><block pos:start="16:23" pos:end="19:13">{<block_content pos:start="17:17" pos:end="18:27">
                <expr_stmt pos:start="17:17" pos:end="17:23"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:19">cin</name><operator pos:start="17:20" pos:end="17:21">&gt;&gt;</operator><name pos:start="17:22" pos:end="17:22">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="18:17" pos:end="18:27"><expr pos:start="18:17" pos:end="18:26"><call pos:start="18:17" pos:end="18:26"><name pos:start="18:17" pos:end="18:23"><name pos:start="18:17" pos:end="18:18">s1</name><operator pos:start="18:19" pos:end="18:19">.</operator><name pos:start="18:20" pos:end="18:23">push</name></name><argument_list pos:start="18:24" pos:end="18:26">(<argument pos:start="18:25" pos:end="18:25"><expr pos:start="18:25" pos:end="18:25"><name pos:start="18:25" pos:end="18:25">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="19:14" pos:end="23:13">else if<condition pos:start="19:21" pos:end="19:28">(<expr pos:start="19:22" pos:end="19:27"><name pos:start="19:22" pos:end="19:22">b</name><operator pos:start="19:23" pos:end="19:24">==</operator><literal type="char" pos:start="19:25" pos:end="19:27">'D'</literal></expr>)</condition><block pos:start="19:29" pos:end="23:13">{<block_content pos:start="20:17" pos:end="22:17">
                <if_stmt pos:start="20:17" pos:end="22:17"><if pos:start="20:17" pos:end="22:17">if<condition pos:start="20:19" pos:end="20:31">(<expr pos:start="20:20" pos:end="20:30"><operator pos:start="20:20" pos:end="20:20">!</operator><call pos:start="20:21" pos:end="20:30"><name pos:start="20:21" pos:end="20:28"><name pos:start="20:21" pos:end="20:22">s1</name><operator pos:start="20:23" pos:end="20:23">.</operator><name pos:start="20:24" pos:end="20:28">empty</name></name><argument_list pos:start="20:29" pos:end="20:30">()</argument_list></call></expr>)</condition><block pos:start="20:32" pos:end="22:17">{<block_content pos:start="21:21" pos:end="21:29">
                    <expr_stmt pos:start="21:21" pos:end="21:29"><expr pos:start="21:21" pos:end="21:28"><call pos:start="21:21" pos:end="21:28"><name pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:22">s1</name><operator pos:start="21:23" pos:end="21:23">.</operator><name pos:start="21:24" pos:end="21:26">pop</name></name><argument_list pos:start="21:27" pos:end="21:28">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if><else pos:start="23:14" pos:end="28:13">else<block pos:start="23:18" pos:end="28:13">{<block_content pos:start="24:17" pos:end="27:17">
                <while pos:start="24:17" pos:end="27:17">while<condition pos:start="24:22" pos:end="24:34">(<expr pos:start="24:23" pos:end="24:33"><operator pos:start="24:23" pos:end="24:23">!</operator><call pos:start="24:24" pos:end="24:33"><name pos:start="24:24" pos:end="24:31"><name pos:start="24:24" pos:end="24:25">s2</name><operator pos:start="24:26" pos:end="24:26">.</operator><name pos:start="24:27" pos:end="24:31">empty</name></name><argument_list pos:start="24:32" pos:end="24:33">()</argument_list></call></expr>)</condition><block pos:start="24:35" pos:end="27:17">{<block_content pos:start="25:21" pos:end="26:29">
                    <expr_stmt pos:start="25:21" pos:end="25:38"><expr pos:start="25:21" pos:end="25:37"><call pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:27"><name pos:start="25:21" pos:end="25:22">s1</name><operator pos:start="25:23" pos:end="25:23">.</operator><name pos:start="25:24" pos:end="25:27">push</name></name><argument_list pos:start="25:28" pos:end="25:37">(<argument pos:start="25:29" pos:end="25:36"><expr pos:start="25:29" pos:end="25:36"><call pos:start="25:29" pos:end="25:36"><name pos:start="25:29" pos:end="25:34"><name pos:start="25:29" pos:end="25:30">s2</name><operator pos:start="25:31" pos:end="25:31">.</operator><name pos:start="25:32" pos:end="25:34">top</name></name><argument_list pos:start="25:35" pos:end="25:36">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="26:21" pos:end="26:29"><expr pos:start="26:21" pos:end="26:28"><call pos:start="26:21" pos:end="26:28"><name pos:start="26:21" pos:end="26:26"><name pos:start="26:21" pos:end="26:22">s2</name><operator pos:start="26:23" pos:end="26:23">.</operator><name pos:start="26:24" pos:end="26:26">pop</name></name><argument_list pos:start="26:27" pos:end="26:28">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if><else pos:start="29:10" pos:end="43:9">else<block pos:start="29:14" pos:end="43:9">{<block_content pos:start="30:12" pos:end="42:13">
           <if_stmt pos:start="30:12" pos:end="42:13"><if pos:start="30:12" pos:end="33:13">if<condition pos:start="30:14" pos:end="30:21">(<expr pos:start="30:15" pos:end="30:20"><name pos:start="30:15" pos:end="30:15">b</name><operator pos:start="30:16" pos:end="30:17">==</operator><literal type="char" pos:start="30:18" pos:end="30:20">'I'</literal></expr>)</condition><block pos:start="30:22" pos:end="33:13">{<block_content pos:start="31:17" pos:end="32:27">
                <expr_stmt pos:start="31:17" pos:end="31:23"><expr pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:19">cin</name><operator pos:start="31:20" pos:end="31:21">&gt;&gt;</operator><name pos:start="31:22" pos:end="31:22">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="32:17" pos:end="32:27"><expr pos:start="32:17" pos:end="32:26"><call pos:start="32:17" pos:end="32:26"><name pos:start="32:17" pos:end="32:23"><name pos:start="32:17" pos:end="32:18">s2</name><operator pos:start="32:19" pos:end="32:19">.</operator><name pos:start="32:20" pos:end="32:23">push</name></name><argument_list pos:start="32:24" pos:end="32:26">(<argument pos:start="32:25" pos:end="32:25"><expr pos:start="32:25" pos:end="32:25"><name pos:start="32:25" pos:end="32:25">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="33:14" pos:end="37:13">else if<condition pos:start="33:21" pos:end="33:28">(<expr pos:start="33:22" pos:end="33:27"><name pos:start="33:22" pos:end="33:22">b</name><operator pos:start="33:23" pos:end="33:24">==</operator><literal type="char" pos:start="33:25" pos:end="33:27">'D'</literal></expr>)</condition><block pos:start="33:29" pos:end="37:13">{<block_content pos:start="34:17" pos:end="36:17">
                <if_stmt pos:start="34:17" pos:end="36:17"><if pos:start="34:17" pos:end="36:17">if<condition pos:start="34:19" pos:end="34:31">(<expr pos:start="34:20" pos:end="34:30"><operator pos:start="34:20" pos:end="34:20">!</operator><call pos:start="34:21" pos:end="34:30"><name pos:start="34:21" pos:end="34:28"><name pos:start="34:21" pos:end="34:22">s2</name><operator pos:start="34:23" pos:end="34:23">.</operator><name pos:start="34:24" pos:end="34:28">empty</name></name><argument_list pos:start="34:29" pos:end="34:30">()</argument_list></call></expr>)</condition><block pos:start="34:32" pos:end="36:17">{<block_content pos:start="35:21" pos:end="35:29">
                    <expr_stmt pos:start="35:21" pos:end="35:29"><expr pos:start="35:21" pos:end="35:28"><call pos:start="35:21" pos:end="35:28"><name pos:start="35:21" pos:end="35:26"><name pos:start="35:21" pos:end="35:22">s2</name><operator pos:start="35:23" pos:end="35:23">.</operator><name pos:start="35:24" pos:end="35:26">pop</name></name><argument_list pos:start="35:27" pos:end="35:28">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if><else pos:start="37:14" pos:end="42:13">else<block pos:start="37:18" pos:end="42:13">{<block_content pos:start="38:17" pos:end="41:17">
                <while pos:start="38:17" pos:end="41:17">while<condition pos:start="38:22" pos:end="38:34">(<expr pos:start="38:23" pos:end="38:33"><operator pos:start="38:23" pos:end="38:23">!</operator><call pos:start="38:24" pos:end="38:33"><name pos:start="38:24" pos:end="38:31"><name pos:start="38:24" pos:end="38:25">s1</name><operator pos:start="38:26" pos:end="38:26">.</operator><name pos:start="38:27" pos:end="38:31">empty</name></name><argument_list pos:start="38:32" pos:end="38:33">()</argument_list></call></expr>)</condition><block pos:start="38:35" pos:end="41:17">{<block_content pos:start="39:21" pos:end="40:29">
                    <expr_stmt pos:start="39:21" pos:end="39:38"><expr pos:start="39:21" pos:end="39:37"><call pos:start="39:21" pos:end="39:37"><name pos:start="39:21" pos:end="39:27"><name pos:start="39:21" pos:end="39:22">s2</name><operator pos:start="39:23" pos:end="39:23">.</operator><name pos:start="39:24" pos:end="39:27">push</name></name><argument_list pos:start="39:28" pos:end="39:37">(<argument pos:start="39:29" pos:end="39:36"><expr pos:start="39:29" pos:end="39:36"><call pos:start="39:29" pos:end="39:36"><name pos:start="39:29" pos:end="39:34"><name pos:start="39:29" pos:end="39:30">s1</name><operator pos:start="39:31" pos:end="39:31">.</operator><name pos:start="39:32" pos:end="39:34">top</name></name><argument_list pos:start="39:35" pos:end="39:36">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="40:21" pos:end="40:29"><expr pos:start="40:21" pos:end="40:28"><call pos:start="40:21" pos:end="40:28"><name pos:start="40:21" pos:end="40:26"><name pos:start="40:21" pos:end="40:22">s1</name><operator pos:start="40:23" pos:end="40:23">.</operator><name pos:start="40:24" pos:end="40:26">pop</name></name><argument_list pos:start="40:27" pos:end="40:28">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt> 
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="45:5" pos:end="45:22"><decl pos:start="45:5" pos:end="45:17"><type pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:9">stack</name><argument_list type="generic" pos:start="45:10" pos:end="45:14">&lt;<argument pos:start="45:11" pos:end="45:13"><expr pos:start="45:11" pos:end="45:13"><name pos:start="45:11" pos:end="45:13">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="45:15" pos:end="45:17">st1</name></decl>,<decl pos:start="45:19" pos:end="45:21"><type ref="prev" pos:start="45:5" pos:end="45:14"/><name pos:start="45:19" pos:end="45:21">st2</name></decl>;</decl_stmt>
    <while pos:start="46:5" pos:end="49:5">while<condition pos:start="46:10" pos:end="46:22">(<expr pos:start="46:11" pos:end="46:21"><operator pos:start="46:11" pos:end="46:11">!</operator><call pos:start="46:12" pos:end="46:21"><name pos:start="46:12" pos:end="46:19"><name pos:start="46:12" pos:end="46:13">s1</name><operator pos:start="46:14" pos:end="46:14">.</operator><name pos:start="46:15" pos:end="46:19">empty</name></name><argument_list pos:start="46:20" pos:end="46:21">()</argument_list></call></expr>)</condition><block pos:start="46:23" pos:end="49:5">{<block_content pos:start="47:9" pos:end="48:17">
        <expr_stmt pos:start="47:9" pos:end="47:27"><expr pos:start="47:9" pos:end="47:26"><call pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:11">st1</name><operator pos:start="47:12" pos:end="47:12">.</operator><name pos:start="47:13" pos:end="47:16">push</name></name><argument_list pos:start="47:17" pos:end="47:26">(<argument pos:start="47:18" pos:end="47:25"><expr pos:start="47:18" pos:end="47:25"><call pos:start="47:18" pos:end="47:25"><name pos:start="47:18" pos:end="47:23"><name pos:start="47:18" pos:end="47:19">s1</name><operator pos:start="47:20" pos:end="47:20">.</operator><name pos:start="47:21" pos:end="47:23">top</name></name><argument_list pos:start="47:24" pos:end="47:25">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="48:9" pos:end="48:17"><expr pos:start="48:9" pos:end="48:16"><call pos:start="48:9" pos:end="48:16"><name pos:start="48:9" pos:end="48:14"><name pos:start="48:9" pos:end="48:10">s1</name><operator pos:start="48:11" pos:end="48:11">.</operator><name pos:start="48:12" pos:end="48:14">pop</name></name><argument_list pos:start="48:15" pos:end="48:16">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="50:5" pos:end="53:5">while<condition pos:start="50:10" pos:end="50:22">(<expr pos:start="50:11" pos:end="50:21"><operator pos:start="50:11" pos:end="50:11">!</operator><call pos:start="50:12" pos:end="50:21"><name pos:start="50:12" pos:end="50:19"><name pos:start="50:12" pos:end="50:13">s2</name><operator pos:start="50:14" pos:end="50:14">.</operator><name pos:start="50:15" pos:end="50:19">empty</name></name><argument_list pos:start="50:20" pos:end="50:21">()</argument_list></call></expr>)</condition><block pos:start="50:23" pos:end="53:5">{<block_content pos:start="51:9" pos:end="52:17">
        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><call pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:11">st2</name><operator pos:start="51:12" pos:end="51:12">.</operator><name pos:start="51:13" pos:end="51:16">push</name></name><argument_list pos:start="51:17" pos:end="51:26">(<argument pos:start="51:18" pos:end="51:25"><expr pos:start="51:18" pos:end="51:25"><call pos:start="51:18" pos:end="51:25"><name pos:start="51:18" pos:end="51:23"><name pos:start="51:18" pos:end="51:19">s2</name><operator pos:start="51:20" pos:end="51:20">.</operator><name pos:start="51:21" pos:end="51:23">top</name></name><argument_list pos:start="51:24" pos:end="51:25">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="52:9" pos:end="52:17"><expr pos:start="52:9" pos:end="52:16"><call pos:start="52:9" pos:end="52:16"><name pos:start="52:9" pos:end="52:14"><name pos:start="52:9" pos:end="52:10">s2</name><operator pos:start="52:11" pos:end="52:11">.</operator><name pos:start="52:12" pos:end="52:14">pop</name></name><argument_list pos:start="52:15" pos:end="52:16">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="54:5" pos:end="57:5">while<condition pos:start="54:10" pos:end="54:23">(<expr pos:start="54:11" pos:end="54:22"><operator pos:start="54:11" pos:end="54:11">!</operator><call pos:start="54:12" pos:end="54:22"><name pos:start="54:12" pos:end="54:20"><name pos:start="54:12" pos:end="54:14">st1</name><operator pos:start="54:15" pos:end="54:15">.</operator><name pos:start="54:16" pos:end="54:20">empty</name></name><argument_list pos:start="54:21" pos:end="54:22">()</argument_list></call></expr>)</condition><block pos:start="54:24" pos:end="57:5">{<block_content pos:start="55:9" pos:end="56:18">
        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:12">cout</name><operator pos:start="55:13" pos:end="55:14">&lt;&lt;</operator><call pos:start="55:15" pos:end="55:23"><name pos:start="55:15" pos:end="55:21"><name pos:start="55:15" pos:end="55:17">st1</name><operator pos:start="55:18" pos:end="55:18">.</operator><name pos:start="55:19" pos:end="55:21">top</name></name><argument_list pos:start="55:22" pos:end="55:23">()</argument_list></call><operator pos:start="55:24" pos:end="55:25">&lt;&lt;</operator><literal type="string" pos:start="55:26" pos:end="55:28">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="56:9" pos:end="56:18"><expr pos:start="56:9" pos:end="56:17"><call pos:start="56:9" pos:end="56:17"><name pos:start="56:9" pos:end="56:15"><name pos:start="56:9" pos:end="56:11">st1</name><operator pos:start="56:12" pos:end="56:12">.</operator><name pos:start="56:13" pos:end="56:15">pop</name></name><argument_list pos:start="56:16" pos:end="56:17">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="58:5" pos:end="58:15"><expr pos:start="58:5" pos:end="58:14"><name pos:start="58:5" pos:end="58:8">cout</name><operator pos:start="58:9" pos:end="58:10">&lt;&lt;</operator><name pos:start="58:11" pos:end="58:14">endl</name></expr>;</expr_stmt>
    <while pos:start="59:5" pos:end="62:5">while<condition pos:start="59:10" pos:end="59:23">(<expr pos:start="59:11" pos:end="59:22"><operator pos:start="59:11" pos:end="59:11">!</operator><call pos:start="59:12" pos:end="59:22"><name pos:start="59:12" pos:end="59:20"><name pos:start="59:12" pos:end="59:14">st2</name><operator pos:start="59:15" pos:end="59:15">.</operator><name pos:start="59:16" pos:end="59:20">empty</name></name><argument_list pos:start="59:21" pos:end="59:22">()</argument_list></call></expr>)</condition><block pos:start="59:24" pos:end="62:5">{<block_content pos:start="60:9" pos:end="61:18">
        <expr_stmt pos:start="60:9" pos:end="60:29"><expr pos:start="60:9" pos:end="60:28"><name pos:start="60:9" pos:end="60:12">cout</name><operator pos:start="60:13" pos:end="60:14">&lt;&lt;</operator><call pos:start="60:15" pos:end="60:23"><name pos:start="60:15" pos:end="60:21"><name pos:start="60:15" pos:end="60:17">st2</name><operator pos:start="60:18" pos:end="60:18">.</operator><name pos:start="60:19" pos:end="60:21">top</name></name><argument_list pos:start="60:22" pos:end="60:23">()</argument_list></call><operator pos:start="60:24" pos:end="60:25">&lt;&lt;</operator><literal type="string" pos:start="60:26" pos:end="60:28">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="61:9" pos:end="61:18"><expr pos:start="61:9" pos:end="61:17"><call pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:11">st2</name><operator pos:start="61:12" pos:end="61:12">.</operator><name pos:start="61:13" pos:end="61:15">pop</name></name><argument_list pos:start="61:16" pos:end="61:17">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
