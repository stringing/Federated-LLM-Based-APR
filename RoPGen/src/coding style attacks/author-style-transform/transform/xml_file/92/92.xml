<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/92/92.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>

<decl_stmt pos:start="6:1" pos:end="6:18"><decl pos:start="6:1" pos:end="6:17"><type pos:start="6:1" pos:end="6:6"><name pos:start="6:1" pos:end="6:6">string</name></type> <name pos:start="6:8" pos:end="6:17"><name pos:start="6:8" pos:end="6:11">data</name><index pos:start="6:12" pos:end="6:17">[<expr pos:start="6:13" pos:end="6:16"><literal type="number" pos:start="6:13" pos:end="6:16">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:17"><decl pos:start="7:1" pos:end="7:16"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">char</name></type> <name pos:start="7:6" pos:end="7:16"><name pos:start="7:6" pos:end="7:10">dataa</name><index pos:start="7:11" pos:end="7:16">[<expr pos:start="7:12" pos:end="7:15"><literal type="number" pos:start="7:12" pos:end="7:15">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:23"><decl pos:start="8:1" pos:end="8:13"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:9">floor</name> <init pos:start="8:11" pos:end="8:13">= <expr pos:start="8:13" pos:end="8:13"><literal type="number" pos:start="8:13" pos:end="8:13">0</literal></expr></init></decl>,<decl pos:start="8:15" pos:end="8:22"><type ref="prev" pos:start="8:1" pos:end="8:3"/><name pos:start="8:15" pos:end="8:18">rear</name> <init pos:start="8:20" pos:end="8:22">= <expr pos:start="8:22" pos:end="8:22"><literal type="number" pos:start="8:22" pos:end="8:22">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="9:1" pos:end="15:1"><type pos:start="9:1" pos:end="9:4"><name pos:start="9:1" pos:end="9:4">void</name></type> <name pos:start="9:6" pos:end="9:8">pop</name><parameter_list pos:start="9:9" pos:end="9:10">()</parameter_list><block pos:start="9:11" pos:end="15:1">{<block_content pos:start="10:5" pos:end="14:5">
    <if_stmt pos:start="10:5" pos:end="14:5"><if pos:start="10:5" pos:end="12:5">if<condition pos:start="10:7" pos:end="10:20">(<expr pos:start="10:8" pos:end="10:19"><name pos:start="10:8" pos:end="10:12">floor</name> <operator pos:start="10:14" pos:end="10:14">=</operator> <name pos:start="10:16" pos:end="10:19">rear</name></expr>)</condition><block pos:start="10:21" pos:end="12:5">{<block_content pos:start="11:9" pos:end="11:27">
        <expr_stmt pos:start="11:9" pos:end="11:27"><expr pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:12">cout</name> <operator pos:start="11:14" pos:end="11:15">&lt;&lt;</operator> <literal type="string" pos:start="11:17" pos:end="11:19">"0"</literal> <operator pos:start="11:21" pos:end="11:22">&lt;&lt;</operator><name pos:start="11:23" pos:end="11:26">endl</name></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="12:6" pos:end="14:5">else<block pos:start="12:10" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:19">
        <expr_stmt pos:start="13:9" pos:end="13:19"><expr pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:13">floor</name> <operator pos:start="13:15" pos:end="13:16">+=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">1</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="16:1" pos:end="33:1"><type pos:start="16:1" pos:end="16:4"><name pos:start="16:1" pos:end="16:4">void</name></type> <name pos:start="16:6" pos:end="16:9">push</name><parameter_list pos:start="16:10" pos:end="16:19">(<parameter pos:start="16:11" pos:end="16:18"><decl pos:start="16:11" pos:end="16:18"><type pos:start="16:11" pos:end="16:16"><name pos:start="16:11" pos:end="16:16">string</name></type> <name pos:start="16:18" pos:end="16:18">a</name></decl></parameter>)</parameter_list><block pos:start="16:20" pos:end="33:1">{<block_content pos:start="17:5" pos:end="32:5">
    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">bool</name></type> <name pos:start="17:10" pos:end="17:17">is_dataa</name> <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="18:5" pos:end="28:5">for<control pos:start="18:8" pos:end="18:31">(<init pos:start="18:9" pos:end="18:18"><decl pos:start="18:9" pos:end="18:17"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">i</name> <init pos:start="18:15" pos:end="18:17">= <expr pos:start="18:17" pos:end="18:17"><literal type="number" pos:start="18:17" pos:end="18:17">0</literal></expr></init></decl>;</init><condition pos:start="18:19" pos:end="18:27"><expr pos:start="18:19" pos:end="18:26"><name pos:start="18:19" pos:end="18:19">i</name> <operator pos:start="18:21" pos:end="18:21">&lt;</operator> <literal type="number" pos:start="18:23" pos:end="18:26">1005</literal></expr>;</condition><incr pos:start="18:28" pos:end="18:30"><expr pos:start="18:28" pos:end="18:30"><name pos:start="18:28" pos:end="18:28">i</name><operator pos:start="18:29" pos:end="18:30">++</operator></expr></incr>)</control><block pos:start="18:32" pos:end="28:5">{<block_content pos:start="19:9" pos:end="27:9">
        <if_stmt pos:start="19:9" pos:end="27:9"><if pos:start="19:9" pos:end="27:9">if<condition pos:start="19:11" pos:end="19:25">(<expr pos:start="19:12" pos:end="19:24"><name pos:start="19:12" pos:end="19:16">dataa</name> <operator pos:start="19:18" pos:end="19:19">==</operator> <name pos:start="19:21" pos:end="19:24"><name pos:start="19:21" pos:end="19:21">a</name><index pos:start="19:22" pos:end="19:24">[<expr pos:start="19:23" pos:end="19:23"><literal type="number" pos:start="19:23" pos:end="19:23">0</literal></expr>]</index></name></expr>)</condition><block pos:start="19:26" pos:end="27:9">{<block_content pos:start="20:13" pos:end="26:18">
            <expr_stmt pos:start="20:13" pos:end="20:25"><expr pos:start="20:13" pos:end="20:24"><name pos:start="20:13" pos:end="20:20">is_dataa</name> <operator pos:start="20:22" pos:end="20:22">=</operator> <literal type="number" pos:start="20:24" pos:end="20:24">1</literal></expr>;</expr_stmt>
            <for pos:start="21:13" pos:end="23:13">for<control pos:start="21:16" pos:end="21:39">(<init pos:start="21:17" pos:end="21:29"><decl pos:start="21:17" pos:end="21:28"><type pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:19">int</name></type> <name pos:start="21:21" pos:end="21:21">j</name> <init pos:start="21:23" pos:end="21:28">= <expr pos:start="21:25" pos:end="21:28"><literal type="number" pos:start="21:25" pos:end="21:28">1004</literal></expr></init></decl>;</init><condition pos:start="21:30" pos:end="21:35"><expr pos:start="21:30" pos:end="21:34"><name pos:start="21:30" pos:end="21:30">j</name> <operator pos:start="21:32" pos:end="21:32">&gt;</operator> <name pos:start="21:34" pos:end="21:34">i</name></expr>;</condition><incr pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:36">j</name><operator pos:start="21:37" pos:end="21:38">--</operator></expr></incr>)</control><block pos:start="21:40" pos:end="23:13">{<block_content pos:start="22:17" pos:end="22:36">
                <expr_stmt pos:start="22:17" pos:end="22:36"><expr pos:start="22:17" pos:end="22:35"><name pos:start="22:17" pos:end="22:23"><name pos:start="22:17" pos:end="22:20">data</name><index pos:start="22:21" pos:end="22:23">[<expr pos:start="22:22" pos:end="22:22"><name pos:start="22:22" pos:end="22:22">j</name></expr>]</index></name> <operator pos:start="22:25" pos:end="22:25">=</operator> <name pos:start="22:27" pos:end="22:35"><name pos:start="22:27" pos:end="22:30">data</name><index pos:start="22:31" pos:end="22:35">[<expr pos:start="22:32" pos:end="22:34"><name pos:start="22:32" pos:end="22:32">j</name><operator pos:start="22:33" pos:end="22:33">+</operator><literal type="number" pos:start="22:34" pos:end="22:34">1</literal></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="24:13" pos:end="24:24"><expr pos:start="24:13" pos:end="24:23"><name pos:start="24:13" pos:end="24:19"><name pos:start="24:13" pos:end="24:16">data</name><index pos:start="24:17" pos:end="24:19">[<expr pos:start="24:18" pos:end="24:18"><name pos:start="24:18" pos:end="24:18">i</name></expr>]</index></name> <operator pos:start="24:21" pos:end="24:21">=</operator> <name pos:start="24:23" pos:end="24:23">a</name></expr>;</expr_stmt>
            <expr_stmt pos:start="25:13" pos:end="25:22"><expr pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:16">rear</name> <operator pos:start="25:18" pos:end="25:19">+=</operator> <literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>;</expr_stmt>
            <break pos:start="26:13" pos:end="26:18">break;</break>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="29:5" pos:end="32:5"><if pos:start="29:5" pos:end="32:5">if<condition pos:start="29:7" pos:end="29:17">(<expr pos:start="29:8" pos:end="29:16"><operator pos:start="29:8" pos:end="29:8">!</operator><name pos:start="29:9" pos:end="29:16">is_dataa</name></expr>)</condition><block pos:start="29:18" pos:end="32:5">{<block_content pos:start="30:9" pos:end="31:18">
        <expr_stmt pos:start="30:9" pos:end="30:23"><expr pos:start="30:9" pos:end="30:22"><name pos:start="30:9" pos:end="30:18"><name pos:start="30:9" pos:end="30:12">data</name><index pos:start="30:13" pos:end="30:18">[<expr pos:start="30:14" pos:end="30:17"><name pos:start="30:14" pos:end="30:17">rear</name></expr>]</index></name> <operator pos:start="30:20" pos:end="30:20">=</operator> <name pos:start="30:22" pos:end="30:22">a</name></expr>;</expr_stmt>
        <expr_stmt pos:start="31:9" pos:end="31:18"><expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:12">rear</name> <operator pos:start="31:14" pos:end="31:15">+=</operator> <literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="34:1" pos:end="48:1"><type pos:start="34:1" pos:end="34:3"><name pos:start="34:1" pos:end="34:3">int</name></type> <name pos:start="34:5" pos:end="34:8">main</name><parameter_list pos:start="34:9" pos:end="34:10">()</parameter_list><block pos:start="34:11" pos:end="48:1">{<block_content pos:start="35:5" pos:end="47:5">
    <decl_stmt pos:start="35:5" pos:end="35:10"><decl pos:start="35:5" pos:end="35:9"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:13"><expr pos:start="36:5" pos:end="36:12"><name pos:start="36:5" pos:end="36:7">cin</name> <operator pos:start="36:9" pos:end="36:10">&gt;&gt;</operator> <name pos:start="36:12" pos:end="36:12">n</name></expr>;</expr_stmt>
    <while pos:start="37:5" pos:end="47:5">while<condition pos:start="37:10" pos:end="37:14">(<expr pos:start="37:11" pos:end="37:13"><name pos:start="37:11" pos:end="37:11">n</name><operator pos:start="37:12" pos:end="37:13">--</operator></expr>)</condition><block pos:start="37:15" pos:end="47:5">{<block_content pos:start="38:9" pos:end="46:9">
        <decl_stmt pos:start="38:9" pos:end="38:15"><decl pos:start="38:9" pos:end="38:14"><type pos:start="38:9" pos:end="38:11"><name pos:start="38:9" pos:end="38:11">int</name></type> <name pos:start="38:13" pos:end="38:14">op</name></decl>;</decl_stmt>
        <expr_stmt pos:start="39:9" pos:end="39:18"><expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:11">cin</name> <operator pos:start="39:13" pos:end="39:14">&gt;&gt;</operator> <name pos:start="39:16" pos:end="39:17">op</name></expr>;</expr_stmt>
        <if_stmt pos:start="40:9" pos:end="46:9"><if pos:start="40:9" pos:end="44:9">if<condition pos:start="40:11" pos:end="40:19">(<expr pos:start="40:12" pos:end="40:18"><name pos:start="40:12" pos:end="40:13">op</name> <operator pos:start="40:15" pos:end="40:16">==</operator> <literal type="number" pos:start="40:18" pos:end="40:18">1</literal></expr>)</condition><block pos:start="40:20" pos:end="44:9">{<block_content pos:start="41:13" pos:end="43:23">
            <decl_stmt pos:start="41:13" pos:end="41:24"><decl pos:start="41:13" pos:end="41:23"><type pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:18">string</name></type> <name pos:start="41:20" pos:end="41:23">name</name></decl>;</decl_stmt>
            <expr_stmt pos:start="42:13" pos:end="42:24"><expr pos:start="42:13" pos:end="42:23"><name pos:start="42:13" pos:end="42:15">cin</name> <operator pos:start="42:17" pos:end="42:18">&gt;&gt;</operator> <name pos:start="42:20" pos:end="42:23">name</name></expr>;</expr_stmt>
            <expr_stmt pos:start="43:13" pos:end="43:23"><expr pos:start="43:13" pos:end="43:22"><call pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:16">push</name><argument_list pos:start="43:17" pos:end="43:22">(<argument pos:start="43:18" pos:end="43:21"><expr pos:start="43:18" pos:end="43:21"><name pos:start="43:18" pos:end="43:21">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="44:10" pos:end="46:9">else<block pos:start="44:14" pos:end="46:9">{<block_content pos:start="45:13" pos:end="45:18">
            <expr_stmt pos:start="45:13" pos:end="45:18"><expr pos:start="45:13" pos:end="45:17"><call pos:start="45:13" pos:end="45:17"><name pos:start="45:13" pos:end="45:15">pop</name><argument_list pos:start="45:16" pos:end="45:17">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>
</unit>
