<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1101/1101.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:16">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:18">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:18">&lt;iostream&gt;</cpp:file></cpp:include> 
<cpp:include pos:start="4:1" pos:end="4:19">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:17">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive><cpp:file pos:start="5:9" pos:end="5:17">&lt;cstring&gt;</cpp:file></cpp:include>
<using pos:start="6:1" pos:end="6:20">using <namespace pos:start="6:7" pos:end="6:20">namespace <name pos:start="6:17" pos:end="6:19">std</name>;</namespace></using>
<decl_stmt pos:start="7:1" pos:end="7:20"><decl pos:start="7:1" pos:end="7:19"><type pos:start="7:1" pos:end="7:11"><name pos:start="7:1" pos:end="7:11"><name pos:start="7:1" pos:end="7:6">vector</name><argument_list type="generic" pos:start="7:7" pos:end="7:11">&lt;<argument pos:start="7:8" pos:end="7:10"><expr pos:start="7:8" pos:end="7:10"><name pos:start="7:8" pos:end="7:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="7:13" pos:end="7:19"><name pos:start="7:13" pos:end="7:13">l</name><index pos:start="7:14" pos:end="7:19">[<expr pos:start="7:15" pos:end="7:18"><literal type="number" pos:start="7:15" pos:end="7:18">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:46"><decl pos:start="8:1" pos:end="8:5"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:5">t</name></decl>, <decl pos:start="8:8" pos:end="8:8"><type ref="prev" pos:start="8:1" pos:end="8:3"/><name pos:start="8:8" pos:end="8:8">n</name></decl>,<decl pos:start="8:10" pos:end="8:12"><type ref="prev" pos:start="8:1" pos:end="8:3"/><name pos:start="8:10" pos:end="8:12">cnt</name></decl>, <decl pos:start="8:15" pos:end="8:26"><type ref="prev" pos:start="8:1" pos:end="8:3"/><name pos:start="8:15" pos:end="8:26"><name pos:start="8:15" pos:end="8:20">father</name><index pos:start="8:21" pos:end="8:26">[<expr pos:start="8:22" pos:end="8:25"><literal type="number" pos:start="8:22" pos:end="8:25">1005</literal></expr>]</index></name></decl>,<decl pos:start="8:28" pos:end="8:28"><type ref="prev" pos:start="8:1" pos:end="8:3"/><name pos:start="8:28" pos:end="8:28">a</name></decl>,<decl pos:start="8:30" pos:end="8:30"><type ref="prev" pos:start="8:1" pos:end="8:3"/><name pos:start="8:30" pos:end="8:30">b</name></decl>,<decl pos:start="8:32" pos:end="8:45"><type ref="prev" pos:start="8:1" pos:end="8:3"/><name pos:start="8:32" pos:end="8:39"><name pos:start="8:32" pos:end="8:34">ans</name><index pos:start="8:35" pos:end="8:39">[<expr pos:start="8:36" pos:end="8:38"><literal type="number" pos:start="8:36" pos:end="8:38">105</literal></expr>]</index></name> <init pos:start="8:41" pos:end="8:45">= <expr pos:start="8:43" pos:end="8:45"><block pos:start="8:43" pos:end="8:45">{<expr pos:start="8:44" pos:end="8:44"><literal type="number" pos:start="8:44" pos:end="8:44">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<function pos:start="9:1" pos:end="17:1"><type pos:start="9:1" pos:end="9:4"><name pos:start="9:1" pos:end="9:4">void</name></type> <name pos:start="9:6" pos:end="9:8">dfs</name><parameter_list pos:start="9:9" pos:end="9:17">(<parameter pos:start="9:10" pos:end="9:16"><decl pos:start="9:10" pos:end="9:16"><type pos:start="9:10" pos:end="9:12"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:16">num</name></decl></parameter>)</parameter_list><block pos:start="9:18" pos:end="17:1">{<block_content pos:start="10:5" pos:end="16:5">
    <decl_stmt pos:start="10:5" pos:end="10:42"><decl pos:start="10:5" pos:end="10:15"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:11">sum</name> <init pos:start="10:13" pos:end="10:15">= <expr pos:start="10:15" pos:end="10:15"><literal type="number" pos:start="10:15" pos:end="10:15">0</literal></expr></init></decl>,<decl pos:start="10:17" pos:end="10:41"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:17" pos:end="10:17">f</name> <init pos:start="10:19" pos:end="10:41">= <expr pos:start="10:21" pos:end="10:41"><name pos:start="10:21" pos:end="10:34"><name pos:start="10:21" pos:end="10:21">l</name><index pos:start="10:22" pos:end="10:34">[<expr pos:start="10:23" pos:end="10:33"><name pos:start="10:23" pos:end="10:33"><name pos:start="10:23" pos:end="10:28">father</name><index pos:start="10:29" pos:end="10:33">[<expr pos:start="10:30" pos:end="10:32"><name pos:start="10:30" pos:end="10:32">num</name></expr>]</index></name></expr>]</index></name><operator pos:start="10:35" pos:end="10:35">.</operator><call pos:start="10:36" pos:end="10:41"><name pos:start="10:36" pos:end="10:39">size</name><argument_list pos:start="10:40" pos:end="10:41">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for pos:start="11:5" pos:end="13:5">for<control pos:start="11:8" pos:end="11:40">(<init pos:start="11:9" pos:end="11:18"><decl pos:start="11:9" pos:end="11:17"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>;</init><condition pos:start="11:19" pos:end="11:36"><expr pos:start="11:19" pos:end="11:35"><name pos:start="11:19" pos:end="11:19">i</name> <operator pos:start="11:21" pos:end="11:21">&lt;</operator> <name pos:start="11:23" pos:end="11:28"><name pos:start="11:23" pos:end="11:23">l</name><index pos:start="11:24" pos:end="11:28">[<expr pos:start="11:25" pos:end="11:27"><name pos:start="11:25" pos:end="11:27">num</name></expr>]</index></name><operator pos:start="11:29" pos:end="11:29">.</operator><call pos:start="11:30" pos:end="11:35"><name pos:start="11:30" pos:end="11:33">size</name><argument_list pos:start="11:34" pos:end="11:35">()</argument_list></call></expr>;</condition><incr pos:start="11:37" pos:end="11:39"><expr pos:start="11:37" pos:end="11:39"><name pos:start="11:37" pos:end="11:37">i</name><operator pos:start="11:38" pos:end="11:39">++</operator></expr></incr>)</control><block pos:start="11:41" pos:end="13:5">{<block_content pos:start="12:9" pos:end="12:35">
        <expr_stmt pos:start="12:9" pos:end="12:35"><expr pos:start="12:9" pos:end="12:34"><name pos:start="12:9" pos:end="12:11">sum</name> <operator pos:start="12:13" pos:end="12:14">+=</operator> <name pos:start="12:16" pos:end="12:27"><name pos:start="12:16" pos:end="12:16">l</name><index pos:start="12:17" pos:end="12:27">[<expr pos:start="12:18" pos:end="12:26"><name pos:start="12:18" pos:end="12:26"><name pos:start="12:18" pos:end="12:18">l</name><index pos:start="12:19" pos:end="12:23">[<expr pos:start="12:20" pos:end="12:22"><name pos:start="12:20" pos:end="12:22">num</name></expr>]</index><index pos:start="12:24" pos:end="12:26">[<expr pos:start="12:25" pos:end="12:25"><name pos:start="12:25" pos:end="12:25">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="12:28" pos:end="12:28">.</operator><call pos:start="12:29" pos:end="12:34"><name pos:start="12:29" pos:end="12:32">size</name><argument_list pos:start="12:33" pos:end="12:34">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="14:5" pos:end="16:5"><if pos:start="14:5" pos:end="16:5">if<condition pos:start="14:7" pos:end="14:48">(<expr pos:start="14:8" pos:end="14:47"><name pos:start="14:8" pos:end="14:10">sum</name> <operator pos:start="14:12" pos:end="14:13">&lt;=</operator> <name pos:start="14:15" pos:end="14:20"><name pos:start="14:15" pos:end="14:15">l</name><index pos:start="14:16" pos:end="14:20">[<expr pos:start="14:17" pos:end="14:19"><name pos:start="14:17" pos:end="14:19">num</name></expr>]</index></name><operator pos:start="14:21" pos:end="14:21">.</operator><call pos:start="14:22" pos:end="14:27"><name pos:start="14:22" pos:end="14:25">size</name><argument_list pos:start="14:26" pos:end="14:27">()</argument_list></call><operator pos:start="14:28" pos:end="14:29">&amp;&amp;</operator><name pos:start="14:30" pos:end="14:30">f</name> <operator pos:start="14:32" pos:end="14:33">&lt;=</operator> <name pos:start="14:35" pos:end="14:40"><name pos:start="14:35" pos:end="14:35">l</name><index pos:start="14:36" pos:end="14:40">[<expr pos:start="14:37" pos:end="14:39"><name pos:start="14:37" pos:end="14:39">num</name></expr>]</index></name><operator pos:start="14:41" pos:end="14:41">.</operator><call pos:start="14:42" pos:end="14:47"><name pos:start="14:42" pos:end="14:45">size</name><argument_list pos:start="14:46" pos:end="14:47">()</argument_list></call></expr>)</condition><block pos:start="14:49" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:14">
        <expr_stmt pos:start="15:9" pos:end="15:14"><expr pos:start="15:9" pos:end="15:13"><name pos:start="15:9" pos:end="15:11">cnt</name><operator pos:start="15:12" pos:end="15:13">++</operator></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="18:1" pos:end="45:1"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:8">main</name><parameter_list pos:start="18:9" pos:end="18:10">()</parameter_list><block pos:start="18:11" pos:end="45:1">{<block_content pos:start="19:5" pos:end="44:13">
    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:11">freopen</name><argument_list pos:start="19:12" pos:end="19:31">(<argument pos:start="19:13" pos:end="19:18"><expr pos:start="19:13" pos:end="19:18"><literal type="string" pos:start="19:13" pos:end="19:18">"p.in"</literal></expr></argument>, <argument pos:start="19:21" pos:end="19:23"><expr pos:start="19:21" pos:end="19:23"><literal type="string" pos:start="19:21" pos:end="19:23">"r"</literal></expr></argument>, <argument pos:start="19:26" pos:end="19:30"><expr pos:start="19:26" pos:end="19:30"><name pos:start="19:26" pos:end="19:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:34"><expr pos:start="20:5" pos:end="20:33"><call pos:start="20:5" pos:end="20:33"><name pos:start="20:5" pos:end="20:11">freopen</name><argument_list pos:start="20:12" pos:end="20:33">(<argument pos:start="20:13" pos:end="20:19"><expr pos:start="20:13" pos:end="20:19"><literal type="string" pos:start="20:13" pos:end="20:19">"p.out"</literal></expr></argument>, <argument pos:start="20:22" pos:end="20:24"><expr pos:start="20:22" pos:end="20:24"><literal type="string" pos:start="20:22" pos:end="20:24">"w"</literal></expr></argument>, <argument pos:start="20:27" pos:end="20:32"><expr pos:start="20:27" pos:end="20:32"><name pos:start="20:27" pos:end="20:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><call pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:9">scanf</name><argument_list pos:start="21:10" pos:end="21:18">(<argument pos:start="21:11" pos:end="21:14"><expr pos:start="21:11" pos:end="21:14"><literal type="string" pos:start="21:11" pos:end="21:14">"%d"</literal></expr></argument>,<argument pos:start="21:16" pos:end="21:17"><expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">&amp;</operator><name pos:start="21:17" pos:end="21:17">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="22:5" pos:end="22:14"><decl pos:start="22:5" pos:end="22:13"><type pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></type> <name pos:start="22:9" pos:end="22:9">j</name> <init pos:start="22:11" pos:end="22:13">= <expr pos:start="22:13" pos:end="22:13"><name pos:start="22:13" pos:end="22:13">t</name></expr></init></decl>;</decl_stmt>
    <while pos:start="23:5" pos:end="40:5">while<condition pos:start="23:10" pos:end="23:15">(<expr pos:start="23:11" pos:end="23:14"><name pos:start="23:11" pos:end="23:11">j</name> <operator pos:start="23:13" pos:end="23:14">--</operator></expr>)</condition><block pos:start="23:16" pos:end="40:5">{<block_content pos:start="24:9" pos:end="38:16">
        <expr_stmt pos:start="24:9" pos:end="24:23"><expr pos:start="24:9" pos:end="24:22"><call pos:start="24:9" pos:end="24:22"><name pos:start="24:9" pos:end="24:13">scanf</name><argument_list pos:start="24:14" pos:end="24:22">(<argument pos:start="24:15" pos:end="24:18"><expr pos:start="24:15" pos:end="24:18"><literal type="string" pos:start="24:15" pos:end="24:18">"%d"</literal></expr></argument>,<argument pos:start="24:20" pos:end="24:21"><expr pos:start="24:20" pos:end="24:21"><operator pos:start="24:20" pos:end="24:20">&amp;</operator><name pos:start="24:21" pos:end="24:21">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="25:9" pos:end="29:9">for<control pos:start="25:12" pos:end="25:35">(<init pos:start="25:13" pos:end="25:22"><decl pos:start="25:13" pos:end="25:21"><type pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">int</name></type> <name pos:start="25:17" pos:end="25:17">i</name> <init pos:start="25:19" pos:end="25:21">= <expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr></init></decl>;</init><condition pos:start="25:23" pos:end="25:30"><expr pos:start="25:23" pos:end="25:29"><name pos:start="25:23" pos:end="25:23">i</name> <operator pos:start="25:25" pos:end="25:25">&lt;</operator> <name pos:start="25:27" pos:end="25:27">n</name><operator pos:start="25:28" pos:end="25:28">-</operator><literal type="number" pos:start="25:29" pos:end="25:29">1</literal></expr>;</condition><incr pos:start="25:31" pos:end="25:34"><expr pos:start="25:31" pos:end="25:34"><name pos:start="25:31" pos:end="25:31">i</name> <operator pos:start="25:33" pos:end="25:34">++</operator></expr></incr>)</control><block pos:start="25:36" pos:end="29:9">{<block_content pos:start="26:13" pos:end="28:30">
            <expr_stmt pos:start="26:13" pos:end="26:32"><expr pos:start="26:13" pos:end="26:31"><call pos:start="26:13" pos:end="26:31"><name pos:start="26:13" pos:end="26:17">scanf</name><argument_list pos:start="26:18" pos:end="26:31">(<argument pos:start="26:19" pos:end="26:24"><expr pos:start="26:19" pos:end="26:24"><literal type="string" pos:start="26:19" pos:end="26:24">"%d%d"</literal></expr></argument>,<argument pos:start="26:26" pos:end="26:27"><expr pos:start="26:26" pos:end="26:27"><operator pos:start="26:26" pos:end="26:26">&amp;</operator><name pos:start="26:27" pos:end="26:27">a</name></expr></argument>,<argument pos:start="26:29" pos:end="26:30"><expr pos:start="26:29" pos:end="26:30"><operator pos:start="26:29" pos:end="26:29">&amp;</operator><name pos:start="26:30" pos:end="26:30">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="27:13" pos:end="27:26"><expr pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:18">father</name><index pos:start="27:19" pos:end="27:21">[<expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">b</name></expr>]</index></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:25">a</name></expr>;</expr_stmt>
            <expr_stmt pos:start="28:13" pos:end="28:30"><expr pos:start="28:13" pos:end="28:29"><name pos:start="28:13" pos:end="28:16"><name pos:start="28:13" pos:end="28:13">l</name><index pos:start="28:14" pos:end="28:16">[<expr pos:start="28:15" pos:end="28:15"><name pos:start="28:15" pos:end="28:15">a</name></expr>]</index></name><operator pos:start="28:17" pos:end="28:17">.</operator><call pos:start="28:18" pos:end="28:29"><name pos:start="28:18" pos:end="28:26">push_back</name><argument_list pos:start="28:27" pos:end="28:29">(<argument pos:start="28:28" pos:end="28:28"><expr pos:start="28:28" pos:end="28:28"><name pos:start="28:28" pos:end="28:28">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="30:9" pos:end="32:9">for<control pos:start="30:12" pos:end="30:34">(<init pos:start="30:13" pos:end="30:22"><decl pos:start="30:13" pos:end="30:21"><type pos:start="30:13" pos:end="30:15"><name pos:start="30:13" pos:end="30:15">int</name></type> <name pos:start="30:17" pos:end="30:17">i</name> <init pos:start="30:19" pos:end="30:21">= <expr pos:start="30:21" pos:end="30:21"><literal type="number" pos:start="30:21" pos:end="30:21">1</literal></expr></init></decl>;</init><condition pos:start="30:23" pos:end="30:29"><expr pos:start="30:23" pos:end="30:28"><name pos:start="30:23" pos:end="30:23">i</name> <operator pos:start="30:25" pos:end="30:26">&lt;=</operator> <name pos:start="30:28" pos:end="30:28">n</name></expr>;</condition><incr pos:start="30:30" pos:end="30:33"><expr pos:start="30:30" pos:end="30:33"><name pos:start="30:30" pos:end="30:30">i</name> <operator pos:start="30:32" pos:end="30:33">++</operator></expr></incr>)</control><block pos:start="30:35" pos:end="32:9">{<block_content pos:start="31:13" pos:end="31:19">
            <expr_stmt pos:start="31:13" pos:end="31:19"><expr pos:start="31:13" pos:end="31:18"><call pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:15">dfs</name><argument_list pos:start="31:16" pos:end="31:18">(<argument pos:start="31:17" pos:end="31:17"><expr pos:start="31:17" pos:end="31:17"><name pos:start="31:17" pos:end="31:17">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="33:9" pos:end="36:9">for<control pos:start="33:12" pos:end="33:34">(<init pos:start="33:13" pos:end="33:22"><decl pos:start="33:13" pos:end="33:21"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:17">i</name> <init pos:start="33:19" pos:end="33:21">= <expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr></init></decl>;</init><condition pos:start="33:23" pos:end="33:29"><expr pos:start="33:23" pos:end="33:28"><name pos:start="33:23" pos:end="33:23">i</name> <operator pos:start="33:25" pos:end="33:26">&lt;=</operator> <name pos:start="33:28" pos:end="33:28">n</name></expr>;</condition><incr pos:start="33:30" pos:end="33:33"><expr pos:start="33:30" pos:end="33:33"><name pos:start="33:30" pos:end="33:30">i</name> <operator pos:start="33:32" pos:end="33:33">++</operator></expr></incr>)</control><block pos:start="33:35" pos:end="36:9">{<block_content pos:start="34:13" pos:end="35:26">
            <expr_stmt pos:start="34:13" pos:end="34:25"><expr pos:start="34:13" pos:end="34:24"><name pos:start="34:13" pos:end="34:16"><name pos:start="34:13" pos:end="34:13">l</name><index pos:start="34:14" pos:end="34:16">[<expr pos:start="34:15" pos:end="34:15"><name pos:start="34:15" pos:end="34:15">i</name></expr>]</index></name><operator pos:start="34:17" pos:end="34:17">.</operator><call pos:start="34:18" pos:end="34:24"><name pos:start="34:18" pos:end="34:22">clear</name><argument_list pos:start="34:23" pos:end="34:24">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="35:13" pos:end="35:26"><expr pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:18">father</name><index pos:start="35:19" pos:end="35:21">[<expr pos:start="35:20" pos:end="35:20"><name pos:start="35:20" pos:end="35:20">i</name></expr>]</index></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="37:9" pos:end="37:21"><expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:11">ans</name><index pos:start="37:12" pos:end="37:14">[<expr pos:start="37:13" pos:end="37:13"><name pos:start="37:13" pos:end="37:13">j</name></expr>]</index></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:20">cnt</name></expr>;</expr_stmt>
        <expr_stmt pos:start="38:9" pos:end="38:16"><expr pos:start="38:9" pos:end="38:15"><name pos:start="38:9" pos:end="38:11">cnt</name> <operator pos:start="38:13" pos:end="38:13">=</operator> <literal type="number" pos:start="38:15" pos:end="38:15">0</literal></expr>;</expr_stmt>
        
    </block_content>}</block></while>
    <while pos:start="41:5" pos:end="43:5">while<condition pos:start="41:10" pos:end="41:14">(<expr pos:start="41:11" pos:end="41:13"><name pos:start="41:11" pos:end="41:11">t</name><operator pos:start="41:12" pos:end="41:13">--</operator></expr>)</condition><block pos:start="41:15" pos:end="43:5">{<block_content pos:start="42:9" pos:end="42:27">
        <expr_stmt pos:start="42:9" pos:end="42:27"><expr pos:start="42:9" pos:end="42:26"><name pos:start="42:9" pos:end="42:12">cout</name><operator pos:start="42:13" pos:end="42:14">&lt;&lt;</operator><name pos:start="42:15" pos:end="42:20"><name pos:start="42:15" pos:end="42:17">ans</name><index pos:start="42:18" pos:end="42:20">[<expr pos:start="42:19" pos:end="42:19"><name pos:start="42:19" pos:end="42:19">t</name></expr>]</index></name><operator pos:start="42:21" pos:end="42:22">&lt;&lt;</operator><name pos:start="42:23" pos:end="42:26">endl</name></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="44:5" pos:end="44:13">return <expr pos:start="44:12" pos:end="44:12"><literal type="number" pos:start="44:12" pos:end="44:12">0</literal></expr>;</return>
</block_content>}</block></function> 
<expr pos:start="46:1" pos:end="56:54"><name pos:start="46:1" pos:end="46:6">题目</name>
<name pos:start="47:1" pos:end="47:30">给出一颗有向树，总共</name> <name pos:start="47:32" pos:end="47:33">nn</name> <name pos:start="47:35" pos:end="47:187">个节点，如果一个节点的度不小于它所有的儿子以及他的父亲的度（如果存在父亲或者儿子），那么我们称这个点为</name> <name pos:start="47:189" pos:end="47:190">pp</name> <name pos:start="47:192" pos:end="47:239">节点，现在给你一棵树你需要统计出</name> <name pos:start="47:241" pos:end="47:242">pp</name> <name pos:start="47:244" pos:end="47:261">节点的个数。</name>

<name pos:start="49:1" pos:end="49:69">这里的度数指树上的度数，即一个节点的子节点数。</name>

<name pos:start="51:1" pos:end="51:12">输入格式</name>
<name pos:start="52:1" pos:end="52:36">输入的第一行包含一个整数</name> <name pos:start="52:38" pos:end="52:43">tt（1</name><operator pos:start="52:44" pos:end="52:44">\</operator><name pos:start="52:45" pos:end="52:46">le</name> <name pos:start="52:48" pos:end="52:48">t</name><operator pos:start="52:49" pos:end="52:49">\</operator><name pos:start="52:50" pos:end="52:51">le</name> <literal type="number" pos:start="52:53" pos:end="52:93">1001≤t≤100），表示数据组数。</literal>

<name pos:start="54:1" pos:end="54:9">接下来</name> <name pos:start="54:11" pos:end="54:12">tt</name> <name pos:start="54:14" pos:end="54:55">组数据，每组数据第一行一个数</name> <name pos:start="54:57" pos:end="54:62">nn（1</name><operator pos:start="54:63" pos:end="54:63">\</operator><name pos:start="54:64" pos:end="54:65">le</name> <name pos:start="54:67" pos:end="54:67">n</name><operator pos:start="54:68" pos:end="54:68">\</operator><name pos:start="54:69" pos:end="54:70">le</name> <literal type="number" pos:start="54:72" pos:end="54:117">10001≤n≤1000），表示树的节点数。</literal>

<name pos:start="56:1" pos:end="56:6">然后</name> <name pos:start="56:8" pos:end="56:8">n</name><operator pos:start="56:9" pos:end="56:9">-</operator><literal type="number" pos:start="56:10" pos:end="56:15">1n−1</literal> <name pos:start="56:17" pos:end="56:37">行，每行两个数</name> <name pos:start="56:39" pos:end="56:49">xx，yy（0</name><operator pos:start="56:50" pos:end="56:50">\</operator><name pos:start="56:51" pos:end="56:52">lt</name> <name pos:start="56:54" pos:end="56:54">x</name></expr><operator pos:start="56:55" pos:end="56:55">,</operator><expr pos:start="56:56" pos:end="56:64"><name pos:start="56:56" pos:end="56:56">y</name><operator pos:start="56:57" pos:end="56:57">\</operator><name pos:start="56:58" pos:end="56:59">lt</name> <name pos:start="56:61" pos:end="56:62">n0</name><operator pos:start="56:63" pos:end="56:63">&lt;</operator><name pos:start="56:64" pos:end="56:64">x</name></expr><operator pos:start="56:65" pos:end="56:65">,</operator><expr pos:start="56:66" pos:end="63:98"><name pos:start="56:66" pos:end="56:66">y</name><operator pos:start="56:67" pos:end="56:67">&lt;</operator><name pos:start="56:68" pos:end="56:80">n），代表</name> <name pos:start="56:82" pos:end="56:83">yy</name> <name pos:start="56:85" pos:end="56:87">是</name> <name pos:start="56:89" pos:end="56:90">xx</name> <name pos:start="56:92" pos:end="56:145">的儿子节点，两数之间以一个空格分隔。</name>

<name pos:start="58:1" pos:end="58:12">输出格式</name>
<name pos:start="59:1" pos:end="59:6">输出</name> <name pos:start="59:8" pos:end="59:9">tt</name> <name pos:start="59:11" pos:end="59:46">行，每一行一个整数，代表</name> <name pos:start="59:48" pos:end="59:49">pp</name> <name pos:start="59:51" pos:end="59:68">节点的个数。</name>

<name pos:start="61:1" pos:end="61:63">输出时每行末尾的多余空格，不影响答案正确性</name>

<name pos:start="63:1" pos:end="63:69">要求使用「文件输入输出」的方式解题，输入文件为</name> <name pos:start="63:71" pos:end="63:92"><name pos:start="63:71" pos:end="63:71">p</name><operator pos:start="63:72" pos:end="63:72">.</operator><name pos:start="63:73" pos:end="63:92">in，输出文件为</name></name> <name pos:start="63:94" pos:end="63:98"><name pos:start="63:94" pos:end="63:94">p</name><operator pos:start="63:95" pos:end="63:95">.</operator><name pos:start="63:96" pos:end="63:98">out</name></name></expr>
</unit>
