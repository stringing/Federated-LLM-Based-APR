<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/155/155.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="10:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">sum</name><parameter_list pos:start="3:8" pos:end="3:16">(<parameter pos:start="3:9" pos:end="3:15"><decl pos:start="3:9" pos:end="3:15"><type pos:start="3:9" pos:end="3:11"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:15">sum</name></decl></parameter>)</parameter_list> <block pos:start="3:18" pos:end="10:1">{<block_content pos:start="4:5" pos:end="9:15">
    <decl_stmt pos:start="4:5" pos:end="4:16"><decl pos:start="4:5" pos:end="4:15"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:11">cnt</name> <init pos:start="4:13" pos:end="4:15">= <expr pos:start="4:15" pos:end="4:15"><literal type="number" pos:start="4:15" pos:end="4:15">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="5:5" pos:end="8:5">while <condition pos:start="5:11" pos:end="5:19">(<expr pos:start="5:12" pos:end="5:18"><name pos:start="5:12" pos:end="5:14">sum</name> <operator pos:start="5:16" pos:end="5:16">&gt;</operator> <literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr>)</condition> <block pos:start="5:21" pos:end="8:5">{<block_content pos:start="6:9" pos:end="7:18">
        <expr_stmt pos:start="6:9" pos:end="6:24"><expr pos:start="6:9" pos:end="6:23"><name pos:start="6:9" pos:end="6:11">cnt</name> <operator pos:start="6:13" pos:end="6:14">+=</operator> <name pos:start="6:16" pos:end="6:18">sum</name> <operator pos:start="6:20" pos:end="6:20">%</operator> <literal type="number" pos:start="6:22" pos:end="6:23">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="7:9" pos:end="7:18"><expr pos:start="7:9" pos:end="7:17"><name pos:start="7:9" pos:end="7:11">sum</name> <operator pos:start="7:13" pos:end="7:14">/=</operator> <literal type="number" pos:start="7:16" pos:end="7:17">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="9:5" pos:end="9:15">return <expr pos:start="9:12" pos:end="9:14"><name pos:start="9:12" pos:end="9:14">cnt</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="11:1" pos:end="13:1"><type pos:start="11:1" pos:end="11:4"><name pos:start="11:1" pos:end="11:4">bool</name></type> <name pos:start="11:6" pos:end="11:8">cmp</name><parameter_list pos:start="11:9" pos:end="11:22">(<parameter pos:start="11:10" pos:end="11:14"><decl pos:start="11:10" pos:end="11:14"><type pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:12">int</name></type> <name pos:start="11:14" pos:end="11:14">x</name></decl></parameter>, <parameter pos:start="11:17" pos:end="11:21"><decl pos:start="11:17" pos:end="11:21"><type pos:start="11:17" pos:end="11:21"><name pos:start="11:17" pos:end="11:19">int</name></type> <name pos:start="11:21" pos:end="11:21">y</name></decl></parameter>)</parameter_list> <block pos:start="11:24" pos:end="13:1">{<block_content pos:start="12:5" pos:end="12:28">
    <return pos:start="12:5" pos:end="12:28">return <expr pos:start="12:12" pos:end="12:27"><call pos:start="12:12" pos:end="12:17"><name pos:start="12:12" pos:end="12:14">sum</name><argument_list pos:start="12:15" pos:end="12:17">(<argument pos:start="12:16" pos:end="12:16"><expr pos:start="12:16" pos:end="12:16"><name pos:start="12:16" pos:end="12:16">x</name></expr></argument>)</argument_list></call> <operator pos:start="12:19" pos:end="12:20">&lt;=</operator> <call pos:start="12:22" pos:end="12:27"><name pos:start="12:22" pos:end="12:24">sum</name><argument_list pos:start="12:25" pos:end="12:27">(<argument pos:start="12:26" pos:end="12:26"><expr pos:start="12:26" pos:end="12:26"><name pos:start="12:26" pos:end="12:26">y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function pos:start="14:1" pos:end="27:1"><type pos:start="14:1" pos:end="14:3"><name pos:start="14:1" pos:end="14:3">int</name></type> <name pos:start="14:5" pos:end="14:8">main</name><parameter_list pos:start="14:9" pos:end="14:10">()</parameter_list> <block pos:start="14:12" pos:end="27:1">{<block_content pos:start="15:5" pos:end="26:13">
    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:13"><expr pos:start="16:5" pos:end="16:12"><name pos:start="16:5" pos:end="16:7">cin</name> <operator pos:start="16:9" pos:end="16:10">&gt;&gt;</operator> <name pos:start="16:12" pos:end="16:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:9">a</name><index pos:start="17:10" pos:end="17:14">[<expr pos:start="17:11" pos:end="17:13"><literal type="number" pos:start="17:11" pos:end="17:13">101</literal></expr>]</index></name></decl>;</decl_stmt>
    <for pos:start="18:5" pos:end="20:5">for <control pos:start="18:9" pos:end="18:31">(<init pos:start="18:10" pos:end="18:19"><decl pos:start="18:10" pos:end="18:18"><type pos:start="18:10" pos:end="18:12"><name pos:start="18:10" pos:end="18:12">int</name></type> <name pos:start="18:14" pos:end="18:14">i</name> <init pos:start="18:16" pos:end="18:18">= <expr pos:start="18:18" pos:end="18:18"><literal type="number" pos:start="18:18" pos:end="18:18">0</literal></expr></init></decl>;</init> <condition pos:start="18:21" pos:end="18:26"><expr pos:start="18:21" pos:end="18:25"><name pos:start="18:21" pos:end="18:21">i</name> <operator pos:start="18:23" pos:end="18:23">&lt;</operator> <name pos:start="18:25" pos:end="18:25">n</name></expr>;</condition> <incr pos:start="18:28" pos:end="18:30"><expr pos:start="18:28" pos:end="18:30"><name pos:start="18:28" pos:end="18:28">i</name><operator pos:start="18:29" pos:end="18:30">++</operator></expr></incr>)</control> <block pos:start="18:33" pos:end="20:5">{<block_content pos:start="19:9" pos:end="19:20">
        <expr_stmt pos:start="19:9" pos:end="19:20"><expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:11">cin</name> <operator pos:start="19:13" pos:end="19:14">&gt;&gt;</operator> <name pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:16">a</name><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><name pos:start="19:18" pos:end="19:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    
    <expr_stmt pos:start="22:5" pos:end="22:24"><expr pos:start="22:5" pos:end="22:23"><call pos:start="22:5" pos:end="22:23"><name pos:start="22:5" pos:end="22:8">sort</name><argument_list pos:start="22:9" pos:end="22:23">(<argument pos:start="22:10" pos:end="22:10"><expr pos:start="22:10" pos:end="22:10"><name pos:start="22:10" pos:end="22:10">a</name></expr></argument>, <argument pos:start="22:13" pos:end="22:17"><expr pos:start="22:13" pos:end="22:17"><name pos:start="22:13" pos:end="22:13">a</name> <operator pos:start="22:15" pos:end="22:15">+</operator> <name pos:start="22:17" pos:end="22:17">n</name></expr></argument>, <argument pos:start="22:20" pos:end="22:22"><expr pos:start="22:20" pos:end="22:22"><name pos:start="22:20" pos:end="22:22">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="23:5" pos:end="25:5">for <control pos:start="23:9" pos:end="23:31">(<init pos:start="23:10" pos:end="23:19"><decl pos:start="23:10" pos:end="23:18"><type pos:start="23:10" pos:end="23:12"><name pos:start="23:10" pos:end="23:12">int</name></type> <name pos:start="23:14" pos:end="23:14">i</name> <init pos:start="23:16" pos:end="23:18">= <expr pos:start="23:18" pos:end="23:18"><literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr></init></decl>;</init> <condition pos:start="23:21" pos:end="23:26"><expr pos:start="23:21" pos:end="23:25"><name pos:start="23:21" pos:end="23:21">i</name> <operator pos:start="23:23" pos:end="23:23">&lt;</operator> <name pos:start="23:25" pos:end="23:25">n</name></expr>;</condition> <incr pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:28">i</name><operator pos:start="23:29" pos:end="23:30">++</operator></expr></incr>)</control> <block pos:start="23:33" pos:end="25:5">{<block_content pos:start="24:9" pos:end="24:28">
        <expr_stmt pos:start="24:9" pos:end="24:28"><expr pos:start="24:9" pos:end="24:27"><name pos:start="24:9" pos:end="24:12">cout</name> <operator pos:start="24:14" pos:end="24:15">&lt;&lt;</operator> <name pos:start="24:17" pos:end="24:20"><name pos:start="24:17" pos:end="24:17">a</name><index pos:start="24:18" pos:end="24:20">[<expr pos:start="24:19" pos:end="24:19"><name pos:start="24:19" pos:end="24:19">i</name></expr>]</index></name> <operator pos:start="24:22" pos:end="24:23">&lt;&lt;</operator> <literal type="string" pos:start="24:25" pos:end="24:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="26:5" pos:end="26:13">return <expr pos:start="26:12" pos:end="26:12"><literal type="number" pos:start="26:12" pos:end="26:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
