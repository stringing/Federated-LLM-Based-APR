<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/832/832.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:7">define</cpp:directive> <cpp:macro pos:start="2:9" pos:end="2:10"><name pos:start="2:9" pos:end="2:10">ll</name></cpp:macro> <cpp:value pos:start="2:12" pos:end="2:20">long long</cpp:value></cpp:define>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:9"><decl pos:start="4:1" pos:end="4:8"><type pos:start="4:1" pos:end="4:6"><name pos:start="4:1" pos:end="4:6">string</name></type> <name pos:start="4:8" pos:end="4:8">a</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:14"><decl pos:start="5:1" pos:end="5:7"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:7">len</name></decl>,<decl pos:start="5:9" pos:end="5:9"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:9" pos:end="5:9">f</name></decl>,<decl pos:start="5:11" pos:end="5:11"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:11" pos:end="5:11">x</name></decl>,<decl pos:start="5:13" pos:end="5:13"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:13" pos:end="5:13">p</name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:15"><decl pos:start="6:1" pos:end="6:14"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">char</name></type> <name pos:start="6:6" pos:end="6:14"><name pos:start="6:6" pos:end="6:7">st</name><index pos:start="6:8" pos:end="6:14">[<expr pos:start="6:9" pos:end="6:13"><literal type="number" pos:start="6:9" pos:end="6:13">20000</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="14:1"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:10">change</name><parameter_list pos:start="7:11" pos:end="7:17">(<parameter pos:start="7:12" pos:end="7:16"><decl pos:start="7:12" pos:end="7:16"><type pos:start="7:12" pos:end="7:14"><name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:16">m</name></decl></parameter>)</parameter_list> <block pos:start="7:19" pos:end="14:1">{<block_content pos:start="8:5" pos:end="13:15">
    <decl_stmt pos:start="8:5" pos:end="8:20"><decl pos:start="8:5" pos:end="8:13"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:11">sum</name><init pos:start="8:12" pos:end="8:13">=<expr pos:start="8:13" pos:end="8:13"><literal type="number" pos:start="8:13" pos:end="8:13">0</literal></expr></init></decl>,<decl pos:start="8:15" pos:end="8:19"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:15" pos:end="8:17">cnt</name><init pos:start="8:18" pos:end="8:19">=<expr pos:start="8:19" pos:end="8:19"><literal type="number" pos:start="8:19" pos:end="8:19">5</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="9:5" pos:end="12:5">for <control pos:start="9:9" pos:end="9:35">(<init pos:start="9:10" pos:end="9:21"><decl pos:start="9:10" pos:end="9:20"><type pos:start="9:10" pos:end="9:12"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:14">i</name><init pos:start="9:15" pos:end="9:20">=<expr pos:start="9:16" pos:end="9:20"><name pos:start="9:16" pos:end="9:16">m</name><operator pos:start="9:17" pos:end="9:17">*</operator><literal type="number" pos:start="9:18" pos:end="9:19">8</literal><operator pos:start="9:19" pos:end="9:19">+</operator><literal type="number" pos:start="9:20" pos:end="9:20">3</literal></expr></init></decl>;</init><condition pos:start="9:22" pos:end="9:31"><expr pos:start="9:22" pos:end="9:30"><name pos:start="9:22" pos:end="9:22">i</name><operator pos:start="9:23" pos:end="9:23">&lt;</operator><operator pos:start="9:24" pos:end="9:24">(</operator><name pos:start="9:25" pos:end="9:25">m</name><operator pos:start="9:26" pos:end="9:26">+</operator><literal type="number" pos:start="9:27" pos:end="9:27">1</literal><operator pos:start="9:28" pos:end="9:28">)</operator><operator pos:start="9:29" pos:end="9:29">*</operator><literal type="number" pos:start="9:30" pos:end="9:30">8</literal></expr>;</condition><incr pos:start="9:32" pos:end="9:34"><expr pos:start="9:32" pos:end="9:34"><name pos:start="9:32" pos:end="9:32">i</name><operator pos:start="9:33" pos:end="9:34">++</operator></expr></incr>)</control> <block pos:start="9:37" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:39">
        <expr_stmt pos:start="10:9" pos:end="10:14"><expr pos:start="10:9" pos:end="10:13"><name pos:start="10:9" pos:end="10:11">cnt</name><operator pos:start="10:12" pos:end="10:13">--</operator></expr>;</expr_stmt>
        <if_stmt pos:start="11:9" pos:end="11:39"><if pos:start="11:9" pos:end="11:39">if <condition pos:start="11:12" pos:end="11:22">(<expr pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:13">a</name><index pos:start="11:14" pos:end="11:16">[<expr pos:start="11:15" pos:end="11:15"><name pos:start="11:15" pos:end="11:15">i</name></expr>]</index></name><operator pos:start="11:17" pos:end="11:18">==</operator><literal type="char" pos:start="11:19" pos:end="11:21">'1'</literal></expr>)</condition><block type="pseudo" pos:start="11:24" pos:end="11:39"><block_content pos:start="11:24" pos:end="11:39"> <expr_stmt pos:start="11:24" pos:end="11:39"><expr pos:start="11:24" pos:end="11:38"><name pos:start="11:24" pos:end="11:26">sum</name><operator pos:start="11:27" pos:end="11:28">+=</operator><call pos:start="11:29" pos:end="11:38"><name pos:start="11:29" pos:end="11:31">pow</name><argument_list pos:start="11:32" pos:end="11:38">(<argument pos:start="11:33" pos:end="11:33"><expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">2</literal></expr></argument>,<argument pos:start="11:35" pos:end="11:37"><expr pos:start="11:35" pos:end="11:37"><name pos:start="11:35" pos:end="11:37">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="13:5" pos:end="13:15">return <expr pos:start="13:12" pos:end="13:14"><name pos:start="13:12" pos:end="13:14">sum</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="15:1" pos:end="62:1"><type pos:start="15:1" pos:end="15:3"><name pos:start="15:1" pos:end="15:3">int</name></type> <name pos:start="15:5" pos:end="15:8">main</name><parameter_list pos:start="15:9" pos:end="15:10">()</parameter_list> <block pos:start="15:12" pos:end="62:1">{<block_content pos:start="16:5" pos:end="61:13">
    <expr_stmt pos:start="16:5" pos:end="16:40"><expr pos:start="16:5" pos:end="16:39"><call pos:start="16:5" pos:end="16:39"><name pos:start="16:5" pos:end="16:11">freopen</name><argument_list pos:start="16:12" pos:end="16:39">(<argument pos:start="16:13" pos:end="16:28"><expr pos:start="16:13" pos:end="16:28"><literal type="string" pos:start="16:13" pos:end="16:28">"information.in"</literal></expr></argument>,<argument pos:start="16:30" pos:end="16:32"><expr pos:start="16:30" pos:end="16:32"><literal type="string" pos:start="16:30" pos:end="16:32">"r"</literal></expr></argument>,<argument pos:start="16:34" pos:end="16:38"><expr pos:start="16:34" pos:end="16:38"><name pos:start="16:34" pos:end="16:38">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><call pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:11">freopen</name><argument_list pos:start="17:12" pos:end="17:41">(<argument pos:start="17:13" pos:end="17:29"><expr pos:start="17:13" pos:end="17:29"><literal type="string" pos:start="17:13" pos:end="17:29">"information.out"</literal></expr></argument>,<argument pos:start="17:31" pos:end="17:33"><expr pos:start="17:31" pos:end="17:33"><literal type="string" pos:start="17:31" pos:end="17:33">"w"</literal></expr></argument>,<argument pos:start="17:35" pos:end="17:40"><expr pos:start="17:35" pos:end="17:40"><name pos:start="17:35" pos:end="17:40">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:13"><expr pos:start="18:5" pos:end="18:12"><name pos:start="18:5" pos:end="18:7">cin</name> <operator pos:start="18:9" pos:end="18:10">&gt;&gt;</operator> <name pos:start="18:12" pos:end="18:12">a</name></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:7">len</name><operator pos:start="19:8" pos:end="19:8">=</operator><call pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:9">a</name><operator pos:start="19:10" pos:end="19:10">.</operator><name pos:start="19:11" pos:end="19:14">size</name></name><argument_list pos:start="19:15" pos:end="19:16">()</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="20:5" pos:end="23:5"><if pos:start="20:5" pos:end="23:5">if <condition pos:start="20:8" pos:end="20:17">(<expr pos:start="20:9" pos:end="20:16"><name pos:start="20:9" pos:end="20:11">len</name><operator pos:start="20:12" pos:end="20:12">%</operator><literal type="number" pos:start="20:13" pos:end="20:13">8</literal><operator pos:start="20:14" pos:end="20:15">!=</operator><literal type="number" pos:start="20:16" pos:end="20:16">0</literal></expr>)</condition> <block pos:start="20:19" pos:end="23:5">{<block_content pos:start="21:9" pos:end="22:17">
        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:12">cout</name> <operator pos:start="21:14" pos:end="21:15">&lt;&lt;</operator> <literal type="string" pos:start="21:17" pos:end="21:23">"Error"</literal> <operator pos:start="21:25" pos:end="21:26">&lt;&lt;</operator> <name pos:start="21:28" pos:end="21:31">endl</name></expr>;</expr_stmt>
        <return pos:start="22:9" pos:end="22:17">return <expr pos:start="22:16" pos:end="22:16"><literal type="number" pos:start="22:16" pos:end="22:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="24:5" pos:end="29:5">for <control pos:start="24:9" pos:end="24:27">(<init pos:start="24:10" pos:end="24:17"><decl pos:start="24:10" pos:end="24:16"><type pos:start="24:10" pos:end="24:12"><name pos:start="24:10" pos:end="24:12">int</name></type> <name pos:start="24:14" pos:end="24:14">i</name><init pos:start="24:15" pos:end="24:16">=<expr pos:start="24:16" pos:end="24:16"><literal type="number" pos:start="24:16" pos:end="24:16">0</literal></expr></init></decl>;</init><condition pos:start="24:18" pos:end="24:23"><expr pos:start="24:18" pos:end="24:22"><name pos:start="24:18" pos:end="24:18">i</name><operator pos:start="24:19" pos:end="24:19">&lt;</operator><name pos:start="24:20" pos:end="24:22">len</name></expr>;</condition><incr pos:start="24:24" pos:end="24:26"><expr pos:start="24:24" pos:end="24:26"><name pos:start="24:24" pos:end="24:24">i</name><operator pos:start="24:25" pos:end="24:26">++</operator></expr></incr>)</control> <block pos:start="24:29" pos:end="29:5">{<block_content pos:start="25:9" pos:end="28:9">
        <if_stmt pos:start="25:9" pos:end="28:9"><if pos:start="25:9" pos:end="28:9">if <condition pos:start="25:12" pos:end="25:35">(<expr pos:start="25:13" pos:end="25:34"><name pos:start="25:13" pos:end="25:16"><name pos:start="25:13" pos:end="25:13">a</name><index pos:start="25:14" pos:end="25:16">[<expr pos:start="25:15" pos:end="25:15"><name pos:start="25:15" pos:end="25:15">i</name></expr>]</index></name><operator pos:start="25:17" pos:end="25:18">!=</operator><literal type="char" pos:start="25:19" pos:end="25:21">'0'</literal> <operator pos:start="25:23" pos:end="25:24">&amp;&amp;</operator> <name pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:26">a</name><index pos:start="25:27" pos:end="25:29">[<expr pos:start="25:28" pos:end="25:28"><name pos:start="25:28" pos:end="25:28">i</name></expr>]</index></name><operator pos:start="25:30" pos:end="25:31">!=</operator><literal type="char" pos:start="25:32" pos:end="25:34">'1'</literal></expr>)</condition> <block pos:start="25:37" pos:end="28:9">{<block_content pos:start="26:13" pos:end="27:21">
            <expr_stmt pos:start="26:13" pos:end="26:36"><expr pos:start="26:13" pos:end="26:35"><name pos:start="26:13" pos:end="26:16">cout</name> <operator pos:start="26:18" pos:end="26:19">&lt;&lt;</operator> <literal type="string" pos:start="26:21" pos:end="26:27">"Error"</literal> <operator pos:start="26:29" pos:end="26:30">&lt;&lt;</operator> <name pos:start="26:32" pos:end="26:35">endl</name></expr>;</expr_stmt>
            <return pos:start="27:13" pos:end="27:21">return <expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="30:5" pos:end="55:5">for <control pos:start="30:9" pos:end="30:29">(<init pos:start="30:10" pos:end="30:17"><decl pos:start="30:10" pos:end="30:16"><type pos:start="30:10" pos:end="30:12"><name pos:start="30:10" pos:end="30:12">int</name></type> <name pos:start="30:14" pos:end="30:14">i</name><init pos:start="30:15" pos:end="30:16">=<expr pos:start="30:16" pos:end="30:16"><literal type="number" pos:start="30:16" pos:end="30:16">0</literal></expr></init></decl>;</init><condition pos:start="30:18" pos:end="30:25"><expr pos:start="30:18" pos:end="30:24"><name pos:start="30:18" pos:end="30:18">i</name><operator pos:start="30:19" pos:end="30:19">&lt;</operator><name pos:start="30:20" pos:end="30:22">len</name><operator pos:start="30:23" pos:end="30:23">/</operator><literal type="number" pos:start="30:24" pos:end="30:24">8</literal></expr>;</condition><incr pos:start="30:26" pos:end="30:28"><expr pos:start="30:26" pos:end="30:28"><name pos:start="30:26" pos:end="30:26">i</name><operator pos:start="30:27" pos:end="30:28">++</operator></expr></incr>)</control> <block pos:start="30:31" pos:end="55:5">{<block_content pos:start="31:9" pos:end="54:9">
        <if_stmt pos:start="31:9" pos:end="54:9"><if pos:start="31:9" pos:end="45:9">if <condition pos:start="31:12" pos:end="31:24">(<expr pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:13">a</name><index pos:start="31:14" pos:end="31:18">[<expr pos:start="31:15" pos:end="31:17"><name pos:start="31:15" pos:end="31:15">i</name><operator pos:start="31:16" pos:end="31:16">*</operator><literal type="number" pos:start="31:17" pos:end="31:17">8</literal></expr>]</index></name><operator pos:start="31:19" pos:end="31:20">==</operator><literal type="char" pos:start="31:21" pos:end="31:23">'1'</literal></expr>)</condition> <block pos:start="31:26" pos:end="45:9">{<block_content pos:start="32:13" pos:end="44:13">
            <if_stmt pos:start="32:13" pos:end="44:13"><if pos:start="32:13" pos:end="39:13">if <condition pos:start="32:16" pos:end="32:47">(<expr pos:start="32:17" pos:end="32:46"><name pos:start="32:17" pos:end="32:24"><name pos:start="32:17" pos:end="32:17">a</name><index pos:start="32:18" pos:end="32:24">[<expr pos:start="32:19" pos:end="32:23"><name pos:start="32:19" pos:end="32:19">i</name><operator pos:start="32:20" pos:end="32:20">*</operator><literal type="number" pos:start="32:21" pos:end="32:22">8</literal><operator pos:start="32:22" pos:end="32:22">+</operator><literal type="number" pos:start="32:23" pos:end="32:23">1</literal></expr>]</index></name><operator pos:start="32:25" pos:end="32:26">==</operator><literal type="char" pos:start="32:27" pos:end="32:29">'0'</literal> <operator pos:start="32:31" pos:end="32:32">&amp;&amp;</operator> <name pos:start="32:34" pos:end="32:41"><name pos:start="32:34" pos:end="32:34">a</name><index pos:start="32:35" pos:end="32:41">[<expr pos:start="32:36" pos:end="32:40"><name pos:start="32:36" pos:end="32:36">i</name><operator pos:start="32:37" pos:end="32:37">*</operator><literal type="number" pos:start="32:38" pos:end="32:39">8</literal><operator pos:start="32:39" pos:end="32:39">+</operator><literal type="number" pos:start="32:40" pos:end="32:40">2</literal></expr>]</index></name><operator pos:start="32:42" pos:end="32:43">==</operator><literal type="char" pos:start="32:44" pos:end="32:46">'1'</literal></expr>)</condition> <block pos:start="32:49" pos:end="39:13">{<block_content pos:start="33:17" pos:end="38:17">
                <decl_stmt pos:start="33:17" pos:end="33:37"><decl pos:start="33:17" pos:end="33:36"><type pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:19">int</name></type> <name pos:start="33:21" pos:end="33:26">number</name><init pos:start="33:27" pos:end="33:36">=<expr pos:start="33:28" pos:end="33:36"><call pos:start="33:28" pos:end="33:36"><name pos:start="33:28" pos:end="33:33">change</name><argument_list pos:start="33:34" pos:end="33:36">(<argument pos:start="33:35" pos:end="33:35"><expr pos:start="33:35" pos:end="33:35"><name pos:start="33:35" pos:end="33:35">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="34:17" pos:end="38:17"><if pos:start="34:17" pos:end="34:57">if <condition pos:start="34:20" pos:end="34:31">(<expr pos:start="34:21" pos:end="34:30"><name pos:start="34:21" pos:end="34:26">number</name><operator pos:start="34:27" pos:end="34:28">&lt;=</operator><literal type="number" pos:start="34:29" pos:end="34:30">25</literal></expr>)</condition><block type="pseudo" pos:start="34:33" pos:end="34:57"><block_content pos:start="34:33" pos:end="34:57"> <expr_stmt pos:start="34:33" pos:end="34:57"><expr pos:start="34:33" pos:end="34:56"><name pos:start="34:33" pos:end="34:39"><name pos:start="34:33" pos:end="34:34">st</name><index pos:start="34:35" pos:end="34:39">[<expr pos:start="34:36" pos:end="34:38"><name pos:start="34:36" pos:end="34:36">p</name><operator pos:start="34:37" pos:end="34:38">++</operator></expr>]</index></name><operator pos:start="34:40" pos:end="34:40">=</operator><call pos:start="34:41" pos:end="34:56"><name pos:start="34:41" pos:end="34:44">char</name><argument_list pos:start="34:45" pos:end="34:56">(<argument pos:start="34:46" pos:end="34:55"><expr pos:start="34:46" pos:end="34:55"><name pos:start="34:46" pos:end="34:51">number</name><operator pos:start="34:52" pos:end="34:52">+</operator><literal type="char" pos:start="34:53" pos:end="34:55">'A'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="35:17" pos:end="38:17">else <block pos:start="35:22" pos:end="38:17">{<block_content pos:start="36:21" pos:end="37:29">
                    <expr_stmt pos:start="36:21" pos:end="36:44"><expr pos:start="36:21" pos:end="36:43"><name pos:start="36:21" pos:end="36:24">cout</name> <operator pos:start="36:26" pos:end="36:27">&lt;&lt;</operator> <literal type="string" pos:start="36:29" pos:end="36:35">"Error"</literal> <operator pos:start="36:37" pos:end="36:38">&lt;&lt;</operator> <name pos:start="36:40" pos:end="36:43">endl</name></expr>;</expr_stmt>
                    <return pos:start="37:21" pos:end="37:29">return <expr pos:start="37:28" pos:end="37:28"><literal type="number" pos:start="37:28" pos:end="37:28">0</literal></expr>;</return>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="39:15" pos:end="41:13">else if <condition pos:start="39:23" pos:end="39:54">(<expr pos:start="39:24" pos:end="39:53"><name pos:start="39:24" pos:end="39:31"><name pos:start="39:24" pos:end="39:24">a</name><index pos:start="39:25" pos:end="39:31">[<expr pos:start="39:26" pos:end="39:30"><name pos:start="39:26" pos:end="39:26">i</name><operator pos:start="39:27" pos:end="39:27">*</operator><literal type="number" pos:start="39:28" pos:end="39:29">8</literal><operator pos:start="39:29" pos:end="39:29">+</operator><literal type="number" pos:start="39:30" pos:end="39:30">1</literal></expr>]</index></name><operator pos:start="39:32" pos:end="39:33">==</operator><literal type="char" pos:start="39:34" pos:end="39:36">'1'</literal> <operator pos:start="39:38" pos:end="39:39">&amp;&amp;</operator> <name pos:start="39:41" pos:end="39:48"><name pos:start="39:41" pos:end="39:41">a</name><index pos:start="39:42" pos:end="39:48">[<expr pos:start="39:43" pos:end="39:47"><name pos:start="39:43" pos:end="39:43">i</name><operator pos:start="39:44" pos:end="39:44">*</operator><literal type="number" pos:start="39:45" pos:end="39:46">8</literal><operator pos:start="39:46" pos:end="39:46">+</operator><literal type="number" pos:start="39:47" pos:end="39:47">2</literal></expr>]</index></name><operator pos:start="39:49" pos:end="39:50">==</operator><literal type="char" pos:start="39:51" pos:end="39:53">'1'</literal></expr>)</condition> <block pos:start="39:56" pos:end="41:13">{<block_content pos:start="40:17" pos:end="40:28">
                <expr_stmt pos:start="40:17" pos:end="40:28"><expr pos:start="40:17" pos:end="40:27"><name pos:start="40:17" pos:end="40:23"><name pos:start="40:17" pos:end="40:18">st</name><index pos:start="40:19" pos:end="40:23">[<expr pos:start="40:20" pos:end="40:22"><name pos:start="40:20" pos:end="40:20">p</name><operator pos:start="40:21" pos:end="40:22">++</operator></expr>]</index></name><operator pos:start="40:24" pos:end="40:24">=</operator><literal type="char" pos:start="40:25" pos:end="40:27">' '</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="41:15" pos:end="44:13">else <block pos:start="41:20" pos:end="44:13">{<block_content pos:start="42:17" pos:end="43:25">
                <expr_stmt pos:start="42:17" pos:end="42:40"><expr pos:start="42:17" pos:end="42:39"><name pos:start="42:17" pos:end="42:20">cout</name> <operator pos:start="42:22" pos:end="42:23">&lt;&lt;</operator> <literal type="string" pos:start="42:25" pos:end="42:31">"Error"</literal> <operator pos:start="42:33" pos:end="42:34">&lt;&lt;</operator> <name pos:start="42:36" pos:end="42:39">endl</name></expr>;</expr_stmt>
                <return pos:start="43:17" pos:end="43:25">return <expr pos:start="43:24" pos:end="43:24"><literal type="number" pos:start="43:24" pos:end="43:24">0</literal></expr>;</return>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if> <else pos:start="45:11" pos:end="54:9">else <block pos:start="45:16" pos:end="54:9">{<block_content pos:start="46:13" pos:end="53:13">
            <if_stmt pos:start="46:13" pos:end="53:13"><if pos:start="46:13" pos:end="49:13">if <condition pos:start="46:16" pos:end="46:21">(<expr pos:start="46:17" pos:end="46:20"><name pos:start="46:17" pos:end="46:17">f</name><operator pos:start="46:18" pos:end="46:19">==</operator><literal type="number" pos:start="46:20" pos:end="46:20">0</literal></expr>)</condition> <block pos:start="46:23" pos:end="49:13">{<block_content pos:start="47:17" pos:end="48:20">
                <expr_stmt pos:start="47:17" pos:end="47:31"><expr pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:17">x</name><operator pos:start="47:18" pos:end="47:19">+=</operator><call pos:start="47:20" pos:end="47:28"><name pos:start="47:20" pos:end="47:25">change</name><argument_list pos:start="47:26" pos:end="47:28">(<argument pos:start="47:27" pos:end="47:27"><expr pos:start="47:27" pos:end="47:27"><name pos:start="47:27" pos:end="47:27">i</name></expr></argument>)</argument_list></call><operator pos:start="47:29" pos:end="47:29">/</operator><literal type="number" pos:start="47:30" pos:end="47:30">2</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="48:17" pos:end="48:20"><expr pos:start="48:17" pos:end="48:19"><name pos:start="48:17" pos:end="48:17">f</name><operator pos:start="48:18" pos:end="48:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="49:15" pos:end="53:13">else if <condition pos:start="49:23" pos:end="49:28">(<expr pos:start="49:24" pos:end="49:27"><name pos:start="49:24" pos:end="49:24">f</name><operator pos:start="49:25" pos:end="49:26">==</operator><literal type="number" pos:start="49:27" pos:end="49:27">1</literal></expr>)</condition> <block pos:start="49:30" pos:end="53:13">{<block_content pos:start="50:17" pos:end="52:20">
                <expr_stmt pos:start="50:17" pos:end="50:20"><expr pos:start="50:17" pos:end="50:19"><name pos:start="50:17" pos:end="50:17">f</name><operator pos:start="50:18" pos:end="50:18">=</operator><literal type="number" pos:start="50:19" pos:end="50:19">0</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="51:17" pos:end="51:48"><expr pos:start="51:17" pos:end="51:47"><name pos:start="51:17" pos:end="51:23"><name pos:start="51:17" pos:end="51:18">st</name><index pos:start="51:19" pos:end="51:23">[<expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:20">p</name><operator pos:start="51:21" pos:end="51:22">++</operator></expr>]</index></name><operator pos:start="51:24" pos:end="51:24">=</operator><call pos:start="51:25" pos:end="51:47"><name pos:start="51:25" pos:end="51:28">char</name><argument_list pos:start="51:29" pos:end="51:47">(<argument pos:start="51:30" pos:end="51:46"><expr pos:start="51:30" pos:end="51:46"><name pos:start="51:30" pos:end="51:30">x</name><operator pos:start="51:31" pos:end="51:31">+</operator><call pos:start="51:32" pos:end="51:40"><name pos:start="51:32" pos:end="51:37">change</name><argument_list pos:start="51:38" pos:end="51:40">(<argument pos:start="51:39" pos:end="51:39"><expr pos:start="51:39" pos:end="51:39"><name pos:start="51:39" pos:end="51:39">i</name></expr></argument>)</argument_list></call><operator pos:start="51:41" pos:end="51:41">/</operator><literal type="number" pos:start="51:42" pos:end="51:43">2</literal><operator pos:start="51:43" pos:end="51:43">+</operator><literal type="char" pos:start="51:44" pos:end="51:46">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="52:17" pos:end="52:20"><expr pos:start="52:17" pos:end="52:19"><name pos:start="52:17" pos:end="52:17">x</name><operator pos:start="52:18" pos:end="52:18">=</operator><literal type="number" pos:start="52:19" pos:end="52:19">0</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="56:5" pos:end="59:5"><if pos:start="56:5" pos:end="59:5">if <condition pos:start="56:8" pos:end="56:13">(<expr pos:start="56:9" pos:end="56:12"><name pos:start="56:9" pos:end="56:9">f</name><operator pos:start="56:10" pos:end="56:11">==</operator><literal type="number" pos:start="56:12" pos:end="56:12">1</literal></expr>)</condition> <block pos:start="56:15" pos:end="59:5">{<block_content pos:start="57:9" pos:end="58:17">
        <expr_stmt pos:start="57:9" pos:end="57:32"><expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:12">cout</name> <operator pos:start="57:14" pos:end="57:15">&lt;&lt;</operator> <literal type="string" pos:start="57:17" pos:end="57:23">"Error"</literal> <operator pos:start="57:25" pos:end="57:26">&lt;&lt;</operator> <name pos:start="57:28" pos:end="57:31">endl</name></expr>;</expr_stmt>
        <return pos:start="58:9" pos:end="58:17">return <expr pos:start="58:16" pos:end="58:16"><literal type="number" pos:start="58:16" pos:end="58:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="60:5" pos:end="60:40">for <control pos:start="60:9" pos:end="60:25">(<init pos:start="60:10" pos:end="60:17"><decl pos:start="60:10" pos:end="60:16"><type pos:start="60:10" pos:end="60:12"><name pos:start="60:10" pos:end="60:12">int</name></type> <name pos:start="60:14" pos:end="60:14">i</name><init pos:start="60:15" pos:end="60:16">=<expr pos:start="60:16" pos:end="60:16"><literal type="number" pos:start="60:16" pos:end="60:16">0</literal></expr></init></decl>;</init><condition pos:start="60:18" pos:end="60:21"><expr pos:start="60:18" pos:end="60:20"><name pos:start="60:18" pos:end="60:18">i</name><operator pos:start="60:19" pos:end="60:19">&lt;</operator><name pos:start="60:20" pos:end="60:20">p</name></expr>;</condition><incr pos:start="60:22" pos:end="60:24"><expr pos:start="60:22" pos:end="60:24"><name pos:start="60:22" pos:end="60:22">i</name><operator pos:start="60:23" pos:end="60:24">++</operator></expr></incr>)</control><block type="pseudo" pos:start="60:27" pos:end="60:40"><block_content pos:start="60:27" pos:end="60:40"> <expr_stmt pos:start="60:27" pos:end="60:40"><expr pos:start="60:27" pos:end="60:39"><name pos:start="60:27" pos:end="60:30">cout</name> <operator pos:start="60:32" pos:end="60:33">&lt;&lt;</operator> <name pos:start="60:35" pos:end="60:39"><name pos:start="60:35" pos:end="60:36">st</name><index pos:start="60:37" pos:end="60:39">[<expr pos:start="60:38" pos:end="60:38"><name pos:start="60:38" pos:end="60:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
