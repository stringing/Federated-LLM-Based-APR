<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/213/213.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="57:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="57:1">{<block_content pos:start="4:5" pos:end="56:13">
    <decl_stmt pos:start="4:5" pos:end="4:21"><decl pos:start="4:5" pos:end="4:17"><type pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:9">stack</name><argument_list type="generic" pos:start="4:10" pos:end="4:14">&lt;<argument pos:start="4:11" pos:end="4:13"><expr pos:start="4:11" pos:end="4:13"><name pos:start="4:11" pos:end="4:13">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="4:16" pos:end="4:17">s1</name></decl>,<decl pos:start="4:19" pos:end="4:20"><type ref="prev" pos:start="4:5" pos:end="4:14"/><name pos:start="4:19" pos:end="4:20">s2</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:11"><expr pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:7">cin</name><operator pos:start="6:8" pos:end="6:9">&gt;&gt;</operator><name pos:start="6:10" pos:end="6:10">n</name></expr>;</expr_stmt>
    <while pos:start="7:5" pos:end="37:5">while<condition pos:start="7:10" pos:end="7:14">(<expr pos:start="7:11" pos:end="7:13"><name pos:start="7:11" pos:end="7:11">n</name><operator pos:start="7:12" pos:end="7:13">--</operator></expr>)</condition><block pos:start="7:15" pos:end="37:5">{<block_content pos:start="8:9" pos:end="36:9">
        <decl_stmt pos:start="8:9" pos:end="8:21"><decl pos:start="8:9" pos:end="8:16"><type pos:start="8:9" pos:end="8:12"><name pos:start="8:9" pos:end="8:12">char</name></type> <name pos:start="8:14" pos:end="8:16">op1</name></decl>,<decl pos:start="8:18" pos:end="8:20"><type ref="prev" pos:start="8:9" pos:end="8:12"/><name pos:start="8:18" pos:end="8:20">op2</name></decl>;</decl_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:22"><expr pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:11">cin</name><operator pos:start="9:12" pos:end="9:13">&gt;&gt;</operator><name pos:start="9:14" pos:end="9:16">op1</name><operator pos:start="9:17" pos:end="9:18">&gt;&gt;</operator><name pos:start="9:19" pos:end="9:21">op2</name></expr>;</expr_stmt>
        <if_stmt pos:start="10:9" pos:end="36:9"><if pos:start="10:9" pos:end="23:9">if<condition pos:start="10:11" pos:end="10:20">(<expr pos:start="10:12" pos:end="10:19"><name pos:start="10:12" pos:end="10:14">op1</name><operator pos:start="10:15" pos:end="10:16">==</operator><literal type="char" pos:start="10:17" pos:end="10:19">'A'</literal></expr>)</condition><block pos:start="10:21" pos:end="23:9">{<block_content pos:start="11:13" pos:end="22:13">
            <if_stmt pos:start="11:13" pos:end="22:13"><if pos:start="11:13" pos:end="15:13">if<condition pos:start="11:15" pos:end="11:24">(<expr pos:start="11:16" pos:end="11:23"><name pos:start="11:16" pos:end="11:18">op2</name><operator pos:start="11:19" pos:end="11:20">==</operator><literal type="char" pos:start="11:21" pos:end="11:23">'I'</literal></expr>)</condition><block pos:start="11:25" pos:end="15:13">{<block_content pos:start="12:17" pos:end="14:30">
                <decl_stmt pos:start="12:17" pos:end="12:25"><decl pos:start="12:17" pos:end="12:24"><type pos:start="12:17" pos:end="12:19"><name pos:start="12:17" pos:end="12:19">int</name></type> <name pos:start="12:21" pos:end="12:24">temp</name></decl>;</decl_stmt>
                <expr_stmt pos:start="13:17" pos:end="13:26"><expr pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:19">cin</name><operator pos:start="13:20" pos:end="13:21">&gt;&gt;</operator><name pos:start="13:22" pos:end="13:25">temp</name></expr>;</expr_stmt>
                <expr_stmt pos:start="14:17" pos:end="14:30"><expr pos:start="14:17" pos:end="14:29"><call pos:start="14:17" pos:end="14:29"><name pos:start="14:17" pos:end="14:23"><name pos:start="14:17" pos:end="14:18">s1</name><operator pos:start="14:19" pos:end="14:19">.</operator><name pos:start="14:20" pos:end="14:23">push</name></name><argument_list pos:start="14:24" pos:end="14:29">(<argument pos:start="14:25" pos:end="14:28"><expr pos:start="14:25" pos:end="14:28"><name pos:start="14:25" pos:end="14:28">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="15:14" pos:end="17:13">else if<condition pos:start="15:21" pos:end="15:30">(<expr pos:start="15:22" pos:end="15:29"><name pos:start="15:22" pos:end="15:24">op2</name><operator pos:start="15:25" pos:end="15:26">==</operator><literal type="char" pos:start="15:27" pos:end="15:29">'D'</literal></expr>)</condition><block pos:start="15:31" pos:end="17:13">{<block_content pos:start="16:17" pos:end="16:39">
                <if_stmt pos:start="16:17" pos:end="16:39"><if pos:start="16:17" pos:end="16:39">if<condition pos:start="16:19" pos:end="16:29">(<expr pos:start="16:20" pos:end="16:28"><call pos:start="16:20" pos:end="16:28"><name pos:start="16:20" pos:end="16:26"><name pos:start="16:20" pos:end="16:21">s1</name><operator pos:start="16:22" pos:end="16:22">.</operator><name pos:start="16:23" pos:end="16:26">size</name></name><argument_list pos:start="16:27" pos:end="16:28">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="16:31" pos:end="16:39"><block_content pos:start="16:31" pos:end="16:39"> <expr_stmt pos:start="16:31" pos:end="16:39"><expr pos:start="16:31" pos:end="16:38"><call pos:start="16:31" pos:end="16:38"><name pos:start="16:31" pos:end="16:36"><name pos:start="16:31" pos:end="16:32">s1</name><operator pos:start="16:33" pos:end="16:33">.</operator><name pos:start="16:34" pos:end="16:36">pop</name></name><argument_list pos:start="16:37" pos:end="16:38">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if><else pos:start="17:14" pos:end="22:13">else<block pos:start="17:18" pos:end="22:13">{<block_content pos:start="18:17" pos:end="21:17">
                <while pos:start="18:17" pos:end="21:17">while<condition pos:start="18:22" pos:end="18:32">(<expr pos:start="18:23" pos:end="18:31"><call pos:start="18:23" pos:end="18:31"><name pos:start="18:23" pos:end="18:29"><name pos:start="18:23" pos:end="18:24">s2</name><operator pos:start="18:25" pos:end="18:25">.</operator><name pos:start="18:26" pos:end="18:29">size</name></name><argument_list pos:start="18:30" pos:end="18:31">()</argument_list></call></expr>)</condition><block pos:start="18:33" pos:end="21:17">{<block_content pos:start="19:21" pos:end="20:29">
                    <expr_stmt pos:start="19:21" pos:end="19:38"><expr pos:start="19:21" pos:end="19:37"><call pos:start="19:21" pos:end="19:37"><name pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:22">s1</name><operator pos:start="19:23" pos:end="19:23">.</operator><name pos:start="19:24" pos:end="19:27">push</name></name><argument_list pos:start="19:28" pos:end="19:37">(<argument pos:start="19:29" pos:end="19:36"><expr pos:start="19:29" pos:end="19:36"><call pos:start="19:29" pos:end="19:36"><name pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:30">s2</name><operator pos:start="19:31" pos:end="19:31">.</operator><name pos:start="19:32" pos:end="19:34">top</name></name><argument_list pos:start="19:35" pos:end="19:36">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="20:21" pos:end="20:29"><expr pos:start="20:21" pos:end="20:28"><call pos:start="20:21" pos:end="20:28"><name pos:start="20:21" pos:end="20:26"><name pos:start="20:21" pos:end="20:22">s2</name><operator pos:start="20:23" pos:end="20:23">.</operator><name pos:start="20:24" pos:end="20:26">pop</name></name><argument_list pos:start="20:27" pos:end="20:28">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="23:10" pos:end="36:9">else if<condition pos:start="23:17" pos:end="23:26">(<expr pos:start="23:18" pos:end="23:25"><name pos:start="23:18" pos:end="23:20">op1</name><operator pos:start="23:21" pos:end="23:22">==</operator><literal type="char" pos:start="23:23" pos:end="23:25">'B'</literal></expr>)</condition><block pos:start="23:27" pos:end="36:9">{<block_content pos:start="24:13" pos:end="35:13">
            <if_stmt pos:start="24:13" pos:end="35:13"><if pos:start="24:13" pos:end="28:13">if<condition pos:start="24:15" pos:end="24:24">(<expr pos:start="24:16" pos:end="24:23"><name pos:start="24:16" pos:end="24:18">op2</name><operator pos:start="24:19" pos:end="24:20">==</operator><literal type="char" pos:start="24:21" pos:end="24:23">'I'</literal></expr>)</condition><block pos:start="24:25" pos:end="28:13">{<block_content pos:start="25:17" pos:end="27:30">
                <decl_stmt pos:start="25:17" pos:end="25:25"><decl pos:start="25:17" pos:end="25:24"><type pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">int</name></type> <name pos:start="25:21" pos:end="25:24">temp</name></decl>;</decl_stmt>
                <expr_stmt pos:start="26:17" pos:end="26:26"><expr pos:start="26:17" pos:end="26:25"><name pos:start="26:17" pos:end="26:19">cin</name><operator pos:start="26:20" pos:end="26:21">&gt;&gt;</operator><name pos:start="26:22" pos:end="26:25">temp</name></expr>;</expr_stmt>
                <expr_stmt pos:start="27:17" pos:end="27:30"><expr pos:start="27:17" pos:end="27:29"><call pos:start="27:17" pos:end="27:29"><name pos:start="27:17" pos:end="27:23"><name pos:start="27:17" pos:end="27:18">s2</name><operator pos:start="27:19" pos:end="27:19">.</operator><name pos:start="27:20" pos:end="27:23">push</name></name><argument_list pos:start="27:24" pos:end="27:29">(<argument pos:start="27:25" pos:end="27:28"><expr pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:28">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="28:14" pos:end="30:13">else if<condition pos:start="28:21" pos:end="28:30">(<expr pos:start="28:22" pos:end="28:29"><name pos:start="28:22" pos:end="28:24">op2</name><operator pos:start="28:25" pos:end="28:26">==</operator><literal type="char" pos:start="28:27" pos:end="28:29">'D'</literal></expr>)</condition><block pos:start="28:31" pos:end="30:13">{<block_content pos:start="29:17" pos:end="29:39">
                <if_stmt pos:start="29:17" pos:end="29:39"><if pos:start="29:17" pos:end="29:39">if<condition pos:start="29:19" pos:end="29:29">(<expr pos:start="29:20" pos:end="29:28"><call pos:start="29:20" pos:end="29:28"><name pos:start="29:20" pos:end="29:26"><name pos:start="29:20" pos:end="29:21">s2</name><operator pos:start="29:22" pos:end="29:22">.</operator><name pos:start="29:23" pos:end="29:26">size</name></name><argument_list pos:start="29:27" pos:end="29:28">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:31" pos:end="29:39"><block_content pos:start="29:31" pos:end="29:39"> <expr_stmt pos:start="29:31" pos:end="29:39"><expr pos:start="29:31" pos:end="29:38"><call pos:start="29:31" pos:end="29:38"><name pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:32">s2</name><operator pos:start="29:33" pos:end="29:33">.</operator><name pos:start="29:34" pos:end="29:36">pop</name></name><argument_list pos:start="29:37" pos:end="29:38">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if><else pos:start="30:14" pos:end="35:13">else<block pos:start="30:18" pos:end="35:13">{<block_content pos:start="31:17" pos:end="34:17">
                <while pos:start="31:17" pos:end="34:17">while<condition pos:start="31:22" pos:end="31:32">(<expr pos:start="31:23" pos:end="31:31"><call pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:29"><name pos:start="31:23" pos:end="31:24">s1</name><operator pos:start="31:25" pos:end="31:25">.</operator><name pos:start="31:26" pos:end="31:29">size</name></name><argument_list pos:start="31:30" pos:end="31:31">()</argument_list></call></expr>)</condition><block pos:start="31:33" pos:end="34:17">{<block_content pos:start="32:21" pos:end="33:29">
                    <expr_stmt pos:start="32:21" pos:end="32:38"><expr pos:start="32:21" pos:end="32:37"><call pos:start="32:21" pos:end="32:37"><name pos:start="32:21" pos:end="32:27"><name pos:start="32:21" pos:end="32:22">s2</name><operator pos:start="32:23" pos:end="32:23">.</operator><name pos:start="32:24" pos:end="32:27">push</name></name><argument_list pos:start="32:28" pos:end="32:37">(<argument pos:start="32:29" pos:end="32:36"><expr pos:start="32:29" pos:end="32:36"><call pos:start="32:29" pos:end="32:36"><name pos:start="32:29" pos:end="32:34"><name pos:start="32:29" pos:end="32:30">s1</name><operator pos:start="32:31" pos:end="32:31">.</operator><name pos:start="32:32" pos:end="32:34">top</name></name><argument_list pos:start="32:35" pos:end="32:36">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="33:21" pos:end="33:29"><expr pos:start="33:21" pos:end="33:28"><call pos:start="33:21" pos:end="33:28"><name pos:start="33:21" pos:end="33:26"><name pos:start="33:21" pos:end="33:22">s2</name><operator pos:start="33:23" pos:end="33:23">.</operator><name pos:start="33:24" pos:end="33:26">pop</name></name><argument_list pos:start="33:27" pos:end="33:28">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></while>
    <decl_stmt pos:start="38:5" pos:end="38:19"><decl pos:start="38:5" pos:end="38:16"><type pos:start="38:5" pos:end="38:14"><name pos:start="38:5" pos:end="38:14"><name pos:start="38:5" pos:end="38:9">stack</name><argument_list type="generic" pos:start="38:10" pos:end="38:14">&lt;<argument pos:start="38:11" pos:end="38:13"><expr pos:start="38:11" pos:end="38:13"><name pos:start="38:11" pos:end="38:13">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="38:16" pos:end="38:16">a</name></decl>,<decl pos:start="38:18" pos:end="38:18"><type ref="prev" pos:start="38:5" pos:end="38:14"/><name pos:start="38:18" pos:end="38:18">b</name></decl>;</decl_stmt>
    <while pos:start="39:5" pos:end="42:5">while<condition pos:start="39:10" pos:end="39:20">(<expr pos:start="39:11" pos:end="39:19"><call pos:start="39:11" pos:end="39:19"><name pos:start="39:11" pos:end="39:17"><name pos:start="39:11" pos:end="39:12">s1</name><operator pos:start="39:13" pos:end="39:13">.</operator><name pos:start="39:14" pos:end="39:17">size</name></name><argument_list pos:start="39:18" pos:end="39:19">()</argument_list></call></expr>)</condition><block pos:start="39:21" pos:end="42:5">{<block_content pos:start="40:9" pos:end="41:17">
        <expr_stmt pos:start="40:9" pos:end="40:25"><expr pos:start="40:9" pos:end="40:24"><call pos:start="40:9" pos:end="40:24"><name pos:start="40:9" pos:end="40:14"><name pos:start="40:9" pos:end="40:9">a</name><operator pos:start="40:10" pos:end="40:10">.</operator><name pos:start="40:11" pos:end="40:14">push</name></name><argument_list pos:start="40:15" pos:end="40:24">(<argument pos:start="40:16" pos:end="40:23"><expr pos:start="40:16" pos:end="40:23"><call pos:start="40:16" pos:end="40:23"><name pos:start="40:16" pos:end="40:21"><name pos:start="40:16" pos:end="40:17">s1</name><operator pos:start="40:18" pos:end="40:18">.</operator><name pos:start="40:19" pos:end="40:21">top</name></name><argument_list pos:start="40:22" pos:end="40:23">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="41:9" pos:end="41:17"><expr pos:start="41:9" pos:end="41:16"><call pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:10">s1</name><operator pos:start="41:11" pos:end="41:11">.</operator><name pos:start="41:12" pos:end="41:14">pop</name></name><argument_list pos:start="41:15" pos:end="41:16">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="43:5" pos:end="46:5">while<condition pos:start="43:10" pos:end="43:20">(<expr pos:start="43:11" pos:end="43:19"><call pos:start="43:11" pos:end="43:19"><name pos:start="43:11" pos:end="43:17"><name pos:start="43:11" pos:end="43:12">s2</name><operator pos:start="43:13" pos:end="43:13">.</operator><name pos:start="43:14" pos:end="43:17">size</name></name><argument_list pos:start="43:18" pos:end="43:19">()</argument_list></call></expr>)</condition><block pos:start="43:21" pos:end="46:5">{<block_content pos:start="44:9" pos:end="45:17">
        <expr_stmt pos:start="44:9" pos:end="44:25"><expr pos:start="44:9" pos:end="44:24"><call pos:start="44:9" pos:end="44:24"><name pos:start="44:9" pos:end="44:14"><name pos:start="44:9" pos:end="44:9">b</name><operator pos:start="44:10" pos:end="44:10">.</operator><name pos:start="44:11" pos:end="44:14">push</name></name><argument_list pos:start="44:15" pos:end="44:24">(<argument pos:start="44:16" pos:end="44:23"><expr pos:start="44:16" pos:end="44:23"><call pos:start="44:16" pos:end="44:23"><name pos:start="44:16" pos:end="44:21"><name pos:start="44:16" pos:end="44:17">s2</name><operator pos:start="44:18" pos:end="44:18">.</operator><name pos:start="44:19" pos:end="44:21">top</name></name><argument_list pos:start="44:22" pos:end="44:23">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="45:9" pos:end="45:17"><expr pos:start="45:9" pos:end="45:16"><call pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:10">s2</name><operator pos:start="45:11" pos:end="45:11">.</operator><name pos:start="45:12" pos:end="45:14">pop</name></name><argument_list pos:start="45:15" pos:end="45:16">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="47:5" pos:end="50:5">while<condition pos:start="47:10" pos:end="47:19">(<expr pos:start="47:11" pos:end="47:18"><call pos:start="47:11" pos:end="47:18"><name pos:start="47:11" pos:end="47:16"><name pos:start="47:11" pos:end="47:11">a</name><operator pos:start="47:12" pos:end="47:12">.</operator><name pos:start="47:13" pos:end="47:16">size</name></name><argument_list pos:start="47:17" pos:end="47:18">()</argument_list></call></expr>)</condition><block pos:start="47:20" pos:end="50:5">{<block_content pos:start="48:9" pos:end="49:16">
        <expr_stmt pos:start="48:9" pos:end="48:27"><expr pos:start="48:9" pos:end="48:26"><name pos:start="48:9" pos:end="48:12">cout</name><operator pos:start="48:13" pos:end="48:14">&lt;&lt;</operator><call pos:start="48:15" pos:end="48:21"><name pos:start="48:15" pos:end="48:19"><name pos:start="48:15" pos:end="48:15">a</name><operator pos:start="48:16" pos:end="48:16">.</operator><name pos:start="48:17" pos:end="48:19">top</name></name><argument_list pos:start="48:20" pos:end="48:21">()</argument_list></call><operator pos:start="48:22" pos:end="48:23">&lt;&lt;</operator><literal type="string" pos:start="48:24" pos:end="48:26">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="49:9" pos:end="49:16"><expr pos:start="49:9" pos:end="49:15"><call pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:13"><name pos:start="49:9" pos:end="49:9">a</name><operator pos:start="49:10" pos:end="49:10">.</operator><name pos:start="49:11" pos:end="49:13">pop</name></name><argument_list pos:start="49:14" pos:end="49:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="51:5" pos:end="51:15"><expr pos:start="51:5" pos:end="51:14"><name pos:start="51:5" pos:end="51:8">cout</name><operator pos:start="51:9" pos:end="51:10">&lt;&lt;</operator><name pos:start="51:11" pos:end="51:14">endl</name></expr>;</expr_stmt>
    <while pos:start="52:5" pos:end="55:5">while<condition pos:start="52:10" pos:end="52:19">(<expr pos:start="52:11" pos:end="52:18"><call pos:start="52:11" pos:end="52:18"><name pos:start="52:11" pos:end="52:16"><name pos:start="52:11" pos:end="52:11">b</name><operator pos:start="52:12" pos:end="52:12">.</operator><name pos:start="52:13" pos:end="52:16">size</name></name><argument_list pos:start="52:17" pos:end="52:18">()</argument_list></call></expr>)</condition><block pos:start="52:20" pos:end="55:5">{<block_content pos:start="53:9" pos:end="54:16">
        <expr_stmt pos:start="53:9" pos:end="53:27"><expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:12">cout</name><operator pos:start="53:13" pos:end="53:14">&lt;&lt;</operator><call pos:start="53:15" pos:end="53:21"><name pos:start="53:15" pos:end="53:19"><name pos:start="53:15" pos:end="53:15">b</name><operator pos:start="53:16" pos:end="53:16">.</operator><name pos:start="53:17" pos:end="53:19">top</name></name><argument_list pos:start="53:20" pos:end="53:21">()</argument_list></call><operator pos:start="53:22" pos:end="53:23">&lt;&lt;</operator><literal type="string" pos:start="53:24" pos:end="53:26">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="54:9" pos:end="54:16"><expr pos:start="54:9" pos:end="54:15"><call pos:start="54:9" pos:end="54:15"><name pos:start="54:9" pos:end="54:13"><name pos:start="54:9" pos:end="54:9">b</name><operator pos:start="54:10" pos:end="54:10">.</operator><name pos:start="54:11" pos:end="54:13">pop</name></name><argument_list pos:start="54:14" pos:end="54:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="56:5" pos:end="56:13">return <expr pos:start="56:12" pos:end="56:12"><literal type="number" pos:start="56:12" pos:end="56:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
