<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1219/1219.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;vector&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:15"><decl pos:start="4:1" pos:end="4:8"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">allt</name></decl>,<decl pos:start="4:10" pos:end="4:12"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:10" pos:end="4:12">sum</name></decl>,<decl pos:start="4:14" pos:end="4:14"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:14" pos:end="4:14">t</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:14"><decl pos:start="5:1" pos:end="5:13"><type pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:6">vector</name><argument_list type="generic" pos:start="5:7" pos:end="5:11">&lt;<argument pos:start="5:8" pos:end="5:10"><expr pos:start="5:8" pos:end="5:10"><name pos:start="5:8" pos:end="5:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="5:13" pos:end="5:13">v</name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:9"><decl pos:start="6:1" pos:end="6:8"><type pos:start="6:1" pos:end="6:6"><name pos:start="6:1" pos:end="6:6">string</name></type> <name pos:start="6:8" pos:end="6:8">s</name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="33:1"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:8">main</name><parameter_list pos:start="7:9" pos:end="7:10">()</parameter_list><block pos:start="7:11" pos:end="33:1">{<block_content pos:start="8:5" pos:end="32:9">
    <expr_stmt pos:start="8:5" pos:end="8:14"><expr pos:start="8:5" pos:end="8:13"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:13">allt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:13"><expr pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:8">allt</name><operator pos:start="9:9" pos:end="9:10">*=</operator><literal type="number" pos:start="9:11" pos:end="9:12">60</literal></expr>;</expr_stmt>
    <while pos:start="10:5" pos:end="30:5">while<condition pos:start="10:10" pos:end="10:17">(<expr pos:start="10:11" pos:end="10:16"><name pos:start="10:11" pos:end="10:13">cin</name><operator pos:start="10:14" pos:end="10:15">&gt;&gt;</operator><name pos:start="10:16" pos:end="10:16">s</name></expr>)</condition><block pos:start="10:18" pos:end="30:5">{<block_content pos:start="11:5" pos:end="29:9">
    <if_stmt pos:start="11:5" pos:end="29:9"><if pos:start="11:5" pos:end="14:5">if<condition pos:start="11:7" pos:end="11:25">(<expr pos:start="11:8" pos:end="11:24"><name pos:start="11:8" pos:end="11:8">s</name><operator pos:start="11:9" pos:end="11:10">==</operator><literal type="string" pos:start="11:11" pos:end="11:24">"tingtingting"</literal></expr>)</condition><block pos:start="11:26" pos:end="14:5">{<block_content pos:start="12:9" pos:end="13:25">
        <expr_stmt pos:start="12:9" pos:end="12:21"><expr pos:start="12:9" pos:end="12:20"><call pos:start="12:9" pos:end="12:20"><name pos:start="12:9" pos:end="12:18"><name pos:start="12:9" pos:end="12:9">v</name><operator pos:start="12:10" pos:end="12:10">.</operator><name pos:start="12:11" pos:end="12:18">pop_back</name></name><argument_list pos:start="12:19" pos:end="12:20">()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt pos:start="13:8" pos:end="13:25"><expr pos:start="13:8" pos:end="13:24"><name pos:start="13:8" pos:end="13:10">sum</name><operator pos:start="13:11" pos:end="13:11">=</operator><name pos:start="13:12" pos:end="13:24"><name pos:start="13:12" pos:end="13:12">v</name><index pos:start="13:13" pos:end="13:24">[<expr pos:start="13:14" pos:end="13:23"><call pos:start="13:14" pos:end="13:21"><name pos:start="13:14" pos:end="13:19"><name pos:start="13:14" pos:end="13:14">v</name><operator pos:start="13:15" pos:end="13:15">.</operator><name pos:start="13:16" pos:end="13:19">size</name></name><argument_list pos:start="13:20" pos:end="13:21">()</argument_list></call><operator pos:start="13:22" pos:end="13:22">-</operator><literal type="number" pos:start="13:23" pos:end="13:23">1</literal></expr>]</index></name></expr>;</expr_stmt> 
    </block_content>}</block></if>
        <if type="elseif" pos:start="15:9" pos:end="23:9">else if<condition pos:start="15:16" pos:end="15:32">(<expr pos:start="15:17" pos:end="15:31"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">==</operator><literal type="string" pos:start="15:20" pos:end="15:31">"kaomianjin"</literal></expr>)</condition><block pos:start="15:33" pos:end="23:9">{<block_content pos:start="16:13" pos:end="22:21">
            <expr_stmt pos:start="16:13" pos:end="16:19"><expr pos:start="16:13" pos:end="16:18"><name pos:start="16:13" pos:end="16:15">cin</name><operator pos:start="16:16" pos:end="16:17">&gt;&gt;</operator><name pos:start="16:18" pos:end="16:18">t</name></expr>;</expr_stmt>
          <if_stmt pos:start="17:11" pos:end="20:11"><if pos:start="17:11" pos:end="20:11">if<condition pos:start="17:13" pos:end="17:39">(<expr pos:start="17:14" pos:end="17:38"><name pos:start="17:14" pos:end="17:16">cin</name><operator pos:start="17:17" pos:end="17:18">&gt;&gt;</operator><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">&amp;&amp;</operator><name pos:start="17:22" pos:end="17:22">s</name><operator pos:start="17:23" pos:end="17:24">==</operator><literal type="string" pos:start="17:25" pos:end="17:38">"tingtingting"</literal></expr>)</condition><block pos:start="17:40" pos:end="20:11">{<block_content pos:start="18:15" pos:end="19:23">
              <expr_stmt pos:start="18:15" pos:end="18:29"><expr pos:start="18:15" pos:end="18:28"><name pos:start="18:15" pos:end="18:18">cout</name><operator pos:start="18:19" pos:end="18:20">&lt;&lt;</operator><literal type="string" pos:start="18:21" pos:end="18:28">"Hahaha"</literal></expr>;</expr_stmt>
              <return pos:start="19:15" pos:end="19:23">return <expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>;</return>
          </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:37"><expr pos:start="21:13" pos:end="21:36"><name pos:start="21:13" pos:end="21:16">cout</name><operator pos:start="21:17" pos:end="21:18">&lt;&lt;</operator><literal type="string" pos:start="21:19" pos:end="21:36">"Congratulations!"</literal></expr>;</expr_stmt>
            <return pos:start="22:13" pos:end="22:21">return <expr pos:start="22:20" pos:end="22:20"><literal type="number" pos:start="22:20" pos:end="22:20">0</literal></expr>;</return>
        </block_content>}</block></if>
        <else pos:start="24:9" pos:end="29:9">else<block pos:start="24:13" pos:end="29:9">{<block_content pos:start="25:13" pos:end="28:29">
            <expr_stmt pos:start="25:13" pos:end="25:19"><expr pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:15">cin</name><operator pos:start="25:16" pos:end="25:17">&gt;&gt;</operator><name pos:start="25:18" pos:end="25:18">t</name></expr>;</expr_stmt>
            <expr_stmt pos:start="26:13" pos:end="26:19"><expr pos:start="26:13" pos:end="26:18"><name pos:start="26:13" pos:end="26:15">sum</name><operator pos:start="26:16" pos:end="26:17">+=</operator><name pos:start="26:18" pos:end="26:18">t</name></expr>;</expr_stmt>
            <if_stmt pos:start="27:13" pos:end="27:28"><if pos:start="27:13" pos:end="27:28">if<condition pos:start="27:15" pos:end="27:21">(<expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:18">sum</name><operator pos:start="27:19" pos:end="27:19">&gt;</operator><name pos:start="27:20" pos:end="27:20">t</name></expr>)</condition><block type="pseudo" pos:start="27:23" pos:end="27:28"><block_content pos:start="27:23" pos:end="27:28"> <break pos:start="27:23" pos:end="27:28">break;</break></block_content></block></if></if_stmt>
            <expr_stmt pos:start="28:13" pos:end="28:29"><expr pos:start="28:13" pos:end="28:28"><call pos:start="28:13" pos:end="28:28"><name pos:start="28:13" pos:end="28:23"><name pos:start="28:13" pos:end="28:13">v</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:23">push_back</name></name><argument_list pos:start="28:24" pos:end="28:28">(<argument pos:start="28:25" pos:end="28:27"><expr pos:start="28:25" pos:end="28:27"><name pos:start="28:25" pos:end="28:27">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:8">cout</name><operator pos:start="31:9" pos:end="31:10">&lt;&lt;</operator><literal type="string" pos:start="31:11" pos:end="31:25">"Unfortunately"</literal></expr>;</expr_stmt>
<return pos:start="32:1" pos:end="32:9">return <expr pos:start="32:8" pos:end="32:8"><literal type="number" pos:start="32:8" pos:end="32:8">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
