<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1201/1201.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="5:1"><type pos:start="3:1" pos:end="3:9"><name pos:start="3:1" pos:end="3:4">long</name> <name pos:start="3:6" pos:end="3:9">long</name></type> <name pos:start="3:11" pos:end="3:13">sqr</name><parameter_list pos:start="3:14" pos:end="3:26">(<parameter pos:start="3:15" pos:end="3:25"><decl pos:start="3:15" pos:end="3:25"><type pos:start="3:15" pos:end="3:23"><name pos:start="3:15" pos:end="3:18">long</name> <name pos:start="3:20" pos:end="3:23">long</name></type> <name pos:start="3:25" pos:end="3:25">n</name></decl></parameter>)</parameter_list><block pos:start="3:27" pos:end="5:1">{<block_content pos:start="4:5" pos:end="4:17">
    <return pos:start="4:5" pos:end="4:17">return <expr pos:start="4:12" pos:end="4:16"><name pos:start="4:12" pos:end="4:12">n</name> <operator pos:start="4:14" pos:end="4:14">*</operator> <name pos:start="4:16" pos:end="4:16">n</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="6:1" pos:end="31:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list><block pos:start="6:11" pos:end="31:1">{<block_content pos:start="7:5" pos:end="30:13">
    <expr_stmt pos:start="7:5" pos:end="7:37"><expr pos:start="7:5" pos:end="7:36"><call pos:start="7:5" pos:end="7:36"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:36">(<argument pos:start="7:13" pos:end="7:23"><expr pos:start="7:13" pos:end="7:23"><literal type="string" pos:start="7:13" pos:end="7:23">"square.in"</literal></expr></argument>, <argument pos:start="7:26" pos:end="7:28"><expr pos:start="7:26" pos:end="7:28"><literal type="string" pos:start="7:26" pos:end="7:28">"r"</literal></expr></argument>, <argument pos:start="7:31" pos:end="7:35"><expr pos:start="7:31" pos:end="7:35"><name pos:start="7:31" pos:end="7:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:39"><expr pos:start="8:5" pos:end="8:38"><call pos:start="8:5" pos:end="8:38"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:38">(<argument pos:start="8:13" pos:end="8:24"><expr pos:start="8:13" pos:end="8:24"><literal type="string" pos:start="8:13" pos:end="8:24">"square.out"</literal></expr></argument>, <argument pos:start="8:27" pos:end="8:29"><expr pos:start="8:27" pos:end="8:29"><literal type="string" pos:start="8:27" pos:end="8:29">"w"</literal></expr></argument>, <argument pos:start="8:32" pos:end="8:37"><expr pos:start="8:32" pos:end="8:37"><name pos:start="8:32" pos:end="8:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:10">b</name> <init pos:start="9:12" pos:end="9:17">= <expr pos:start="9:14" pos:end="9:17"><literal type="boolean" pos:start="9:14" pos:end="9:17">true</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:16"><decl pos:start="10:5" pos:end="10:15"><type pos:start="10:5" pos:end="10:13"><name pos:start="10:5" pos:end="10:8">long</name> <name pos:start="10:10" pos:end="10:13">long</name></type> <name pos:start="10:15" pos:end="10:15">N</name></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:13"><expr pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:7">cin</name> <operator pos:start="11:9" pos:end="11:10">&gt;&gt;</operator> <name pos:start="11:12" pos:end="11:12">N</name></expr>;</expr_stmt>
    <for pos:start="12:5" pos:end="27:5">for<control pos:start="12:8" pos:end="12:37">(<init pos:start="12:9" pos:end="12:24"><decl pos:start="12:9" pos:end="12:23"><type pos:start="12:9" pos:end="12:17"><name pos:start="12:9" pos:end="12:12">long</name> <name pos:start="12:14" pos:end="12:17">long</name></type> <name pos:start="12:19" pos:end="12:19">i</name> <init pos:start="12:21" pos:end="12:23">= <expr pos:start="12:23" pos:end="12:23"><literal type="number" pos:start="12:23" pos:end="12:23">0</literal></expr></init></decl>;</init> <condition pos:start="12:26" pos:end="12:32"><expr pos:start="12:26" pos:end="12:31"><name pos:start="12:26" pos:end="12:26">i</name> <operator pos:start="12:28" pos:end="12:28">&lt;</operator> <literal type="number" pos:start="12:30" pos:end="12:31">20</literal></expr>;</condition> <incr pos:start="12:34" pos:end="12:36"><expr pos:start="12:34" pos:end="12:36"><name pos:start="12:34" pos:end="12:34">i</name><operator pos:start="12:35" pos:end="12:36">++</operator></expr></incr>)</control><block pos:start="12:38" pos:end="27:5">{<block_content pos:start="13:9" pos:end="26:28">
        <for pos:start="13:9" pos:end="25:9">for<control pos:start="13:12" pos:end="13:41">(<init pos:start="13:13" pos:end="13:28"><decl pos:start="13:13" pos:end="13:27"><type pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:16">long</name> <name pos:start="13:18" pos:end="13:21">long</name></type> <name pos:start="13:23" pos:end="13:23">j</name> <init pos:start="13:25" pos:end="13:27">= <expr pos:start="13:27" pos:end="13:27"><name pos:start="13:27" pos:end="13:27">i</name></expr></init></decl>;</init> <condition pos:start="13:30" pos:end="13:36"><expr pos:start="13:30" pos:end="13:35"><name pos:start="13:30" pos:end="13:30">j</name> <operator pos:start="13:32" pos:end="13:32">&lt;</operator> <literal type="number" pos:start="13:34" pos:end="13:35">20</literal></expr>;</condition> <incr pos:start="13:38" pos:end="13:40"><expr pos:start="13:38" pos:end="13:40"><name pos:start="13:38" pos:end="13:38">j</name><operator pos:start="13:39" pos:end="13:40">++</operator></expr></incr>)</control><block pos:start="13:42" pos:end="25:9">{<block_content pos:start="14:13" pos:end="24:32">
            <for pos:start="14:13" pos:end="23:13">for<control pos:start="14:16" pos:end="14:47">(<init pos:start="14:17" pos:end="14:32"><decl pos:start="14:17" pos:end="14:31"><type pos:start="14:17" pos:end="14:25"><name pos:start="14:17" pos:end="14:20">long</name> <name pos:start="14:22" pos:end="14:25">long</name></type> <name pos:start="14:27" pos:end="14:27">p</name> <init pos:start="14:29" pos:end="14:31">= <expr pos:start="14:31" pos:end="14:31"><name pos:start="14:31" pos:end="14:31">j</name></expr></init></decl>;</init> <condition pos:start="14:34" pos:end="14:42"><expr pos:start="14:34" pos:end="14:41"><name pos:start="14:34" pos:end="14:34">p</name> <operator pos:start="14:36" pos:end="14:36">&lt;</operator> <literal type="number" pos:start="14:38" pos:end="14:41">2000</literal></expr>;</condition> <incr pos:start="14:44" pos:end="14:46"><expr pos:start="14:44" pos:end="14:46"><name pos:start="14:44" pos:end="14:44">p</name><operator pos:start="14:45" pos:end="14:46">++</operator></expr></incr>)</control><block pos:start="14:48" pos:end="23:13">{<block_content pos:start="15:17" pos:end="22:36">
                <for pos:start="15:17" pos:end="21:17">for<control pos:start="15:20" pos:end="15:51">(<init pos:start="15:21" pos:end="15:36"><decl pos:start="15:21" pos:end="15:35"><type pos:start="15:21" pos:end="15:29"><name pos:start="15:21" pos:end="15:24">long</name> <name pos:start="15:26" pos:end="15:29">long</name></type> <name pos:start="15:31" pos:end="15:31">q</name> <init pos:start="15:33" pos:end="15:35">= <expr pos:start="15:35" pos:end="15:35"><name pos:start="15:35" pos:end="15:35">p</name></expr></init></decl>;</init> <condition pos:start="15:38" pos:end="15:46"><expr pos:start="15:38" pos:end="15:45"><name pos:start="15:38" pos:end="15:38">q</name> <operator pos:start="15:40" pos:end="15:40">&lt;</operator> <literal type="number" pos:start="15:42" pos:end="15:45">2000</literal></expr>;</condition> <incr pos:start="15:48" pos:end="15:50"><expr pos:start="15:48" pos:end="15:50"><name pos:start="15:48" pos:end="15:48">q</name><operator pos:start="15:49" pos:end="15:50">++</operator></expr></incr>)</control><block pos:start="15:52" pos:end="21:17">{<block_content pos:start="16:21" pos:end="20:21">
                    <if_stmt pos:start="16:21" pos:end="20:21"><if pos:start="16:21" pos:end="20:21">if<condition pos:start="16:23" pos:end="16:62">(<expr pos:start="16:24" pos:end="16:61"><call pos:start="16:24" pos:end="16:29"><name pos:start="16:24" pos:end="16:26">sqr</name><argument_list pos:start="16:27" pos:end="16:29">(<argument pos:start="16:28" pos:end="16:28"><expr pos:start="16:28" pos:end="16:28"><name pos:start="16:28" pos:end="16:28">i</name></expr></argument>)</argument_list></call> <operator pos:start="16:31" pos:end="16:31">+</operator> <call pos:start="16:33" pos:end="16:38"><name pos:start="16:33" pos:end="16:35">sqr</name><argument_list pos:start="16:36" pos:end="16:38">(<argument pos:start="16:37" pos:end="16:37"><expr pos:start="16:37" pos:end="16:37"><name pos:start="16:37" pos:end="16:37">j</name></expr></argument>)</argument_list></call> <operator pos:start="16:40" pos:end="16:40">+</operator> <call pos:start="16:42" pos:end="16:47"><name pos:start="16:42" pos:end="16:44">sqr</name><argument_list pos:start="16:45" pos:end="16:47">(<argument pos:start="16:46" pos:end="16:46"><expr pos:start="16:46" pos:end="16:46"><name pos:start="16:46" pos:end="16:46">p</name></expr></argument>)</argument_list></call> <operator pos:start="16:49" pos:end="16:49">+</operator> <call pos:start="16:51" pos:end="16:56"><name pos:start="16:51" pos:end="16:53">sqr</name><argument_list pos:start="16:54" pos:end="16:56">(<argument pos:start="16:55" pos:end="16:55"><expr pos:start="16:55" pos:end="16:55"><name pos:start="16:55" pos:end="16:55">q</name></expr></argument>)</argument_list></call> <operator pos:start="16:58" pos:end="16:59">==</operator> <name pos:start="16:61" pos:end="16:61">N</name></expr>)</condition><block pos:start="16:63" pos:end="20:21">{<block_content pos:start="17:25" pos:end="19:30">
                        <expr_stmt pos:start="17:25" pos:end="17:34"><expr pos:start="17:25" pos:end="17:33"><name pos:start="17:25" pos:end="17:25">b</name> <operator pos:start="17:27" pos:end="17:27">=</operator> <literal type="boolean" pos:start="17:29" pos:end="17:33">false</literal></expr>;</expr_stmt>
                        <expr_stmt pos:start="18:25" pos:end="18:78"><expr pos:start="18:25" pos:end="18:77"><name pos:start="18:25" pos:end="18:28">cout</name> <operator pos:start="18:30" pos:end="18:31">&lt;&lt;</operator> <name pos:start="18:33" pos:end="18:33">i</name> <operator pos:start="18:35" pos:end="18:36">&lt;&lt;</operator> <literal type="string" pos:start="18:38" pos:end="18:40">" "</literal> <operator pos:start="18:42" pos:end="18:43">&lt;&lt;</operator> <name pos:start="18:45" pos:end="18:45">j</name> <operator pos:start="18:47" pos:end="18:48">&lt;&lt;</operator> <literal type="string" pos:start="18:50" pos:end="18:52">" "</literal> <operator pos:start="18:54" pos:end="18:55">&lt;&lt;</operator> <name pos:start="18:57" pos:end="18:57">p</name> <operator pos:start="18:59" pos:end="18:60">&lt;&lt;</operator> <literal type="string" pos:start="18:62" pos:end="18:64">" "</literal> <operator pos:start="18:66" pos:end="18:67">&lt;&lt;</operator> <name pos:start="18:69" pos:end="18:69">q</name> <operator pos:start="18:71" pos:end="18:72">&lt;&lt;</operator> <name pos:start="18:74" pos:end="18:77">endl</name></expr>;</expr_stmt>
                        <break pos:start="19:25" pos:end="19:30">break;</break>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></for>
                <if_stmt pos:start="22:17" pos:end="22:36"><if pos:start="22:17" pos:end="22:36">if<condition pos:start="22:19" pos:end="22:30">(<expr pos:start="22:20" pos:end="22:29"><name pos:start="22:20" pos:end="22:20">b</name> <operator pos:start="22:22" pos:end="22:23">==</operator> <literal type="boolean" pos:start="22:25" pos:end="22:29">false</literal></expr>)</condition><block type="pseudo" pos:start="22:31" pos:end="22:36"><block_content pos:start="22:31" pos:end="22:36"><break pos:start="22:31" pos:end="22:36">break;</break></block_content></block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="24:13" pos:end="24:32"><if pos:start="24:13" pos:end="24:32">if<condition pos:start="24:15" pos:end="24:26">(<expr pos:start="24:16" pos:end="24:25"><name pos:start="24:16" pos:end="24:16">b</name> <operator pos:start="24:18" pos:end="24:19">==</operator> <literal type="boolean" pos:start="24:21" pos:end="24:25">false</literal></expr>)</condition><block type="pseudo" pos:start="24:27" pos:end="24:32"><block_content pos:start="24:27" pos:end="24:32"><break pos:start="24:27" pos:end="24:32">break;</break></block_content></block></if></if_stmt>
        </block_content>}</block></for>
        <if_stmt pos:start="26:9" pos:end="26:28"><if pos:start="26:9" pos:end="26:28">if<condition pos:start="26:11" pos:end="26:22">(<expr pos:start="26:12" pos:end="26:21"><name pos:start="26:12" pos:end="26:12">b</name> <operator pos:start="26:14" pos:end="26:15">==</operator> <literal type="boolean" pos:start="26:17" pos:end="26:21">false</literal></expr>)</condition><block type="pseudo" pos:start="26:23" pos:end="26:28"><block_content pos:start="26:23" pos:end="26:28"><break pos:start="26:23" pos:end="26:28">break;</break></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="28:5" pos:end="28:18"><expr pos:start="28:5" pos:end="28:17"><call pos:start="28:5" pos:end="28:17"><name pos:start="28:5" pos:end="28:10">fclose</name><argument_list pos:start="28:11" pos:end="28:17">(<argument pos:start="28:12" pos:end="28:16"><expr pos:start="28:12" pos:end="28:16"><name pos:start="28:12" pos:end="28:16">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><call pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:10">fclose</name><argument_list pos:start="29:11" pos:end="29:18">(<argument pos:start="29:12" pos:end="29:17"><expr pos:start="29:12" pos:end="29:17"><name pos:start="29:12" pos:end="29:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="30:5" pos:end="30:13">return <expr pos:start="30:12" pos:end="30:12"><literal type="number" pos:start="30:12" pos:end="30:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
