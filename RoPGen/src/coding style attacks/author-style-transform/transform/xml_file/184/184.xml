<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/184/184.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<decl_stmt pos:start="2:1" pos:end="2:13"><decl pos:start="2:1" pos:end="2:12"><type pos:start="2:1" pos:end="2:3"><name pos:start="2:1" pos:end="2:3">int</name></type> <name pos:start="2:5" pos:end="2:12"><name pos:start="2:5" pos:end="2:6">in</name><index pos:start="2:7" pos:end="2:12">[<expr pos:start="2:8" pos:end="2:11"><literal type="number" pos:start="2:8" pos:end="2:11">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="3:1" pos:end="3:15"><decl pos:start="3:1" pos:end="3:14"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:14"><name pos:start="3:5" pos:end="3:8">book</name><index pos:start="3:9" pos:end="3:14">[<expr pos:start="3:10" pos:end="3:13"><literal type="number" pos:start="3:10" pos:end="3:13">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:12"><decl pos:start="4:1" pos:end="4:11"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:11"><name pos:start="4:5" pos:end="4:5">b</name><index pos:start="4:6" pos:end="4:11">[<expr pos:start="4:7" pos:end="4:10"><literal type="number" pos:start="4:7" pos:end="4:10">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="46:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list>
<block pos:start="6:1" pos:end="46:1">{<block_content pos:start="8:5" pos:end="45:13">
    
    <decl_stmt pos:start="8:5" pos:end="8:10"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">t</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:19"><expr pos:start="10:5" pos:end="10:18"><call pos:start="10:5" pos:end="10:18"><name pos:start="10:5" pos:end="10:9">scanf</name><argument_list pos:start="10:10" pos:end="10:18">(<argument pos:start="10:11" pos:end="10:14"><expr pos:start="10:11" pos:end="10:14"><literal type="string" pos:start="10:11" pos:end="10:14">"%d"</literal></expr></argument>,<argument pos:start="10:16" pos:end="10:17"><expr pos:start="10:16" pos:end="10:17"><operator pos:start="10:16" pos:end="10:16">&amp;</operator><name pos:start="10:17" pos:end="10:17">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while pos:start="11:5" pos:end="44:5">while<condition pos:start="11:10" pos:end="11:14">(<expr pos:start="11:11" pos:end="11:13"><name pos:start="11:11" pos:end="11:11">t</name><operator pos:start="11:12" pos:end="11:13">--</operator></expr>)</condition>
    <block pos:start="12:5" pos:end="44:5">{<block_content pos:start="13:9" pos:end="43:23">
        <expr_stmt pos:start="13:9" pos:end="13:35"><expr pos:start="13:9" pos:end="13:34"><call pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:15">freopen</name> <argument_list pos:start="13:17" pos:end="13:34">(<argument pos:start="13:18" pos:end="13:23"><expr pos:start="13:18" pos:end="13:23"><literal type="string" pos:start="13:18" pos:end="13:23">"p.in"</literal></expr></argument>,<argument pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><literal type="string" pos:start="13:25" pos:end="13:27">"r"</literal></expr></argument>,<argument pos:start="13:29" pos:end="13:33"><expr pos:start="13:29" pos:end="13:33"><name pos:start="13:29" pos:end="13:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt pos:start="14:6" pos:end="14:34"><expr pos:start="14:6" pos:end="14:33"><call pos:start="14:6" pos:end="14:33"><name pos:start="14:6" pos:end="14:12">freopen</name> <argument_list pos:start="14:14" pos:end="14:33">(<argument pos:start="14:15" pos:end="14:21"><expr pos:start="14:15" pos:end="14:21"><literal type="string" pos:start="14:15" pos:end="14:21">"p.out"</literal></expr></argument>,<argument pos:start="14:23" pos:end="14:25"><expr pos:start="14:23" pos:end="14:25"><literal type="string" pos:start="14:23" pos:end="14:25">"w"</literal></expr></argument>,<argument pos:start="14:27" pos:end="14:32"><expr pos:start="14:27" pos:end="14:32"><name pos:start="14:27" pos:end="14:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><call pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:31">(<argument pos:start="15:12" pos:end="15:15"><expr pos:start="15:12" pos:end="15:15"><name pos:start="15:12" pos:end="15:15">book</name></expr></argument>,<argument pos:start="15:17" pos:end="15:17"><expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></argument>,<argument pos:start="15:19" pos:end="15:30"><expr pos:start="15:19" pos:end="15:30"><sizeof pos:start="15:19" pos:end="15:30">sizeof<argument_list pos:start="15:25" pos:end="15:30">(<argument pos:start="15:26" pos:end="15:29"><expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">book</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:26"><expr pos:start="16:5" pos:end="16:25"><call pos:start="16:5" pos:end="16:25"><name pos:start="16:5" pos:end="16:10">memset</name><argument_list pos:start="16:11" pos:end="16:25">(<argument pos:start="16:12" pos:end="16:12"><expr pos:start="16:12" pos:end="16:12"><name pos:start="16:12" pos:end="16:12">b</name></expr></argument>,<argument pos:start="16:14" pos:end="16:14"><expr pos:start="16:14" pos:end="16:14"><literal type="number" pos:start="16:14" pos:end="16:14">0</literal></expr></argument>,<argument pos:start="16:16" pos:end="16:24"><expr pos:start="16:16" pos:end="16:24"><sizeof pos:start="16:16" pos:end="16:24">sizeof<argument_list pos:start="16:22" pos:end="16:24">(<argument pos:start="16:23" pos:end="16:23"><expr pos:start="16:23" pos:end="16:23"><name pos:start="16:23" pos:end="16:23">b</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><call pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:27">(<argument pos:start="17:12" pos:end="17:13"><expr pos:start="17:12" pos:end="17:13"><name pos:start="17:12" pos:end="17:13">in</name></expr></argument>,<argument pos:start="17:15" pos:end="17:15"><expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></argument>,<argument pos:start="17:17" pos:end="17:26"><expr pos:start="17:17" pos:end="17:26"><sizeof pos:start="17:17" pos:end="17:26">sizeof<argument_list pos:start="17:23" pos:end="17:26">(<argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><name pos:start="17:24" pos:end="17:25">in</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:19"><expr pos:start="18:5" pos:end="18:18"><call pos:start="18:5" pos:end="18:18"><name pos:start="18:5" pos:end="18:9">scanf</name><argument_list pos:start="18:10" pos:end="18:18">(<argument pos:start="18:11" pos:end="18:14"><expr pos:start="18:11" pos:end="18:14"><literal type="string" pos:start="18:11" pos:end="18:14">"%d"</literal></expr></argument>,<argument pos:start="18:16" pos:end="18:17"><expr pos:start="18:16" pos:end="18:17"><operator pos:start="18:16" pos:end="18:16">&amp;</operator><name pos:start="18:17" pos:end="18:17">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>,<decl pos:start="19:11" pos:end="19:11"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:11" pos:end="19:11">x</name></decl>,<decl pos:start="19:13" pos:end="19:13"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:13" pos:end="19:13">y</name></decl>,<decl pos:start="19:15" pos:end="19:15"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:15" pos:end="19:15">j</name></decl>;</decl_stmt>
    <for pos:start="20:5" pos:end="25:5">for<control pos:start="20:8" pos:end="20:20">(<init pos:start="20:9" pos:end="20:12"><expr pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:9">i</name><operator pos:start="20:10" pos:end="20:10">=</operator><literal type="number" pos:start="20:11" pos:end="20:11">1</literal></expr>;</init><condition pos:start="20:13" pos:end="20:16"><expr pos:start="20:13" pos:end="20:15"><name pos:start="20:13" pos:end="20:13">i</name><operator pos:start="20:14" pos:end="20:14">&lt;</operator><name pos:start="20:15" pos:end="20:15">n</name></expr>;</condition><incr pos:start="20:17" pos:end="20:19"><expr pos:start="20:17" pos:end="20:19"><name pos:start="20:17" pos:end="20:17">i</name><operator pos:start="20:18" pos:end="20:19">++</operator></expr></incr>)</control>
    <block pos:start="21:5" pos:end="25:5">{<block_content pos:start="22:5" pos:end="24:12">
    <expr_stmt pos:start="22:5" pos:end="22:24"><expr pos:start="22:5" pos:end="22:23"><call pos:start="22:5" pos:end="22:23"><name pos:start="22:5" pos:end="22:9">scanf</name><argument_list pos:start="22:10" pos:end="22:23">(<argument pos:start="22:11" pos:end="22:16"><expr pos:start="22:11" pos:end="22:16"><literal type="string" pos:start="22:11" pos:end="22:16">"%d%d"</literal></expr></argument>,<argument pos:start="22:18" pos:end="22:19"><expr pos:start="22:18" pos:end="22:19"><operator pos:start="22:18" pos:end="22:18">&amp;</operator><name pos:start="22:19" pos:end="22:19">x</name></expr></argument>,<argument pos:start="22:21" pos:end="22:22"><expr pos:start="22:21" pos:end="22:22"><operator pos:start="22:21" pos:end="22:21">&amp;</operator><name pos:start="22:22" pos:end="22:22">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:14"><expr pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:8">book</name><index pos:start="23:9" pos:end="23:11">[<expr pos:start="23:10" pos:end="23:10"><name pos:start="23:10" pos:end="23:10">y</name></expr>]</index></name><operator pos:start="23:12" pos:end="23:12">=</operator><name pos:start="23:13" pos:end="23:13">x</name></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:12"><expr pos:start="24:5" pos:end="24:11"><name pos:start="24:5" pos:end="24:9"><name pos:start="24:5" pos:end="24:6">in</name><index pos:start="24:7" pos:end="24:9">[<expr pos:start="24:8" pos:end="24:8"><name pos:start="24:8" pos:end="24:8">x</name></expr>]</index></name><operator pos:start="24:10" pos:end="24:11">++</operator></expr>;</expr_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="26:5" pos:end="26:14"><decl pos:start="26:5" pos:end="26:13"><type pos:start="26:5" pos:end="26:7"><name pos:start="26:5" pos:end="26:7">int</name></type> <name pos:start="26:9" pos:end="26:11">sum</name><init pos:start="26:12" pos:end="26:13">=<expr pos:start="26:13" pos:end="26:13"><literal type="number" pos:start="26:13" pos:end="26:13">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="27:5" pos:end="36:5">for<control pos:start="27:8" pos:end="27:21">(<init pos:start="27:9" pos:end="27:12"><expr pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:9">i</name><operator pos:start="27:10" pos:end="27:10">=</operator><literal type="number" pos:start="27:11" pos:end="27:11">1</literal></expr>;</init><condition pos:start="27:13" pos:end="27:17"><expr pos:start="27:13" pos:end="27:16"><name pos:start="27:13" pos:end="27:13">i</name><operator pos:start="27:14" pos:end="27:15">&lt;=</operator><name pos:start="27:16" pos:end="27:16">n</name></expr>;</condition><incr pos:start="27:18" pos:end="27:20"><expr pos:start="27:18" pos:end="27:20"><name pos:start="27:18" pos:end="27:18">i</name><operator pos:start="27:19" pos:end="27:20">++</operator></expr></incr>)</control>
    <block pos:start="28:5" pos:end="36:5">{<block_content pos:start="29:5" pos:end="35:5">
    <if_stmt pos:start="29:5" pos:end="32:5"><if pos:start="29:5" pos:end="32:5">if<condition pos:start="29:7" pos:end="29:25">(<expr pos:start="29:8" pos:end="29:24"><name pos:start="29:8" pos:end="29:18"><name pos:start="29:8" pos:end="29:9">in</name><index pos:start="29:10" pos:end="29:18">[<expr pos:start="29:11" pos:end="29:17"><name pos:start="29:11" pos:end="29:17"><name pos:start="29:11" pos:end="29:14">book</name><index pos:start="29:15" pos:end="29:17">[<expr pos:start="29:16" pos:end="29:16"><name pos:start="29:16" pos:end="29:16">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="29:19" pos:end="29:19">&lt;</operator><name pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:21">in</name><index pos:start="29:22" pos:end="29:24">[<expr pos:start="29:23" pos:end="29:23"><name pos:start="29:23" pos:end="29:23">i</name></expr>]</index></name></expr>)</condition>
    <block pos:start="30:5" pos:end="32:5">{<block_content pos:start="31:5" pos:end="31:17">
    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:5">b</name><index pos:start="31:6" pos:end="31:14">[<expr pos:start="31:7" pos:end="31:13"><name pos:start="31:7" pos:end="31:13"><name pos:start="31:7" pos:end="31:10">book</name><index pos:start="31:11" pos:end="31:13">[<expr pos:start="31:12" pos:end="31:12"><name pos:start="31:12" pos:end="31:12">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="31:15" pos:end="31:15">=</operator><literal type="number" pos:start="31:16" pos:end="31:16">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="33:5" pos:end="35:5"><if pos:start="33:5" pos:end="35:5">if<condition pos:start="33:7" pos:end="33:25">(<expr pos:start="33:8" pos:end="33:24"><name pos:start="33:8" pos:end="33:18"><name pos:start="33:8" pos:end="33:9">in</name><index pos:start="33:10" pos:end="33:18">[<expr pos:start="33:11" pos:end="33:17"><name pos:start="33:11" pos:end="33:17"><name pos:start="33:11" pos:end="33:14">book</name><index pos:start="33:15" pos:end="33:17">[<expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="33:19" pos:end="33:19">&gt;</operator><name pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:21">in</name><index pos:start="33:22" pos:end="33:24">[<expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">i</name></expr>]</index></name></expr>)</condition><block pos:start="33:26" pos:end="35:5">{<block_content pos:start="34:5" pos:end="34:11">
    <expr_stmt pos:start="34:5" pos:end="34:11"><expr pos:start="34:5" pos:end="34:10"><name pos:start="34:5" pos:end="34:8"><name pos:start="34:5" pos:end="34:5">b</name><index pos:start="34:6" pos:end="34:8">[<expr pos:start="34:7" pos:end="34:7"><name pos:start="34:7" pos:end="34:7">i</name></expr>]</index></name><operator pos:start="34:9" pos:end="34:9">=</operator><literal type="number" pos:start="34:10" pos:end="34:10">1</literal></expr>;</expr_stmt>     
    </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="37:5" pos:end="42:1">for<control pos:start="37:8" pos:end="37:21">(<init pos:start="37:9" pos:end="37:12"><expr pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:9">i</name><operator pos:start="37:10" pos:end="37:10">=</operator><literal type="number" pos:start="37:11" pos:end="37:11">1</literal></expr>;</init><condition pos:start="37:13" pos:end="37:17"><expr pos:start="37:13" pos:end="37:16"><name pos:start="37:13" pos:end="37:13">i</name><operator pos:start="37:14" pos:end="37:15">&lt;=</operator><name pos:start="37:16" pos:end="37:16">n</name></expr>;</condition><incr pos:start="37:18" pos:end="37:20"><expr pos:start="37:18" pos:end="37:20"><name pos:start="37:18" pos:end="37:18">i</name><operator pos:start="37:19" pos:end="37:20">++</operator></expr></incr>)</control><block pos:start="37:22" pos:end="42:1">{<block_content pos:start="38:5" pos:end="41:1">
    <if_stmt pos:start="38:5" pos:end="41:1"><if pos:start="38:5" pos:end="41:1">if<condition pos:start="38:7" pos:end="38:15">(<expr pos:start="38:8" pos:end="38:14"><name pos:start="38:8" pos:end="38:11"><name pos:start="38:8" pos:end="38:8">b</name><index pos:start="38:9" pos:end="38:11">[<expr pos:start="38:10" pos:end="38:10"><name pos:start="38:10" pos:end="38:10">i</name></expr>]</index></name><operator pos:start="38:12" pos:end="38:13">==</operator><literal type="number" pos:start="38:14" pos:end="38:14">0</literal></expr>)</condition><block pos:start="38:16" pos:end="41:1">{<block_content pos:start="40:5" pos:end="40:10">
    
    <expr_stmt pos:start="40:5" pos:end="40:10"><expr pos:start="40:5" pos:end="40:9"><name pos:start="40:5" pos:end="40:7">sum</name><operator pos:start="40:8" pos:end="40:9">++</operator></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
    <expr_stmt pos:start="43:5" pos:end="43:23"><expr pos:start="43:5" pos:end="43:22"><call pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:10">printf</name><argument_list pos:start="43:11" pos:end="43:22">(<argument pos:start="43:12" pos:end="43:17"><expr pos:start="43:12" pos:end="43:17"><literal type="string" pos:start="43:12" pos:end="43:17">"%d\n"</literal></expr></argument>,<argument pos:start="43:19" pos:end="43:21"><expr pos:start="43:19" pos:end="43:21"><name pos:start="43:19" pos:end="43:21">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>     
    </block_content>}</block></while>
    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
