<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/55/55.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="34:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="34:1">{<block_content pos:start="5:5" pos:end="33:13">
    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:13">s1</name></decl>, <decl pos:start="5:16" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:10"/><name pos:start="5:16" pos:end="5:17">s2</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:20"><expr pos:start="6:5" pos:end="6:19"><name pos:start="6:5" pos:end="6:7">cin</name> <operator pos:start="6:9" pos:end="6:10">&gt;&gt;</operator> <name pos:start="6:12" pos:end="6:13">s1</name> <operator pos:start="6:15" pos:end="6:16">&gt;&gt;</operator> <name pos:start="6:18" pos:end="6:19">s2</name></expr>;</expr_stmt>
    
    <decl_stmt pos:start="8:5" pos:end="8:14"><decl pos:start="8:5" pos:end="8:13"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:11">rel</name><init pos:start="8:12" pos:end="8:13">=<expr pos:start="8:13" pos:end="8:13"><literal type="number" pos:start="8:13" pos:end="8:13">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name> <init pos:start="9:13" pos:end="9:23">= <expr pos:start="9:15" pos:end="9:23"><call pos:start="9:15" pos:end="9:23"><name pos:start="9:15" pos:end="9:21"><name pos:start="9:15" pos:end="9:16">s2</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:21">size</name></name><argument_list pos:start="9:22" pos:end="9:23">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for pos:start="10:5" pos:end="12:5">for<control pos:start="10:8" pos:end="10:30">(<init pos:start="10:9" pos:end="10:18"><decl pos:start="10:9" pos:end="10:17"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">i</name> <init pos:start="10:15" pos:end="10:17">= <expr pos:start="10:17" pos:end="10:17"><literal type="number" pos:start="10:17" pos:end="10:17">0</literal></expr></init></decl>;</init><condition pos:start="10:19" pos:end="10:26"><expr pos:start="10:19" pos:end="10:25"><name pos:start="10:19" pos:end="10:19">i</name> <operator pos:start="10:21" pos:end="10:21">&lt;</operator> <name pos:start="10:23" pos:end="10:25">len</name></expr>;</condition><incr pos:start="10:27" pos:end="10:29"><expr pos:start="10:27" pos:end="10:29"><name pos:start="10:27" pos:end="10:27">i</name><operator pos:start="10:28" pos:end="10:29">++</operator></expr></incr>)</control><block pos:start="10:31" pos:end="12:5">{<block_content pos:start="11:9" pos:end="11:37">
        <expr_stmt pos:start="11:9" pos:end="11:37"><expr pos:start="11:9" pos:end="11:36"><name pos:start="11:9" pos:end="11:11">rel</name> <operator pos:start="11:13" pos:end="11:14">+=</operator> <operator pos:start="11:16" pos:end="11:16">(</operator><name pos:start="11:17" pos:end="11:19">len</name><operator pos:start="11:20" pos:end="11:20">-</operator><name pos:start="11:21" pos:end="11:21">i</name><operator pos:start="11:22" pos:end="11:22">)</operator><operator pos:start="11:23" pos:end="11:23">*</operator><operator pos:start="11:24" pos:end="11:24">(</operator><name pos:start="11:25" pos:end="11:29"><name pos:start="11:25" pos:end="11:26">s2</name><index pos:start="11:27" pos:end="11:29">[<expr pos:start="11:28" pos:end="11:28"><name pos:start="11:28" pos:end="11:28">i</name></expr>]</index></name> <operator pos:start="11:31" pos:end="11:31">-</operator> <literal type="char" pos:start="11:33" pos:end="11:35">'0'</literal><operator pos:start="11:36" pos:end="11:36">)</operator></expr>;</expr_stmt>
    </block_content>}</block></for>
    
    <decl_stmt pos:start="14:5" pos:end="14:16"><decl pos:start="14:5" pos:end="14:15"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:11">res</name> <init pos:start="14:13" pos:end="14:15">= <expr pos:start="14:15" pos:end="14:15"><literal type="number" pos:start="14:15" pos:end="14:15">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">len1</name><init pos:start="15:13" pos:end="15:22">=<expr pos:start="15:14" pos:end="15:22"><call pos:start="15:14" pos:end="15:22"><name pos:start="15:14" pos:end="15:20"><name pos:start="15:14" pos:end="15:15">s1</name><operator pos:start="15:16" pos:end="15:16">.</operator><name pos:start="15:17" pos:end="15:20">size</name></name><argument_list pos:start="15:21" pos:end="15:22">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="16:5" pos:end="16:16"><decl pos:start="16:5" pos:end="16:15"><type pos:start="16:5" pos:end="16:7"><name pos:start="16:5" pos:end="16:7">int</name></type> <name pos:start="16:9" pos:end="16:11">num</name> <init pos:start="16:13" pos:end="16:15">= <expr pos:start="16:15" pos:end="16:15"><literal type="number" pos:start="16:15" pos:end="16:15">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="17:5" pos:end="32:5">for<control pos:start="17:8" pos:end="17:31">(<init pos:start="17:9" pos:end="17:18"><decl pos:start="17:9" pos:end="17:17"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">i</name> <init pos:start="17:15" pos:end="17:17">= <expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></init></decl>;</init><condition pos:start="17:19" pos:end="17:27"><expr pos:start="17:19" pos:end="17:26"><name pos:start="17:19" pos:end="17:19">i</name> <operator pos:start="17:21" pos:end="17:21">&lt;</operator> <name pos:start="17:23" pos:end="17:26">len1</name></expr>;</condition><incr pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:28">i</name><operator pos:start="17:29" pos:end="17:30">++</operator></expr></incr>)</control><block pos:start="17:32" pos:end="32:5">{<block_content pos:start="18:9" pos:end="31:9">
        <if_stmt pos:start="18:9" pos:end="23:9"><if pos:start="18:9" pos:end="21:9">if<condition pos:start="18:11" pos:end="18:24">(<expr pos:start="18:12" pos:end="18:23"><name pos:start="18:12" pos:end="18:16"><name pos:start="18:12" pos:end="18:13">s1</name><index pos:start="18:14" pos:end="18:16">[<expr pos:start="18:15" pos:end="18:15"><name pos:start="18:15" pos:end="18:15">i</name></expr>]</index></name> <operator pos:start="18:18" pos:end="18:19">==</operator> <literal type="char" pos:start="18:21" pos:end="18:23">'?'</literal></expr>)</condition><block pos:start="18:25" pos:end="21:9">{<block_content pos:start="19:13" pos:end="20:21">
            <expr_stmt pos:start="19:13" pos:end="19:25"><expr pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:15">num</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:21">len</name> <operator pos:start="19:23" pos:end="19:23">-</operator><name pos:start="19:24" pos:end="19:24">i</name></expr>;</expr_stmt>
            <continue pos:start="20:13" pos:end="20:21">continue;</continue>
        </block_content>}</block></if><else pos:start="21:10" pos:end="23:9">else<block pos:start="21:14" pos:end="23:9">{<block_content pos:start="22:13" pos:end="22:44">
            <expr_stmt pos:start="22:13" pos:end="22:44"><expr pos:start="22:13" pos:end="22:43"><name pos:start="22:13" pos:end="22:15">res</name> <operator pos:start="22:17" pos:end="22:18">+=</operator> <operator pos:start="22:20" pos:end="22:20">(</operator><name pos:start="22:21" pos:end="22:24">len1</name> <operator pos:start="22:26" pos:end="22:26">-</operator> <name pos:start="22:28" pos:end="22:28">i</name><operator pos:start="22:29" pos:end="22:29">)</operator><operator pos:start="22:30" pos:end="22:30">*</operator><operator pos:start="22:31" pos:end="22:31">(</operator><name pos:start="22:32" pos:end="22:36"><name pos:start="22:32" pos:end="22:33">s1</name><index pos:start="22:34" pos:end="22:36">[<expr pos:start="22:35" pos:end="22:35"><name pos:start="22:35" pos:end="22:35">i</name></expr>]</index></name> <operator pos:start="22:38" pos:end="22:38">-</operator> <literal type="char" pos:start="22:40" pos:end="22:42">'0'</literal><operator pos:start="22:43" pos:end="22:43">)</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        
    
    <decl_stmt pos:start="26:5" pos:end="26:24"><decl pos:start="26:5" pos:end="26:23"><type pos:start="26:5" pos:end="26:7"><name pos:start="26:5" pos:end="26:7">int</name></type> <name pos:start="26:9" pos:end="26:11">ans</name> <init pos:start="26:13" pos:end="26:23">= <expr pos:start="26:15" pos:end="26:23"><name pos:start="26:15" pos:end="26:17">rel</name> <operator pos:start="26:19" pos:end="26:19">-</operator> <name pos:start="26:21" pos:end="26:23">res</name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="29:9">if<condition pos:start="27:11" pos:end="27:62">(<expr pos:start="27:12" pos:end="27:61"><name pos:start="27:12" pos:end="27:14">ans</name> <operator pos:start="27:16" pos:end="27:16">/</operator> <name pos:start="27:18" pos:end="27:20">num</name> <operator pos:start="27:22" pos:end="27:23">&gt;=</operator> <literal type="number" pos:start="27:25" pos:end="27:25">0</literal> <operator pos:start="27:27" pos:end="27:28">&amp;&amp;</operator> <name pos:start="27:30" pos:end="27:32">ans</name> <operator pos:start="27:34" pos:end="27:34">/</operator> <name pos:start="27:36" pos:end="27:38">num</name> <operator pos:start="27:40" pos:end="27:40">&lt;</operator> <literal type="number" pos:start="27:42" pos:end="27:43">10</literal> <operator pos:start="27:45" pos:end="27:46">&amp;&amp;</operator> <name pos:start="27:48" pos:end="27:50">ans</name> <operator pos:start="27:52" pos:end="27:52">%</operator> <name pos:start="27:54" pos:end="27:56">num</name> <operator pos:start="27:58" pos:end="27:59">==</operator> <literal type="number" pos:start="27:61" pos:end="27:61">0</literal></expr>)</condition><block pos:start="27:63" pos:end="29:9">{<block_content pos:start="28:13" pos:end="28:38">
            <expr_stmt pos:start="28:13" pos:end="28:38"><expr pos:start="28:13" pos:end="28:37"><name pos:start="28:13" pos:end="28:16">cout</name> <operator pos:start="28:18" pos:end="28:19">&lt;&lt;</operator> <name pos:start="28:21" pos:end="28:23">ans</name> <operator pos:start="28:25" pos:end="28:25">/</operator> <name pos:start="28:27" pos:end="28:29">num</name> <operator pos:start="28:31" pos:end="28:32">&lt;&lt;</operator> <name pos:start="28:34" pos:end="28:37">endl</name></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="29:10" pos:end="31:9">else<block pos:start="29:14" pos:end="31:9">{<block_content pos:start="30:13" pos:end="30:36">
            <expr_stmt pos:start="30:13" pos:end="30:36"><expr pos:start="30:13" pos:end="30:35"><name pos:start="30:13" pos:end="30:16">cout</name> <operator pos:start="30:18" pos:end="30:19">&lt;&lt;</operator> <literal type="string" pos:start="30:21" pos:end="30:27">"Lier!"</literal> <operator pos:start="30:29" pos:end="30:30">&lt;&lt;</operator> <name pos:start="30:32" pos:end="30:35">endl</name></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
