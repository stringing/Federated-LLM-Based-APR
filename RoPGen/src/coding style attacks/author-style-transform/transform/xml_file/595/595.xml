<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/595/595.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:54"><decl pos:start="3:1" pos:end="3:9"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:9">lenth</name></decl>,<decl pos:start="3:11" pos:end="3:15"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:11" pos:end="3:15">width</name></decl>,<decl pos:start="3:17" pos:end="3:53"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:17" pos:end="3:25"><name pos:start="3:17" pos:end="3:19">dir</name><index pos:start="3:20" pos:end="3:22">[<expr pos:start="3:21" pos:end="3:21"><literal type="number" pos:start="3:21" pos:end="3:21">4</literal></expr>]</index><index pos:start="3:23" pos:end="3:25">[<expr pos:start="3:24" pos:end="3:24"><literal type="number" pos:start="3:24" pos:end="3:24">2</literal></expr>]</index></name><init pos:start="3:26" pos:end="3:53">=<expr pos:start="3:27" pos:end="3:53"><block pos:start="3:27" pos:end="3:53">{<expr pos:start="3:28" pos:end="3:32"><block pos:start="3:28" pos:end="3:32">{<expr pos:start="3:29" pos:end="3:29"><literal type="number" pos:start="3:29" pos:end="3:29">0</literal></expr>,<expr pos:start="3:31" pos:end="3:31"><literal type="number" pos:start="3:31" pos:end="3:31">1</literal></expr>}</block></expr>,<expr pos:start="3:34" pos:end="3:38"><block pos:start="3:34" pos:end="3:38">{<expr pos:start="3:35" pos:end="3:35"><literal type="number" pos:start="3:35" pos:end="3:35">1</literal></expr>,<expr pos:start="3:37" pos:end="3:37"><literal type="number" pos:start="3:37" pos:end="3:37">0</literal></expr>}</block></expr>,<expr pos:start="3:40" pos:end="3:45"><block pos:start="3:40" pos:end="3:45">{<expr pos:start="3:41" pos:end="3:41"><literal type="number" pos:start="3:41" pos:end="3:41">0</literal></expr>,<expr pos:start="3:43" pos:end="3:44"><operator pos:start="3:43" pos:end="3:43">-</operator><literal type="number" pos:start="3:44" pos:end="3:44">1</literal></expr>}</block></expr>,<expr pos:start="3:47" pos:end="3:52"><block pos:start="3:47" pos:end="3:52">{<expr pos:start="3:48" pos:end="3:49"><operator pos:start="3:48" pos:end="3:48">-</operator><literal type="number" pos:start="3:49" pos:end="3:49">1</literal></expr>,<expr pos:start="3:51" pos:end="3:51"><literal type="number" pos:start="3:51" pos:end="3:51">0</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:22"><decl pos:start="4:1" pos:end="4:21"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">char</name></type> <name pos:start="4:6" pos:end="4:21"><name pos:start="4:6" pos:end="4:9">maze</name><index pos:start="4:10" pos:end="4:15">[<expr pos:start="4:11" pos:end="4:14"><literal type="number" pos:start="4:11" pos:end="4:14">1001</literal></expr>]</index><index pos:start="4:16" pos:end="4:21">[<expr pos:start="4:17" pos:end="4:20"><literal type="number" pos:start="4:17" pos:end="4:20">1001</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:22"><decl pos:start="5:1" pos:end="5:21"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:21"><name pos:start="5:6" pos:end="5:9">sign</name><index pos:start="5:10" pos:end="5:15">[<expr pos:start="5:11" pos:end="5:14"><literal type="number" pos:start="5:11" pos:end="5:14">1001</literal></expr>]</index><index pos:start="5:16" pos:end="5:21">[<expr pos:start="5:17" pos:end="5:20"><literal type="number" pos:start="5:17" pos:end="5:20">1001</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="9:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">bool</name></type> <name pos:start="6:6" pos:end="6:7">in</name><parameter_list pos:start="6:8" pos:end="6:20">(<parameter pos:start="6:9" pos:end="6:13"><decl pos:start="6:9" pos:end="6:13"><type pos:start="6:9" pos:end="6:13"><name pos:start="6:9" pos:end="6:11">int</name></type> <name pos:start="6:13" pos:end="6:13">x</name></decl></parameter>,<parameter pos:start="6:15" pos:end="6:19"><decl pos:start="6:15" pos:end="6:19"><type pos:start="6:15" pos:end="6:19"><name pos:start="6:15" pos:end="6:17">int</name></type> <name pos:start="6:19" pos:end="6:19">y</name></decl></parameter>)</parameter_list>
<block pos:start="7:1" pos:end="9:1">{<block_content pos:start="8:5" pos:end="8:46">
    <return pos:start="8:5" pos:end="8:46">return <expr pos:start="8:12" pos:end="8:45"><name pos:start="8:12" pos:end="8:12">x</name><operator pos:start="8:13" pos:end="8:14">&lt;=</operator><name pos:start="8:15" pos:end="8:19">lenth</name><operator pos:start="8:20" pos:end="8:20">-</operator><literal type="number" pos:start="8:21" pos:end="8:21">1</literal><operator pos:start="8:22" pos:end="8:23">&amp;&amp;</operator><name pos:start="8:24" pos:end="8:24">x</name><operator pos:start="8:25" pos:end="8:26">&gt;=</operator><literal type="number" pos:start="8:27" pos:end="8:27">0</literal><operator pos:start="8:28" pos:end="8:29">&amp;&amp;</operator><name pos:start="8:30" pos:end="8:30">y</name><operator pos:start="8:31" pos:end="8:32">&lt;=</operator><name pos:start="8:33" pos:end="8:37">width</name><operator pos:start="8:38" pos:end="8:38">-</operator><literal type="number" pos:start="8:39" pos:end="8:39">1</literal><operator pos:start="8:40" pos:end="8:41">&amp;&amp;</operator><name pos:start="8:42" pos:end="8:42">y</name><operator pos:start="8:43" pos:end="8:44">&gt;=</operator><literal type="number" pos:start="8:45" pos:end="8:45">0</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="10:1" pos:end="22:1"><type pos:start="10:1" pos:end="10:4"><name pos:start="10:1" pos:end="10:4">void</name></type> <name pos:start="10:6" pos:end="10:8">dfs</name><parameter_list pos:start="10:9" pos:end="10:21">(<parameter pos:start="10:10" pos:end="10:14"><decl pos:start="10:10" pos:end="10:14"><type pos:start="10:10" pos:end="10:14"><name pos:start="10:10" pos:end="10:12">int</name></type> <name pos:start="10:14" pos:end="10:14">x</name></decl></parameter>,<parameter pos:start="10:16" pos:end="10:20"><decl pos:start="10:16" pos:end="10:20"><type pos:start="10:16" pos:end="10:20"><name pos:start="10:16" pos:end="10:18">int</name></type> <name pos:start="10:20" pos:end="10:20">y</name></decl></parameter>)</parameter_list>
<block pos:start="11:1" pos:end="22:1">{<block_content pos:start="12:5" pos:end="21:5">
    <for pos:start="12:5" pos:end="21:5">for<control pos:start="12:8" pos:end="12:24">(<init pos:start="12:9" pos:end="12:16"><decl pos:start="12:9" pos:end="12:15"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">i</name><init pos:start="12:14" pos:end="12:15">=<expr pos:start="12:15" pos:end="12:15"><literal type="number" pos:start="12:15" pos:end="12:15">0</literal></expr></init></decl>;</init><condition pos:start="12:17" pos:end="12:20"><expr pos:start="12:17" pos:end="12:19"><name pos:start="12:17" pos:end="12:17">i</name><operator pos:start="12:18" pos:end="12:18">&lt;</operator><literal type="number" pos:start="12:19" pos:end="12:19">4</literal></expr>;</condition><incr pos:start="12:21" pos:end="12:23"><expr pos:start="12:21" pos:end="12:23"><name pos:start="12:21" pos:end="12:21">i</name><operator pos:start="12:22" pos:end="12:23">++</operator></expr></incr>)</control>
    <block pos:start="13:5" pos:end="21:5">{<block_content pos:start="14:9" pos:end="20:9">
        <decl_stmt pos:start="14:9" pos:end="14:27"><decl pos:start="14:9" pos:end="14:26"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:14">tx</name><init pos:start="14:15" pos:end="14:26">=<expr pos:start="14:16" pos:end="14:26"><name pos:start="14:16" pos:end="14:16">x</name><operator pos:start="14:17" pos:end="14:17">+</operator><name pos:start="14:18" pos:end="14:26"><name pos:start="14:18" pos:end="14:20">dir</name><index pos:start="14:21" pos:end="14:23">[<expr pos:start="14:22" pos:end="14:22"><name pos:start="14:22" pos:end="14:22">i</name></expr>]</index><index pos:start="14:24" pos:end="14:26">[<expr pos:start="14:25" pos:end="14:25"><literal type="number" pos:start="14:25" pos:end="14:25">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="15:9" pos:end="15:27"><decl pos:start="15:9" pos:end="15:26"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:14">ty</name><init pos:start="15:15" pos:end="15:26">=<expr pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:16">y</name><operator pos:start="15:17" pos:end="15:17">+</operator><name pos:start="15:18" pos:end="15:26"><name pos:start="15:18" pos:end="15:20">dir</name><index pos:start="15:21" pos:end="15:23">[<expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">i</name></expr>]</index><index pos:start="15:24" pos:end="15:26">[<expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="16:9" pos:end="20:9"><if pos:start="16:9" pos:end="20:9">if<condition pos:start="16:11" pos:end="16:61">(<expr pos:start="16:12" pos:end="16:60"><name pos:start="16:12" pos:end="16:23"><name pos:start="16:12" pos:end="16:15">maze</name><index pos:start="16:16" pos:end="16:19">[<expr pos:start="16:17" pos:end="16:18"><name pos:start="16:17" pos:end="16:18">tx</name></expr>]</index><index pos:start="16:20" pos:end="16:23">[<expr pos:start="16:21" pos:end="16:22"><name pos:start="16:21" pos:end="16:22">ty</name></expr>]</index></name><operator pos:start="16:24" pos:end="16:25">==</operator><literal type="char" pos:start="16:26" pos:end="16:28">'#'</literal><operator pos:start="16:29" pos:end="16:30">&amp;&amp;</operator><call pos:start="16:31" pos:end="16:39"><name pos:start="16:31" pos:end="16:32">in</name><argument_list pos:start="16:33" pos:end="16:39">(<argument pos:start="16:34" pos:end="16:35"><expr pos:start="16:34" pos:end="16:35"><name pos:start="16:34" pos:end="16:35">tx</name></expr></argument>,<argument pos:start="16:37" pos:end="16:38"><expr pos:start="16:37" pos:end="16:38"><name pos:start="16:37" pos:end="16:38">ty</name></expr></argument>)</argument_list></call><operator pos:start="16:40" pos:end="16:41">&amp;&amp;</operator><name pos:start="16:42" pos:end="16:53"><name pos:start="16:42" pos:end="16:45">sign</name><index pos:start="16:46" pos:end="16:49">[<expr pos:start="16:47" pos:end="16:48"><name pos:start="16:47" pos:end="16:48">tx</name></expr>]</index><index pos:start="16:50" pos:end="16:53">[<expr pos:start="16:51" pos:end="16:52"><name pos:start="16:51" pos:end="16:52">ty</name></expr>]</index></name><operator pos:start="16:54" pos:end="16:55">==</operator><literal type="boolean" pos:start="16:56" pos:end="16:60">false</literal></expr>)</condition>
        <block pos:start="17:9" pos:end="20:9">{<block_content pos:start="18:13" pos:end="19:23">
            <expr_stmt pos:start="18:13" pos:end="18:31"><expr pos:start="18:13" pos:end="18:30"><name pos:start="18:13" pos:end="18:24"><name pos:start="18:13" pos:end="18:16">sign</name><index pos:start="18:17" pos:end="18:20">[<expr pos:start="18:18" pos:end="18:19"><name pos:start="18:18" pos:end="18:19">tx</name></expr>]</index><index pos:start="18:21" pos:end="18:24">[<expr pos:start="18:22" pos:end="18:23"><name pos:start="18:22" pos:end="18:23">ty</name></expr>]</index></name><operator pos:start="18:25" pos:end="18:26">==</operator><literal type="boolean" pos:start="18:27" pos:end="18:30">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:23"><expr pos:start="19:13" pos:end="19:22"><call pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:15">dfs</name><argument_list pos:start="19:16" pos:end="19:22">(<argument pos:start="19:17" pos:end="19:18"><expr pos:start="19:17" pos:end="19:18"><name pos:start="19:17" pos:end="19:18">tx</name></expr></argument>,<argument pos:start="19:20" pos:end="19:21"><expr pos:start="19:20" pos:end="19:21"><name pos:start="19:20" pos:end="19:21">ty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="23:1" pos:end="49:1"><type pos:start="23:1" pos:end="23:3"><name pos:start="23:1" pos:end="23:3">int</name></type> <name pos:start="23:5" pos:end="23:8">main</name><parameter_list pos:start="23:9" pos:end="23:10">()</parameter_list>
<block pos:start="24:1" pos:end="49:1">{<block_content pos:start="25:5" pos:end="48:13">
    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><call pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:11">freopen</name><argument_list pos:start="25:12" pos:end="25:34">(<argument pos:start="25:13" pos:end="25:23"><expr pos:start="25:13" pos:end="25:23"><literal type="string" pos:start="25:13" pos:end="25:23">"hiking.in"</literal></expr></argument>,<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><literal type="string" pos:start="25:25" pos:end="25:27">"r"</literal></expr></argument>,<argument pos:start="25:29" pos:end="25:33"><expr pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:37"><expr pos:start="26:5" pos:end="26:36"><call pos:start="26:5" pos:end="26:36"><name pos:start="26:5" pos:end="26:11">freopen</name><argument_list pos:start="26:12" pos:end="26:36">(<argument pos:start="26:13" pos:end="26:24"><expr pos:start="26:13" pos:end="26:24"><literal type="string" pos:start="26:13" pos:end="26:24">"hiking.out"</literal></expr></argument>,<argument pos:start="26:26" pos:end="26:28"><expr pos:start="26:26" pos:end="26:28"><literal type="string" pos:start="26:26" pos:end="26:28">"w"</literal></expr></argument>,<argument pos:start="26:30" pos:end="26:35"><expr pos:start="26:30" pos:end="26:35"><name pos:start="26:30" pos:end="26:35">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="27:5" pos:end="27:14"><decl pos:start="27:5" pos:end="27:13"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">num</name><init pos:start="27:12" pos:end="27:13">=<expr pos:start="27:13" pos:end="27:13"><literal type="number" pos:start="27:13" pos:end="27:13">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:22"><expr pos:start="28:5" pos:end="28:21"><name pos:start="28:5" pos:end="28:7">cin</name><operator pos:start="28:8" pos:end="28:9">&gt;&gt;</operator><name pos:start="28:10" pos:end="28:14">lenth</name><operator pos:start="28:15" pos:end="28:16">&gt;&gt;</operator><name pos:start="28:17" pos:end="28:21">width</name></expr>;</expr_stmt>
    <for pos:start="29:5" pos:end="35:5">for<control pos:start="29:8" pos:end="29:28">(<init pos:start="29:9" pos:end="29:16"><decl pos:start="29:9" pos:end="29:15"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:13">i</name><init pos:start="29:14" pos:end="29:15">=<expr pos:start="29:15" pos:end="29:15"><literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr></init></decl>;</init><condition pos:start="29:17" pos:end="29:24"><expr pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:17">i</name><operator pos:start="29:18" pos:end="29:18">&lt;</operator><name pos:start="29:19" pos:end="29:23">lenth</name></expr>;</condition><incr pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:25">i</name><operator pos:start="29:26" pos:end="29:27">++</operator></expr></incr>)</control>
    <block pos:start="30:5" pos:end="35:5">{<block_content pos:start="31:9" pos:end="34:9">
        <for pos:start="31:9" pos:end="34:9">for<control pos:start="31:12" pos:end="31:32">(<init pos:start="31:13" pos:end="31:20"><decl pos:start="31:13" pos:end="31:19"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:17">j</name><init pos:start="31:18" pos:end="31:19">=<expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr></init></decl>;</init><condition pos:start="31:21" pos:end="31:28"><expr pos:start="31:21" pos:end="31:27"><name pos:start="31:21" pos:end="31:21">j</name><operator pos:start="31:22" pos:end="31:22">&lt;</operator><name pos:start="31:23" pos:end="31:27">width</name></expr>;</condition><incr pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:29">j</name><operator pos:start="31:30" pos:end="31:31">++</operator></expr></incr>)</control>
        <block pos:start="32:9" pos:end="34:9">{<block_content pos:start="33:13" pos:end="33:28">
            <expr_stmt pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:15">cin</name><operator pos:start="33:16" pos:end="33:17">&gt;&gt;</operator><name pos:start="33:18" pos:end="33:27"><name pos:start="33:18" pos:end="33:21">maze</name><index pos:start="33:22" pos:end="33:24">[<expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">i</name></expr>]</index><index pos:start="33:25" pos:end="33:27">[<expr pos:start="33:26" pos:end="33:26"><name pos:start="33:26" pos:end="33:26">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="36:5" pos:end="46:5">for<control pos:start="36:8" pos:end="36:28">(<init pos:start="36:9" pos:end="36:16"><decl pos:start="36:9" pos:end="36:15"><type pos:start="36:9" pos:end="36:11"><name pos:start="36:9" pos:end="36:11">int</name></type> <name pos:start="36:13" pos:end="36:13">i</name><init pos:start="36:14" pos:end="36:15">=<expr pos:start="36:15" pos:end="36:15"><literal type="number" pos:start="36:15" pos:end="36:15">0</literal></expr></init></decl>;</init><condition pos:start="36:17" pos:end="36:24"><expr pos:start="36:17" pos:end="36:23"><name pos:start="36:17" pos:end="36:17">i</name><operator pos:start="36:18" pos:end="36:18">&lt;</operator><name pos:start="36:19" pos:end="36:23">lenth</name></expr>;</condition><incr pos:start="36:25" pos:end="36:27"><expr pos:start="36:25" pos:end="36:27"><name pos:start="36:25" pos:end="36:25">i</name><operator pos:start="36:26" pos:end="36:27">++</operator></expr></incr>)</control>
    <block pos:start="37:5" pos:end="46:5">{<block_content pos:start="38:9" pos:end="45:9">
        <for pos:start="38:9" pos:end="45:9">for<control pos:start="38:12" pos:end="38:32">(<init pos:start="38:13" pos:end="38:20"><decl pos:start="38:13" pos:end="38:19"><type pos:start="38:13" pos:end="38:15"><name pos:start="38:13" pos:end="38:15">int</name></type> <name pos:start="38:17" pos:end="38:17">j</name><init pos:start="38:18" pos:end="38:19">=<expr pos:start="38:19" pos:end="38:19"><literal type="number" pos:start="38:19" pos:end="38:19">0</literal></expr></init></decl>;</init><condition pos:start="38:21" pos:end="38:28"><expr pos:start="38:21" pos:end="38:27"><name pos:start="38:21" pos:end="38:21">j</name><operator pos:start="38:22" pos:end="38:22">&lt;</operator><name pos:start="38:23" pos:end="38:27">width</name></expr>;</condition><incr pos:start="38:29" pos:end="38:31"><expr pos:start="38:29" pos:end="38:31"><name pos:start="38:29" pos:end="38:29">j</name><operator pos:start="38:30" pos:end="38:31">++</operator></expr></incr>)</control>
        <block pos:start="39:9" pos:end="45:9">{<block_content pos:start="40:13" pos:end="44:13">
            <if_stmt pos:start="40:13" pos:end="44:13"><if pos:start="40:13" pos:end="44:13">if<condition pos:start="40:15" pos:end="40:50">(<expr pos:start="40:16" pos:end="40:49"><name pos:start="40:16" pos:end="40:25"><name pos:start="40:16" pos:end="40:19">maze</name><index pos:start="40:20" pos:end="40:22">[<expr pos:start="40:21" pos:end="40:21"><name pos:start="40:21" pos:end="40:21">i</name></expr>]</index><index pos:start="40:23" pos:end="40:25">[<expr pos:start="40:24" pos:end="40:24"><name pos:start="40:24" pos:end="40:24">j</name></expr>]</index></name><operator pos:start="40:26" pos:end="40:27">==</operator><literal type="char" pos:start="40:28" pos:end="40:30">'#'</literal><operator pos:start="40:31" pos:end="40:32">&amp;&amp;</operator><name pos:start="40:33" pos:end="40:42"><name pos:start="40:33" pos:end="40:36">sign</name><index pos:start="40:37" pos:end="40:39">[<expr pos:start="40:38" pos:end="40:38"><name pos:start="40:38" pos:end="40:38">i</name></expr>]</index><index pos:start="40:40" pos:end="40:42">[<expr pos:start="40:41" pos:end="40:41"><name pos:start="40:41" pos:end="40:41">j</name></expr>]</index></name><operator pos:start="40:43" pos:end="40:44">==</operator><literal type="boolean" pos:start="40:45" pos:end="40:49">false</literal></expr>)</condition>
            <block pos:start="41:13" pos:end="44:13">{<block_content pos:start="42:17" pos:end="43:25">
                <expr_stmt pos:start="42:17" pos:end="42:22"><expr pos:start="42:17" pos:end="42:21"><name pos:start="42:17" pos:end="42:19">num</name><operator pos:start="42:20" pos:end="42:21">++</operator></expr>;</expr_stmt>
                <expr_stmt pos:start="43:17" pos:end="43:25"><expr pos:start="43:17" pos:end="43:24"><call pos:start="43:17" pos:end="43:24"><name pos:start="43:17" pos:end="43:19">dfs</name><argument_list pos:start="43:20" pos:end="43:24">(<argument pos:start="43:21" pos:end="43:21"><expr pos:start="43:21" pos:end="43:21"><name pos:start="43:21" pos:end="43:21">i</name></expr></argument>,<argument pos:start="43:23" pos:end="43:23"><expr pos:start="43:23" pos:end="43:23"><name pos:start="43:23" pos:end="43:23">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="47:5" pos:end="47:20"><expr pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:8">cout</name><operator pos:start="47:9" pos:end="47:10">&lt;&lt;</operator><name pos:start="47:11" pos:end="47:13">num</name><operator pos:start="47:14" pos:end="47:15">&lt;&lt;</operator><name pos:start="47:16" pos:end="47:19">endl</name></expr>;</expr_stmt>
    <return pos:start="48:5" pos:end="48:13">return <expr pos:start="48:12" pos:end="48:12"><literal type="number" pos:start="48:12" pos:end="48:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
