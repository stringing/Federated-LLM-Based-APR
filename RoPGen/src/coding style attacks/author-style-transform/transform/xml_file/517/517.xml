<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/517/517.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:18"><decl pos:start="3:1" pos:end="3:17"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:8">flag</name><index pos:start="3:9" pos:end="3:17">[<expr pos:start="3:10" pos:end="3:16"><literal type="number" pos:start="3:10" pos:end="3:16">1000001</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="35:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">void</name></type> <name pos:start="4:6" pos:end="4:8">fly</name><parameter_list pos:start="4:9" pos:end="4:21">(<parameter pos:start="4:10" pos:end="4:20"><decl pos:start="4:10" pos:end="4:20"><type pos:start="4:10" pos:end="4:18"><name pos:start="4:10" pos:end="4:13">long</name> <name pos:start="4:15" pos:end="4:18">long</name></type> <name pos:start="4:20" pos:end="4:20">x</name></decl></parameter>)</parameter_list><block pos:start="4:22" pos:end="35:1">{<block_content pos:start="5:5" pos:end="24:18">
    <if_stmt pos:start="5:5" pos:end="13:5"><if pos:start="5:5" pos:end="13:5">if<condition pos:start="5:7" pos:end="5:20">(<expr pos:start="5:8" pos:end="5:19"><name pos:start="5:8" pos:end="5:14"><name pos:start="5:8" pos:end="5:11">flag</name><index pos:start="5:12" pos:end="5:14">[<expr pos:start="5:13" pos:end="5:13"><name pos:start="5:13" pos:end="5:13">x</name></expr>]</index></name> <operator pos:start="5:16" pos:end="5:17">!=</operator> <literal type="number" pos:start="5:19" pos:end="5:19">2</literal></expr>)</condition><block pos:start="5:21" pos:end="13:5">{<block_content pos:start="6:9" pos:end="12:9">
        <if_stmt pos:start="6:9" pos:end="12:9"><if pos:start="6:9" pos:end="9:9">if<condition pos:start="6:11" pos:end="6:22">(<expr pos:start="6:12" pos:end="6:21"><name pos:start="6:12" pos:end="6:12">x</name> <operator pos:start="6:14" pos:end="6:14">%</operator> <literal type="number" pos:start="6:16" pos:end="6:16">2</literal> <operator pos:start="6:18" pos:end="6:19">==</operator> <literal type="number" pos:start="6:21" pos:end="6:21">0</literal></expr>)</condition><block pos:start="6:23" pos:end="9:9">{<block_content pos:start="7:13" pos:end="8:22">
            <expr_stmt pos:start="7:13" pos:end="7:21"><expr pos:start="7:13" pos:end="7:20"><call pos:start="7:13" pos:end="7:20"><name pos:start="7:13" pos:end="7:15">fly</name><argument_list pos:start="7:16" pos:end="7:20">(<argument pos:start="7:17" pos:end="7:19"><expr pos:start="7:17" pos:end="7:19"><name pos:start="7:17" pos:end="7:17">x</name><operator pos:start="7:18" pos:end="7:18">/</operator><literal type="number" pos:start="7:19" pos:end="7:19">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="8:13" pos:end="8:22"><expr pos:start="8:13" pos:end="8:21"><name pos:start="8:13" pos:end="8:19"><name pos:start="8:13" pos:end="8:16">flag</name><index pos:start="8:17" pos:end="8:19">[<expr pos:start="8:18" pos:end="8:18"><name pos:start="8:18" pos:end="8:18">x</name></expr>]</index></name><operator pos:start="8:20" pos:end="8:21">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="9:10" pos:end="12:9">else<block pos:start="9:14" pos:end="12:9">{<block_content pos:start="10:13" pos:end="11:22">
            <expr_stmt pos:start="10:13" pos:end="10:29"><expr pos:start="10:13" pos:end="10:28"><call pos:start="10:13" pos:end="10:28"><name pos:start="10:13" pos:end="10:15">fly</name><argument_list pos:start="10:16" pos:end="10:28">(<argument pos:start="10:17" pos:end="10:27"><expr pos:start="10:17" pos:end="10:27"><literal type="number" pos:start="10:17" pos:end="10:17">6</literal><operator pos:start="10:18" pos:end="10:18">*</operator><operator pos:start="10:19" pos:end="10:19">(</operator><name pos:start="10:20" pos:end="10:20">x</name><operator pos:start="10:21" pos:end="10:21">-</operator><literal type="number" pos:start="10:22" pos:end="10:22">1</literal><operator pos:start="10:23" pos:end="10:23">)</operator><operator pos:start="10:24" pos:end="10:24">/</operator><literal type="number" pos:start="10:25" pos:end="10:26">2</literal><operator pos:start="10:26" pos:end="10:26">+</operator><literal type="number" pos:start="10:27" pos:end="10:27">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="11:13" pos:end="11:22"><expr pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:16">flag</name><index pos:start="11:17" pos:end="11:19">[<expr pos:start="11:18" pos:end="11:18"><name pos:start="11:18" pos:end="11:18">x</name></expr>]</index></name><operator pos:start="11:20" pos:end="11:21">++</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="14:5" pos:end="23:5"><if pos:start="14:5" pos:end="17:5">if<condition pos:start="14:7" pos:end="14:15">(<expr pos:start="14:8" pos:end="14:14"><name pos:start="14:8" pos:end="14:8">x</name> <operator pos:start="14:10" pos:end="14:11">==</operator> <literal type="number" pos:start="14:13" pos:end="14:14">12</literal></expr>)</condition><block pos:start="14:16" pos:end="17:5">{<block_content pos:start="15:9" pos:end="16:18">
        <expr_stmt pos:start="15:9" pos:end="15:14"><expr pos:start="15:9" pos:end="15:13"><name pos:start="15:9" pos:end="15:9">x</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <literal type="number" pos:start="15:13" pos:end="15:13">6</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:18"><expr pos:start="16:9" pos:end="16:17"><name pos:start="16:9" pos:end="16:15"><name pos:start="16:9" pos:end="16:12">flag</name><index pos:start="16:13" pos:end="16:15">[<expr pos:start="16:14" pos:end="16:14"><name pos:start="16:14" pos:end="16:14">x</name></expr>]</index></name><operator pos:start="16:16" pos:end="16:17">++</operator></expr>;</expr_stmt>
    </block_content>}</block></if><if type="elseif" pos:start="17:6" pos:end="20:5">else if<condition pos:start="17:13" pos:end="17:20">(<expr pos:start="17:14" pos:end="17:19"><name pos:start="17:14" pos:end="17:14">x</name> <operator pos:start="17:16" pos:end="17:17">==</operator> <literal type="number" pos:start="17:19" pos:end="17:19">6</literal></expr>)</condition><block pos:start="17:21" pos:end="20:5">{<block_content pos:start="18:9" pos:end="19:18">
        <expr_stmt pos:start="18:9" pos:end="18:14"><expr pos:start="18:9" pos:end="18:13"><name pos:start="18:9" pos:end="18:9">x</name> <operator pos:start="18:11" pos:end="18:11">=</operator> <literal type="number" pos:start="18:13" pos:end="18:13">3</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:18"><expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:12">flag</name><index pos:start="19:13" pos:end="19:15">[<expr pos:start="19:14" pos:end="19:14"><name pos:start="19:14" pos:end="19:14">x</name></expr>]</index></name><operator pos:start="19:16" pos:end="19:17">++</operator></expr>;</expr_stmt>
    </block_content>}</block></if><if type="elseif" pos:start="20:6" pos:end="23:5">else if<condition pos:start="20:13" pos:end="20:20">(<expr pos:start="20:14" pos:end="20:19"><name pos:start="20:14" pos:end="20:14">x</name> <operator pos:start="20:16" pos:end="20:17">==</operator> <literal type="number" pos:start="20:19" pos:end="20:19">3</literal></expr>)</condition><block pos:start="20:21" pos:end="23:5">{<block_content pos:start="21:9" pos:end="22:18">
        <expr_stmt pos:start="21:9" pos:end="21:15"><expr pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:9">x</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <literal type="number" pos:start="21:13" pos:end="21:14">12</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:18"><expr pos:start="22:9" pos:end="22:17"><name pos:start="22:9" pos:end="22:15"><name pos:start="22:9" pos:end="22:12">flag</name><index pos:start="22:13" pos:end="22:15">[<expr pos:start="22:14" pos:end="22:14"><name pos:start="22:14" pos:end="22:14">x</name></expr>]</index></name><operator pos:start="22:16" pos:end="22:17">++</operator></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:18"><expr pos:start="24:5" pos:end="24:17"><name pos:start="24:5" pos:end="24:8">cout</name><operator pos:start="24:9" pos:end="24:10">&lt;&lt;</operator><name pos:start="24:11" pos:end="24:11">x</name><operator pos:start="24:12" pos:end="24:13">&lt;&lt;</operator><literal type="string" pos:start="24:14" pos:end="24:17">", "</literal></expr>;</expr_stmt>
    
    
    
    
    
    
    
    
    

</block_content>}</block></function>

<function pos:start="37:1" pos:end="43:1"><type pos:start="37:1" pos:end="37:3"><name pos:start="37:1" pos:end="37:3">int</name></type> <name pos:start="37:5" pos:end="37:8">main</name><parameter_list pos:start="37:9" pos:end="37:10">()</parameter_list><block pos:start="37:11" pos:end="43:1">{<block_content pos:start="38:5" pos:end="42:13">
    <decl_stmt pos:start="38:5" pos:end="38:10"><decl pos:start="38:5" pos:end="38:9"><type pos:start="38:5" pos:end="38:7"><name pos:start="38:5" pos:end="38:7">int</name></type> <name pos:start="38:9" pos:end="38:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:11"><expr pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:7">cin</name><operator pos:start="39:8" pos:end="39:9">&gt;&gt;</operator><name pos:start="39:10" pos:end="39:10">n</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:11"><expr pos:start="41:5" pos:end="41:10"><call pos:start="41:5" pos:end="41:10"><name pos:start="41:5" pos:end="41:7">fly</name><argument_list pos:start="41:8" pos:end="41:10">(<argument pos:start="41:9" pos:end="41:9"><expr pos:start="41:9" pos:end="41:9"><name pos:start="41:9" pos:end="41:9">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="42:5" pos:end="42:13">return <expr pos:start="42:12" pos:end="42:12"><literal type="number" pos:start="42:12" pos:end="42:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
