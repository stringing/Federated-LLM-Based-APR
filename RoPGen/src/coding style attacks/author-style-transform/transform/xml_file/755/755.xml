<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/755/755.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:20"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>, <decl pos:start="3:8" pos:end="3:14"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:8" pos:end="3:14"><name pos:start="3:8" pos:end="3:8">a</name><index pos:start="3:9" pos:end="3:11">[<expr pos:start="3:10" pos:end="3:10"><literal type="number" pos:start="3:10" pos:end="3:10">9</literal></expr>]</index><index pos:start="3:12" pos:end="3:14">[<expr pos:start="3:13" pos:end="3:13"><literal type="number" pos:start="3:13" pos:end="3:13">9</literal></expr>]</index></name></decl>, <decl pos:start="3:17" pos:end="3:19"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:17" pos:end="3:19">ans</name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="21:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">void</name></type> <name pos:start="4:6" pos:end="4:8">dfs</name><parameter_list pos:start="4:9" pos:end="4:38">(<parameter pos:start="4:10" pos:end="4:22"><decl pos:start="4:10" pos:end="4:22"><type pos:start="4:10" pos:end="4:22"><name pos:start="4:10" pos:end="4:20"><name pos:start="4:10" pos:end="4:15">vector</name><argument_list type="generic" pos:start="4:16" pos:end="4:20">&lt;<argument pos:start="4:17" pos:end="4:19"><expr pos:start="4:17" pos:end="4:19"><name pos:start="4:17" pos:end="4:19">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="4:22" pos:end="4:22">b</name></decl></parameter>, <parameter pos:start="4:25" pos:end="4:37"><decl pos:start="4:25" pos:end="4:37"><type pos:start="4:25" pos:end="4:37"><name pos:start="4:25" pos:end="4:35"><name pos:start="4:25" pos:end="4:30">vector</name><argument_list type="generic" pos:start="4:31" pos:end="4:35">&lt;<argument pos:start="4:32" pos:end="4:34"><expr pos:start="4:32" pos:end="4:34"><name pos:start="4:32" pos:end="4:34">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="4:37" pos:end="4:37">w</name></decl></parameter>)</parameter_list> <block pos:start="4:40" pos:end="21:1">{<block_content pos:start="5:5" pos:end="20:5">
    <if_stmt pos:start="5:5" pos:end="8:5"><if pos:start="5:5" pos:end="8:5">if <condition pos:start="5:8" pos:end="5:22">(<expr pos:start="5:9" pos:end="5:21"><call pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:9">b</name><operator pos:start="5:10" pos:end="5:10">.</operator><name pos:start="5:11" pos:end="5:14">size</name></name><argument_list pos:start="5:15" pos:end="5:16">()</argument_list></call> <operator pos:start="5:18" pos:end="5:19">==</operator> <name pos:start="5:21" pos:end="5:21">n</name></expr>)</condition> <block pos:start="5:24" pos:end="8:5">{<block_content pos:start="6:9" pos:end="7:15">
        <expr_stmt pos:start="6:9" pos:end="6:14"><expr pos:start="6:9" pos:end="6:13"><name pos:start="6:9" pos:end="6:11">ans</name><operator pos:start="6:12" pos:end="6:13">++</operator></expr>;</expr_stmt>
        <return pos:start="7:9" pos:end="7:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="9:5" pos:end="20:5">for <control pos:start="9:9" pos:end="9:31">(<init pos:start="9:10" pos:end="9:19"><decl pos:start="9:10" pos:end="9:18"><type pos:start="9:10" pos:end="9:12"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:14">i</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</init> <condition pos:start="9:21" pos:end="9:26"><expr pos:start="9:21" pos:end="9:25"><name pos:start="9:21" pos:end="9:21">i</name> <operator pos:start="9:23" pos:end="9:23">&lt;</operator> <name pos:start="9:25" pos:end="9:25">n</name></expr>;</condition> <incr pos:start="9:28" pos:end="9:30"><expr pos:start="9:28" pos:end="9:30"><name pos:start="9:28" pos:end="9:28">i</name><operator pos:start="9:29" pos:end="9:30">++</operator></expr></incr>)</control> <block pos:start="9:33" pos:end="20:5">{<block_content pos:start="10:9" pos:end="19:21">
        <if_stmt pos:start="10:9" pos:end="10:42"><if pos:start="10:9" pos:end="10:42">if <condition pos:start="10:12" pos:end="10:32">(<expr pos:start="10:13" pos:end="10:31"><name pos:start="10:13" pos:end="10:26"><name pos:start="10:13" pos:end="10:13">a</name><index pos:start="10:14" pos:end="10:23">[<expr pos:start="10:15" pos:end="10:22"><call pos:start="10:15" pos:end="10:22"><name pos:start="10:15" pos:end="10:20"><name pos:start="10:15" pos:end="10:15">b</name><operator pos:start="10:16" pos:end="10:16">.</operator><name pos:start="10:17" pos:end="10:20">size</name></name><argument_list pos:start="10:21" pos:end="10:22">()</argument_list></call></expr>]</index><index pos:start="10:24" pos:end="10:26">[<expr pos:start="10:25" pos:end="10:25"><name pos:start="10:25" pos:end="10:25">i</name></expr>]</index></name> <operator pos:start="10:28" pos:end="10:29">==</operator> <literal type="number" pos:start="10:31" pos:end="10:31">0</literal></expr>)</condition><block type="pseudo" pos:start="10:34" pos:end="10:42"><block_content pos:start="10:34" pos:end="10:42"> <continue pos:start="10:34" pos:end="10:42">continue;</continue></block_content></block></if></if_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:23"><expr pos:start="11:9" pos:end="11:22"><call pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:9">b</name><operator pos:start="11:10" pos:end="11:10">.</operator><name pos:start="11:11" pos:end="11:19">push_back</name></name><argument_list pos:start="11:20" pos:end="11:22">(<argument pos:start="11:21" pos:end="11:21"><expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="12:9" pos:end="18:9">for <control pos:start="12:13" pos:end="12:35">(<init pos:start="12:14" pos:end="12:23"><decl pos:start="12:14" pos:end="12:22"><type pos:start="12:14" pos:end="12:16"><name pos:start="12:14" pos:end="12:16">int</name></type> <name pos:start="12:18" pos:end="12:18">j</name> <init pos:start="12:20" pos:end="12:22">= <expr pos:start="12:22" pos:end="12:22"><literal type="number" pos:start="12:22" pos:end="12:22">0</literal></expr></init></decl>;</init> <condition pos:start="12:25" pos:end="12:30"><expr pos:start="12:25" pos:end="12:29"><name pos:start="12:25" pos:end="12:25">j</name> <operator pos:start="12:27" pos:end="12:27">&lt;</operator> <name pos:start="12:29" pos:end="12:29">n</name></expr>;</condition> <incr pos:start="12:32" pos:end="12:34"><expr pos:start="12:32" pos:end="12:34"><name pos:start="12:32" pos:end="12:32">j</name><operator pos:start="12:33" pos:end="12:34">++</operator></expr></incr>)</control> <block pos:start="12:37" pos:end="18:9">{<block_content pos:start="13:13" pos:end="17:25">
            <if_stmt pos:start="13:13" pos:end="13:33"><if pos:start="13:13" pos:end="13:33">if <condition pos:start="13:16" pos:end="13:23">(<expr pos:start="13:17" pos:end="13:22"><name pos:start="13:17" pos:end="13:17">j</name> <operator pos:start="13:19" pos:end="13:20">==</operator> <name pos:start="13:22" pos:end="13:22">i</name></expr>)</condition><block type="pseudo" pos:start="13:25" pos:end="13:33"><block_content pos:start="13:25" pos:end="13:33"> <continue pos:start="13:25" pos:end="13:33">continue;</continue></block_content></block></if></if_stmt>
            <if_stmt pos:start="14:13" pos:end="14:46"><if pos:start="14:13" pos:end="14:46">if <condition pos:start="14:16" pos:end="14:36">(<expr pos:start="14:17" pos:end="14:35"><name pos:start="14:17" pos:end="14:30"><name pos:start="14:17" pos:end="14:17">a</name><index pos:start="14:18" pos:end="14:27">[<expr pos:start="14:19" pos:end="14:26"><call pos:start="14:19" pos:end="14:26"><name pos:start="14:19" pos:end="14:24"><name pos:start="14:19" pos:end="14:19">w</name><operator pos:start="14:20" pos:end="14:20">.</operator><name pos:start="14:21" pos:end="14:24">size</name></name><argument_list pos:start="14:25" pos:end="14:26">()</argument_list></call></expr>]</index><index pos:start="14:28" pos:end="14:30">[<expr pos:start="14:29" pos:end="14:29"><name pos:start="14:29" pos:end="14:29">j</name></expr>]</index></name> <operator pos:start="14:32" pos:end="14:33">==</operator> <literal type="number" pos:start="14:35" pos:end="14:35">0</literal></expr>)</condition><block type="pseudo" pos:start="14:38" pos:end="14:46"><block_content pos:start="14:38" pos:end="14:46"> <continue pos:start="14:38" pos:end="14:46">continue;</continue></block_content></block></if></if_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:27"><expr pos:start="15:13" pos:end="15:26"><call pos:start="15:13" pos:end="15:26"><name pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:13">w</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">push_back</name></name><argument_list pos:start="15:24" pos:end="15:26">(<argument pos:start="15:25" pos:end="15:25"><expr pos:start="15:25" pos:end="15:25"><name pos:start="15:25" pos:end="15:25">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:22"><expr pos:start="16:13" pos:end="16:21"><call pos:start="16:13" pos:end="16:21"><name pos:start="16:13" pos:end="16:15">dfs</name><argument_list pos:start="16:16" pos:end="16:21">(<argument pos:start="16:17" pos:end="16:17"><expr pos:start="16:17" pos:end="16:17"><name pos:start="16:17" pos:end="16:17">b</name></expr></argument>, <argument pos:start="16:20" pos:end="16:20"><expr pos:start="16:20" pos:end="16:20"><name pos:start="16:20" pos:end="16:20">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:25"><expr pos:start="17:13" pos:end="17:24"><call pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:13">w</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:22">pop_back</name></name><argument_list pos:start="17:23" pos:end="17:24">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="19:9" pos:end="19:21"><expr pos:start="19:9" pos:end="19:20"><call pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:9">b</name><operator pos:start="19:10" pos:end="19:10">.</operator><name pos:start="19:11" pos:end="19:18">pop_back</name></name><argument_list pos:start="19:19" pos:end="19:20">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="22:1" pos:end="35:1"><type pos:start="22:1" pos:end="22:3"><name pos:start="22:1" pos:end="22:3">int</name></type> <name pos:start="22:5" pos:end="22:8">main</name><parameter_list pos:start="22:9" pos:end="22:10">()</parameter_list> <block pos:start="22:12" pos:end="35:1">{<block_content pos:start="23:5" pos:end="34:13">
    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:11">freopen</name><argument_list pos:start="23:12" pos:end="23:35">(<argument pos:start="23:13" pos:end="23:22"><expr pos:start="23:13" pos:end="23:22"><literal type="string" pos:start="23:13" pos:end="23:22">"queen.in"</literal></expr></argument>, <argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><literal type="string" pos:start="23:25" pos:end="23:27">"r"</literal></expr></argument>, <argument pos:start="23:30" pos:end="23:34"><expr pos:start="23:30" pos:end="23:34"><name pos:start="23:30" pos:end="23:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:38"><expr pos:start="24:5" pos:end="24:37"><call pos:start="24:5" pos:end="24:37"><name pos:start="24:5" pos:end="24:11">freopen</name><argument_list pos:start="24:12" pos:end="24:37">(<argument pos:start="24:13" pos:end="24:23"><expr pos:start="24:13" pos:end="24:23"><literal type="string" pos:start="24:13" pos:end="24:23">"queen.out"</literal></expr></argument>, <argument pos:start="24:26" pos:end="24:28"><expr pos:start="24:26" pos:end="24:28"><literal type="string" pos:start="24:26" pos:end="24:28">"w"</literal></expr></argument>, <argument pos:start="24:31" pos:end="24:36"><expr pos:start="24:31" pos:end="24:36"><name pos:start="24:31" pos:end="24:36">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:13"><expr pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:7">cin</name> <operator pos:start="25:9" pos:end="25:10">&gt;&gt;</operator> <name pos:start="25:12" pos:end="25:12">n</name></expr>;</expr_stmt>
    <for pos:start="26:5" pos:end="30:5">for <control pos:start="26:9" pos:end="26:31">(<init pos:start="26:10" pos:end="26:19"><decl pos:start="26:10" pos:end="26:18"><type pos:start="26:10" pos:end="26:12"><name pos:start="26:10" pos:end="26:12">int</name></type> <name pos:start="26:14" pos:end="26:14">i</name> <init pos:start="26:16" pos:end="26:18">= <expr pos:start="26:18" pos:end="26:18"><literal type="number" pos:start="26:18" pos:end="26:18">0</literal></expr></init></decl>;</init> <condition pos:start="26:21" pos:end="26:26"><expr pos:start="26:21" pos:end="26:25"><name pos:start="26:21" pos:end="26:21">i</name> <operator pos:start="26:23" pos:end="26:23">&lt;</operator> <name pos:start="26:25" pos:end="26:25">n</name></expr>;</condition> <incr pos:start="26:28" pos:end="26:30"><expr pos:start="26:28" pos:end="26:30"><name pos:start="26:28" pos:end="26:28">i</name><operator pos:start="26:29" pos:end="26:30">++</operator></expr></incr>)</control> <block pos:start="26:33" pos:end="30:5">{<block_content pos:start="27:9" pos:end="29:9">
        <for pos:start="27:9" pos:end="29:9">for <control pos:start="27:13" pos:end="27:35">(<init pos:start="27:14" pos:end="27:23"><decl pos:start="27:14" pos:end="27:22"><type pos:start="27:14" pos:end="27:16"><name pos:start="27:14" pos:end="27:16">int</name></type> <name pos:start="27:18" pos:end="27:18">j</name> <init pos:start="27:20" pos:end="27:22">= <expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr></init></decl>;</init> <condition pos:start="27:25" pos:end="27:30"><expr pos:start="27:25" pos:end="27:29"><name pos:start="27:25" pos:end="27:25">j</name> <operator pos:start="27:27" pos:end="27:27">&lt;</operator> <name pos:start="27:29" pos:end="27:29">n</name></expr>;</condition> <incr pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><name pos:start="27:32" pos:end="27:32">j</name><operator pos:start="27:33" pos:end="27:34">++</operator></expr></incr>)</control> <block pos:start="27:37" pos:end="29:9">{<block_content pos:start="28:13" pos:end="28:27">
            <expr_stmt pos:start="28:13" pos:end="28:27"><expr pos:start="28:13" pos:end="28:26"><name pos:start="28:13" pos:end="28:15">cin</name> <operator pos:start="28:17" pos:end="28:18">&gt;&gt;</operator> <name pos:start="28:20" pos:end="28:26"><name pos:start="28:20" pos:end="28:20">a</name><index pos:start="28:21" pos:end="28:23">[<expr pos:start="28:22" pos:end="28:22"><name pos:start="28:22" pos:end="28:22">i</name></expr>]</index><index pos:start="28:24" pos:end="28:26">[<expr pos:start="28:25" pos:end="28:25"><name pos:start="28:25" pos:end="28:25">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <decl_stmt pos:start="31:5" pos:end="31:21"><decl pos:start="31:5" pos:end="31:17"><type pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:10">vector</name><argument_list type="generic" pos:start="31:11" pos:end="31:15">&lt;<argument pos:start="31:12" pos:end="31:14"><expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="31:17" pos:end="31:17">b</name></decl>, <decl pos:start="31:20" pos:end="31:20"><type ref="prev" pos:start="31:5" pos:end="31:15"/><name pos:start="31:20" pos:end="31:20">w</name></decl>;</decl_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:14"><expr pos:start="32:5" pos:end="32:13"><call pos:start="32:5" pos:end="32:13"><name pos:start="32:5" pos:end="32:7">dfs</name><argument_list pos:start="32:8" pos:end="32:13">(<argument pos:start="32:9" pos:end="32:9"><expr pos:start="32:9" pos:end="32:9"><name pos:start="32:9" pos:end="32:9">b</name></expr></argument>, <argument pos:start="32:12" pos:end="32:12"><expr pos:start="32:12" pos:end="32:12"><name pos:start="32:12" pos:end="32:12">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:8">cout</name> <operator pos:start="33:10" pos:end="33:11">&lt;&lt;</operator> <name pos:start="33:13" pos:end="33:15">ans</name> <operator pos:start="33:17" pos:end="33:18">&lt;&lt;</operator> <name pos:start="33:20" pos:end="33:23">endl</name></expr>;</expr_stmt>
    <return pos:start="34:5" pos:end="34:13">return <expr pos:start="34:12" pos:end="34:12"><literal type="number" pos:start="34:12" pos:end="34:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
