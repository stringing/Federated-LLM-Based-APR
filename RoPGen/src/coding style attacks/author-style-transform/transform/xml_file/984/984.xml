<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/984/984.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:21"><decl pos:start="3:1" pos:end="3:20"><type pos:start="3:1" pos:end="3:18"><name pos:start="3:1" pos:end="3:18"><name pos:start="3:1" pos:end="3:3">map</name><argument_list type="generic" pos:start="3:4" pos:end="3:18">&lt;<argument pos:start="3:5" pos:end="3:10"><expr pos:start="3:5" pos:end="3:10"><name pos:start="3:5" pos:end="3:10">string</name></expr></argument>,<argument pos:start="3:12" pos:end="3:17"><expr pos:start="3:12" pos:end="3:17"><name pos:start="3:12" pos:end="3:17">string</name></expr></argument>&gt;</argument_list></name></type><name pos:start="3:19" pos:end="3:20">mp</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:28"><decl pos:start="4:1" pos:end="4:27"><type pos:start="4:1" pos:end="4:6"><name pos:start="4:1" pos:end="4:6">string</name></type> <name pos:start="4:8" pos:end="4:13"><name pos:start="4:8" pos:end="4:10">pre</name><index pos:start="4:11" pos:end="4:13">[<expr pos:start="4:12" pos:end="4:12"><literal type="number" pos:start="4:12" pos:end="4:12">2</literal></expr>]</index></name><init pos:start="4:14" pos:end="4:27">=<expr pos:start="4:15" pos:end="4:27"><block pos:start="4:15" pos:end="4:27">{<expr pos:start="4:16" pos:end="4:20"><literal type="string" pos:start="4:16" pos:end="4:20">"101"</literal></expr>,<expr pos:start="4:22" pos:end="4:26"><literal type="string" pos:start="4:22" pos:end="4:26">"111"</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="30:1"><type pos:start="5:1" pos:end="5:6"><name pos:start="5:1" pos:end="5:6">string</name></type> <name pos:start="5:8" pos:end="5:8">g</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list><block pos:start="5:11" pos:end="30:1">{<block_content pos:start="6:5" pos:end="29:5">
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:12">s</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:10">c</name></decl>;</decl_stmt>
    <while pos:start="8:5" pos:end="8:22">while<condition pos:start="8:10" pos:end="8:17">(<expr pos:start="8:11" pos:end="8:16"><name pos:start="8:11" pos:end="8:13">cin</name><operator pos:start="8:14" pos:end="8:15">&gt;&gt;</operator><name pos:start="8:16" pos:end="8:16">c</name></expr>)</condition><block type="pseudo" pos:start="8:18" pos:end="8:22"><block_content pos:start="8:18" pos:end="8:22"><expr_stmt pos:start="8:18" pos:end="8:22"><expr pos:start="8:18" pos:end="8:21"><name pos:start="8:18" pos:end="8:18">s</name><operator pos:start="8:19" pos:end="8:20">+=</operator><name pos:start="8:21" pos:end="8:21">c</name></expr>;</expr_stmt></block_content></block></while>
    <if_stmt pos:start="9:5" pos:end="9:38"><if pos:start="9:5" pos:end="9:38">if<condition pos:start="9:7" pos:end="9:23">(<expr pos:start="9:8" pos:end="9:22"><call pos:start="9:8" pos:end="9:17"><name pos:start="9:8" pos:end="9:15"><name pos:start="9:8" pos:end="9:8">s</name><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:15">length</name></name><argument_list pos:start="9:16" pos:end="9:17">()</argument_list></call><operator pos:start="9:18" pos:end="9:18">%</operator><literal type="number" pos:start="9:19" pos:end="9:19">8</literal><operator pos:start="9:20" pos:end="9:21">!=</operator><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr>)</condition><block type="pseudo" pos:start="9:24" pos:end="9:38"><block_content pos:start="9:24" pos:end="9:38"><return pos:start="9:24" pos:end="9:38">return <expr pos:start="9:31" pos:end="9:37"><literal type="string" pos:start="9:31" pos:end="9:37">"Error"</literal></expr>;</return></block_content></block></if></if_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:22"><decl pos:start="10:5" pos:end="10:17"><type pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:10">string</name></type> <name pos:start="10:12" pos:end="10:14">ans</name><init pos:start="10:15" pos:end="10:17">=<expr pos:start="10:16" pos:end="10:17"><literal type="string" pos:start="10:16" pos:end="10:17">""</literal></expr></init></decl>,<decl pos:start="10:19" pos:end="10:19"><type ref="prev" pos:start="10:5" pos:end="10:10"/><name pos:start="10:19" pos:end="10:19">t</name></decl>,<decl pos:start="10:21" pos:end="10:21"><type ref="prev" pos:start="10:5" pos:end="10:10"/><name pos:start="10:21" pos:end="10:21">n</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">p</name><init pos:start="11:10" pos:end="11:11">=<expr pos:start="11:11" pos:end="11:11"><literal type="number" pos:start="11:11" pos:end="11:11">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="12:5" pos:end="29:5">while<condition pos:start="12:10" pos:end="12:25">(<expr pos:start="12:11" pos:end="12:24"><name pos:start="12:11" pos:end="12:11">p</name><operator pos:start="12:12" pos:end="12:12">+</operator><literal type="number" pos:start="12:13" pos:end="12:13">7</literal><operator pos:start="12:14" pos:end="12:14">&lt;</operator><call pos:start="12:15" pos:end="12:24"><name pos:start="12:15" pos:end="12:22"><name pos:start="12:15" pos:end="12:15">s</name><operator pos:start="12:16" pos:end="12:16">.</operator><name pos:start="12:17" pos:end="12:22">length</name></name><argument_list pos:start="12:23" pos:end="12:24">()</argument_list></call></expr>)</condition><block pos:start="12:26" pos:end="29:5">{<block_content pos:start="13:9" pos:end="28:9">
        <expr_stmt pos:start="13:9" pos:end="13:15"><expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:9">n</name><operator pos:start="13:10" pos:end="13:10">=</operator><name pos:start="13:11" pos:end="13:11">t</name><operator pos:start="13:12" pos:end="13:12">=</operator><literal type="string" pos:start="13:13" pos:end="13:14">""</literal></expr>;</expr_stmt>
        <for pos:start="14:9" pos:end="14:38">for<control pos:start="14:12" pos:end="14:30">(<init pos:start="14:13" pos:end="14:20"><decl pos:start="14:13" pos:end="14:19"><type pos:start="14:13" pos:end="14:15"><name pos:start="14:13" pos:end="14:15">int</name></type> <name pos:start="14:17" pos:end="14:17">i</name><init pos:start="14:18" pos:end="14:19">=<expr pos:start="14:19" pos:end="14:19"><name pos:start="14:19" pos:end="14:19">p</name></expr></init></decl>;</init><condition pos:start="14:21" pos:end="14:26"><expr pos:start="14:21" pos:end="14:25"><name pos:start="14:21" pos:end="14:21">i</name><operator pos:start="14:22" pos:end="14:22">&lt;</operator><name pos:start="14:23" pos:end="14:23">p</name><operator pos:start="14:24" pos:end="14:24">+</operator><literal type="number" pos:start="14:25" pos:end="14:25">3</literal></expr>;</condition><incr pos:start="14:27" pos:end="14:29"><expr pos:start="14:27" pos:end="14:29"><name pos:start="14:27" pos:end="14:27">i</name><operator pos:start="14:28" pos:end="14:29">++</operator></expr></incr>)</control><block type="pseudo" pos:start="14:31" pos:end="14:38"><block_content pos:start="14:31" pos:end="14:38"><expr_stmt pos:start="14:31" pos:end="14:38"><expr pos:start="14:31" pos:end="14:37"><name pos:start="14:31" pos:end="14:31">t</name><operator pos:start="14:32" pos:end="14:33">+=</operator><name pos:start="14:34" pos:end="14:37"><name pos:start="14:34" pos:end="14:34">s</name><index pos:start="14:35" pos:end="14:37">[<expr pos:start="14:36" pos:end="14:36"><name pos:start="14:36" pos:end="14:36">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
        <if_stmt pos:start="15:9" pos:end="18:9"><if pos:start="15:9" pos:end="18:9">if<condition pos:start="15:11" pos:end="15:21">(<expr pos:start="15:12" pos:end="15:20"><name pos:start="15:12" pos:end="15:12">t</name><operator pos:start="15:13" pos:end="15:14">==</operator><name pos:start="15:15" pos:end="15:20"><name pos:start="15:15" pos:end="15:17">pre</name><index pos:start="15:18" pos:end="15:20">[<expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">1</literal></expr>]</index></name></expr>)</condition><block pos:start="15:22" pos:end="18:9">{<block_content pos:start="16:13" pos:end="17:21">
            <expr_stmt pos:start="16:13" pos:end="16:21"><expr pos:start="16:13" pos:end="16:20"><name pos:start="16:13" pos:end="16:15">ans</name><operator pos:start="16:16" pos:end="16:17">+=</operator><literal type="string" pos:start="16:18" pos:end="16:20">" "</literal></expr>;</expr_stmt>
            <continue pos:start="17:13" pos:end="17:21">continue;</continue>
        </block_content>}</block></if></if_stmt>
        <for pos:start="19:9" pos:end="19:40">for<control pos:start="19:12" pos:end="19:32">(<init pos:start="19:13" pos:end="19:22"><decl pos:start="19:13" pos:end="19:21"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:17">i</name><init pos:start="19:18" pos:end="19:21">=<expr pos:start="19:19" pos:end="19:21"><name pos:start="19:19" pos:end="19:19">p</name><operator pos:start="19:20" pos:end="19:20">+</operator><literal type="number" pos:start="19:21" pos:end="19:21">3</literal></expr></init></decl>;</init><condition pos:start="19:23" pos:end="19:28"><expr pos:start="19:23" pos:end="19:27"><name pos:start="19:23" pos:end="19:23">i</name><operator pos:start="19:24" pos:end="19:24">&lt;</operator><name pos:start="19:25" pos:end="19:25">p</name><operator pos:start="19:26" pos:end="19:26">+</operator><literal type="number" pos:start="19:27" pos:end="19:27">8</literal></expr>;</condition><incr pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:29">i</name><operator pos:start="19:30" pos:end="19:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:33" pos:end="19:40"><block_content pos:start="19:33" pos:end="19:40"><expr_stmt pos:start="19:33" pos:end="19:40"><expr pos:start="19:33" pos:end="19:39"><name pos:start="19:33" pos:end="19:33">n</name><operator pos:start="19:34" pos:end="19:35">+=</operator><name pos:start="19:36" pos:end="19:39"><name pos:start="19:36" pos:end="19:36">s</name><index pos:start="19:37" pos:end="19:39">[<expr pos:start="19:38" pos:end="19:38"><name pos:start="19:38" pos:end="19:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
        <if_stmt pos:start="20:9" pos:end="28:9"><if pos:start="20:9" pos:end="28:9">if<condition pos:start="20:11" pos:end="20:21">(<expr pos:start="20:12" pos:end="20:20"><name pos:start="20:12" pos:end="20:12">t</name><operator pos:start="20:13" pos:end="20:14">==</operator><name pos:start="20:15" pos:end="20:20"><name pos:start="20:15" pos:end="20:17">pre</name><index pos:start="20:18" pos:end="20:20">[<expr pos:start="20:19" pos:end="20:19"><literal type="number" pos:start="20:19" pos:end="20:19">0</literal></expr>]</index></name></expr>)</condition><block pos:start="20:22" pos:end="28:9">{<block_content pos:start="21:13" pos:end="27:35">
            <decl_stmt pos:start="21:13" pos:end="21:20"><decl pos:start="21:13" pos:end="21:19"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:17">a</name><init pos:start="21:18" pos:end="21:19">=<expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="22:13" pos:end="22:31"><if pos:start="22:13" pos:end="22:31">if<condition pos:start="22:15" pos:end="22:25">(<expr pos:start="22:16" pos:end="22:24"><name pos:start="22:16" pos:end="22:19"><name pos:start="22:16" pos:end="22:16">n</name><index pos:start="22:17" pos:end="22:19">[<expr pos:start="22:18" pos:end="22:18"><literal type="number" pos:start="22:18" pos:end="22:18">0</literal></expr>]</index></name><operator pos:start="22:20" pos:end="22:21">==</operator><literal type="char" pos:start="22:22" pos:end="22:24">'1'</literal></expr>)</condition><block type="pseudo" pos:start="22:26" pos:end="22:31"><block_content pos:start="22:26" pos:end="22:31"><expr_stmt pos:start="22:26" pos:end="22:31"><expr pos:start="22:26" pos:end="22:30"><name pos:start="22:26" pos:end="22:26">a</name><operator pos:start="22:27" pos:end="22:28">+=</operator><literal type="number" pos:start="22:29" pos:end="22:30">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="23:13" pos:end="23:30"><if pos:start="23:13" pos:end="23:30">if<condition pos:start="23:15" pos:end="23:25">(<expr pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:16">n</name><index pos:start="23:17" pos:end="23:19">[<expr pos:start="23:18" pos:end="23:18"><literal type="number" pos:start="23:18" pos:end="23:18">1</literal></expr>]</index></name><operator pos:start="23:20" pos:end="23:21">==</operator><literal type="char" pos:start="23:22" pos:end="23:24">'1'</literal></expr>)</condition><block type="pseudo" pos:start="23:26" pos:end="23:30"><block_content pos:start="23:26" pos:end="23:30"><expr_stmt pos:start="23:26" pos:end="23:30"><expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:26">a</name><operator pos:start="23:27" pos:end="23:28">+=</operator><literal type="number" pos:start="23:29" pos:end="23:29">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="24:13" pos:end="24:30"><if pos:start="24:13" pos:end="24:30">if<condition pos:start="24:15" pos:end="24:25">(<expr pos:start="24:16" pos:end="24:24"><name pos:start="24:16" pos:end="24:19"><name pos:start="24:16" pos:end="24:16">n</name><index pos:start="24:17" pos:end="24:19">[<expr pos:start="24:18" pos:end="24:18"><literal type="number" pos:start="24:18" pos:end="24:18">2</literal></expr>]</index></name><operator pos:start="24:20" pos:end="24:21">==</operator><literal type="char" pos:start="24:22" pos:end="24:24">'1'</literal></expr>)</condition><block type="pseudo" pos:start="24:26" pos:end="24:30"><block_content pos:start="24:26" pos:end="24:30"><expr_stmt pos:start="24:26" pos:end="24:30"><expr pos:start="24:26" pos:end="24:29"><name pos:start="24:26" pos:end="24:26">a</name><operator pos:start="24:27" pos:end="24:28">+=</operator><literal type="number" pos:start="24:29" pos:end="24:29">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="25:13" pos:end="25:30"><if pos:start="25:13" pos:end="25:30">if<condition pos:start="25:15" pos:end="25:25">(<expr pos:start="25:16" pos:end="25:24"><name pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:16">n</name><index pos:start="25:17" pos:end="25:19">[<expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">3</literal></expr>]</index></name><operator pos:start="25:20" pos:end="25:21">==</operator><literal type="char" pos:start="25:22" pos:end="25:24">'1'</literal></expr>)</condition><block type="pseudo" pos:start="25:26" pos:end="25:30"><block_content pos:start="25:26" pos:end="25:30"><expr_stmt pos:start="25:26" pos:end="25:30"><expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:26">a</name><operator pos:start="25:27" pos:end="25:28">+=</operator><literal type="number" pos:start="25:29" pos:end="25:29">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="26:13" pos:end="26:30"><if pos:start="26:13" pos:end="26:30">if<condition pos:start="26:15" pos:end="26:25">(<expr pos:start="26:16" pos:end="26:24"><name pos:start="26:16" pos:end="26:19"><name pos:start="26:16" pos:end="26:16">n</name><index pos:start="26:17" pos:end="26:19">[<expr pos:start="26:18" pos:end="26:18"><literal type="number" pos:start="26:18" pos:end="26:18">4</literal></expr>]</index></name><operator pos:start="26:20" pos:end="26:21">==</operator><literal type="char" pos:start="26:22" pos:end="26:24">'1'</literal></expr>)</condition><block type="pseudo" pos:start="26:26" pos:end="26:30"><block_content pos:start="26:26" pos:end="26:30"><expr_stmt pos:start="26:26" pos:end="26:30"><expr pos:start="26:26" pos:end="26:29"><name pos:start="26:26" pos:end="26:26">a</name><operator pos:start="26:27" pos:end="26:28">+=</operator><literal type="number" pos:start="26:29" pos:end="26:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="27:13" pos:end="27:35"><if pos:start="27:13" pos:end="27:35">if<condition pos:start="27:15" pos:end="27:20">(<expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:16">a</name><operator pos:start="27:17" pos:end="27:17">&gt;</operator><literal type="number" pos:start="27:18" pos:end="27:19">25</literal></expr>)</condition><block type="pseudo" pos:start="27:21" pos:end="27:35"><block_content pos:start="27:21" pos:end="27:35"><return pos:start="27:21" pos:end="27:35">return <expr pos:start="27:28" pos:end="27:34"><literal type="string" pos:start="27:28" pos:end="27:34">"Error"</literal></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>
<function pos:start="31:1" pos:end="38:1"><type pos:start="31:1" pos:end="31:3"><name pos:start="31:1" pos:end="31:3">int</name></type> <name pos:start="31:5" pos:end="31:8">main</name><parameter_list pos:start="31:9" pos:end="31:10">()</parameter_list><block pos:start="31:11" pos:end="38:1">{<block_content pos:start="32:5" pos:end="37:13">
    <expr_stmt pos:start="32:5" pos:end="32:40"><expr pos:start="32:5" pos:end="32:39"><call pos:start="32:5" pos:end="32:39"><name pos:start="32:5" pos:end="32:11">freopen</name><argument_list pos:start="32:12" pos:end="32:39">(<argument pos:start="32:13" pos:end="32:28"><expr pos:start="32:13" pos:end="32:28"><literal type="string" pos:start="32:13" pos:end="32:28">"information.in"</literal></expr></argument>,<argument pos:start="32:30" pos:end="32:32"><expr pos:start="32:30" pos:end="32:32"><literal type="string" pos:start="32:30" pos:end="32:32">"r"</literal></expr></argument>,<argument pos:start="32:34" pos:end="32:38"><expr pos:start="32:34" pos:end="32:38"><name pos:start="32:34" pos:end="32:38">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><call pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:11">freopen</name><argument_list pos:start="33:12" pos:end="33:41">(<argument pos:start="33:13" pos:end="33:29"><expr pos:start="33:13" pos:end="33:29"><literal type="string" pos:start="33:13" pos:end="33:29">"information.out"</literal></expr></argument>,<argument pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><literal type="string" pos:start="33:31" pos:end="33:33">"w"</literal></expr></argument>,<argument pos:start="33:35" pos:end="33:40"><expr pos:start="33:35" pos:end="33:40"><name pos:start="33:35" pos:end="33:40">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:8">cout</name><operator pos:start="35:9" pos:end="35:10">&lt;&lt;</operator><call pos:start="35:11" pos:end="35:22"><name pos:start="35:11" pos:end="35:14">char</name><argument_list pos:start="35:15" pos:end="35:22">(<argument pos:start="35:16" pos:end="35:21"><expr pos:start="35:16" pos:end="35:21"><literal type="char" pos:start="35:16" pos:end="35:18">'A'</literal><operator pos:start="35:19" pos:end="35:19">+</operator><literal type="number" pos:start="35:20" pos:end="35:21">25</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
