<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/756/756.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:18"><decl pos:start="3:1" pos:end="3:8"><type pos:start="3:1" pos:end="3:6"><name pos:start="3:1" pos:end="3:6">string</name></type> <name pos:start="3:8" pos:end="3:8">d</name></decl>,<decl pos:start="3:10" pos:end="3:17"><type ref="prev" pos:start="3:1" pos:end="3:6"/><name pos:start="3:10" pos:end="3:17"><name pos:start="3:10" pos:end="3:10">e</name><index pos:start="3:11" pos:end="3:17">[<expr pos:start="3:12" pos:end="3:16"><literal type="number" pos:start="3:12" pos:end="3:16">10005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="26:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="26:1">{<block_content pos:start="5:5" pos:end="25:13">
    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">a</name></decl>,<decl pos:start="5:11" pos:end="5:11"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:11" pos:end="5:11">c</name></decl>,<decl pos:start="5:13" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:13">f</name><init pos:start="5:14" pos:end="5:15">=<expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:11"><expr pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:7">cin</name><operator pos:start="6:8" pos:end="6:9">&gt;&gt;</operator><name pos:start="6:10" pos:end="6:10">a</name></expr>;</expr_stmt>
    <for pos:start="7:5" pos:end="24:5">for<control pos:start="7:8" pos:end="7:25">(<init pos:start="7:9" pos:end="7:16"><decl pos:start="7:9" pos:end="7:15"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">b</name><init pos:start="7:14" pos:end="7:15">=<expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">1</literal></expr></init></decl>;</init><condition pos:start="7:17" pos:end="7:21"><expr pos:start="7:17" pos:end="7:20"><name pos:start="7:17" pos:end="7:17">b</name><operator pos:start="7:18" pos:end="7:19">&lt;=</operator><name pos:start="7:20" pos:end="7:20">a</name></expr>;</condition><incr pos:start="7:22" pos:end="7:24"><expr pos:start="7:22" pos:end="7:24"><name pos:start="7:22" pos:end="7:22">b</name><operator pos:start="7:23" pos:end="7:24">++</operator></expr></incr>)</control><block pos:start="7:26" pos:end="24:5">{<block_content pos:start="8:9" pos:end="23:9">
        <expr_stmt pos:start="8:9" pos:end="8:15"><expr pos:start="8:9" pos:end="8:14"><name pos:start="8:9" pos:end="8:11">cin</name><operator pos:start="8:12" pos:end="8:13">&gt;&gt;</operator><name pos:start="8:14" pos:end="8:14">c</name></expr>;</expr_stmt>
        <if_stmt pos:start="9:9" pos:end="23:9"><if pos:start="9:9" pos:end="13:9">if<condition pos:start="9:11" pos:end="9:16">(<expr pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:12">c</name><operator pos:start="9:13" pos:end="9:14">==</operator><literal type="number" pos:start="9:15" pos:end="9:15">1</literal></expr>)</condition><block pos:start="9:17" pos:end="13:9">{<block_content pos:start="10:13" pos:end="12:19">
            <expr_stmt pos:start="10:13" pos:end="10:19"><expr pos:start="10:13" pos:end="10:18"><name pos:start="10:13" pos:end="10:15">cin</name><operator pos:start="10:16" pos:end="10:17">&gt;&gt;</operator><name pos:start="10:18" pos:end="10:18">d</name></expr>;</expr_stmt>
            <expr_stmt pos:start="11:13" pos:end="11:16"><expr pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:13">f</name><operator pos:start="11:14" pos:end="11:15">++</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="12:13" pos:end="12:19"><expr pos:start="12:13" pos:end="12:18"><name pos:start="12:13" pos:end="12:13">d</name><operator pos:start="12:14" pos:end="12:14">=</operator><name pos:start="12:15" pos:end="12:18"><name pos:start="12:15" pos:end="12:15">e</name><index pos:start="12:16" pos:end="12:18">[<expr pos:start="12:17" pos:end="12:17"><name pos:start="12:17" pos:end="12:17">f</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="13:10" pos:end="23:9">else if<condition pos:start="13:17" pos:end="13:22">(<expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:18">c</name><operator pos:start="13:19" pos:end="13:20">==</operator><literal type="number" pos:start="13:21" pos:end="13:21">2</literal></expr>)</condition><block pos:start="13:23" pos:end="23:9">{<block_content pos:start="14:12" pos:end="22:12">
           <if_stmt pos:start="14:12" pos:end="22:12"><if pos:start="14:12" pos:end="20:12">if<condition pos:start="14:14" pos:end="14:16">(<expr pos:start="14:15" pos:end="14:15"><name pos:start="14:15" pos:end="14:15">f</name></expr>)</condition><block pos:start="14:17" pos:end="20:12">{<block_content pos:start="15:15" pos:end="19:18">
              <expr_stmt pos:start="15:15" pos:end="15:31"><expr pos:start="15:15" pos:end="15:30"><name pos:start="15:15" pos:end="15:18">cout</name><operator pos:start="15:19" pos:end="15:20">&lt;&lt;</operator><name pos:start="15:21" pos:end="15:24"><name pos:start="15:21" pos:end="15:21">e</name><index pos:start="15:22" pos:end="15:24">[<expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">1</literal></expr>]</index></name><operator pos:start="15:25" pos:end="15:26">&lt;&lt;</operator><name pos:start="15:27" pos:end="15:30">endl</name></expr>;</expr_stmt>
              <for pos:start="16:15" pos:end="18:15">for<control pos:start="16:18" pos:end="16:35">(<init pos:start="16:19" pos:end="16:26"><decl pos:start="16:19" pos:end="16:25"><type pos:start="16:19" pos:end="16:21"><name pos:start="16:19" pos:end="16:21">int</name></type> <name pos:start="16:23" pos:end="16:23">g</name><init pos:start="16:24" pos:end="16:25">=<expr pos:start="16:25" pos:end="16:25"><literal type="number" pos:start="16:25" pos:end="16:25">2</literal></expr></init></decl>;</init><condition pos:start="16:27" pos:end="16:31"><expr pos:start="16:27" pos:end="16:30"><name pos:start="16:27" pos:end="16:27">g</name><operator pos:start="16:28" pos:end="16:29">&lt;=</operator><name pos:start="16:30" pos:end="16:30">f</name></expr>;</condition><incr pos:start="16:32" pos:end="16:34"><expr pos:start="16:32" pos:end="16:34"><name pos:start="16:32" pos:end="16:32">g</name><operator pos:start="16:33" pos:end="16:34">++</operator></expr></incr>)</control><block pos:start="16:36" pos:end="18:15">{<block_content pos:start="17:19" pos:end="17:30">
                  <expr_stmt pos:start="17:19" pos:end="17:30"><expr pos:start="17:19" pos:end="17:29"><name pos:start="17:19" pos:end="17:24"><name pos:start="17:19" pos:end="17:19">e</name><index pos:start="17:20" pos:end="17:24">[<expr pos:start="17:21" pos:end="17:23"><name pos:start="17:21" pos:end="17:21">g</name><operator pos:start="17:22" pos:end="17:22">-</operator><literal type="number" pos:start="17:23" pos:end="17:23">1</literal></expr>]</index></name><operator pos:start="17:25" pos:end="17:25">=</operator><name pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:26">e</name><index pos:start="17:27" pos:end="17:29">[<expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">g</name></expr>]</index></name></expr>;</expr_stmt>
              </block_content>}</block></for>
              <expr_stmt pos:start="19:15" pos:end="19:18"><expr pos:start="19:15" pos:end="19:17"><name pos:start="19:15" pos:end="19:15">f</name><operator pos:start="19:16" pos:end="19:17">--</operator></expr>;</expr_stmt>
           </block_content>}</block></if><else pos:start="20:13" pos:end="22:12">else<block pos:start="20:17" pos:end="22:12">{<block_content pos:start="21:16" pos:end="21:29">
               <expr_stmt pos:start="21:16" pos:end="21:29"><expr pos:start="21:16" pos:end="21:28"><name pos:start="21:16" pos:end="21:19">cout</name><operator pos:start="21:20" pos:end="21:21">&lt;&lt;</operator><literal type="number" pos:start="21:22" pos:end="21:22">0</literal><operator pos:start="21:23" pos:end="21:24">&lt;&lt;</operator><name pos:start="21:25" pos:end="21:28">endl</name></expr>;</expr_stmt>
           </block_content>}</block></else></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="25:5" pos:end="25:13">return <expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
