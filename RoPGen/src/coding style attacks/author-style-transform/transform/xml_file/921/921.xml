<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/921/921.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:16">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:16">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:15">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive><cpp:file pos:start="5:9" pos:end="5:15">&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include pos:start="6:1" pos:end="6:17">#<cpp:directive pos:start="6:2" pos:end="6:8">include</cpp:directive><cpp:file pos:start="6:9" pos:end="6:17">&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include pos:start="7:1" pos:end="7:13">#<cpp:directive pos:start="7:2" pos:end="7:8">include</cpp:directive><cpp:file pos:start="7:9" pos:end="7:13">&lt;map&gt;</cpp:file></cpp:include>
<cpp:include pos:start="8:1" pos:end="8:16">#<cpp:directive pos:start="8:2" pos:end="8:8">include</cpp:directive><cpp:file pos:start="8:9" pos:end="8:16">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:define pos:start="9:1" pos:end="9:29">#<cpp:directive pos:start="9:2" pos:end="9:7">define</cpp:directive> <cpp:macro pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">bug</name></cpp:macro> <cpp:value pos:start="9:13" pos:end="9:29">cout&lt;&lt;"bug"&lt;&lt;endl</cpp:value></cpp:define>
<cpp:define pos:start="10:1" pos:end="10:20">#<cpp:directive pos:start="10:2" pos:end="10:7">define</cpp:directive> <cpp:macro pos:start="10:9" pos:end="10:10"><name pos:start="10:9" pos:end="10:10">ll</name></cpp:macro> <cpp:value pos:start="10:12" pos:end="10:20">long long</cpp:value></cpp:define>
<cpp:define pos:start="11:1" pos:end="11:22">#<cpp:directive pos:start="11:2" pos:end="11:7">define</cpp:directive> <cpp:macro pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">inf</name></cpp:macro> <cpp:value pos:start="11:13" pos:end="11:22">0x3f3f3f3f</cpp:value></cpp:define>
<cpp:define pos:start="12:1" pos:end="12:22">#<cpp:directive pos:start="12:2" pos:end="12:7">define</cpp:directive> <cpp:macro pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">MOD</name></cpp:macro> <cpp:value pos:start="12:13" pos:end="12:22">1000000007</cpp:value></cpp:define>
<using pos:start="13:1" pos:end="13:20">using <namespace pos:start="13:7" pos:end="13:20">namespace <name pos:start="13:17" pos:end="13:19">std</name>;</namespace></using>
<function pos:start="14:1" pos:end="18:1"><type pos:start="14:1" pos:end="14:10"><specifier pos:start="14:1" pos:end="14:6">inline</specifier> <name pos:start="14:8" pos:end="14:10">int</name></type> <name pos:start="14:12" pos:end="14:15">read</name><parameter_list pos:start="14:16" pos:end="14:17">()</parameter_list><block pos:start="14:18" pos:end="18:1">{<block_content pos:start="14:21" pos:end="17:15">  <decl_stmt pos:start="14:21" pos:end="14:32"><decl pos:start="14:21" pos:end="14:27"><type pos:start="14:21" pos:end="14:23"><name pos:start="14:21" pos:end="14:23">int</name></type> <name pos:start="14:25" pos:end="14:25">x</name><init pos:start="14:26" pos:end="14:27">=<expr pos:start="14:27" pos:end="14:27"><literal type="number" pos:start="14:27" pos:end="14:27">0</literal></expr></init></decl>,<decl pos:start="14:29" pos:end="14:31"><type ref="prev" pos:start="14:21" pos:end="14:23"/><name pos:start="14:29" pos:end="14:29">f</name><init pos:start="14:30" pos:end="14:31">=<expr pos:start="14:31" pos:end="14:31"><literal type="number" pos:start="14:31" pos:end="14:31">1</literal></expr></init></decl>;</decl_stmt><decl_stmt pos:start="14:33" pos:end="14:50"><decl pos:start="14:33" pos:end="14:49"><type pos:start="14:33" pos:end="14:36"><name pos:start="14:33" pos:end="14:36">char</name></type> <name pos:start="14:38" pos:end="14:39">ch</name><init pos:start="14:40" pos:end="14:49">=<expr pos:start="14:41" pos:end="14:49"><call pos:start="14:41" pos:end="14:49"><name pos:start="14:41" pos:end="14:47">getchar</name><argument_list pos:start="14:48" pos:end="14:49">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <while pos:start="15:5" pos:end="15:59">while <condition pos:start="15:11" pos:end="15:26">(<expr pos:start="15:12" pos:end="15:25"><name pos:start="15:12" pos:end="15:22"><name pos:start="15:12" pos:end="15:13">ch</name><argument_list type="generic" pos:start="15:14" pos:end="15:22">&lt;<argument pos:start="15:15" pos:end="15:21"><expr pos:start="15:15" pos:end="15:21"><literal type="char" pos:start="15:15" pos:end="15:17">'0'</literal><operator pos:start="15:18" pos:end="15:19">||</operator><name pos:start="15:20" pos:end="15:21">ch</name></expr></argument>&gt;</argument_list></name><literal type="char" pos:start="15:23" pos:end="15:25">'9'</literal></expr>)</condition><block pos:start="15:27" pos:end="15:59">{<block_content pos:start="15:28" pos:end="15:58"><if_stmt pos:start="15:28" pos:end="15:45"><if pos:start="15:28" pos:end="15:45">if <condition pos:start="15:31" pos:end="15:39">(<expr pos:start="15:32" pos:end="15:38"><name pos:start="15:32" pos:end="15:33">ch</name><operator pos:start="15:34" pos:end="15:35">==</operator><literal type="char" pos:start="15:36" pos:end="15:38">'-'</literal></expr>)</condition><block type="pseudo" pos:start="15:41" pos:end="15:45"><block_content pos:start="15:41" pos:end="15:45"> <expr_stmt pos:start="15:41" pos:end="15:45"><expr pos:start="15:41" pos:end="15:44"><name pos:start="15:41" pos:end="15:41">f</name><operator pos:start="15:42" pos:end="15:42">=</operator><operator pos:start="15:43" pos:end="15:43">-</operator><literal type="number" pos:start="15:44" pos:end="15:44">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt><expr_stmt pos:start="15:46" pos:end="15:58"><expr pos:start="15:46" pos:end="15:57"><name pos:start="15:46" pos:end="15:47">ch</name><operator pos:start="15:48" pos:end="15:48">=</operator><call pos:start="15:49" pos:end="15:57"><name pos:start="15:49" pos:end="15:55">getchar</name><argument_list pos:start="15:56" pos:end="15:57">()</argument_list></call></expr>;</expr_stmt></block_content>}</block></while>
    <while pos:start="16:5" pos:end="16:56">while <condition pos:start="16:11" pos:end="16:28">(<expr pos:start="16:12" pos:end="16:27"><name pos:start="16:12" pos:end="16:13">ch</name><operator pos:start="16:14" pos:end="16:15">&gt;=</operator><literal type="char" pos:start="16:16" pos:end="16:18">'0'</literal><operator pos:start="16:19" pos:end="16:20">&amp;&amp;</operator><name pos:start="16:21" pos:end="16:22">ch</name><operator pos:start="16:23" pos:end="16:24">&lt;=</operator><literal type="char" pos:start="16:25" pos:end="16:27">'9'</literal></expr>)</condition><block pos:start="16:29" pos:end="16:56">{<block_content pos:start="16:30" pos:end="16:55"><expr_stmt pos:start="16:30" pos:end="16:42"><expr pos:start="16:30" pos:end="16:41"><name pos:start="16:30" pos:end="16:30">x</name><operator pos:start="16:31" pos:end="16:31">=</operator><name pos:start="16:32" pos:end="16:32">x</name><operator pos:start="16:33" pos:end="16:33">*</operator><literal type="number" pos:start="16:34" pos:end="16:36">10</literal><operator pos:start="16:36" pos:end="16:36">+</operator><name pos:start="16:37" pos:end="16:38">ch</name><operator pos:start="16:39" pos:end="16:39">-</operator><literal type="number" pos:start="16:40" pos:end="16:41">48</literal></expr>;</expr_stmt><expr_stmt pos:start="16:43" pos:end="16:55"><expr pos:start="16:43" pos:end="16:54"><name pos:start="16:43" pos:end="16:44">ch</name><operator pos:start="16:45" pos:end="16:45">=</operator><call pos:start="16:46" pos:end="16:54"><name pos:start="16:46" pos:end="16:52">getchar</name><argument_list pos:start="16:53" pos:end="16:54">()</argument_list></call></expr>;</expr_stmt></block_content>}</block></while>
    <return pos:start="17:5" pos:end="17:15">return <expr pos:start="17:12" pos:end="17:14"><name pos:start="17:12" pos:end="17:12">x</name><operator pos:start="17:13" pos:end="17:13">*</operator><name pos:start="17:14" pos:end="17:14">f</name></expr>;</return>
</block_content>}</block></function>
<decl_stmt pos:start="19:1" pos:end="19:8"><decl pos:start="19:1" pos:end="19:5"><type pos:start="19:1" pos:end="19:3"><name pos:start="19:1" pos:end="19:3">int</name></type> <name pos:start="19:5" pos:end="19:5">n</name></decl>,<decl pos:start="19:7" pos:end="19:7"><type ref="prev" pos:start="19:1" pos:end="19:3"/><name pos:start="19:7" pos:end="19:7">m</name></decl>;</decl_stmt>
<struct pos:start="20:1" pos:end="23:14">struct <name pos:start="20:8" pos:end="20:11">node</name><block pos:start="20:12" pos:end="23:1">{<public type="default" pos:start="21:5" pos:end="22:10">
    <decl_stmt pos:start="21:5" pos:end="21:10"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">u</name></decl>;</decl_stmt>
    <decl_stmt pos:start="22:5" pos:end="22:10"><decl pos:start="22:5" pos:end="22:9"><type pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></type> <name pos:start="22:9" pos:end="22:9">v</name></decl>;</decl_stmt>
</public>}</block><decl pos:start="23:2" pos:end="23:13"><name pos:start="23:2" pos:end="23:13"><name pos:start="23:2" pos:end="23:5">zhan</name><index pos:start="23:6" pos:end="23:13">[<expr pos:start="23:7" pos:end="23:12"><literal type="number" pos:start="23:7" pos:end="23:12">100000</literal></expr>]</index></name></decl>;</struct>
<decl_stmt pos:start="24:1" pos:end="24:24"><decl pos:start="24:1" pos:end="24:23"><type pos:start="24:1" pos:end="24:11"><name pos:start="24:1" pos:end="24:11"><name pos:start="24:1" pos:end="24:6">vector</name><argument_list type="generic" pos:start="24:7" pos:end="24:11">&lt;<argument pos:start="24:8" pos:end="24:10"><expr pos:start="24:8" pos:end="24:10"><name pos:start="24:8" pos:end="24:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="24:13" pos:end="24:23"><name pos:start="24:13" pos:end="24:15">ver</name><index pos:start="24:16" pos:end="24:23">[<expr pos:start="24:17" pos:end="24:22"><literal type="number" pos:start="24:17" pos:end="24:22">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="25:1" pos:end="25:25"><decl pos:start="25:1" pos:end="25:24"><type pos:start="25:1" pos:end="25:11"><name pos:start="25:1" pos:end="25:11"><name pos:start="25:1" pos:end="25:6">vector</name><argument_list type="generic" pos:start="25:7" pos:end="25:11">&lt;<argument pos:start="25:8" pos:end="25:10"><expr pos:start="25:8" pos:end="25:10"><name pos:start="25:8" pos:end="25:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:16">ver1</name><index pos:start="25:17" pos:end="25:24">[<expr pos:start="25:18" pos:end="25:23"><literal type="number" pos:start="25:18" pos:end="25:23">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="26:1" pos:end="26:28"><decl pos:start="26:1" pos:end="26:15"><type pos:start="26:1" pos:end="26:3"><name pos:start="26:1" pos:end="26:3">int</name></type> <name pos:start="26:5" pos:end="26:15"><name pos:start="26:5" pos:end="26:7">dfn</name><index pos:start="26:8" pos:end="26:15">[<expr pos:start="26:9" pos:end="26:14"><literal type="number" pos:start="26:9" pos:end="26:14">100000</literal></expr>]</index></name></decl>,<decl pos:start="26:17" pos:end="26:27"><type ref="prev" pos:start="26:1" pos:end="26:3"/><name pos:start="26:17" pos:end="26:27"><name pos:start="26:17" pos:end="26:19">low</name><index pos:start="26:20" pos:end="26:27">[<expr pos:start="26:21" pos:end="26:26"><literal type="number" pos:start="26:21" pos:end="26:26">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="27:1" pos:end="27:10"><decl pos:start="27:1" pos:end="27:9"><type pos:start="27:1" pos:end="27:3"><name pos:start="27:1" pos:end="27:3">int</name></type> <name pos:start="27:5" pos:end="27:7">tot</name><init pos:start="27:8" pos:end="27:9">=<expr pos:start="27:9" pos:end="27:9"><literal type="number" pos:start="27:9" pos:end="27:9">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="28:1" pos:end="28:16"><decl pos:start="28:1" pos:end="28:15"><type pos:start="28:1" pos:end="28:3"><name pos:start="28:1" pos:end="28:3">int</name></type> <name pos:start="28:5" pos:end="28:15"><name pos:start="28:5" pos:end="28:8">flag</name><index pos:start="28:9" pos:end="28:15">[<expr pos:start="28:10" pos:end="28:14"><literal type="number" pos:start="28:10" pos:end="28:14">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="29:1" pos:end="29:18"><decl pos:start="29:1" pos:end="29:10"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:8">ans1</name><init pos:start="29:9" pos:end="29:10">=<expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">0</literal></expr></init></decl>,<decl pos:start="29:12" pos:end="29:17"><type ref="prev" pos:start="29:1" pos:end="29:3"/><name pos:start="29:12" pos:end="29:15">ans2</name><init pos:start="29:16" pos:end="29:17">=<expr pos:start="29:17" pos:end="29:17"><literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="30:1" pos:end="30:19"><decl pos:start="30:1" pos:end="30:18"><type pos:start="30:1" pos:end="30:3"><name pos:start="30:1" pos:end="30:3">int</name></type> <name pos:start="30:5" pos:end="30:18"><name pos:start="30:5" pos:end="30:11">sumbian</name><index pos:start="30:12" pos:end="30:18">[<expr pos:start="30:13" pos:end="30:17"><literal type="number" pos:start="30:13" pos:end="30:17">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="31:1" pos:end="31:10"><decl pos:start="31:1" pos:end="31:9"><type pos:start="31:1" pos:end="31:3"><name pos:start="31:1" pos:end="31:3">int</name></type> <name pos:start="31:5" pos:end="31:7">top</name><init pos:start="31:8" pos:end="31:9">=<expr pos:start="31:9" pos:end="31:9"><literal type="number" pos:start="31:9" pos:end="31:9">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="32:1" pos:end="32:10"><decl pos:start="32:1" pos:end="32:9"><type pos:start="32:1" pos:end="32:3"><name pos:start="32:1" pos:end="32:3">int</name></type> <name pos:start="32:5" pos:end="32:7">cnt</name><init pos:start="32:8" pos:end="32:9">=<expr pos:start="32:9" pos:end="32:9"><literal type="number" pos:start="32:9" pos:end="32:9">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="33:1" pos:end="69:1"><type pos:start="33:1" pos:end="33:4"><name pos:start="33:1" pos:end="33:4">void</name></type> <name pos:start="33:6" pos:end="33:12">tarjan1</name><parameter_list pos:start="33:13" pos:end="33:30">(<parameter pos:start="33:14" pos:end="33:18"><decl pos:start="33:14" pos:end="33:18"><type pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:16">int</name></type> <name pos:start="33:18" pos:end="33:18">u</name></decl></parameter>,<parameter pos:start="33:20" pos:end="33:29"><decl pos:start="33:20" pos:end="33:29"><type pos:start="33:20" pos:end="33:29"><name pos:start="33:20" pos:end="33:22">int</name></type> <name pos:start="33:24" pos:end="33:29">father</name></decl></parameter>)</parameter_list><block pos:start="33:31" pos:end="69:1">{<block_content pos:start="34:5" pos:end="68:5">
    <expr_stmt pos:start="34:5" pos:end="34:26"><expr pos:start="34:5" pos:end="34:14"><name pos:start="34:5" pos:end="34:10"><name pos:start="34:5" pos:end="34:7">dfn</name><index pos:start="34:8" pos:end="34:10">[<expr pos:start="34:9" pos:end="34:9"><name pos:start="34:9" pos:end="34:9">u</name></expr>]</index></name><operator pos:start="34:11" pos:end="34:11">=</operator><name pos:start="34:12" pos:end="34:14">tot</name></expr><operator pos:start="34:15" pos:end="34:15">,</operator><expr pos:start="34:16" pos:end="34:25"><name pos:start="34:16" pos:end="34:21"><name pos:start="34:16" pos:end="34:18">low</name><index pos:start="34:19" pos:end="34:21">[<expr pos:start="34:20" pos:end="34:20"><name pos:start="34:20" pos:end="34:20">u</name></expr>]</index></name><operator pos:start="34:22" pos:end="34:22">=</operator><name pos:start="34:23" pos:end="34:25">tot</name></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:10"><expr pos:start="35:5" pos:end="35:9"><name pos:start="35:5" pos:end="35:7">tot</name><operator pos:start="35:8" pos:end="35:9">++</operator></expr>;</expr_stmt>
    <for pos:start="36:5" pos:end="68:5">for<control pos:start="36:8" pos:end="36:36">(<init pos:start="36:9" pos:end="36:16"><decl pos:start="36:9" pos:end="36:15"><type pos:start="36:9" pos:end="36:11"><name pos:start="36:9" pos:end="36:11">int</name></type> <name pos:start="36:13" pos:end="36:13">i</name><init pos:start="36:14" pos:end="36:15">=<expr pos:start="36:15" pos:end="36:15"><literal type="number" pos:start="36:15" pos:end="36:15">0</literal></expr></init></decl>;</init><condition pos:start="36:17" pos:end="36:32"><expr pos:start="36:17" pos:end="36:31"><name pos:start="36:17" pos:end="36:17">i</name><operator pos:start="36:18" pos:end="36:18">&lt;</operator><name pos:start="36:19" pos:end="36:24"><name pos:start="36:19" pos:end="36:21">ver</name><index pos:start="36:22" pos:end="36:24">[<expr pos:start="36:23" pos:end="36:23"><name pos:start="36:23" pos:end="36:23">u</name></expr>]</index></name><operator pos:start="36:25" pos:end="36:25">.</operator><call pos:start="36:26" pos:end="36:31"><name pos:start="36:26" pos:end="36:29">size</name><argument_list pos:start="36:30" pos:end="36:31">()</argument_list></call></expr>;</condition><incr pos:start="36:33" pos:end="36:35"><expr pos:start="36:33" pos:end="36:35"><name pos:start="36:33" pos:end="36:33">i</name><operator pos:start="36:34" pos:end="36:35">++</operator></expr></incr>)</control><block pos:start="36:37" pos:end="68:5">{<block_content pos:start="37:9" pos:end="67:9">
        <decl_stmt pos:start="37:9" pos:end="37:24"><decl pos:start="37:9" pos:end="37:23"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:13">v</name><init pos:start="37:14" pos:end="37:23">=<expr pos:start="37:15" pos:end="37:23"><name pos:start="37:15" pos:end="37:23"><name pos:start="37:15" pos:end="37:17">ver</name><index pos:start="37:18" pos:end="37:20">[<expr pos:start="37:19" pos:end="37:19"><name pos:start="37:19" pos:end="37:19">u</name></expr>]</index><index pos:start="37:21" pos:end="37:23">[<expr pos:start="37:22" pos:end="37:22"><name pos:start="37:22" pos:end="37:22">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="38:9" pos:end="40:9"><if pos:start="38:9" pos:end="40:9">if<condition pos:start="38:11" pos:end="38:21">(<expr pos:start="38:12" pos:end="38:20"><name pos:start="38:12" pos:end="38:12">v</name><operator pos:start="38:13" pos:end="38:14">==</operator><name pos:start="38:15" pos:end="38:20">father</name></expr>)</condition><block pos:start="38:22" pos:end="40:9">{<block_content pos:start="39:13" pos:end="39:21">
            <continue pos:start="39:13" pos:end="39:21">continue;</continue>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:12">zhan</name><index pos:start="41:13" pos:end="41:17">[<expr pos:start="41:14" pos:end="41:16"><name pos:start="41:14" pos:end="41:16">top</name></expr>]</index></name><operator pos:start="41:18" pos:end="41:18">.</operator><name pos:start="41:19" pos:end="41:19">u</name><operator pos:start="41:20" pos:end="41:20">=</operator><name pos:start="41:21" pos:end="41:21">u</name></expr>;</expr_stmt>
        <expr_stmt pos:start="42:9" pos:end="42:22"><expr pos:start="42:9" pos:end="42:21"><name pos:start="42:9" pos:end="42:17"><name pos:start="42:9" pos:end="42:12">zhan</name><index pos:start="42:13" pos:end="42:17">[<expr pos:start="42:14" pos:end="42:16"><name pos:start="42:14" pos:end="42:16">top</name></expr>]</index></name><operator pos:start="42:18" pos:end="42:18">.</operator><name pos:start="42:19" pos:end="42:19">v</name><operator pos:start="42:20" pos:end="42:20">=</operator><name pos:start="42:21" pos:end="42:21">v</name></expr>;</expr_stmt>
        <expr_stmt pos:start="43:9" pos:end="43:14"><expr pos:start="43:9" pos:end="43:13"><name pos:start="43:9" pos:end="43:11">top</name><operator pos:start="43:12" pos:end="43:13">++</operator></expr>;</expr_stmt>
        <if_stmt pos:start="44:9" pos:end="67:9"><if pos:start="44:9" pos:end="64:9">if<condition pos:start="44:11" pos:end="44:21">(<expr pos:start="44:12" pos:end="44:20"><name pos:start="44:12" pos:end="44:17"><name pos:start="44:12" pos:end="44:14">dfn</name><index pos:start="44:15" pos:end="44:17">[<expr pos:start="44:16" pos:end="44:16"><name pos:start="44:16" pos:end="44:16">v</name></expr>]</index></name><operator pos:start="44:18" pos:end="44:19">==</operator><literal type="number" pos:start="44:20" pos:end="44:20">0</literal></expr>)</condition><block pos:start="44:22" pos:end="64:9">{<block_content pos:start="45:13" pos:end="63:13">
            <expr_stmt pos:start="45:13" pos:end="45:25"><expr pos:start="45:13" pos:end="45:24"><call pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:19">tarjan1</name><argument_list pos:start="45:20" pos:end="45:24">(<argument pos:start="45:21" pos:end="45:21"><expr pos:start="45:21" pos:end="45:21"><name pos:start="45:21" pos:end="45:21">v</name></expr></argument>,<argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><name pos:start="45:23" pos:end="45:23">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="46:13" pos:end="46:38"><expr pos:start="46:13" pos:end="46:37"><name pos:start="46:13" pos:end="46:18"><name pos:start="46:13" pos:end="46:15">low</name><index pos:start="46:16" pos:end="46:18">[<expr pos:start="46:17" pos:end="46:17"><name pos:start="46:17" pos:end="46:17">u</name></expr>]</index></name><operator pos:start="46:19" pos:end="46:19">=</operator><call pos:start="46:20" pos:end="46:37"><name pos:start="46:20" pos:end="46:22">min</name><argument_list pos:start="46:23" pos:end="46:37">(<argument pos:start="46:24" pos:end="46:29"><expr pos:start="46:24" pos:end="46:29"><name pos:start="46:24" pos:end="46:29"><name pos:start="46:24" pos:end="46:26">low</name><index pos:start="46:27" pos:end="46:29">[<expr pos:start="46:28" pos:end="46:28"><name pos:start="46:28" pos:end="46:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="46:31" pos:end="46:36"><expr pos:start="46:31" pos:end="46:36"><name pos:start="46:31" pos:end="46:36"><name pos:start="46:31" pos:end="46:33">low</name><index pos:start="46:34" pos:end="46:36">[<expr pos:start="46:35" pos:end="46:35"><name pos:start="46:35" pos:end="46:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="47:13" pos:end="49:13"><if pos:start="47:13" pos:end="49:13">if<condition pos:start="47:15" pos:end="47:29">(<expr pos:start="47:16" pos:end="47:28"><name pos:start="47:16" pos:end="47:21"><name pos:start="47:16" pos:end="47:18">low</name><index pos:start="47:19" pos:end="47:21">[<expr pos:start="47:20" pos:end="47:20"><name pos:start="47:20" pos:end="47:20">v</name></expr>]</index></name><operator pos:start="47:22" pos:end="47:22">&gt;</operator><name pos:start="47:23" pos:end="47:28"><name pos:start="47:23" pos:end="47:25">dfn</name><index pos:start="47:26" pos:end="47:28">[<expr pos:start="47:27" pos:end="47:27"><name pos:start="47:27" pos:end="47:27">u</name></expr>]</index></name></expr>)</condition><block pos:start="47:30" pos:end="49:13">{<block_content pos:start="48:17" pos:end="48:23">
                <expr_stmt pos:start="48:17" pos:end="48:23"><expr pos:start="48:17" pos:end="48:22"><name pos:start="48:17" pos:end="48:20">ans1</name><operator pos:start="48:21" pos:end="48:22">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="50:13" pos:end="63:13"><if pos:start="50:13" pos:end="63:13">if<condition pos:start="50:15" pos:end="50:30">(<expr pos:start="50:16" pos:end="50:29"><name pos:start="50:16" pos:end="50:21"><name pos:start="50:16" pos:end="50:18">low</name><index pos:start="50:19" pos:end="50:21">[<expr pos:start="50:20" pos:end="50:20"><name pos:start="50:20" pos:end="50:20">v</name></expr>]</index></name><operator pos:start="50:22" pos:end="50:23">&gt;=</operator><name pos:start="50:24" pos:end="50:29"><name pos:start="50:24" pos:end="50:26">dfn</name><index pos:start="50:27" pos:end="50:29">[<expr pos:start="50:28" pos:end="50:28"><name pos:start="50:28" pos:end="50:28">u</name></expr>]</index></name></expr>)</condition><block pos:start="50:31" pos:end="63:13">{<block_content pos:start="51:17" pos:end="62:17">
                <expr_stmt pos:start="51:17" pos:end="51:22"><expr pos:start="51:17" pos:end="51:21"><name pos:start="51:17" pos:end="51:19">cnt</name><operator pos:start="51:20" pos:end="51:21">++</operator></expr>;</expr_stmt>
                <while pos:start="52:17" pos:end="62:17">while<condition pos:start="52:22" pos:end="52:24">(<expr pos:start="52:23" pos:end="52:23"><literal type="number" pos:start="52:23" pos:end="52:23">1</literal></expr>)</condition><block pos:start="52:25" pos:end="62:17">{<block_content pos:start="53:21" pos:end="61:21">
                    <decl_stmt pos:start="53:21" pos:end="53:40"><decl pos:start="53:21" pos:end="53:39"><type pos:start="53:21" pos:end="53:23"><name pos:start="53:21" pos:end="53:23">int</name></type> <name pos:start="53:25" pos:end="53:25">x</name><init pos:start="53:26" pos:end="53:39">=<expr pos:start="53:27" pos:end="53:39"><name pos:start="53:27" pos:end="53:37"><name pos:start="53:27" pos:end="53:30">zhan</name><index pos:start="53:31" pos:end="53:37">[<expr pos:start="53:32" pos:end="53:36"><name pos:start="53:32" pos:end="53:34">top</name><operator pos:start="53:35" pos:end="53:35">-</operator><literal type="number" pos:start="53:36" pos:end="53:36">1</literal></expr>]</index></name><operator pos:start="53:38" pos:end="53:38">.</operator><name pos:start="53:39" pos:end="53:39">u</name></expr></init></decl>;</decl_stmt>
                    <decl_stmt pos:start="54:21" pos:end="54:40"><decl pos:start="54:21" pos:end="54:39"><type pos:start="54:21" pos:end="54:23"><name pos:start="54:21" pos:end="54:23">int</name></type> <name pos:start="54:25" pos:end="54:25">y</name><init pos:start="54:26" pos:end="54:39">=<expr pos:start="54:27" pos:end="54:39"><name pos:start="54:27" pos:end="54:37"><name pos:start="54:27" pos:end="54:30">zhan</name><index pos:start="54:31" pos:end="54:37">[<expr pos:start="54:32" pos:end="54:36"><name pos:start="54:32" pos:end="54:34">top</name><operator pos:start="54:35" pos:end="54:35">-</operator><literal type="number" pos:start="54:36" pos:end="54:36">1</literal></expr>]</index></name><operator pos:start="54:38" pos:end="54:38">.</operator><name pos:start="54:39" pos:end="54:39">v</name></expr></init></decl>;</decl_stmt>
                    <expr_stmt pos:start="55:21" pos:end="55:26"><expr pos:start="55:21" pos:end="55:25"><name pos:start="55:21" pos:end="55:23">top</name><operator pos:start="55:24" pos:end="55:25">--</operator></expr>;</expr_stmt>
                    <expr_stmt pos:start="56:21" pos:end="56:43"><expr pos:start="56:21" pos:end="56:42"><name pos:start="56:21" pos:end="56:29"><name pos:start="56:21" pos:end="56:24">ver1</name><index pos:start="56:25" pos:end="56:29">[<expr pos:start="56:26" pos:end="56:28"><name pos:start="56:26" pos:end="56:28">cnt</name></expr>]</index></name><operator pos:start="56:30" pos:end="56:30">.</operator><call pos:start="56:31" pos:end="56:42"><name pos:start="56:31" pos:end="56:39">push_back</name><argument_list pos:start="56:40" pos:end="56:42">(<argument pos:start="56:41" pos:end="56:41"><expr pos:start="56:41" pos:end="56:41"><name pos:start="56:41" pos:end="56:41">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="57:21" pos:end="57:43"><expr pos:start="57:21" pos:end="57:42"><name pos:start="57:21" pos:end="57:29"><name pos:start="57:21" pos:end="57:24">ver1</name><index pos:start="57:25" pos:end="57:29">[<expr pos:start="57:26" pos:end="57:28"><name pos:start="57:26" pos:end="57:28">cnt</name></expr>]</index></name><operator pos:start="57:30" pos:end="57:30">.</operator><call pos:start="57:31" pos:end="57:42"><name pos:start="57:31" pos:end="57:39">push_back</name><argument_list pos:start="57:40" pos:end="57:42">(<argument pos:start="57:41" pos:end="57:41"><expr pos:start="57:41" pos:end="57:41"><name pos:start="57:41" pos:end="57:41">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="58:21" pos:end="58:35"><expr pos:start="58:21" pos:end="58:34"><name pos:start="58:21" pos:end="58:32"><name pos:start="58:21" pos:end="58:27">sumbian</name><index pos:start="58:28" pos:end="58:32">[<expr pos:start="58:29" pos:end="58:31"><name pos:start="58:29" pos:end="58:31">cnt</name></expr>]</index></name><operator pos:start="58:33" pos:end="58:34">++</operator></expr>;</expr_stmt>
                    <if_stmt pos:start="59:21" pos:end="61:21"><if pos:start="59:21" pos:end="61:21">if<condition pos:start="59:23" pos:end="59:34">(<expr pos:start="59:24" pos:end="59:33"><name pos:start="59:24" pos:end="59:24">x</name><operator pos:start="59:25" pos:end="59:26">==</operator><name pos:start="59:27" pos:end="59:27">u</name><operator pos:start="59:28" pos:end="59:29">&amp;&amp;</operator><name pos:start="59:30" pos:end="59:30">y</name><operator pos:start="59:31" pos:end="59:32">==</operator><name pos:start="59:33" pos:end="59:33">v</name></expr>)</condition><block pos:start="59:35" pos:end="61:21">{<block_content pos:start="60:25" pos:end="60:30">
                        <break pos:start="60:25" pos:end="60:30">break;</break>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></while>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="65:9" pos:end="67:9">else if<condition pos:start="65:16" pos:end="65:26">(<expr pos:start="65:17" pos:end="65:25"><name pos:start="65:17" pos:end="65:17">v</name><operator pos:start="65:18" pos:end="65:19">!=</operator><name pos:start="65:20" pos:end="65:25">father</name></expr>)</condition><block pos:start="65:27" pos:end="67:9">{<block_content pos:start="66:13" pos:end="66:38">
            <expr_stmt pos:start="66:13" pos:end="66:38"><expr pos:start="66:13" pos:end="66:37"><name pos:start="66:13" pos:end="66:18"><name pos:start="66:13" pos:end="66:15">low</name><index pos:start="66:16" pos:end="66:18">[<expr pos:start="66:17" pos:end="66:17"><name pos:start="66:17" pos:end="66:17">u</name></expr>]</index></name><operator pos:start="66:19" pos:end="66:19">=</operator><call pos:start="66:20" pos:end="66:37"><name pos:start="66:20" pos:end="66:22">min</name><argument_list pos:start="66:23" pos:end="66:37">(<argument pos:start="66:24" pos:end="66:29"><expr pos:start="66:24" pos:end="66:29"><name pos:start="66:24" pos:end="66:29"><name pos:start="66:24" pos:end="66:26">low</name><index pos:start="66:27" pos:end="66:29">[<expr pos:start="66:28" pos:end="66:28"><name pos:start="66:28" pos:end="66:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="66:31" pos:end="66:36"><expr pos:start="66:31" pos:end="66:36"><name pos:start="66:31" pos:end="66:36"><name pos:start="66:31" pos:end="66:33">dfn</name><index pos:start="66:34" pos:end="66:36">[<expr pos:start="66:35" pos:end="66:35"><name pos:start="66:35" pos:end="66:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function> 
<function pos:start="70:1" pos:end="97:1"><type pos:start="70:1" pos:end="70:3"><name pos:start="70:1" pos:end="70:3">int</name></type> <name pos:start="70:5" pos:end="70:8">main</name><parameter_list pos:start="70:9" pos:end="70:10">()</parameter_list><block pos:start="70:11" pos:end="97:1">{<block_content pos:start="71:5" pos:end="96:13">
    <expr_stmt pos:start="71:5" pos:end="71:33"><expr pos:start="71:5" pos:end="71:32"><call pos:start="71:5" pos:end="71:32"><name pos:start="71:5" pos:end="71:11">freopen</name><argument_list pos:start="71:12" pos:end="71:32">(<argument pos:start="71:13" pos:end="71:21"><expr pos:start="71:13" pos:end="71:21"><literal type="string" pos:start="71:13" pos:end="71:21">"road.in"</literal></expr></argument>,<argument pos:start="71:23" pos:end="71:25"><expr pos:start="71:23" pos:end="71:25"><literal type="string" pos:start="71:23" pos:end="71:25">"r"</literal></expr></argument>,<argument pos:start="71:27" pos:end="71:31"><expr pos:start="71:27" pos:end="71:31"><name pos:start="71:27" pos:end="71:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="72:5" pos:end="72:35"><expr pos:start="72:5" pos:end="72:34"><call pos:start="72:5" pos:end="72:34"><name pos:start="72:5" pos:end="72:11">freopen</name><argument_list pos:start="72:12" pos:end="72:34">(<argument pos:start="72:13" pos:end="72:22"><expr pos:start="72:13" pos:end="72:22"><literal type="string" pos:start="72:13" pos:end="72:22">"road.out"</literal></expr></argument>,<argument pos:start="72:24" pos:end="72:26"><expr pos:start="72:24" pos:end="72:26"><literal type="string" pos:start="72:24" pos:end="72:26">"w"</literal></expr></argument>,<argument pos:start="72:28" pos:end="72:33"><expr pos:start="72:28" pos:end="72:33"><name pos:start="72:28" pos:end="72:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="73:5" pos:end="73:15"><expr pos:start="73:5" pos:end="73:14"><call pos:start="73:5" pos:end="73:14"><name pos:start="73:5" pos:end="73:11"><name pos:start="73:5" pos:end="73:7">cin</name><operator pos:start="73:8" pos:end="73:8">.</operator><name pos:start="73:9" pos:end="73:11">tie</name></name><argument_list pos:start="73:12" pos:end="73:14">(<argument pos:start="73:13" pos:end="73:13"><expr pos:start="73:13" pos:end="73:13"><literal type="number" pos:start="73:13" pos:end="73:13">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="74:5" pos:end="74:16"><expr pos:start="74:5" pos:end="74:15"><call pos:start="74:5" pos:end="74:15"><name pos:start="74:5" pos:end="74:12"><name pos:start="74:5" pos:end="74:8">cout</name><operator pos:start="74:9" pos:end="74:9">.</operator><name pos:start="74:10" pos:end="74:12">tie</name></name><argument_list pos:start="74:13" pos:end="74:15">(<argument pos:start="74:14" pos:end="74:14"><expr pos:start="74:14" pos:end="74:14"><literal type="number" pos:start="74:14" pos:end="74:14">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="75:5" pos:end="75:14"><expr pos:start="75:5" pos:end="75:13"><name pos:start="75:5" pos:end="75:7">cin</name><operator pos:start="75:8" pos:end="75:9">&gt;&gt;</operator><name pos:start="75:10" pos:end="75:10">n</name><operator pos:start="75:11" pos:end="75:12">&gt;&gt;</operator><name pos:start="75:13" pos:end="75:13">m</name></expr>;</expr_stmt>
    <for pos:start="76:5" pos:end="82:5">for<control pos:start="76:8" pos:end="76:25">(<init pos:start="76:9" pos:end="76:16"><decl pos:start="76:9" pos:end="76:15"><type pos:start="76:9" pos:end="76:11"><name pos:start="76:9" pos:end="76:11">int</name></type> <name pos:start="76:13" pos:end="76:13">i</name><init pos:start="76:14" pos:end="76:15">=<expr pos:start="76:15" pos:end="76:15"><literal type="number" pos:start="76:15" pos:end="76:15">1</literal></expr></init></decl>;</init><condition pos:start="76:17" pos:end="76:21"><expr pos:start="76:17" pos:end="76:20"><name pos:start="76:17" pos:end="76:17">i</name><operator pos:start="76:18" pos:end="76:19">&lt;=</operator><name pos:start="76:20" pos:end="76:20">m</name></expr>;</condition><incr pos:start="76:22" pos:end="76:24"><expr pos:start="76:22" pos:end="76:24"><name pos:start="76:22" pos:end="76:22">i</name><operator pos:start="76:23" pos:end="76:24">++</operator></expr></incr>)</control><block pos:start="76:26" pos:end="82:5">{<block_content pos:start="77:9" pos:end="81:28">
        <decl_stmt pos:start="77:9" pos:end="77:16"><decl pos:start="77:9" pos:end="77:13"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:13">x</name></decl>,<decl pos:start="77:15" pos:end="77:15"><type ref="prev" pos:start="77:9" pos:end="77:11"/><name pos:start="77:15" pos:end="77:15">y</name></decl>;</decl_stmt>
        <expr_stmt pos:start="78:9" pos:end="78:18"><expr pos:start="78:9" pos:end="78:17"><name pos:start="78:9" pos:end="78:11">cin</name><operator pos:start="78:12" pos:end="78:13">&gt;&gt;</operator><name pos:start="78:14" pos:end="78:14">x</name><operator pos:start="78:15" pos:end="78:16">&gt;&gt;</operator><name pos:start="78:17" pos:end="78:17">y</name></expr>;</expr_stmt>
        <expr_stmt pos:start="79:9" pos:end="79:16"><expr pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:9">x</name><operator pos:start="79:10" pos:end="79:11">++</operator></expr><operator pos:start="79:12" pos:end="79:12">,</operator><expr pos:start="79:13" pos:end="79:15"><name pos:start="79:13" pos:end="79:13">y</name><operator pos:start="79:14" pos:end="79:15">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="80:9" pos:end="80:28"><expr pos:start="80:9" pos:end="80:27"><name pos:start="80:9" pos:end="80:14"><name pos:start="80:9" pos:end="80:11">ver</name><index pos:start="80:12" pos:end="80:14">[<expr pos:start="80:13" pos:end="80:13"><name pos:start="80:13" pos:end="80:13">x</name></expr>]</index></name><operator pos:start="80:15" pos:end="80:15">.</operator><call pos:start="80:16" pos:end="80:27"><name pos:start="80:16" pos:end="80:24">push_back</name><argument_list pos:start="80:25" pos:end="80:27">(<argument pos:start="80:26" pos:end="80:26"><expr pos:start="80:26" pos:end="80:26"><name pos:start="80:26" pos:end="80:26">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:14"><name pos:start="81:9" pos:end="81:11">ver</name><index pos:start="81:12" pos:end="81:14">[<expr pos:start="81:13" pos:end="81:13"><name pos:start="81:13" pos:end="81:13">y</name></expr>]</index></name><operator pos:start="81:15" pos:end="81:15">.</operator><call pos:start="81:16" pos:end="81:27"><name pos:start="81:16" pos:end="81:24">push_back</name><argument_list pos:start="81:25" pos:end="81:27">(<argument pos:start="81:26" pos:end="81:26"><expr pos:start="81:26" pos:end="81:26"><name pos:start="81:26" pos:end="81:26">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="83:5" pos:end="87:5">for<control pos:start="83:8" pos:end="83:25">(<init pos:start="83:9" pos:end="83:16"><decl pos:start="83:9" pos:end="83:15"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:13">i</name><init pos:start="83:14" pos:end="83:15">=<expr pos:start="83:15" pos:end="83:15"><literal type="number" pos:start="83:15" pos:end="83:15">1</literal></expr></init></decl>;</init><condition pos:start="83:17" pos:end="83:21"><expr pos:start="83:17" pos:end="83:20"><name pos:start="83:17" pos:end="83:17">i</name><operator pos:start="83:18" pos:end="83:19">&lt;=</operator><name pos:start="83:20" pos:end="83:20">n</name></expr>;</condition><incr pos:start="83:22" pos:end="83:24"><expr pos:start="83:22" pos:end="83:24"><name pos:start="83:22" pos:end="83:22">i</name><operator pos:start="83:23" pos:end="83:24">++</operator></expr></incr>)</control><block pos:start="83:26" pos:end="87:5">{<block_content pos:start="84:9" pos:end="86:9">
        <if_stmt pos:start="84:9" pos:end="86:9"><if pos:start="84:9" pos:end="86:9">if<condition pos:start="84:11" pos:end="84:21">(<expr pos:start="84:12" pos:end="84:20"><name pos:start="84:12" pos:end="84:17"><name pos:start="84:12" pos:end="84:14">dfn</name><index pos:start="84:15" pos:end="84:17">[<expr pos:start="84:16" pos:end="84:16"><name pos:start="84:16" pos:end="84:16">i</name></expr>]</index></name><operator pos:start="84:18" pos:end="84:19">==</operator><literal type="number" pos:start="84:20" pos:end="84:20">0</literal></expr>)</condition><block pos:start="84:22" pos:end="86:9">{<block_content pos:start="85:13" pos:end="85:25">
            <expr_stmt pos:start="85:13" pos:end="85:25"><expr pos:start="85:13" pos:end="85:24"><call pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:19">tarjan1</name><argument_list pos:start="85:20" pos:end="85:24">(<argument pos:start="85:21" pos:end="85:21"><expr pos:start="85:21" pos:end="85:21"><name pos:start="85:21" pos:end="85:21">i</name></expr></argument>,<argument pos:start="85:23" pos:end="85:23"><expr pos:start="85:23" pos:end="85:23"><name pos:start="85:23" pos:end="85:23">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="88:5" pos:end="94:5">for<control pos:start="88:8" pos:end="88:27">(<init pos:start="88:9" pos:end="88:16"><decl pos:start="88:9" pos:end="88:15"><type pos:start="88:9" pos:end="88:11"><name pos:start="88:9" pos:end="88:11">int</name></type> <name pos:start="88:13" pos:end="88:13">i</name><init pos:start="88:14" pos:end="88:15">=<expr pos:start="88:15" pos:end="88:15"><literal type="number" pos:start="88:15" pos:end="88:15">1</literal></expr></init></decl>;</init><condition pos:start="88:17" pos:end="88:23"><expr pos:start="88:17" pos:end="88:22"><name pos:start="88:17" pos:end="88:17">i</name><operator pos:start="88:18" pos:end="88:19">&lt;=</operator><name pos:start="88:20" pos:end="88:22">cnt</name></expr>;</condition><incr pos:start="88:24" pos:end="88:26"><expr pos:start="88:24" pos:end="88:26"><name pos:start="88:24" pos:end="88:24">i</name><operator pos:start="88:25" pos:end="88:26">++</operator></expr></incr>)</control><block pos:start="88:28" pos:end="94:5">{<block_content pos:start="89:9" pos:end="93:9">
        <expr_stmt pos:start="89:9" pos:end="89:44"><expr pos:start="89:9" pos:end="89:43"><call pos:start="89:9" pos:end="89:43"><name pos:start="89:9" pos:end="89:12">sort</name><argument_list pos:start="89:13" pos:end="89:43">(<argument pos:start="89:14" pos:end="89:28"><expr pos:start="89:14" pos:end="89:28"><name pos:start="89:14" pos:end="89:20"><name pos:start="89:14" pos:end="89:17">ver1</name><index pos:start="89:18" pos:end="89:20">[<expr pos:start="89:19" pos:end="89:19"><name pos:start="89:19" pos:end="89:19">i</name></expr>]</index></name><operator pos:start="89:21" pos:end="89:21">.</operator><call pos:start="89:22" pos:end="89:28"><name pos:start="89:22" pos:end="89:26">begin</name><argument_list pos:start="89:27" pos:end="89:28">()</argument_list></call></expr></argument>,<argument pos:start="89:30" pos:end="89:42"><expr pos:start="89:30" pos:end="89:42"><name pos:start="89:30" pos:end="89:36"><name pos:start="89:30" pos:end="89:33">ver1</name><index pos:start="89:34" pos:end="89:36">[<expr pos:start="89:35" pos:end="89:35"><name pos:start="89:35" pos:end="89:35">i</name></expr>]</index></name><operator pos:start="89:37" pos:end="89:37">.</operator><call pos:start="89:38" pos:end="89:42"><name pos:start="89:38" pos:end="89:40">end</name><argument_list pos:start="89:41" pos:end="89:42">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="90:9" pos:end="90:75"><expr pos:start="90:9" pos:end="90:74"><name pos:start="90:9" pos:end="90:15"><name pos:start="90:9" pos:end="90:12">ver1</name><index pos:start="90:13" pos:end="90:15">[<expr pos:start="90:14" pos:end="90:14"><name pos:start="90:14" pos:end="90:14">i</name></expr>]</index></name><operator pos:start="90:16" pos:end="90:16">.</operator><call pos:start="90:17" pos:end="90:74"><name pos:start="90:17" pos:end="90:21">erase</name><argument_list pos:start="90:22" pos:end="90:74">(<argument pos:start="90:23" pos:end="90:59"><expr pos:start="90:23" pos:end="90:59"><call pos:start="90:23" pos:end="90:59"><name pos:start="90:23" pos:end="90:28">unique</name><argument_list pos:start="90:29" pos:end="90:59">(<argument pos:start="90:30" pos:end="90:44"><expr pos:start="90:30" pos:end="90:44"><name pos:start="90:30" pos:end="90:36"><name pos:start="90:30" pos:end="90:33">ver1</name><index pos:start="90:34" pos:end="90:36">[<expr pos:start="90:35" pos:end="90:35"><name pos:start="90:35" pos:end="90:35">i</name></expr>]</index></name><operator pos:start="90:37" pos:end="90:37">.</operator><call pos:start="90:38" pos:end="90:44"><name pos:start="90:38" pos:end="90:42">begin</name><argument_list pos:start="90:43" pos:end="90:44">()</argument_list></call></expr></argument>,<argument pos:start="90:46" pos:end="90:58"><expr pos:start="90:46" pos:end="90:58"><name pos:start="90:46" pos:end="90:52"><name pos:start="90:46" pos:end="90:49">ver1</name><index pos:start="90:50" pos:end="90:52">[<expr pos:start="90:51" pos:end="90:51"><name pos:start="90:51" pos:end="90:51">i</name></expr>]</index></name><operator pos:start="90:53" pos:end="90:53">.</operator><call pos:start="90:54" pos:end="90:58"><name pos:start="90:54" pos:end="90:56">end</name><argument_list pos:start="90:57" pos:end="90:58">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="90:61" pos:end="90:73"><expr pos:start="90:61" pos:end="90:73"><name pos:start="90:61" pos:end="90:67"><name pos:start="90:61" pos:end="90:64">ver1</name><index pos:start="90:65" pos:end="90:67">[<expr pos:start="90:66" pos:end="90:66"><name pos:start="90:66" pos:end="90:66">i</name></expr>]</index></name><operator pos:start="90:68" pos:end="90:68">.</operator><call pos:start="90:69" pos:end="90:73"><name pos:start="90:69" pos:end="90:71">end</name><argument_list pos:start="90:72" pos:end="90:73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="91:9" pos:end="93:9"><if pos:start="91:9" pos:end="93:9">if<condition pos:start="91:11" pos:end="91:37">(<expr pos:start="91:12" pos:end="91:36"><name pos:start="91:12" pos:end="91:18"><name pos:start="91:12" pos:end="91:15">ver1</name><index pos:start="91:16" pos:end="91:18">[<expr pos:start="91:17" pos:end="91:17"><name pos:start="91:17" pos:end="91:17">i</name></expr>]</index></name><operator pos:start="91:19" pos:end="91:19">.</operator><call pos:start="91:20" pos:end="91:25"><name pos:start="91:20" pos:end="91:23">size</name><argument_list pos:start="91:24" pos:end="91:25">()</argument_list></call><operator pos:start="91:26" pos:end="91:26">&lt;</operator><name pos:start="91:27" pos:end="91:36"><name pos:start="91:27" pos:end="91:33">sumbian</name><index pos:start="91:34" pos:end="91:36">[<expr pos:start="91:35" pos:end="91:35"><name pos:start="91:35" pos:end="91:35">i</name></expr>]</index></name></expr>)</condition><block pos:start="91:38" pos:end="93:9">{<block_content pos:start="92:13" pos:end="92:29">
            <expr_stmt pos:start="92:13" pos:end="92:29"><expr pos:start="92:13" pos:end="92:28"><name pos:start="92:13" pos:end="92:16">ans2</name><operator pos:start="92:17" pos:end="92:18">+=</operator><name pos:start="92:19" pos:end="92:28"><name pos:start="92:19" pos:end="92:25">sumbian</name><index pos:start="92:26" pos:end="92:28">[<expr pos:start="92:27" pos:end="92:27"><name pos:start="92:27" pos:end="92:27">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="95:5" pos:end="95:32"><expr pos:start="95:5" pos:end="95:31"><name pos:start="95:5" pos:end="95:8">cout</name><operator pos:start="95:9" pos:end="95:10">&lt;&lt;</operator><name pos:start="95:11" pos:end="95:14">ans1</name><operator pos:start="95:15" pos:end="95:16">&lt;&lt;</operator><literal type="string" pos:start="95:17" pos:end="95:19">" "</literal><operator pos:start="95:20" pos:end="95:21">&lt;&lt;</operator><name pos:start="95:22" pos:end="95:25">ans2</name><operator pos:start="95:26" pos:end="95:27">&lt;&lt;</operator><literal type="string" pos:start="95:28" pos:end="95:31">"\n"</literal></expr>;</expr_stmt>
    <return pos:start="96:5" pos:end="96:13">return <expr pos:start="96:12" pos:end="96:12"><literal type="number" pos:start="96:12" pos:end="96:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
