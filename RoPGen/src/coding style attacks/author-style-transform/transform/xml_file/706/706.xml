<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/706/706.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:12"><decl pos:start="3:1" pos:end="3:11"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">ans</name> <init pos:start="3:9" pos:end="3:11">= <expr pos:start="3:11" pos:end="3:11"><literal type="number" pos:start="3:11" pos:end="3:11">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:6"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:29"><decl pos:start="5:1" pos:end="5:12"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:12"><name pos:start="5:6" pos:end="5:8">row</name><index pos:start="5:9" pos:end="5:12">[<expr pos:start="5:10" pos:end="5:11"><literal type="number" pos:start="5:10" pos:end="5:11">10</literal></expr>]</index></name></decl>, <decl pos:start="5:15" pos:end="5:20"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:15" pos:end="5:20"><name pos:start="5:15" pos:end="5:16">x1</name><index pos:start="5:17" pos:end="5:20">[<expr pos:start="5:18" pos:end="5:19"><literal type="number" pos:start="5:18" pos:end="5:19">20</literal></expr>]</index></name></decl>, <decl pos:start="5:23" pos:end="5:28"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:24">x2</name><index pos:start="5:25" pos:end="5:28">[<expr pos:start="5:26" pos:end="5:27"><literal type="number" pos:start="5:26" pos:end="5:27">20</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:18"><decl pos:start="6:1" pos:end="6:17"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:17"><name pos:start="6:5" pos:end="6:9">chess</name><index pos:start="6:10" pos:end="6:13">[<expr pos:start="6:11" pos:end="6:12"><literal type="number" pos:start="6:11" pos:end="6:12">10</literal></expr>]</index><index pos:start="6:14" pos:end="6:17">[<expr pos:start="6:15" pos:end="6:16"><literal type="number" pos:start="6:15" pos:end="6:16">10</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="12:1"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">void</name></type> <name pos:start="7:6" pos:end="7:9">_set</name><parameter_list pos:start="7:10" pos:end="7:11">()</parameter_list>
<block pos:start="8:1" pos:end="12:1">{<block_content pos:start="9:5" pos:end="11:31">
    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><call pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:10">memset</name><argument_list pos:start="9:11" pos:end="9:32">(<argument pos:start="9:12" pos:end="9:14"><expr pos:start="9:12" pos:end="9:14"><name pos:start="9:12" pos:end="9:14">row</name></expr></argument>,<argument pos:start="9:16" pos:end="9:20"><expr pos:start="9:16" pos:end="9:20"><literal type="boolean" pos:start="9:16" pos:end="9:20">false</literal></expr></argument>,<argument pos:start="9:22" pos:end="9:31"><expr pos:start="9:22" pos:end="9:31"><sizeof pos:start="9:22" pos:end="9:31">sizeof <name pos:start="9:29" pos:end="9:31">row</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:31"><expr pos:start="10:5" pos:end="10:30"><call pos:start="10:5" pos:end="10:30"><name pos:start="10:5" pos:end="10:10">memset</name><argument_list pos:start="10:11" pos:end="10:30">(<argument pos:start="10:12" pos:end="10:13"><expr pos:start="10:12" pos:end="10:13"><name pos:start="10:12" pos:end="10:13">x1</name></expr></argument>,<argument pos:start="10:15" pos:end="10:19"><expr pos:start="10:15" pos:end="10:19"><literal type="boolean" pos:start="10:15" pos:end="10:19">false</literal></expr></argument>,<argument pos:start="10:21" pos:end="10:29"><expr pos:start="10:21" pos:end="10:29"><sizeof pos:start="10:21" pos:end="10:29">sizeof <name pos:start="10:28" pos:end="10:29">x1</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><call pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:10">memset</name><argument_list pos:start="11:11" pos:end="11:30">(<argument pos:start="11:12" pos:end="11:13"><expr pos:start="11:12" pos:end="11:13"><name pos:start="11:12" pos:end="11:13">x2</name></expr></argument>,<argument pos:start="11:15" pos:end="11:19"><expr pos:start="11:15" pos:end="11:19"><literal type="boolean" pos:start="11:15" pos:end="11:19">false</literal></expr></argument>,<argument pos:start="11:21" pos:end="11:29"><expr pos:start="11:21" pos:end="11:29"><sizeof pos:start="11:21" pos:end="11:29">sizeof <name pos:start="11:28" pos:end="11:29">x2</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="13:1" pos:end="15:1"><type pos:start="13:1" pos:end="13:4"><name pos:start="13:1" pos:end="13:4">bool</name></type> <name pos:start="13:6" pos:end="13:10">check</name><parameter_list pos:start="13:11" pos:end="13:24">(<parameter pos:start="13:12" pos:end="13:16"><decl pos:start="13:12" pos:end="13:16"><type pos:start="13:12" pos:end="13:16"><name pos:start="13:12" pos:end="13:14">int</name></type> <name pos:start="13:16" pos:end="13:16">c</name></decl></parameter>, <parameter pos:start="13:19" pos:end="13:23"><decl pos:start="13:19" pos:end="13:23"><type pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:21">int</name></type> <name pos:start="13:23" pos:end="13:23">i</name></decl></parameter>)</parameter_list> <block pos:start="13:26" pos:end="15:1">{<block_content pos:start="14:5" pos:end="14:67">
    <return pos:start="14:5" pos:end="14:67">return <expr pos:start="14:12" pos:end="14:66"><operator pos:start="14:12" pos:end="14:12">!</operator><name pos:start="14:13" pos:end="14:18"><name pos:start="14:13" pos:end="14:15">row</name><index pos:start="14:16" pos:end="14:18">[<expr pos:start="14:17" pos:end="14:17"><name pos:start="14:17" pos:end="14:17">i</name></expr>]</index></name> <operator pos:start="14:20" pos:end="14:21">&amp;&amp;</operator> <operator pos:start="14:23" pos:end="14:23">!</operator><name pos:start="14:24" pos:end="14:32"><name pos:start="14:24" pos:end="14:25">x1</name><index pos:start="14:26" pos:end="14:32">[<expr pos:start="14:27" pos:end="14:31"><name pos:start="14:27" pos:end="14:27">c</name> <operator pos:start="14:29" pos:end="14:29">+</operator> <name pos:start="14:31" pos:end="14:31">i</name></expr>]</index></name> <operator pos:start="14:34" pos:end="14:35">&amp;&amp;</operator> <operator pos:start="14:37" pos:end="14:37">!</operator><name pos:start="14:38" pos:end="14:50"><name pos:start="14:38" pos:end="14:39">x2</name><index pos:start="14:40" pos:end="14:50">[<expr pos:start="14:41" pos:end="14:49"><name pos:start="14:41" pos:end="14:41">c</name> <operator pos:start="14:43" pos:end="14:43">-</operator> <name pos:start="14:45" pos:end="14:45">i</name> <operator pos:start="14:47" pos:end="14:47">+</operator> <name pos:start="14:49" pos:end="14:49">n</name></expr>]</index></name><operator pos:start="14:51" pos:end="14:52">&amp;&amp;</operator><name pos:start="14:53" pos:end="14:63"><name pos:start="14:53" pos:end="14:57">chess</name><index pos:start="14:58" pos:end="14:60">[<expr pos:start="14:59" pos:end="14:59"><name pos:start="14:59" pos:end="14:59">i</name></expr>]</index><index pos:start="14:61" pos:end="14:63">[<expr pos:start="14:62" pos:end="14:62"><name pos:start="14:62" pos:end="14:62">c</name></expr>]</index></name><operator pos:start="14:64" pos:end="14:65">==</operator><literal type="number" pos:start="14:66" pos:end="14:66">1</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="16:1" pos:end="28:1"><type pos:start="16:1" pos:end="16:4"><name pos:start="16:1" pos:end="16:4">void</name></type> <name pos:start="16:6" pos:end="16:8">dfs</name><parameter_list pos:start="16:9" pos:end="16:15">(<parameter pos:start="16:10" pos:end="16:14"><decl pos:start="16:10" pos:end="16:14"><type pos:start="16:10" pos:end="16:12"><name pos:start="16:10" pos:end="16:12">int</name></type> <name pos:start="16:14" pos:end="16:14">c</name></decl></parameter>)</parameter_list> <block pos:start="16:17" pos:end="28:1">{<block_content pos:start="17:5" pos:end="27:5">
    <if_stmt pos:start="17:5" pos:end="20:5"><if pos:start="17:5" pos:end="20:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:9">c</name> <operator pos:start="17:11" pos:end="17:12">==</operator> <name pos:start="17:14" pos:end="17:14">n</name></expr>)</condition> <block pos:start="17:17" pos:end="20:5">{<block_content pos:start="18:9" pos:end="19:15">
        <expr_stmt pos:start="18:9" pos:end="18:14"><expr pos:start="18:9" pos:end="18:13"><name pos:start="18:9" pos:end="18:11">ans</name><operator pos:start="18:12" pos:end="18:13">++</operator></expr>;</expr_stmt>
        <return pos:start="19:9" pos:end="19:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="21:5" pos:end="27:5">for <control pos:start="21:9" pos:end="21:31">(<init pos:start="21:10" pos:end="21:19"><decl pos:start="21:10" pos:end="21:18"><type pos:start="21:10" pos:end="21:12"><name pos:start="21:10" pos:end="21:12">int</name></type> <name pos:start="21:14" pos:end="21:14">i</name> <init pos:start="21:16" pos:end="21:18">= <expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr></init></decl>;</init> <condition pos:start="21:21" pos:end="21:26"><expr pos:start="21:21" pos:end="21:25"><name pos:start="21:21" pos:end="21:21">i</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <name pos:start="21:25" pos:end="21:25">n</name></expr>;</condition> <incr pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:28">i</name><operator pos:start="21:29" pos:end="21:30">++</operator></expr></incr>)</control> <block pos:start="21:33" pos:end="27:5">{<block_content pos:start="22:9" pos:end="26:9">
        <if_stmt pos:start="22:9" pos:end="26:9"><if pos:start="22:9" pos:end="26:9">if <condition pos:start="22:12" pos:end="22:24">(<expr pos:start="22:13" pos:end="22:23"><call pos:start="22:13" pos:end="22:23"><name pos:start="22:13" pos:end="22:17">check</name><argument_list pos:start="22:18" pos:end="22:23">(<argument pos:start="22:19" pos:end="22:19"><expr pos:start="22:19" pos:end="22:19"><name pos:start="22:19" pos:end="22:19">c</name></expr></argument>, <argument pos:start="22:22" pos:end="22:22"><expr pos:start="22:22" pos:end="22:22"><name pos:start="22:22" pos:end="22:22">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="22:26" pos:end="26:9">{<block_content pos:start="23:13" pos:end="25:55">
            <expr_stmt pos:start="23:13" pos:end="23:54"><expr pos:start="23:13" pos:end="23:53"><name pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:15">row</name><index pos:start="23:16" pos:end="23:18">[<expr pos:start="23:17" pos:end="23:17"><name pos:start="23:17" pos:end="23:17">i</name></expr>]</index></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:30"><name pos:start="23:22" pos:end="23:23">x1</name><index pos:start="23:24" pos:end="23:30">[<expr pos:start="23:25" pos:end="23:29"><name pos:start="23:25" pos:end="23:25">c</name> <operator pos:start="23:27" pos:end="23:27">+</operator> <name pos:start="23:29" pos:end="23:29">i</name></expr>]</index></name> <operator pos:start="23:32" pos:end="23:32">=</operator> <name pos:start="23:34" pos:end="23:46"><name pos:start="23:34" pos:end="23:35">x2</name><index pos:start="23:36" pos:end="23:46">[<expr pos:start="23:37" pos:end="23:45"><name pos:start="23:37" pos:end="23:37">c</name> <operator pos:start="23:39" pos:end="23:39">-</operator> <name pos:start="23:41" pos:end="23:41">i</name> <operator pos:start="23:43" pos:end="23:43">+</operator> <name pos:start="23:45" pos:end="23:45">n</name></expr>]</index></name> <operator pos:start="23:48" pos:end="23:48">=</operator> <literal type="boolean" pos:start="23:50" pos:end="23:53">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="24:13" pos:end="24:23"><expr pos:start="24:13" pos:end="24:22"><call pos:start="24:13" pos:end="24:22"><name pos:start="24:13" pos:end="24:15">dfs</name><argument_list pos:start="24:16" pos:end="24:22">(<argument pos:start="24:17" pos:end="24:21"><expr pos:start="24:17" pos:end="24:21"><name pos:start="24:17" pos:end="24:17">c</name> <operator pos:start="24:19" pos:end="24:19">+</operator> <literal type="number" pos:start="24:21" pos:end="24:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="25:13" pos:end="25:55"><expr pos:start="25:13" pos:end="25:54"><name pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:15">row</name><index pos:start="25:16" pos:end="25:18">[<expr pos:start="25:17" pos:end="25:17"><name pos:start="25:17" pos:end="25:17">i</name></expr>]</index></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:30"><name pos:start="25:22" pos:end="25:23">x1</name><index pos:start="25:24" pos:end="25:30">[<expr pos:start="25:25" pos:end="25:29"><name pos:start="25:25" pos:end="25:25">c</name> <operator pos:start="25:27" pos:end="25:27">+</operator> <name pos:start="25:29" pos:end="25:29">i</name></expr>]</index></name> <operator pos:start="25:32" pos:end="25:32">=</operator> <name pos:start="25:34" pos:end="25:46"><name pos:start="25:34" pos:end="25:35">x2</name><index pos:start="25:36" pos:end="25:46">[<expr pos:start="25:37" pos:end="25:45"><name pos:start="25:37" pos:end="25:37">c</name> <operator pos:start="25:39" pos:end="25:39">-</operator> <name pos:start="25:41" pos:end="25:41">i</name> <operator pos:start="25:43" pos:end="25:43">+</operator> <name pos:start="25:45" pos:end="25:45">n</name></expr>]</index></name> <operator pos:start="25:48" pos:end="25:48">=</operator> <literal type="boolean" pos:start="25:50" pos:end="25:54">false</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="29:1" pos:end="43:1"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:8">main</name><parameter_list pos:start="29:9" pos:end="29:10">()</parameter_list> <block pos:start="29:12" pos:end="43:1">{<block_content pos:start="30:5" pos:end="42:13">
    <expr_stmt pos:start="30:5" pos:end="30:34"><expr pos:start="30:5" pos:end="30:33"><call pos:start="30:5" pos:end="30:33"><name pos:start="30:5" pos:end="30:11">freopen</name><argument_list pos:start="30:12" pos:end="30:33">(<argument pos:start="30:13" pos:end="30:22"><expr pos:start="30:13" pos:end="30:22"><literal type="string" pos:start="30:13" pos:end="30:22">"queen.in"</literal></expr></argument>,<argument pos:start="30:24" pos:end="30:26"><expr pos:start="30:24" pos:end="30:26"><literal type="string" pos:start="30:24" pos:end="30:26">"r"</literal></expr></argument>,<argument pos:start="30:28" pos:end="30:32"><expr pos:start="30:28" pos:end="30:32"><name pos:start="30:28" pos:end="30:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><call pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:11">freopen</name><argument_list pos:start="31:12" pos:end="31:35">(<argument pos:start="31:13" pos:end="31:23"><expr pos:start="31:13" pos:end="31:23"><literal type="string" pos:start="31:13" pos:end="31:23">"queen.out"</literal></expr></argument>,<argument pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><literal type="string" pos:start="31:25" pos:end="31:27">"w"</literal></expr></argument>,<argument pos:start="31:29" pos:end="31:34"><expr pos:start="31:29" pos:end="31:34"><name pos:start="31:29" pos:end="31:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:11"><expr pos:start="32:5" pos:end="32:10"><name pos:start="32:5" pos:end="32:7">cin</name><operator pos:start="32:8" pos:end="32:9">&gt;&gt;</operator><name pos:start="32:10" pos:end="32:10">n</name></expr>;</expr_stmt>
    <for pos:start="33:5" pos:end="39:5">for<control pos:start="33:8" pos:end="33:24">(<init pos:start="33:9" pos:end="33:16"><decl pos:start="33:9" pos:end="33:15"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:13">i</name><init pos:start="33:14" pos:end="33:15">=<expr pos:start="33:15" pos:end="33:15"><literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr></init></decl>;</init><condition pos:start="33:17" pos:end="33:20"><expr pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:17">i</name><operator pos:start="33:18" pos:end="33:18">&lt;</operator><name pos:start="33:19" pos:end="33:19">n</name></expr>;</condition><incr pos:start="33:21" pos:end="33:23"><expr pos:start="33:21" pos:end="33:23"><operator pos:start="33:21" pos:end="33:22">++</operator><name pos:start="33:23" pos:end="33:23">i</name></expr></incr>)</control>
    <block pos:start="34:5" pos:end="39:5">{<block_content pos:start="35:9" pos:end="38:9">
        <for pos:start="35:9" pos:end="38:9">for<control pos:start="35:12" pos:end="35:28">(<init pos:start="35:13" pos:end="35:20"><decl pos:start="35:13" pos:end="35:19"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:17">j</name><init pos:start="35:18" pos:end="35:19">=<expr pos:start="35:19" pos:end="35:19"><literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr></init></decl>;</init><condition pos:start="35:21" pos:end="35:24"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:21">j</name><operator pos:start="35:22" pos:end="35:22">&lt;</operator><name pos:start="35:23" pos:end="35:23">n</name></expr>;</condition><incr pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><operator pos:start="35:25" pos:end="35:26">++</operator><name pos:start="35:27" pos:end="35:27">j</name></expr></incr>)</control>
        <block pos:start="36:9" pos:end="38:9">{<block_content pos:start="37:13" pos:end="37:29">
            <expr_stmt pos:start="37:13" pos:end="37:29"><expr pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:15">cin</name><operator pos:start="37:16" pos:end="37:17">&gt;&gt;</operator><name pos:start="37:18" pos:end="37:28"><name pos:start="37:18" pos:end="37:22">chess</name><index pos:start="37:23" pos:end="37:25">[<expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">i</name></expr>]</index><index pos:start="37:26" pos:end="37:28">[<expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="40:5" pos:end="40:11"><expr pos:start="40:5" pos:end="40:10"><call pos:start="40:5" pos:end="40:10"><name pos:start="40:5" pos:end="40:7">dfs</name><argument_list pos:start="40:8" pos:end="40:10">(<argument pos:start="40:9" pos:end="40:9"><expr pos:start="40:9" pos:end="40:9"><literal type="number" pos:start="40:9" pos:end="40:9">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:8">cout</name> <operator pos:start="41:10" pos:end="41:11">&lt;&lt;</operator> <name pos:start="41:13" pos:end="41:15">ans</name><operator pos:start="41:16" pos:end="41:16">*</operator><operator pos:start="41:17" pos:end="41:17">(</operator><name pos:start="41:18" pos:end="41:20">ans</name><operator pos:start="41:21" pos:end="41:21">-</operator><literal type="number" pos:start="41:22" pos:end="41:22">1</literal><operator pos:start="41:23" pos:end="41:23">)</operator> <operator pos:start="41:25" pos:end="41:26">&lt;&lt;</operator> <name pos:start="41:28" pos:end="41:31">endl</name></expr>;</expr_stmt>
    <return pos:start="42:5" pos:end="42:13">return <expr pos:start="42:12" pos:end="42:12"><literal type="number" pos:start="42:12" pos:end="42:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
