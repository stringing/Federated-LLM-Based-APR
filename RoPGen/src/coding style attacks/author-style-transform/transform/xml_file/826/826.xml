<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/826/826.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:25"><decl pos:start="3:1" pos:end="3:24"><type pos:start="3:1" pos:end="3:9"><name pos:start="3:1" pos:end="3:3">int</name> <specifier pos:start="3:5" pos:end="3:9">const</specifier></type> <name pos:start="3:11" pos:end="3:14">MAXN</name> <init pos:start="3:16" pos:end="3:24">= <expr pos:start="3:18" pos:end="3:24"><literal type="number" pos:start="3:18" pos:end="3:22">2e5</literal> <operator pos:start="3:22" pos:end="3:22">+</operator> <literal type="number" pos:start="3:24" pos:end="3:24">5</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:6"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:13"><decl pos:start="5:1" pos:end="5:12"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">char</name></type> <name pos:start="5:6" pos:end="5:12"><name pos:start="5:6" pos:end="5:6">s</name><index pos:start="5:7" pos:end="5:12">[<expr pos:start="5:8" pos:end="5:11"><name pos:start="5:8" pos:end="5:11">MAXN</name></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="24:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">bool</name></type> <name pos:start="6:6" pos:end="6:6">j</name><parameter_list pos:start="6:7" pos:end="6:8">()</parameter_list><block pos:start="6:9" pos:end="24:1">{<block_content pos:start="7:5" pos:end="23:5">
    <if_stmt pos:start="7:5" pos:end="7:32"><if pos:start="7:5" pos:end="7:32">if<condition pos:start="7:7" pos:end="7:18">(<expr pos:start="7:8" pos:end="7:17"><name pos:start="7:8" pos:end="7:8">n</name> <operator pos:start="7:10" pos:end="7:10">%</operator> <literal type="number" pos:start="7:12" pos:end="7:12">8</literal> <operator pos:start="7:14" pos:end="7:15">!=</operator> <literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr>)</condition><block type="pseudo" pos:start="7:20" pos:end="7:32"><block_content pos:start="7:20" pos:end="7:32"> <return pos:start="7:20" pos:end="7:32">return <expr pos:start="7:27" pos:end="7:31"><literal type="boolean" pos:start="7:27" pos:end="7:31">false</literal></expr>;</return></block_content></block></if></if_stmt>
    <for pos:start="8:5" pos:end="10:25">for<control pos:start="8:8" pos:end="8:31">(<init pos:start="8:9" pos:end="8:18"><decl pos:start="8:9" pos:end="8:17"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:13">i</name> <init pos:start="8:15" pos:end="8:17">= <expr pos:start="8:17" pos:end="8:17"><literal type="number" pos:start="8:17" pos:end="8:17">1</literal></expr></init></decl>;</init> <condition pos:start="8:20" pos:end="8:26"><expr pos:start="8:20" pos:end="8:25"><name pos:start="8:20" pos:end="8:20">i</name> <operator pos:start="8:22" pos:end="8:23">&lt;=</operator> <name pos:start="8:25" pos:end="8:25">n</name></expr>;</condition> <incr pos:start="8:28" pos:end="8:30"><expr pos:start="8:28" pos:end="8:30"><operator pos:start="8:28" pos:end="8:29">++</operator><name pos:start="8:30" pos:end="8:30">i</name></expr></incr>)</control><block type="pseudo" pos:start="9:9" pos:end="10:25"><block_content pos:start="9:9" pos:end="10:25">
        <if_stmt pos:start="9:9" pos:end="10:25"><if pos:start="9:9" pos:end="10:25">if<condition pos:start="9:11" pos:end="9:38">(<expr pos:start="9:12" pos:end="9:37"><name pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:12">s</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><name pos:start="9:14" pos:end="9:14">i</name></expr>]</index></name> <operator pos:start="9:17" pos:end="9:18">!=</operator> <literal type="char" pos:start="9:20" pos:end="9:22">'0'</literal> <operator pos:start="9:24" pos:end="9:25">||</operator> <name pos:start="9:27" pos:end="9:30"><name pos:start="9:27" pos:end="9:27">s</name><index pos:start="9:28" pos:end="9:30">[<expr pos:start="9:29" pos:end="9:29"><name pos:start="9:29" pos:end="9:29">i</name></expr>]</index></name> <operator pos:start="9:32" pos:end="9:33">!=</operator> <literal type="char" pos:start="9:35" pos:end="9:37">'1'</literal></expr>)</condition><block type="pseudo" pos:start="10:13" pos:end="10:25"><block_content pos:start="10:13" pos:end="10:25">
            <return pos:start="10:13" pos:end="10:25">return <expr pos:start="10:20" pos:end="10:24"><literal type="boolean" pos:start="10:20" pos:end="10:24">false</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>
    <for pos:start="11:5" pos:end="23:5">for<control pos:start="11:8" pos:end="11:34">(<init pos:start="11:9" pos:end="11:18"><decl pos:start="11:9" pos:end="11:17"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr></init></decl>;</init> <condition pos:start="11:20" pos:end="11:26"><expr pos:start="11:20" pos:end="11:25"><name pos:start="11:20" pos:end="11:20">i</name> <operator pos:start="11:22" pos:end="11:23">&lt;=</operator> <name pos:start="11:25" pos:end="11:25">n</name></expr>;</condition> <incr pos:start="11:28" pos:end="11:33"><expr pos:start="11:28" pos:end="11:33"><name pos:start="11:28" pos:end="11:28">i</name> <operator pos:start="11:30" pos:end="11:31">+=</operator> <literal type="number" pos:start="11:33" pos:end="11:33">8</literal></expr></incr>)</control> <block pos:start="11:36" pos:end="23:5">{<block_content pos:start="12:9" pos:end="22:9">
        <if_stmt pos:start="12:9" pos:end="12:84"><if pos:start="12:9" pos:end="12:84">if<condition pos:start="12:11" pos:end="12:70">(<expr pos:start="12:12" pos:end="12:69"><call pos:start="12:12" pos:end="12:33"><name pos:start="12:12" pos:end="12:18">strncmp</name><argument_list pos:start="12:19" pos:end="12:33">(<argument pos:start="12:20" pos:end="12:24"><expr pos:start="12:20" pos:end="12:24"><name pos:start="12:20" pos:end="12:20">s</name> <operator pos:start="12:22" pos:end="12:22">+</operator> <name pos:start="12:24" pos:end="12:24">i</name></expr></argument>,<argument pos:start="12:26" pos:end="12:30"><expr pos:start="12:26" pos:end="12:30"><literal type="string" pos:start="12:26" pos:end="12:30">"100"</literal></expr></argument>,<argument pos:start="12:32" pos:end="12:32"><expr pos:start="12:32" pos:end="12:32"><literal type="number" pos:start="12:32" pos:end="12:32">3</literal></expr></argument>)</argument_list></call> <operator pos:start="12:35" pos:end="12:36">==</operator> <literal type="number" pos:start="12:38" pos:end="12:38">0</literal> <operator pos:start="12:40" pos:end="12:41">||</operator> <call pos:start="12:43" pos:end="12:64"><name pos:start="12:43" pos:end="12:49">strncmp</name><argument_list pos:start="12:50" pos:end="12:64">(<argument pos:start="12:51" pos:end="12:55"><expr pos:start="12:51" pos:end="12:55"><name pos:start="12:51" pos:end="12:51">s</name> <operator pos:start="12:53" pos:end="12:53">+</operator> <name pos:start="12:55" pos:end="12:55">i</name></expr></argument>,<argument pos:start="12:57" pos:end="12:61"><expr pos:start="12:57" pos:end="12:61"><literal type="string" pos:start="12:57" pos:end="12:61">"110"</literal></expr></argument>,<argument pos:start="12:63" pos:end="12:63"><expr pos:start="12:63" pos:end="12:63"><literal type="number" pos:start="12:63" pos:end="12:63">3</literal></expr></argument>)</argument_list></call> <operator pos:start="12:66" pos:end="12:67">==</operator> <literal type="number" pos:start="12:69" pos:end="12:69">0</literal></expr>)</condition><block type="pseudo" pos:start="12:72" pos:end="12:84"><block_content pos:start="12:72" pos:end="12:84"> <return pos:start="12:72" pos:end="12:84">return <expr pos:start="12:79" pos:end="12:83"><literal type="boolean" pos:start="12:79" pos:end="12:83">false</literal></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt pos:start="13:9" pos:end="16:9"><if pos:start="13:9" pos:end="16:9">if<condition pos:start="13:11" pos:end="13:23">(<expr pos:start="13:12" pos:end="13:22"><name pos:start="13:12" pos:end="13:15"><name pos:start="13:12" pos:end="13:12">s</name><index pos:start="13:13" pos:end="13:15">[<expr pos:start="13:14" pos:end="13:14"><name pos:start="13:14" pos:end="13:14">i</name></expr>]</index></name> <operator pos:start="13:17" pos:end="13:18">==</operator> <literal type="char" pos:start="13:20" pos:end="13:22">'0'</literal></expr>)</condition> <block pos:start="13:25" pos:end="16:9">{<block_content pos:start="14:13" pos:end="15:19">
            <if_stmt pos:start="14:13" pos:end="14:58"><if pos:start="14:13" pos:end="14:58">if<condition pos:start="14:15" pos:end="14:44">(<expr pos:start="14:16" pos:end="14:43"><name pos:start="14:16" pos:end="14:16">i</name> <operator pos:start="14:18" pos:end="14:18">+</operator> <literal type="number" pos:start="14:20" pos:end="14:20">8</literal> <operator pos:start="14:22" pos:end="14:22">&gt;</operator> <name pos:start="14:24" pos:end="14:24">n</name> <operator pos:start="14:26" pos:end="14:27">||</operator> <name pos:start="14:29" pos:end="14:36"><name pos:start="14:29" pos:end="14:29">s</name><index pos:start="14:30" pos:end="14:36">[<expr pos:start="14:31" pos:end="14:35"><name pos:start="14:31" pos:end="14:31">i</name> <operator pos:start="14:33" pos:end="14:33">+</operator> <literal type="number" pos:start="14:35" pos:end="14:35">8</literal></expr>]</index></name> <operator pos:start="14:38" pos:end="14:39">!=</operator> <literal type="char" pos:start="14:41" pos:end="14:43">'0'</literal></expr>)</condition><block type="pseudo" pos:start="14:46" pos:end="14:58"><block_content pos:start="14:46" pos:end="14:58"> <return pos:start="14:46" pos:end="14:58">return <expr pos:start="14:53" pos:end="14:57"><literal type="boolean" pos:start="14:53" pos:end="14:57">false</literal></expr>;</return></block_content></block></if></if_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:19"><expr pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:13">i</name> <operator pos:start="15:15" pos:end="15:16">+=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">8</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="17:9" pos:end="22:9"><if pos:start="17:9" pos:end="22:9">if<condition pos:start="17:11" pos:end="17:39">(<expr pos:start="17:12" pos:end="17:38"><call pos:start="17:12" pos:end="17:33"><name pos:start="17:12" pos:end="17:18">strncmp</name><argument_list pos:start="17:19" pos:end="17:33">(<argument pos:start="17:20" pos:end="17:24"><expr pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:20">s</name> <operator pos:start="17:22" pos:end="17:22">+</operator> <name pos:start="17:24" pos:end="17:24">i</name></expr></argument>,<argument pos:start="17:26" pos:end="17:30"><expr pos:start="17:26" pos:end="17:30"><literal type="string" pos:start="17:26" pos:end="17:30">"101"</literal></expr></argument>,<argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><literal type="number" pos:start="17:32" pos:end="17:32">3</literal></expr></argument>)</argument_list></call> <operator pos:start="17:35" pos:end="17:36">==</operator> <literal type="number" pos:start="17:38" pos:end="17:38">0</literal></expr>)</condition><block pos:start="17:40" pos:end="22:9">{<block_content pos:start="18:13" pos:end="21:39">
            <decl_stmt pos:start="18:13" pos:end="18:24"><decl pos:start="18:13" pos:end="18:23"><type pos:start="18:13" pos:end="18:15"><name pos:start="18:13" pos:end="18:15">int</name></type> <name pos:start="18:17" pos:end="18:19">tmp</name> <init pos:start="18:21" pos:end="18:23">= <expr pos:start="18:23" pos:end="18:23"><literal type="number" pos:start="18:23" pos:end="18:23">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="19:13" pos:end="20:45">for<control pos:start="19:16" pos:end="19:46">(<init pos:start="19:17" pos:end="19:30"><decl pos:start="19:17" pos:end="19:29"><type pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">int</name></type> <name pos:start="19:21" pos:end="19:21">j</name> <init pos:start="19:23" pos:end="19:29">= <expr pos:start="19:25" pos:end="19:29"><name pos:start="19:25" pos:end="19:25">i</name> <operator pos:start="19:27" pos:end="19:27">+</operator> <literal type="number" pos:start="19:29" pos:end="19:29">3</literal></expr></init></decl>;</init> <condition pos:start="19:32" pos:end="19:41"><expr pos:start="19:32" pos:end="19:40"><name pos:start="19:32" pos:end="19:32">j</name> <operator pos:start="19:34" pos:end="19:34">&lt;</operator> <name pos:start="19:36" pos:end="19:36">i</name> <operator pos:start="19:38" pos:end="19:38">+</operator> <literal type="number" pos:start="19:40" pos:end="19:40">8</literal></expr>;</condition> <incr pos:start="19:43" pos:end="19:45"><expr pos:start="19:43" pos:end="19:45"><operator pos:start="19:43" pos:end="19:44">++</operator><name pos:start="19:45" pos:end="19:45">j</name></expr></incr>)</control><block type="pseudo" pos:start="20:17" pos:end="20:45"><block_content pos:start="20:17" pos:end="20:45">
                <expr_stmt pos:start="20:17" pos:end="20:45"><expr pos:start="20:17" pos:end="20:44"><name pos:start="20:17" pos:end="20:19">tmp</name> <operator pos:start="20:21" pos:end="20:21">=</operator> <name pos:start="20:23" pos:end="20:25">tmp</name> <operator pos:start="20:27" pos:end="20:27">*</operator> <literal type="number" pos:start="20:29" pos:end="20:31">2</literal> <operator pos:start="20:31" pos:end="20:31">+</operator> <operator pos:start="20:33" pos:end="20:33">(</operator><name pos:start="20:34" pos:end="20:37"><name pos:start="20:34" pos:end="20:34">s</name><index pos:start="20:35" pos:end="20:37">[<expr pos:start="20:36" pos:end="20:36"><name pos:start="20:36" pos:end="20:36">j</name></expr>]</index></name> <operator pos:start="20:39" pos:end="20:39">-</operator> <literal type="char" pos:start="20:41" pos:end="20:43">'0'</literal><operator pos:start="20:44" pos:end="20:44">)</operator></expr>;</expr_stmt></block_content></block></for>
            <if_stmt pos:start="21:13" pos:end="21:39"><if pos:start="21:13" pos:end="21:39">if<condition pos:start="21:15" pos:end="21:25">(<expr pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:18">tmp</name> <operator pos:start="21:20" pos:end="21:21">&gt;=</operator> <literal type="number" pos:start="21:23" pos:end="21:24">26</literal></expr>)</condition><block type="pseudo" pos:start="21:27" pos:end="21:39"><block_content pos:start="21:27" pos:end="21:39"> <return pos:start="21:27" pos:end="21:39">return <expr pos:start="21:34" pos:end="21:38"><literal type="boolean" pos:start="21:34" pos:end="21:38">false</literal></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="25:1" pos:end="56:1"><type pos:start="25:1" pos:end="25:3"><name pos:start="25:1" pos:end="25:3">int</name></type> <name pos:start="25:5" pos:end="25:8">main</name> <parameter_list pos:start="25:10" pos:end="25:11">()</parameter_list><block pos:start="25:12" pos:end="56:1">{<block_content pos:start="26:5" pos:end="55:13">
    <expr_stmt pos:start="26:5" pos:end="26:40"><expr pos:start="26:5" pos:end="26:39"><call pos:start="26:5" pos:end="26:39"><name pos:start="26:5" pos:end="26:11">freopen</name><argument_list pos:start="26:12" pos:end="26:39">(<argument pos:start="26:13" pos:end="26:28"><expr pos:start="26:13" pos:end="26:28"><literal type="string" pos:start="26:13" pos:end="26:28">"information.in"</literal></expr></argument>,<argument pos:start="26:30" pos:end="26:32"><expr pos:start="26:30" pos:end="26:32"><literal type="string" pos:start="26:30" pos:end="26:32">"r"</literal></expr></argument>,<argument pos:start="26:34" pos:end="26:38"><expr pos:start="26:34" pos:end="26:38"><name pos:start="26:34" pos:end="26:38">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:42"><expr pos:start="27:5" pos:end="27:41"><call pos:start="27:5" pos:end="27:41"><name pos:start="27:5" pos:end="27:11">freopen</name><argument_list pos:start="27:12" pos:end="27:41">(<argument pos:start="27:13" pos:end="27:29"><expr pos:start="27:13" pos:end="27:29"><literal type="string" pos:start="27:13" pos:end="27:29">"information.out"</literal></expr></argument>,<argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><literal type="string" pos:start="27:31" pos:end="27:33">"w"</literal></expr></argument>,<argument pos:start="27:35" pos:end="27:40"><expr pos:start="27:35" pos:end="27:40"><name pos:start="27:35" pos:end="27:40">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:23"><expr pos:start="28:5" pos:end="28:22"><call pos:start="28:5" pos:end="28:22"><name pos:start="28:5" pos:end="28:9">scanf</name><argument_list pos:start="28:10" pos:end="28:22">(<argument pos:start="28:11" pos:end="28:14"><expr pos:start="28:11" pos:end="28:14"><literal type="string" pos:start="28:11" pos:end="28:14">"%s"</literal></expr></argument>, <argument pos:start="28:17" pos:end="28:21"><expr pos:start="28:17" pos:end="28:21"><name pos:start="28:17" pos:end="28:17">s</name> <operator pos:start="28:19" pos:end="28:19">+</operator> <literal type="number" pos:start="28:21" pos:end="28:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:5">n</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:14">strlen</name><argument_list pos:start="29:15" pos:end="29:21">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:16">s</name> <operator pos:start="29:18" pos:end="29:18">+</operator> <literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="30:5" pos:end="54:5"><if pos:start="30:5" pos:end="31:26">if<condition pos:start="30:7" pos:end="30:12">(<expr pos:start="30:8" pos:end="30:11"><operator pos:start="30:8" pos:end="30:8">!</operator><call pos:start="30:9" pos:end="30:11"><name pos:start="30:9" pos:end="30:9">j</name><argument_list pos:start="30:10" pos:end="30:11">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:26"><block_content pos:start="31:9" pos:end="31:26">
        <expr_stmt pos:start="31:9" pos:end="31:26"><expr pos:start="31:9" pos:end="31:25"><call pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:14">printf</name><argument_list pos:start="31:15" pos:end="31:25">(<argument pos:start="31:16" pos:end="31:24"><expr pos:start="31:16" pos:end="31:24"><literal type="string" pos:start="31:16" pos:end="31:24">"Error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="32:5" pos:end="54:5">else <block pos:start="32:10" pos:end="54:5">{<block_content pos:start="33:9" pos:end="53:9">
        <for pos:start="33:9" pos:end="53:9">for<control pos:start="33:12" pos:end="33:38">(<init pos:start="33:13" pos:end="33:22"><decl pos:start="33:13" pos:end="33:21"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:17">i</name> <init pos:start="33:19" pos:end="33:21">= <expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr></init></decl>;</init> <condition pos:start="33:24" pos:end="33:30"><expr pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:24">i</name> <operator pos:start="33:26" pos:end="33:27">&lt;=</operator> <name pos:start="33:29" pos:end="33:29">n</name></expr>;</condition> <incr pos:start="33:32" pos:end="33:37"><expr pos:start="33:32" pos:end="33:37"><name pos:start="33:32" pos:end="33:32">i</name> <operator pos:start="33:34" pos:end="33:35">+=</operator> <literal type="number" pos:start="33:37" pos:end="33:37">8</literal></expr></incr>)</control> <block pos:start="33:40" pos:end="53:9">{<block_content pos:start="34:13" pos:end="52:13">
            <if_stmt pos:start="34:13" pos:end="52:13"><if pos:start="34:13" pos:end="40:13">if<condition pos:start="34:15" pos:end="34:43">(<expr pos:start="34:16" pos:end="34:42"><call pos:start="34:16" pos:end="34:37"><name pos:start="34:16" pos:end="34:22">strncmp</name><argument_list pos:start="34:23" pos:end="34:37">(<argument pos:start="34:24" pos:end="34:28"><expr pos:start="34:24" pos:end="34:28"><name pos:start="34:24" pos:end="34:24">s</name> <operator pos:start="34:26" pos:end="34:26">+</operator> <name pos:start="34:28" pos:end="34:28">i</name></expr></argument>,<argument pos:start="34:30" pos:end="34:34"><expr pos:start="34:30" pos:end="34:34"><literal type="string" pos:start="34:30" pos:end="34:34">"101"</literal></expr></argument>,<argument pos:start="34:36" pos:end="34:36"><expr pos:start="34:36" pos:end="34:36"><literal type="number" pos:start="34:36" pos:end="34:36">3</literal></expr></argument>)</argument_list></call> <operator pos:start="34:39" pos:end="34:40">==</operator> <literal type="number" pos:start="34:42" pos:end="34:42">0</literal></expr>)</condition><block pos:start="34:44" pos:end="40:13">{<block_content pos:start="35:17" pos:end="39:40">
                <decl_stmt pos:start="35:17" pos:end="35:28"><decl pos:start="35:17" pos:end="35:27"><type pos:start="35:17" pos:end="35:19"><name pos:start="35:17" pos:end="35:19">int</name></type> <name pos:start="35:21" pos:end="35:23">tmp</name> <init pos:start="35:25" pos:end="35:27">= <expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">0</literal></expr></init></decl>;</decl_stmt>
                <for pos:start="36:17" pos:end="38:17">for<control pos:start="36:20" pos:end="36:50">(<init pos:start="36:21" pos:end="36:34"><decl pos:start="36:21" pos:end="36:33"><type pos:start="36:21" pos:end="36:23"><name pos:start="36:21" pos:end="36:23">int</name></type> <name pos:start="36:25" pos:end="36:25">j</name> <init pos:start="36:27" pos:end="36:33">= <expr pos:start="36:29" pos:end="36:33"><name pos:start="36:29" pos:end="36:29">i</name> <operator pos:start="36:31" pos:end="36:31">+</operator> <literal type="number" pos:start="36:33" pos:end="36:33">3</literal></expr></init></decl>;</init> <condition pos:start="36:36" pos:end="36:45"><expr pos:start="36:36" pos:end="36:44"><name pos:start="36:36" pos:end="36:36">j</name> <operator pos:start="36:38" pos:end="36:38">&lt;</operator> <name pos:start="36:40" pos:end="36:40">i</name> <operator pos:start="36:42" pos:end="36:42">+</operator> <literal type="number" pos:start="36:44" pos:end="36:44">8</literal></expr>;</condition> <incr pos:start="36:47" pos:end="36:49"><expr pos:start="36:47" pos:end="36:49"><operator pos:start="36:47" pos:end="36:48">++</operator><name pos:start="36:49" pos:end="36:49">j</name></expr></incr>)</control><block pos:start="36:51" pos:end="38:17">{<block_content pos:start="37:21" pos:end="37:49">
                    <expr_stmt pos:start="37:21" pos:end="37:49"><expr pos:start="37:21" pos:end="37:48"><name pos:start="37:21" pos:end="37:23">tmp</name> <operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:29">tmp</name> <operator pos:start="37:31" pos:end="37:31">*</operator> <literal type="number" pos:start="37:33" pos:end="37:35">2</literal> <operator pos:start="37:35" pos:end="37:35">+</operator> <operator pos:start="37:37" pos:end="37:37">(</operator><name pos:start="37:38" pos:end="37:41"><name pos:start="37:38" pos:end="37:38">s</name><index pos:start="37:39" pos:end="37:41">[<expr pos:start="37:40" pos:end="37:40"><name pos:start="37:40" pos:end="37:40">j</name></expr>]</index></name> <operator pos:start="37:43" pos:end="37:43">-</operator> <literal type="char" pos:start="37:45" pos:end="37:47">'0'</literal><operator pos:start="37:48" pos:end="37:48">)</operator></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt pos:start="39:17" pos:end="39:40"><expr pos:start="39:17" pos:end="39:39"><call pos:start="39:17" pos:end="39:39"><name pos:start="39:17" pos:end="39:22">printf</name><argument_list pos:start="39:23" pos:end="39:39">(<argument pos:start="39:24" pos:end="39:27"><expr pos:start="39:24" pos:end="39:27"><literal type="string" pos:start="39:24" pos:end="39:27">"%c"</literal></expr></argument>, <argument pos:start="39:30" pos:end="39:38"><expr pos:start="39:30" pos:end="39:38"><literal type="char" pos:start="39:30" pos:end="39:32">'A'</literal> <operator pos:start="39:34" pos:end="39:34">+</operator> <name pos:start="39:36" pos:end="39:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="40:15" pos:end="42:13">else if<condition pos:start="40:22" pos:end="40:50">(<expr pos:start="40:23" pos:end="40:49"><call pos:start="40:23" pos:end="40:44"><name pos:start="40:23" pos:end="40:29">strncmp</name><argument_list pos:start="40:30" pos:end="40:44">(<argument pos:start="40:31" pos:end="40:35"><expr pos:start="40:31" pos:end="40:35"><name pos:start="40:31" pos:end="40:31">s</name> <operator pos:start="40:33" pos:end="40:33">+</operator> <name pos:start="40:35" pos:end="40:35">i</name></expr></argument>,<argument pos:start="40:37" pos:end="40:41"><expr pos:start="40:37" pos:end="40:41"><literal type="string" pos:start="40:37" pos:end="40:41">"111"</literal></expr></argument>,<argument pos:start="40:43" pos:end="40:43"><expr pos:start="40:43" pos:end="40:43"><literal type="number" pos:start="40:43" pos:end="40:43">3</literal></expr></argument>)</argument_list></call> <operator pos:start="40:46" pos:end="40:47">==</operator> <literal type="number" pos:start="40:49" pos:end="40:49">0</literal></expr>)</condition><block pos:start="40:51" pos:end="42:13">{<block_content pos:start="41:17" pos:end="41:28">
                <expr_stmt pos:start="41:17" pos:end="41:28"><expr pos:start="41:17" pos:end="41:27"><call pos:start="41:17" pos:end="41:27"><name pos:start="41:17" pos:end="41:22">printf</name><argument_list pos:start="41:23" pos:end="41:27">(<argument pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><literal type="string" pos:start="41:24" pos:end="41:26">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="42:15" pos:end="52:13">else <block pos:start="42:20" pos:end="52:13">{<block_content pos:start="43:17" pos:end="51:56">
                <decl_stmt pos:start="43:17" pos:end="43:39"><decl pos:start="43:17" pos:end="43:28"><type pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">int</name></type> <name pos:start="43:21" pos:end="43:24">tmp1</name> <init pos:start="43:26" pos:end="43:28">= <expr pos:start="43:28" pos:end="43:28"><literal type="number" pos:start="43:28" pos:end="43:28">0</literal></expr></init></decl>, <decl pos:start="43:31" pos:end="43:38"><type ref="prev" pos:start="43:17" pos:end="43:19"/><name pos:start="43:31" pos:end="43:34">tmp2</name> <init pos:start="43:36" pos:end="43:38">= <expr pos:start="43:38" pos:end="43:38"><literal type="number" pos:start="43:38" pos:end="43:38">0</literal></expr></init></decl>;</decl_stmt>
                <for pos:start="44:17" pos:end="46:17">for<control pos:start="44:20" pos:end="44:50">(<init pos:start="44:21" pos:end="44:34"><decl pos:start="44:21" pos:end="44:33"><type pos:start="44:21" pos:end="44:23"><name pos:start="44:21" pos:end="44:23">int</name></type> <name pos:start="44:25" pos:end="44:25">j</name> <init pos:start="44:27" pos:end="44:33">= <expr pos:start="44:29" pos:end="44:33"><name pos:start="44:29" pos:end="44:29">i</name> <operator pos:start="44:31" pos:end="44:31">+</operator> <literal type="number" pos:start="44:33" pos:end="44:33">1</literal></expr></init></decl>;</init> <condition pos:start="44:36" pos:end="44:45"><expr pos:start="44:36" pos:end="44:44"><name pos:start="44:36" pos:end="44:36">j</name> <operator pos:start="44:38" pos:end="44:38">&lt;</operator> <name pos:start="44:40" pos:end="44:40">i</name> <operator pos:start="44:42" pos:end="44:42">+</operator> <literal type="number" pos:start="44:44" pos:end="44:44">8</literal></expr>;</condition> <incr pos:start="44:47" pos:end="44:49"><expr pos:start="44:47" pos:end="44:49"><operator pos:start="44:47" pos:end="44:48">++</operator><name pos:start="44:49" pos:end="44:49">j</name></expr></incr>)</control><block pos:start="44:51" pos:end="46:17">{<block_content pos:start="45:21" pos:end="45:51">
                    <expr_stmt pos:start="45:21" pos:end="45:51"><expr pos:start="45:21" pos:end="45:50"><name pos:start="45:21" pos:end="45:24">tmp1</name> <operator pos:start="45:26" pos:end="45:26">=</operator> <name pos:start="45:28" pos:end="45:31">tmp1</name> <operator pos:start="45:33" pos:end="45:33">*</operator> <literal type="number" pos:start="45:35" pos:end="45:37">2</literal> <operator pos:start="45:37" pos:end="45:37">+</operator> <operator pos:start="45:39" pos:end="45:39">(</operator><name pos:start="45:40" pos:end="45:43"><name pos:start="45:40" pos:end="45:40">s</name><index pos:start="45:41" pos:end="45:43">[<expr pos:start="45:42" pos:end="45:42"><name pos:start="45:42" pos:end="45:42">j</name></expr>]</index></name> <operator pos:start="45:45" pos:end="45:45">-</operator> <literal type="char" pos:start="45:47" pos:end="45:49">'0'</literal><operator pos:start="45:50" pos:end="45:50">)</operator></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt pos:start="47:17" pos:end="47:23"><expr pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:20">+=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">8</literal></expr>;</expr_stmt>
                <for pos:start="48:17" pos:end="50:17">for<control pos:start="48:20" pos:end="48:50">(<init pos:start="48:21" pos:end="48:34"><decl pos:start="48:21" pos:end="48:33"><type pos:start="48:21" pos:end="48:23"><name pos:start="48:21" pos:end="48:23">int</name></type> <name pos:start="48:25" pos:end="48:25">j</name> <init pos:start="48:27" pos:end="48:33">= <expr pos:start="48:29" pos:end="48:33"><name pos:start="48:29" pos:end="48:29">i</name> <operator pos:start="48:31" pos:end="48:31">+</operator> <literal type="number" pos:start="48:33" pos:end="48:33">1</literal></expr></init></decl>;</init> <condition pos:start="48:36" pos:end="48:45"><expr pos:start="48:36" pos:end="48:44"><name pos:start="48:36" pos:end="48:36">j</name> <operator pos:start="48:38" pos:end="48:38">&lt;</operator> <name pos:start="48:40" pos:end="48:40">i</name> <operator pos:start="48:42" pos:end="48:42">+</operator> <literal type="number" pos:start="48:44" pos:end="48:44">8</literal></expr>;</condition> <incr pos:start="48:47" pos:end="48:49"><expr pos:start="48:47" pos:end="48:49"><operator pos:start="48:47" pos:end="48:48">++</operator><name pos:start="48:49" pos:end="48:49">j</name></expr></incr>)</control><block pos:start="48:51" pos:end="50:17">{<block_content pos:start="49:21" pos:end="49:51">
                    <expr_stmt pos:start="49:21" pos:end="49:51"><expr pos:start="49:21" pos:end="49:50"><name pos:start="49:21" pos:end="49:24">tmp2</name> <operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:31">tmp2</name> <operator pos:start="49:33" pos:end="49:33">*</operator> <literal type="number" pos:start="49:35" pos:end="49:37">2</literal> <operator pos:start="49:37" pos:end="49:37">+</operator> <operator pos:start="49:39" pos:end="49:39">(</operator><name pos:start="49:40" pos:end="49:43"><name pos:start="49:40" pos:end="49:40">s</name><index pos:start="49:41" pos:end="49:43">[<expr pos:start="49:42" pos:end="49:42"><name pos:start="49:42" pos:end="49:42">j</name></expr>]</index></name> <operator pos:start="49:45" pos:end="49:45">-</operator> <literal type="char" pos:start="49:47" pos:end="49:49">'0'</literal><operator pos:start="49:50" pos:end="49:50">)</operator></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt pos:start="51:17" pos:end="51:56"><expr pos:start="51:17" pos:end="51:55"><call pos:start="51:17" pos:end="51:55"><name pos:start="51:17" pos:end="51:22">printf</name><argument_list pos:start="51:23" pos:end="51:55">(<argument pos:start="51:24" pos:end="51:27"><expr pos:start="51:24" pos:end="51:27"><literal type="string" pos:start="51:24" pos:end="51:27">"%d"</literal></expr></argument>, <argument pos:start="51:30" pos:end="51:54"><expr pos:start="51:30" pos:end="51:54"><operator pos:start="51:30" pos:end="51:30">(</operator><name pos:start="51:31" pos:end="51:34">tmp1</name> <operator pos:start="51:36" pos:end="51:37">&gt;&gt;</operator> <literal type="number" pos:start="51:39" pos:end="51:39">1</literal><operator pos:start="51:40" pos:end="51:40">)</operator> <operator pos:start="51:42" pos:end="51:42">+</operator> <operator pos:start="51:44" pos:end="51:44">(</operator><name pos:start="51:45" pos:end="51:48">tmp2</name> <operator pos:start="51:50" pos:end="51:51">&gt;&gt;</operator> <literal type="number" pos:start="51:53" pos:end="51:53">1</literal><operator pos:start="51:54" pos:end="51:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></else></if_stmt>
    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
