<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/550/550.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:17"><decl pos:start="3:1" pos:end="3:16"><type pos:start="3:1" pos:end="3:6"><name pos:start="3:1" pos:end="3:6">string</name></type> <name pos:start="3:8" pos:end="3:16"><name pos:start="3:8" pos:end="3:11">name</name><index pos:start="3:12" pos:end="3:16">[<expr pos:start="3:13" pos:end="3:15"><literal type="number" pos:start="3:13" pos:end="3:15">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:24"><decl pos:start="4:1" pos:end="4:13"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:9">front</name> <init pos:start="4:11" pos:end="4:13">= <expr pos:start="4:13" pos:end="4:13"><literal type="number" pos:start="4:13" pos:end="4:13">0</literal></expr></init></decl>, <decl pos:start="4:16" pos:end="4:23"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:16" pos:end="4:19">rear</name> <init pos:start="4:21" pos:end="4:23">= <expr pos:start="4:23" pos:end="4:23"><literal type="number" pos:start="4:23" pos:end="4:23">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="12:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:5">c</name><parameter_list pos:start="5:6" pos:end="5:15">(<parameter pos:start="5:7" pos:end="5:14"><decl pos:start="5:7" pos:end="5:14"><type pos:start="5:7" pos:end="5:12"><name pos:start="5:7" pos:end="5:12">string</name></type> <name pos:start="5:14" pos:end="5:14">x</name></decl></parameter>)</parameter_list> <block pos:start="5:17" pos:end="12:1">{<block_content pos:start="6:5" pos:end="11:14">
    <for pos:start="6:5" pos:end="10:5">for <control pos:start="6:9" pos:end="6:38">(<init pos:start="6:10" pos:end="6:23"><decl pos:start="6:10" pos:end="6:22"><type pos:start="6:10" pos:end="6:12"><name pos:start="6:10" pos:end="6:12">int</name></type> <name pos:start="6:14" pos:end="6:14">i</name> <init pos:start="6:16" pos:end="6:22">= <expr pos:start="6:18" pos:end="6:22"><name pos:start="6:18" pos:end="6:22">front</name></expr></init></decl>;</init> <condition pos:start="6:25" pos:end="6:33"><expr pos:start="6:25" pos:end="6:32"><name pos:start="6:25" pos:end="6:25">i</name> <operator pos:start="6:27" pos:end="6:27">&lt;</operator> <name pos:start="6:29" pos:end="6:32">rear</name></expr>;</condition> <incr pos:start="6:35" pos:end="6:37"><expr pos:start="6:35" pos:end="6:37"><name pos:start="6:35" pos:end="6:35">i</name><operator pos:start="6:36" pos:end="6:37">++</operator></expr></incr>)</control> <block pos:start="6:40" pos:end="10:5">{<block_content pos:start="7:9" pos:end="9:9">
        <if_stmt pos:start="7:9" pos:end="9:9"><if pos:start="7:9" pos:end="9:9">if <condition pos:start="7:12" pos:end="7:25">(<expr pos:start="7:13" pos:end="7:24"><name pos:start="7:13" pos:end="7:19"><name pos:start="7:13" pos:end="7:16">name</name><index pos:start="7:17" pos:end="7:19">[<expr pos:start="7:18" pos:end="7:18"><name pos:start="7:18" pos:end="7:18">i</name></expr>]</index></name> <operator pos:start="7:21" pos:end="7:22">==</operator> <name pos:start="7:24" pos:end="7:24">x</name></expr>)</condition> <block pos:start="7:27" pos:end="9:9">{<block_content pos:start="8:13" pos:end="8:21">
            <return pos:start="8:13" pos:end="8:21">return <expr pos:start="8:20" pos:end="8:20"><name pos:start="8:20" pos:end="8:20">i</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="11:5" pos:end="11:14">return <expr pos:start="11:12" pos:end="11:13"><operator pos:start="11:12" pos:end="11:12">-</operator><literal type="number" pos:start="11:13" pos:end="11:13">1</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="13:1" pos:end="39:1"><type pos:start="13:1" pos:end="13:3"><name pos:start="13:1" pos:end="13:3">int</name></type> <name pos:start="13:5" pos:end="13:8">main</name><parameter_list pos:start="13:9" pos:end="13:10">()</parameter_list> <block pos:start="13:12" pos:end="39:1">{<block_content pos:start="14:5" pos:end="38:13">
    <decl_stmt pos:start="14:5" pos:end="14:10"><decl pos:start="14:5" pos:end="14:9"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:13"><expr pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:7">cin</name> <operator pos:start="15:9" pos:end="15:10">&gt;&gt;</operator> <name pos:start="15:12" pos:end="15:12">n</name></expr>;</expr_stmt>
    <for pos:start="16:5" pos:end="37:5">for <control pos:start="16:9" pos:end="16:31">(<init pos:start="16:10" pos:end="16:19"><decl pos:start="16:10" pos:end="16:18"><type pos:start="16:10" pos:end="16:12"><name pos:start="16:10" pos:end="16:12">int</name></type> <name pos:start="16:14" pos:end="16:14">i</name> <init pos:start="16:16" pos:end="16:18">= <expr pos:start="16:18" pos:end="16:18"><literal type="number" pos:start="16:18" pos:end="16:18">0</literal></expr></init></decl>;</init> <condition pos:start="16:21" pos:end="16:26"><expr pos:start="16:21" pos:end="16:25"><name pos:start="16:21" pos:end="16:21">i</name> <operator pos:start="16:23" pos:end="16:23">&lt;</operator> <name pos:start="16:25" pos:end="16:25">n</name></expr>;</condition> <incr pos:start="16:28" pos:end="16:30"><expr pos:start="16:28" pos:end="16:30"><name pos:start="16:28" pos:end="16:28">i</name><operator pos:start="16:29" pos:end="16:30">++</operator></expr></incr>)</control> <block pos:start="16:33" pos:end="37:5">{<block_content pos:start="17:9" pos:end="36:9">
        <decl_stmt pos:start="17:9" pos:end="17:18"><decl pos:start="17:9" pos:end="17:17"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">k</name> <init pos:start="17:15" pos:end="17:17">= <expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="18:9" pos:end="18:17"><expr pos:start="18:9" pos:end="18:16"><name pos:start="18:9" pos:end="18:11">cin</name> <operator pos:start="18:13" pos:end="18:14">&gt;&gt;</operator> <name pos:start="18:16" pos:end="18:16">k</name></expr>;</expr_stmt>
        <if_stmt pos:start="19:9" pos:end="36:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="19:19">(<expr pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:13">k</name> <operator pos:start="19:15" pos:end="19:16">==</operator> <literal type="number" pos:start="19:18" pos:end="19:18">1</literal></expr>)</condition> <block pos:start="19:21" pos:end="29:9">{<block_content pos:start="20:13" pos:end="28:13">
            <expr_stmt pos:start="20:13" pos:end="20:30"><expr pos:start="20:13" pos:end="20:29"><name pos:start="20:13" pos:end="20:15">cin</name> <operator pos:start="20:17" pos:end="20:18">&gt;&gt;</operator> <name pos:start="20:20" pos:end="20:29"><name pos:start="20:20" pos:end="20:23">name</name><index pos:start="20:24" pos:end="20:29">[<expr pos:start="20:25" pos:end="20:28"><name pos:start="20:25" pos:end="20:28">rear</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:19"><expr pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:16">rear</name><operator pos:start="21:17" pos:end="21:18">++</operator></expr>;</expr_stmt>
            <if_stmt pos:start="22:13" pos:end="28:13"><if pos:start="22:13" pos:end="28:13">if <condition pos:start="22:16" pos:end="22:40">(<expr pos:start="22:17" pos:end="22:39"><call pos:start="22:17" pos:end="22:33"><name pos:start="22:17" pos:end="22:17">c</name><argument_list pos:start="22:18" pos:end="22:33">(<argument pos:start="22:19" pos:end="22:32"><expr pos:start="22:19" pos:end="22:32"><name pos:start="22:19" pos:end="22:32"><name pos:start="22:19" pos:end="22:22">name</name><index pos:start="22:23" pos:end="22:32">[<expr pos:start="22:24" pos:end="22:31"><name pos:start="22:24" pos:end="22:27">rear</name> <operator pos:start="22:29" pos:end="22:29">-</operator> <literal type="number" pos:start="22:31" pos:end="22:31">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="22:35" pos:end="22:36">!=</operator> <operator pos:start="22:38" pos:end="22:38">-</operator><literal type="number" pos:start="22:39" pos:end="22:39">1</literal></expr>)</condition> <block pos:start="22:42" pos:end="28:13">{<block_content pos:start="23:17" pos:end="27:44">
                <decl_stmt pos:start="23:17" pos:end="23:42"><decl pos:start="23:17" pos:end="23:41"><type pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">string</name></type> <name pos:start="23:24" pos:end="23:24">t</name> <init pos:start="23:26" pos:end="23:41">= <expr pos:start="23:28" pos:end="23:41"><name pos:start="23:28" pos:end="23:41"><name pos:start="23:28" pos:end="23:31">name</name><index pos:start="23:32" pos:end="23:41">[<expr pos:start="23:33" pos:end="23:40"><name pos:start="23:33" pos:end="23:36">rear</name> <operator pos:start="23:38" pos:end="23:38">-</operator> <literal type="number" pos:start="23:40" pos:end="23:40">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <for pos:start="24:17" pos:end="26:17">for <control pos:start="24:21" pos:end="24:66">(<init pos:start="24:22" pos:end="24:51"><decl pos:start="24:22" pos:end="24:50"><type pos:start="24:22" pos:end="24:24"><name pos:start="24:22" pos:end="24:24">int</name></type> <name pos:start="24:26" pos:end="24:26">i</name> <init pos:start="24:28" pos:end="24:50">= <expr pos:start="24:30" pos:end="24:50"><call pos:start="24:30" pos:end="24:46"><name pos:start="24:30" pos:end="24:30">c</name><argument_list pos:start="24:31" pos:end="24:46">(<argument pos:start="24:32" pos:end="24:45"><expr pos:start="24:32" pos:end="24:45"><name pos:start="24:32" pos:end="24:45"><name pos:start="24:32" pos:end="24:35">name</name><index pos:start="24:36" pos:end="24:45">[<expr pos:start="24:37" pos:end="24:44"><name pos:start="24:37" pos:end="24:40">rear</name> <operator pos:start="24:42" pos:end="24:42">-</operator> <literal type="number" pos:start="24:44" pos:end="24:44">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="24:48" pos:end="24:48">+</operator> <literal type="number" pos:start="24:50" pos:end="24:50">1</literal></expr></init></decl>;</init> <condition pos:start="24:53" pos:end="24:61"><expr pos:start="24:53" pos:end="24:60"><name pos:start="24:53" pos:end="24:53">i</name> <operator pos:start="24:55" pos:end="24:55">&lt;</operator> <name pos:start="24:57" pos:end="24:60">rear</name></expr>;</condition> <incr pos:start="24:63" pos:end="24:65"><expr pos:start="24:63" pos:end="24:65"><name pos:start="24:63" pos:end="24:63">i</name><operator pos:start="24:64" pos:end="24:65">++</operator></expr></incr>)</control> <block pos:start="24:68" pos:end="26:17">{<block_content pos:start="25:21" pos:end="25:42">
                    <expr_stmt pos:start="25:21" pos:end="25:42"><expr pos:start="25:21" pos:end="25:41"><name pos:start="25:21" pos:end="25:27"><name pos:start="25:21" pos:end="25:24">name</name><index pos:start="25:25" pos:end="25:27">[<expr pos:start="25:26" pos:end="25:26"><name pos:start="25:26" pos:end="25:26">i</name></expr>]</index></name> <operator pos:start="25:29" pos:end="25:29">=</operator> <name pos:start="25:31" pos:end="25:41"><name pos:start="25:31" pos:end="25:34">name</name><index pos:start="25:35" pos:end="25:41">[<expr pos:start="25:36" pos:end="25:40"><name pos:start="25:36" pos:end="25:36">i</name> <operator pos:start="25:38" pos:end="25:38">+</operator> <literal type="number" pos:start="25:40" pos:end="25:40">1</literal></expr>]</index></name></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt pos:start="27:17" pos:end="27:44"><expr pos:start="27:17" pos:end="27:43"><name pos:start="27:17" pos:end="27:39"><name pos:start="27:17" pos:end="27:20">name</name><index pos:start="27:21" pos:end="27:39">[<expr pos:start="27:22" pos:end="27:38"><call pos:start="27:22" pos:end="27:38"><name pos:start="27:22" pos:end="27:22">c</name><argument_list pos:start="27:23" pos:end="27:38">(<argument pos:start="27:24" pos:end="27:37"><expr pos:start="27:24" pos:end="27:37"><name pos:start="27:24" pos:end="27:37"><name pos:start="27:24" pos:end="27:27">name</name><index pos:start="27:28" pos:end="27:37">[<expr pos:start="27:29" pos:end="27:36"><name pos:start="27:29" pos:end="27:32">rear</name> <operator pos:start="27:34" pos:end="27:34">-</operator> <literal type="number" pos:start="27:36" pos:end="27:36">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="27:41" pos:end="27:41">=</operator> <name pos:start="27:43" pos:end="27:43">t</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if> <else pos:start="29:11" pos:end="36:9">else <block pos:start="29:16" pos:end="36:9">{<block_content pos:start="30:13" pos:end="35:13">
            <if_stmt pos:start="30:13" pos:end="35:13"><if pos:start="30:13" pos:end="32:13">if <condition pos:start="30:16" pos:end="30:30">(<expr pos:start="30:17" pos:end="30:29"><name pos:start="30:17" pos:end="30:21">front</name> <operator pos:start="30:23" pos:end="30:24">==</operator> <name pos:start="30:26" pos:end="30:29">rear</name></expr>)</condition> <block pos:start="30:32" pos:end="32:13">{<block_content pos:start="31:17" pos:end="31:34">
                <expr_stmt pos:start="31:17" pos:end="31:34"><expr pos:start="31:17" pos:end="31:33"><name pos:start="31:17" pos:end="31:20">cout</name> <operator pos:start="31:22" pos:end="31:23">&lt;&lt;</operator> <literal type="number" pos:start="31:25" pos:end="31:25">0</literal> <operator pos:start="31:27" pos:end="31:28">&lt;&lt;</operator> <name pos:start="31:30" pos:end="31:33">endl</name></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="32:15" pos:end="35:13">else <block pos:start="32:20" pos:end="35:13">{<block_content pos:start="33:17" pos:end="34:24">
                <expr_stmt pos:start="33:17" pos:end="33:44"><expr pos:start="33:17" pos:end="33:43"><name pos:start="33:17" pos:end="33:20">cout</name> <operator pos:start="33:22" pos:end="33:23">&lt;&lt;</operator> <name pos:start="33:25" pos:end="33:35"><name pos:start="33:25" pos:end="33:28">name</name><index pos:start="33:29" pos:end="33:35">[<expr pos:start="33:30" pos:end="33:34"><name pos:start="33:30" pos:end="33:34">front</name></expr>]</index></name> <operator pos:start="33:37" pos:end="33:38">&lt;&lt;</operator> <name pos:start="33:40" pos:end="33:43">endl</name></expr>;</expr_stmt>
                <expr_stmt pos:start="34:17" pos:end="34:24"><expr pos:start="34:17" pos:end="34:23"><name pos:start="34:17" pos:end="34:21">front</name><operator pos:start="34:22" pos:end="34:23">++</operator></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <return pos:start="38:5" pos:end="38:13">return <expr pos:start="38:12" pos:end="38:12"><literal type="number" pos:start="38:12" pos:end="38:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
