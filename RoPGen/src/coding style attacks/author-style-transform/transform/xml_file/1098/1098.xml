<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1098/1098.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:20"><decl pos:start="3:1" pos:end="3:19"><type pos:start="3:1" pos:end="3:11"><name pos:start="3:1" pos:end="3:11"><name pos:start="3:1" pos:end="3:6">vector</name><argument_list type="generic" pos:start="3:7" pos:end="3:11">&lt;<argument pos:start="3:8" pos:end="3:10"><expr pos:start="3:8" pos:end="3:10"><name pos:start="3:8" pos:end="3:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="3:13" pos:end="3:19"><name pos:start="3:13" pos:end="3:13">G</name><index pos:start="3:14" pos:end="3:19">[<expr pos:start="3:15" pos:end="3:18"><literal type="number" pos:start="3:15" pos:end="3:18">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:34"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">t</name></decl>, <decl pos:start="4:8" pos:end="4:8"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:8" pos:end="4:8">n</name></decl>, <decl pos:start="4:11" pos:end="4:11"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:11" pos:end="4:11">x</name></decl>, <decl pos:start="4:14" pos:end="4:14"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:14" pos:end="4:14">y</name></decl>, <decl pos:start="4:17" pos:end="4:24"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:17" pos:end="4:24"><name pos:start="4:17" pos:end="4:18">fa</name><index pos:start="4:19" pos:end="4:24">[<expr pos:start="4:20" pos:end="4:23"><literal type="number" pos:start="4:20" pos:end="4:23">1005</literal></expr>]</index></name></decl>, <decl pos:start="4:27" pos:end="4:33"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:27" pos:end="4:29">cnt</name> <init pos:start="4:31" pos:end="4:33">= <expr pos:start="4:33" pos:end="4:33"><literal type="number" pos:start="4:33" pos:end="4:33">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:9"><decl pos:start="5:1" pos:end="5:8"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type>  <name pos:start="5:6" pos:end="5:8">son</name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="38:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list> <block pos:start="6:12" pos:end="38:1">{<block_content pos:start="7:5" pos:end="37:13">
    <expr_stmt pos:start="7:5" pos:end="7:31"><expr pos:start="7:5" pos:end="7:30"><call pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:30">(<argument pos:start="7:13" pos:end="7:18"><expr pos:start="7:13" pos:end="7:18"><literal type="string" pos:start="7:13" pos:end="7:18">"p.in"</literal></expr></argument>, <argument pos:start="7:21" pos:end="7:23"><expr pos:start="7:21" pos:end="7:23"><literal type="string" pos:start="7:21" pos:end="7:23">"r"</literal></expr></argument>,<argument pos:start="7:25" pos:end="7:29"><expr pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:29">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:34"><expr pos:start="8:5" pos:end="8:33"><call pos:start="8:5" pos:end="8:33"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:33">(<argument pos:start="8:13" pos:end="8:19"><expr pos:start="8:13" pos:end="8:19"><literal type="string" pos:start="8:13" pos:end="8:19">"p.out"</literal></expr></argument>, <argument pos:start="8:22" pos:end="8:24"><expr pos:start="8:22" pos:end="8:24"><literal type="string" pos:start="8:22" pos:end="8:24">"w"</literal></expr></argument>, <argument pos:start="8:27" pos:end="8:32"><expr pos:start="8:27" pos:end="8:32"><name pos:start="8:27" pos:end="8:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:18"><expr pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:7">cin</name> <operator pos:start="9:9" pos:end="9:10">&gt;&gt;</operator> <name pos:start="9:12" pos:end="9:12">t</name> <operator pos:start="9:14" pos:end="9:15">&gt;&gt;</operator> <name pos:start="9:17" pos:end="9:17">n</name></expr>;</expr_stmt>
    <while pos:start="10:5" pos:end="33:5">while<condition pos:start="10:10" pos:end="10:14">(<expr pos:start="10:11" pos:end="10:13"><name pos:start="10:11" pos:end="10:11">t</name><operator pos:start="10:12" pos:end="10:13">--</operator></expr>)</condition> <block pos:start="10:16" pos:end="33:5">{<block_content pos:start="11:9" pos:end="32:9">
        <for pos:start="11:9" pos:end="15:9">for<control pos:start="11:12" pos:end="11:38">(<init pos:start="11:13" pos:end="11:22"><decl pos:start="11:13" pos:end="11:21"><type pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:15">int</name></type> <name pos:start="11:17" pos:end="11:17">i</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</init> <condition pos:start="11:24" pos:end="11:33"><expr pos:start="11:24" pos:end="11:32"><name pos:start="11:24" pos:end="11:24">i</name> <operator pos:start="11:26" pos:end="11:26">&lt;</operator> <name pos:start="11:28" pos:end="11:28">n</name> <operator pos:start="11:30" pos:end="11:30">-</operator> <literal type="number" pos:start="11:32" pos:end="11:32">1</literal></expr>;</condition> <incr pos:start="11:35" pos:end="11:37"><expr pos:start="11:35" pos:end="11:37"><name pos:start="11:35" pos:end="11:35">i</name><operator pos:start="11:36" pos:end="11:37">++</operator></expr></incr>)</control> <block pos:start="11:40" pos:end="15:9">{<block_content pos:start="12:13" pos:end="14:22">
            <expr_stmt pos:start="12:13" pos:end="12:26"><expr pos:start="12:13" pos:end="12:25"><name pos:start="12:13" pos:end="12:15">cin</name> <operator pos:start="12:17" pos:end="12:18">&gt;&gt;</operator> <name pos:start="12:20" pos:end="12:20">x</name> <operator pos:start="12:22" pos:end="12:23">&gt;&gt;</operator> <name pos:start="12:25" pos:end="12:25">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:30"><expr pos:start="13:13" pos:end="13:29"><name pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:13">G</name><index pos:start="13:14" pos:end="13:16">[<expr pos:start="13:15" pos:end="13:15"><name pos:start="13:15" pos:end="13:15">x</name></expr>]</index></name><operator pos:start="13:17" pos:end="13:17">.</operator><call pos:start="13:18" pos:end="13:29"><name pos:start="13:18" pos:end="13:26">push_back</name><argument_list pos:start="13:27" pos:end="13:29">(<argument pos:start="13:28" pos:end="13:28"><expr pos:start="13:28" pos:end="13:28"><name pos:start="13:28" pos:end="13:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:22"><expr pos:start="14:13" pos:end="14:21"><name pos:start="14:13" pos:end="14:17"><name pos:start="14:13" pos:end="14:14">fa</name><index pos:start="14:15" pos:end="14:17">[<expr pos:start="14:16" pos:end="14:16"><name pos:start="14:16" pos:end="14:16">x</name></expr>]</index></name> <operator pos:start="14:19" pos:end="14:19">=</operator> <name pos:start="14:21" pos:end="14:21">y</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="16:9" pos:end="27:9">for<control pos:start="16:12" pos:end="16:35">(<init pos:start="16:13" pos:end="16:22"><decl pos:start="16:13" pos:end="16:21"><type pos:start="16:13" pos:end="16:15"><name pos:start="16:13" pos:end="16:15">int</name></type> <name pos:start="16:17" pos:end="16:17">i</name> <init pos:start="16:19" pos:end="16:21">= <expr pos:start="16:21" pos:end="16:21"><literal type="number" pos:start="16:21" pos:end="16:21">1</literal></expr></init></decl>;</init> <condition pos:start="16:24" pos:end="16:30"><expr pos:start="16:24" pos:end="16:29"><name pos:start="16:24" pos:end="16:24">i</name> <operator pos:start="16:26" pos:end="16:27">&lt;=</operator> <name pos:start="16:29" pos:end="16:29">n</name></expr>;</condition> <incr pos:start="16:32" pos:end="16:34"><expr pos:start="16:32" pos:end="16:34"><name pos:start="16:32" pos:end="16:32">i</name><operator pos:start="16:33" pos:end="16:34">++</operator></expr></incr>)</control> <block pos:start="16:37" pos:end="27:9">{<block_content pos:start="17:13" pos:end="26:13">
            <decl_stmt pos:start="17:13" pos:end="17:26"><decl pos:start="17:13" pos:end="17:25"><type pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:16">bool</name></type> <name pos:start="17:18" pos:end="17:18">f</name> <init pos:start="17:20" pos:end="17:25">= <expr pos:start="17:22" pos:end="17:25"><literal type="boolean" pos:start="17:22" pos:end="17:25">true</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="18:13" pos:end="23:13">for<control pos:start="18:16" pos:end="18:48">(<init pos:start="18:17" pos:end="18:26"><decl pos:start="18:17" pos:end="18:25"><type pos:start="18:17" pos:end="18:19"><name pos:start="18:17" pos:end="18:19">int</name></type> <name pos:start="18:21" pos:end="18:21">j</name> <init pos:start="18:23" pos:end="18:25">= <expr pos:start="18:25" pos:end="18:25"><literal type="number" pos:start="18:25" pos:end="18:25">0</literal></expr></init></decl>;</init> <condition pos:start="18:28" pos:end="18:43"><expr pos:start="18:28" pos:end="18:42"><name pos:start="18:28" pos:end="18:28">j</name> <operator pos:start="18:30" pos:end="18:30">&lt;</operator> <name pos:start="18:32" pos:end="18:35"><name pos:start="18:32" pos:end="18:32">G</name><index pos:start="18:33" pos:end="18:35">[<expr pos:start="18:34" pos:end="18:34"><name pos:start="18:34" pos:end="18:34">i</name></expr>]</index></name><operator pos:start="18:36" pos:end="18:36">.</operator><call pos:start="18:37" pos:end="18:42"><name pos:start="18:37" pos:end="18:40">size</name><argument_list pos:start="18:41" pos:end="18:42">()</argument_list></call></expr>;</condition> <incr pos:start="18:45" pos:end="18:47"><expr pos:start="18:45" pos:end="18:47"><name pos:start="18:45" pos:end="18:45">j</name><operator pos:start="18:46" pos:end="18:47">++</operator></expr></incr>)</control> <block pos:start="18:50" pos:end="23:13">{<block_content pos:start="19:17" pos:end="22:17">
                <if_stmt pos:start="19:17" pos:end="22:17"><if pos:start="19:17" pos:end="22:17">if<condition pos:start="19:19" pos:end="19:51">(<expr pos:start="19:20" pos:end="19:50"><name pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:20">G</name><index pos:start="19:21" pos:end="19:23">[<expr pos:start="19:22" pos:end="19:22"><name pos:start="19:22" pos:end="19:22">i</name></expr>]</index></name><operator pos:start="19:24" pos:end="19:24">.</operator><call pos:start="19:25" pos:end="19:30"><name pos:start="19:25" pos:end="19:28">size</name><argument_list pos:start="19:29" pos:end="19:30">()</argument_list></call> <operator pos:start="19:32" pos:end="19:32">&lt;</operator> <name pos:start="19:34" pos:end="19:43"><name pos:start="19:34" pos:end="19:34">G</name><index pos:start="19:35" pos:end="19:43">[<expr pos:start="19:36" pos:end="19:42"><name pos:start="19:36" pos:end="19:42"><name pos:start="19:36" pos:end="19:36">G</name><index pos:start="19:37" pos:end="19:39">[<expr pos:start="19:38" pos:end="19:38"><name pos:start="19:38" pos:end="19:38">i</name></expr>]</index><index pos:start="19:40" pos:end="19:42">[<expr pos:start="19:41" pos:end="19:41"><name pos:start="19:41" pos:end="19:41">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="19:44" pos:end="19:44">.</operator><call pos:start="19:45" pos:end="19:50"><name pos:start="19:45" pos:end="19:48">size</name><argument_list pos:start="19:49" pos:end="19:50">()</argument_list></call></expr>)</condition> <block pos:start="19:53" pos:end="22:17">{<block_content pos:start="20:21" pos:end="21:26">
                    <expr_stmt pos:start="20:21" pos:end="20:30"><expr pos:start="20:21" pos:end="20:29"><name pos:start="20:21" pos:end="20:21">f</name> <operator pos:start="20:23" pos:end="20:23">=</operator> <literal type="boolean" pos:start="20:25" pos:end="20:29">false</literal></expr>;</expr_stmt>
                    <break pos:start="21:21" pos:end="21:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="24:13" pos:end="26:13"><if pos:start="24:13" pos:end="26:13">if<condition pos:start="24:15" pos:end="24:53">(<expr pos:start="24:16" pos:end="24:52"><name pos:start="24:16" pos:end="24:16">f</name> <operator pos:start="24:18" pos:end="24:19">&amp;&amp;</operator> <operator pos:start="24:21" pos:end="24:21">(</operator><name pos:start="24:22" pos:end="24:25"><name pos:start="24:22" pos:end="24:22">G</name><index pos:start="24:23" pos:end="24:25">[<expr pos:start="24:24" pos:end="24:24"><name pos:start="24:24" pos:end="24:24">i</name></expr>]</index></name><operator pos:start="24:26" pos:end="24:26">.</operator><call pos:start="24:27" pos:end="24:32"><name pos:start="24:27" pos:end="24:30">size</name><argument_list pos:start="24:31" pos:end="24:32">()</argument_list></call> <operator pos:start="24:34" pos:end="24:35">&gt;=</operator> <name pos:start="24:37" pos:end="24:44"><name pos:start="24:37" pos:end="24:37">G</name><index pos:start="24:38" pos:end="24:44">[<expr pos:start="24:39" pos:end="24:43"><name pos:start="24:39" pos:end="24:43"><name pos:start="24:39" pos:end="24:40">fa</name><index pos:start="24:41" pos:end="24:43">[<expr pos:start="24:42" pos:end="24:42"><name pos:start="24:42" pos:end="24:42">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="24:45" pos:end="24:45">.</operator><call pos:start="24:46" pos:end="24:51"><name pos:start="24:46" pos:end="24:49">size</name><argument_list pos:start="24:50" pos:end="24:51">()</argument_list></call><operator pos:start="24:52" pos:end="24:52">)</operator></expr>)</condition> <block pos:start="24:55" pos:end="26:13">{<block_content pos:start="25:17" pos:end="25:22">
                <expr_stmt pos:start="25:17" pos:end="25:22"><expr pos:start="25:17" pos:end="25:21"><name pos:start="25:17" pos:end="25:19">cnt</name><operator pos:start="25:20" pos:end="25:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <for pos:start="28:9" pos:end="32:9">for<control pos:start="28:12" pos:end="28:35">(<init pos:start="28:13" pos:end="28:22"><decl pos:start="28:13" pos:end="28:21"><type pos:start="28:13" pos:end="28:15"><name pos:start="28:13" pos:end="28:15">int</name></type> <name pos:start="28:17" pos:end="28:17">i</name> <init pos:start="28:19" pos:end="28:21">= <expr pos:start="28:21" pos:end="28:21"><literal type="number" pos:start="28:21" pos:end="28:21">0</literal></expr></init></decl>;</init> <condition pos:start="28:24" pos:end="28:30"><expr pos:start="28:24" pos:end="28:29"><name pos:start="28:24" pos:end="28:24">i</name> <operator pos:start="28:26" pos:end="28:27">&lt;=</operator> <name pos:start="28:29" pos:end="28:29">n</name></expr>;</condition> <incr pos:start="28:32" pos:end="28:34"><expr pos:start="28:32" pos:end="28:34"><name pos:start="28:32" pos:end="28:32">i</name><operator pos:start="28:33" pos:end="28:34">++</operator></expr></incr>)</control> <block pos:start="28:37" pos:end="32:9">{<block_content pos:start="29:13" pos:end="31:37">
            <expr_stmt pos:start="29:13" pos:end="29:38"><expr pos:start="29:13" pos:end="29:37"><call pos:start="29:13" pos:end="29:37"><name pos:start="29:13" pos:end="29:18">memset</name><argument_list pos:start="29:19" pos:end="29:37">(<argument pos:start="29:20" pos:end="29:21"><expr pos:start="29:20" pos:end="29:21"><name pos:start="29:20" pos:end="29:21">fa</name></expr></argument>, <argument pos:start="29:24" pos:end="29:24"><expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr></argument>, <argument pos:start="29:27" pos:end="29:36"><expr pos:start="29:27" pos:end="29:36"><sizeof pos:start="29:27" pos:end="29:36">sizeof<argument_list pos:start="29:33" pos:end="29:36">(<argument pos:start="29:34" pos:end="29:35"><expr pos:start="29:34" pos:end="29:35"><name pos:start="29:34" pos:end="29:35">fa</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="30:13" pos:end="30:25"><expr pos:start="30:13" pos:end="30:24"><name pos:start="30:13" pos:end="30:16"><name pos:start="30:13" pos:end="30:13">G</name><index pos:start="30:14" pos:end="30:16">[<expr pos:start="30:15" pos:end="30:15"><name pos:start="30:15" pos:end="30:15">i</name></expr>]</index></name><operator pos:start="30:17" pos:end="30:17">.</operator><call pos:start="30:18" pos:end="30:24"><name pos:start="30:18" pos:end="30:22">clear</name><argument_list pos:start="30:23" pos:end="30:24">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="31:13" pos:end="31:37"><expr pos:start="31:13" pos:end="31:36"><call pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:18">vector</name><argument_list type="generic" pos:start="31:19" pos:end="31:23">&lt;<argument pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:start="31:24" pos:end="31:25">()</argument_list></call><operator pos:start="31:26" pos:end="31:26">.</operator><call pos:start="31:27" pos:end="31:36"><name pos:start="31:27" pos:end="31:30">swap</name><argument_list pos:start="31:31" pos:end="31:36">(<argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:32">G</name><index pos:start="31:33" pos:end="31:35">[<expr pos:start="31:34" pos:end="31:34"><name pos:start="31:34" pos:end="31:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></while>
    
    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:8">cout</name> <operator pos:start="35:10" pos:end="35:11">&lt;&lt;</operator> <name pos:start="35:13" pos:end="35:15">cnt</name> <operator pos:start="35:17" pos:end="35:18">&lt;&lt;</operator> <name pos:start="35:20" pos:end="35:23">endl</name></expr>;</expr_stmt>
    
    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
