<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1195/1195.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="21:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:8">cmp</name><parameter_list pos:start="4:9" pos:end="4:22">(<parameter pos:start="4:10" pos:end="4:14"><decl pos:start="4:10" pos:end="4:14"><type pos:start="4:10" pos:end="4:14"><name pos:start="4:10" pos:end="4:12">int</name></type> <name pos:start="4:14" pos:end="4:14">a</name></decl></parameter>, <parameter pos:start="4:17" pos:end="4:21"><decl pos:start="4:17" pos:end="4:21"><type pos:start="4:17" pos:end="4:21"><name pos:start="4:17" pos:end="4:19">int</name></type> <name pos:start="4:21" pos:end="4:21">b</name></decl></parameter>)</parameter_list><block pos:start="4:23" pos:end="21:1">{<block_content pos:start="5:5" pos:end="20:5">
    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">suma</name> <init pos:start="5:14" pos:end="5:16">= <expr pos:start="5:16" pos:end="5:16"><literal type="number" pos:start="5:16" pos:end="5:16">0</literal></expr></init></decl>,<decl pos:start="5:18" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:21">sumb</name> <init pos:start="5:23" pos:end="5:25">= <expr pos:start="5:25" pos:end="5:25"><literal type="number" pos:start="5:25" pos:end="5:25">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="6:5" pos:end="9:5">while<condition pos:start="6:10" pos:end="6:17">(<expr pos:start="6:11" pos:end="6:16"><name pos:start="6:11" pos:end="6:11">a</name> <operator pos:start="6:13" pos:end="6:14">!=</operator> <literal type="number" pos:start="6:16" pos:end="6:16">0</literal></expr>)</condition><block pos:start="6:18" pos:end="9:5">{<block_content pos:start="7:9" pos:end="8:16">
        <expr_stmt pos:start="7:9" pos:end="7:23"><expr pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:12">suma</name> <operator pos:start="7:14" pos:end="7:15">+=</operator> <name pos:start="7:17" pos:end="7:17">a</name> <operator pos:start="7:19" pos:end="7:19">%</operator> <literal type="number" pos:start="7:21" pos:end="7:22">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:16"><expr pos:start="8:9" pos:end="8:15"><name pos:start="8:9" pos:end="8:9">a</name> <operator pos:start="8:11" pos:end="8:12">/=</operator> <literal type="number" pos:start="8:14" pos:end="8:15">10</literal></expr>;</expr_stmt> 
    </block_content>}</block></while>
    <while pos:start="10:5" pos:end="13:5">while<condition pos:start="10:10" pos:end="10:17">(<expr pos:start="10:11" pos:end="10:16"><name pos:start="10:11" pos:end="10:11">b</name> <operator pos:start="10:13" pos:end="10:14">!=</operator> <literal type="number" pos:start="10:16" pos:end="10:16">0</literal></expr>)</condition><block pos:start="10:18" pos:end="13:5">{<block_content pos:start="11:9" pos:end="12:16">
        <expr_stmt pos:start="11:9" pos:end="11:23"><expr pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:12">sumb</name> <operator pos:start="11:14" pos:end="11:15">+=</operator> <name pos:start="11:17" pos:end="11:17">b</name> <operator pos:start="11:19" pos:end="11:19">%</operator> <literal type="number" pos:start="11:21" pos:end="11:22">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:16"><expr pos:start="12:9" pos:end="12:15"><name pos:start="12:9" pos:end="12:9">b</name> <operator pos:start="12:11" pos:end="12:12">/=</operator> <literal type="number" pos:start="12:14" pos:end="12:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while> 
    <if_stmt pos:start="14:5" pos:end="20:5"><if pos:start="14:5" pos:end="16:5">if<condition pos:start="14:7" pos:end="14:19">(<expr pos:start="14:8" pos:end="14:18"><name pos:start="14:8" pos:end="14:11">suma</name> <operator pos:start="14:13" pos:end="14:13">&gt;</operator> <name pos:start="14:15" pos:end="14:18">sumb</name></expr>)</condition><block pos:start="14:20" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:21">
        <return pos:start="15:9" pos:end="15:21">return <expr pos:start="15:16" pos:end="15:20"><literal type="boolean" pos:start="15:16" pos:end="15:20">false</literal></expr>;</return>
    </block_content>}</block></if><if type="elseif" pos:start="16:6" pos:end="18:5">else if<condition pos:start="16:13" pos:end="16:25">(<expr pos:start="16:14" pos:end="16:24"><name pos:start="16:14" pos:end="16:17">suma</name> <operator pos:start="16:19" pos:end="16:19">&lt;</operator> <name pos:start="16:21" pos:end="16:24">sumb</name></expr>)</condition><block pos:start="16:26" pos:end="18:5">{<block_content pos:start="17:9" pos:end="17:20">
        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><literal type="boolean" pos:start="17:16" pos:end="17:19">true</literal></expr>;</return>
    </block_content>}</block></if><else pos:start="18:6" pos:end="20:5">else<block pos:start="18:10" pos:end="20:5">{<block_content pos:start="19:9" pos:end="19:24">
        <return pos:start="19:9" pos:end="19:24">return <expr pos:start="19:16" pos:end="19:23"><operator pos:start="19:16" pos:end="19:16">!</operator><operator pos:start="19:17" pos:end="19:17">(</operator><name pos:start="19:18" pos:end="19:18">a</name> <operator pos:start="19:20" pos:end="19:20">&lt;</operator> <name pos:start="19:22" pos:end="19:22">b</name><operator pos:start="19:23" pos:end="19:23">)</operator></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="22:1" pos:end="33:1"><type pos:start="22:1" pos:end="22:3"><name pos:start="22:1" pos:end="22:3">int</name></type> <name pos:start="22:5" pos:end="22:8">main</name><parameter_list pos:start="22:9" pos:end="22:10">()</parameter_list><block pos:start="22:11" pos:end="33:1">{<block_content pos:start="23:5" pos:end="32:13">
    <decl_stmt pos:start="23:5" pos:end="23:17"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">n</name></decl>,<decl pos:start="23:11" pos:end="23:16"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:11" pos:end="23:16"><name pos:start="23:11" pos:end="23:11">z</name><index pos:start="23:12" pos:end="23:16">[<expr pos:start="23:13" pos:end="23:15"><literal type="number" pos:start="23:13" pos:end="23:15">110</literal></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:13"><expr pos:start="24:5" pos:end="24:12"><name pos:start="24:5" pos:end="24:7">cin</name> <operator pos:start="24:9" pos:end="24:10">&gt;&gt;</operator> <name pos:start="24:12" pos:end="24:12">n</name></expr>;</expr_stmt>
    <for pos:start="25:5" pos:end="27:5">for<control pos:start="25:8" pos:end="25:30">(<init pos:start="25:9" pos:end="25:18"><decl pos:start="25:9" pos:end="25:17"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">i</name> <init pos:start="25:15" pos:end="25:17">= <expr pos:start="25:17" pos:end="25:17"><literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr></init></decl>;</init> <condition pos:start="25:20" pos:end="25:25"><expr pos:start="25:20" pos:end="25:24"><name pos:start="25:20" pos:end="25:20">i</name> <operator pos:start="25:22" pos:end="25:22">&lt;</operator> <name pos:start="25:24" pos:end="25:24">n</name></expr>;</condition> <incr pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:27">i</name><operator pos:start="25:28" pos:end="25:29">++</operator></expr></incr>)</control><block pos:start="25:31" pos:end="27:5">{<block_content pos:start="26:9" pos:end="26:20">
        <expr_stmt pos:start="26:9" pos:end="26:20"><expr pos:start="26:9" pos:end="26:19"><name pos:start="26:9" pos:end="26:11">cin</name> <operator pos:start="26:13" pos:end="26:14">&gt;&gt;</operator> <name pos:start="26:16" pos:end="26:19"><name pos:start="26:16" pos:end="26:16">z</name><index pos:start="26:17" pos:end="26:19">[<expr pos:start="26:18" pos:end="26:18"><name pos:start="26:18" pos:end="26:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="28:5" pos:end="28:22"><expr pos:start="28:5" pos:end="28:21"><call pos:start="28:5" pos:end="28:21"><name pos:start="28:5" pos:end="28:8">sort</name><argument_list pos:start="28:9" pos:end="28:21">(<argument pos:start="28:10" pos:end="28:10"><expr pos:start="28:10" pos:end="28:10"><name pos:start="28:10" pos:end="28:10">z</name></expr></argument>,<argument pos:start="28:12" pos:end="28:16"><expr pos:start="28:12" pos:end="28:16"><name pos:start="28:12" pos:end="28:12">z</name> <operator pos:start="28:14" pos:end="28:14">+</operator> <name pos:start="28:16" pos:end="28:16">n</name></expr></argument>,<argument pos:start="28:18" pos:end="28:20"><expr pos:start="28:18" pos:end="28:20"><name pos:start="28:18" pos:end="28:20">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="29:5" pos:end="31:5">for<control pos:start="29:8" pos:end="29:30">(<init pos:start="29:9" pos:end="29:18"><decl pos:start="29:9" pos:end="29:17"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:13">i</name> <init pos:start="29:15" pos:end="29:17">= <expr pos:start="29:17" pos:end="29:17"><literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr></init></decl>;</init> <condition pos:start="29:20" pos:end="29:25"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:20">i</name> <operator pos:start="29:22" pos:end="29:22">&lt;</operator> <name pos:start="29:24" pos:end="29:24">n</name></expr>;</condition> <incr pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:27">i</name><operator pos:start="29:28" pos:end="29:29">++</operator></expr></incr>)</control><block pos:start="29:31" pos:end="31:5">{<block_content pos:start="30:9" pos:end="30:28">
        <expr_stmt pos:start="30:9" pos:end="30:28"><expr pos:start="30:9" pos:end="30:27"><name pos:start="30:9" pos:end="30:12">cout</name> <operator pos:start="30:14" pos:end="30:15">&lt;&lt;</operator> <name pos:start="30:17" pos:end="30:20"><name pos:start="30:17" pos:end="30:17">z</name><index pos:start="30:18" pos:end="30:20">[<expr pos:start="30:19" pos:end="30:19"><name pos:start="30:19" pos:end="30:19">i</name></expr>]</index></name> <operator pos:start="30:22" pos:end="30:23">&lt;&lt;</operator> <literal type="string" pos:start="30:25" pos:end="30:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="32:5" pos:end="32:13">return <expr pos:start="32:12" pos:end="32:12"><literal type="number" pos:start="32:12" pos:end="32:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
