<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/448/448.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:12"><decl pos:start="3:1" pos:end="3:11"><type pos:start="3:1" pos:end="3:9"><name pos:start="3:1" pos:end="3:4">long</name> <name pos:start="3:6" pos:end="3:9">long</name></type> <name pos:start="3:11" pos:end="3:11">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:17"><decl pos:start="4:1" pos:end="4:16"><type pos:start="4:1" pos:end="4:14"><name pos:start="4:1" pos:end="4:14"><name pos:start="4:1" pos:end="4:3">set</name><argument_list type="generic" pos:start="4:4" pos:end="4:14">&lt;<argument pos:start="4:5" pos:end="4:13"><expr pos:start="4:5" pos:end="4:13"><name pos:start="4:5" pos:end="4:8">long</name> <name pos:start="4:10" pos:end="4:13">long</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="4:16" pos:end="4:16">a</name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="35:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list> <block pos:start="5:12" pos:end="35:1">{<block_content pos:start="6:5" pos:end="34:13">
    <expr_stmt pos:start="6:5" pos:end="6:39"><expr pos:start="6:5" pos:end="6:38"><call pos:start="6:5" pos:end="6:38"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:38">(<argument pos:start="6:13" pos:end="6:25"><expr pos:start="6:13" pos:end="6:25"><literal type="string" pos:start="6:13" pos:end="6:25">"elevater.in"</literal></expr></argument>, <argument pos:start="6:28" pos:end="6:30"><expr pos:start="6:28" pos:end="6:30"><literal type="string" pos:start="6:28" pos:end="6:30">"r"</literal></expr></argument>, <argument pos:start="6:33" pos:end="6:37"><expr pos:start="6:33" pos:end="6:37"><name pos:start="6:33" pos:end="6:37">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:41"><expr pos:start="7:5" pos:end="7:40"><call pos:start="7:5" pos:end="7:40"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:40">(<argument pos:start="7:13" pos:end="7:26"><expr pos:start="7:13" pos:end="7:26"><literal type="string" pos:start="7:13" pos:end="7:26">"elevator.out"</literal></expr></argument>, <argument pos:start="7:29" pos:end="7:31"><expr pos:start="7:29" pos:end="7:31"><literal type="string" pos:start="7:29" pos:end="7:31">"w"</literal></expr></argument>, <argument pos:start="7:34" pos:end="7:39"><expr pos:start="7:34" pos:end="7:39"><name pos:start="7:34" pos:end="7:39">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:13"><expr pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:7">cin</name> <operator pos:start="8:9" pos:end="8:10">&gt;&gt;</operator> <name pos:start="8:12" pos:end="8:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:8">long</name> <name pos:start="9:10" pos:end="9:13">long</name> <name pos:start="9:15" pos:end="9:17">int</name></type> <name pos:start="9:19" pos:end="9:21">sum</name> <init pos:start="9:23" pos:end="9:25">= <expr pos:start="9:25" pos:end="9:25"><literal type="number" pos:start="9:25" pos:end="9:25">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:27"><decl pos:start="10:5" pos:end="10:16"><type pos:start="10:5" pos:end="10:13"><name pos:start="10:5" pos:end="10:8">long</name> <name pos:start="10:10" pos:end="10:13">long</name></type> <name pos:start="10:15" pos:end="10:16">x1</name></decl>, <decl pos:start="10:19" pos:end="10:26"><type ref="prev" pos:start="10:5" pos:end="10:13"/><name pos:start="10:19" pos:end="10:22">last</name> <init pos:start="10:24" pos:end="10:26">= <expr pos:start="10:26" pos:end="10:26"><literal type="number" pos:start="10:26" pos:end="10:26">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="11:5" pos:end="15:5">for <control pos:start="11:9" pos:end="11:32">(<init pos:start="11:10" pos:end="11:19"><decl pos:start="11:10" pos:end="11:18"><type pos:start="11:10" pos:end="11:12"><name pos:start="11:10" pos:end="11:12">int</name></type> <name pos:start="11:14" pos:end="11:14">i</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">1</literal></expr></init></decl>;</init> <condition pos:start="11:21" pos:end="11:27"><expr pos:start="11:21" pos:end="11:26"><name pos:start="11:21" pos:end="11:21">i</name> <operator pos:start="11:23" pos:end="11:24">&lt;=</operator> <name pos:start="11:26" pos:end="11:26">n</name></expr>;</condition> <incr pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><name pos:start="11:29" pos:end="11:29">i</name><operator pos:start="11:30" pos:end="11:31">++</operator></expr></incr>)</control> <block pos:start="11:34" pos:end="15:5">{<block_content pos:start="12:9" pos:end="14:20">
        <decl_stmt pos:start="12:9" pos:end="12:14"><decl pos:start="12:9" pos:end="12:13"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">x</name></decl>;</decl_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:17"><expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:11">cin</name> <operator pos:start="13:13" pos:end="13:14">&gt;&gt;</operator> <name pos:start="13:16" pos:end="13:16">x</name></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:20"><expr pos:start="14:9" pos:end="14:19"><call pos:start="14:9" pos:end="14:19"><name pos:start="14:9" pos:end="14:16"><name pos:start="14:9" pos:end="14:9">a</name><operator pos:start="14:10" pos:end="14:10">.</operator><name pos:start="14:11" pos:end="14:16">insert</name></name><argument_list pos:start="14:17" pos:end="14:19">(<argument pos:start="14:18" pos:end="14:18"><expr pos:start="14:18" pos:end="14:18"><name pos:start="14:18" pos:end="14:18">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="16:5" pos:end="24:5">for <control pos:start="16:9" pos:end="16:70">(<init pos:start="16:10" pos:end="16:49"><decl pos:start="16:10" pos:end="16:48"><type pos:start="16:10" pos:end="16:33"><name pos:start="16:10" pos:end="16:33"><name pos:start="16:10" pos:end="16:23"><name pos:start="16:10" pos:end="16:12">set</name><argument_list type="generic" pos:start="16:13" pos:end="16:23">&lt;<argument pos:start="16:14" pos:end="16:22"><expr pos:start="16:14" pos:end="16:22"><name pos:start="16:14" pos:end="16:17">long</name> <name pos:start="16:19" pos:end="16:22">long</name></expr></argument>&gt;</argument_list></name><operator pos:start="16:24" pos:end="16:25">::</operator><name pos:start="16:26" pos:end="16:33">iterator</name></name></type> <name pos:start="16:35" pos:end="16:36">it</name> <init pos:start="16:38" pos:end="16:48">= <expr pos:start="16:40" pos:end="16:48"><call pos:start="16:40" pos:end="16:48"><name pos:start="16:40" pos:end="16:46"><name pos:start="16:40" pos:end="16:40">a</name><operator pos:start="16:41" pos:end="16:41">.</operator><name pos:start="16:42" pos:end="16:46">begin</name></name><argument_list pos:start="16:47" pos:end="16:48">()</argument_list></call></expr></init></decl>;</init> <condition pos:start="16:51" pos:end="16:64"><expr pos:start="16:51" pos:end="16:63"><name pos:start="16:51" pos:end="16:52">it</name> <operator pos:start="16:54" pos:end="16:55">!=</operator> <call pos:start="16:57" pos:end="16:63"><name pos:start="16:57" pos:end="16:61"><name pos:start="16:57" pos:end="16:57">a</name><operator pos:start="16:58" pos:end="16:58">.</operator><name pos:start="16:59" pos:end="16:61">end</name></name><argument_list pos:start="16:62" pos:end="16:63">()</argument_list></call></expr>;</condition> <incr pos:start="16:66" pos:end="16:69"><expr pos:start="16:66" pos:end="16:69"><name pos:start="16:66" pos:end="16:67">it</name><operator pos:start="16:68" pos:end="16:69">++</operator></expr></incr>)</control> <block pos:start="16:72" pos:end="24:5">{<block_content pos:start="17:9" pos:end="23:18">
        <expr_stmt pos:start="17:9" pos:end="17:19"><expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:10">x1</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <operator pos:start="17:14" pos:end="17:14">(</operator><operator pos:start="17:15" pos:end="17:15">*</operator><name pos:start="17:16" pos:end="17:17">it</name><operator pos:start="17:18" pos:end="17:18">)</operator></expr>;</expr_stmt>
        <if_stmt pos:start="18:9" pos:end="22:9"><if pos:start="18:9" pos:end="20:9">if <condition pos:start="18:12" pos:end="18:22">(<expr pos:start="18:13" pos:end="18:21"><name pos:start="18:13" pos:end="18:14">x1</name> <operator pos:start="18:16" pos:end="18:16">&gt;</operator> <name pos:start="18:18" pos:end="18:21">last</name></expr>)</condition> <block pos:start="18:24" pos:end="20:9">{<block_content pos:start="19:13" pos:end="19:35">
            <expr_stmt pos:start="19:13" pos:end="19:35"><expr pos:start="19:13" pos:end="19:34"><name pos:start="19:13" pos:end="19:15">sum</name> <operator pos:start="19:17" pos:end="19:18">+=</operator> <literal type="number" pos:start="19:20" pos:end="19:20">5</literal> <operator pos:start="19:22" pos:end="19:22">*</operator> <operator pos:start="19:24" pos:end="19:24">(</operator><name pos:start="19:25" pos:end="19:26">x1</name> <operator pos:start="19:28" pos:end="19:28">-</operator> <name pos:start="19:30" pos:end="19:33">last</name><operator pos:start="19:34" pos:end="19:34">)</operator></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="20:10" pos:end="22:9">else <block pos:start="20:15" pos:end="22:9">{<block_content pos:start="21:13" pos:end="21:35">
            <expr_stmt pos:start="21:13" pos:end="21:35"><expr pos:start="21:13" pos:end="21:34"><name pos:start="21:13" pos:end="21:15">sum</name> <operator pos:start="21:17" pos:end="21:18">+=</operator> <literal type="number" pos:start="21:20" pos:end="21:20">4</literal> <operator pos:start="21:22" pos:end="21:22">*</operator> <operator pos:start="21:24" pos:end="21:24">(</operator><name pos:start="21:25" pos:end="21:28">last</name> <operator pos:start="21:30" pos:end="21:30">-</operator> <name pos:start="21:32" pos:end="21:33">x1</name><operator pos:start="21:34" pos:end="21:34">)</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:12">last</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:17">x1</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:7">sum</name> <operator pos:start="25:9" pos:end="25:10">+=</operator> <call pos:start="25:12" pos:end="25:19"><name pos:start="25:12" pos:end="25:17"><name pos:start="25:12" pos:end="25:12">a</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:17">size</name></name><argument_list pos:start="25:18" pos:end="25:19">()</argument_list></call> <operator pos:start="25:21" pos:end="25:21">*</operator> <literal type="number" pos:start="25:23" pos:end="25:23">3</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:17"><expr pos:start="26:5" pos:end="26:16"><name pos:start="26:5" pos:end="26:7">sum</name> <operator pos:start="26:9" pos:end="26:10">+=</operator> <name pos:start="26:12" pos:end="26:12">n</name> <operator pos:start="26:14" pos:end="26:14">*</operator> <literal type="number" pos:start="26:16" pos:end="26:16">2</literal></expr>;</expr_stmt>
    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="30:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:10">x1</name> <operator pos:start="27:12" pos:end="27:13">==</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition> <block pos:start="27:18" pos:end="30:5">{<block_content pos:start="28:9" pos:end="29:17">
        <expr_stmt pos:start="28:9" pos:end="28:28"><expr pos:start="28:9" pos:end="28:27"><name pos:start="28:9" pos:end="28:12">cout</name> <operator pos:start="28:14" pos:end="28:15">&lt;&lt;</operator> <name pos:start="28:17" pos:end="28:19">sum</name> <operator pos:start="28:21" pos:end="28:22">&lt;&lt;</operator> <name pos:start="28:24" pos:end="28:27">endl</name></expr>;</expr_stmt>
        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>
    </block_content>}</block></if> <else pos:start="30:7" pos:end="33:5">else <block pos:start="30:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="32:28">
        <expr_stmt pos:start="31:9" pos:end="31:24"><expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:11">sum</name> <operator pos:start="31:13" pos:end="31:14">+=</operator> <name pos:start="31:16" pos:end="31:19">last</name> <operator pos:start="31:21" pos:end="31:21">*</operator> <literal type="number" pos:start="31:23" pos:end="31:23">4</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:28"><expr pos:start="32:9" pos:end="32:27"><name pos:start="32:9" pos:end="32:12">cout</name> <operator pos:start="32:14" pos:end="32:15">&lt;&lt;</operator> <name pos:start="32:17" pos:end="32:19">sum</name> <operator pos:start="32:21" pos:end="32:22">&lt;&lt;</operator> <name pos:start="32:24" pos:end="32:27">endl</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return pos:start="34:5" pos:end="34:13">return <expr pos:start="34:12" pos:end="34:12"><literal type="number" pos:start="34:12" pos:end="34:12">0</literal></expr>;</return> 
</block_content>}</block></function>
</unit>
