<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/693/693.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:18">&lt;fstream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:34"><decl pos:start="3:1" pos:end="3:17"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:11">inorder</name><index pos:start="3:12" pos:end="3:17">[<expr pos:start="3:13" pos:end="3:16"><literal type="number" pos:start="3:13" pos:end="3:16">1005</literal></expr>]</index></name></decl>,<decl pos:start="3:19" pos:end="3:33"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:19" pos:end="3:33"><name pos:start="3:19" pos:end="3:27">postorder</name><index pos:start="3:28" pos:end="3:33">[<expr pos:start="3:29" pos:end="3:32"><literal type="number" pos:start="3:29" pos:end="3:32">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:20"><decl pos:start="4:1" pos:end="4:11"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:11"><name pos:start="4:5" pos:end="4:5">l</name><index pos:start="4:6" pos:end="4:11">[<expr pos:start="4:7" pos:end="4:10"><literal type="number" pos:start="4:7" pos:end="4:10">1005</literal></expr>]</index></name></decl>,<decl pos:start="4:13" pos:end="4:19"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:13" pos:end="4:19"><name pos:start="4:13" pos:end="4:13">r</name><index pos:start="4:14" pos:end="4:19">[<expr pos:start="4:15" pos:end="4:18"><literal type="number" pos:start="4:15" pos:end="4:18">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:14"><decl pos:start="5:1" pos:end="5:13"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:7">vis</name><index pos:start="5:8" pos:end="5:13">[<expr pos:start="5:9" pos:end="5:12"><literal type="number" pos:start="5:9" pos:end="5:12">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="28:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:7">dfs</name><parameter_list pos:start="6:8" pos:end="6:36">(<parameter pos:start="6:9" pos:end="6:14"><decl pos:start="6:9" pos:end="6:14"><type pos:start="6:9" pos:end="6:14"><name pos:start="6:9" pos:end="6:11">int</name></type> <name pos:start="6:13" pos:end="6:14">l1</name></decl></parameter>,<parameter pos:start="6:16" pos:end="6:21"><decl pos:start="6:16" pos:end="6:21"><type pos:start="6:16" pos:end="6:21"><name pos:start="6:16" pos:end="6:18">int</name></type> <name pos:start="6:20" pos:end="6:21">r1</name></decl></parameter>,<parameter pos:start="6:23" pos:end="6:28"><decl pos:start="6:23" pos:end="6:28"><type pos:start="6:23" pos:end="6:28"><name pos:start="6:23" pos:end="6:25">int</name></type> <name pos:start="6:27" pos:end="6:28">l2</name></decl></parameter>,<parameter pos:start="6:30" pos:end="6:35"><decl pos:start="6:30" pos:end="6:35"><type pos:start="6:30" pos:end="6:35"><name pos:start="6:30" pos:end="6:32">int</name></type> <name pos:start="6:34" pos:end="6:35">r2</name></decl></parameter>)</parameter_list><block pos:start="6:37" pos:end="28:1">{<block_content pos:start="10:5" pos:end="27:25">
    
    
    
    <decl_stmt pos:start="10:5" pos:end="10:10"><decl pos:start="10:5" pos:end="10:9"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">k</name></decl>;</decl_stmt>
    <for pos:start="11:5" pos:end="15:5">for<control pos:start="11:8" pos:end="11:23">(<init pos:start="11:9" pos:end="11:13"><expr pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:9">k</name><operator pos:start="11:10" pos:end="11:10">=</operator><name pos:start="11:11" pos:end="11:12">l2</name></expr>;</init><condition pos:start="11:14" pos:end="11:19"><expr pos:start="11:14" pos:end="11:18"><name pos:start="11:14" pos:end="11:14">k</name><operator pos:start="11:15" pos:end="11:16">&lt;=</operator><name pos:start="11:17" pos:end="11:18">r2</name></expr>;</condition><incr pos:start="11:20" pos:end="11:22"><expr pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:20">k</name><operator pos:start="11:21" pos:end="11:22">++</operator></expr></incr>)</control><block pos:start="11:24" pos:end="15:5">{<block_content pos:start="12:9" pos:end="14:9">
        <if_stmt pos:start="12:9" pos:end="14:9"><if pos:start="12:9" pos:end="14:9">if<condition pos:start="12:11" pos:end="12:37">(<expr pos:start="12:12" pos:end="12:36"><name pos:start="12:12" pos:end="12:24"><name pos:start="12:12" pos:end="12:20">postorder</name><index pos:start="12:21" pos:end="12:24">[<expr pos:start="12:22" pos:end="12:23"><name pos:start="12:22" pos:end="12:23">r1</name></expr>]</index></name><operator pos:start="12:25" pos:end="12:26">==</operator><name pos:start="12:27" pos:end="12:36"><name pos:start="12:27" pos:end="12:33">inorder</name><index pos:start="12:34" pos:end="12:36">[<expr pos:start="12:35" pos:end="12:35"><name pos:start="12:35" pos:end="12:35">k</name></expr>]</index></name></expr>)</condition><block pos:start="12:38" pos:end="14:9">{<block_content pos:start="13:13" pos:end="13:18">
            <break pos:start="13:13" pos:end="13:18">break;</break>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    
    
    <if_stmt pos:start="18:5" pos:end="21:5"><if pos:start="18:5" pos:end="21:5">if<condition pos:start="18:7" pos:end="18:13">(<expr pos:start="18:8" pos:end="18:12"><name pos:start="18:8" pos:end="18:9">l2</name><operator pos:start="18:10" pos:end="18:11">!=</operator><name pos:start="18:12" pos:end="18:12">k</name></expr>)</condition><block pos:start="18:14" pos:end="21:5">{<block_content pos:start="19:9" pos:end="20:49">
        <decl_stmt pos:start="19:9" pos:end="19:21"><decl pos:start="19:9" pos:end="19:20"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:15">len</name><init pos:start="19:16" pos:end="19:20">=<expr pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:17">k</name><operator pos:start="19:18" pos:end="19:18">-</operator><name pos:start="19:19" pos:end="19:20">l2</name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="20:9" pos:end="20:49"><expr pos:start="20:9" pos:end="20:48"><name pos:start="20:9" pos:end="20:24"><name pos:start="20:9" pos:end="20:9">l</name><index pos:start="20:10" pos:end="20:24">[<expr pos:start="20:11" pos:end="20:23"><name pos:start="20:11" pos:end="20:23"><name pos:start="20:11" pos:end="20:19">postorder</name><index pos:start="20:20" pos:end="20:23">[<expr pos:start="20:21" pos:end="20:22"><name pos:start="20:21" pos:end="20:22">r1</name></expr>]</index></name></expr>]</index></name><operator pos:start="20:25" pos:end="20:25">=</operator><call pos:start="20:26" pos:end="20:48"><name pos:start="20:26" pos:end="20:28">dfs</name><argument_list pos:start="20:29" pos:end="20:48">(<argument pos:start="20:30" pos:end="20:31"><expr pos:start="20:30" pos:end="20:31"><name pos:start="20:30" pos:end="20:31">l1</name></expr></argument>,<argument pos:start="20:33" pos:end="20:40"><expr pos:start="20:33" pos:end="20:40"><name pos:start="20:33" pos:end="20:34">l1</name><operator pos:start="20:35" pos:end="20:35">+</operator><name pos:start="20:36" pos:end="20:38">len</name><operator pos:start="20:39" pos:end="20:39">-</operator><literal type="number" pos:start="20:40" pos:end="20:40">1</literal></expr></argument>,<argument pos:start="20:42" pos:end="20:43"><expr pos:start="20:42" pos:end="20:43"><name pos:start="20:42" pos:end="20:43">l2</name></expr></argument>,<argument pos:start="20:45" pos:end="20:47"><expr pos:start="20:45" pos:end="20:47"><name pos:start="20:45" pos:end="20:45">k</name><operator pos:start="20:46" pos:end="20:46">-</operator><literal type="number" pos:start="20:47" pos:end="20:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    
    <if_stmt pos:start="23:5" pos:end="26:5"><if pos:start="23:5" pos:end="26:5">if<condition pos:start="23:7" pos:end="23:13">(<expr pos:start="23:8" pos:end="23:12"><name pos:start="23:8" pos:end="23:9">r2</name><operator pos:start="23:10" pos:end="23:11">!=</operator><name pos:start="23:12" pos:end="23:12">k</name></expr>)</condition><block pos:start="23:14" pos:end="26:5">{<block_content pos:start="24:9" pos:end="25:49">
        <decl_stmt pos:start="24:9" pos:end="24:21"><decl pos:start="24:9" pos:end="24:20"><type pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:11">int</name></type> <name pos:start="24:13" pos:end="24:15">len</name><init pos:start="24:16" pos:end="24:20">=<expr pos:start="24:17" pos:end="24:20"><name pos:start="24:17" pos:end="24:18">r2</name><operator pos:start="24:19" pos:end="24:19">-</operator><name pos:start="24:20" pos:end="24:20">k</name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:49"><expr pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:9">r</name><index pos:start="25:10" pos:end="25:24">[<expr pos:start="25:11" pos:end="25:23"><name pos:start="25:11" pos:end="25:23"><name pos:start="25:11" pos:end="25:19">postorder</name><index pos:start="25:20" pos:end="25:23">[<expr pos:start="25:21" pos:end="25:22"><name pos:start="25:21" pos:end="25:22">r1</name></expr>]</index></name></expr>]</index></name><operator pos:start="25:25" pos:end="25:25">=</operator><call pos:start="25:26" pos:end="25:48"><name pos:start="25:26" pos:end="25:28">dfs</name><argument_list pos:start="25:29" pos:end="25:48">(<argument pos:start="25:30" pos:end="25:35"><expr pos:start="25:30" pos:end="25:35"><name pos:start="25:30" pos:end="25:31">r1</name><operator pos:start="25:32" pos:end="25:32">-</operator><name pos:start="25:33" pos:end="25:35">len</name></expr></argument>,<argument pos:start="25:37" pos:end="25:40"><expr pos:start="25:37" pos:end="25:40"><name pos:start="25:37" pos:end="25:38">r1</name><operator pos:start="25:39" pos:end="25:39">-</operator><literal type="number" pos:start="25:40" pos:end="25:40">1</literal></expr></argument>,<argument pos:start="25:42" pos:end="25:44"><expr pos:start="25:42" pos:end="25:44"><name pos:start="25:42" pos:end="25:42">k</name><operator pos:start="25:43" pos:end="25:43">+</operator><literal type="number" pos:start="25:44" pos:end="25:44">1</literal></expr></argument>,<argument pos:start="25:46" pos:end="25:47"><expr pos:start="25:46" pos:end="25:47"><name pos:start="25:46" pos:end="25:47">r2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return pos:start="27:5" pos:end="27:25">return <expr pos:start="27:12" pos:end="27:24"><name pos:start="27:12" pos:end="27:24"><name pos:start="27:12" pos:end="27:20">postorder</name><index pos:start="27:21" pos:end="27:24">[<expr pos:start="27:22" pos:end="27:23"><name pos:start="27:22" pos:end="27:23">r1</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>
<function pos:start="29:1" pos:end="49:1"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:8">main</name><parameter_list pos:start="29:9" pos:end="29:10">()</parameter_list><block pos:start="29:11" pos:end="49:1">{<block_content pos:start="30:5" pos:end="48:13">
    <decl_stmt pos:start="30:5" pos:end="30:17"><decl pos:start="30:5" pos:end="30:16"><type pos:start="30:5" pos:end="30:12"><name pos:start="30:5" pos:end="30:12">ifstream</name></type> <name pos:start="30:14" pos:end="30:16">fin</name></decl>;</decl_stmt>
    <decl_stmt pos:start="31:5" pos:end="31:18"><decl pos:start="31:5" pos:end="31:17"><type pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:12">ofstream</name></type> <name pos:start="31:14" pos:end="31:17">fout</name></decl>;</decl_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:24"><expr pos:start="32:5" pos:end="32:23"><call pos:start="32:5" pos:end="32:23"><name pos:start="32:5" pos:end="32:12"><name pos:start="32:5" pos:end="32:7">fin</name><operator pos:start="32:8" pos:end="32:8">.</operator><name pos:start="32:9" pos:end="32:12">open</name></name><argument_list pos:start="32:13" pos:end="32:23">(<argument pos:start="32:14" pos:end="32:22"><expr pos:start="32:14" pos:end="32:22"><literal type="string" pos:start="32:14" pos:end="32:22">"sort.in"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><call pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:8">fout</name><operator pos:start="33:9" pos:end="33:9">.</operator><name pos:start="33:10" pos:end="33:13">open</name></name><argument_list pos:start="33:14" pos:end="33:25">(<argument pos:start="33:15" pos:end="33:24"><expr pos:start="33:15" pos:end="33:24"><literal type="string" pos:start="33:15" pos:end="33:24">"sort.out"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="34:5" pos:end="34:10"><decl pos:start="34:5" pos:end="34:9"><type pos:start="34:5" pos:end="34:7"><name pos:start="34:5" pos:end="34:7">int</name></type> <name pos:start="34:9" pos:end="34:9">N</name></decl>;</decl_stmt>
    <for pos:start="35:5" pos:end="38:5">for<control pos:start="35:8" pos:end="35:25">(<init pos:start="35:9" pos:end="35:16"><decl pos:start="35:9" pos:end="35:15"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:13">i</name><init pos:start="35:14" pos:end="35:15">=<expr pos:start="35:15" pos:end="35:15"><literal type="number" pos:start="35:15" pos:end="35:15">1</literal></expr></init></decl>;</init><condition pos:start="35:17" pos:end="35:21"><expr pos:start="35:17" pos:end="35:20"><name pos:start="35:17" pos:end="35:17">i</name><operator pos:start="35:18" pos:end="35:19">&lt;=</operator><name pos:start="35:20" pos:end="35:20">N</name></expr>;</condition><incr pos:start="35:22" pos:end="35:24"><expr pos:start="35:22" pos:end="35:24"><name pos:start="35:22" pos:end="35:22">i</name><operator pos:start="35:23" pos:end="35:24">++</operator></expr></incr>)</control><block pos:start="35:26" pos:end="38:5">{<block_content pos:start="36:9" pos:end="37:31">
        <expr_stmt pos:start="36:9" pos:end="36:26"><expr pos:start="36:9" pos:end="36:25"><name pos:start="36:9" pos:end="36:11">fin</name><operator pos:start="36:12" pos:end="36:13">&gt;&gt;</operator><name pos:start="36:14" pos:end="36:25"><name pos:start="36:14" pos:end="36:22">postorder</name><index pos:start="36:23" pos:end="36:25">[<expr pos:start="36:24" pos:end="36:24"><name pos:start="36:24" pos:end="36:24">i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:11">vis</name><index pos:start="37:12" pos:end="37:25">[<expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:21">postorder</name><index pos:start="37:22" pos:end="37:24">[<expr pos:start="37:23" pos:end="37:23"><name pos:start="37:23" pos:end="37:23">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="37:26" pos:end="37:26">=</operator><literal type="boolean" pos:start="37:27" pos:end="37:30">true</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="39:5" pos:end="41:5">for<control pos:start="39:8" pos:end="39:25">(<init pos:start="39:9" pos:end="39:16"><decl pos:start="39:9" pos:end="39:15"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:13">i</name><init pos:start="39:14" pos:end="39:15">=<expr pos:start="39:15" pos:end="39:15"><literal type="number" pos:start="39:15" pos:end="39:15">1</literal></expr></init></decl>;</init><condition pos:start="39:17" pos:end="39:21"><expr pos:start="39:17" pos:end="39:20"><name pos:start="39:17" pos:end="39:17">i</name><operator pos:start="39:18" pos:end="39:19">&lt;=</operator><name pos:start="39:20" pos:end="39:20">N</name></expr>;</condition><incr pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><name pos:start="39:22" pos:end="39:22">i</name><operator pos:start="39:23" pos:end="39:24">++</operator></expr></incr>)</control><block pos:start="39:26" pos:end="41:5">{<block_content pos:start="40:9" pos:end="40:24">
        <expr_stmt pos:start="40:9" pos:end="40:24"><expr pos:start="40:9" pos:end="40:23"><name pos:start="40:9" pos:end="40:11">fin</name><operator pos:start="40:12" pos:end="40:13">&gt;&gt;</operator><name pos:start="40:14" pos:end="40:23"><name pos:start="40:14" pos:end="40:20">inorder</name><index pos:start="40:21" pos:end="40:23">[<expr pos:start="40:22" pos:end="40:22"><name pos:start="40:22" pos:end="40:22">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="42:5" pos:end="42:17"><expr pos:start="42:5" pos:end="42:16"><call pos:start="42:5" pos:end="42:16"><name pos:start="42:5" pos:end="42:7">dfs</name><argument_list pos:start="42:8" pos:end="42:16">(<argument pos:start="42:9" pos:end="42:9"><expr pos:start="42:9" pos:end="42:9"><literal type="number" pos:start="42:9" pos:end="42:9">1</literal></expr></argument>,<argument pos:start="42:11" pos:end="42:11"><expr pos:start="42:11" pos:end="42:11"><name pos:start="42:11" pos:end="42:11">N</name></expr></argument>,<argument pos:start="42:13" pos:end="42:13"><expr pos:start="42:13" pos:end="42:13"><literal type="number" pos:start="42:13" pos:end="42:13">1</literal></expr></argument>,<argument pos:start="42:15" pos:end="42:15"><expr pos:start="42:15" pos:end="42:15"><name pos:start="42:15" pos:end="42:15">N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="43:5" pos:end="47:5">for<control pos:start="43:8" pos:end="43:27">(<init pos:start="43:9" pos:end="43:16"><decl pos:start="43:9" pos:end="43:15"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:13">i</name><init pos:start="43:14" pos:end="43:15">=<expr pos:start="43:15" pos:end="43:15"><literal type="number" pos:start="43:15" pos:end="43:15">1</literal></expr></init></decl>;</init><condition pos:start="43:17" pos:end="43:23"><expr pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:17">i</name><operator pos:start="43:18" pos:end="43:18">&lt;</operator><literal type="number" pos:start="43:19" pos:end="43:22">1000</literal></expr>;</condition><incr pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:24">i</name><operator pos:start="43:25" pos:end="43:26">++</operator></expr></incr>)</control><block pos:start="43:28" pos:end="47:5">{<block_content pos:start="44:9" pos:end="46:9">
        <if_stmt pos:start="44:9" pos:end="46:9"><if pos:start="44:9" pos:end="46:9">if<condition pos:start="44:11" pos:end="44:18">(<expr pos:start="44:12" pos:end="44:17"><name pos:start="44:12" pos:end="44:17"><name pos:start="44:12" pos:end="44:14">vis</name><index pos:start="44:15" pos:end="44:17">[<expr pos:start="44:16" pos:end="44:16"><name pos:start="44:16" pos:end="44:16">i</name></expr>]</index></name></expr>)</condition><block pos:start="44:19" pos:end="46:9">{<block_content pos:start="45:13" pos:end="45:40">
            <expr_stmt pos:start="45:13" pos:end="45:40"><expr pos:start="45:13" pos:end="45:39"><name pos:start="45:13" pos:end="45:16">fout</name><operator pos:start="45:17" pos:end="45:18">&lt;&lt;</operator><name pos:start="45:19" pos:end="45:22"><name pos:start="45:19" pos:end="45:19">l</name><index pos:start="45:20" pos:end="45:22">[<expr pos:start="45:21" pos:end="45:21"><name pos:start="45:21" pos:end="45:21">i</name></expr>]</index></name><operator pos:start="45:23" pos:end="45:24">&lt;&lt;</operator><literal type="string" pos:start="45:25" pos:end="45:27">" "</literal><operator pos:start="45:28" pos:end="45:29">&lt;&lt;</operator><name pos:start="45:30" pos:end="45:33"><name pos:start="45:30" pos:end="45:30">r</name><index pos:start="45:31" pos:end="45:33">[<expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">i</name></expr>]</index></name><operator pos:start="45:34" pos:end="45:35">&lt;&lt;</operator><name pos:start="45:36" pos:end="45:39">endl</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="48:5" pos:end="48:13">return <expr pos:start="48:12" pos:end="48:12"><literal type="number" pos:start="48:12" pos:end="48:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
