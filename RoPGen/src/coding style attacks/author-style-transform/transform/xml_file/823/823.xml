<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/823/823.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:18"><decl pos:start="5:1" pos:end="5:17"><type pos:start="5:1" pos:end="5:6"><name pos:start="5:1" pos:end="5:6">string</name></type> <name pos:start="5:8" pos:end="5:17"><name pos:start="5:8" pos:end="5:11">data</name><index pos:start="5:12" pos:end="5:17">[<expr pos:start="5:13" pos:end="5:16"><literal type="number" pos:start="5:13" pos:end="5:16">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:17"><decl pos:start="6:1" pos:end="6:16"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">char</name></type> <name pos:start="6:6" pos:end="6:16"><name pos:start="6:6" pos:end="6:10">dataa</name><index pos:start="6:11" pos:end="6:16">[<expr pos:start="6:12" pos:end="6:15"><literal type="number" pos:start="6:12" pos:end="6:15">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:23"><decl pos:start="7:1" pos:end="7:13"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:9">floor</name> <init pos:start="7:11" pos:end="7:13">= <expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr></init></decl>,<decl pos:start="7:15" pos:end="7:22"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:15" pos:end="7:18">rear</name> <init pos:start="7:20" pos:end="7:22">= <expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="8:1" pos:end="14:1"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">void</name></type> <name pos:start="8:6" pos:end="8:8">pop</name><parameter_list pos:start="8:9" pos:end="8:10">()</parameter_list><block pos:start="8:11" pos:end="14:1">{<block_content pos:start="9:5" pos:end="13:5">
    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="11:5">if<condition pos:start="9:7" pos:end="9:20">(<expr pos:start="9:8" pos:end="9:19"><name pos:start="9:8" pos:end="9:12">floor</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <name pos:start="9:16" pos:end="9:19">rear</name></expr>)</condition><block pos:start="9:21" pos:end="11:5">{<block_content pos:start="10:9" pos:end="10:27">
        <expr_stmt pos:start="10:9" pos:end="10:27"><expr pos:start="10:9" pos:end="10:26"><name pos:start="10:9" pos:end="10:12">cout</name> <operator pos:start="10:14" pos:end="10:15">&lt;&lt;</operator> <literal type="string" pos:start="10:17" pos:end="10:19">"0"</literal> <operator pos:start="10:21" pos:end="10:22">&lt;&lt;</operator><name pos:start="10:23" pos:end="10:26">endl</name></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="11:6" pos:end="13:5">else<block pos:start="11:10" pos:end="13:5">{<block_content pos:start="12:9" pos:end="12:19">
        <expr_stmt pos:start="12:9" pos:end="12:19"><expr pos:start="12:9" pos:end="12:18"><name pos:start="12:9" pos:end="12:13">floor</name> <operator pos:start="12:15" pos:end="12:16">+=</operator> <literal type="number" pos:start="12:18" pos:end="12:18">1</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="15:1" pos:end="32:1"><type pos:start="15:1" pos:end="15:4"><name pos:start="15:1" pos:end="15:4">void</name></type> <name pos:start="15:6" pos:end="15:9">push</name><parameter_list pos:start="15:10" pos:end="15:19">(<parameter pos:start="15:11" pos:end="15:18"><decl pos:start="15:11" pos:end="15:18"><type pos:start="15:11" pos:end="15:16"><name pos:start="15:11" pos:end="15:16">string</name></type> <name pos:start="15:18" pos:end="15:18">a</name></decl></parameter>)</parameter_list><block pos:start="15:20" pos:end="32:1">{<block_content pos:start="16:5" pos:end="31:5">
    <decl_stmt pos:start="16:5" pos:end="16:22"><decl pos:start="16:5" pos:end="16:21"><type pos:start="16:5" pos:end="16:8"><name pos:start="16:5" pos:end="16:8">bool</name></type> <name pos:start="16:10" pos:end="16:17">is_dataa</name> <init pos:start="16:19" pos:end="16:21">= <expr pos:start="16:21" pos:end="16:21"><literal type="number" pos:start="16:21" pos:end="16:21">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="17:5" pos:end="27:5">for<control pos:start="17:8" pos:end="17:31">(<init pos:start="17:9" pos:end="17:18"><decl pos:start="17:9" pos:end="17:17"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">i</name> <init pos:start="17:15" pos:end="17:17">= <expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></init></decl>;</init><condition pos:start="17:19" pos:end="17:27"><expr pos:start="17:19" pos:end="17:26"><name pos:start="17:19" pos:end="17:19">i</name> <operator pos:start="17:21" pos:end="17:21">&lt;</operator> <literal type="number" pos:start="17:23" pos:end="17:26">1005</literal></expr>;</condition><incr pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:28">i</name><operator pos:start="17:29" pos:end="17:30">++</operator></expr></incr>)</control><block pos:start="17:32" pos:end="27:5">{<block_content pos:start="18:9" pos:end="26:9">
        <if_stmt pos:start="18:9" pos:end="26:9"><if pos:start="18:9" pos:end="26:9">if<condition pos:start="18:11" pos:end="18:25">(<expr pos:start="18:12" pos:end="18:24"><name pos:start="18:12" pos:end="18:16">dataa</name> <operator pos:start="18:18" pos:end="18:19">==</operator> <name pos:start="18:21" pos:end="18:24"><name pos:start="18:21" pos:end="18:21">a</name><index pos:start="18:22" pos:end="18:24">[<expr pos:start="18:23" pos:end="18:23"><literal type="number" pos:start="18:23" pos:end="18:23">0</literal></expr>]</index></name></expr>)</condition><block pos:start="18:26" pos:end="26:9">{<block_content pos:start="19:13" pos:end="25:18">
            <expr_stmt pos:start="19:13" pos:end="19:25"><expr pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:20">is_dataa</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <literal type="number" pos:start="19:24" pos:end="19:24">1</literal></expr>;</expr_stmt>
            <for pos:start="20:13" pos:end="22:13">for<control pos:start="20:16" pos:end="20:39">(<init pos:start="20:17" pos:end="20:29"><decl pos:start="20:17" pos:end="20:28"><type pos:start="20:17" pos:end="20:19"><name pos:start="20:17" pos:end="20:19">int</name></type> <name pos:start="20:21" pos:end="20:21">j</name> <init pos:start="20:23" pos:end="20:28">= <expr pos:start="20:25" pos:end="20:28"><literal type="number" pos:start="20:25" pos:end="20:28">1004</literal></expr></init></decl>;</init><condition pos:start="20:30" pos:end="20:35"><expr pos:start="20:30" pos:end="20:34"><name pos:start="20:30" pos:end="20:30">j</name> <operator pos:start="20:32" pos:end="20:32">&gt;</operator> <name pos:start="20:34" pos:end="20:34">i</name></expr>;</condition><incr pos:start="20:36" pos:end="20:38"><expr pos:start="20:36" pos:end="20:38"><name pos:start="20:36" pos:end="20:36">j</name><operator pos:start="20:37" pos:end="20:38">--</operator></expr></incr>)</control><block pos:start="20:40" pos:end="22:13">{<block_content pos:start="21:17" pos:end="21:36">
                <expr_stmt pos:start="21:17" pos:end="21:36"><expr pos:start="21:17" pos:end="21:35"><name pos:start="21:17" pos:end="21:23"><name pos:start="21:17" pos:end="21:20">data</name><index pos:start="21:21" pos:end="21:23">[<expr pos:start="21:22" pos:end="21:22"><name pos:start="21:22" pos:end="21:22">j</name></expr>]</index></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:35"><name pos:start="21:27" pos:end="21:30">data</name><index pos:start="21:31" pos:end="21:35">[<expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:32">j</name><operator pos:start="21:33" pos:end="21:33">+</operator><literal type="number" pos:start="21:34" pos:end="21:34">1</literal></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="23:13" pos:end="23:24"><expr pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:16">data</name><index pos:start="23:17" pos:end="23:19">[<expr pos:start="23:18" pos:end="23:18"><name pos:start="23:18" pos:end="23:18">i</name></expr>]</index></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:23">a</name></expr>;</expr_stmt>
            <expr_stmt pos:start="24:13" pos:end="24:22"><expr pos:start="24:13" pos:end="24:21"><name pos:start="24:13" pos:end="24:16">rear</name> <operator pos:start="24:18" pos:end="24:19">+=</operator> <literal type="number" pos:start="24:21" pos:end="24:21">1</literal></expr>;</expr_stmt>
            <break pos:start="25:13" pos:end="25:18">break;</break>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="28:5" pos:end="31:5"><if pos:start="28:5" pos:end="31:5">if<condition pos:start="28:7" pos:end="28:17">(<expr pos:start="28:8" pos:end="28:16"><operator pos:start="28:8" pos:end="28:8">!</operator><name pos:start="28:9" pos:end="28:16">is_dataa</name></expr>)</condition><block pos:start="28:18" pos:end="31:5">{<block_content pos:start="29:9" pos:end="30:18">
        <expr_stmt pos:start="29:9" pos:end="29:23"><expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:12">data</name><index pos:start="29:13" pos:end="29:18">[<expr pos:start="29:14" pos:end="29:17"><name pos:start="29:14" pos:end="29:17">rear</name></expr>]</index></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:22">a</name></expr>;</expr_stmt>
        <expr_stmt pos:start="30:9" pos:end="30:18"><expr pos:start="30:9" pos:end="30:17"><name pos:start="30:9" pos:end="30:12">rear</name> <operator pos:start="30:14" pos:end="30:15">+=</operator> <literal type="number" pos:start="30:17" pos:end="30:17">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="33:1" pos:end="47:1"><type pos:start="33:1" pos:end="33:3"><name pos:start="33:1" pos:end="33:3">int</name></type> <name pos:start="33:5" pos:end="33:8">main</name><parameter_list pos:start="33:9" pos:end="33:10">()</parameter_list><block pos:start="33:11" pos:end="47:1">{<block_content pos:start="34:5" pos:end="46:5">
    <decl_stmt pos:start="34:5" pos:end="34:10"><decl pos:start="34:5" pos:end="34:9"><type pos:start="34:5" pos:end="34:7"><name pos:start="34:5" pos:end="34:7">int</name></type> <name pos:start="34:9" pos:end="34:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:13"><expr pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:7">cin</name> <operator pos:start="35:9" pos:end="35:10">&gt;&gt;</operator> <name pos:start="35:12" pos:end="35:12">n</name></expr>;</expr_stmt>
    <while pos:start="36:5" pos:end="46:5">while<condition pos:start="36:10" pos:end="36:14">(<expr pos:start="36:11" pos:end="36:13"><name pos:start="36:11" pos:end="36:11">n</name><operator pos:start="36:12" pos:end="36:13">--</operator></expr>)</condition><block pos:start="36:15" pos:end="46:5">{<block_content pos:start="37:9" pos:end="45:9">
        <decl_stmt pos:start="37:9" pos:end="37:15"><decl pos:start="37:9" pos:end="37:14"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:14">op</name></decl>;</decl_stmt>
        <expr_stmt pos:start="38:9" pos:end="38:18"><expr pos:start="38:9" pos:end="38:17"><name pos:start="38:9" pos:end="38:11">cin</name> <operator pos:start="38:13" pos:end="38:14">&gt;&gt;</operator> <name pos:start="38:16" pos:end="38:17">op</name></expr>;</expr_stmt>
        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="43:9">if<condition pos:start="39:11" pos:end="39:19">(<expr pos:start="39:12" pos:end="39:18"><name pos:start="39:12" pos:end="39:13">op</name> <operator pos:start="39:15" pos:end="39:16">==</operator> <literal type="number" pos:start="39:18" pos:end="39:18">1</literal></expr>)</condition><block pos:start="39:20" pos:end="43:9">{<block_content pos:start="40:13" pos:end="42:23">
            <decl_stmt pos:start="40:13" pos:end="40:24"><decl pos:start="40:13" pos:end="40:23"><type pos:start="40:13" pos:end="40:18"><name pos:start="40:13" pos:end="40:18">string</name></type> <name pos:start="40:20" pos:end="40:23">name</name></decl>;</decl_stmt>
            <expr_stmt pos:start="41:13" pos:end="41:24"><expr pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:15">cin</name> <operator pos:start="41:17" pos:end="41:18">&gt;&gt;</operator> <name pos:start="41:20" pos:end="41:23">name</name></expr>;</expr_stmt>
            <expr_stmt pos:start="42:13" pos:end="42:23"><expr pos:start="42:13" pos:end="42:22"><call pos:start="42:13" pos:end="42:22"><name pos:start="42:13" pos:end="42:16">push</name><argument_list pos:start="42:17" pos:end="42:22">(<argument pos:start="42:18" pos:end="42:21"><expr pos:start="42:18" pos:end="42:21"><name pos:start="42:18" pos:end="42:21">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="43:10" pos:end="45:9">else<block pos:start="43:14" pos:end="45:9">{<block_content pos:start="44:13" pos:end="44:18">
            <expr_stmt pos:start="44:13" pos:end="44:18"><expr pos:start="44:13" pos:end="44:17"><call pos:start="44:13" pos:end="44:17"><name pos:start="44:13" pos:end="44:15">pop</name><argument_list pos:start="44:16" pos:end="44:17">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>
</unit>
