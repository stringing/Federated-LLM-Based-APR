<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1001/1001.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:14">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:14">&lt;map&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>

<decl_stmt pos:start="6:1" pos:end="6:19"><decl pos:start="6:1" pos:end="6:18"><type pos:start="6:1" pos:end="6:13"><name pos:start="6:1" pos:end="6:13"><name pos:start="6:1" pos:end="6:3">map</name><argument_list type="generic" pos:start="6:4" pos:end="6:13">&lt;<argument pos:start="6:5" pos:end="6:7"><expr pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></expr></argument>, <argument pos:start="6:10" pos:end="6:12"><expr pos:start="6:10" pos:end="6:12"><name pos:start="6:10" pos:end="6:12">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:15" pos:end="6:18">tree</name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:13"><decl pos:start="7:1" pos:end="7:12"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:5">b</name><index pos:start="7:6" pos:end="7:12">[<expr pos:start="7:7" pos:end="7:11"><literal type="number" pos:start="7:7" pos:end="7:11">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:13"><decl pos:start="8:1" pos:end="8:12"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:5">c</name><index pos:start="8:6" pos:end="8:12">[<expr pos:start="8:7" pos:end="8:11"><literal type="number" pos:start="8:7" pos:end="8:11">10000</literal></expr>]</index></name></decl>;</decl_stmt>

<struct pos:start="10:1" pos:end="15:2">struct <name pos:start="10:8" pos:end="10:14">trenode</name>
<block pos:start="11:1" pos:end="15:1">{<public type="default" pos:start="12:5" pos:end="14:19">
    <decl_stmt pos:start="12:5" pos:end="12:11"><decl pos:start="12:5" pos:end="12:10"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:10">fa</name></decl>;</decl_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">fa1</name></decl>;</decl_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:19"><decl pos:start="14:5" pos:end="14:18"><type pos:start="14:5" pos:end="14:15"><name pos:start="14:5" pos:end="14:15"><name pos:start="14:5" pos:end="14:10">vector</name><argument_list type="generic" pos:start="14:11" pos:end="14:15">&lt;<argument pos:start="14:12" pos:end="14:14"><expr pos:start="14:12" pos:end="14:14"><name pos:start="14:12" pos:end="14:14">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="14:17" pos:end="14:18">ch</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<function pos:start="17:1" pos:end="54:1"><type pos:start="17:1" pos:end="17:3"><name pos:start="17:1" pos:end="17:3">int</name></type> <name pos:start="17:5" pos:end="17:8">main</name><parameter_list pos:start="17:9" pos:end="17:10">()</parameter_list>
<block pos:start="18:1" pos:end="54:1">{<block_content pos:start="19:5" pos:end="53:13">
    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><call pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:11">freopen</name><argument_list pos:start="19:12" pos:end="19:29">(<argument pos:start="19:13" pos:end="19:18"><expr pos:start="19:13" pos:end="19:18"><literal type="string" pos:start="19:13" pos:end="19:18">"p.in"</literal></expr></argument>,<argument pos:start="19:20" pos:end="19:22"><expr pos:start="19:20" pos:end="19:22"><literal type="string" pos:start="19:20" pos:end="19:22">"r"</literal></expr></argument>,<argument pos:start="19:24" pos:end="19:28"><expr pos:start="19:24" pos:end="19:28"><name pos:start="19:24" pos:end="19:28">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:32"><expr pos:start="20:5" pos:end="20:31"><call pos:start="20:5" pos:end="20:31"><name pos:start="20:5" pos:end="20:11">freopen</name><argument_list pos:start="20:12" pos:end="20:31">(<argument pos:start="20:13" pos:end="20:19"><expr pos:start="20:13" pos:end="20:19"><literal type="string" pos:start="20:13" pos:end="20:19">"p.out"</literal></expr></argument>,<argument pos:start="20:21" pos:end="20:23"><expr pos:start="20:21" pos:end="20:23"><literal type="string" pos:start="20:21" pos:end="20:23">"w"</literal></expr></argument>,<argument pos:start="20:25" pos:end="20:30"><expr pos:start="20:25" pos:end="20:30"><name pos:start="20:25" pos:end="20:30">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:10">vector</name><argument_list type="generic" pos:start="21:11" pos:end="21:19">&lt;<argument pos:start="21:12" pos:end="21:18"><expr pos:start="21:12" pos:end="21:18"><name pos:start="21:12" pos:end="21:18">trenode</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="21:21" pos:end="21:21">a</name></decl>;</decl_stmt>
    <decl_stmt pos:start="22:5" pos:end="22:10"><decl pos:start="22:5" pos:end="22:9"><type pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></type> <name pos:start="22:9" pos:end="22:9">t</name></decl>;</decl_stmt>
    <decl_stmt pos:start="23:5" pos:end="23:14"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">p</name> <init pos:start="23:11" pos:end="23:13">= <expr pos:start="23:13" pos:end="23:13"><literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:11"><expr pos:start="24:5" pos:end="24:10"><name pos:start="24:5" pos:end="24:7">cin</name><operator pos:start="24:8" pos:end="24:9">&gt;&gt;</operator><name pos:start="24:10" pos:end="24:10">t</name></expr>;</expr_stmt>
    <decl_stmt pos:start="25:5" pos:end="25:15"><decl pos:start="25:5" pos:end="25:14"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:10">t1</name> <init pos:start="25:12" pos:end="25:14">= <expr pos:start="25:14" pos:end="25:14"><literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="26:5" pos:end="51:5">for<control pos:start="26:8" pos:end="26:30">(<init pos:start="26:9" pos:end="26:18"><decl pos:start="26:9" pos:end="26:17"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:13">i</name> <init pos:start="26:15" pos:end="26:17">= <expr pos:start="26:17" pos:end="26:17"><literal type="number" pos:start="26:17" pos:end="26:17">0</literal></expr></init></decl>;</init> <condition pos:start="26:20" pos:end="26:25"><expr pos:start="26:20" pos:end="26:24"><name pos:start="26:20" pos:end="26:20">i</name> <operator pos:start="26:22" pos:end="26:22">&lt;</operator> <name pos:start="26:24" pos:end="26:24">t</name></expr>;</condition> <incr pos:start="26:27" pos:end="26:29"><expr pos:start="26:27" pos:end="26:29"><name pos:start="26:27" pos:end="26:27">i</name><operator pos:start="26:28" pos:end="26:29">++</operator></expr></incr>)</control>
    <block pos:start="27:5" pos:end="51:5">{<block_content pos:start="28:9" pos:end="50:9">
        <decl_stmt pos:start="28:9" pos:end="28:14"><decl pos:start="28:9" pos:end="28:13"><type pos:start="28:9" pos:end="28:11"><name pos:start="28:9" pos:end="28:11">int</name></type> <name pos:start="28:13" pos:end="28:13">n</name></decl>;</decl_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:15"><expr pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:11">cin</name><operator pos:start="29:12" pos:end="29:13">&gt;&gt;</operator><name pos:start="29:14" pos:end="29:14">n</name></expr>;</expr_stmt>
        <for pos:start="30:9" pos:end="42:9">for<control pos:start="30:12" pos:end="30:38">(<init pos:start="30:13" pos:end="30:22"><decl pos:start="30:13" pos:end="30:21"><type pos:start="30:13" pos:end="30:15"><name pos:start="30:13" pos:end="30:15">int</name></type> <name pos:start="30:17" pos:end="30:17">j</name> <init pos:start="30:19" pos:end="30:21">= <expr pos:start="30:21" pos:end="30:21"><literal type="number" pos:start="30:21" pos:end="30:21">0</literal></expr></init></decl>;</init> <condition pos:start="30:24" pos:end="30:33"><expr pos:start="30:24" pos:end="30:32"><name pos:start="30:24" pos:end="30:24">j</name> <operator pos:start="30:26" pos:end="30:26">&lt;</operator> <name pos:start="30:28" pos:end="30:28">n</name> <operator pos:start="30:30" pos:end="30:30">-</operator> <literal type="number" pos:start="30:32" pos:end="30:32">1</literal></expr>;</condition> <incr pos:start="30:35" pos:end="30:37"><expr pos:start="30:35" pos:end="30:37"><name pos:start="30:35" pos:end="30:35">j</name><operator pos:start="30:36" pos:end="30:37">++</operator></expr></incr>)</control>
        <block pos:start="31:9" pos:end="42:9">{<block_content pos:start="32:13" pos:end="41:29">
            <decl_stmt pos:start="32:13" pos:end="32:21"><decl pos:start="32:13" pos:end="32:17"><type pos:start="32:13" pos:end="32:15"><name pos:start="32:13" pos:end="32:15">int</name></type> <name pos:start="32:17" pos:end="32:17">x</name></decl>, <decl pos:start="32:20" pos:end="32:20"><type ref="prev" pos:start="32:13" pos:end="32:15"/><name pos:start="32:20" pos:end="32:20">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="33:13" pos:end="33:22"><expr pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:15">cin</name><operator pos:start="33:16" pos:end="33:17">&gt;&gt;</operator><name pos:start="33:18" pos:end="33:18">x</name><operator pos:start="33:19" pos:end="33:20">&gt;&gt;</operator><name pos:start="33:21" pos:end="33:21">y</name></expr>;</expr_stmt>
            
            <decl_stmt pos:start="35:13" pos:end="35:24"><decl pos:start="35:13" pos:end="35:23"><type pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:19">trenode</name></type> <name pos:start="35:21" pos:end="35:23">tmp</name></decl>;</decl_stmt>
            <expr_stmt pos:start="36:13" pos:end="36:23"><expr pos:start="36:13" pos:end="36:22"><name pos:start="36:13" pos:end="36:18"><name pos:start="36:13" pos:end="36:15">tmp</name><operator pos:start="36:16" pos:end="36:16">.</operator><name pos:start="36:17" pos:end="36:18">fa</name></name> <operator pos:start="36:20" pos:end="36:20">=</operator> <name pos:start="36:22" pos:end="36:22">x</name></expr>;</expr_stmt>
            <expr_stmt pos:start="37:13" pos:end="37:22"><expr pos:start="37:13" pos:end="37:21"><name pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">tmp</name><operator pos:start="37:16" pos:end="37:16">.</operator><name pos:start="37:17" pos:end="37:19">fa1</name></name><operator pos:start="37:20" pos:end="37:21">++</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="38:13" pos:end="38:32"><expr pos:start="38:13" pos:end="38:31"><call pos:start="38:13" pos:end="38:31"><name pos:start="38:13" pos:end="38:28"><name pos:start="38:13" pos:end="38:15">tmp</name><operator pos:start="38:16" pos:end="38:16">.</operator><name pos:start="38:17" pos:end="38:18">ch</name><operator pos:start="38:19" pos:end="38:19">.</operator><name pos:start="38:20" pos:end="38:28">push_back</name></name><argument_list pos:start="38:29" pos:end="38:31">(<argument pos:start="38:30" pos:end="38:30"><expr pos:start="38:30" pos:end="38:30"><name pos:start="38:30" pos:end="38:30">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            

            <expr_stmt pos:start="41:13" pos:end="41:29"><expr pos:start="41:13" pos:end="41:28"><call pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:13">a</name><operator pos:start="41:14" pos:end="41:14">.</operator><name pos:start="41:15" pos:end="41:23">push_back</name></name><argument_list pos:start="41:24" pos:end="41:28">(<argument pos:start="41:25" pos:end="41:27"><expr pos:start="41:25" pos:end="41:27"><name pos:start="41:25" pos:end="41:27">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="43:9" pos:end="50:9">for<control pos:start="43:12" pos:end="43:35">(<init pos:start="43:13" pos:end="43:22"><decl pos:start="43:13" pos:end="43:21"><type pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">int</name></type> <name pos:start="43:17" pos:end="43:17">j</name> <init pos:start="43:19" pos:end="43:21">= <expr pos:start="43:21" pos:end="43:21"><literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr></init></decl>;</init> <condition pos:start="43:24" pos:end="43:30"><expr pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:24">j</name> <operator pos:start="43:26" pos:end="43:26">&lt;</operator> <name pos:start="43:28" pos:end="43:29">t1</name></expr>;</condition> <incr pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:32">j</name><operator pos:start="43:33" pos:end="43:34">++</operator></expr></incr>)</control>
        <block pos:start="44:9" pos:end="50:9">{<block_content pos:start="45:13" pos:end="49:13">
            <decl_stmt pos:start="45:13" pos:end="45:30"><decl pos:start="45:13" pos:end="45:29"><type pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">int</name></type> <name pos:start="45:17" pos:end="45:18">t2</name> <init pos:start="45:20" pos:end="45:29">= <expr pos:start="45:22" pos:end="45:29"><name pos:start="45:22" pos:end="45:25"><name pos:start="45:22" pos:end="45:22">a</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">j</name></expr>]</index></name><operator pos:start="45:26" pos:end="45:26">.</operator><name pos:start="45:27" pos:end="45:29">fa1</name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="46:13" pos:end="49:13"><if pos:start="46:13" pos:end="49:13">if<condition pos:start="46:15" pos:end="46:40">(<expr pos:start="46:16" pos:end="46:39"><name pos:start="46:16" pos:end="46:17">t2</name> <operator pos:start="46:19" pos:end="46:20">&gt;=</operator> <name pos:start="46:22" pos:end="46:35"><name pos:start="46:22" pos:end="46:22">a</name><index pos:start="46:23" pos:end="46:35">[<expr pos:start="46:24" pos:end="46:34"><name pos:start="46:24" pos:end="46:24">j</name> <operator pos:start="46:26" pos:end="46:26">+</operator> <name pos:start="46:28" pos:end="46:31"><name pos:start="46:28" pos:end="46:28">a</name><index pos:start="46:29" pos:end="46:31">[<expr pos:start="46:30" pos:end="46:30"><name pos:start="46:30" pos:end="46:30">j</name></expr>]</index></name><operator pos:start="46:32" pos:end="46:32">.</operator><name pos:start="46:33" pos:end="46:34">fa</name></expr>]</index></name><operator pos:start="46:36" pos:end="46:36">.</operator><name pos:start="46:37" pos:end="46:39">fa1</name></expr>)</condition>
            <block pos:start="47:13" pos:end="49:13">{<block_content pos:start="48:17" pos:end="48:20">
                <expr_stmt pos:start="48:17" pos:end="48:20"><expr pos:start="48:17" pos:end="48:19"><name pos:start="48:17" pos:end="48:17">p</name><operator pos:start="48:18" pos:end="48:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="52:5" pos:end="52:18"><expr pos:start="52:5" pos:end="52:17"><name pos:start="52:5" pos:end="52:8">cout</name><operator pos:start="52:9" pos:end="52:10">&lt;&lt;</operator><name pos:start="52:11" pos:end="52:11">p</name><operator pos:start="52:12" pos:end="52:13">&lt;&lt;</operator><name pos:start="52:14" pos:end="52:17">endl</name></expr>;</expr_stmt>
    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
