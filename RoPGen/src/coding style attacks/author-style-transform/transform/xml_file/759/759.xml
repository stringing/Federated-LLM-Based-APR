<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/759/759.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="10:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">sum</name><parameter_list pos:start="3:8" pos:end="3:14">(<parameter pos:start="3:9" pos:end="3:13"><decl pos:start="3:9" pos:end="3:13"><type pos:start="3:9" pos:end="3:11"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:13">x</name></decl></parameter>)</parameter_list><block pos:start="3:15" pos:end="10:1">{<block_content pos:start="4:5" pos:end="9:13">
    <decl_stmt pos:start="4:5" pos:end="4:12"><decl pos:start="4:5" pos:end="4:11"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">s</name><init pos:start="4:10" pos:end="4:11">=<expr pos:start="4:11" pos:end="4:11"><literal type="number" pos:start="4:11" pos:end="4:11">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="5:5" pos:end="8:5">while<condition pos:start="5:10" pos:end="5:12">(<expr pos:start="5:11" pos:end="5:11"><name pos:start="5:11" pos:end="5:11">x</name></expr>)</condition><block pos:start="5:13" pos:end="8:5">{<block_content pos:start="6:9" pos:end="7:14">
        <expr_stmt pos:start="6:9" pos:end="6:16"><expr pos:start="6:9" pos:end="6:15"><name pos:start="6:9" pos:end="6:9">s</name><operator pos:start="6:10" pos:end="6:11">+=</operator><name pos:start="6:12" pos:end="6:12">x</name><operator pos:start="6:13" pos:end="6:13">%</operator><literal type="number" pos:start="6:14" pos:end="6:15">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="7:9" pos:end="7:14"><expr pos:start="7:9" pos:end="7:13"><name pos:start="7:9" pos:end="7:9">x</name><operator pos:start="7:10" pos:end="7:11">/=</operator><literal type="number" pos:start="7:12" pos:end="7:13">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="9:5" pos:end="9:13">return <expr pos:start="9:12" pos:end="9:12"><name pos:start="9:12" pos:end="9:12">s</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="11:1" pos:end="22:1"><type pos:start="11:1" pos:end="11:3"><name pos:start="11:1" pos:end="11:3">int</name></type> <name pos:start="11:5" pos:end="11:8">main</name><parameter_list pos:start="11:9" pos:end="11:10">()</parameter_list><block pos:start="11:11" pos:end="22:1">{<block_content pos:start="12:5" pos:end="21:13">
    <decl_stmt pos:start="12:5" pos:end="12:17"><decl pos:start="12:5" pos:end="12:9"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:9">n</name></decl>,<decl pos:start="12:11" pos:end="12:16"><type ref="prev" pos:start="12:5" pos:end="12:7"/><name pos:start="12:11" pos:end="12:16"><name pos:start="12:11" pos:end="12:11">a</name><index pos:start="12:12" pos:end="12:16">[<expr pos:start="12:13" pos:end="12:15"><literal type="number" pos:start="12:13" pos:end="12:15">102</literal></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:11"><expr pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:7">cin</name><operator pos:start="13:8" pos:end="13:9">&gt;&gt;</operator><name pos:start="13:10" pos:end="13:10">n</name></expr>;</expr_stmt>
    <for pos:start="14:5" pos:end="16:5">for<control pos:start="14:8" pos:end="14:24">(<init pos:start="14:9" pos:end="14:16"><decl pos:start="14:9" pos:end="14:15"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:13">i</name><init pos:start="14:14" pos:end="14:15">=<expr pos:start="14:15" pos:end="14:15"><literal type="number" pos:start="14:15" pos:end="14:15">0</literal></expr></init></decl>;</init><condition pos:start="14:17" pos:end="14:20"><expr pos:start="14:17" pos:end="14:19"><name pos:start="14:17" pos:end="14:17">i</name><operator pos:start="14:18" pos:end="14:18">&lt;</operator><name pos:start="14:19" pos:end="14:19">n</name></expr>;</condition><incr pos:start="14:21" pos:end="14:23"><expr pos:start="14:21" pos:end="14:23"><name pos:start="14:21" pos:end="14:21">i</name><operator pos:start="14:22" pos:end="14:23">++</operator></expr></incr>)</control><block pos:start="14:25" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:18">
        <expr_stmt pos:start="15:9" pos:end="15:18"><expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:11">cin</name><operator pos:start="15:12" pos:end="15:13">&gt;&gt;</operator><name pos:start="15:14" pos:end="15:17"><name pos:start="15:14" pos:end="15:14">a</name><index pos:start="15:15" pos:end="15:17">[<expr pos:start="15:16" pos:end="15:16"><name pos:start="15:16" pos:end="15:16">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="17:5" pos:end="17:16"><expr pos:start="17:5" pos:end="17:15"><call pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:8">sort</name><argument_list pos:start="17:9" pos:end="17:15">(<argument pos:start="17:10" pos:end="17:10"><expr pos:start="17:10" pos:end="17:10"><name pos:start="17:10" pos:end="17:10">a</name></expr></argument>,<argument pos:start="17:12" pos:end="17:14"><expr pos:start="17:12" pos:end="17:14"><name pos:start="17:12" pos:end="17:12">a</name><operator pos:start="17:13" pos:end="17:13">+</operator><name pos:start="17:14" pos:end="17:14">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="18:5" pos:end="20:5">for<control pos:start="18:8" pos:end="18:24">(<init pos:start="18:9" pos:end="18:16"><decl pos:start="18:9" pos:end="18:15"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">i</name><init pos:start="18:14" pos:end="18:15">=<expr pos:start="18:15" pos:end="18:15"><literal type="number" pos:start="18:15" pos:end="18:15">0</literal></expr></init></decl>;</init><condition pos:start="18:17" pos:end="18:20"><expr pos:start="18:17" pos:end="18:19"><name pos:start="18:17" pos:end="18:17">i</name><operator pos:start="18:18" pos:end="18:18">&lt;</operator><name pos:start="18:19" pos:end="18:19">n</name></expr>;</condition><incr pos:start="18:21" pos:end="18:23"><expr pos:start="18:21" pos:end="18:23"><name pos:start="18:21" pos:end="18:21">i</name><operator pos:start="18:22" pos:end="18:23">++</operator></expr></incr>)</control><block pos:start="18:25" pos:end="20:5">{<block_content pos:start="19:9" pos:end="19:24">
        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:12">cout</name><operator pos:start="19:13" pos:end="19:14">&lt;&lt;</operator><name pos:start="19:15" pos:end="19:18"><name pos:start="19:15" pos:end="19:15">a</name><index pos:start="19:16" pos:end="19:18">[<expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">i</name></expr>]</index></name><operator pos:start="19:19" pos:end="19:20">&lt;&lt;</operator><literal type="string" pos:start="19:21" pos:end="19:23">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="21:5" pos:end="21:13">return <expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
