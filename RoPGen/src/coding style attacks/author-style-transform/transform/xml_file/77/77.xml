<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/77/77.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:20">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<function pos:start="5:1" pos:end="21:5"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list> <block pos:start="5:12" pos:end="21:5">{<block_content pos:start="6:5" pos:end="20:13">
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">n</name></decl>, <decl pos:start="6:12" pos:end="6:12"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:12" pos:end="6:12">d</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:13"><expr pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">cin</name> <operator pos:start="7:9" pos:end="7:10">&gt;&gt;</operator> <name pos:start="7:12" pos:end="7:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:13"><decl pos:start="8:5" pos:end="8:12"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:12">sprt</name></decl>;</decl_stmt>
    <for pos:start="9:5" pos:end="19:9">for<control pos:start="9:8" pos:end="9:35">(<init pos:start="9:9" pos:end="9:18"><decl pos:start="9:9" pos:end="9:17"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">i</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></init></decl>;</init> <condition pos:start="9:20" pos:end="9:30"><expr pos:start="9:20" pos:end="9:29"><name pos:start="9:20" pos:end="9:20">i</name> <operator pos:start="9:22" pos:end="9:22">*</operator> <name pos:start="9:24" pos:end="9:24">i</name> <operator pos:start="9:26" pos:end="9:27">&lt;=</operator> <name pos:start="9:29" pos:end="9:29">n</name></expr>;</condition> <incr pos:start="9:32" pos:end="9:34"><expr pos:start="9:32" pos:end="9:34"><name pos:start="9:32" pos:end="9:32">i</name><operator pos:start="9:33" pos:end="9:34">++</operator></expr></incr>)</control><block pos:start="9:36" pos:end="19:9">{<block_content pos:start="10:9" pos:end="18:13">
        <for pos:start="10:9" pos:end="18:13">for<control pos:start="10:12" pos:end="10:46">(<init pos:start="10:13" pos:end="10:22"><decl pos:start="10:13" pos:end="10:21"><type pos:start="10:13" pos:end="10:15"><name pos:start="10:13" pos:end="10:15">int</name></type> <name pos:start="10:17" pos:end="10:17">j</name> <init pos:start="10:19" pos:end="10:21">= <expr pos:start="10:21" pos:end="10:21"><literal type="number" pos:start="10:21" pos:end="10:21">0</literal></expr></init></decl>;</init><condition pos:start="10:23" pos:end="10:41"><expr pos:start="10:23" pos:end="10:40"><name pos:start="10:23" pos:end="10:23">i</name> <operator pos:start="10:25" pos:end="10:25">*</operator> <name pos:start="10:27" pos:end="10:27">i</name> <operator pos:start="10:29" pos:end="10:29">+</operator> <name pos:start="10:31" pos:end="10:31">j</name> <operator pos:start="10:33" pos:end="10:33">*</operator> <name pos:start="10:35" pos:end="10:35">j</name> <operator pos:start="10:37" pos:end="10:38">&lt;=</operator> <name pos:start="10:40" pos:end="10:40">n</name></expr>;</condition> <incr pos:start="10:43" pos:end="10:45"><expr pos:start="10:43" pos:end="10:45"><name pos:start="10:43" pos:end="10:43">j</name><operator pos:start="10:44" pos:end="10:45">++</operator></expr></incr>)</control><block pos:start="10:47" pos:end="18:13">{<block_content pos:start="11:13" pos:end="17:17">
            <for pos:start="11:13" pos:end="17:17">for<control pos:start="11:16" pos:end="11:58">(<init pos:start="11:17" pos:end="11:26"><decl pos:start="11:17" pos:end="11:25"><type pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:19">int</name></type> <name pos:start="11:21" pos:end="11:21">k</name> <init pos:start="11:23" pos:end="11:25">= <expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr></init></decl>;</init><condition pos:start="11:27" pos:end="11:53"><expr pos:start="11:27" pos:end="11:52"><name pos:start="11:27" pos:end="11:27">i</name> <operator pos:start="11:29" pos:end="11:29">*</operator> <name pos:start="11:31" pos:end="11:31">i</name> <operator pos:start="11:33" pos:end="11:33">+</operator> <name pos:start="11:35" pos:end="11:35">j</name> <operator pos:start="11:37" pos:end="11:37">*</operator> <name pos:start="11:39" pos:end="11:39">j</name> <operator pos:start="11:41" pos:end="11:41">+</operator> <name pos:start="11:43" pos:end="11:43">k</name> <operator pos:start="11:45" pos:end="11:45">*</operator> <name pos:start="11:47" pos:end="11:47">k</name> <operator pos:start="11:49" pos:end="11:50">&lt;=</operator> <name pos:start="11:52" pos:end="11:52">n</name></expr>;</condition> <incr pos:start="11:55" pos:end="11:57"><expr pos:start="11:55" pos:end="11:57"><name pos:start="11:55" pos:end="11:55">k</name><operator pos:start="11:56" pos:end="11:57">++</operator></expr></incr>)</control><block pos:start="11:59" pos:end="17:17">{<block_content pos:start="12:17" pos:end="16:17">
                <expr_stmt pos:start="12:17" pos:end="12:52"><expr pos:start="12:17" pos:end="12:51"><name pos:start="12:17" pos:end="12:17">d</name> <operator pos:start="12:19" pos:end="12:19">=</operator> <call pos:start="12:21" pos:end="12:51"><name pos:start="12:21" pos:end="12:24">sprt</name><argument_list pos:start="12:25" pos:end="12:51">(<argument pos:start="12:26" pos:end="12:50"><expr pos:start="12:26" pos:end="12:50"><name pos:start="12:26" pos:end="12:26">n</name> <operator pos:start="12:28" pos:end="12:28">-</operator> <name pos:start="12:30" pos:end="12:30">i</name> <operator pos:start="12:32" pos:end="12:32">*</operator> <name pos:start="12:34" pos:end="12:34">i</name> <operator pos:start="12:36" pos:end="12:36">-</operator> <name pos:start="12:38" pos:end="12:38">j</name> <operator pos:start="12:40" pos:end="12:40">*</operator> <name pos:start="12:42" pos:end="12:42">j</name> <operator pos:start="12:44" pos:end="12:44">-</operator> <name pos:start="12:46" pos:end="12:46">k</name> <operator pos:start="12:48" pos:end="12:48">*</operator> <name pos:start="12:50" pos:end="12:50">k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="13:17" pos:end="16:17"><if pos:start="13:17" pos:end="16:17">if<condition pos:start="13:19" pos:end="13:54">(<expr pos:start="13:20" pos:end="13:53"><name pos:start="13:20" pos:end="13:20">i</name> <operator pos:start="13:22" pos:end="13:22">*</operator> <name pos:start="13:24" pos:end="13:24">i</name> <operator pos:start="13:26" pos:end="13:26">+</operator> <name pos:start="13:28" pos:end="13:28">j</name> <operator pos:start="13:30" pos:end="13:30">*</operator> <name pos:start="13:32" pos:end="13:32">j</name> <operator pos:start="13:34" pos:end="13:34">+</operator> <name pos:start="13:36" pos:end="13:36">k</name> <operator pos:start="13:38" pos:end="13:38">*</operator> <name pos:start="13:40" pos:end="13:40">k</name> <operator pos:start="13:42" pos:end="13:42">+</operator> <name pos:start="13:44" pos:end="13:44">d</name> <operator pos:start="13:46" pos:end="13:46">*</operator> <name pos:start="13:48" pos:end="13:48">d</name> <operator pos:start="13:50" pos:end="13:51">&lt;=</operator> <name pos:start="13:53" pos:end="13:53">n</name></expr>)</condition><block pos:start="13:55" pos:end="16:17">{<block_content pos:start="14:21" pos:end="15:29">
                    <expr_stmt pos:start="14:21" pos:end="14:51"><expr pos:start="14:21" pos:end="14:50"><call pos:start="14:21" pos:end="14:50"><name pos:start="14:21" pos:end="14:26">printf</name> <argument_list pos:start="14:28" pos:end="14:50">(<argument pos:start="14:29" pos:end="14:41"><expr pos:start="14:29" pos:end="14:41"><literal type="string" pos:start="14:29" pos:end="14:41">"%d %d %d %d"</literal></expr></argument>,<argument pos:start="14:43" pos:end="14:43"><expr pos:start="14:43" pos:end="14:43"><name pos:start="14:43" pos:end="14:43">i</name></expr></argument>,<argument pos:start="14:45" pos:end="14:45"><expr pos:start="14:45" pos:end="14:45"><name pos:start="14:45" pos:end="14:45">j</name></expr></argument>,<argument pos:start="14:47" pos:end="14:47"><expr pos:start="14:47" pos:end="14:47"><name pos:start="14:47" pos:end="14:47">k</name></expr></argument>,<argument pos:start="14:49" pos:end="14:49"><expr pos:start="14:49" pos:end="14:49"><name pos:start="14:49" pos:end="14:49">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return pos:start="15:21" pos:end="15:29">return <expr pos:start="15:28" pos:end="15:28"><literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>
                </block_content>}</block></for>
            </block_content>}</block></for>
        </block_content>}</block></for>
    <return pos:start="20:5" pos:end="20:13">return <expr pos:start="20:12" pos:end="20:12"><literal type="number" pos:start="20:12" pos:end="20:12">0</literal></expr>;</return>
    </block_content>}</block></function>
</unit>
