<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1057/1057.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="40:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="40:1">{<block_content pos:start="5:5" pos:end="39:13">
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:13"><expr pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:7">cin</name> <operator pos:start="6:9" pos:end="6:10">&gt;&gt;</operator> <name pos:start="6:12" pos:end="6:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:14"><expr pos:start="7:5" pos:end="7:13"><call pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">getchar</name><argument_list pos:start="7:12" pos:end="7:13">()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:24"><decl pos:start="8:5" pos:end="8:23"><type pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:10">string</name></type> <name pos:start="8:12" pos:end="8:17"><name pos:start="8:12" pos:end="8:12">f</name><index pos:start="8:13" pos:end="8:17">[<expr pos:start="8:14" pos:end="8:16"><literal type="number" pos:start="8:14" pos:end="8:16">105</literal></expr>]</index></name> <init pos:start="8:19" pos:end="8:23">= <expr pos:start="8:21" pos:end="8:23"><block pos:start="8:21" pos:end="8:23">{ }</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">x</name></decl>;</decl_stmt>
    <while pos:start="10:5" pos:end="38:5">while<condition pos:start="10:10" pos:end="10:14">(<expr pos:start="10:11" pos:end="10:13"><name pos:start="10:11" pos:end="10:11">n</name><operator pos:start="10:12" pos:end="10:13">--</operator></expr>)</condition><block pos:start="10:15" pos:end="38:5">{<block_content pos:start="11:9" pos:end="37:21">
        <decl_stmt pos:start="11:9" pos:end="11:17"><decl pos:start="11:9" pos:end="11:16"><type pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:14">string</name></type> <name pos:start="11:16" pos:end="11:16">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:24"><expr pos:start="12:9" pos:end="12:23"><call pos:start="12:9" pos:end="12:23"><name pos:start="12:9" pos:end="12:15">getline</name><argument_list pos:start="12:16" pos:end="12:23">(<argument pos:start="12:17" pos:end="12:19"><expr pos:start="12:17" pos:end="12:19"><name pos:start="12:17" pos:end="12:19">cin</name></expr></argument>, <argument pos:start="12:22" pos:end="12:22"><expr pos:start="12:22" pos:end="12:22"><name pos:start="12:22" pos:end="12:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:14"><expr pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:9">x</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr>;</expr_stmt>
        <for pos:start="14:9" pos:end="26:9">for <control pos:start="14:13" pos:end="14:42">(<init pos:start="14:14" pos:end="14:23"><decl pos:start="14:14" pos:end="14:22"><type pos:start="14:14" pos:end="14:16"><name pos:start="14:14" pos:end="14:16">int</name></type> <name pos:start="14:18" pos:end="14:18">i</name> <init pos:start="14:20" pos:end="14:22">= <expr pos:start="14:22" pos:end="14:22"><literal type="number" pos:start="14:22" pos:end="14:22">0</literal></expr></init></decl>;</init> <condition pos:start="14:25" pos:end="14:37"><expr pos:start="14:25" pos:end="14:36"><name pos:start="14:25" pos:end="14:25">i</name> <operator pos:start="14:27" pos:end="14:27">&lt;</operator> <call pos:start="14:29" pos:end="14:36"><name pos:start="14:29" pos:end="14:34"><name pos:start="14:29" pos:end="14:29">s</name><operator pos:start="14:30" pos:end="14:30">.</operator><name pos:start="14:31" pos:end="14:34">size</name></name><argument_list pos:start="14:35" pos:end="14:36">()</argument_list></call></expr>;</condition> <incr pos:start="14:39" pos:end="14:41"><expr pos:start="14:39" pos:end="14:41"><name pos:start="14:39" pos:end="14:39">i</name><operator pos:start="14:40" pos:end="14:41">++</operator></expr></incr>)</control><block pos:start="14:43" pos:end="26:9">{<block_content pos:start="15:13" pos:end="25:13">
            <if_stmt pos:start="15:13" pos:end="17:13"><if pos:start="15:13" pos:end="17:13">if<condition pos:start="15:15" pos:end="15:57">(<expr pos:start="15:16" pos:end="15:56"><name pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:16">s</name><index pos:start="15:17" pos:end="15:19">[<expr pos:start="15:18" pos:end="15:18"><name pos:start="15:18" pos:end="15:18">i</name></expr>]</index></name> <operator pos:start="15:21" pos:end="15:22">&gt;=</operator> <literal type="char" pos:start="15:24" pos:end="15:26">'A'</literal> <operator pos:start="15:28" pos:end="15:29">&amp;&amp;</operator> <name pos:start="15:31" pos:end="15:34"><name pos:start="15:31" pos:end="15:31">s</name><index pos:start="15:32" pos:end="15:34">[<expr pos:start="15:33" pos:end="15:33"><name pos:start="15:33" pos:end="15:33">i</name></expr>]</index></name> <operator pos:start="15:36" pos:end="15:37">&lt;=</operator> <literal type="char" pos:start="15:39" pos:end="15:41">'Z'</literal> <operator pos:start="15:43" pos:end="15:44">&amp;&amp;</operator> <name pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:46">s</name><index pos:start="15:47" pos:end="15:49">[<expr pos:start="15:48" pos:end="15:48"><name pos:start="15:48" pos:end="15:48">i</name></expr>]</index></name> <operator pos:start="15:51" pos:end="15:52">!=</operator> <literal type="char" pos:start="15:54" pos:end="15:56">'I'</literal></expr>)</condition><block pos:start="15:58" pos:end="17:13">{<block_content pos:start="16:17" pos:end="16:27">
                <expr_stmt pos:start="16:17" pos:end="16:27"><expr pos:start="16:17" pos:end="16:26"><name pos:start="16:17" pos:end="16:20"><name pos:start="16:17" pos:end="16:17">s</name><index pos:start="16:18" pos:end="16:20">[<expr pos:start="16:19" pos:end="16:19"><name pos:start="16:19" pos:end="16:19">i</name></expr>]</index></name> <operator pos:start="16:22" pos:end="16:23">+=</operator> <literal type="number" pos:start="16:25" pos:end="16:26">32</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="18:13" pos:end="20:13"><if pos:start="18:13" pos:end="20:13">if<condition pos:start="18:15" pos:end="18:27">(<expr pos:start="18:16" pos:end="18:26"><name pos:start="18:16" pos:end="18:19"><name pos:start="18:16" pos:end="18:16">s</name><index pos:start="18:17" pos:end="18:19">[<expr pos:start="18:18" pos:end="18:18"><name pos:start="18:18" pos:end="18:18">i</name></expr>]</index></name> <operator pos:start="18:21" pos:end="18:22">==</operator> <literal type="char" pos:start="18:24" pos:end="18:26">'?'</literal></expr>)</condition><block pos:start="18:28" pos:end="20:13">{<block_content pos:start="19:17" pos:end="19:27">
                <expr_stmt pos:start="19:17" pos:end="19:27"><expr pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:17">s</name><index pos:start="19:18" pos:end="19:20">[<expr pos:start="19:19" pos:end="19:19"><name pos:start="19:19" pos:end="19:19">i</name></expr>]</index></name> <operator pos:start="19:22" pos:end="19:22">=</operator> <literal type="char" pos:start="19:24" pos:end="19:26">'!'</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="21:13" pos:end="25:13"><if pos:start="21:13" pos:end="23:13">if<condition pos:start="21:15" pos:end="21:27">(<expr pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:16">s</name><index pos:start="21:17" pos:end="21:19">[<expr pos:start="21:18" pos:end="21:18"><name pos:start="21:18" pos:end="21:18">i</name></expr>]</index></name> <operator pos:start="21:21" pos:end="21:22">!=</operator> <literal type="char" pos:start="21:24" pos:end="21:26">' '</literal></expr>)</condition><block pos:start="21:28" pos:end="23:13">{<block_content pos:start="22:17" pos:end="22:29">
                <expr_stmt pos:start="22:17" pos:end="22:29"><expr pos:start="22:17" pos:end="22:28"><name pos:start="22:17" pos:end="22:20"><name pos:start="22:17" pos:end="22:17">f</name><index pos:start="22:18" pos:end="22:20">[<expr pos:start="22:19" pos:end="22:19"><name pos:start="22:19" pos:end="22:19">x</name></expr>]</index></name> <operator pos:start="22:22" pos:end="22:23">+=</operator> <name pos:start="22:25" pos:end="22:28"><name pos:start="22:25" pos:end="22:25">s</name><index pos:start="22:26" pos:end="22:28">[<expr pos:start="22:27" pos:end="22:27"><name pos:start="22:27" pos:end="22:27">i</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="23:15" pos:end="25:13">else <block pos:start="23:20" pos:end="25:13">{<block_content pos:start="24:17" pos:end="24:20">
                <expr_stmt pos:start="24:17" pos:end="24:20"><expr pos:start="24:17" pos:end="24:19"><name pos:start="24:17" pos:end="24:17">x</name><operator pos:start="24:18" pos:end="24:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
        <for pos:start="27:9" pos:end="36:9">for <control pos:start="27:13" pos:end="27:36">(<init pos:start="27:14" pos:end="27:23"><decl pos:start="27:14" pos:end="27:22"><type pos:start="27:14" pos:end="27:16"><name pos:start="27:14" pos:end="27:16">int</name></type> <name pos:start="27:18" pos:end="27:18">i</name> <init pos:start="27:20" pos:end="27:22">= <expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr></init></decl>;</init> <condition pos:start="27:25" pos:end="27:31"><expr pos:start="27:25" pos:end="27:30"><name pos:start="27:25" pos:end="27:25">i</name> <operator pos:start="27:27" pos:end="27:28">&lt;=</operator> <name pos:start="27:30" pos:end="27:30">x</name></expr>;</condition> <incr pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:33">i</name><operator pos:start="27:34" pos:end="27:35">++</operator></expr></incr>)</control><block pos:start="27:37" pos:end="36:9">{<block_content pos:start="28:13" pos:end="35:13">
            <if_stmt pos:start="28:13" pos:end="35:13"><if pos:start="28:13" pos:end="31:13">if<condition pos:start="28:15" pos:end="28:71">(<expr pos:start="28:16" pos:end="28:70"><operator pos:start="28:16" pos:end="28:16">(</operator><name pos:start="28:17" pos:end="28:20"><name pos:start="28:17" pos:end="28:17">f</name><index pos:start="28:18" pos:end="28:20">[<expr pos:start="28:19" pos:end="28:19"><name pos:start="28:19" pos:end="28:19">i</name></expr>]</index></name> <operator pos:start="28:22" pos:end="28:23">==</operator> <literal type="string" pos:start="28:25" pos:end="28:29">"can"</literal> <operator pos:start="28:31" pos:end="28:32">||</operator> <name pos:start="28:34" pos:end="28:37"><name pos:start="28:34" pos:end="28:34">f</name><index pos:start="28:35" pos:end="28:37">[<expr pos:start="28:36" pos:end="28:36"><name pos:start="28:36" pos:end="28:36">i</name></expr>]</index></name> <operator pos:start="28:39" pos:end="28:40">==</operator> <literal type="string" pos:start="28:42" pos:end="28:48">"could"</literal> <operator pos:start="28:50" pos:end="28:50">)</operator><operator pos:start="28:51" pos:end="28:52">&amp;&amp;</operator> <name pos:start="28:54" pos:end="28:61"><name pos:start="28:54" pos:end="28:54">f</name><index pos:start="28:55" pos:end="28:61">[<expr pos:start="28:56" pos:end="28:60"><name pos:start="28:56" pos:end="28:56">i</name> <operator pos:start="28:58" pos:end="28:58">+</operator> <literal type="number" pos:start="28:60" pos:end="28:60">1</literal></expr>]</index></name> <operator pos:start="28:63" pos:end="28:64">==</operator> <literal type="string" pos:start="28:66" pos:end="28:70">"you"</literal></expr>)</condition><block pos:start="28:72" pos:end="31:13">{<block_content pos:start="29:17" pos:end="30:20">
                <expr_stmt pos:start="29:17" pos:end="29:50"><expr pos:start="29:17" pos:end="29:49"><name pos:start="29:17" pos:end="29:20">cout</name> <operator pos:start="29:22" pos:end="29:23">&lt;&lt;</operator> <literal type="string" pos:start="29:25" pos:end="29:27">"I"</literal> <operator pos:start="29:29" pos:end="29:30">&lt;&lt;</operator> <literal type="string" pos:start="29:32" pos:end="29:34">" "</literal> <operator pos:start="29:36" pos:end="29:37">&lt;&lt;</operator> <name pos:start="29:39" pos:end="29:42"><name pos:start="29:39" pos:end="29:39">f</name><index pos:start="29:40" pos:end="29:42">[<expr pos:start="29:41" pos:end="29:41"><name pos:start="29:41" pos:end="29:41">i</name></expr>]</index></name> <operator pos:start="29:44" pos:end="29:45">&lt;&lt;</operator> <literal type="string" pos:start="29:47" pos:end="29:49">" "</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="30:17" pos:end="30:20"><expr pos:start="30:17" pos:end="30:19"><name pos:start="30:17" pos:end="30:17">i</name><operator pos:start="30:18" pos:end="30:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="31:15" pos:end="33:13">else if<condition pos:start="31:22" pos:end="31:50">(<expr pos:start="31:23" pos:end="31:49"><name pos:start="31:23" pos:end="31:26"><name pos:start="31:23" pos:end="31:23">f</name><index pos:start="31:24" pos:end="31:26">[<expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">i</name></expr>]</index></name> <operator pos:start="31:28" pos:end="31:29">==</operator> <literal type="string" pos:start="31:31" pos:end="31:33">"I"</literal> <operator pos:start="31:35" pos:end="31:36">||</operator> <name pos:start="31:38" pos:end="31:41"><name pos:start="31:38" pos:end="31:38">f</name><index pos:start="31:39" pos:end="31:41">[<expr pos:start="31:40" pos:end="31:40"><name pos:start="31:40" pos:end="31:40">i</name></expr>]</index></name> <operator pos:start="31:43" pos:end="31:44">==</operator> <literal type="string" pos:start="31:46" pos:end="31:49">"me"</literal></expr>)</condition><block pos:start="31:51" pos:end="33:13">{<block_content pos:start="32:17" pos:end="32:37">
                <expr_stmt pos:start="32:17" pos:end="32:37"><expr pos:start="32:17" pos:end="32:36"><name pos:start="32:17" pos:end="32:20">cout</name> <operator pos:start="32:22" pos:end="32:23">&lt;&lt;</operator> <literal type="string" pos:start="32:25" pos:end="32:29">"you"</literal> <operator pos:start="32:31" pos:end="32:32">&lt;&lt;</operator> <literal type="string" pos:start="32:34" pos:end="32:36">" "</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="33:15" pos:end="35:13">else <block pos:start="33:20" pos:end="35:13">{<block_content pos:start="34:17" pos:end="34:36">
                <expr_stmt pos:start="34:17" pos:end="34:36"><expr pos:start="34:17" pos:end="34:35"><name pos:start="34:17" pos:end="34:20">cout</name> <operator pos:start="34:22" pos:end="34:23">&lt;&lt;</operator> <name pos:start="34:25" pos:end="34:28"><name pos:start="34:25" pos:end="34:25">f</name><index pos:start="34:26" pos:end="34:28">[<expr pos:start="34:27" pos:end="34:27"><name pos:start="34:27" pos:end="34:27">i</name></expr>]</index></name> <operator pos:start="34:30" pos:end="34:31">&lt;&lt;</operator> <literal type="string" pos:start="34:33" pos:end="34:35">" "</literal></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="37:9" pos:end="37:21"><expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:12">cout</name> <operator pos:start="37:14" pos:end="37:15">&lt;&lt;</operator> <name pos:start="37:17" pos:end="37:20">endl</name></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
