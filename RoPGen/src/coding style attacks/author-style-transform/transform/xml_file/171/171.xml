<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/171/171.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include> 
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using> 
<decl_stmt pos:start="3:1" pos:end="3:6"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">N</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:10"><decl pos:start="4:1" pos:end="4:9"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:9"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:9">[<expr pos:start="4:7" pos:end="4:8"><literal type="number" pos:start="4:7" pos:end="4:8">35</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:10"><decl pos:start="5:1" pos:end="5:9"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:5">b</name><index pos:start="5:6" pos:end="5:9">[<expr pos:start="5:7" pos:end="5:8"><literal type="number" pos:start="5:7" pos:end="5:8">35</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:10"><decl pos:start="6:1" pos:end="6:9"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:9"><name pos:start="6:5" pos:end="6:5">s</name><index pos:start="6:6" pos:end="6:9">[<expr pos:start="6:7" pos:end="6:8"><literal type="number" pos:start="6:7" pos:end="6:8">35</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:26"><decl pos:start="7:1" pos:end="7:14"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:8">tree</name><index pos:start="7:9" pos:end="7:14">[<expr pos:start="7:10" pos:end="7:13"><literal type="number" pos:start="7:10" pos:end="7:13">1010</literal></expr>]</index></name></decl>, <decl pos:start="7:17" pos:end="7:25"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:17" pos:end="7:25"><name pos:start="7:17" pos:end="7:19">pos</name><index pos:start="7:20" pos:end="7:25">[<expr pos:start="7:21" pos:end="7:24"><literal type="number" pos:start="7:21" pos:end="7:24">1010</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="8:1" pos:end="20:1"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">void</name></type> <name pos:start="8:6" pos:end="8:8">dfs</name><parameter_list pos:start="8:9" pos:end="8:26">(<parameter pos:start="8:10" pos:end="8:18"><decl pos:start="8:10" pos:end="8:18"><type pos:start="8:10" pos:end="8:18"><name pos:start="8:10" pos:end="8:12">int</name> <modifier pos:start="8:14" pos:end="8:14">&amp;</modifier></type><name pos:start="8:15" pos:end="8:18">root</name></decl></parameter>, <parameter pos:start="8:21" pos:end="8:25"><decl pos:start="8:21" pos:end="8:25"><type pos:start="8:21" pos:end="8:25"><name pos:start="8:21" pos:end="8:23">int</name></type> <name pos:start="8:25" pos:end="8:25">x</name></decl></parameter>)</parameter_list> <block pos:start="8:28" pos:end="20:1">{<block_content pos:start="9:5" pos:end="19:5">
    <if_stmt pos:start="9:5" pos:end="12:5"><if pos:start="9:5" pos:end="12:5">if<condition pos:start="9:7" pos:end="9:23">(<expr pos:start="9:8" pos:end="9:22"><name pos:start="9:8" pos:end="9:17"><name pos:start="9:8" pos:end="9:11">tree</name><index pos:start="9:12" pos:end="9:17">[<expr pos:start="9:13" pos:end="9:16"><name pos:start="9:13" pos:end="9:16">root</name></expr>]</index></name> <operator pos:start="9:19" pos:end="9:20">==</operator> <literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr>)</condition><block pos:start="9:24" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:15">
        <expr_stmt pos:start="10:9" pos:end="10:23"><expr pos:start="10:9" pos:end="10:22"><name pos:start="10:9" pos:end="10:18"><name pos:start="10:9" pos:end="10:12">tree</name><index pos:start="10:13" pos:end="10:18">[<expr pos:start="10:14" pos:end="10:17"><name pos:start="10:14" pos:end="10:17">root</name></expr>]</index></name> <operator pos:start="10:20" pos:end="10:20">=</operator> <name pos:start="10:22" pos:end="10:22">x</name></expr>;</expr_stmt>
        <return pos:start="11:9" pos:end="11:15">return;</return>
    </block_content>}</block></if></if_stmt> <if_stmt pos:start="12:7" pos:end="19:5"><if pos:start="12:7" pos:end="15:5">if <condition pos:start="12:10" pos:end="12:25">(<expr pos:start="12:11" pos:end="12:24"><name pos:start="12:11" pos:end="12:11">x</name> <operator pos:start="12:13" pos:end="12:13">&lt;</operator> <name pos:start="12:15" pos:end="12:24"><name pos:start="12:15" pos:end="12:18">tree</name><index pos:start="12:19" pos:end="12:24">[<expr pos:start="12:20" pos:end="12:23"><name pos:start="12:20" pos:end="12:23">root</name></expr>]</index></name></expr>)</condition><block pos:start="12:26" pos:end="15:5">{<block_content pos:start="13:9" pos:end="14:20">
        <expr_stmt pos:start="13:9" pos:end="13:18"><expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:12">root</name> <operator pos:start="13:14" pos:end="13:15">*=</operator> <literal type="number" pos:start="13:17" pos:end="13:17">2</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:20"><expr pos:start="14:9" pos:end="14:19"><call pos:start="14:9" pos:end="14:19"><name pos:start="14:9" pos:end="14:11">dfs</name><argument_list pos:start="14:12" pos:end="14:19">(<argument pos:start="14:13" pos:end="14:16"><expr pos:start="14:13" pos:end="14:16"><name pos:start="14:13" pos:end="14:16">root</name></expr></argument>,<argument pos:start="14:18" pos:end="14:18"><expr pos:start="14:18" pos:end="14:18"><name pos:start="14:18" pos:end="14:18">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="19:5">else if<condition pos:start="15:14" pos:end="15:29">(<expr pos:start="15:15" pos:end="15:28"><name pos:start="15:15" pos:end="15:15">x</name> <operator pos:start="15:17" pos:end="15:17">&gt;</operator> <name pos:start="15:19" pos:end="15:28"><name pos:start="15:19" pos:end="15:22">tree</name><index pos:start="15:23" pos:end="15:28">[<expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">root</name></expr>]</index></name></expr>)</condition><block pos:start="15:30" pos:end="19:5">{<block_content pos:start="16:9" pos:end="18:20">
        <expr_stmt pos:start="16:9" pos:end="16:18"><expr pos:start="16:9" pos:end="16:17"><name pos:start="16:9" pos:end="16:12">root</name> <operator pos:start="16:14" pos:end="16:15">*=</operator> <literal type="number" pos:start="16:17" pos:end="16:17">2</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:15"><expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:12">root</name><operator pos:start="17:13" pos:end="17:14">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="18:9" pos:end="18:20"><expr pos:start="18:9" pos:end="18:19"><call pos:start="18:9" pos:end="18:19"><name pos:start="18:9" pos:end="18:11">dfs</name><argument_list pos:start="18:12" pos:end="18:19">(<argument pos:start="18:13" pos:end="18:16"><expr pos:start="18:13" pos:end="18:16"><name pos:start="18:13" pos:end="18:16">root</name></expr></argument>,<argument pos:start="18:18" pos:end="18:18"><expr pos:start="18:18" pos:end="18:18"><name pos:start="18:18" pos:end="18:18">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="21:1" pos:end="41:1"><type pos:start="21:1" pos:end="21:3"><name pos:start="21:1" pos:end="21:3">int</name></type> <name pos:start="21:5" pos:end="21:8">main</name><parameter_list pos:start="21:9" pos:end="21:10">()</parameter_list> <block pos:start="21:12" pos:end="41:1">{<block_content pos:start="22:5" pos:end="40:13"> 
    <expr_stmt pos:start="22:5" pos:end="22:33"><expr pos:start="22:5" pos:end="22:32"><call pos:start="22:5" pos:end="22:32"><name pos:start="22:5" pos:end="22:11">freopen</name><argument_list pos:start="22:12" pos:end="22:32">(<argument pos:start="22:13" pos:end="22:21"><expr pos:start="22:13" pos:end="22:21"><literal type="string" pos:start="22:13" pos:end="22:21">"sort.in"</literal></expr></argument>,<argument pos:start="22:23" pos:end="22:25"><expr pos:start="22:23" pos:end="22:25"><literal type="string" pos:start="22:23" pos:end="22:25">"r"</literal></expr></argument>,<argument pos:start="22:27" pos:end="22:31"><expr pos:start="22:27" pos:end="22:31"><name pos:start="22:27" pos:end="22:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><call pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:11">freopen</name><argument_list pos:start="23:12" pos:end="23:34">(<argument pos:start="23:13" pos:end="23:22"><expr pos:start="23:13" pos:end="23:22"><literal type="string" pos:start="23:13" pos:end="23:22">"sort.out"</literal></expr></argument>,<argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><literal type="string" pos:start="23:24" pos:end="23:26">"w"</literal></expr></argument>,<argument pos:start="23:28" pos:end="23:33"><expr pos:start="23:28" pos:end="23:33"><name pos:start="23:28" pos:end="23:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:13"><expr pos:start="26:5" pos:end="26:12"><name pos:start="26:5" pos:end="26:7">cin</name> <operator pos:start="26:9" pos:end="26:10">&gt;&gt;</operator> <name pos:start="26:12" pos:end="26:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><call pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:10">memset</name><argument_list pos:start="27:11" pos:end="27:33">(<argument pos:start="27:12" pos:end="27:15"><expr pos:start="27:12" pos:end="27:15"><name pos:start="27:12" pos:end="27:15">tree</name></expr></argument>, <argument pos:start="27:18" pos:end="27:18"><expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr></argument>, <argument pos:start="27:21" pos:end="27:32"><expr pos:start="27:21" pos:end="27:32"><sizeof pos:start="27:21" pos:end="27:32">sizeof<argument_list pos:start="27:27" pos:end="27:32">(<argument pos:start="27:28" pos:end="27:31"><expr pos:start="27:28" pos:end="27:31"><name pos:start="27:28" pos:end="27:31">tree</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="28:5" pos:end="33:5">for <control pos:start="28:9" pos:end="28:32">(<init pos:start="28:10" pos:end="28:19"><decl pos:start="28:10" pos:end="28:18"><type pos:start="28:10" pos:end="28:12"><name pos:start="28:10" pos:end="28:12">int</name></type> <name pos:start="28:14" pos:end="28:14">i</name> <init pos:start="28:16" pos:end="28:18">= <expr pos:start="28:18" pos:end="28:18"><literal type="number" pos:start="28:18" pos:end="28:18">1</literal></expr></init></decl>;</init> <condition pos:start="28:21" pos:end="28:27"><expr pos:start="28:21" pos:end="28:26"><name pos:start="28:21" pos:end="28:21">i</name> <operator pos:start="28:23" pos:end="28:24">&lt;=</operator> <name pos:start="28:26" pos:end="28:26">n</name></expr>;</condition> <incr pos:start="28:29" pos:end="28:31"><expr pos:start="28:29" pos:end="28:31"><name pos:start="28:29" pos:end="28:29">i</name><operator pos:start="28:30" pos:end="28:31">++</operator></expr></incr>)</control> <block pos:start="28:34" pos:end="33:5">{<block_content pos:start="29:9" pos:end="32:23">
        <decl_stmt pos:start="29:9" pos:end="29:14"><decl pos:start="29:9" pos:end="29:13"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:13">x</name></decl>;</decl_stmt>
        <expr_stmt pos:start="30:9" pos:end="30:17"><expr pos:start="30:9" pos:end="30:16"><name pos:start="30:9" pos:end="30:11">cin</name> <operator pos:start="30:13" pos:end="30:14">&gt;&gt;</operator> <name pos:start="30:16" pos:end="30:16">x</name></expr>;</expr_stmt>
        <expr_stmt pos:start="31:9" pos:end="31:19"><expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:11">pos</name><index pos:start="31:12" pos:end="31:14">[<expr pos:start="31:13" pos:end="31:13"><name pos:start="31:13" pos:end="31:13">i</name></expr>]</index></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:23"><expr pos:start="32:9" pos:end="32:22"><call pos:start="32:9" pos:end="32:22"><name pos:start="32:9" pos:end="32:11">dfs</name><argument_list pos:start="32:12" pos:end="32:22">(<argument pos:start="32:13" pos:end="32:18"><expr pos:start="32:13" pos:end="32:18"><name pos:start="32:13" pos:end="32:18"><name pos:start="32:13" pos:end="32:15">pos</name><index pos:start="32:16" pos:end="32:18">[<expr pos:start="32:17" pos:end="32:17"><name pos:start="32:17" pos:end="32:17">i</name></expr>]</index></name></expr></argument>, <argument pos:start="32:21" pos:end="32:21"><expr pos:start="32:21" pos:end="32:21"><name pos:start="32:21" pos:end="32:21">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="34:5" pos:end="36:5">for <control pos:start="34:9" pos:end="34:32">(<init pos:start="34:10" pos:end="34:19"><decl pos:start="34:10" pos:end="34:18"><type pos:start="34:10" pos:end="34:12"><name pos:start="34:10" pos:end="34:12">int</name></type> <name pos:start="34:14" pos:end="34:14">i</name> <init pos:start="34:16" pos:end="34:18">= <expr pos:start="34:18" pos:end="34:18"><literal type="number" pos:start="34:18" pos:end="34:18">1</literal></expr></init></decl>;</init> <condition pos:start="34:21" pos:end="34:27"><expr pos:start="34:21" pos:end="34:26"><name pos:start="34:21" pos:end="34:21">i</name> <operator pos:start="34:23" pos:end="34:24">&lt;=</operator> <name pos:start="34:26" pos:end="34:26">n</name></expr>;</condition> <incr pos:start="34:29" pos:end="34:31"><expr pos:start="34:29" pos:end="34:31"><name pos:start="34:29" pos:end="34:29">i</name><operator pos:start="34:30" pos:end="34:31">++</operator></expr></incr>)</control> <block pos:start="34:34" pos:end="36:5">{<block_content pos:start="35:9" pos:end="35:20">
        <expr_stmt pos:start="35:9" pos:end="35:20"><expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:11">cin</name> <operator pos:start="35:13" pos:end="35:14">&gt;&gt;</operator> <name pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:16">b</name><index pos:start="35:17" pos:end="35:19">[<expr pos:start="35:18" pos:end="35:18"><name pos:start="35:18" pos:end="35:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="37:5" pos:end="39:5">for <control pos:start="37:9" pos:end="37:32">(<init pos:start="37:10" pos:end="37:19"><decl pos:start="37:10" pos:end="37:18"><type pos:start="37:10" pos:end="37:12"><name pos:start="37:10" pos:end="37:12">int</name></type> <name pos:start="37:14" pos:end="37:14">i</name> <init pos:start="37:16" pos:end="37:18">= <expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">1</literal></expr></init></decl>;</init> <condition pos:start="37:21" pos:end="37:27"><expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:21">i</name> <operator pos:start="37:23" pos:end="37:24">&lt;=</operator> <name pos:start="37:26" pos:end="37:26">n</name></expr>;</condition> <incr pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:29">i</name><operator pos:start="37:30" pos:end="37:31">++</operator></expr></incr>)</control> <block pos:start="37:34" pos:end="39:5">{<block_content pos:start="38:9" pos:end="38:73">
        <expr_stmt pos:start="38:9" pos:end="38:73"><expr pos:start="38:9" pos:end="38:72"><name pos:start="38:9" pos:end="38:12">cout</name>  <operator pos:start="38:15" pos:end="38:16">&lt;&lt;</operator> <name pos:start="38:18" pos:end="38:33"><name pos:start="38:18" pos:end="38:21">tree</name><index pos:start="38:22" pos:end="38:33">[<expr pos:start="38:23" pos:end="38:32"><name pos:start="38:23" pos:end="38:28"><name pos:start="38:23" pos:end="38:25">pos</name><index pos:start="38:26" pos:end="38:28">[<expr pos:start="38:27" pos:end="38:27"><name pos:start="38:27" pos:end="38:27">i</name></expr>]</index></name> <operator pos:start="38:30" pos:end="38:30">*</operator> <literal type="number" pos:start="38:32" pos:end="38:32">2</literal></expr>]</index></name> <operator pos:start="38:35" pos:end="38:36">&lt;&lt;</operator> <literal type="char" pos:start="38:38" pos:end="38:40">' '</literal> <operator pos:start="38:42" pos:end="38:43">&lt;&lt;</operator> <name pos:start="38:45" pos:end="38:64"><name pos:start="38:45" pos:end="38:48">tree</name><index pos:start="38:49" pos:end="38:64">[<expr pos:start="38:50" pos:end="38:63"><name pos:start="38:50" pos:end="38:55"><name pos:start="38:50" pos:end="38:52">pos</name><index pos:start="38:53" pos:end="38:55">[<expr pos:start="38:54" pos:end="38:54"><name pos:start="38:54" pos:end="38:54">i</name></expr>]</index></name> <operator pos:start="38:57" pos:end="38:57">*</operator> <literal type="number" pos:start="38:59" pos:end="38:61">2</literal> <operator pos:start="38:61" pos:end="38:61">+</operator> <literal type="number" pos:start="38:63" pos:end="38:63">1</literal></expr>]</index></name> <operator pos:start="38:66" pos:end="38:67">&lt;&lt;</operator> <name pos:start="38:69" pos:end="38:72">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="40:5" pos:end="40:13">return <expr pos:start="40:12" pos:end="40:12"><literal type="number" pos:start="40:12" pos:end="40:12">0</literal></expr>;</return> 
</block_content>}</block></function>

</unit>
