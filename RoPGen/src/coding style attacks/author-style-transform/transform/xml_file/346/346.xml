<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/346/346.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:6"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:15"><decl pos:start="4:1" pos:end="4:14"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:10">stonea</name><index pos:start="4:11" pos:end="4:14">[<expr pos:start="4:12" pos:end="4:13"><literal type="number" pos:start="4:12" pos:end="4:13">15</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:15"><decl pos:start="5:1" pos:end="5:14"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:10">stoneb</name><index pos:start="5:11" pos:end="5:14">[<expr pos:start="5:12" pos:end="5:13"><literal type="number" pos:start="5:12" pos:end="5:13">15</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:10"><decl pos:start="6:1" pos:end="6:9"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">bool</name></type> <name pos:start="6:6" pos:end="6:9">flag</name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:28"><decl pos:start="7:1" pos:end="7:27"><type pos:start="7:1" pos:end="7:9"><name pos:start="7:1" pos:end="7:4">long</name> <name pos:start="7:6" pos:end="7:9">long</name></type> <name pos:start="7:11" pos:end="7:13">ans</name><init pos:start="7:14" pos:end="7:27">=<expr pos:start="7:15" pos:end="7:27"><literal type="number" pos:start="7:15" pos:end="7:27">1000000000000</literal></expr></init></decl>;</decl_stmt>
<function pos:start="8:1" pos:end="27:1"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">void</name></type> <name pos:start="8:6" pos:end="8:8">dfs</name><parameter_list pos:start="8:9" pos:end="8:29">(<parameter pos:start="8:10" pos:end="8:16"><decl pos:start="8:10" pos:end="8:16"><type pos:start="8:10" pos:end="8:16"><name pos:start="8:10" pos:end="8:12">int</name></type> <name pos:start="8:14" pos:end="8:16">now</name></decl></parameter>,<parameter pos:start="8:18" pos:end="8:22"><decl pos:start="8:18" pos:end="8:22"><type pos:start="8:18" pos:end="8:22"><name pos:start="8:18" pos:end="8:20">int</name></type> <name pos:start="8:22" pos:end="8:22">a</name></decl></parameter>,<parameter pos:start="8:24" pos:end="8:28"><decl pos:start="8:24" pos:end="8:28"><type pos:start="8:24" pos:end="8:28"><name pos:start="8:24" pos:end="8:26">int</name></type> <name pos:start="8:28" pos:end="8:28">b</name></decl></parameter>)</parameter_list>
<block pos:start="9:1" pos:end="27:1">{<block_content pos:start="10:5" pos:end="25:19">
    <if_stmt pos:start="10:5" pos:end="17:5"><if pos:start="10:5" pos:end="17:5">if<condition pos:start="10:7" pos:end="10:25">(<expr pos:start="10:8" pos:end="10:24"><name pos:start="10:8" pos:end="10:10">now</name><operator pos:start="10:11" pos:end="10:11">=</operator><name pos:start="10:12" pos:end="10:12">n</name><operator pos:start="10:13" pos:end="10:14">&amp;&amp;</operator><name pos:start="10:15" pos:end="10:18">flag</name><operator pos:start="10:19" pos:end="10:20">==</operator><literal type="boolean" pos:start="10:21" pos:end="10:24">true</literal></expr>)</condition>
    <block pos:start="11:5" pos:end="17:5">{<block_content pos:start="12:9" pos:end="16:15">
        <if_stmt pos:start="12:9" pos:end="15:9"><if pos:start="12:9" pos:end="15:9">if<condition pos:start="12:11" pos:end="12:33">(<expr pos:start="12:12" pos:end="12:32"><call pos:start="12:12" pos:end="12:19"><name pos:start="12:12" pos:end="12:14">max</name><argument_list pos:start="12:15" pos:end="12:19">(<argument pos:start="12:16" pos:end="12:16"><expr pos:start="12:16" pos:end="12:16"><name pos:start="12:16" pos:end="12:16">a</name></expr></argument>,<argument pos:start="12:18" pos:end="12:18"><expr pos:start="12:18" pos:end="12:18"><name pos:start="12:18" pos:end="12:18">b</name></expr></argument>)</argument_list></call><operator pos:start="12:20" pos:end="12:20">-</operator><call pos:start="12:21" pos:end="12:28"><name pos:start="12:21" pos:end="12:23">min</name><argument_list pos:start="12:24" pos:end="12:28">(<argument pos:start="12:25" pos:end="12:25"><expr pos:start="12:25" pos:end="12:25"><name pos:start="12:25" pos:end="12:25">a</name></expr></argument>,<argument pos:start="12:27" pos:end="12:27"><expr pos:start="12:27" pos:end="12:27"><name pos:start="12:27" pos:end="12:27">b</name></expr></argument>)</argument_list></call><operator pos:start="12:29" pos:end="12:29">&lt;</operator><name pos:start="12:30" pos:end="12:32">ans</name></expr>)</condition>
        <block pos:start="13:9" pos:end="15:9">{<block_content pos:start="14:13" pos:end="14:34">
            <expr_stmt pos:start="14:13" pos:end="14:34"><expr pos:start="14:13" pos:end="14:33"><name pos:start="14:13" pos:end="14:15">ans</name><operator pos:start="14:16" pos:end="14:16">=</operator><call pos:start="14:17" pos:end="14:24"><name pos:start="14:17" pos:end="14:19">max</name><argument_list pos:start="14:20" pos:end="14:24">(<argument pos:start="14:21" pos:end="14:21"><expr pos:start="14:21" pos:end="14:21"><name pos:start="14:21" pos:end="14:21">a</name></expr></argument>,<argument pos:start="14:23" pos:end="14:23"><expr pos:start="14:23" pos:end="14:23"><name pos:start="14:23" pos:end="14:23">b</name></expr></argument>)</argument_list></call><operator pos:start="14:25" pos:end="14:25">-</operator><call pos:start="14:26" pos:end="14:33"><name pos:start="14:26" pos:end="14:28">min</name><argument_list pos:start="14:29" pos:end="14:33">(<argument pos:start="14:30" pos:end="14:30"><expr pos:start="14:30" pos:end="14:30"><name pos:start="14:30" pos:end="14:30">a</name></expr></argument>,<argument pos:start="14:32" pos:end="14:32"><expr pos:start="14:32" pos:end="14:32"><name pos:start="14:32" pos:end="14:32">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return pos:start="16:9" pos:end="16:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="18:5" pos:end="21:5"><if pos:start="18:5" pos:end="21:5">if<condition pos:start="18:7" pos:end="18:13">(<expr pos:start="18:8" pos:end="18:12"><name pos:start="18:8" pos:end="18:10">now</name><operator pos:start="18:11" pos:end="18:11">&gt;</operator><name pos:start="18:12" pos:end="18:12">n</name></expr>)</condition>
    <block pos:start="19:5" pos:end="21:5">{<block_content pos:start="20:9" pos:end="20:15">
        <return pos:start="20:9" pos:end="20:15">return;</return>
    </block_content>}</block></if></if_stmt>
    
    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><call pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:7">dfs</name><argument_list pos:start="23:8" pos:end="23:30">(<argument pos:start="23:9" pos:end="23:13"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:11">now</name><operator pos:start="23:12" pos:end="23:12">+</operator><literal type="number" pos:start="23:13" pos:end="23:13">1</literal></expr></argument>,<argument pos:start="23:15" pos:end="23:27"><expr pos:start="23:15" pos:end="23:27"><name pos:start="23:15" pos:end="23:15">a</name><operator pos:start="23:16" pos:end="23:16">*</operator><name pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:22">stonea</name><index pos:start="23:23" pos:end="23:27">[<expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">now</name></expr>]</index></name></expr></argument>,<argument pos:start="23:29" pos:end="23:29"><expr pos:start="23:29" pos:end="23:29"><name pos:start="23:29" pos:end="23:29">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:31"><expr pos:start="24:5" pos:end="24:30"><call pos:start="24:5" pos:end="24:30"><name pos:start="24:5" pos:end="24:7">dfs</name><argument_list pos:start="24:8" pos:end="24:30">(<argument pos:start="24:9" pos:end="24:13"><expr pos:start="24:9" pos:end="24:13"><name pos:start="24:9" pos:end="24:11">now</name><operator pos:start="24:12" pos:end="24:12">+</operator><literal type="number" pos:start="24:13" pos:end="24:13">1</literal></expr></argument>,<argument pos:start="24:15" pos:end="24:15"><expr pos:start="24:15" pos:end="24:15"><name pos:start="24:15" pos:end="24:15">a</name></expr></argument>,<argument pos:start="24:17" pos:end="24:29"><expr pos:start="24:17" pos:end="24:29"><name pos:start="24:17" pos:end="24:17">b</name><operator pos:start="24:18" pos:end="24:18">*</operator><name pos:start="24:19" pos:end="24:29"><name pos:start="24:19" pos:end="24:24">stoneb</name><index pos:start="24:25" pos:end="24:29">[<expr pos:start="24:26" pos:end="24:28"><name pos:start="24:26" pos:end="24:28">now</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><call pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:7">dfs</name><argument_list pos:start="25:8" pos:end="25:18">(<argument pos:start="25:9" pos:end="25:13"><expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:11">now</name><operator pos:start="25:12" pos:end="25:12">+</operator><literal type="number" pos:start="25:13" pos:end="25:13">1</literal></expr></argument>,<argument pos:start="25:15" pos:end="25:15"><expr pos:start="25:15" pos:end="25:15"><name pos:start="25:15" pos:end="25:15">a</name></expr></argument>,<argument pos:start="25:17" pos:end="25:17"><expr pos:start="25:17" pos:end="25:17"><name pos:start="25:17" pos:end="25:17">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
</block_content>}</block></function>
<function pos:start="28:1" pos:end="41:1"><type pos:start="28:1" pos:end="28:3"><name pos:start="28:1" pos:end="28:3">int</name></type> <name pos:start="28:5" pos:end="28:8">main</name><parameter_list pos:start="28:9" pos:end="28:10">()</parameter_list>
<block pos:start="29:1" pos:end="41:1">{<block_content pos:start="30:5" pos:end="40:13">
    <expr_stmt pos:start="30:5" pos:end="30:34"><expr pos:start="30:5" pos:end="30:33"><call pos:start="30:5" pos:end="30:33"><name pos:start="30:5" pos:end="30:11">freopen</name><argument_list pos:start="30:12" pos:end="30:33">(<argument pos:start="30:13" pos:end="30:22"><expr pos:start="30:13" pos:end="30:22"><literal type="string" pos:start="30:13" pos:end="30:22">"stone.in"</literal></expr></argument>,<argument pos:start="30:24" pos:end="30:26"><expr pos:start="30:24" pos:end="30:26"><literal type="string" pos:start="30:24" pos:end="30:26">"r"</literal></expr></argument>,<argument pos:start="30:28" pos:end="30:32"><expr pos:start="30:28" pos:end="30:32"><name pos:start="30:28" pos:end="30:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><call pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:11">freopen</name><argument_list pos:start="31:12" pos:end="31:35">(<argument pos:start="31:13" pos:end="31:23"><expr pos:start="31:13" pos:end="31:23"><literal type="string" pos:start="31:13" pos:end="31:23">"stone.out"</literal></expr></argument>,<argument pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><literal type="string" pos:start="31:25" pos:end="31:27">"w"</literal></expr></argument>,<argument pos:start="31:29" pos:end="31:34"><expr pos:start="31:29" pos:end="31:34"><name pos:start="31:29" pos:end="31:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:11"><expr pos:start="32:5" pos:end="32:10"><name pos:start="32:5" pos:end="32:7">cin</name><operator pos:start="32:8" pos:end="32:9">&gt;&gt;</operator><name pos:start="32:10" pos:end="32:10">n</name></expr>;</expr_stmt>
    <for pos:start="33:5" pos:end="37:5">for<control pos:start="33:8" pos:end="33:25">(<init pos:start="33:9" pos:end="33:16"><decl pos:start="33:9" pos:end="33:15"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:13">i</name><init pos:start="33:14" pos:end="33:15">=<expr pos:start="33:15" pos:end="33:15"><literal type="number" pos:start="33:15" pos:end="33:15">1</literal></expr></init></decl>;</init><condition pos:start="33:17" pos:end="33:21"><expr pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:17">i</name><operator pos:start="33:18" pos:end="33:19">&lt;=</operator><name pos:start="33:20" pos:end="33:20">n</name></expr>;</condition><incr pos:start="33:22" pos:end="33:24"><expr pos:start="33:22" pos:end="33:24"><name pos:start="33:22" pos:end="33:22">i</name><operator pos:start="33:23" pos:end="33:24">++</operator></expr></incr>)</control>
    <block pos:start="34:5" pos:end="37:5">{<block_content pos:start="35:9" pos:end="36:23">
        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:11">cin</name><operator pos:start="35:12" pos:end="35:13">&gt;&gt;</operator><name pos:start="35:14" pos:end="35:22"><name pos:start="35:14" pos:end="35:19">stonea</name><index pos:start="35:20" pos:end="35:22">[<expr pos:start="35:21" pos:end="35:21"><name pos:start="35:21" pos:end="35:21">i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="36:9" pos:end="36:23"><expr pos:start="36:9" pos:end="36:22"><name pos:start="36:9" pos:end="36:11">cin</name><operator pos:start="36:12" pos:end="36:13">&gt;&gt;</operator><name pos:start="36:14" pos:end="36:22"><name pos:start="36:14" pos:end="36:19">stoneb</name><index pos:start="36:20" pos:end="36:22">[<expr pos:start="36:21" pos:end="36:21"><name pos:start="36:21" pos:end="36:21">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="38:5" pos:end="38:15"><expr pos:start="38:5" pos:end="38:14"><call pos:start="38:5" pos:end="38:14"><name pos:start="38:5" pos:end="38:7">dfs</name><argument_list pos:start="38:8" pos:end="38:14">(<argument pos:start="38:9" pos:end="38:9"><expr pos:start="38:9" pos:end="38:9"><literal type="number" pos:start="38:9" pos:end="38:9">1</literal></expr></argument>,<argument pos:start="38:11" pos:end="38:11"><expr pos:start="38:11" pos:end="38:11"><literal type="number" pos:start="38:11" pos:end="38:11">1</literal></expr></argument>,<argument pos:start="38:13" pos:end="38:13"><expr pos:start="38:13" pos:end="38:13"><literal type="number" pos:start="38:13" pos:end="38:13">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:14"><expr pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:8">cout</name><operator pos:start="39:9" pos:end="39:10">&lt;&lt;</operator><name pos:start="39:11" pos:end="39:13">ans</name></expr>;</expr_stmt>
    <return pos:start="40:5" pos:end="40:13">return <expr pos:start="40:12" pos:end="40:12"><literal type="number" pos:start="40:12" pos:end="40:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
