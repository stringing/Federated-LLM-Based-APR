<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1051/1051.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="29:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="29:1">{<block_content pos:start="5:5" pos:end="28:13">
    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:12">a</name></decl>,<decl pos:start="5:14" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:10"/><name pos:start="5:14" pos:end="5:16">max</name><init pos:start="5:17" pos:end="5:21">=<expr pos:start="5:18" pos:end="5:21"><literal type="string" pos:start="5:18" pos:end="5:21">"wu"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:10">ix</name><init pos:start="6:11" pos:end="6:12">=<expr pos:start="6:12" pos:end="6:12"><literal type="number" pos:start="6:12" pos:end="6:12">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:20"><expr pos:start="7:5" pos:end="7:19"><call pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:11">getline</name><argument_list pos:start="7:12" pos:end="7:19">(<argument pos:start="7:13" pos:end="7:15"><expr pos:start="7:13" pos:end="7:15"><name pos:start="7:13" pos:end="7:15">cin</name></expr></argument>, <argument pos:start="7:18" pos:end="7:18"><expr pos:start="7:18" pos:end="7:18"><name pos:start="7:18" pos:end="7:18">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="8:5" pos:end="26:5">for<control pos:start="8:8" pos:end="8:31">(<init pos:start="8:9" pos:end="8:16"><decl pos:start="8:9" pos:end="8:15"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:13">i</name><init pos:start="8:14" pos:end="8:15">=<expr pos:start="8:15" pos:end="8:15"><literal type="number" pos:start="8:15" pos:end="8:15">0</literal></expr></init></decl>;</init><condition pos:start="8:17" pos:end="8:27"><expr pos:start="8:17" pos:end="8:26"><name pos:start="8:17" pos:end="8:17">i</name><operator pos:start="8:18" pos:end="8:18">&lt;</operator><call pos:start="8:19" pos:end="8:26"><name pos:start="8:19" pos:end="8:24"><name pos:start="8:19" pos:end="8:19">a</name><operator pos:start="8:20" pos:end="8:20">.</operator><name pos:start="8:21" pos:end="8:24">size</name></name><argument_list pos:start="8:25" pos:end="8:26">()</argument_list></call></expr>;</condition><incr pos:start="8:28" pos:end="8:30"><expr pos:start="8:28" pos:end="8:30"><name pos:start="8:28" pos:end="8:28">i</name><operator pos:start="8:29" pos:end="8:30">++</operator></expr></incr>)</control><block pos:start="8:32" pos:end="26:5">{<block_content pos:start="9:9" pos:end="25:13">
        <if_stmt pos:start="9:9" pos:end="19:9"><if pos:start="9:9" pos:end="19:9">if<condition pos:start="9:11" pos:end="9:21">(<expr pos:start="9:12" pos:end="9:20"><name pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:12">a</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><name pos:start="9:14" pos:end="9:14">i</name></expr>]</index></name><operator pos:start="9:16" pos:end="9:17">==</operator><literal type="char" pos:start="9:18" pos:end="9:20">' '</literal></expr>)</condition><block pos:start="9:22" pos:end="19:9">{<block_content pos:start="10:13" pos:end="18:19">
            <decl_stmt pos:start="10:13" pos:end="10:25"><decl pos:start="10:13" pos:end="10:24"><type pos:start="10:13" pos:end="10:15"><name pos:start="10:13" pos:end="10:15">int</name></type> <name pos:start="10:17" pos:end="10:19">ixt</name><init pos:start="10:20" pos:end="10:24">=<expr pos:start="10:21" pos:end="10:24"><name pos:start="10:21" pos:end="10:21">i</name><operator pos:start="10:22" pos:end="10:22">-</operator><name pos:start="10:23" pos:end="10:24">ix</name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="11:13" pos:end="16:17"><if pos:start="11:13" pos:end="14:13">if<condition pos:start="11:15" pos:end="11:25">(<expr pos:start="11:16" pos:end="11:24"><name pos:start="11:16" pos:end="11:18">max</name><operator pos:start="11:19" pos:end="11:20">==</operator><literal type="string" pos:start="11:21" pos:end="11:24">"wu"</literal></expr>)</condition><block pos:start="11:26" pos:end="14:13">{<block_content pos:start="13:17" pos:end="13:38">
                
                <expr_stmt pos:start="13:17" pos:end="13:38"><expr pos:start="13:17" pos:end="13:37"><name pos:start="13:17" pos:end="13:19">max</name><operator pos:start="13:20" pos:end="13:20">=</operator><call pos:start="13:21" pos:end="13:37"><name pos:start="13:21" pos:end="13:28"><name pos:start="13:21" pos:end="13:21">a</name><operator pos:start="13:22" pos:end="13:22">.</operator><name pos:start="13:23" pos:end="13:28">substr</name></name><argument_list pos:start="13:29" pos:end="13:37">(<argument pos:start="13:30" pos:end="13:31"><expr pos:start="13:30" pos:end="13:31"><name pos:start="13:30" pos:end="13:31">ix</name></expr></argument>,<argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:33">i</name><operator pos:start="13:34" pos:end="13:34">-</operator><name pos:start="13:35" pos:end="13:36">ix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="14:14" pos:end="16:17">else if<condition pos:start="14:21" pos:end="14:36">(<expr pos:start="14:22" pos:end="14:35"><name pos:start="14:22" pos:end="14:24">ixt</name><operator pos:start="14:25" pos:end="14:25">&gt;</operator><call pos:start="14:26" pos:end="14:35"><name pos:start="14:26" pos:end="14:33"><name pos:start="14:26" pos:end="14:28">max</name><operator pos:start="14:29" pos:end="14:29">.</operator><name pos:start="14:30" pos:end="14:33">size</name></name><argument_list pos:start="14:34" pos:end="14:35">()</argument_list></call></expr>)</condition><block pos:start="14:37" pos:end="16:17">{<block_content pos:start="15:21" pos:end="15:42">
                    <expr_stmt pos:start="15:21" pos:end="15:42"><expr pos:start="15:21" pos:end="15:41"><name pos:start="15:21" pos:end="15:23">max</name><operator pos:start="15:24" pos:end="15:24">=</operator><call pos:start="15:25" pos:end="15:41"><name pos:start="15:25" pos:end="15:32"><name pos:start="15:25" pos:end="15:25">a</name><operator pos:start="15:26" pos:end="15:26">.</operator><name pos:start="15:27" pos:end="15:32">substr</name></name><argument_list pos:start="15:33" pos:end="15:41">(<argument pos:start="15:34" pos:end="15:35"><expr pos:start="15:34" pos:end="15:35"><name pos:start="15:34" pos:end="15:35">ix</name></expr></argument>,<argument pos:start="15:37" pos:end="15:40"><expr pos:start="15:37" pos:end="15:40"><name pos:start="15:37" pos:end="15:37">i</name><operator pos:start="15:38" pos:end="15:38">-</operator><name pos:start="15:39" pos:end="15:40">ix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
           
            <expr_stmt pos:start="18:13" pos:end="18:19"><expr pos:start="18:13" pos:end="18:18"><name pos:start="18:13" pos:end="18:14">ix</name><operator pos:start="18:15" pos:end="18:15">=</operator><name pos:start="18:16" pos:end="18:16">i</name><operator pos:start="18:17" pos:end="18:17">+</operator><literal type="number" pos:start="18:18" pos:end="18:18">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt> 
        <decl_stmt pos:start="20:9" pos:end="20:21"><decl pos:start="20:9" pos:end="20:20"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:15">ixt</name><init pos:start="20:16" pos:end="20:20">=<expr pos:start="20:17" pos:end="20:20"><name pos:start="20:17" pos:end="20:17">i</name><operator pos:start="20:18" pos:end="20:18">-</operator><name pos:start="20:19" pos:end="20:20">ix</name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="21:9" pos:end="25:13"><if pos:start="21:9" pos:end="25:13">if<condition pos:start="21:11" pos:end="21:25">(<expr pos:start="21:12" pos:end="21:24"><name pos:start="21:12" pos:end="21:12">i</name><operator pos:start="21:13" pos:end="21:14">==</operator><call pos:start="21:15" pos:end="21:22"><name pos:start="21:15" pos:end="21:20"><name pos:start="21:15" pos:end="21:15">a</name><operator pos:start="21:16" pos:end="21:16">.</operator><name pos:start="21:17" pos:end="21:20">size</name></name><argument_list pos:start="21:21" pos:end="21:22">()</argument_list></call><operator pos:start="21:23" pos:end="21:23">-</operator><literal type="number" pos:start="21:24" pos:end="21:24">1</literal></expr>)</condition><block pos:start="21:26" pos:end="25:13">{<block_content pos:start="22:17" pos:end="24:17">
                <if_stmt pos:start="22:17" pos:end="24:17"><if pos:start="22:17" pos:end="24:17">if<condition pos:start="22:19" pos:end="22:34">(<expr pos:start="22:20" pos:end="22:33"><name pos:start="22:20" pos:end="22:22">ixt</name><operator pos:start="22:23" pos:end="22:23">&gt;</operator><call pos:start="22:24" pos:end="22:33"><name pos:start="22:24" pos:end="22:31"><name pos:start="22:24" pos:end="22:26">max</name><operator pos:start="22:27" pos:end="22:27">.</operator><name pos:start="22:28" pos:end="22:31">size</name></name><argument_list pos:start="22:32" pos:end="22:33">()</argument_list></call></expr>)</condition><block pos:start="22:35" pos:end="24:17">{<block_content pos:start="23:21" pos:end="23:44">
                    <expr_stmt pos:start="23:21" pos:end="23:44"><expr pos:start="23:21" pos:end="23:43"><name pos:start="23:21" pos:end="23:23">max</name><operator pos:start="23:24" pos:end="23:24">=</operator><call pos:start="23:25" pos:end="23:43"><name pos:start="23:25" pos:end="23:32"><name pos:start="23:25" pos:end="23:25">a</name><operator pos:start="23:26" pos:end="23:26">.</operator><name pos:start="23:27" pos:end="23:32">substr</name></name><argument_list pos:start="23:33" pos:end="23:43">(<argument pos:start="23:34" pos:end="23:35"><expr pos:start="23:34" pos:end="23:35"><name pos:start="23:34" pos:end="23:35">ix</name></expr></argument>,<argument pos:start="23:37" pos:end="23:42"><expr pos:start="23:37" pos:end="23:42"><name pos:start="23:37" pos:end="23:37">i</name><operator pos:start="23:38" pos:end="23:38">-</operator><name pos:start="23:39" pos:end="23:40">ix</name><operator pos:start="23:41" pos:end="23:41">+</operator><literal type="number" pos:start="23:42" pos:end="23:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="27:5" pos:end="27:14"><expr pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:8">cout</name><operator pos:start="27:9" pos:end="27:10">&lt;&lt;</operator><name pos:start="27:11" pos:end="27:13">max</name></expr>;</expr_stmt>
    <return pos:start="28:5" pos:end="28:13">return <expr pos:start="28:12" pos:end="28:12"><literal type="number" pos:start="28:12" pos:end="28:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
