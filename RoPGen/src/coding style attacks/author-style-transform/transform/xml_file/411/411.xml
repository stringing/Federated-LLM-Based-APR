<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/411/411.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<struct pos:start="3:1" pos:end="6:7">struct <name pos:start="3:8" pos:end="3:13">strone</name><block pos:start="3:14" pos:end="6:1">{<public type="default" pos:start="4:5" pos:end="5:11">
    <decl_stmt pos:start="4:5" pos:end="4:11"><decl pos:start="4:5" pos:end="4:10"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:10">fn</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">bz</name></decl>;</decl_stmt>
</public>}</block><decl pos:start="6:2" pos:end="6:6"><name pos:start="6:2" pos:end="6:6"><name pos:start="6:2" pos:end="6:2">s</name><index pos:start="6:3" pos:end="6:6">[<expr pos:start="6:4" pos:end="6:5"><literal type="number" pos:start="6:4" pos:end="6:5">20</literal></expr>]</index></name></decl>;</struct>
<decl_stmt pos:start="7:1" pos:end="7:20"><decl pos:start="7:1" pos:end="7:5"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:5">n</name></decl>,<decl pos:start="7:7" pos:end="7:19"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:7" pos:end="7:9">ans</name> <init pos:start="7:11" pos:end="7:19">= <expr pos:start="7:13" pos:end="7:19"><name pos:start="7:13" pos:end="7:19">INT_MAX</name></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:13"><decl pos:start="8:1" pos:end="8:12"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">bool</name></type> <name pos:start="8:6" pos:end="8:12"><name pos:start="8:6" pos:end="8:8">vis</name><index pos:start="8:9" pos:end="8:12">[<expr pos:start="8:10" pos:end="8:11"><literal type="number" pos:start="8:10" pos:end="8:11">20</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="9:1" pos:end="23:1"><type pos:start="9:1" pos:end="9:4"><name pos:start="9:1" pos:end="9:4">void</name></type> <name pos:start="9:6" pos:end="9:8">dfs</name><parameter_list pos:start="9:9" pos:end="9:33">(<parameter pos:start="9:10" pos:end="9:17"><decl pos:start="9:10" pos:end="9:17"><type pos:start="9:10" pos:end="9:17"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:17">sum1</name></decl></parameter>,<parameter pos:start="9:19" pos:end="9:26"><decl pos:start="9:19" pos:end="9:26"><type pos:start="9:19" pos:end="9:26"><name pos:start="9:19" pos:end="9:21">int</name></type> <name pos:start="9:23" pos:end="9:26">sum2</name></decl></parameter>,<parameter pos:start="9:28" pos:end="9:32"><decl pos:start="9:28" pos:end="9:32"><type pos:start="9:28" pos:end="9:32"><name pos:start="9:28" pos:end="9:30">int</name></type> <name pos:start="9:32" pos:end="9:32">k</name></decl></parameter>)</parameter_list><block pos:start="9:34" pos:end="23:1">{<block_content pos:start="10:5" pos:end="21:5">
    <if_stmt pos:start="10:5" pos:end="15:5"><if pos:start="10:5" pos:end="15:5">if<condition pos:start="10:7" pos:end="10:16">(<expr pos:start="10:8" pos:end="10:15"><name pos:start="10:8" pos:end="10:8">k</name> <operator pos:start="10:10" pos:end="10:11">==</operator> <name pos:start="10:13" pos:end="10:13">n</name><operator pos:start="10:14" pos:end="10:14">+</operator><literal type="number" pos:start="10:15" pos:end="10:15">1</literal></expr>)</condition><block pos:start="10:17" pos:end="15:5">{<block_content pos:start="11:9" pos:end="14:15">
        <if_stmt pos:start="11:9" pos:end="13:9"><if pos:start="11:9" pos:end="13:9">if<condition pos:start="11:11" pos:end="11:34">(<expr pos:start="11:12" pos:end="11:33"><call pos:start="11:12" pos:end="11:27"><name pos:start="11:12" pos:end="11:14">abs</name><argument_list pos:start="11:15" pos:end="11:27">(<argument pos:start="11:16" pos:end="11:26"><expr pos:start="11:16" pos:end="11:26"><name pos:start="11:16" pos:end="11:19">sum1</name> <operator pos:start="11:21" pos:end="11:21">-</operator> <name pos:start="11:23" pos:end="11:26">sum2</name></expr></argument>)</argument_list></call> <operator pos:start="11:29" pos:end="11:29">&lt;</operator> <name pos:start="11:31" pos:end="11:33">ans</name></expr>)</condition><block pos:start="11:35" pos:end="13:9">{<block_content pos:start="12:13" pos:end="12:35">
            <expr_stmt pos:start="12:13" pos:end="12:35"><expr pos:start="12:13" pos:end="12:34"><name pos:start="12:13" pos:end="12:15">ans</name> <operator pos:start="12:17" pos:end="12:17">=</operator> <call pos:start="12:19" pos:end="12:34"><name pos:start="12:19" pos:end="12:21">abs</name><argument_list pos:start="12:22" pos:end="12:34">(<argument pos:start="12:23" pos:end="12:33"><expr pos:start="12:23" pos:end="12:33"><name pos:start="12:23" pos:end="12:26">sum1</name> <operator pos:start="12:28" pos:end="12:28">-</operator> <name pos:start="12:30" pos:end="12:33">sum2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return pos:start="14:9" pos:end="14:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="16:5" pos:end="21:5"><if pos:start="16:5" pos:end="21:5">if<condition pos:start="16:7" pos:end="16:23">(<expr pos:start="16:8" pos:end="16:22"><name pos:start="16:8" pos:end="16:13"><name pos:start="16:8" pos:end="16:10">vis</name><index pos:start="16:11" pos:end="16:13">[<expr pos:start="16:12" pos:end="16:12"><name pos:start="16:12" pos:end="16:12">k</name></expr>]</index></name> <operator pos:start="16:15" pos:end="16:16">==</operator> <literal type="boolean" pos:start="16:18" pos:end="16:22">false</literal></expr>)</condition><block pos:start="16:24" pos:end="21:5">{<block_content pos:start="17:9" pos:end="20:27">
        <expr_stmt pos:start="17:9" pos:end="17:22"><expr pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:11">vis</name><index pos:start="17:12" pos:end="17:14">[<expr pos:start="17:13" pos:end="17:13"><name pos:start="17:13" pos:end="17:13">k</name></expr>]</index></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="boolean" pos:start="17:18" pos:end="17:21">true</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="18:9" pos:end="18:47"><expr pos:start="18:9" pos:end="18:46"><call pos:start="18:9" pos:end="18:46"><name pos:start="18:9" pos:end="18:11">dfs</name><argument_list pos:start="18:12" pos:end="18:46">(<argument pos:start="18:13" pos:end="18:26"><expr pos:start="18:13" pos:end="18:26"><name pos:start="18:13" pos:end="18:16">sum1</name> <operator pos:start="18:18" pos:end="18:18">*</operator> <name pos:start="18:20" pos:end="18:23"><name pos:start="18:20" pos:end="18:20">s</name><index pos:start="18:21" pos:end="18:23">[<expr pos:start="18:22" pos:end="18:22"><name pos:start="18:22" pos:end="18:22">k</name></expr>]</index></name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:26">fn</name></expr></argument>,<argument pos:start="18:28" pos:end="18:41"><expr pos:start="18:28" pos:end="18:41"><name pos:start="18:28" pos:end="18:31">sum2</name> <operator pos:start="18:33" pos:end="18:33">+</operator> <name pos:start="18:35" pos:end="18:38"><name pos:start="18:35" pos:end="18:35">s</name><index pos:start="18:36" pos:end="18:38">[<expr pos:start="18:37" pos:end="18:37"><name pos:start="18:37" pos:end="18:37">k</name></expr>]</index></name><operator pos:start="18:39" pos:end="18:39">.</operator><name pos:start="18:40" pos:end="18:41">bz</name></expr></argument>,<argument pos:start="18:43" pos:end="18:45"><expr pos:start="18:43" pos:end="18:45"><name pos:start="18:43" pos:end="18:43">k</name><operator pos:start="18:44" pos:end="18:44">+</operator><literal type="number" pos:start="18:45" pos:end="18:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:23"><expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:11">vis</name><index pos:start="19:12" pos:end="19:14">[<expr pos:start="19:13" pos:end="19:13"><name pos:start="19:13" pos:end="19:13">k</name></expr>]</index></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="boolean" pos:start="19:18" pos:end="19:22">false</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="20:9" pos:end="20:27"><expr pos:start="20:9" pos:end="20:26"><call pos:start="20:9" pos:end="20:26"><name pos:start="20:9" pos:end="20:11">dfs</name><argument_list pos:start="20:12" pos:end="20:26">(<argument pos:start="20:13" pos:end="20:16"><expr pos:start="20:13" pos:end="20:16"><name pos:start="20:13" pos:end="20:16">sum1</name></expr></argument>,<argument pos:start="20:18" pos:end="20:21"><expr pos:start="20:18" pos:end="20:21"><name pos:start="20:18" pos:end="20:21">sum2</name></expr></argument>,<argument pos:start="20:23" pos:end="20:25"><expr pos:start="20:23" pos:end="20:25"><name pos:start="20:23" pos:end="20:23">k</name><operator pos:start="20:24" pos:end="20:24">+</operator><literal type="number" pos:start="20:25" pos:end="20:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    
</block_content>}</block></function>
<function pos:start="24:1" pos:end="35:1"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:8">main</name><parameter_list pos:start="24:9" pos:end="24:10">()</parameter_list><block pos:start="24:11" pos:end="35:1">{<block_content pos:start="25:5" pos:end="34:13">
    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><call pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:11">freopen</name><argument_list pos:start="25:12" pos:end="25:34">(<argument pos:start="25:13" pos:end="25:23"><expr pos:start="25:13" pos:end="25:23"><literal type="string" pos:start="25:13" pos:end="25:23">"strone.in"</literal></expr></argument>,<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><literal type="string" pos:start="25:25" pos:end="25:27">"r"</literal></expr></argument>,<argument pos:start="25:29" pos:end="25:33"><expr pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:36"><expr pos:start="26:5" pos:end="26:35"><call pos:start="26:5" pos:end="26:35"><name pos:start="26:5" pos:end="26:11">freopen</name><argument_list pos:start="26:12" pos:end="26:35">(<argument pos:start="26:13" pos:end="26:23"><expr pos:start="26:13" pos:end="26:23"><literal type="string" pos:start="26:13" pos:end="26:23">"stone.out"</literal></expr></argument>,<argument pos:start="26:25" pos:end="26:27"><expr pos:start="26:25" pos:end="26:27"><literal type="string" pos:start="26:25" pos:end="26:27">"w"</literal></expr></argument>,<argument pos:start="26:29" pos:end="26:34"><expr pos:start="26:29" pos:end="26:34"><name pos:start="26:29" pos:end="26:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:19"><expr pos:start="27:5" pos:end="27:18"><call pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:9">scanf</name><argument_list pos:start="27:10" pos:end="27:18">(<argument pos:start="27:11" pos:end="27:14"><expr pos:start="27:11" pos:end="27:14"><literal type="string" pos:start="27:11" pos:end="27:14">"%d"</literal></expr></argument>,<argument pos:start="27:16" pos:end="27:17"><expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">&amp;</operator><name pos:start="27:17" pos:end="27:17">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="28:5" pos:end="30:5">for<control pos:start="28:8" pos:end="28:29">(<init pos:start="28:9" pos:end="28:18"><decl pos:start="28:9" pos:end="28:17"><type pos:start="28:9" pos:end="28:11"><name pos:start="28:9" pos:end="28:11">int</name></type> <name pos:start="28:13" pos:end="28:13">i</name> <init pos:start="28:15" pos:end="28:17">= <expr pos:start="28:17" pos:end="28:17"><literal type="number" pos:start="28:17" pos:end="28:17">1</literal></expr></init></decl>;</init><condition pos:start="28:19" pos:end="28:25"><expr pos:start="28:19" pos:end="28:24"><name pos:start="28:19" pos:end="28:19">i</name> <operator pos:start="28:21" pos:end="28:22">&lt;=</operator> <name pos:start="28:24" pos:end="28:24">n</name></expr>;</condition><incr pos:start="28:26" pos:end="28:28"><expr pos:start="28:26" pos:end="28:28"><name pos:start="28:26" pos:end="28:26">i</name><operator pos:start="28:27" pos:end="28:28">++</operator></expr></incr>)</control><block pos:start="28:30" pos:end="30:5">{<block_content pos:start="29:9" pos:end="29:44">
        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><call pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:13">scanf</name><argument_list pos:start="29:14" pos:end="29:43">(<argument pos:start="29:15" pos:end="29:20"><expr pos:start="29:15" pos:end="29:20"><literal type="string" pos:start="29:15" pos:end="29:20">"%d%d"</literal></expr></argument>,<argument pos:start="29:22" pos:end="29:31"><expr pos:start="29:22" pos:end="29:31"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><operator pos:start="29:23" pos:end="29:23">(</operator><name pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:24">s</name><index pos:start="29:25" pos:end="29:27">[<expr pos:start="29:26" pos:end="29:26"><name pos:start="29:26" pos:end="29:26">i</name></expr>]</index></name><operator pos:start="29:28" pos:end="29:28">.</operator><name pos:start="29:29" pos:end="29:30">fn</name><operator pos:start="29:31" pos:end="29:31">)</operator></expr></argument>,<argument pos:start="29:33" pos:end="29:42"><expr pos:start="29:33" pos:end="29:42"><operator pos:start="29:33" pos:end="29:33">&amp;</operator><operator pos:start="29:34" pos:end="29:34">(</operator><name pos:start="29:35" pos:end="29:38"><name pos:start="29:35" pos:end="29:35">s</name><index pos:start="29:36" pos:end="29:38">[<expr pos:start="29:37" pos:end="29:37"><name pos:start="29:37" pos:end="29:37">i</name></expr>]</index></name><operator pos:start="29:39" pos:end="29:39">.</operator><name pos:start="29:40" pos:end="29:41">bz</name><operator pos:start="29:42" pos:end="29:42">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:7">vis</name><index pos:start="31:8" pos:end="31:10">[<expr pos:start="31:9" pos:end="31:9"><literal type="number" pos:start="31:9" pos:end="31:9">1</literal></expr>]</index></name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="boolean" pos:start="31:14" pos:end="31:17">true</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:15"><expr pos:start="32:5" pos:end="32:14"><call pos:start="32:5" pos:end="32:14"><name pos:start="32:5" pos:end="32:7">dfs</name><argument_list pos:start="32:8" pos:end="32:14">(<argument pos:start="32:9" pos:end="32:9"><expr pos:start="32:9" pos:end="32:9"><literal type="number" pos:start="32:9" pos:end="32:9">1</literal></expr></argument>,<argument pos:start="32:11" pos:end="32:11"><expr pos:start="32:11" pos:end="32:11"><literal type="number" pos:start="32:11" pos:end="32:11">0</literal></expr></argument>,<argument pos:start="32:13" pos:end="32:13"><expr pos:start="32:13" pos:end="32:13"><literal type="number" pos:start="32:13" pos:end="32:13">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><call pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:10">printf</name><argument_list pos:start="33:11" pos:end="33:20">(<argument pos:start="33:12" pos:end="33:15"><expr pos:start="33:12" pos:end="33:15"><literal type="string" pos:start="33:12" pos:end="33:15">"%d"</literal></expr></argument>,<argument pos:start="33:17" pos:end="33:19"><expr pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:19">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="34:5" pos:end="34:13">return <expr pos:start="34:12" pos:end="34:12"><literal type="number" pos:start="34:12" pos:end="34:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
