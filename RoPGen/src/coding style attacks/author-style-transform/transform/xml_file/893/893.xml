<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/893/893.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="17:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="17:5">{<block_content pos:start="5:5" pos:end="16:9">
    <expr_stmt pos:start="5:5" pos:end="5:42"><expr pos:start="5:5" pos:end="5:41"><call pos:start="5:5" pos:end="5:41"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:41">(<argument pos:start="5:13" pos:end="5:28"><expr pos:start="5:13" pos:end="5:28"><literal type="string" pos:start="5:13" pos:end="5:28">"plalindrome.in"</literal></expr></argument>, <argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><literal type="string" pos:start="5:31" pos:end="5:33">"r"</literal></expr></argument>, <argument pos:start="5:36" pos:end="5:40"><expr pos:start="5:36" pos:end="5:40"><name pos:start="5:36" pos:end="5:40">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:44"><expr pos:start="6:5" pos:end="6:43"><call pos:start="6:5" pos:end="6:43"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:43">(<argument pos:start="6:13" pos:end="6:29"><expr pos:start="6:13" pos:end="6:29"><literal type="string" pos:start="6:13" pos:end="6:29">"plalindrome.out"</literal></expr></argument>, <argument pos:start="6:32" pos:end="6:34"><expr pos:start="6:32" pos:end="6:34"><literal type="string" pos:start="6:32" pos:end="6:34">"w"</literal></expr></argument>, <argument pos:start="6:37" pos:end="6:42"><expr pos:start="6:37" pos:end="6:42"><name pos:start="6:37" pos:end="6:42">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:13"><expr pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:7">cin</name> <operator pos:start="8:9" pos:end="8:10">&gt;&gt;</operator> <name pos:start="8:12" pos:end="8:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">a</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">b</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">c</name></decl>;</decl_stmt>
    <for pos:start="10:5" pos:end="16:9">for<control pos:start="10:8" pos:end="10:35">(<init pos:start="10:9" pos:end="10:18"><decl pos:start="10:9" pos:end="10:17"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">i</name> <init pos:start="10:15" pos:end="10:17">= <expr pos:start="10:17" pos:end="10:17"><literal type="number" pos:start="10:17" pos:end="10:17">0</literal></expr></init></decl>;</init> <condition pos:start="10:20" pos:end="10:30"><expr pos:start="10:20" pos:end="10:29"><name pos:start="10:20" pos:end="10:20">a</name> <operator pos:start="10:22" pos:end="10:22">*</operator> <name pos:start="10:24" pos:end="10:24">a</name> <operator pos:start="10:26" pos:end="10:27">&lt;=</operator> <name pos:start="10:29" pos:end="10:29">n</name></expr>;</condition> <incr pos:start="10:32" pos:end="10:34"><expr pos:start="10:32" pos:end="10:34"><name pos:start="10:32" pos:end="10:32">i</name><operator pos:start="10:33" pos:end="10:34">++</operator></expr></incr>)</control><block pos:start="10:36" pos:end="16:9">{<block_content pos:start="11:9" pos:end="15:13">
        <for pos:start="11:9" pos:end="15:13">for<control pos:start="11:12" pos:end="11:46">(<init pos:start="11:13" pos:end="11:22"><decl pos:start="11:13" pos:end="11:21"><type pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:15">int</name></type> <name pos:start="11:17" pos:end="11:17">j</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</init><condition pos:start="11:23" pos:end="11:41"><expr pos:start="11:23" pos:end="11:40"><name pos:start="11:23" pos:end="11:23">a</name> <operator pos:start="11:25" pos:end="11:25">*</operator> <name pos:start="11:27" pos:end="11:27">a</name> <operator pos:start="11:29" pos:end="11:29">+</operator> <name pos:start="11:31" pos:end="11:31">b</name> <operator pos:start="11:33" pos:end="11:33">*</operator> <name pos:start="11:35" pos:end="11:35">b</name> <operator pos:start="11:37" pos:end="11:38">&lt;=</operator> <name pos:start="11:40" pos:end="11:40">n</name></expr>;</condition> <incr pos:start="11:43" pos:end="11:45"><expr pos:start="11:43" pos:end="11:45"><name pos:start="11:43" pos:end="11:43">j</name><operator pos:start="11:44" pos:end="11:45">++</operator></expr></incr>)</control><block pos:start="11:47" pos:end="15:13">{<block_content pos:start="12:13" pos:end="14:17">
            <for pos:start="12:13" pos:end="14:17">for<control pos:start="12:16" pos:end="12:53">(<init pos:start="12:17" pos:end="12:26"><decl pos:start="12:17" pos:end="12:25"><type pos:start="12:17" pos:end="12:19"><name pos:start="12:17" pos:end="12:19">int</name></type> <name pos:start="12:21" pos:end="12:21">k</name> <init pos:start="12:23" pos:end="12:25">= <expr pos:start="12:25" pos:end="12:25"><literal type="number" pos:start="12:25" pos:end="12:25">0</literal></expr></init></decl>;</init><condition pos:start="12:27" pos:end="12:48"><expr pos:start="12:27" pos:end="12:47"><name pos:start="12:27" pos:end="12:27">a</name> <operator pos:start="12:29" pos:end="12:29">*</operator> <name pos:start="12:31" pos:end="12:31">a</name> <operator pos:start="12:33" pos:end="12:33">+</operator> <name pos:start="12:35" pos:end="12:35">b</name> <operator pos:start="12:37" pos:end="12:37">*</operator> <name pos:start="12:39" pos:end="12:39">b</name> <operator pos:start="12:41" pos:end="12:41">+</operator> <name pos:start="12:43" pos:end="12:43">c</name> <operator pos:start="12:45" pos:end="12:45">*</operator> <name pos:start="12:47" pos:end="12:47">c</name></expr>;</condition> <incr pos:start="12:50" pos:end="12:52"><expr pos:start="12:50" pos:end="12:52"><name pos:start="12:50" pos:end="12:50">k</name><operator pos:start="12:51" pos:end="12:52">++</operator></expr></incr>)</control><block pos:start="12:54" pos:end="14:17">{<block_content>
            
                </block_content>}</block></for>
            </block_content>}</block></for>
        </block_content>}</block></for>
    </block_content>}</block></function>
</unit>
