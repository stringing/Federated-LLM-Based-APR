<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1193/1193.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:14"><decl pos:start="4:1" pos:end="4:13"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:13"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:13">[<expr pos:start="4:7" pos:end="4:12"><literal type="number" pos:start="4:7" pos:end="4:12">106000</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="26:1"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:8">cmp</name> <parameter_list pos:start="5:10" pos:end="5:23">(<parameter pos:start="5:11" pos:end="5:15"><decl pos:start="5:11" pos:end="5:15"><type pos:start="5:11" pos:end="5:15"><name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:15">x</name></decl></parameter>, <parameter pos:start="5:18" pos:end="5:22"><decl pos:start="5:18" pos:end="5:22"><type pos:start="5:18" pos:end="5:22"><name pos:start="5:18" pos:end="5:20">int</name></type> <name pos:start="5:22" pos:end="5:22">y</name></decl></parameter>)</parameter_list>
<block pos:start="6:1" pos:end="26:1">{<block_content pos:start="7:5" pos:end="25:5">
    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">xsum</name> <init pos:start="7:14" pos:end="7:16">= <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr></init></decl>, <decl pos:start="7:19" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:22">ysum</name> <init pos:start="7:24" pos:end="7:26">= <expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="8:5" pos:end="12:5">while <condition pos:start="8:11" pos:end="8:17">(<expr pos:start="8:12" pos:end="8:16"><name pos:start="8:12" pos:end="8:12">x</name> <operator pos:start="8:14" pos:end="8:14">&gt;</operator> <literal type="number" pos:start="8:16" pos:end="8:16">0</literal></expr>)</condition>
    <block pos:start="9:5" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:16">
        <expr_stmt pos:start="10:9" pos:end="10:29"><expr pos:start="10:9" pos:end="10:28"><name pos:start="10:9" pos:end="10:12">xsum</name> <operator pos:start="10:14" pos:end="10:14">=</operator> <name pos:start="10:16" pos:end="10:19">xsum</name> <operator pos:start="10:21" pos:end="10:21">+</operator> <name pos:start="10:23" pos:end="10:23">x</name> <operator pos:start="10:25" pos:end="10:25">%</operator> <literal type="number" pos:start="10:27" pos:end="10:28">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:16"><expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:9">x</name> <operator pos:start="11:11" pos:end="11:12">/=</operator> <literal type="number" pos:start="11:14" pos:end="11:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="13:5" pos:end="17:5">while <condition pos:start="13:11" pos:end="13:17">(<expr pos:start="13:12" pos:end="13:16"><name pos:start="13:12" pos:end="13:12">y</name> <operator pos:start="13:14" pos:end="13:14">&gt;</operator> <literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>)</condition>
    <block pos:start="14:5" pos:end="17:5">{<block_content pos:start="15:9" pos:end="16:16">
        <expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:12">ysum</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:19">ysum</name> <operator pos:start="15:21" pos:end="15:21">+</operator> <name pos:start="15:23" pos:end="15:23">y</name> <operator pos:start="15:25" pos:end="15:25">%</operator> <literal type="number" pos:start="15:27" pos:end="15:28">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:16"><expr pos:start="16:9" pos:end="16:15"><name pos:start="16:9" pos:end="16:9">y</name> <operator pos:start="16:11" pos:end="16:12">/=</operator> <literal type="number" pos:start="16:14" pos:end="16:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <if_stmt pos:start="18:5" pos:end="25:5"><if pos:start="18:5" pos:end="21:5">if <condition pos:start="18:8" pos:end="18:21">(<expr pos:start="18:9" pos:end="18:20"><name pos:start="18:9" pos:end="18:12">xsum</name> <operator pos:start="18:14" pos:end="18:15">!=</operator> <name pos:start="18:17" pos:end="18:20">ysum</name></expr>)</condition>
    <block pos:start="19:5" pos:end="21:5">{<block_content pos:start="20:9" pos:end="20:27">
        <return pos:start="20:9" pos:end="20:27">return <expr pos:start="20:16" pos:end="20:26"><name pos:start="20:16" pos:end="20:19">xsum</name> <operator pos:start="20:21" pos:end="20:21">&lt;</operator> <name pos:start="20:23" pos:end="20:26">ysum</name></expr>;</return>
    </block_content>}</block></if>
    <else pos:start="22:5" pos:end="25:5">else
    <block pos:start="23:5" pos:end="25:5">{<block_content pos:start="24:9" pos:end="24:21">
        <return pos:start="24:9" pos:end="24:21">return <expr pos:start="24:16" pos:end="24:20"><name pos:start="24:16" pos:end="24:16">x</name> <operator pos:start="24:18" pos:end="24:18">&lt;</operator> <name pos:start="24:20" pos:end="24:20">y</name></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function pos:start="28:1" pos:end="41:1"><type pos:start="28:1" pos:end="28:3"><name pos:start="28:1" pos:end="28:3">int</name></type> <name pos:start="28:5" pos:end="28:8">main</name><parameter_list pos:start="28:9" pos:end="28:10">()</parameter_list> <block pos:start="28:12" pos:end="41:1">{<block_content pos:start="29:5" pos:end="40:13">
    <decl_stmt pos:start="29:5" pos:end="29:10"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:13"><expr pos:start="30:5" pos:end="30:12"><name pos:start="30:5" pos:end="30:7">cin</name> <operator pos:start="30:9" pos:end="30:10">&gt;&gt;</operator> <name pos:start="30:12" pos:end="30:12">n</name></expr>;</expr_stmt>
    <for pos:start="31:5" pos:end="34:5">for <control pos:start="31:9" pos:end="31:33">(<init pos:start="31:10" pos:end="31:20"><decl pos:start="31:10" pos:end="31:18"><type pos:start="31:10" pos:end="31:12"><name pos:start="31:10" pos:end="31:12">int</name></type> <name pos:start="31:14" pos:end="31:14">i</name> <init pos:start="31:16" pos:end="31:18">= <expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr></init></decl> ;</init> <condition pos:start="31:22" pos:end="31:28"><expr pos:start="31:22" pos:end="31:26"><name pos:start="31:22" pos:end="31:22">i</name> <operator pos:start="31:24" pos:end="31:24">&lt;</operator> <name pos:start="31:26" pos:end="31:26">n</name></expr> ;</condition> <incr pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:30">i</name><operator pos:start="31:31" pos:end="31:32">++</operator></expr></incr>)</control>
    <block pos:start="32:5" pos:end="34:5">{<block_content pos:start="33:9" pos:end="33:20">
        <expr_stmt pos:start="33:9" pos:end="33:20"><expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:11">cin</name> <operator pos:start="33:13" pos:end="33:14">&gt;&gt;</operator> <name pos:start="33:16" pos:end="33:19"><name pos:start="33:16" pos:end="33:16">a</name><index pos:start="33:17" pos:end="33:19">[<expr pos:start="33:18" pos:end="33:18"><name pos:start="33:18" pos:end="33:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><call pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:8">sort</name><argument_list pos:start="35:9" pos:end="35:23">(<argument pos:start="35:10" pos:end="35:10"><expr pos:start="35:10" pos:end="35:10"><name pos:start="35:10" pos:end="35:10">a</name></expr></argument>, <argument pos:start="35:13" pos:end="35:17"><expr pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:13">a</name> <operator pos:start="35:15" pos:end="35:15">+</operator> <name pos:start="35:17" pos:end="35:17">n</name></expr></argument>, <argument pos:start="35:20" pos:end="35:22"><expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="36:5" pos:end="39:5">for <control pos:start="36:9" pos:end="36:33">(<init pos:start="36:10" pos:end="36:20"><decl pos:start="36:10" pos:end="36:18"><type pos:start="36:10" pos:end="36:12"><name pos:start="36:10" pos:end="36:12">int</name></type> <name pos:start="36:14" pos:end="36:14">i</name> <init pos:start="36:16" pos:end="36:18">= <expr pos:start="36:18" pos:end="36:18"><literal type="number" pos:start="36:18" pos:end="36:18">0</literal></expr></init></decl> ;</init> <condition pos:start="36:22" pos:end="36:28"><expr pos:start="36:22" pos:end="36:26"><name pos:start="36:22" pos:end="36:22">i</name> <operator pos:start="36:24" pos:end="36:24">&lt;</operator> <name pos:start="36:26" pos:end="36:26">n</name></expr> ;</condition> <incr pos:start="36:30" pos:end="36:32"><expr pos:start="36:30" pos:end="36:32"><name pos:start="36:30" pos:end="36:30">i</name><operator pos:start="36:31" pos:end="36:32">++</operator></expr></incr>)</control>
    <block pos:start="37:5" pos:end="39:5">{<block_content pos:start="38:9" pos:end="38:28">
        <expr_stmt pos:start="38:9" pos:end="38:28"><expr pos:start="38:9" pos:end="38:27"><name pos:start="38:9" pos:end="38:12">cout</name> <operator pos:start="38:14" pos:end="38:15">&lt;&lt;</operator> <name pos:start="38:17" pos:end="38:20"><name pos:start="38:17" pos:end="38:17">a</name><index pos:start="38:18" pos:end="38:20">[<expr pos:start="38:19" pos:end="38:19"><name pos:start="38:19" pos:end="38:19">i</name></expr>]</index></name> <operator pos:start="38:22" pos:end="38:23">&lt;&lt;</operator> <literal type="string" pos:start="38:25" pos:end="38:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="40:5" pos:end="40:13">return <expr pos:start="40:12" pos:end="40:12"><literal type="number" pos:start="40:12" pos:end="40:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
