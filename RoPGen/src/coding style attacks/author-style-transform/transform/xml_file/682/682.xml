<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/682/682.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:18">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:18">&lt;fstream&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:12"><decl pos:start="4:1" pos:end="4:11"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:7">ans</name> <init pos:start="4:9" pos:end="4:11">= <expr pos:start="4:11" pos:end="4:11"><literal type="number" pos:start="4:11" pos:end="4:11">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt pos:start="6:1" pos:end="6:8"><decl pos:start="6:1" pos:end="6:7"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:7">num</name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:26"><decl pos:start="7:1" pos:end="7:25"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">bool</name></type> <name pos:start="7:6" pos:end="7:25"><name pos:start="7:6" pos:end="7:17">fallensquare</name><index pos:start="7:18" pos:end="7:21">[<expr pos:start="7:19" pos:end="7:20"><literal type="number" pos:start="7:19" pos:end="7:20">10</literal></expr>]</index><index pos:start="7:22" pos:end="7:25">[<expr pos:start="7:23" pos:end="7:24"><literal type="number" pos:start="7:23" pos:end="7:24">10</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:27"><decl pos:start="8:1" pos:end="8:12"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">bool</name></type> <name pos:start="8:6" pos:end="8:12"><name pos:start="8:6" pos:end="8:8">row</name><index pos:start="8:9" pos:end="8:12">[<expr pos:start="8:10" pos:end="8:11"><literal type="number" pos:start="8:10" pos:end="8:11">10</literal></expr>]</index></name></decl>,<decl pos:start="8:14" pos:end="8:19"><type ref="prev" pos:start="8:1" pos:end="8:4"/><name pos:start="8:14" pos:end="8:19"><name pos:start="8:14" pos:end="8:15">x1</name><index pos:start="8:16" pos:end="8:19">[<expr pos:start="8:17" pos:end="8:18"><literal type="number" pos:start="8:17" pos:end="8:18">20</literal></expr>]</index></name></decl>,<decl pos:start="8:21" pos:end="8:26"><type ref="prev" pos:start="8:1" pos:end="8:4"/><name pos:start="8:21" pos:end="8:26"><name pos:start="8:21" pos:end="8:22">x2</name><index pos:start="8:23" pos:end="8:26">[<expr pos:start="8:24" pos:end="8:25"><literal type="number" pos:start="8:24" pos:end="8:25">20</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="9:1" pos:end="11:1"><type pos:start="9:1" pos:end="9:4"><name pos:start="9:1" pos:end="9:4">bool</name></type> <name pos:start="9:6" pos:end="9:10">check</name><parameter_list pos:start="9:11" pos:end="9:23">(<parameter pos:start="9:12" pos:end="9:16"><decl pos:start="9:12" pos:end="9:16"><type pos:start="9:12" pos:end="9:16"><name pos:start="9:12" pos:end="9:14">int</name></type> <name pos:start="9:16" pos:end="9:16">c</name></decl></parameter>,<parameter pos:start="9:18" pos:end="9:22"><decl pos:start="9:18" pos:end="9:22"><type pos:start="9:18" pos:end="9:22"><name pos:start="9:18" pos:end="9:20">int</name></type> <name pos:start="9:22" pos:end="9:22">i</name></decl></parameter>)</parameter_list><block pos:start="9:24" pos:end="11:1">{<block_content pos:start="10:5" pos:end="10:63">
    <return pos:start="10:5" pos:end="10:63">return <expr pos:start="10:12" pos:end="10:62"><operator pos:start="10:12" pos:end="10:12">!</operator><name pos:start="10:13" pos:end="10:18"><name pos:start="10:13" pos:end="10:15">row</name><index pos:start="10:16" pos:end="10:18">[<expr pos:start="10:17" pos:end="10:17"><name pos:start="10:17" pos:end="10:17">i</name></expr>]</index></name><operator pos:start="10:19" pos:end="10:20">&amp;&amp;</operator><operator pos:start="10:21" pos:end="10:21">!</operator><name pos:start="10:22" pos:end="10:28"><name pos:start="10:22" pos:end="10:23">x1</name><index pos:start="10:24" pos:end="10:28">[<expr pos:start="10:25" pos:end="10:27"><name pos:start="10:25" pos:end="10:25">c</name><operator pos:start="10:26" pos:end="10:26">+</operator><name pos:start="10:27" pos:end="10:27">i</name></expr>]</index></name><operator pos:start="10:29" pos:end="10:30">&amp;&amp;</operator><operator pos:start="10:31" pos:end="10:31">!</operator><name pos:start="10:32" pos:end="10:42"><name pos:start="10:32" pos:end="10:33">x2</name><index pos:start="10:34" pos:end="10:42">[<expr pos:start="10:35" pos:end="10:41"><name pos:start="10:35" pos:end="10:35">c</name><operator pos:start="10:36" pos:end="10:36">-</operator><name pos:start="10:37" pos:end="10:37">i</name><operator pos:start="10:38" pos:end="10:38">+</operator><name pos:start="10:39" pos:end="10:41">num</name></expr>]</index></name><operator pos:start="10:43" pos:end="10:44">&amp;&amp;</operator><name pos:start="10:45" pos:end="10:62"><name pos:start="10:45" pos:end="10:56">fallensquare</name><index pos:start="10:57" pos:end="10:59">[<expr pos:start="10:58" pos:end="10:58"><name pos:start="10:58" pos:end="10:58">c</name></expr>]</index><index pos:start="10:60" pos:end="10:62">[<expr pos:start="10:61" pos:end="10:61"><name pos:start="10:61" pos:end="10:61">i</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>
<function pos:start="12:1" pos:end="24:1"><type pos:start="12:1" pos:end="12:4"><name pos:start="12:1" pos:end="12:4">void</name></type> <name pos:start="12:6" pos:end="12:8">dfs</name><parameter_list pos:start="12:9" pos:end="12:15">(<parameter pos:start="12:10" pos:end="12:14"><decl pos:start="12:10" pos:end="12:14"><type pos:start="12:10" pos:end="12:12"><name pos:start="12:10" pos:end="12:12">int</name></type> <name pos:start="12:14" pos:end="12:14">c</name></decl></parameter>)</parameter_list><block pos:start="12:16" pos:end="24:1">{<block_content pos:start="13:5" pos:end="23:5">
    <if_stmt pos:start="13:5" pos:end="16:5"><if pos:start="13:5" pos:end="16:5">if<condition pos:start="13:7" pos:end="13:14">(<expr pos:start="13:8" pos:end="13:13"><name pos:start="13:8" pos:end="13:8">c</name><operator pos:start="13:9" pos:end="13:10">==</operator><name pos:start="13:11" pos:end="13:13">num</name></expr>)</condition><block pos:start="13:15" pos:end="16:5">{<block_content pos:start="14:9" pos:end="15:15">
        <expr_stmt pos:start="14:9" pos:end="14:14"><expr pos:start="14:9" pos:end="14:13"><name pos:start="14:9" pos:end="14:11">ans</name><operator pos:start="14:12" pos:end="14:13">++</operator></expr>;</expr_stmt>
        <return pos:start="15:9" pos:end="15:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="17:5" pos:end="23:5">for<control pos:start="17:8" pos:end="17:26">(<init pos:start="17:9" pos:end="17:16"><decl pos:start="17:9" pos:end="17:15"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">i</name><init pos:start="17:14" pos:end="17:15">=<expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></init></decl>;</init><condition pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:21"><name pos:start="17:17" pos:end="17:17">i</name><operator pos:start="17:18" pos:end="17:18">&lt;</operator><name pos:start="17:19" pos:end="17:21">num</name></expr>;</condition><incr pos:start="17:23" pos:end="17:25"><expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:23">i</name><operator pos:start="17:24" pos:end="17:25">++</operator></expr></incr>)</control><block pos:start="17:27" pos:end="23:5">{<block_content pos:start="18:9" pos:end="22:9">
        <if_stmt pos:start="18:9" pos:end="22:9"><if pos:start="18:9" pos:end="22:9">if<condition pos:start="18:11" pos:end="18:22">(<expr pos:start="18:12" pos:end="18:21"><call pos:start="18:12" pos:end="18:21"><name pos:start="18:12" pos:end="18:16">check</name><argument_list pos:start="18:17" pos:end="18:21">(<argument pos:start="18:18" pos:end="18:18"><expr pos:start="18:18" pos:end="18:18"><name pos:start="18:18" pos:end="18:18">c</name></expr></argument>,<argument pos:start="18:20" pos:end="18:20"><expr pos:start="18:20" pos:end="18:20"><name pos:start="18:20" pos:end="18:20">i</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="18:23" pos:end="22:9">{<block_content pos:start="19:13" pos:end="21:45">
            <expr_stmt pos:start="19:13" pos:end="19:44"><expr pos:start="19:13" pos:end="19:43"><name pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:15">row</name><index pos:start="19:16" pos:end="19:18">[<expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">i</name></expr>]</index></name><operator pos:start="19:19" pos:end="19:19">=</operator><name pos:start="19:20" pos:end="19:26"><name pos:start="19:20" pos:end="19:21">x1</name><index pos:start="19:22" pos:end="19:26">[<expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:23">c</name><operator pos:start="19:24" pos:end="19:24">+</operator><name pos:start="19:25" pos:end="19:25">i</name></expr>]</index></name><operator pos:start="19:27" pos:end="19:27">=</operator><name pos:start="19:28" pos:end="19:38"><name pos:start="19:28" pos:end="19:29">x2</name><index pos:start="19:30" pos:end="19:38">[<expr pos:start="19:31" pos:end="19:37"><name pos:start="19:31" pos:end="19:31">c</name><operator pos:start="19:32" pos:end="19:32">-</operator><name pos:start="19:33" pos:end="19:33">i</name><operator pos:start="19:34" pos:end="19:34">+</operator><name pos:start="19:35" pos:end="19:37">num</name></expr>]</index></name><operator pos:start="19:39" pos:end="19:39">=</operator><literal type="boolean" pos:start="19:40" pos:end="19:43">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:21"><expr pos:start="20:13" pos:end="20:20"><call pos:start="20:13" pos:end="20:20"><name pos:start="20:13" pos:end="20:15">dfs</name><argument_list pos:start="20:16" pos:end="20:20">(<argument pos:start="20:17" pos:end="20:19"><expr pos:start="20:17" pos:end="20:19"><name pos:start="20:17" pos:end="20:17">c</name><operator pos:start="20:18" pos:end="20:18">+</operator><literal type="number" pos:start="20:19" pos:end="20:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:45"><expr pos:start="21:13" pos:end="21:44"><name pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:15">row</name><index pos:start="21:16" pos:end="21:18">[<expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">i</name></expr>]</index></name><operator pos:start="21:19" pos:end="21:19">=</operator><name pos:start="21:20" pos:end="21:26"><name pos:start="21:20" pos:end="21:21">x1</name><index pos:start="21:22" pos:end="21:26">[<expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:23">c</name><operator pos:start="21:24" pos:end="21:24">+</operator><name pos:start="21:25" pos:end="21:25">i</name></expr>]</index></name><operator pos:start="21:27" pos:end="21:27">=</operator><name pos:start="21:28" pos:end="21:38"><name pos:start="21:28" pos:end="21:29">x2</name><index pos:start="21:30" pos:end="21:38">[<expr pos:start="21:31" pos:end="21:37"><name pos:start="21:31" pos:end="21:31">c</name><operator pos:start="21:32" pos:end="21:32">-</operator><name pos:start="21:33" pos:end="21:33">i</name><operator pos:start="21:34" pos:end="21:34">+</operator><name pos:start="21:35" pos:end="21:37">num</name></expr>]</index></name><operator pos:start="21:39" pos:end="21:39">=</operator><literal type="boolean" pos:start="21:40" pos:end="21:44">false</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="25:1" pos:end="41:1"><type pos:start="25:1" pos:end="25:3"><name pos:start="25:1" pos:end="25:3">int</name></type> <name pos:start="25:5" pos:end="25:8">main</name><parameter_list pos:start="25:9" pos:end="25:10">()</parameter_list> <block pos:start="25:12" pos:end="41:1">{<block_content pos:start="26:5" pos:end="40:13">
    <decl_stmt pos:start="26:5" pos:end="26:17"><decl pos:start="26:5" pos:end="26:16"><type pos:start="26:5" pos:end="26:12"><name pos:start="26:5" pos:end="26:12">ifstream</name></type> <name pos:start="26:14" pos:end="26:16">fin</name></decl>;</decl_stmt>
    <decl_stmt pos:start="27:5" pos:end="27:18"><decl pos:start="27:5" pos:end="27:17"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">ofstream</name></type> <name pos:start="27:14" pos:end="27:17">fout</name></decl>;</decl_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:25"><expr pos:start="28:5" pos:end="28:24"><call pos:start="28:5" pos:end="28:24"><name pos:start="28:5" pos:end="28:12"><name pos:start="28:5" pos:end="28:7">fin</name><operator pos:start="28:8" pos:end="28:8">.</operator><name pos:start="28:9" pos:end="28:12">open</name></name><argument_list pos:start="28:13" pos:end="28:24">(<argument pos:start="28:14" pos:end="28:23"><expr pos:start="28:14" pos:end="28:23"><literal type="string" pos:start="28:14" pos:end="28:23">"queen.in"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><call pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:8">fout</name><operator pos:start="29:9" pos:end="29:9">.</operator><name pos:start="29:10" pos:end="29:13">open</name></name><argument_list pos:start="29:14" pos:end="29:26">(<argument pos:start="29:15" pos:end="29:25"><expr pos:start="29:15" pos:end="29:25"><literal type="string" pos:start="29:15" pos:end="29:25">"queen.out"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:13"><expr pos:start="30:5" pos:end="30:12"><name pos:start="30:5" pos:end="30:7">fin</name><operator pos:start="30:8" pos:end="30:9">&gt;&gt;</operator><name pos:start="30:10" pos:end="30:12">num</name></expr>;</expr_stmt>
    <for pos:start="31:5" pos:end="35:5">for<control pos:start="31:8" pos:end="31:26">(<init pos:start="31:9" pos:end="31:16"><decl pos:start="31:9" pos:end="31:15"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name><init pos:start="31:14" pos:end="31:15">=<expr pos:start="31:15" pos:end="31:15"><literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr></init></decl>;</init><condition pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:17">i</name><operator pos:start="31:18" pos:end="31:18">&lt;</operator><name pos:start="31:19" pos:end="31:21">num</name></expr>;</condition><incr pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:23">i</name><operator pos:start="31:24" pos:end="31:25">++</operator></expr></incr>)</control><block pos:start="31:27" pos:end="35:5">{<block_content pos:start="32:9" pos:end="34:9">
        <for pos:start="32:9" pos:end="34:9">for<control pos:start="32:12" pos:end="32:30">(<init pos:start="32:13" pos:end="32:20"><decl pos:start="32:13" pos:end="32:19"><type pos:start="32:13" pos:end="32:15"><name pos:start="32:13" pos:end="32:15">int</name></type> <name pos:start="32:17" pos:end="32:17">j</name><init pos:start="32:18" pos:end="32:19">=<expr pos:start="32:19" pos:end="32:19"><literal type="number" pos:start="32:19" pos:end="32:19">0</literal></expr></init></decl>;</init><condition pos:start="32:21" pos:end="32:26"><expr pos:start="32:21" pos:end="32:25"><name pos:start="32:21" pos:end="32:21">j</name><operator pos:start="32:22" pos:end="32:22">&lt;</operator><name pos:start="32:23" pos:end="32:25">num</name></expr>;</condition><incr pos:start="32:27" pos:end="32:29"><expr pos:start="32:27" pos:end="32:29"><name pos:start="32:27" pos:end="32:27">j</name><operator pos:start="32:28" pos:end="32:29">++</operator></expr></incr>)</control><block pos:start="32:31" pos:end="34:9">{<block_content pos:start="33:13" pos:end="33:36">
            <expr_stmt pos:start="33:13" pos:end="33:36"><expr pos:start="33:13" pos:end="33:35"><name pos:start="33:13" pos:end="33:15">fin</name><operator pos:start="33:16" pos:end="33:17">&gt;&gt;</operator><name pos:start="33:18" pos:end="33:35"><name pos:start="33:18" pos:end="33:29">fallensquare</name><index pos:start="33:30" pos:end="33:32">[<expr pos:start="33:31" pos:end="33:31"><name pos:start="33:31" pos:end="33:31">i</name></expr>]</index><index pos:start="33:33" pos:end="33:35">[<expr pos:start="33:34" pos:end="33:34"><name pos:start="33:34" pos:end="33:34">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="36:5" pos:end="36:11"><expr pos:start="36:5" pos:end="36:10"><call pos:start="36:5" pos:end="36:10"><name pos:start="36:5" pos:end="36:7">dfs</name><argument_list pos:start="36:8" pos:end="36:10">(<argument pos:start="36:9" pos:end="36:9"><expr pos:start="36:9" pos:end="36:9"><literal type="number" pos:start="36:9" pos:end="36:9">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:20"><expr pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:8">fout</name><operator pos:start="37:9" pos:end="37:10">&lt;&lt;</operator><name pos:start="37:11" pos:end="37:13">ans</name><operator pos:start="37:14" pos:end="37:15">&lt;&lt;</operator><name pos:start="37:16" pos:end="37:19">endl</name></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:16"><expr pos:start="38:5" pos:end="38:15"><call pos:start="38:5" pos:end="38:15"><name pos:start="38:5" pos:end="38:13"><name pos:start="38:5" pos:end="38:7">fin</name><operator pos:start="38:8" pos:end="38:8">.</operator><name pos:start="38:9" pos:end="38:13">close</name></name><argument_list pos:start="38:14" pos:end="38:15">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:17"><expr pos:start="39:5" pos:end="39:16"><call pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:8">fout</name><operator pos:start="39:9" pos:end="39:9">.</operator><name pos:start="39:10" pos:end="39:14">close</name></name><argument_list pos:start="39:15" pos:end="39:16">()</argument_list></call></expr>;</expr_stmt>
    <return pos:start="40:5" pos:end="40:13">return <expr pos:start="40:12" pos:end="40:12"><literal type="number" pos:start="40:12" pos:end="40:12">0</literal></expr>;</return>    
</block_content>}</block></function>
</unit>
