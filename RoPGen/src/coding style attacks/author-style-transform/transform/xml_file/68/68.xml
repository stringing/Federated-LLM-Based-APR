<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/68/68.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:8"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:7"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:7">m</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:10"><decl pos:start="4:1" pos:end="4:9"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:9"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:9">[<expr pos:start="4:7" pos:end="4:8"><literal type="number" pos:start="4:7" pos:end="4:8">22</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:18"><decl pos:start="5:1" pos:end="5:17"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">minn</name><init pos:start="5:9" pos:end="5:17">=<expr pos:start="5:10" pos:end="5:17"><literal type="number" pos:start="5:10" pos:end="5:17">10000000</literal></expr></init></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="15:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">void</name></type> <name pos:start="6:6" pos:end="6:8">dfs</name><parameter_list pos:start="6:9" pos:end="6:29">(<parameter pos:start="6:10" pos:end="6:14"><decl pos:start="6:10" pos:end="6:14"><type pos:start="6:10" pos:end="6:14"><name pos:start="6:10" pos:end="6:12">int</name></type> <name pos:start="6:14" pos:end="6:14">s</name></decl></parameter>,<parameter pos:start="6:16" pos:end="6:20"><decl pos:start="6:16" pos:end="6:20"><type pos:start="6:16" pos:end="6:20"><name pos:start="6:16" pos:end="6:18">int</name></type> <name pos:start="6:20" pos:end="6:20">g</name></decl></parameter>,<parameter pos:start="6:22" pos:end="6:28"><decl pos:start="6:22" pos:end="6:28"><type pos:start="6:22" pos:end="6:28"><name pos:start="6:22" pos:end="6:24">int</name></type> <name pos:start="6:26" pos:end="6:28">sum</name></decl></parameter>)</parameter_list><block pos:start="6:30" pos:end="15:1">{<block_content pos:start="7:5" pos:end="14:19">
    <if_stmt pos:start="7:5" pos:end="10:1"><if pos:start="7:5" pos:end="10:1">if<condition pos:start="7:7" pos:end="7:14">(<expr pos:start="7:8" pos:end="7:13"><name pos:start="7:8" pos:end="7:10">sum</name><operator pos:start="7:11" pos:end="7:12">&gt;=</operator><name pos:start="7:13" pos:end="7:13">g</name></expr>)</condition><block pos:start="7:15" pos:end="10:1">{<block_content pos:start="8:9" pos:end="9:15">
        <expr_stmt pos:start="8:9" pos:end="8:27"><expr pos:start="8:9" pos:end="8:26"><name pos:start="8:9" pos:end="8:12">minn</name><operator pos:start="8:13" pos:end="8:13">=</operator><call pos:start="8:14" pos:end="8:26"><name pos:start="8:14" pos:end="8:16">min</name><argument_list pos:start="8:17" pos:end="8:26">(<argument pos:start="8:18" pos:end="8:21"><expr pos:start="8:18" pos:end="8:21"><name pos:start="8:18" pos:end="8:21">minn</name></expr></argument>,<argument pos:start="8:23" pos:end="8:25"><expr pos:start="8:23" pos:end="8:25"><name pos:start="8:23" pos:end="8:25">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="9:9" pos:end="9:15">return;</return>
</block_content>}</block></if></if_stmt>
    <if_stmt pos:start="11:5" pos:end="12:15"><if pos:start="11:5" pos:end="12:15">if<condition pos:start="11:7" pos:end="11:11">(<expr pos:start="11:8" pos:end="11:10"><name pos:start="11:8" pos:end="11:8">s</name><operator pos:start="11:9" pos:end="11:9">&gt;</operator><name pos:start="11:10" pos:end="11:10">n</name></expr>)</condition><block type="pseudo" pos:start="12:9" pos:end="12:15"><block_content pos:start="12:9" pos:end="12:15">
        <return pos:start="12:9" pos:end="12:15">return;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><call pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:7">dfs</name><argument_list pos:start="13:8" pos:end="13:24">(<argument pos:start="13:9" pos:end="13:11"><expr pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:10">+</operator><literal type="number" pos:start="13:11" pos:end="13:11">1</literal></expr></argument>,<argument pos:start="13:13" pos:end="13:13"><expr pos:start="13:13" pos:end="13:13"><name pos:start="13:13" pos:end="13:13">g</name></expr></argument>,<argument pos:start="13:15" pos:end="13:23"><expr pos:start="13:15" pos:end="13:23"><name pos:start="13:15" pos:end="13:17">sum</name><operator pos:start="13:18" pos:end="13:19">+=</operator><name pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:20">a</name><index pos:start="13:21" pos:end="13:23">[<expr pos:start="13:22" pos:end="13:22"><name pos:start="13:22" pos:end="13:22">s</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:19"><expr pos:start="14:5" pos:end="14:18"><call pos:start="14:5" pos:end="14:18"><name pos:start="14:5" pos:end="14:7">dfs</name><argument_list pos:start="14:8" pos:end="14:18">(<argument pos:start="14:9" pos:end="14:11"><expr pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:9">s</name><operator pos:start="14:10" pos:end="14:10">+</operator><literal type="number" pos:start="14:11" pos:end="14:11">1</literal></expr></argument>,<argument pos:start="14:13" pos:end="14:13"><expr pos:start="14:13" pos:end="14:13"><name pos:start="14:13" pos:end="14:13">g</name></expr></argument>,<argument pos:start="14:15" pos:end="14:17"><expr pos:start="14:15" pos:end="14:17"><name pos:start="14:15" pos:end="14:17">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="16:1" pos:end="26:1"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:8">main</name><parameter_list pos:start="16:9" pos:end="16:10">()</parameter_list><block pos:start="16:11" pos:end="26:1">{<block_content pos:start="17:5" pos:end="25:13">
    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><call pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:11">freopen</name><argument_list pos:start="17:12" pos:end="17:33">(<argument pos:start="17:13" pos:end="17:22"><expr pos:start="17:13" pos:end="17:22"><literal type="string" pos:start="17:13" pos:end="17:22">"shelf.in"</literal></expr></argument>,<argument pos:start="17:24" pos:end="17:26"><expr pos:start="17:24" pos:end="17:26"><literal type="string" pos:start="17:24" pos:end="17:26">"r"</literal></expr></argument>,<argument pos:start="17:28" pos:end="17:32"><expr pos:start="17:28" pos:end="17:32"><name pos:start="17:28" pos:end="17:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:36"><expr pos:start="18:5" pos:end="18:35"><call pos:start="18:5" pos:end="18:35"><name pos:start="18:5" pos:end="18:11">freopen</name><argument_list pos:start="18:12" pos:end="18:35">(<argument pos:start="18:13" pos:end="18:23"><expr pos:start="18:13" pos:end="18:23"><literal type="string" pos:start="18:13" pos:end="18:23">"shelf.out"</literal></expr></argument>,<argument pos:start="18:25" pos:end="18:27"><expr pos:start="18:25" pos:end="18:27"><literal type="string" pos:start="18:25" pos:end="18:27">"w"</literal></expr></argument>,<argument pos:start="18:29" pos:end="18:34"><expr pos:start="18:29" pos:end="18:34"><name pos:start="18:29" pos:end="18:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:14"><expr pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:7">cin</name><operator pos:start="19:8" pos:end="19:9">&gt;&gt;</operator><name pos:start="19:10" pos:end="19:10">n</name><operator pos:start="19:11" pos:end="19:12">&gt;&gt;</operator><name pos:start="19:13" pos:end="19:13">m</name></expr>;</expr_stmt>
    <for pos:start="20:5" pos:end="22:5">for<control pos:start="20:8" pos:end="20:25">(<init pos:start="20:9" pos:end="20:16"><decl pos:start="20:9" pos:end="20:15"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:13">i</name><init pos:start="20:14" pos:end="20:15">=<expr pos:start="20:15" pos:end="20:15"><literal type="number" pos:start="20:15" pos:end="20:15">1</literal></expr></init></decl>;</init><condition pos:start="20:17" pos:end="20:21"><expr pos:start="20:17" pos:end="20:20"><name pos:start="20:17" pos:end="20:17">i</name><operator pos:start="20:18" pos:end="20:19">&lt;=</operator><name pos:start="20:20" pos:end="20:20">n</name></expr>;</condition><incr pos:start="20:22" pos:end="20:24"><expr pos:start="20:22" pos:end="20:24"><name pos:start="20:22" pos:end="20:22">i</name><operator pos:start="20:23" pos:end="20:24">++</operator></expr></incr>)</control><block pos:start="20:26" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:18">
        <expr_stmt pos:start="21:9" pos:end="21:18"><expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:11">cin</name><operator pos:start="21:12" pos:end="21:13">&gt;&gt;</operator><name pos:start="21:14" pos:end="21:17"><name pos:start="21:14" pos:end="21:14">a</name><index pos:start="21:15" pos:end="21:17">[<expr pos:start="21:16" pos:end="21:16"><name pos:start="21:16" pos:end="21:16">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="23:5" pos:end="23:15"><expr pos:start="23:5" pos:end="23:14"><call pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:7">dfs</name><argument_list pos:start="23:8" pos:end="23:14">(<argument pos:start="23:9" pos:end="23:9"><expr pos:start="23:9" pos:end="23:9"><literal type="number" pos:start="23:9" pos:end="23:9">0</literal></expr></argument>,<argument pos:start="23:11" pos:end="23:11"><expr pos:start="23:11" pos:end="23:11"><name pos:start="23:11" pos:end="23:11">m</name></expr></argument>,<argument pos:start="23:13" pos:end="23:13"><expr pos:start="23:13" pos:end="23:13"><literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:23"><expr pos:start="24:5" pos:end="24:22"><name pos:start="24:5" pos:end="24:8">cout</name><operator pos:start="24:9" pos:end="24:10">&lt;&lt;</operator><name pos:start="24:11" pos:end="24:14">minn</name><operator pos:start="24:15" pos:end="24:15">-</operator><name pos:start="24:16" pos:end="24:16">m</name><operator pos:start="24:17" pos:end="24:18">&lt;&lt;</operator><name pos:start="24:19" pos:end="24:22">endl</name></expr>;</expr_stmt>
    <return pos:start="25:5" pos:end="25:13">return <expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
