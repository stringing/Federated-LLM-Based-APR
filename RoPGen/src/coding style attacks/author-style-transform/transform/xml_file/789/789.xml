<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/789/789.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:16">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<function pos:start="6:1" pos:end="34:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list><block pos:start="6:11" pos:end="34:1">{<block_content pos:start="7:5" pos:end="33:13">
    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:10">vector</name><argument_list type="generic" pos:start="7:11" pos:end="7:15">&lt;<argument pos:start="7:12" pos:end="7:14"><expr pos:start="7:12" pos:end="7:14"><name pos:start="7:12" pos:end="7:14">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="7:16" pos:end="7:16">v</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:10"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">x</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:11"><expr pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:7">cin</name><operator pos:start="9:8" pos:end="9:9">&gt;&gt;</operator><name pos:start="9:10" pos:end="9:10">x</name></expr>;</expr_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:13"><decl pos:start="10:5" pos:end="10:12"><type pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:10">string</name></type> <name pos:start="10:12" pos:end="10:12">s</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">p</name><init pos:start="11:10" pos:end="11:14">=<expr pos:start="11:11" pos:end="11:14"><name pos:start="11:11" pos:end="11:11">x</name><operator pos:start="11:12" pos:end="11:12">*</operator><literal type="number" pos:start="11:13" pos:end="11:14">60</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="12:5" pos:end="32:5">while<condition pos:start="12:10" pos:end="12:17">(<expr pos:start="12:11" pos:end="12:16"><name pos:start="12:11" pos:end="12:13">cin</name><operator pos:start="12:14" pos:end="12:15">&gt;&gt;</operator><name pos:start="12:16" pos:end="12:16">s</name></expr>)</condition><block pos:start="12:18" pos:end="32:5">{<block_content pos:start="13:9" pos:end="31:9">
        <if_stmt pos:start="13:9" pos:end="31:9"><if pos:start="13:9" pos:end="15:9">if<condition pos:start="13:11" pos:end="13:29">(<expr pos:start="13:12" pos:end="13:28"><name pos:start="13:12" pos:end="13:12">s</name><operator pos:start="13:13" pos:end="13:14">==</operator><literal type="string" pos:start="13:15" pos:end="13:28">"tingtingting"</literal></expr>)</condition><block pos:start="13:30" pos:end="15:9">{<block_content pos:start="14:13" pos:end="14:21">
            <continue pos:start="14:13" pos:end="14:21">continue;</continue>
        </block_content>}</block></if><if type="elseif" pos:start="15:10" pos:end="21:9">else if<condition pos:start="15:17" pos:end="15:33">(<expr pos:start="15:18" pos:end="15:32"><name pos:start="15:18" pos:end="15:18">s</name><operator pos:start="15:19" pos:end="15:20">==</operator><literal type="string" pos:start="15:21" pos:end="15:32">"kaomianjin"</literal></expr>)</condition><block pos:start="15:34" pos:end="21:9">{<block_content pos:start="16:13" pos:end="20:13">
            <if_stmt pos:start="16:13" pos:end="20:13"><if pos:start="16:13" pos:end="18:13">if<condition pos:start="16:15" pos:end="16:33">(<expr pos:start="16:16" pos:end="16:32"><name pos:start="16:16" pos:end="16:16">s</name><operator pos:start="16:17" pos:end="16:18">==</operator><literal type="string" pos:start="16:19" pos:end="16:32">"tingtingting"</literal></expr>)</condition><block pos:start="16:34" pos:end="18:13">{<block_content pos:start="17:17" pos:end="17:32">
                <expr_stmt pos:start="17:17" pos:end="17:32"><expr pos:start="17:17" pos:end="17:31"><name pos:start="17:17" pos:end="17:20">cout</name><operator pos:start="17:21" pos:end="17:22">&lt;&lt;</operator><literal type="string" pos:start="17:23" pos:end="17:31">"Hahaha."</literal></expr>;</expr_stmt>
            </block_content>}</block></if><else pos:start="18:14" pos:end="20:13">else<block pos:start="18:18" pos:end="20:13">{<block_content pos:start="19:17" pos:end="19:41">
                <expr_stmt pos:start="19:17" pos:end="19:41"><expr pos:start="19:17" pos:end="19:40"><name pos:start="19:17" pos:end="19:20">cout</name><operator pos:start="19:21" pos:end="19:22">&lt;&lt;</operator><literal type="string" pos:start="19:23" pos:end="19:40">"Congratulations!"</literal></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if><else pos:start="21:10" pos:end="31:9">else<block pos:start="21:14" pos:end="31:9">{<block_content pos:start="22:13" pos:end="30:13">
            <decl_stmt pos:start="22:13" pos:end="22:24"><decl pos:start="22:13" pos:end="22:17"><type pos:start="22:13" pos:end="22:15"><name pos:start="22:13" pos:end="22:15">int</name></type> <name pos:start="22:17" pos:end="22:17">t</name></decl>,<decl pos:start="22:19" pos:end="22:23"><type ref="prev" pos:start="22:13" pos:end="22:15"/><name pos:start="22:19" pos:end="22:21">ans</name><init pos:start="22:22" pos:end="22:23">=<expr pos:start="22:23" pos:end="22:23"><literal type="number" pos:start="22:23" pos:end="22:23">0</literal></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:19"><expr pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:15">cin</name><operator pos:start="23:16" pos:end="23:17">&gt;&gt;</operator><name pos:start="23:18" pos:end="23:18">t</name></expr>;</expr_stmt>
            <expr_stmt pos:start="24:13" pos:end="24:27"><expr pos:start="24:13" pos:end="24:26"><call pos:start="24:13" pos:end="24:26"><name pos:start="24:13" pos:end="24:23"><name pos:start="24:13" pos:end="24:13">v</name><operator pos:start="24:14" pos:end="24:14">.</operator><name pos:start="24:15" pos:end="24:23">push_back</name></name><argument_list pos:start="24:24" pos:end="24:26">(<argument pos:start="24:25" pos:end="24:25"><expr pos:start="24:25" pos:end="24:25"><name pos:start="24:25" pos:end="24:25">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <for pos:start="25:13" pos:end="27:13">for<control pos:start="25:16" pos:end="25:39">(<init pos:start="25:17" pos:end="25:24"><decl pos:start="25:17" pos:end="25:23"><type pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">int</name></type> <name pos:start="25:21" pos:end="25:21">i</name><init pos:start="25:22" pos:end="25:23">=<expr pos:start="25:23" pos:end="25:23"><literal type="number" pos:start="25:23" pos:end="25:23">0</literal></expr></init></decl>;</init><condition pos:start="25:25" pos:end="25:35"><expr pos:start="25:25" pos:end="25:34"><name pos:start="25:25" pos:end="25:25">i</name><operator pos:start="25:26" pos:end="25:26">&lt;</operator><call pos:start="25:27" pos:end="25:34"><name pos:start="25:27" pos:end="25:32"><name pos:start="25:27" pos:end="25:27">v</name><operator pos:start="25:28" pos:end="25:28">.</operator><name pos:start="25:29" pos:end="25:32">size</name></name><argument_list pos:start="25:33" pos:end="25:34">()</argument_list></call></expr>;</condition><incr pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><name pos:start="25:36" pos:end="25:36">i</name><operator pos:start="25:37" pos:end="25:38">++</operator></expr></incr>)</control><block pos:start="25:40" pos:end="27:13">{<block_content pos:start="26:17" pos:end="26:26">
                <expr_stmt pos:start="26:17" pos:end="26:26"><expr pos:start="26:17" pos:end="26:25"><name pos:start="26:17" pos:end="26:19">ans</name><operator pos:start="26:20" pos:end="26:21">+=</operator><name pos:start="26:22" pos:end="26:25"><name pos:start="26:22" pos:end="26:22">v</name><index pos:start="26:23" pos:end="26:25">[<expr pos:start="26:24" pos:end="26:24"><name pos:start="26:24" pos:end="26:24">i</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="28:13" pos:end="30:13"><if pos:start="28:13" pos:end="30:13">if<condition pos:start="28:15" pos:end="28:21">(<expr pos:start="28:16" pos:end="28:20"><name pos:start="28:16" pos:end="28:18">ans</name><operator pos:start="28:19" pos:end="28:19">&gt;</operator><name pos:start="28:20" pos:end="28:20">p</name></expr>)</condition><block pos:start="28:22" pos:end="30:13">{<block_content pos:start="29:17" pos:end="29:39">
                <expr_stmt pos:start="29:17" pos:end="29:39"><expr pos:start="29:17" pos:end="29:38"><name pos:start="29:17" pos:end="29:20">cout</name><operator pos:start="29:21" pos:end="29:22">&lt;&lt;</operator><literal type="string" pos:start="29:23" pos:end="29:38">"Unfortunately."</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
