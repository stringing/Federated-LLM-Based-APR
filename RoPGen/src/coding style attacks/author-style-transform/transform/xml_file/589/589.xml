<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/589/589.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:10"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:9"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:9">ans</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:17"><decl pos:start="4:1" pos:end="4:16"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:16"><name pos:start="4:6" pos:end="4:8">MAP</name><index pos:start="4:9" pos:end="4:12">[<expr pos:start="4:10" pos:end="4:11"><literal type="number" pos:start="4:10" pos:end="4:11">10</literal></expr>]</index><index pos:start="4:13" pos:end="4:16">[<expr pos:start="4:14" pos:end="4:15"><literal type="number" pos:start="4:14" pos:end="4:15">10</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:28"><decl pos:start="5:1" pos:end="5:11"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:11"><name pos:start="5:6" pos:end="5:7">x1</name><index pos:start="5:8" pos:end="5:11">[<expr pos:start="5:9" pos:end="5:10"><literal type="number" pos:start="5:9" pos:end="5:10">20</literal></expr>]</index></name></decl>,<decl pos:start="5:13" pos:end="5:18"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:13" pos:end="5:18"><name pos:start="5:13" pos:end="5:14">x2</name><index pos:start="5:15" pos:end="5:18">[<expr pos:start="5:16" pos:end="5:17"><literal type="number" pos:start="5:16" pos:end="5:17">20</literal></expr>]</index></name></decl>,<decl pos:start="5:20" pos:end="5:27"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:20" pos:end="5:27"><name pos:start="5:20" pos:end="5:23">row1</name><index pos:start="5:24" pos:end="5:27">[<expr pos:start="5:25" pos:end="5:26"><literal type="number" pos:start="5:25" pos:end="5:26">10</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:28"><decl pos:start="6:1" pos:end="6:11"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">bool</name></type> <name pos:start="6:6" pos:end="6:11"><name pos:start="6:6" pos:end="6:7">z1</name><index pos:start="6:8" pos:end="6:11">[<expr pos:start="6:9" pos:end="6:10"><literal type="number" pos:start="6:9" pos:end="6:10">20</literal></expr>]</index></name></decl>,<decl pos:start="6:13" pos:end="6:18"><type ref="prev" pos:start="6:1" pos:end="6:4"/><name pos:start="6:13" pos:end="6:18"><name pos:start="6:13" pos:end="6:14">z2</name><index pos:start="6:15" pos:end="6:18">[<expr pos:start="6:16" pos:end="6:17"><literal type="number" pos:start="6:16" pos:end="6:17">20</literal></expr>]</index></name></decl>,<decl pos:start="6:20" pos:end="6:27"><type ref="prev" pos:start="6:1" pos:end="6:4"/><name pos:start="6:20" pos:end="6:27"><name pos:start="6:20" pos:end="6:23">row2</name><index pos:start="6:24" pos:end="6:27">[<expr pos:start="6:25" pos:end="6:26"><literal type="number" pos:start="6:25" pos:end="6:26">10</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="11:1"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">bool</name></type> <name pos:start="7:6" pos:end="7:11">check1</name><parameter_list pos:start="7:12" pos:end="7:24">(<parameter pos:start="7:13" pos:end="7:17"><decl pos:start="7:13" pos:end="7:17"><type pos:start="7:13" pos:end="7:17"><name pos:start="7:13" pos:end="7:15">int</name></type> <name pos:start="7:17" pos:end="7:17">c</name></decl></parameter>,<parameter pos:start="7:19" pos:end="7:23"><decl pos:start="7:19" pos:end="7:23"><type pos:start="7:19" pos:end="7:23"><name pos:start="7:19" pos:end="7:21">int</name></type> <name pos:start="7:23" pos:end="7:23">r</name></decl></parameter>)</parameter_list><block pos:start="7:25" pos:end="11:1">{<block_content pos:start="8:5" pos:end="10:23">
    <if_stmt pos:start="8:5" pos:end="10:23"><if pos:start="8:5" pos:end="10:5">if<condition pos:start="8:7" pos:end="8:87">(<expr pos:start="8:8" pos:end="8:86"><name pos:start="8:8" pos:end="8:14"><name pos:start="8:8" pos:end="8:9">x1</name><index pos:start="8:10" pos:end="8:14">[<expr pos:start="8:11" pos:end="8:13"><name pos:start="8:11" pos:end="8:11">c</name><operator pos:start="8:12" pos:end="8:12">+</operator><name pos:start="8:13" pos:end="8:13">r</name></expr>]</index></name> <operator pos:start="8:16" pos:end="8:17">==</operator> <literal type="boolean" pos:start="8:19" pos:end="8:23">false</literal> <operator pos:start="8:25" pos:end="8:26">&amp;&amp;</operator> <name pos:start="8:28" pos:end="8:36"><name pos:start="8:28" pos:end="8:29">x2</name><index pos:start="8:30" pos:end="8:36">[<expr pos:start="8:31" pos:end="8:35"><name pos:start="8:31" pos:end="8:31">c</name><operator pos:start="8:32" pos:end="8:32">-</operator><name pos:start="8:33" pos:end="8:33">r</name><operator pos:start="8:34" pos:end="8:34">+</operator><literal type="number" pos:start="8:35" pos:end="8:35">8</literal></expr>]</index></name> <operator pos:start="8:38" pos:end="8:39">==</operator> <literal type="boolean" pos:start="8:41" pos:end="8:45">false</literal> <operator pos:start="8:47" pos:end="8:48">&amp;&amp;</operator> <name pos:start="8:50" pos:end="8:58"><name pos:start="8:50" pos:end="8:52">MAP</name><index pos:start="8:53" pos:end="8:55">[<expr pos:start="8:54" pos:end="8:54"><name pos:start="8:54" pos:end="8:54">r</name></expr>]</index><index pos:start="8:56" pos:end="8:58">[<expr pos:start="8:57" pos:end="8:57"><name pos:start="8:57" pos:end="8:57">c</name></expr>]</index></name> <operator pos:start="8:60" pos:end="8:61">==</operator> <literal type="boolean" pos:start="8:63" pos:end="8:66">true</literal> <operator pos:start="8:68" pos:end="8:69">&amp;&amp;</operator> <name pos:start="8:71" pos:end="8:77"><name pos:start="8:71" pos:end="8:74">row1</name><index pos:start="8:75" pos:end="8:77">[<expr pos:start="8:76" pos:end="8:76"><name pos:start="8:76" pos:end="8:76">r</name></expr>]</index></name> <operator pos:start="8:79" pos:end="8:80">==</operator> <literal type="boolean" pos:start="8:82" pos:end="8:86">false</literal></expr>)</condition><block pos:start="8:88" pos:end="10:5">{<block_content pos:start="9:9" pos:end="9:20">
        <return pos:start="9:9" pos:end="9:20">return <expr pos:start="9:16" pos:end="9:19"><literal type="boolean" pos:start="9:16" pos:end="9:19">true</literal></expr>;</return>
    </block_content>}</block></if><else pos:start="10:6" pos:end="10:23">else<block type="pseudo" pos:start="10:11" pos:end="10:23"><block_content pos:start="10:11" pos:end="10:23"> <return pos:start="10:11" pos:end="10:23">return <expr pos:start="10:18" pos:end="10:22"><literal type="boolean" pos:start="10:18" pos:end="10:22">false</literal></expr>;</return></block_content></block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="12:1" pos:end="16:1"><type pos:start="12:1" pos:end="12:4"><name pos:start="12:1" pos:end="12:4">bool</name></type> <name pos:start="12:6" pos:end="12:11">check2</name><parameter_list pos:start="12:12" pos:end="12:24">(<parameter pos:start="12:13" pos:end="12:17"><decl pos:start="12:13" pos:end="12:17"><type pos:start="12:13" pos:end="12:17"><name pos:start="12:13" pos:end="12:15">int</name></type> <name pos:start="12:17" pos:end="12:17">c</name></decl></parameter>,<parameter pos:start="12:19" pos:end="12:23"><decl pos:start="12:19" pos:end="12:23"><type pos:start="12:19" pos:end="12:23"><name pos:start="12:19" pos:end="12:21">int</name></type> <name pos:start="12:23" pos:end="12:23">r</name></decl></parameter>)</parameter_list><block pos:start="12:25" pos:end="16:1">{<block_content pos:start="13:5" pos:end="15:23">
    <if_stmt pos:start="13:5" pos:end="15:23"><if pos:start="13:5" pos:end="15:5">if<condition pos:start="13:7" pos:end="13:87">(<expr pos:start="13:8" pos:end="13:86"><name pos:start="13:8" pos:end="13:14"><name pos:start="13:8" pos:end="13:9">z2</name><index pos:start="13:10" pos:end="13:14">[<expr pos:start="13:11" pos:end="13:13"><name pos:start="13:11" pos:end="13:11">c</name><operator pos:start="13:12" pos:end="13:12">+</operator><name pos:start="13:13" pos:end="13:13">r</name></expr>]</index></name> <operator pos:start="13:16" pos:end="13:17">==</operator> <literal type="boolean" pos:start="13:19" pos:end="13:23">false</literal> <operator pos:start="13:25" pos:end="13:26">&amp;&amp;</operator> <name pos:start="13:28" pos:end="13:36"><name pos:start="13:28" pos:end="13:29">z2</name><index pos:start="13:30" pos:end="13:36">[<expr pos:start="13:31" pos:end="13:35"><name pos:start="13:31" pos:end="13:31">c</name><operator pos:start="13:32" pos:end="13:32">-</operator><name pos:start="13:33" pos:end="13:33">r</name><operator pos:start="13:34" pos:end="13:34">+</operator><literal type="number" pos:start="13:35" pos:end="13:35">8</literal></expr>]</index></name> <operator pos:start="13:38" pos:end="13:39">==</operator> <literal type="boolean" pos:start="13:41" pos:end="13:45">false</literal> <operator pos:start="13:47" pos:end="13:48">&amp;&amp;</operator> <name pos:start="13:50" pos:end="13:58"><name pos:start="13:50" pos:end="13:52">MAP</name><index pos:start="13:53" pos:end="13:55">[<expr pos:start="13:54" pos:end="13:54"><name pos:start="13:54" pos:end="13:54">r</name></expr>]</index><index pos:start="13:56" pos:end="13:58">[<expr pos:start="13:57" pos:end="13:57"><name pos:start="13:57" pos:end="13:57">c</name></expr>]</index></name> <operator pos:start="13:60" pos:end="13:61">==</operator> <literal type="boolean" pos:start="13:63" pos:end="13:66">true</literal> <operator pos:start="13:68" pos:end="13:69">&amp;&amp;</operator> <name pos:start="13:71" pos:end="13:77"><name pos:start="13:71" pos:end="13:74">row2</name><index pos:start="13:75" pos:end="13:77">[<expr pos:start="13:76" pos:end="13:76"><name pos:start="13:76" pos:end="13:76">r</name></expr>]</index></name> <operator pos:start="13:79" pos:end="13:80">==</operator> <literal type="boolean" pos:start="13:82" pos:end="13:86">false</literal></expr>)</condition><block pos:start="13:88" pos:end="15:5">{<block_content pos:start="14:9" pos:end="14:20">
        <return pos:start="14:9" pos:end="14:20">return <expr pos:start="14:16" pos:end="14:19"><literal type="boolean" pos:start="14:16" pos:end="14:19">true</literal></expr>;</return>
    </block_content>}</block></if><else pos:start="15:6" pos:end="15:23">else<block type="pseudo" pos:start="15:11" pos:end="15:23"><block_content pos:start="15:11" pos:end="15:23"> <return pos:start="15:11" pos:end="15:23">return <expr pos:start="15:18" pos:end="15:22"><literal type="boolean" pos:start="15:18" pos:end="15:22">false</literal></expr>;</return></block_content></block></else></if_stmt>
</block_content>}</block></function>

<function pos:start="18:1" pos:end="52:1"><type pos:start="18:1" pos:end="18:4"><name pos:start="18:1" pos:end="18:4">void</name></type> <name pos:start="18:6" pos:end="18:8">dfs</name><parameter_list pos:start="18:9" pos:end="18:15">(<parameter pos:start="18:10" pos:end="18:14"><decl pos:start="18:10" pos:end="18:14"><type pos:start="18:10" pos:end="18:12"><name pos:start="18:10" pos:end="18:12">int</name></type> <name pos:start="18:14" pos:end="18:14">c</name></decl></parameter>)</parameter_list><block pos:start="18:16" pos:end="52:1">{<block_content pos:start="19:5" pos:end="51:5">
    <if_stmt pos:start="19:5" pos:end="22:5"><if pos:start="19:5" pos:end="22:5">if<condition pos:start="19:7" pos:end="19:16">(<expr pos:start="19:8" pos:end="19:15"><name pos:start="19:8" pos:end="19:8">c</name> <operator pos:start="19:10" pos:end="19:11">==</operator> <name pos:start="19:13" pos:end="19:13">n</name><operator pos:start="19:14" pos:end="19:14">+</operator><literal type="number" pos:start="19:15" pos:end="19:15">1</literal></expr>)</condition><block pos:start="19:17" pos:end="22:5">{<block_content pos:start="20:9" pos:end="21:15">
        <expr_stmt pos:start="20:9" pos:end="20:14"><expr pos:start="20:9" pos:end="20:13"><name pos:start="20:9" pos:end="20:11">ans</name><operator pos:start="20:12" pos:end="20:13">++</operator></expr>;</expr_stmt>
        <return pos:start="21:9" pos:end="21:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt pos:start="23:5" pos:end="23:37"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:8"><name pos:start="23:5" pos:end="23:8">bool</name></type> <name pos:start="23:10" pos:end="23:14">flag1</name> <init pos:start="23:16" pos:end="23:22">= <expr pos:start="23:18" pos:end="23:22"><literal type="boolean" pos:start="23:18" pos:end="23:22">false</literal></expr></init></decl>,<decl pos:start="23:24" pos:end="23:36"><type ref="prev" pos:start="23:5" pos:end="23:8"/><name pos:start="23:24" pos:end="23:28">flag2</name> <init pos:start="23:30" pos:end="23:36">= <expr pos:start="23:32" pos:end="23:36"><literal type="boolean" pos:start="23:32" pos:end="23:36">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="24:5" pos:end="24:20"><decl pos:start="24:5" pos:end="24:13"><type pos:start="24:5" pos:end="24:7"><name pos:start="24:5" pos:end="24:7">int</name></type> <name pos:start="24:9" pos:end="24:13">temp1</name></decl>,<decl pos:start="24:15" pos:end="24:19"><type ref="prev" pos:start="24:5" pos:end="24:7"/><name pos:start="24:15" pos:end="24:19">temp2</name></decl>;</decl_stmt>
    <for pos:start="25:5" pos:end="51:5">for<control pos:start="25:8" pos:end="25:29">(<init pos:start="25:9" pos:end="25:18"><decl pos:start="25:9" pos:end="25:17"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">i</name> <init pos:start="25:15" pos:end="25:17">= <expr pos:start="25:17" pos:end="25:17"><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr></init></decl>;</init><condition pos:start="25:19" pos:end="25:25"><expr pos:start="25:19" pos:end="25:24"><name pos:start="25:19" pos:end="25:19">i</name> <operator pos:start="25:21" pos:end="25:22">&lt;=</operator> <name pos:start="25:24" pos:end="25:24">n</name></expr>;</condition><incr pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:26">i</name><operator pos:start="25:27" pos:end="25:28">++</operator></expr></incr>)</control><block pos:start="25:30" pos:end="51:5">{<block_content pos:start="26:9" pos:end="50:9">
        <if_stmt pos:start="26:9" pos:end="32:9"><if pos:start="26:9" pos:end="32:9">if<condition pos:start="26:11" pos:end="26:31">(<expr pos:start="26:12" pos:end="26:30"><call pos:start="26:12" pos:end="26:22"><name pos:start="26:12" pos:end="26:17">check1</name><argument_list pos:start="26:18" pos:end="26:22">(<argument pos:start="26:19" pos:end="26:19"><expr pos:start="26:19" pos:end="26:19"><name pos:start="26:19" pos:end="26:19">c</name></expr></argument>,<argument pos:start="26:21" pos:end="26:21"><expr pos:start="26:21" pos:end="26:21"><name pos:start="26:21" pos:end="26:21">i</name></expr></argument>)</argument_list></call> <operator pos:start="26:24" pos:end="26:25">==</operator> <literal type="boolean" pos:start="26:27" pos:end="26:30">true</literal></expr>)</condition><block pos:start="26:32" pos:end="32:9">{<block_content pos:start="27:13" pos:end="31:22">
            <expr_stmt pos:start="27:13" pos:end="27:27"><expr pos:start="27:13" pos:end="27:26"><name pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:14">x1</name><index pos:start="27:15" pos:end="27:19">[<expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:16">c</name><operator pos:start="27:17" pos:end="27:17">+</operator><name pos:start="27:18" pos:end="27:18">i</name></expr>]</index></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <literal type="boolean" pos:start="27:23" pos:end="27:26">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="28:13" pos:end="28:29"><expr pos:start="28:13" pos:end="28:28"><name pos:start="28:13" pos:end="28:21"><name pos:start="28:13" pos:end="28:14">x2</name><index pos:start="28:15" pos:end="28:21">[<expr pos:start="28:16" pos:end="28:20"><name pos:start="28:16" pos:end="28:16">c</name><operator pos:start="28:17" pos:end="28:17">-</operator><name pos:start="28:18" pos:end="28:18">i</name><operator pos:start="28:19" pos:end="28:19">+</operator><literal type="number" pos:start="28:20" pos:end="28:20">8</literal></expr>]</index></name> <operator pos:start="28:23" pos:end="28:23">=</operator> <literal type="boolean" pos:start="28:25" pos:end="28:28">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="29:13" pos:end="29:27"><expr pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:16">row1</name><index pos:start="29:17" pos:end="29:19">[<expr pos:start="29:18" pos:end="29:18"><name pos:start="29:18" pos:end="29:18">c</name></expr>]</index></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <literal type="boolean" pos:start="29:23" pos:end="29:26">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="30:13" pos:end="30:25"><expr pos:start="30:13" pos:end="30:24"><name pos:start="30:13" pos:end="30:17">flag1</name> <operator pos:start="30:19" pos:end="30:19">=</operator> <literal type="boolean" pos:start="30:21" pos:end="30:24">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="31:13" pos:end="31:22"><expr pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:17">temp1</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:21">i</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if<condition pos:start="33:11" pos:end="33:31">(<expr pos:start="33:12" pos:end="33:30"><call pos:start="33:12" pos:end="33:22"><name pos:start="33:12" pos:end="33:17">check2</name><argument_list pos:start="33:18" pos:end="33:22">(<argument pos:start="33:19" pos:end="33:19"><expr pos:start="33:19" pos:end="33:19"><name pos:start="33:19" pos:end="33:19">c</name></expr></argument>,<argument pos:start="33:21" pos:end="33:21"><expr pos:start="33:21" pos:end="33:21"><name pos:start="33:21" pos:end="33:21">i</name></expr></argument>)</argument_list></call> <operator pos:start="33:24" pos:end="33:25">==</operator> <literal type="boolean" pos:start="33:27" pos:end="33:30">true</literal></expr>)</condition><block pos:start="33:32" pos:end="39:9">{<block_content pos:start="34:13" pos:end="38:22">
            <expr_stmt pos:start="34:13" pos:end="34:27"><expr pos:start="34:13" pos:end="34:26"><name pos:start="34:13" pos:end="34:19"><name pos:start="34:13" pos:end="34:14">z1</name><index pos:start="34:15" pos:end="34:19">[<expr pos:start="34:16" pos:end="34:18"><name pos:start="34:16" pos:end="34:16">c</name><operator pos:start="34:17" pos:end="34:17">+</operator><name pos:start="34:18" pos:end="34:18">i</name></expr>]</index></name> <operator pos:start="34:21" pos:end="34:21">=</operator> <literal type="boolean" pos:start="34:23" pos:end="34:26">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="35:13" pos:end="35:29"><expr pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:14">z2</name><index pos:start="35:15" pos:end="35:21">[<expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:16">c</name><operator pos:start="35:17" pos:end="35:17">-</operator><name pos:start="35:18" pos:end="35:18">i</name><operator pos:start="35:19" pos:end="35:19">+</operator><literal type="number" pos:start="35:20" pos:end="35:20">8</literal></expr>]</index></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <literal type="boolean" pos:start="35:25" pos:end="35:28">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="36:13" pos:end="36:27"><expr pos:start="36:13" pos:end="36:26"><name pos:start="36:13" pos:end="36:19"><name pos:start="36:13" pos:end="36:16">row2</name><index pos:start="36:17" pos:end="36:19">[<expr pos:start="36:18" pos:end="36:18"><name pos:start="36:18" pos:end="36:18">c</name></expr>]</index></name> <operator pos:start="36:21" pos:end="36:21">=</operator> <literal type="boolean" pos:start="36:23" pos:end="36:26">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="37:13" pos:end="37:25"><expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:17">flag2</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="boolean" pos:start="37:21" pos:end="37:24">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="38:13" pos:end="38:22"><expr pos:start="38:13" pos:end="38:21"><name pos:start="38:13" pos:end="38:17">temp2</name> <operator pos:start="38:19" pos:end="38:19">=</operator> <name pos:start="38:21" pos:end="38:21">i</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="40:9" pos:end="50:9"><if pos:start="40:9" pos:end="50:9">if<condition pos:start="40:11" pos:end="40:42">(<expr pos:start="40:12" pos:end="40:41"><name pos:start="40:12" pos:end="40:16">flag1</name> <operator pos:start="40:18" pos:end="40:19">==</operator> <literal type="boolean" pos:start="40:21" pos:end="40:24">true</literal> <operator pos:start="40:26" pos:end="40:27">&amp;&amp;</operator> <name pos:start="40:29" pos:end="40:33">flag2</name> <operator pos:start="40:35" pos:end="40:36">==</operator> <literal type="boolean" pos:start="40:38" pos:end="40:41">true</literal></expr>)</condition><block pos:start="40:43" pos:end="50:9">{<block_content pos:start="41:13" pos:end="49:28">
            <expr_stmt pos:start="41:13" pos:end="41:21"><expr pos:start="41:13" pos:end="41:20"><call pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:15">dfs</name><argument_list pos:start="41:16" pos:end="41:20">(<argument pos:start="41:17" pos:end="41:19"><expr pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:17">c</name><operator pos:start="41:18" pos:end="41:18">+</operator><literal type="number" pos:start="41:19" pos:end="41:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="42:13" pos:end="42:26"><expr pos:start="42:13" pos:end="42:25"><name pos:start="42:13" pos:end="42:17">flag1</name> <operator pos:start="42:19" pos:end="42:19">=</operator> <literal type="boolean" pos:start="42:21" pos:end="42:25">false</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="43:13" pos:end="43:26"><expr pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:17">flag2</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="boolean" pos:start="43:21" pos:end="43:25">false</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="44:13" pos:end="44:32"><expr pos:start="44:13" pos:end="44:31"><name pos:start="44:13" pos:end="44:23"><name pos:start="44:13" pos:end="44:14">x1</name><index pos:start="44:15" pos:end="44:23">[<expr pos:start="44:16" pos:end="44:22"><name pos:start="44:16" pos:end="44:16">c</name><operator pos:start="44:17" pos:end="44:17">+</operator><name pos:start="44:18" pos:end="44:22">temp1</name></expr>]</index></name> <operator pos:start="44:25" pos:end="44:25">=</operator> <literal type="boolean" pos:start="44:27" pos:end="44:31">false</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:14">x2</name><index pos:start="45:15" pos:end="45:25">[<expr pos:start="45:16" pos:end="45:24"><name pos:start="45:16" pos:end="45:16">c</name><operator pos:start="45:17" pos:end="45:17">-</operator><name pos:start="45:18" pos:end="45:22">temp1</name><operator pos:start="45:23" pos:end="45:23">+</operator><literal type="number" pos:start="45:24" pos:end="45:24">8</literal></expr>]</index></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <literal type="boolean" pos:start="45:29" pos:end="45:33">false</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="46:13" pos:end="46:28"><expr pos:start="46:13" pos:end="46:27"><name pos:start="46:13" pos:end="46:19"><name pos:start="46:13" pos:end="46:16">row1</name><index pos:start="46:17" pos:end="46:19">[<expr pos:start="46:18" pos:end="46:18"><name pos:start="46:18" pos:end="46:18">c</name></expr>]</index></name> <operator pos:start="46:21" pos:end="46:21">=</operator> <literal type="boolean" pos:start="46:23" pos:end="46:27">false</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="47:13" pos:end="47:32"><expr pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:14">z1</name><index pos:start="47:15" pos:end="47:23">[<expr pos:start="47:16" pos:end="47:22"><name pos:start="47:16" pos:end="47:16">c</name><operator pos:start="47:17" pos:end="47:17">+</operator><name pos:start="47:18" pos:end="47:22">temp2</name></expr>]</index></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <literal type="boolean" pos:start="47:27" pos:end="47:31">false</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="48:13" pos:end="48:34"><expr pos:start="48:13" pos:end="48:33"><name pos:start="48:13" pos:end="48:25"><name pos:start="48:13" pos:end="48:14">z2</name><index pos:start="48:15" pos:end="48:25">[<expr pos:start="48:16" pos:end="48:24"><name pos:start="48:16" pos:end="48:16">c</name><operator pos:start="48:17" pos:end="48:17">-</operator><name pos:start="48:18" pos:end="48:22">temp2</name><operator pos:start="48:23" pos:end="48:23">+</operator><literal type="number" pos:start="48:24" pos:end="48:24">8</literal></expr>]</index></name> <operator pos:start="48:27" pos:end="48:27">=</operator> <literal type="boolean" pos:start="48:29" pos:end="48:33">false</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="49:13" pos:end="49:28"><expr pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:16">row2</name><index pos:start="49:17" pos:end="49:19">[<expr pos:start="49:18" pos:end="49:18"><name pos:start="49:18" pos:end="49:18">c</name></expr>]</index></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <literal type="boolean" pos:start="49:23" pos:end="49:27">false</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="53:1" pos:end="69:1"><type pos:start="53:1" pos:end="53:3"><name pos:start="53:1" pos:end="53:3">int</name></type> <name pos:start="53:5" pos:end="53:8">main</name><parameter_list pos:start="53:9" pos:end="53:10">()</parameter_list><block pos:start="53:11" pos:end="69:1">{<block_content pos:start="54:5" pos:end="68:13">
    <expr_stmt pos:start="54:5" pos:end="54:34"><expr pos:start="54:5" pos:end="54:33"><call pos:start="54:5" pos:end="54:33"><name pos:start="54:5" pos:end="54:11">freopen</name><argument_list pos:start="54:12" pos:end="54:33">(<argument pos:start="54:13" pos:end="54:22"><expr pos:start="54:13" pos:end="54:22"><literal type="string" pos:start="54:13" pos:end="54:22">"queen.in"</literal></expr></argument>,<argument pos:start="54:24" pos:end="54:26"><expr pos:start="54:24" pos:end="54:26"><literal type="string" pos:start="54:24" pos:end="54:26">"r"</literal></expr></argument>,<argument pos:start="54:28" pos:end="54:32"><expr pos:start="54:28" pos:end="54:32"><name pos:start="54:28" pos:end="54:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="55:5" pos:end="55:36"><expr pos:start="55:5" pos:end="55:35"><call pos:start="55:5" pos:end="55:35"><name pos:start="55:5" pos:end="55:11">freopen</name><argument_list pos:start="55:12" pos:end="55:35">(<argument pos:start="55:13" pos:end="55:23"><expr pos:start="55:13" pos:end="55:23"><literal type="string" pos:start="55:13" pos:end="55:23">"queen.out"</literal></expr></argument>,<argument pos:start="55:25" pos:end="55:27"><expr pos:start="55:25" pos:end="55:27"><literal type="string" pos:start="55:25" pos:end="55:27">"w"</literal></expr></argument>,<argument pos:start="55:29" pos:end="55:34"><expr pos:start="55:29" pos:end="55:34"><name pos:start="55:29" pos:end="55:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="56:5" pos:end="56:17"><decl pos:start="56:5" pos:end="56:9"><type pos:start="56:5" pos:end="56:7"><name pos:start="56:5" pos:end="56:7">int</name></type> <name pos:start="56:9" pos:end="56:9">i</name></decl>,<decl pos:start="56:11" pos:end="56:11"><type ref="prev" pos:start="56:5" pos:end="56:7"/><name pos:start="56:11" pos:end="56:11">j</name></decl>,<decl pos:start="56:13" pos:end="56:16"><type ref="prev" pos:start="56:5" pos:end="56:7"/><name pos:start="56:13" pos:end="56:16">temp</name></decl>;</decl_stmt>
    <expr_stmt pos:start="57:5" pos:end="57:19"><expr pos:start="57:5" pos:end="57:18"><call pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:9">scanf</name><argument_list pos:start="57:10" pos:end="57:18">(<argument pos:start="57:11" pos:end="57:14"><expr pos:start="57:11" pos:end="57:14"><literal type="string" pos:start="57:11" pos:end="57:14">"%d"</literal></expr></argument>,<argument pos:start="57:16" pos:end="57:17"><expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">&amp;</operator><name pos:start="57:17" pos:end="57:17">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="58:5" pos:end="63:5">for<control pos:start="58:8" pos:end="58:25">(<init pos:start="58:9" pos:end="58:14"><expr pos:start="58:9" pos:end="58:13"><name pos:start="58:9" pos:end="58:9">i</name> <operator pos:start="58:11" pos:end="58:11">=</operator> <literal type="number" pos:start="58:13" pos:end="58:13">1</literal></expr>;</init><condition pos:start="58:15" pos:end="58:21"><expr pos:start="58:15" pos:end="58:20"><name pos:start="58:15" pos:end="58:15">i</name> <operator pos:start="58:17" pos:end="58:18">&lt;=</operator> <name pos:start="58:20" pos:end="58:20">n</name></expr>;</condition><incr pos:start="58:22" pos:end="58:24"><expr pos:start="58:22" pos:end="58:24"><name pos:start="58:22" pos:end="58:22">i</name><operator pos:start="58:23" pos:end="58:24">++</operator></expr></incr>)</control><block pos:start="58:26" pos:end="63:5">{<block_content pos:start="59:9" pos:end="62:9">
        <for pos:start="59:9" pos:end="62:9">for<control pos:start="59:12" pos:end="59:29">(<init pos:start="59:13" pos:end="59:18"><expr pos:start="59:13" pos:end="59:17"><name pos:start="59:13" pos:end="59:13">j</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <literal type="number" pos:start="59:17" pos:end="59:17">1</literal></expr>;</init><condition pos:start="59:19" pos:end="59:25"><expr pos:start="59:19" pos:end="59:24"><name pos:start="59:19" pos:end="59:19">j</name> <operator pos:start="59:21" pos:end="59:22">&lt;=</operator> <name pos:start="59:24" pos:end="59:24">n</name></expr>;</condition><incr pos:start="59:26" pos:end="59:28"><expr pos:start="59:26" pos:end="59:28"><name pos:start="59:26" pos:end="59:26">j</name><operator pos:start="59:27" pos:end="59:28">++</operator></expr></incr>)</control><block pos:start="59:30" pos:end="62:9">{<block_content pos:start="60:13" pos:end="61:43">
            <expr_stmt pos:start="60:13" pos:end="60:30"><expr pos:start="60:13" pos:end="60:29"><call pos:start="60:13" pos:end="60:29"><name pos:start="60:13" pos:end="60:17">scanf</name><argument_list pos:start="60:18" pos:end="60:29">(<argument pos:start="60:19" pos:end="60:22"><expr pos:start="60:19" pos:end="60:22"><literal type="string" pos:start="60:19" pos:end="60:22">"%d"</literal></expr></argument>,<argument pos:start="60:24" pos:end="60:28"><expr pos:start="60:24" pos:end="60:28"><operator pos:start="60:24" pos:end="60:24">&amp;</operator><name pos:start="60:25" pos:end="60:28">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="61:13" pos:end="61:43"><if pos:start="61:13" pos:end="61:43">if<condition pos:start="61:15" pos:end="61:25">(<expr pos:start="61:16" pos:end="61:24"><name pos:start="61:16" pos:end="61:19">temp</name> <operator pos:start="61:21" pos:end="61:22">==</operator> <literal type="number" pos:start="61:24" pos:end="61:24">1</literal></expr>)</condition><block type="pseudo" pos:start="61:27" pos:end="61:43"><block_content pos:start="61:27" pos:end="61:43"> <expr_stmt pos:start="61:27" pos:end="61:43"><expr pos:start="61:27" pos:end="61:42"><name pos:start="61:27" pos:end="61:35"><name pos:start="61:27" pos:end="61:29">MAP</name><index pos:start="61:30" pos:end="61:32">[<expr pos:start="61:31" pos:end="61:31"><name pos:start="61:31" pos:end="61:31">i</name></expr>]</index><index pos:start="61:33" pos:end="61:35">[<expr pos:start="61:34" pos:end="61:34"><name pos:start="61:34" pos:end="61:34">j</name></expr>]</index></name> <operator pos:start="61:37" pos:end="61:37">=</operator> <literal type="boolean" pos:start="61:39" pos:end="61:42">true</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="64:5" pos:end="64:11"><expr pos:start="64:5" pos:end="64:10"><call pos:start="64:5" pos:end="64:10"><name pos:start="64:5" pos:end="64:7">dfs</name><argument_list pos:start="64:8" pos:end="64:10">(<argument pos:start="64:9" pos:end="64:9"><expr pos:start="64:9" pos:end="64:9"><literal type="number" pos:start="64:9" pos:end="64:9">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="65:5" pos:end="65:21"><expr pos:start="65:5" pos:end="65:20"><call pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:10">printf</name><argument_list pos:start="65:11" pos:end="65:20">(<argument pos:start="65:12" pos:end="65:15"><expr pos:start="65:12" pos:end="65:15"><literal type="string" pos:start="65:12" pos:end="65:15">"%d"</literal></expr></argument>,<argument pos:start="65:17" pos:end="65:19"><expr pos:start="65:17" pos:end="65:19"><name pos:start="65:17" pos:end="65:19">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="66:5" pos:end="66:18"><expr pos:start="66:5" pos:end="66:17"><call pos:start="66:5" pos:end="66:17"><name pos:start="66:5" pos:end="66:10">fclose</name><argument_list pos:start="66:11" pos:end="66:17">(<argument pos:start="66:12" pos:end="66:16"><expr pos:start="66:12" pos:end="66:16"><name pos:start="66:12" pos:end="66:16">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="67:5" pos:end="67:19"><expr pos:start="67:5" pos:end="67:18"><call pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:10">fclose</name><argument_list pos:start="67:11" pos:end="67:18">(<argument pos:start="67:12" pos:end="67:17"><expr pos:start="67:12" pos:end="67:17"><name pos:start="67:12" pos:end="67:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="68:5" pos:end="68:13">return <expr pos:start="68:12" pos:end="68:12"><literal type="number" pos:start="68:12" pos:end="68:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
