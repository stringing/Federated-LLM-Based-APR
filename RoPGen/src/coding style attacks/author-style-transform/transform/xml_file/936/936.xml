<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/936/936.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:20">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:15"><decl pos:start="4:1" pos:end="4:14"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:7">num</name><index pos:start="4:8" pos:end="4:14">[<expr pos:start="4:9" pos:end="4:13"><literal type="number" pos:start="4:9" pos:end="4:13">10005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="14:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:7">sum</name><parameter_list pos:start="5:8" pos:end="5:14">(<parameter pos:start="5:9" pos:end="5:13"><decl pos:start="5:9" pos:end="5:13"><type pos:start="5:9" pos:end="5:11"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:13">m</name></decl></parameter>)</parameter_list>
<block pos:start="6:1" pos:end="14:1">{<block_content pos:start="7:5" pos:end="13:13">
    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">s</name> <init pos:start="7:11" pos:end="7:13">= <expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="8:5" pos:end="12:5">while<condition pos:start="8:10" pos:end="8:17">(<expr pos:start="8:11" pos:end="8:16"><name pos:start="8:11" pos:end="8:11">m</name> <operator pos:start="8:13" pos:end="8:14">&gt;=</operator> <literal type="number" pos:start="8:16" pos:end="8:16">0</literal></expr>)</condition>
    <block pos:start="9:5" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:16">
        <expr_stmt pos:start="10:9" pos:end="10:20"><expr pos:start="10:9" pos:end="10:19"><name pos:start="10:9" pos:end="10:9">s</name> <operator pos:start="10:11" pos:end="10:12">+=</operator> <name pos:start="10:14" pos:end="10:14">m</name> <operator pos:start="10:16" pos:end="10:16">%</operator> <literal type="number" pos:start="10:18" pos:end="10:19">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:16"><expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:9">m</name> <operator pos:start="11:11" pos:end="11:12">/=</operator> <literal type="number" pos:start="11:14" pos:end="11:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="13:5" pos:end="13:13">return <expr pos:start="13:12" pos:end="13:12"><name pos:start="13:12" pos:end="13:12">s</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="15:1" pos:end="19:1"><type pos:start="15:1" pos:end="15:4"><name pos:start="15:1" pos:end="15:4">bool</name></type> <name pos:start="15:6" pos:end="15:8">cmp</name><parameter_list pos:start="15:9" pos:end="15:21">(<parameter pos:start="15:10" pos:end="15:14"><decl pos:start="15:10" pos:end="15:14"><type pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:12">int</name></type> <name pos:start="15:14" pos:end="15:14">x</name></decl></parameter>,<parameter pos:start="15:16" pos:end="15:20"><decl pos:start="15:16" pos:end="15:20"><type pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:18">int</name></type> <name pos:start="15:20" pos:end="15:20">y</name></decl></parameter>)</parameter_list>
<block pos:start="16:1" pos:end="19:1">{<block_content pos:start="17:5" pos:end="18:24">
    <if_stmt pos:start="17:5" pos:end="18:24"><if pos:start="17:5" pos:end="17:51">if<condition pos:start="17:7" pos:end="17:24">(<expr pos:start="17:8" pos:end="17:23"><call pos:start="17:8" pos:end="17:13"><name pos:start="17:8" pos:end="17:10">sum</name><argument_list pos:start="17:11" pos:end="17:13">(<argument pos:start="17:12" pos:end="17:12"><expr pos:start="17:12" pos:end="17:12"><name pos:start="17:12" pos:end="17:12">x</name></expr></argument>)</argument_list></call> <operator pos:start="17:15" pos:end="17:16">!=</operator> <call pos:start="17:18" pos:end="17:23"><name pos:start="17:18" pos:end="17:20">sum</name><argument_list pos:start="17:21" pos:end="17:23">(<argument pos:start="17:22" pos:end="17:22"><expr pos:start="17:22" pos:end="17:22"><name pos:start="17:22" pos:end="17:22">y</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:29" pos:end="17:51"><block_content pos:start="17:29" pos:end="17:51">    <return pos:start="17:29" pos:end="17:51">return <expr pos:start="17:36" pos:end="17:50"><call pos:start="17:36" pos:end="17:41"><name pos:start="17:36" pos:end="17:38">sum</name><argument_list pos:start="17:39" pos:end="17:41">(<argument pos:start="17:40" pos:end="17:40"><expr pos:start="17:40" pos:end="17:40"><name pos:start="17:40" pos:end="17:40">x</name></expr></argument>)</argument_list></call> <operator pos:start="17:43" pos:end="17:43">&lt;</operator> <call pos:start="17:45" pos:end="17:50"><name pos:start="17:45" pos:end="17:47">sum</name><argument_list pos:start="17:48" pos:end="17:50">(<argument pos:start="17:49" pos:end="17:49"><expr pos:start="17:49" pos:end="17:49"><name pos:start="17:49" pos:end="17:49">y</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>
    <else pos:start="18:5" pos:end="18:24">else<block type="pseudo" pos:start="18:12" pos:end="18:24"><block_content pos:start="18:12" pos:end="18:24">   <return pos:start="18:12" pos:end="18:24">return <expr pos:start="18:19" pos:end="18:23"><name pos:start="18:19" pos:end="18:19">x</name> <operator pos:start="18:21" pos:end="18:21">&lt;</operator> <name pos:start="18:23" pos:end="18:23">y</name></expr>;</return></block_content></block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="20:1" pos:end="33:1"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:8">main</name><parameter_list pos:start="20:9" pos:end="20:10">()</parameter_list>
<block pos:start="21:1" pos:end="33:1">{<block_content pos:start="22:5" pos:end="32:5">
    <decl_stmt pos:start="22:5" pos:end="22:10"><decl pos:start="22:5" pos:end="22:9"><type pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></type> <name pos:start="22:9" pos:end="22:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:13"><expr pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:7">cin</name> <operator pos:start="23:9" pos:end="23:10">&gt;&gt;</operator> <name pos:start="23:12" pos:end="23:12">n</name></expr>;</expr_stmt>
    <for pos:start="24:5" pos:end="27:5">for<control pos:start="24:8" pos:end="24:30">(<init pos:start="24:9" pos:end="24:18"><decl pos:start="24:9" pos:end="24:17"><type pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:11">int</name></type> <name pos:start="24:13" pos:end="24:13">i</name> <init pos:start="24:15" pos:end="24:17">= <expr pos:start="24:17" pos:end="24:17"><literal type="number" pos:start="24:17" pos:end="24:17">0</literal></expr></init></decl>;</init> <condition pos:start="24:20" pos:end="24:25"><expr pos:start="24:20" pos:end="24:24"><name pos:start="24:20" pos:end="24:20">i</name> <operator pos:start="24:22" pos:end="24:22">&lt;</operator> <name pos:start="24:24" pos:end="24:24">n</name></expr>;</condition> <incr pos:start="24:27" pos:end="24:29"><expr pos:start="24:27" pos:end="24:29"><name pos:start="24:27" pos:end="24:27">i</name><operator pos:start="24:28" pos:end="24:29">++</operator></expr></incr>)</control>
    <block pos:start="25:5" pos:end="27:5">{<block_content pos:start="26:9" pos:end="26:22">
        <expr_stmt pos:start="26:9" pos:end="26:22"><expr pos:start="26:9" pos:end="26:21"><name pos:start="26:9" pos:end="26:11">cin</name> <operator pos:start="26:13" pos:end="26:14">&gt;&gt;</operator> <name pos:start="26:16" pos:end="26:21"><name pos:start="26:16" pos:end="26:18">num</name><index pos:start="26:19" pos:end="26:21">[<expr pos:start="26:20" pos:end="26:20"><name pos:start="26:20" pos:end="26:20">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="28:5" pos:end="28:26"><expr pos:start="28:5" pos:end="28:25"><call pos:start="28:5" pos:end="28:25"><name pos:start="28:5" pos:end="28:8">sort</name><argument_list pos:start="28:9" pos:end="28:25">(<argument pos:start="28:10" pos:end="28:12"><expr pos:start="28:10" pos:end="28:12"><name pos:start="28:10" pos:end="28:12">num</name></expr></argument>,<argument pos:start="28:14" pos:end="28:20"><expr pos:start="28:14" pos:end="28:20"><name pos:start="28:14" pos:end="28:16">num</name> <operator pos:start="28:18" pos:end="28:18">+</operator> <name pos:start="28:20" pos:end="28:20">n</name></expr></argument>,<argument pos:start="28:22" pos:end="28:24"><expr pos:start="28:22" pos:end="28:24"><name pos:start="28:22" pos:end="28:24">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="29:5" pos:end="32:5">for<control pos:start="29:8" pos:end="29:30">(<init pos:start="29:9" pos:end="29:18"><decl pos:start="29:9" pos:end="29:17"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:13">i</name> <init pos:start="29:15" pos:end="29:17">= <expr pos:start="29:17" pos:end="29:17"><literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr></init></decl>;</init> <condition pos:start="29:20" pos:end="29:25"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:20">i</name> <operator pos:start="29:22" pos:end="29:22">&lt;</operator> <name pos:start="29:24" pos:end="29:24">n</name></expr>;</condition> <incr pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:27">i</name><operator pos:start="29:28" pos:end="29:29">++</operator></expr></incr>)</control>
    <block pos:start="30:5" pos:end="32:5">{<block_content pos:start="31:9" pos:end="31:31">
        <expr_stmt pos:start="31:9" pos:end="31:31"><expr pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:12">cout</name> <operator pos:start="31:14" pos:end="31:15">&lt;&lt;</operator> <name pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:19">num</name><index pos:start="31:20" pos:end="31:22">[<expr pos:start="31:21" pos:end="31:21"><name pos:start="31:21" pos:end="31:21">i</name></expr>]</index></name> <operator pos:start="31:24" pos:end="31:25">&lt;&lt;</operator> <name pos:start="31:27" pos:end="31:30">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
</unit>
