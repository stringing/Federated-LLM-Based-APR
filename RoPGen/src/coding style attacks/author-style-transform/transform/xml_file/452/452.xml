<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/452/452.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="11:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:7">abc</name><parameter_list pos:start="4:8" pos:end="4:14">(<parameter pos:start="4:9" pos:end="4:13"><decl pos:start="4:9" pos:end="4:13"><type pos:start="4:9" pos:end="4:11"><name pos:start="4:9" pos:end="4:11">int</name></type> <name pos:start="4:13" pos:end="4:13">x</name></decl></parameter>)</parameter_list><block pos:start="4:15" pos:end="11:1">{<block_content pos:start="5:5" pos:end="10:13">
    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">s</name> <init pos:start="5:11" pos:end="5:13">= <expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="6:5" pos:end="9:5">while<condition pos:start="6:10" pos:end="6:12">(<expr pos:start="6:11" pos:end="6:11"><name pos:start="6:11" pos:end="6:11">x</name></expr>)</condition><block pos:start="6:13" pos:end="9:5">{<block_content pos:start="7:9" pos:end="8:16">
        <expr_stmt pos:start="7:9" pos:end="7:20"><expr pos:start="7:9" pos:end="7:19"><name pos:start="7:9" pos:end="7:9">s</name> <operator pos:start="7:11" pos:end="7:12">+=</operator> <name pos:start="7:14" pos:end="7:14">x</name> <operator pos:start="7:16" pos:end="7:16">%</operator> <literal type="number" pos:start="7:18" pos:end="7:19">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:16"><expr pos:start="8:9" pos:end="8:15"><name pos:start="8:9" pos:end="8:9">x</name> <operator pos:start="8:11" pos:end="8:12">/=</operator> <literal type="number" pos:start="8:14" pos:end="8:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="10:5" pos:end="10:13">return <expr pos:start="10:12" pos:end="10:12"><name pos:start="10:12" pos:end="10:12">s</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="12:1" pos:end="18:1"><type pos:start="12:1" pos:end="12:4"><name pos:start="12:1" pos:end="12:4">bool</name></type> <name pos:start="12:6" pos:end="12:6">s</name> <parameter_list pos:start="12:8" pos:end="12:20">(<parameter pos:start="12:9" pos:end="12:13"><decl pos:start="12:9" pos:end="12:13"><type pos:start="12:9" pos:end="12:13"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">x</name></decl></parameter>,<parameter pos:start="12:15" pos:end="12:19"><decl pos:start="12:15" pos:end="12:19"><type pos:start="12:15" pos:end="12:19"><name pos:start="12:15" pos:end="12:17">int</name></type> <name pos:start="12:19" pos:end="12:19">y</name></decl></parameter>)</parameter_list> <block pos:start="12:22" pos:end="18:1">{<block_content pos:start="13:5" pos:end="17:5">
    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="15:5">if<condition pos:start="13:7" pos:end="13:23">(<expr pos:start="13:8" pos:end="13:22"><call pos:start="13:8" pos:end="13:13"><name pos:start="13:8" pos:end="13:10">abc</name><argument_list pos:start="13:11" pos:end="13:13">(<argument pos:start="13:12" pos:end="13:12"><expr pos:start="13:12" pos:end="13:12"><name pos:start="13:12" pos:end="13:12">x</name></expr></argument>)</argument_list></call> <operator pos:start="13:15" pos:end="13:15">&gt;</operator> <call pos:start="13:17" pos:end="13:22"><name pos:start="13:17" pos:end="13:19">abc</name><argument_list pos:start="13:20" pos:end="13:22">(<argument pos:start="13:21" pos:end="13:21"><expr pos:start="13:21" pos:end="13:21"><name pos:start="13:21" pos:end="13:21">y</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="13:24" pos:end="15:5">{<block_content pos:start="14:9" pos:end="14:21">
        <return pos:start="14:9" pos:end="14:21">return <expr pos:start="14:16" pos:end="14:20"><literal type="boolean" pos:start="14:16" pos:end="14:20">false</literal></expr>;</return>
    </block_content>}</block></if><if type="elseif" pos:start="15:6" pos:end="17:5">else if<condition pos:start="15:13" pos:end="15:29">(<expr pos:start="15:14" pos:end="15:28"><call pos:start="15:14" pos:end="15:19"><name pos:start="15:14" pos:end="15:16">abc</name><argument_list pos:start="15:17" pos:end="15:19">(<argument pos:start="15:18" pos:end="15:18"><expr pos:start="15:18" pos:end="15:18"><name pos:start="15:18" pos:end="15:18">x</name></expr></argument>)</argument_list></call> <operator pos:start="15:21" pos:end="15:21">&lt;</operator> <call pos:start="15:23" pos:end="15:28"><name pos:start="15:23" pos:end="15:25">abc</name><argument_list pos:start="15:26" pos:end="15:28">(<argument pos:start="15:27" pos:end="15:27"><expr pos:start="15:27" pos:end="15:27"><name pos:start="15:27" pos:end="15:27">y</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="15:30" pos:end="17:5">{<block_content pos:start="16:9" pos:end="16:20">
        <return pos:start="16:9" pos:end="16:20">return <expr pos:start="16:16" pos:end="16:19"><literal type="boolean" pos:start="16:16" pos:end="16:19">true</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="19:1" pos:end="31:1"><type pos:start="19:1" pos:end="19:3"><name pos:start="19:1" pos:end="19:3">int</name></type> <name pos:start="19:5" pos:end="19:8">main</name><parameter_list pos:start="19:9" pos:end="19:10">()</parameter_list> <block pos:start="19:12" pos:end="31:1">{<block_content pos:start="20:5" pos:end="30:13">
    <decl_stmt pos:start="20:5" pos:end="20:10"><decl pos:start="20:5" pos:end="20:9"><type pos:start="20:5" pos:end="20:7"><name pos:start="20:5" pos:end="20:7">int</name></type> <name pos:start="20:9" pos:end="20:9">a</name></decl>;</decl_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:13"><expr pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:7">cin</name> <operator pos:start="21:9" pos:end="21:10">&gt;&gt;</operator> <name pos:start="21:12" pos:end="21:12">a</name></expr>;</expr_stmt>
    <decl_stmt pos:start="22:5" pos:end="22:16"><decl pos:start="22:5" pos:end="22:15"><type pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></type> <name pos:start="22:9" pos:end="22:15"><name pos:start="22:9" pos:end="22:9">n</name><index pos:start="22:10" pos:end="22:15">[<expr pos:start="22:11" pos:end="22:14"><literal type="number" pos:start="22:11" pos:end="22:14">1000</literal></expr>]</index></name></decl>;</decl_stmt>
    <for pos:start="23:5" pos:end="25:5">for<control pos:start="23:8" pos:end="23:28">(<init pos:start="23:9" pos:end="23:18"><decl pos:start="23:9" pos:end="23:17"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">i</name> <init pos:start="23:15" pos:end="23:17">= <expr pos:start="23:17" pos:end="23:17"><literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr></init></decl>;</init><condition pos:start="23:19" pos:end="23:24"><expr pos:start="23:19" pos:end="23:23"><name pos:start="23:19" pos:end="23:19">i</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <name pos:start="23:23" pos:end="23:23">a</name></expr>;</condition><incr pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:25">i</name><operator pos:start="23:26" pos:end="23:27">++</operator></expr></incr>)</control><block pos:start="23:29" pos:end="25:5">{<block_content pos:start="24:9" pos:end="24:20">
        <expr_stmt pos:start="24:9" pos:end="24:20"><expr pos:start="24:9" pos:end="24:19"><name pos:start="24:9" pos:end="24:11">cin</name> <operator pos:start="24:13" pos:end="24:14">&gt;&gt;</operator> <name pos:start="24:16" pos:end="24:19"><name pos:start="24:16" pos:end="24:16">n</name><index pos:start="24:17" pos:end="24:19">[<expr pos:start="24:18" pos:end="24:18"><name pos:start="24:18" pos:end="24:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="26:5" pos:end="26:20"><expr pos:start="26:5" pos:end="26:19"><call pos:start="26:5" pos:end="26:19"><name pos:start="26:5" pos:end="26:8">sort</name><argument_list pos:start="26:9" pos:end="26:19">(<argument pos:start="26:10" pos:end="26:10"><expr pos:start="26:10" pos:end="26:10"><name pos:start="26:10" pos:end="26:10">n</name></expr></argument>,<argument pos:start="26:12" pos:end="26:16"><expr pos:start="26:12" pos:end="26:16"><name pos:start="26:12" pos:end="26:12">n</name> <operator pos:start="26:14" pos:end="26:14">+</operator> <name pos:start="26:16" pos:end="26:16">a</name></expr></argument>,<argument pos:start="26:18" pos:end="26:18"><expr pos:start="26:18" pos:end="26:18"><name pos:start="26:18" pos:end="26:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="27:5" pos:end="29:5">for<control pos:start="27:8" pos:end="27:28">(<init pos:start="27:9" pos:end="27:18"><decl pos:start="27:9" pos:end="27:17"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">i</name> <init pos:start="27:15" pos:end="27:17">= <expr pos:start="27:17" pos:end="27:17"><literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr></init></decl>;</init><condition pos:start="27:19" pos:end="27:24"><expr pos:start="27:19" pos:end="27:23"><name pos:start="27:19" pos:end="27:19">i</name> <operator pos:start="27:21" pos:end="27:21">&lt;</operator> <name pos:start="27:23" pos:end="27:23">a</name></expr>;</condition><incr pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:25">i</name><operator pos:start="27:26" pos:end="27:27">++</operator></expr></incr>)</control><block pos:start="27:29" pos:end="29:5">{<block_content pos:start="28:9" pos:end="28:29">
        <expr_stmt pos:start="28:9" pos:end="28:29"><expr pos:start="28:9" pos:end="28:28"><name pos:start="28:9" pos:end="28:12">cout</name> <operator pos:start="28:14" pos:end="28:15">&lt;&lt;</operator> <name pos:start="28:17" pos:end="28:20"><name pos:start="28:17" pos:end="28:17">n</name><index pos:start="28:18" pos:end="28:20">[<expr pos:start="28:19" pos:end="28:19"><name pos:start="28:19" pos:end="28:19">i</name></expr>]</index></name> <operator pos:start="28:22" pos:end="28:23">&lt;&lt;</operator> <name pos:start="28:25" pos:end="28:28">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="30:5" pos:end="30:13">return <expr pos:start="30:12" pos:end="30:12"><literal type="number" pos:start="30:12" pos:end="30:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
