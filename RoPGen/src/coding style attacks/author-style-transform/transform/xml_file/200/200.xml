<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/200/200.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:9"><decl pos:start="3:1" pos:end="3:8"><type pos:start="3:1" pos:end="3:6"><name pos:start="3:1" pos:end="3:6">string</name></type> <name pos:start="3:8" pos:end="3:8">a</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:14"><decl pos:start="4:1" pos:end="4:13"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:9">chang</name> <init pos:start="4:11" pos:end="4:13">= <expr pos:start="4:13" pos:end="4:13"><literal type="number" pos:start="4:13" pos:end="4:13">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="28:1"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:7">pd</name><parameter_list pos:start="5:8" pos:end="5:9">()</parameter_list><block pos:start="5:10" pos:end="28:1">{<block_content pos:start="6:5" pos:end="27:16">
    <decl_stmt pos:start="6:5" pos:end="6:14"><decl pos:start="6:5" pos:end="6:13"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">d</name> <init pos:start="6:11" pos:end="6:13">= <expr pos:start="6:13" pos:end="6:13"><literal type="number" pos:start="6:13" pos:end="6:13">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="7:5" pos:end="9:5"><if pos:start="7:5" pos:end="9:5">if<condition pos:start="7:7" pos:end="7:22">(<expr pos:start="7:8" pos:end="7:21"><name pos:start="7:8" pos:end="7:12">chang</name> <operator pos:start="7:14" pos:end="7:14">%</operator> <literal type="number" pos:start="7:16" pos:end="7:16">8</literal> <operator pos:start="7:18" pos:end="7:19">!=</operator> <literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr>)</condition><block pos:start="7:23" pos:end="9:5">{<block_content pos:start="8:9" pos:end="8:21">
        <return pos:start="8:9" pos:end="8:21">return <expr pos:start="8:16" pos:end="8:20"><literal type="boolean" pos:start="8:16" pos:end="8:20">false</literal></expr>;</return>
    </block_content>}</block></if></if_stmt><for pos:start="9:6" pos:end="23:5">for<control pos:start="9:9" pos:end="9:38">(<init pos:start="9:10" pos:end="9:19"><decl pos:start="9:10" pos:end="9:18"><type pos:start="9:10" pos:end="9:12"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:14">i</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</init> <condition pos:start="9:21" pos:end="9:30"><expr pos:start="9:21" pos:end="9:29"><name pos:start="9:21" pos:end="9:21">i</name> <operator pos:start="9:23" pos:end="9:23">&lt;</operator> <name pos:start="9:25" pos:end="9:29">chang</name></expr>;</condition> <incr pos:start="9:32" pos:end="9:37"><expr pos:start="9:32" pos:end="9:37"><name pos:start="9:32" pos:end="9:32">i</name> <operator pos:start="9:34" pos:end="9:35">+=</operator> <literal type="number" pos:start="9:37" pos:end="9:37">8</literal></expr></incr>)</control><block pos:start="9:39" pos:end="23:5">{<block_content pos:start="10:9" pos:end="22:9">
        <if_stmt pos:start="10:9" pos:end="22:9"><if pos:start="10:9" pos:end="18:9">if<condition pos:start="10:11" pos:end="10:61">(<expr pos:start="10:12" pos:end="10:60"><name pos:start="10:12" pos:end="10:15"><name pos:start="10:12" pos:end="10:12">a</name><index pos:start="10:13" pos:end="10:15">[<expr pos:start="10:14" pos:end="10:14"><name pos:start="10:14" pos:end="10:14">i</name></expr>]</index></name> <operator pos:start="10:17" pos:end="10:18">==</operator> <literal type="char" pos:start="10:20" pos:end="10:22">'1'</literal> <operator pos:start="10:24" pos:end="10:25">&amp;&amp;</operator> <name pos:start="10:27" pos:end="10:34"><name pos:start="10:27" pos:end="10:27">a</name><index pos:start="10:28" pos:end="10:34">[<expr pos:start="10:29" pos:end="10:33"><name pos:start="10:29" pos:end="10:29">i</name> <operator pos:start="10:31" pos:end="10:31">+</operator> <literal type="number" pos:start="10:33" pos:end="10:33">1</literal></expr>]</index></name> <operator pos:start="10:36" pos:end="10:37">==</operator> <literal type="char" pos:start="10:39" pos:end="10:41">'0'</literal> <operator pos:start="10:43" pos:end="10:44">&amp;&amp;</operator> <name pos:start="10:46" pos:end="10:53"><name pos:start="10:46" pos:end="10:46">a</name><index pos:start="10:47" pos:end="10:53">[<expr pos:start="10:48" pos:end="10:52"><name pos:start="10:48" pos:end="10:48">i</name> <operator pos:start="10:50" pos:end="10:50">+</operator> <literal type="number" pos:start="10:52" pos:end="10:52">2</literal></expr>]</index></name> <operator pos:start="10:55" pos:end="10:56">==</operator> <literal type="char" pos:start="10:58" pos:end="10:60">'1'</literal></expr>)</condition><block pos:start="10:62" pos:end="18:9">{<block_content pos:start="11:13" pos:end="17:13">
            <decl_stmt pos:start="11:13" pos:end="11:25"><decl pos:start="11:13" pos:end="11:24"><type pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:15">int</name></type> <name pos:start="11:17" pos:end="11:20">temp</name> <init pos:start="11:22" pos:end="11:24">= <expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="12:13" pos:end="14:13">for<control pos:start="12:16" pos:end="12:46">(<init pos:start="12:17" pos:end="12:30"><decl pos:start="12:17" pos:end="12:29"><type pos:start="12:17" pos:end="12:19"><name pos:start="12:17" pos:end="12:19">int</name></type> <name pos:start="12:21" pos:end="12:21">j</name> <init pos:start="12:23" pos:end="12:29">= <expr pos:start="12:25" pos:end="12:29"><name pos:start="12:25" pos:end="12:25">i</name> <operator pos:start="12:27" pos:end="12:27">+</operator> <literal type="number" pos:start="12:29" pos:end="12:29">3</literal></expr></init></decl>;</init> <condition pos:start="12:32" pos:end="12:41"><expr pos:start="12:32" pos:end="12:40"><name pos:start="12:32" pos:end="12:32">j</name> <operator pos:start="12:34" pos:end="12:34">&lt;</operator> <name pos:start="12:36" pos:end="12:36">i</name> <operator pos:start="12:38" pos:end="12:38">+</operator> <literal type="number" pos:start="12:40" pos:end="12:40">8</literal></expr>;</condition> <incr pos:start="12:43" pos:end="12:45"><expr pos:start="12:43" pos:end="12:45"><name pos:start="12:43" pos:end="12:43">j</name><operator pos:start="12:44" pos:end="12:45">++</operator></expr></incr>)</control><block pos:start="12:47" pos:end="14:13">{<block_content pos:start="13:17" pos:end="13:47">
                <expr_stmt pos:start="13:17" pos:end="13:47"><expr pos:start="13:17" pos:end="13:46"><name pos:start="13:17" pos:end="13:20">temp</name> <operator pos:start="13:22" pos:end="13:22">=</operator> <name pos:start="13:24" pos:end="13:27">temp</name> <operator pos:start="13:29" pos:end="13:29">*</operator> <literal type="number" pos:start="13:31" pos:end="13:33">2</literal> <operator pos:start="13:33" pos:end="13:33">+</operator> <operator pos:start="13:35" pos:end="13:35">(</operator><name pos:start="13:36" pos:end="13:39"><name pos:start="13:36" pos:end="13:36">a</name><index pos:start="13:37" pos:end="13:39">[<expr pos:start="13:38" pos:end="13:38"><name pos:start="13:38" pos:end="13:38">j</name></expr>]</index></name> <operator pos:start="13:41" pos:end="13:41">-</operator> <literal type="char" pos:start="13:43" pos:end="13:45">'0'</literal><operator pos:start="13:46" pos:end="13:46">)</operator></expr>;</expr_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="15:13" pos:end="17:13"><if pos:start="15:13" pos:end="17:13">if<condition pos:start="15:15" pos:end="15:26">(<expr pos:start="15:16" pos:end="15:25"><name pos:start="15:16" pos:end="15:19">temp</name> <operator pos:start="15:21" pos:end="15:22">&gt;=</operator> <literal type="number" pos:start="15:24" pos:end="15:25">26</literal></expr>)</condition><block pos:start="15:27" pos:end="17:13">{<block_content pos:start="16:17" pos:end="16:29">
                <return pos:start="16:17" pos:end="16:29">return <expr pos:start="16:24" pos:end="16:28"><literal type="boolean" pos:start="16:24" pos:end="16:28">false</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="18:10" pos:end="20:9">else if<condition pos:start="18:17" pos:end="18:67">(<expr pos:start="18:18" pos:end="18:66"><name pos:start="18:18" pos:end="18:21"><name pos:start="18:18" pos:end="18:18">a</name><index pos:start="18:19" pos:end="18:21">[<expr pos:start="18:20" pos:end="18:20"><name pos:start="18:20" pos:end="18:20">i</name></expr>]</index></name> <operator pos:start="18:23" pos:end="18:24">==</operator> <literal type="char" pos:start="18:26" pos:end="18:28">'1'</literal> <operator pos:start="18:30" pos:end="18:31">&amp;&amp;</operator> <name pos:start="18:33" pos:end="18:40"><name pos:start="18:33" pos:end="18:33">a</name><index pos:start="18:34" pos:end="18:40">[<expr pos:start="18:35" pos:end="18:39"><name pos:start="18:35" pos:end="18:35">i</name> <operator pos:start="18:37" pos:end="18:37">+</operator> <literal type="number" pos:start="18:39" pos:end="18:39">1</literal></expr>]</index></name> <operator pos:start="18:42" pos:end="18:43">==</operator> <literal type="char" pos:start="18:45" pos:end="18:47">'1'</literal> <operator pos:start="18:49" pos:end="18:50">&amp;&amp;</operator> <name pos:start="18:52" pos:end="18:59"><name pos:start="18:52" pos:end="18:52">a</name><index pos:start="18:53" pos:end="18:59">[<expr pos:start="18:54" pos:end="18:58"><name pos:start="18:54" pos:end="18:54">i</name> <operator pos:start="18:56" pos:end="18:56">+</operator> <literal type="number" pos:start="18:58" pos:end="18:58">2</literal></expr>]</index></name> <operator pos:start="18:61" pos:end="18:62">==</operator> <literal type="char" pos:start="18:64" pos:end="18:66">'1'</literal></expr>)</condition><block pos:start="18:68" pos:end="20:9">{<block_content pos:start="19:13" pos:end="19:21">
            <continue pos:start="19:13" pos:end="19:21">continue;</continue>
        </block_content>}</block></if> <if type="elseif" pos:start="20:11" pos:end="22:9">else if<condition pos:start="20:18" pos:end="20:30">(<expr pos:start="20:19" pos:end="20:29"><name pos:start="20:19" pos:end="20:22"><name pos:start="20:19" pos:end="20:19">a</name><index pos:start="20:20" pos:end="20:22">[<expr pos:start="20:21" pos:end="20:21"><name pos:start="20:21" pos:end="20:21">i</name></expr>]</index></name> <operator pos:start="20:24" pos:end="20:25">==</operator> <literal type="char" pos:start="20:27" pos:end="20:29">'0'</literal></expr>)</condition><block pos:start="20:31" pos:end="22:9">{<block_content pos:start="21:13" pos:end="21:16">
            <expr_stmt pos:start="21:13" pos:end="21:16"><expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:13">d</name><operator pos:start="21:14" pos:end="21:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="24:5" pos:end="26:5"><if pos:start="24:5" pos:end="26:5">if<condition pos:start="24:7" pos:end="24:18">(<expr pos:start="24:8" pos:end="24:17"><name pos:start="24:8" pos:end="24:8">d</name> <operator pos:start="24:10" pos:end="24:10">%</operator> <literal type="number" pos:start="24:12" pos:end="24:12">2</literal> <operator pos:start="24:14" pos:end="24:15">!=</operator> <literal type="number" pos:start="24:17" pos:end="24:17">0</literal></expr>)</condition><block pos:start="24:19" pos:end="26:5">{<block_content pos:start="25:9" pos:end="25:21">
        <return pos:start="25:9" pos:end="25:21">return <expr pos:start="25:16" pos:end="25:20"><literal type="boolean" pos:start="25:16" pos:end="25:20">false</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="27:5" pos:end="27:16">return <expr pos:start="27:12" pos:end="27:15"><literal type="boolean" pos:start="27:12" pos:end="27:15">true</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="29:1" pos:end="64:1"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:8">main</name><parameter_list pos:start="29:9" pos:end="29:10">()</parameter_list><block pos:start="29:11" pos:end="64:1">{<block_content pos:start="30:5" pos:end="63:13">
    <expr_stmt pos:start="30:5" pos:end="30:40"><expr pos:start="30:5" pos:end="30:39"><call pos:start="30:5" pos:end="30:39"><name pos:start="30:5" pos:end="30:11">freopen</name><argument_list pos:start="30:12" pos:end="30:39">(<argument pos:start="30:13" pos:end="30:28"><expr pos:start="30:13" pos:end="30:28"><literal type="string" pos:start="30:13" pos:end="30:28">"information.in"</literal></expr></argument>,<argument pos:start="30:30" pos:end="30:32"><expr pos:start="30:30" pos:end="30:32"><literal type="string" pos:start="30:30" pos:end="30:32">"r"</literal></expr></argument>,<argument pos:start="30:34" pos:end="30:38"><expr pos:start="30:34" pos:end="30:38"><name pos:start="30:34" pos:end="30:38">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><call pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:11">freopen</name><argument_list pos:start="31:12" pos:end="31:41">(<argument pos:start="31:13" pos:end="31:29"><expr pos:start="31:13" pos:end="31:29"><literal type="string" pos:start="31:13" pos:end="31:29">"information.out"</literal></expr></argument>,<argument pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><literal type="string" pos:start="31:31" pos:end="31:33">"w"</literal></expr></argument>,<argument pos:start="31:35" pos:end="31:40"><expr pos:start="31:35" pos:end="31:40"><name pos:start="31:35" pos:end="31:40">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:13"><expr pos:start="32:5" pos:end="32:12"><name pos:start="32:5" pos:end="32:7">cin</name> <operator pos:start="32:9" pos:end="32:10">&gt;&gt;</operator> <name pos:start="32:12" pos:end="32:12">a</name></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:9">chang</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <call pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:13">a</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:18">size</name></name><argument_list pos:start="33:19" pos:end="33:20">()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="34:5" pos:end="34:30"><decl pos:start="34:5" pos:end="34:20"><type pos:start="34:5" pos:end="34:13"><name pos:start="34:5" pos:end="34:8">long</name> <name pos:start="34:10" pos:end="34:13">long</name></type> <name pos:start="34:15" pos:end="34:16">bc</name> <init pos:start="34:18" pos:end="34:20">= <expr pos:start="34:20" pos:end="34:20"><literal type="number" pos:start="34:20" pos:end="34:20">0</literal></expr></init></decl>, <decl pos:start="34:23" pos:end="34:29"><type ref="prev" pos:start="34:5" pos:end="34:13"/><name pos:start="34:23" pos:end="34:25">pan</name> <init pos:start="34:27" pos:end="34:29">= <expr pos:start="34:29" pos:end="34:29"><literal type="number" pos:start="34:29" pos:end="34:29">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="35:5" pos:end="62:5"><if pos:start="35:5" pos:end="38:5">if<condition pos:start="35:7" pos:end="35:13">(<expr pos:start="35:8" pos:end="35:12"><operator pos:start="35:8" pos:end="35:8">!</operator><call pos:start="35:9" pos:end="35:12"><name pos:start="35:9" pos:end="35:10">pd</name><argument_list pos:start="35:11" pos:end="35:12">()</argument_list></call></expr>)</condition><block pos:start="35:14" pos:end="38:5">{<block_content pos:start="36:9" pos:end="37:17">
        <expr_stmt pos:start="36:9" pos:end="36:32"><expr pos:start="36:9" pos:end="36:31"><name pos:start="36:9" pos:end="36:12">cout</name> <operator pos:start="36:14" pos:end="36:15">&lt;&lt;</operator> <literal type="string" pos:start="36:17" pos:end="36:23">"Error"</literal> <operator pos:start="36:25" pos:end="36:26">&lt;&lt;</operator> <name pos:start="36:28" pos:end="36:31">endl</name></expr>;</expr_stmt>
        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>
    </block_content>}</block></if><else pos:start="38:6" pos:end="62:5">else <block pos:start="38:11" pos:end="62:5">{<block_content pos:start="39:9" pos:end="61:9">
        <for pos:start="39:9" pos:end="61:9">for<control pos:start="39:12" pos:end="39:41">(<init pos:start="39:13" pos:end="39:22"><decl pos:start="39:13" pos:end="39:21"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:17">i</name> <init pos:start="39:19" pos:end="39:21">= <expr pos:start="39:21" pos:end="39:21"><literal type="number" pos:start="39:21" pos:end="39:21">0</literal></expr></init></decl>;</init> <condition pos:start="39:24" pos:end="39:33"><expr pos:start="39:24" pos:end="39:32"><name pos:start="39:24" pos:end="39:24">i</name> <operator pos:start="39:26" pos:end="39:26">&lt;</operator> <name pos:start="39:28" pos:end="39:32">chang</name></expr>;</condition> <incr pos:start="39:35" pos:end="39:40"><expr pos:start="39:35" pos:end="39:40"><name pos:start="39:35" pos:end="39:35">i</name> <operator pos:start="39:37" pos:end="39:38">+=</operator> <literal type="number" pos:start="39:40" pos:end="39:40">8</literal></expr></incr>)</control><block pos:start="39:42" pos:end="61:9">{<block_content pos:start="40:13" pos:end="60:13">
            <if_stmt pos:start="40:13" pos:end="60:13"><if pos:start="40:13" pos:end="46:13">if<condition pos:start="40:15" pos:end="40:65">(<expr pos:start="40:16" pos:end="40:64"><name pos:start="40:16" pos:end="40:19"><name pos:start="40:16" pos:end="40:16">a</name><index pos:start="40:17" pos:end="40:19">[<expr pos:start="40:18" pos:end="40:18"><name pos:start="40:18" pos:end="40:18">i</name></expr>]</index></name> <operator pos:start="40:21" pos:end="40:22">==</operator> <literal type="char" pos:start="40:24" pos:end="40:26">'1'</literal> <operator pos:start="40:28" pos:end="40:29">&amp;&amp;</operator> <name pos:start="40:31" pos:end="40:38"><name pos:start="40:31" pos:end="40:31">a</name><index pos:start="40:32" pos:end="40:38">[<expr pos:start="40:33" pos:end="40:37"><name pos:start="40:33" pos:end="40:33">i</name> <operator pos:start="40:35" pos:end="40:35">+</operator> <literal type="number" pos:start="40:37" pos:end="40:37">1</literal></expr>]</index></name> <operator pos:start="40:40" pos:end="40:41">==</operator> <literal type="char" pos:start="40:43" pos:end="40:45">'0'</literal> <operator pos:start="40:47" pos:end="40:48">&amp;&amp;</operator> <name pos:start="40:50" pos:end="40:57"><name pos:start="40:50" pos:end="40:50">a</name><index pos:start="40:51" pos:end="40:57">[<expr pos:start="40:52" pos:end="40:56"><name pos:start="40:52" pos:end="40:52">i</name> <operator pos:start="40:54" pos:end="40:54">+</operator> <literal type="number" pos:start="40:56" pos:end="40:56">2</literal></expr>]</index></name> <operator pos:start="40:59" pos:end="40:60">==</operator> <literal type="char" pos:start="40:62" pos:end="40:64">'1'</literal></expr>)</condition><block pos:start="40:66" pos:end="46:13">{<block_content pos:start="41:17" pos:end="45:17">
                <decl_stmt pos:start="41:17" pos:end="41:29"><decl pos:start="41:17" pos:end="41:28"><type pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">int</name></type> <name pos:start="41:21" pos:end="41:24">temp</name> <init pos:start="41:26" pos:end="41:28">= <expr pos:start="41:28" pos:end="41:28"><literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr></init></decl>;</decl_stmt>
                <for pos:start="42:17" pos:end="45:17">for<control pos:start="42:20" pos:end="42:50">(<init pos:start="42:21" pos:end="42:34"><decl pos:start="42:21" pos:end="42:33"><type pos:start="42:21" pos:end="42:23"><name pos:start="42:21" pos:end="42:23">int</name></type> <name pos:start="42:25" pos:end="42:25">j</name> <init pos:start="42:27" pos:end="42:33">= <expr pos:start="42:29" pos:end="42:33"><name pos:start="42:29" pos:end="42:29">i</name> <operator pos:start="42:31" pos:end="42:31">+</operator> <literal type="number" pos:start="42:33" pos:end="42:33">3</literal></expr></init></decl>;</init> <condition pos:start="42:36" pos:end="42:45"><expr pos:start="42:36" pos:end="42:44"><name pos:start="42:36" pos:end="42:36">j</name> <operator pos:start="42:38" pos:end="42:38">&lt;</operator> <name pos:start="42:40" pos:end="42:40">i</name> <operator pos:start="42:42" pos:end="42:42">+</operator> <literal type="number" pos:start="42:44" pos:end="42:44">8</literal></expr>;</condition> <incr pos:start="42:47" pos:end="42:49"><expr pos:start="42:47" pos:end="42:49"><name pos:start="42:47" pos:end="42:47">j</name><operator pos:start="42:48" pos:end="42:49">++</operator></expr></incr>)</control><block pos:start="42:51" pos:end="45:17">{<block_content pos:start="43:21" pos:end="44:39">
                    <expr_stmt pos:start="43:21" pos:end="43:51"><expr pos:start="43:21" pos:end="43:50"><name pos:start="43:21" pos:end="43:24">temp</name> <operator pos:start="43:26" pos:end="43:26">=</operator> <name pos:start="43:28" pos:end="43:31">temp</name> <operator pos:start="43:33" pos:end="43:33">*</operator> <literal type="number" pos:start="43:35" pos:end="43:37">2</literal> <operator pos:start="43:37" pos:end="43:37">+</operator> <operator pos:start="43:39" pos:end="43:39">(</operator><name pos:start="43:40" pos:end="43:43"><name pos:start="43:40" pos:end="43:40">a</name><index pos:start="43:41" pos:end="43:43">[<expr pos:start="43:42" pos:end="43:42"><name pos:start="43:42" pos:end="43:42">j</name></expr>]</index></name> <operator pos:start="43:45" pos:end="43:45">-</operator> <literal type="char" pos:start="43:47" pos:end="43:49">'0'</literal><operator pos:start="43:50" pos:end="43:50">)</operator></expr>;</expr_stmt>
                    <expr_stmt pos:start="44:21" pos:end="44:39"><expr pos:start="44:21" pos:end="44:38"><name pos:start="44:21" pos:end="44:24">cout</name> <operator pos:start="44:26" pos:end="44:27">&lt;&lt;</operator> <literal type="char" pos:start="44:29" pos:end="44:31">'A'</literal> <operator pos:start="44:33" pos:end="44:33">+</operator> <name pos:start="44:35" pos:end="44:38">temp</name></expr>;</expr_stmt>
                </block_content>}</block></for>
            </block_content>}</block></if><if type="elseif" pos:start="46:14" pos:end="48:13">else if<condition pos:start="46:21" pos:end="46:71">(<expr pos:start="46:22" pos:end="46:70"><name pos:start="46:22" pos:end="46:25"><name pos:start="46:22" pos:end="46:22">a</name><index pos:start="46:23" pos:end="46:25">[<expr pos:start="46:24" pos:end="46:24"><name pos:start="46:24" pos:end="46:24">i</name></expr>]</index></name> <operator pos:start="46:27" pos:end="46:28">==</operator> <literal type="char" pos:start="46:30" pos:end="46:32">'1'</literal> <operator pos:start="46:34" pos:end="46:35">&amp;&amp;</operator> <name pos:start="46:37" pos:end="46:44"><name pos:start="46:37" pos:end="46:37">a</name><index pos:start="46:38" pos:end="46:44">[<expr pos:start="46:39" pos:end="46:43"><name pos:start="46:39" pos:end="46:39">i</name> <operator pos:start="46:41" pos:end="46:41">+</operator> <literal type="number" pos:start="46:43" pos:end="46:43">1</literal></expr>]</index></name> <operator pos:start="46:46" pos:end="46:47">==</operator> <literal type="char" pos:start="46:49" pos:end="46:51">'1'</literal> <operator pos:start="46:53" pos:end="46:54">&amp;&amp;</operator> <name pos:start="46:56" pos:end="46:63"><name pos:start="46:56" pos:end="46:56">a</name><index pos:start="46:57" pos:end="46:63">[<expr pos:start="46:58" pos:end="46:62"><name pos:start="46:58" pos:end="46:58">i</name> <operator pos:start="46:60" pos:end="46:60">+</operator> <literal type="number" pos:start="46:62" pos:end="46:62">2</literal></expr>]</index></name> <operator pos:start="46:65" pos:end="46:66">==</operator> <literal type="char" pos:start="46:68" pos:end="46:70">'1'</literal></expr>)</condition><block pos:start="46:72" pos:end="48:13">{<block_content pos:start="47:17" pos:end="47:28">
                <expr_stmt pos:start="47:17" pos:end="47:28"><expr pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:20">cout</name> <operator pos:start="47:22" pos:end="47:23">&lt;&lt;</operator> <literal type="string" pos:start="47:25" pos:end="47:27">" "</literal></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="48:14" pos:end="60:13">else if<condition pos:start="48:21" pos:end="48:33">(<expr pos:start="48:22" pos:end="48:32"><name pos:start="48:22" pos:end="48:25"><name pos:start="48:22" pos:end="48:22">a</name><index pos:start="48:23" pos:end="48:25">[<expr pos:start="48:24" pos:end="48:24"><name pos:start="48:24" pos:end="48:24">i</name></expr>]</index></name> <operator pos:start="48:27" pos:end="48:28">==</operator> <literal type="char" pos:start="48:30" pos:end="48:32">'0'</literal></expr>)</condition><block pos:start="48:34" pos:end="60:13">{<block_content pos:start="49:17" pos:end="59:17">
                <decl_stmt pos:start="49:17" pos:end="49:29"><decl pos:start="49:17" pos:end="49:28"><type pos:start="49:17" pos:end="49:19"><name pos:start="49:17" pos:end="49:19">int</name></type> <name pos:start="49:21" pos:end="49:24">temp</name> <init pos:start="49:26" pos:end="49:28">= <expr pos:start="49:28" pos:end="49:28"><literal type="number" pos:start="49:28" pos:end="49:28">0</literal></expr></init></decl>;</decl_stmt>
                <for pos:start="50:17" pos:end="59:17">for<control pos:start="50:20" pos:end="50:50">(<init pos:start="50:21" pos:end="50:34"><decl pos:start="50:21" pos:end="50:33"><type pos:start="50:21" pos:end="50:23"><name pos:start="50:21" pos:end="50:23">int</name></type> <name pos:start="50:25" pos:end="50:25">j</name> <init pos:start="50:27" pos:end="50:33">= <expr pos:start="50:29" pos:end="50:33"><name pos:start="50:29" pos:end="50:29">i</name> <operator pos:start="50:31" pos:end="50:31">+</operator> <literal type="number" pos:start="50:33" pos:end="50:33">1</literal></expr></init></decl>;</init> <condition pos:start="50:36" pos:end="50:45"><expr pos:start="50:36" pos:end="50:44"><name pos:start="50:36" pos:end="50:36">j</name> <operator pos:start="50:38" pos:end="50:38">&lt;</operator> <name pos:start="50:40" pos:end="50:40">i</name> <operator pos:start="50:42" pos:end="50:42">+</operator> <literal type="number" pos:start="50:44" pos:end="50:44">8</literal></expr>;</condition> <incr pos:start="50:47" pos:end="50:49"><expr pos:start="50:47" pos:end="50:49"><name pos:start="50:47" pos:end="50:47">j</name><operator pos:start="50:48" pos:end="50:49">++</operator></expr></incr>)</control><block pos:start="50:51" pos:end="59:17">{<block_content pos:start="51:21" pos:end="58:21">
                    <expr_stmt pos:start="51:21" pos:end="51:43"><expr pos:start="51:21" pos:end="51:42"><name pos:start="51:21" pos:end="51:24">temp</name> <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:31">temp</name> <operator pos:start="51:33" pos:end="51:33">*</operator> <literal type="number" pos:start="51:35" pos:end="51:37">2</literal> <operator pos:start="51:37" pos:end="51:37">+</operator> <name pos:start="51:39" pos:end="51:42"><name pos:start="51:39" pos:end="51:39">a</name><index pos:start="51:40" pos:end="51:42">[<expr pos:start="51:41" pos:end="51:41"><name pos:start="51:41" pos:end="51:41">j</name></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="52:21" pos:end="52:26"><expr pos:start="52:21" pos:end="52:25"><name pos:start="52:21" pos:end="52:23">pan</name><operator pos:start="52:24" pos:end="52:25">++</operator></expr>;</expr_stmt>
                    <expr_stmt pos:start="53:21" pos:end="53:35"><expr pos:start="53:21" pos:end="53:34"><name pos:start="53:21" pos:end="53:22">bc</name> <operator pos:start="53:24" pos:end="53:25">+=</operator> <name pos:start="53:27" pos:end="53:30">temp</name> <operator pos:start="53:32" pos:end="53:32">/</operator> <literal type="number" pos:start="53:34" pos:end="53:34">2</literal></expr>;</expr_stmt>
                    <if_stmt pos:start="54:21" pos:end="58:21"><if pos:start="54:21" pos:end="58:21">if<condition pos:start="54:23" pos:end="54:36">(<expr pos:start="54:24" pos:end="54:35"><name pos:start="54:24" pos:end="54:26">pan</name> <operator pos:start="54:28" pos:end="54:28">%</operator> <literal type="number" pos:start="54:30" pos:end="54:30">2</literal> <operator pos:start="54:32" pos:end="54:33">==</operator> <literal type="number" pos:start="54:35" pos:end="54:35">0</literal></expr>)</condition><block pos:start="54:37" pos:end="58:21">{<block_content pos:start="55:25" pos:end="57:32">
                        <expr_stmt pos:start="55:25" pos:end="55:35"><expr pos:start="55:25" pos:end="55:34"><name pos:start="55:25" pos:end="55:28">cout</name> <operator pos:start="55:30" pos:end="55:31">&lt;&lt;</operator> <name pos:start="55:33" pos:end="55:34">bc</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="56:25" pos:end="56:31"><expr pos:start="56:25" pos:end="56:30"><name pos:start="56:25" pos:end="56:26">bc</name> <operator pos:start="56:28" pos:end="56:28">=</operator> <literal type="number" pos:start="56:30" pos:end="56:30">0</literal></expr>;</expr_stmt>
                        <expr_stmt pos:start="57:25" pos:end="57:32"><expr pos:start="57:25" pos:end="57:31"><name pos:start="57:25" pos:end="57:27">pan</name> <operator pos:start="57:29" pos:end="57:29">=</operator> <literal type="number" pos:start="57:31" pos:end="57:31">0</literal></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></for>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></else></if_stmt>
    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
