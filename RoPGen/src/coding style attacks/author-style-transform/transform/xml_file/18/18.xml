<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/18/18.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="33:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="33:1">{<block_content pos:start="4:5" pos:end="32:5">
    <decl_stmt pos:start="4:5" pos:end="4:14"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">n</name></decl>,<decl pos:start="4:11" pos:end="4:13"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:11" pos:end="4:11">x</name><init pos:start="4:12" pos:end="4:13">=<expr pos:start="4:13" pos:end="4:13"><literal type="number" pos:start="4:13" pos:end="4:13">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:19"><expr pos:start="5:5" pos:end="5:18"><call pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:9">scanf</name><argument_list pos:start="5:10" pos:end="5:18">(<argument pos:start="5:11" pos:end="5:14"><expr pos:start="5:11" pos:end="5:14"><literal type="string" pos:start="5:11" pos:end="5:14">"%d"</literal></expr></argument>,<argument pos:start="5:16" pos:end="5:17"><expr pos:start="5:16" pos:end="5:17"><operator pos:start="5:16" pos:end="5:16">&amp;</operator><name pos:start="5:17" pos:end="5:17">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:25"><decl pos:start="6:5" pos:end="6:24"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:21"><name pos:start="6:12" pos:end="6:12">f</name><index pos:start="6:13" pos:end="6:21">[<expr pos:start="6:14" pos:end="6:20"><literal type="number" pos:start="6:14" pos:end="6:18">1000</literal><operator pos:start="6:18" pos:end="6:18">+</operator><literal type="number" pos:start="6:19" pos:end="6:20">10</literal></expr>]</index></name><init pos:start="6:22" pos:end="6:24">=<expr pos:start="6:23" pos:end="6:24"><block pos:start="6:23" pos:end="6:24">{}</block></expr></init></decl>;</decl_stmt>
    <while pos:start="7:5" pos:end="32:5">while<condition pos:start="7:10" pos:end="7:14">(<expr pos:start="7:11" pos:end="7:13"><name pos:start="7:11" pos:end="7:11">n</name><operator pos:start="7:12" pos:end="7:13">--</operator></expr>)</condition><block pos:start="7:15" pos:end="32:5">{<block_content pos:start="8:9" pos:end="31:19">
        <expr_stmt pos:start="8:9" pos:end="8:12"><expr pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:9">x</name><operator pos:start="8:10" pos:end="8:10">=</operator><literal type="number" pos:start="8:11" pos:end="8:11">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:30"><expr pos:start="9:9" pos:end="9:29"><call pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:14">memset</name><argument_list pos:start="9:15" pos:end="9:29">(<argument pos:start="9:16" pos:end="9:16"><expr pos:start="9:16" pos:end="9:16"><name pos:start="9:16" pos:end="9:16">f</name></expr></argument>,<argument pos:start="9:18" pos:end="9:18"><expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></argument>,<argument pos:start="9:20" pos:end="9:28"><expr pos:start="9:20" pos:end="9:28"><sizeof pos:start="9:20" pos:end="9:28">sizeof<argument_list pos:start="9:26" pos:end="9:28">(<argument pos:start="9:27" pos:end="9:27"><expr pos:start="9:27" pos:end="9:27"><name pos:start="9:27" pos:end="9:27">f</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="10:9" pos:end="10:17"><decl pos:start="10:9" pos:end="10:16"><type pos:start="10:9" pos:end="10:14"><name pos:start="10:9" pos:end="10:14">string</name></type> <name pos:start="10:16" pos:end="10:16">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:23"><expr pos:start="11:9" pos:end="11:22"><call pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:15">getline</name><argument_list pos:start="11:16" pos:end="11:22">(<argument pos:start="11:17" pos:end="11:19"><expr pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:19">cin</name></expr></argument>,<argument pos:start="11:21" pos:end="11:21"><expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="12:9" pos:end="22:9">for<control pos:start="12:12" pos:end="12:35">(<init pos:start="12:13" pos:end="12:20"><decl pos:start="12:13" pos:end="12:19"><type pos:start="12:13" pos:end="12:15"><name pos:start="12:13" pos:end="12:15">int</name></type> <name pos:start="12:17" pos:end="12:17">i</name><init pos:start="12:18" pos:end="12:19">=<expr pos:start="12:19" pos:end="12:19"><literal type="number" pos:start="12:19" pos:end="12:19">0</literal></expr></init></decl>;</init><condition pos:start="12:21" pos:end="12:31"><expr pos:start="12:21" pos:end="12:30"><name pos:start="12:21" pos:end="12:21">i</name><operator pos:start="12:22" pos:end="12:22">&lt;</operator><call pos:start="12:23" pos:end="12:30"><name pos:start="12:23" pos:end="12:28"><name pos:start="12:23" pos:end="12:23">s</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:28">size</name></name><argument_list pos:start="12:29" pos:end="12:30">()</argument_list></call></expr>;</condition><incr pos:start="12:32" pos:end="12:34"><expr pos:start="12:32" pos:end="12:34"><name pos:start="12:32" pos:end="12:32">i</name><operator pos:start="12:33" pos:end="12:34">++</operator></expr></incr>)</control><block pos:start="12:36" pos:end="22:9">{<block_content pos:start="13:13" pos:end="21:22">
            <if_stmt pos:start="13:13" pos:end="15:13"><if pos:start="13:13" pos:end="15:13">if<condition pos:start="13:15" pos:end="13:47">(<expr pos:start="13:16" pos:end="13:46"><name pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:16">s</name><index pos:start="13:17" pos:end="13:19">[<expr pos:start="13:18" pos:end="13:18"><name pos:start="13:18" pos:end="13:18">i</name></expr>]</index></name><operator pos:start="13:20" pos:end="13:21">&gt;=</operator><literal type="char" pos:start="13:22" pos:end="13:24">'A'</literal><operator pos:start="13:25" pos:end="13:26">&amp;&amp;</operator><name pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:27">s</name><index pos:start="13:28" pos:end="13:30">[<expr pos:start="13:29" pos:end="13:29"><name pos:start="13:29" pos:end="13:29">i</name></expr>]</index></name><operator pos:start="13:31" pos:end="13:32">&lt;=</operator><literal type="char" pos:start="13:33" pos:end="13:35">'Z'</literal><operator pos:start="13:36" pos:end="13:37">&amp;&amp;</operator><name pos:start="13:38" pos:end="13:41"><name pos:start="13:38" pos:end="13:38">s</name><index pos:start="13:39" pos:end="13:41">[<expr pos:start="13:40" pos:end="13:40"><name pos:start="13:40" pos:end="13:40">i</name></expr>]</index></name><operator pos:start="13:42" pos:end="13:43">!=</operator><literal type="char" pos:start="13:44" pos:end="13:46">'I'</literal></expr>)</condition><block pos:start="13:48" pos:end="15:13">{<block_content pos:start="14:17" pos:end="14:25">
                <expr_stmt pos:start="14:17" pos:end="14:25"><expr pos:start="14:17" pos:end="14:24"><name pos:start="14:17" pos:end="14:20"><name pos:start="14:17" pos:end="14:17">s</name><index pos:start="14:18" pos:end="14:20">[<expr pos:start="14:19" pos:end="14:19"><name pos:start="14:19" pos:end="14:19">i</name></expr>]</index></name><operator pos:start="14:21" pos:end="14:22">+=</operator><literal type="number" pos:start="14:23" pos:end="14:24">32</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="16:13" pos:end="18:13"><if pos:start="16:13" pos:end="18:13">if<condition pos:start="16:15" pos:end="16:25">(<expr pos:start="16:16" pos:end="16:24"><name pos:start="16:16" pos:end="16:19"><name pos:start="16:16" pos:end="16:16">s</name><index pos:start="16:17" pos:end="16:19">[<expr pos:start="16:18" pos:end="16:18"><name pos:start="16:18" pos:end="16:18">i</name></expr>]</index></name><operator pos:start="16:20" pos:end="16:21">==</operator><literal type="char" pos:start="16:22" pos:end="16:24">'?'</literal></expr>)</condition><block pos:start="16:26" pos:end="18:13">{<block_content pos:start="17:17" pos:end="17:25">
                <expr_stmt pos:start="17:17" pos:end="17:25"><expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:20"><name pos:start="17:17" pos:end="17:17">s</name><index pos:start="17:18" pos:end="17:20">[<expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">i</name></expr>]</index></name><operator pos:start="17:21" pos:end="17:21">=</operator><literal type="char" pos:start="17:22" pos:end="17:24">'!'</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="19:13" pos:end="21:22"><if pos:start="19:13" pos:end="21:13">if<condition pos:start="19:15" pos:end="19:25">(<expr pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:16">s</name><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><name pos:start="19:18" pos:end="19:18">i</name></expr>]</index></name><operator pos:start="19:20" pos:end="19:21">!=</operator><literal type="char" pos:start="19:22" pos:end="19:24">' '</literal></expr>)</condition><block pos:start="19:26" pos:end="21:13">{<block_content pos:start="20:17" pos:end="20:27">
                <expr_stmt pos:start="20:17" pos:end="20:27"><expr pos:start="20:17" pos:end="20:26"><name pos:start="20:17" pos:end="20:20"><name pos:start="20:17" pos:end="20:17">f</name><index pos:start="20:18" pos:end="20:20">[<expr pos:start="20:19" pos:end="20:19"><name pos:start="20:19" pos:end="20:19">x</name></expr>]</index></name><operator pos:start="20:21" pos:end="20:22">+=</operator><name pos:start="20:23" pos:end="20:26"><name pos:start="20:23" pos:end="20:23">s</name><index pos:start="20:24" pos:end="20:26">[<expr pos:start="20:25" pos:end="20:25"><name pos:start="20:25" pos:end="20:25">i</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if><else pos:start="21:14" pos:end="21:22">else<block type="pseudo" pos:start="21:19" pos:end="21:22"><block_content pos:start="21:19" pos:end="21:22"> <expr_stmt pos:start="21:19" pos:end="21:22"><expr pos:start="21:19" pos:end="21:21"><name pos:start="21:19" pos:end="21:19">x</name><operator pos:start="21:20" pos:end="21:21">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
        </block_content>}</block></for>
        <for pos:start="23:9" pos:end="30:9">for<control pos:start="23:12" pos:end="23:29">(<init pos:start="23:13" pos:end="23:20"><decl pos:start="23:13" pos:end="23:19"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:17">i</name><init pos:start="23:18" pos:end="23:19">=<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr></init></decl>;</init><condition pos:start="23:21" pos:end="23:25"><expr pos:start="23:21" pos:end="23:24"><name pos:start="23:21" pos:end="23:21">i</name><operator pos:start="23:22" pos:end="23:23">&lt;=</operator><name pos:start="23:24" pos:end="23:24">x</name></expr>;</condition><incr pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><name pos:start="23:26" pos:end="23:26">i</name><operator pos:start="23:27" pos:end="23:28">++</operator></expr></incr>)</control><block pos:start="23:30" pos:end="30:9">{<block_content pos:start="24:13" pos:end="29:34">
            <if_stmt pos:start="24:13" pos:end="29:34"><if pos:start="24:13" pos:end="26:13">if<condition pos:start="24:15" pos:end="24:57">(<expr pos:start="24:16" pos:end="24:56"><name pos:start="24:16" pos:end="24:19"><name pos:start="24:16" pos:end="24:16">f</name><index pos:start="24:17" pos:end="24:19">[<expr pos:start="24:18" pos:end="24:18"><name pos:start="24:18" pos:end="24:18">i</name></expr>]</index></name><operator pos:start="24:20" pos:end="24:21">==</operator><literal type="string" pos:start="24:22" pos:end="24:26">"can"</literal><operator pos:start="24:27" pos:end="24:28">||</operator><name pos:start="24:29" pos:end="24:32"><name pos:start="24:29" pos:end="24:29">f</name><index pos:start="24:30" pos:end="24:32">[<expr pos:start="24:31" pos:end="24:31"><name pos:start="24:31" pos:end="24:31">i</name></expr>]</index></name><operator pos:start="24:33" pos:end="24:34">==</operator><literal type="string" pos:start="24:35" pos:end="24:41">"could"</literal><operator pos:start="24:42" pos:end="24:43">&amp;&amp;</operator><name pos:start="24:44" pos:end="24:49"><name pos:start="24:44" pos:end="24:44">f</name><index pos:start="24:45" pos:end="24:49">[<expr pos:start="24:46" pos:end="24:48"><name pos:start="24:46" pos:end="24:46">i</name><operator pos:start="24:47" pos:end="24:47">+</operator><literal type="number" pos:start="24:48" pos:end="24:48">1</literal></expr>]</index></name><operator pos:start="24:50" pos:end="24:51">==</operator><literal type="string" pos:start="24:52" pos:end="24:56">"you"</literal></expr>)</condition><block pos:start="24:58" pos:end="26:13">{<block_content pos:start="25:17" pos:end="25:38">
                <expr_stmt pos:start="25:17" pos:end="25:38"><expr pos:start="25:17" pos:end="25:37"><name pos:start="25:17" pos:end="25:20">cout</name><operator pos:start="25:21" pos:end="25:22">&lt;&lt;</operator><literal type="string" pos:start="25:23" pos:end="25:26">"I "</literal><operator pos:start="25:27" pos:end="25:28">&lt;&lt;</operator><name pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:29">f</name><index pos:start="25:30" pos:end="25:32">[<expr pos:start="25:31" pos:end="25:31"><name pos:start="25:31" pos:end="25:31">i</name></expr>]</index></name><operator pos:start="25:33" pos:end="25:34">&lt;&lt;</operator><literal type="string" pos:start="25:35" pos:end="25:37">" "</literal></expr>;</expr_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="27:13" pos:end="29:13">else if<condition pos:start="27:20" pos:end="27:42">(<expr pos:start="27:21" pos:end="27:41"><name pos:start="27:21" pos:end="27:24"><name pos:start="27:21" pos:end="27:21">f</name><index pos:start="27:22" pos:end="27:24">[<expr pos:start="27:23" pos:end="27:23"><name pos:start="27:23" pos:end="27:23">i</name></expr>]</index></name><operator pos:start="27:25" pos:end="27:26">==</operator><literal type="string" pos:start="27:27" pos:end="27:29">"I"</literal><operator pos:start="27:30" pos:end="27:31">||</operator><name pos:start="27:32" pos:end="27:35"><name pos:start="27:32" pos:end="27:32">f</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">i</name></expr>]</index></name><operator pos:start="27:36" pos:end="27:37">==</operator><literal type="string" pos:start="27:38" pos:end="27:41">"me"</literal></expr>)</condition><block pos:start="27:43" pos:end="29:13">{<block_content pos:start="28:17" pos:end="28:29">
                <expr_stmt pos:start="28:17" pos:end="28:29"><expr pos:start="28:17" pos:end="28:28"><name pos:start="28:17" pos:end="28:20">cout</name><operator pos:start="28:21" pos:end="28:22">&lt;&lt;</operator><literal type="string" pos:start="28:23" pos:end="28:28">"you "</literal></expr>;</expr_stmt>
            </block_content>}</block></if><else pos:start="29:14" pos:end="29:34">else<block type="pseudo" pos:start="29:19" pos:end="29:34"><block_content pos:start="29:19" pos:end="29:34"> <expr_stmt pos:start="29:19" pos:end="29:34"><expr pos:start="29:19" pos:end="29:33"><name pos:start="29:19" pos:end="29:22">cout</name><operator pos:start="29:23" pos:end="29:24">&lt;&lt;</operator><name pos:start="29:25" pos:end="29:28"><name pos:start="29:25" pos:end="29:25">f</name><index pos:start="29:26" pos:end="29:28">[<expr pos:start="29:27" pos:end="29:27"><name pos:start="29:27" pos:end="29:27">i</name></expr>]</index></name><operator pos:start="29:29" pos:end="29:30">&lt;&lt;</operator><literal type="string" pos:start="29:31" pos:end="29:33">" "</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="31:9" pos:end="31:19"><expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:12">cout</name><operator pos:start="31:13" pos:end="31:14">&lt;&lt;</operator><name pos:start="31:15" pos:end="31:18">endl</name></expr>;</expr_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>
</unit>
