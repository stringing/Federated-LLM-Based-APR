<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1180/1180.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:26"><decl pos:start="3:1" pos:end="3:19"><type pos:start="3:1" pos:end="3:9"><name pos:start="3:1" pos:end="3:4">long</name> <name pos:start="3:6" pos:end="3:9">long</name></type> <name pos:start="3:11" pos:end="3:19"><name pos:start="3:11" pos:end="3:11">a</name><index pos:start="3:12" pos:end="3:19">[<expr pos:start="3:13" pos:end="3:18"><literal type="number" pos:start="3:13" pos:end="3:18">100005</literal></expr>]</index></name></decl>,<decl pos:start="3:21" pos:end="3:25"><type ref="prev" pos:start="3:1" pos:end="3:9"/><name pos:start="3:21" pos:end="3:23">sum</name><init pos:start="3:24" pos:end="3:25">=<expr pos:start="3:25" pos:end="3:25"><literal type="number" pos:start="3:25" pos:end="3:25">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="23:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="23:1">{<block_content pos:start="5:5" pos:end="22:11">
    <expr_stmt pos:start="5:5" pos:end="5:34"><expr pos:start="5:5" pos:end="5:33"><call pos:start="5:5" pos:end="5:33"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:33">(<argument pos:start="5:13" pos:end="5:20"><expr pos:start="5:13" pos:end="5:20"><literal type="string" pos:start="5:13" pos:end="5:20">"zip.in"</literal></expr></argument>, <argument pos:start="5:23" pos:end="5:25"><expr pos:start="5:23" pos:end="5:25"><literal type="string" pos:start="5:23" pos:end="5:25">"r"</literal></expr></argument>, <argument pos:start="5:28" pos:end="5:32"><expr pos:start="5:28" pos:end="5:32"><name pos:start="5:28" pos:end="5:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:36"><expr pos:start="6:5" pos:end="6:35"><call pos:start="6:5" pos:end="6:35"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:35">(<argument pos:start="6:13" pos:end="6:21"><expr pos:start="6:13" pos:end="6:21"><literal type="string" pos:start="6:13" pos:end="6:21">"zip.out"</literal></expr></argument>, <argument pos:start="6:24" pos:end="6:26"><expr pos:start="6:24" pos:end="6:26"><literal type="string" pos:start="6:24" pos:end="6:26">"w"</literal></expr></argument>, <argument pos:start="6:29" pos:end="6:34"><expr pos:start="6:29" pos:end="6:34"><name pos:start="6:29" pos:end="6:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>;</decl_stmt>
  <expr_stmt pos:start="8:3" pos:end="8:9"><expr pos:start="8:3" pos:end="8:8"><name pos:start="8:3" pos:end="8:5">cin</name><operator pos:start="8:6" pos:end="8:7">&gt;&gt;</operator><name pos:start="8:8" pos:end="8:8">n</name></expr>;</expr_stmt>
  <for pos:start="9:3" pos:end="12:3">for<control pos:start="9:6" pos:end="9:23">(<init pos:start="9:7" pos:end="9:14"><decl pos:start="9:7" pos:end="9:13"><type pos:start="9:7" pos:end="9:9"><name pos:start="9:7" pos:end="9:9">int</name></type> <name pos:start="9:11" pos:end="9:11">i</name><init pos:start="9:12" pos:end="9:13">=<expr pos:start="9:13" pos:end="9:13"><literal type="number" pos:start="9:13" pos:end="9:13">1</literal></expr></init></decl>;</init><condition pos:start="9:15" pos:end="9:19"><expr pos:start="9:15" pos:end="9:18"><name pos:start="9:15" pos:end="9:15">i</name><operator pos:start="9:16" pos:end="9:17">&lt;=</operator><name pos:start="9:18" pos:end="9:18">n</name></expr>;</condition><incr pos:start="9:20" pos:end="9:22"><expr pos:start="9:20" pos:end="9:22"><name pos:start="9:20" pos:end="9:20">i</name><operator pos:start="9:21" pos:end="9:22">++</operator></expr></incr>)</control>
  <block pos:start="10:3" pos:end="12:3">{<block_content pos:start="11:5" pos:end="11:14">
    <expr_stmt pos:start="11:5" pos:end="11:14"><expr pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:7">cin</name><operator pos:start="11:8" pos:end="11:9">&gt;&gt;</operator><name pos:start="11:10" pos:end="11:13"><name pos:start="11:10" pos:end="11:10">a</name><index pos:start="11:11" pos:end="11:13">[<expr pos:start="11:12" pos:end="11:12"><name pos:start="11:12" pos:end="11:12">i</name></expr>]</index></name></expr>;</expr_stmt>
  </block_content>}</block></for><expr_stmt pos:start="12:4" pos:end="12:19"><expr pos:start="12:4" pos:end="12:18"><call pos:start="12:4" pos:end="12:18"><name pos:start="12:4" pos:end="12:7">sort</name><argument_list pos:start="12:8" pos:end="12:18">(<argument pos:start="12:9" pos:end="12:11"><expr pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:9">a</name><operator pos:start="12:10" pos:end="12:10">+</operator><literal type="number" pos:start="12:11" pos:end="12:11">1</literal></expr></argument>,<argument pos:start="12:13" pos:end="12:17"><expr pos:start="12:13" pos:end="12:17"><name pos:start="12:13" pos:end="12:13">a</name><operator pos:start="12:14" pos:end="12:14">+</operator><literal type="number" pos:start="12:15" pos:end="12:16">1</literal><operator pos:start="12:16" pos:end="12:16">+</operator><name pos:start="12:17" pos:end="12:17">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt pos:start="13:3" pos:end="13:20"><decl pos:start="13:3" pos:end="13:19"><type pos:start="13:3" pos:end="13:11"><name pos:start="13:3" pos:end="13:6">long</name> <name pos:start="13:8" pos:end="13:11">long</name></type> <name pos:start="13:13" pos:end="13:17">floor</name><init pos:start="13:18" pos:end="13:19">=<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr></init></decl>;</decl_stmt>
  <for pos:start="14:3" pos:end="20:3">for<control pos:start="14:6" pos:end="14:23">(<init pos:start="14:7" pos:end="14:14"><decl pos:start="14:7" pos:end="14:13"><type pos:start="14:7" pos:end="14:9"><name pos:start="14:7" pos:end="14:9">int</name></type> <name pos:start="14:11" pos:end="14:11">i</name><init pos:start="14:12" pos:end="14:13">=<expr pos:start="14:13" pos:end="14:13"><literal type="number" pos:start="14:13" pos:end="14:13">1</literal></expr></init></decl>;</init><condition pos:start="14:15" pos:end="14:19"><expr pos:start="14:15" pos:end="14:18"><name pos:start="14:15" pos:end="14:15">i</name><operator pos:start="14:16" pos:end="14:17">&lt;=</operator><name pos:start="14:18" pos:end="14:18">n</name></expr>;</condition><incr pos:start="14:20" pos:end="14:22"><expr pos:start="14:20" pos:end="14:22"><name pos:start="14:20" pos:end="14:20">i</name><operator pos:start="14:21" pos:end="14:22">++</operator></expr></incr>)</control>
  <block pos:start="15:3" pos:end="20:3">{<block_content pos:start="16:5" pos:end="19:15">
    <if_stmt pos:start="16:5" pos:end="16:40"><if pos:start="16:5" pos:end="16:40">if<condition pos:start="16:7" pos:end="16:18">(<expr pos:start="16:8" pos:end="16:17"><name pos:start="16:8" pos:end="16:11"><name pos:start="16:8" pos:end="16:8">a</name><index pos:start="16:9" pos:end="16:11">[<expr pos:start="16:10" pos:end="16:10"><name pos:start="16:10" pos:end="16:10">i</name></expr>]</index></name><operator pos:start="16:12" pos:end="16:12">&gt;</operator><name pos:start="16:13" pos:end="16:17">floor</name></expr>)</condition><block type="pseudo" pos:start="16:19" pos:end="16:40"><block_content pos:start="16:19" pos:end="16:40"><expr_stmt pos:start="16:19" pos:end="16:40"><expr pos:start="16:19" pos:end="16:39"><name pos:start="16:19" pos:end="16:21">sum</name><operator pos:start="16:22" pos:end="16:23">+=</operator><operator pos:start="16:24" pos:end="16:24">(</operator><name pos:start="16:25" pos:end="16:28"><name pos:start="16:25" pos:end="16:25">a</name><index pos:start="16:26" pos:end="16:28">[<expr pos:start="16:27" pos:end="16:27"><name pos:start="16:27" pos:end="16:27">i</name></expr>]</index></name><operator pos:start="16:29" pos:end="16:29">-</operator><name pos:start="16:30" pos:end="16:34">floor</name><operator pos:start="16:35" pos:end="16:35">)</operator><operator pos:start="16:36" pos:end="16:36">*</operator><literal type="number" pos:start="16:37" pos:end="16:38">5</literal><operator pos:start="16:38" pos:end="16:38">+</operator><literal type="number" pos:start="16:39" pos:end="16:39">5</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    
    <if_stmt pos:start="18:5" pos:end="18:26"><if pos:start="18:5" pos:end="18:26">if<condition pos:start="18:7" pos:end="18:19">(<expr pos:start="18:8" pos:end="18:18"><name pos:start="18:8" pos:end="18:11"><name pos:start="18:8" pos:end="18:8">a</name><index pos:start="18:9" pos:end="18:11">[<expr pos:start="18:10" pos:end="18:10"><name pos:start="18:10" pos:end="18:10">i</name></expr>]</index></name><operator pos:start="18:12" pos:end="18:13">==</operator><name pos:start="18:14" pos:end="18:18">floor</name></expr>)</condition><block type="pseudo" pos:start="18:20" pos:end="18:26"><block_content pos:start="18:20" pos:end="18:26"><expr_stmt pos:start="18:20" pos:end="18:26"><expr pos:start="18:20" pos:end="18:25"><name pos:start="18:20" pos:end="18:22">sum</name><operator pos:start="18:23" pos:end="18:24">+=</operator><literal type="number" pos:start="18:25" pos:end="18:25">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:15"><expr pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:9">floor</name><operator pos:start="19:10" pos:end="19:10">=</operator><name pos:start="19:11" pos:end="19:14"><name pos:start="19:11" pos:end="19:11">a</name><index pos:start="19:12" pos:end="19:14">[<expr pos:start="19:13" pos:end="19:13"><name pos:start="19:13" pos:end="19:13">i</name></expr>]</index></name></expr>;</expr_stmt>
  </block_content>}</block></for><expr_stmt pos:start="20:4" pos:end="20:16"><expr pos:start="20:4" pos:end="20:15"><name pos:start="20:4" pos:end="20:6">sum</name><operator pos:start="20:7" pos:end="20:8">+=</operator><name pos:start="20:9" pos:end="20:13">floor</name><operator pos:start="20:14" pos:end="20:14">*</operator><literal type="number" pos:start="20:15" pos:end="20:15">4</literal></expr>;</expr_stmt>
  <expr_stmt pos:start="21:3" pos:end="21:12"><expr pos:start="21:3" pos:end="21:11"><name pos:start="21:3" pos:end="21:6">cout</name><operator pos:start="21:7" pos:end="21:8">&lt;&lt;</operator><name pos:start="21:9" pos:end="21:11">sum</name></expr>;</expr_stmt>
  <return pos:start="22:3" pos:end="22:11">return <expr pos:start="22:10" pos:end="22:10"><literal type="number" pos:start="22:10" pos:end="22:10">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
