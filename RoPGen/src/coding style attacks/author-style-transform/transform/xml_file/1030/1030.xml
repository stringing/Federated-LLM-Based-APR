<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1030/1030.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<struct pos:start="3:1" pos:end="6:2">struct <name pos:start="3:8" pos:end="3:8">q</name><block pos:start="3:9" pos:end="6:1">{<public type="default" pos:start="4:5" pos:end="5:10">
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">x</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">y</name></decl>;</decl_stmt>
</public>}</block>;</struct>
<decl_stmt pos:start="7:1" pos:end="7:36"><decl pos:start="7:1" pos:end="7:5"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:5">n</name></decl>,<decl pos:start="7:7" pos:end="7:21"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:7" pos:end="7:9">ans</name><init pos:start="7:10" pos:end="7:21">=<expr pos:start="7:11" pos:end="7:21"><call pos:start="7:11" pos:end="7:19"><name pos:start="7:11" pos:end="7:13">pow</name><argument_list pos:start="7:14" pos:end="7:19">(<argument pos:start="7:15" pos:end="7:16"><expr pos:start="7:15" pos:end="7:16"><literal type="number" pos:start="7:15" pos:end="7:16">10</literal></expr></argument>,<argument pos:start="7:18" pos:end="7:18"><expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">9</literal></expr></argument>)</argument_list></call><operator pos:start="7:20" pos:end="7:20">*</operator><literal type="number" pos:start="7:21" pos:end="7:21">2</literal></expr></init></decl>,<decl pos:start="7:23" pos:end="7:28"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:23" pos:end="7:26">sum1</name><init pos:start="7:27" pos:end="7:28">=<expr pos:start="7:28" pos:end="7:28"><literal type="number" pos:start="7:28" pos:end="7:28">1</literal></expr></init></decl>,<decl pos:start="7:30" pos:end="7:35"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:30" pos:end="7:33">sum2</name><init pos:start="7:34" pos:end="7:35">=<expr pos:start="7:35" pos:end="7:35"><literal type="number" pos:start="7:35" pos:end="7:35">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:8"><decl pos:start="8:1" pos:end="8:7"><type pos:start="8:1" pos:end="8:1"><name pos:start="8:1" pos:end="8:1">q</name></type> <name pos:start="8:3" pos:end="8:7"><name pos:start="8:3" pos:end="8:3">a</name><index pos:start="8:4" pos:end="8:7">[<expr pos:start="8:5" pos:end="8:6"><literal type="number" pos:start="8:5" pos:end="8:6">15</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="9:1" pos:end="20:1"><type pos:start="9:1" pos:end="9:4"><name pos:start="9:1" pos:end="9:4">void</name></type> <name pos:start="9:6" pos:end="9:8">dfs</name><parameter_list pos:start="9:9" pos:end="9:15">(<parameter pos:start="9:10" pos:end="9:14"><decl pos:start="9:10" pos:end="9:14"><type pos:start="9:10" pos:end="9:12"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:14">x</name></decl></parameter>)</parameter_list><block pos:start="9:16" pos:end="20:1">{<block_content pos:start="10:5" pos:end="19:17">
    <expr_stmt pos:start="10:5" pos:end="10:17"><expr pos:start="10:5" pos:end="10:16"><name pos:start="10:5" pos:end="10:8">sum1</name><operator pos:start="10:9" pos:end="10:10">*=</operator><name pos:start="10:11" pos:end="10:14"><name pos:start="10:11" pos:end="10:11">a</name><index pos:start="10:12" pos:end="10:14">[<expr pos:start="10:13" pos:end="10:13"><name pos:start="10:13" pos:end="10:13">x</name></expr>]</index></name><operator pos:start="10:15" pos:end="10:15">.</operator><name pos:start="10:16" pos:end="10:16">x</name></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:8">sum2</name><operator pos:start="11:9" pos:end="11:10">+=</operator><name pos:start="11:11" pos:end="11:14"><name pos:start="11:11" pos:end="11:11">a</name><index pos:start="11:12" pos:end="11:14">[<expr pos:start="11:13" pos:end="11:13"><name pos:start="11:13" pos:end="11:13">x</name></expr>]</index></name><operator pos:start="11:15" pos:end="11:15">.</operator><name pos:start="11:16" pos:end="11:16">y</name></expr>;</expr_stmt>
    <if_stmt pos:start="12:5" pos:end="14:5"><if pos:start="12:5" pos:end="14:5">if<condition pos:start="12:7" pos:end="12:12">(<expr pos:start="12:8" pos:end="12:11"><name pos:start="12:8" pos:end="12:8">x</name><operator pos:start="12:9" pos:end="12:10">!=</operator><literal type="number" pos:start="12:11" pos:end="12:11">0</literal></expr>)</condition><block pos:start="12:13" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:36">
        <expr_stmt pos:start="13:9" pos:end="13:36"><expr pos:start="13:9" pos:end="13:35"><name pos:start="13:9" pos:end="13:11">ans</name><operator pos:start="13:12" pos:end="13:12">=</operator><call pos:start="13:13" pos:end="13:35"><name pos:start="13:13" pos:end="13:15">min</name><argument_list pos:start="13:16" pos:end="13:35">(<argument pos:start="13:17" pos:end="13:30"><expr pos:start="13:17" pos:end="13:30"><call pos:start="13:17" pos:end="13:30"><name pos:start="13:17" pos:end="13:19">abs</name><argument_list pos:start="13:20" pos:end="13:30">(<argument pos:start="13:21" pos:end="13:29"><expr pos:start="13:21" pos:end="13:29"><name pos:start="13:21" pos:end="13:24">sum1</name><operator pos:start="13:25" pos:end="13:25">-</operator><name pos:start="13:26" pos:end="13:29">sum2</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:34">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <for pos:start="15:5" pos:end="17:5">for<control pos:start="15:8" pos:end="15:27">(<init pos:start="15:9" pos:end="15:18"><decl pos:start="15:9" pos:end="15:17"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">i</name><init pos:start="15:14" pos:end="15:17">=<expr pos:start="15:15" pos:end="15:17"><name pos:start="15:15" pos:end="15:15">x</name><operator pos:start="15:16" pos:end="15:16">+</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr></init></decl>;</init><condition pos:start="15:19" pos:end="15:23"><expr pos:start="15:19" pos:end="15:22"><name pos:start="15:19" pos:end="15:19">i</name><operator pos:start="15:20" pos:end="15:21">&lt;=</operator><name pos:start="15:22" pos:end="15:22">n</name></expr>;</condition><incr pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:24">i</name><operator pos:start="15:25" pos:end="15:26">++</operator></expr></incr>)</control><block pos:start="15:28" pos:end="17:5">{<block_content pos:start="16:9" pos:end="16:15">
        <expr_stmt pos:start="16:9" pos:end="16:15"><expr pos:start="16:9" pos:end="16:14"><call pos:start="16:9" pos:end="16:14"><name pos:start="16:9" pos:end="16:11">dfs</name><argument_list pos:start="16:12" pos:end="16:14">(<argument pos:start="16:13" pos:end="16:13"><expr pos:start="16:13" pos:end="16:13"><name pos:start="16:13" pos:end="16:13">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="18:5" pos:end="18:17"><expr pos:start="18:5" pos:end="18:16"><name pos:start="18:5" pos:end="18:8">sum1</name><operator pos:start="18:9" pos:end="18:10">/=</operator><name pos:start="18:11" pos:end="18:14"><name pos:start="18:11" pos:end="18:11">a</name><index pos:start="18:12" pos:end="18:14">[<expr pos:start="18:13" pos:end="18:13"><name pos:start="18:13" pos:end="18:13">x</name></expr>]</index></name><operator pos:start="18:15" pos:end="18:15">.</operator><name pos:start="18:16" pos:end="18:16">x</name></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:8">sum2</name><operator pos:start="19:9" pos:end="19:10">-=</operator><name pos:start="19:11" pos:end="19:14"><name pos:start="19:11" pos:end="19:11">a</name><index pos:start="19:12" pos:end="19:14">[<expr pos:start="19:13" pos:end="19:13"><name pos:start="19:13" pos:end="19:13">x</name></expr>]</index></name><operator pos:start="19:15" pos:end="19:15">.</operator><name pos:start="19:16" pos:end="19:16">y</name></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="21:1" pos:end="33:1"><type pos:start="21:1" pos:end="21:3"><name pos:start="21:1" pos:end="21:3">int</name></type> <name pos:start="21:5" pos:end="21:8">main</name><parameter_list pos:start="21:9" pos:end="21:10">()</parameter_list><block pos:start="21:11" pos:end="33:1">{<block_content pos:start="22:5" pos:end="32:13">
    <expr_stmt pos:start="22:5" pos:end="22:34"><expr pos:start="22:5" pos:end="22:33"><call pos:start="22:5" pos:end="22:33"><name pos:start="22:5" pos:end="22:11">freopen</name><argument_list pos:start="22:12" pos:end="22:33">(<argument pos:start="22:13" pos:end="22:22"><expr pos:start="22:13" pos:end="22:22"><literal type="string" pos:start="22:13" pos:end="22:22">"stone.in"</literal></expr></argument>,<argument pos:start="22:24" pos:end="22:26"><expr pos:start="22:24" pos:end="22:26"><literal type="string" pos:start="22:24" pos:end="22:26">"r"</literal></expr></argument>,<argument pos:start="22:28" pos:end="22:32"><expr pos:start="22:28" pos:end="22:32"><name pos:start="22:28" pos:end="22:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><call pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:11">freopen</name><argument_list pos:start="23:12" pos:end="23:34">(<argument pos:start="23:13" pos:end="23:23"><expr pos:start="23:13" pos:end="23:23"><literal type="string" pos:start="23:13" pos:end="23:23">"stone.out"</literal></expr></argument>,<argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><literal type="string" pos:start="23:25" pos:end="23:27">"w"</literal></expr></argument>,<argument pos:start="23:29" pos:end="23:33"><expr pos:start="23:29" pos:end="23:33"><name pos:start="23:29" pos:end="23:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:32"><expr pos:start="24:5" pos:end="24:31"><call pos:start="24:5" pos:end="24:31"><name pos:start="24:5" pos:end="24:24"><name pos:start="24:5" pos:end="24:7">ios</name><operator pos:start="24:8" pos:end="24:9">::</operator><name pos:start="24:10" pos:end="24:24">sync_with_stdio</name></name><argument_list pos:start="24:25" pos:end="24:31">(<argument pos:start="24:26" pos:end="24:30"><expr pos:start="24:26" pos:end="24:30"><literal type="boolean" pos:start="24:26" pos:end="24:30">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:11"><expr pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:7">cin</name><operator pos:start="25:8" pos:end="25:9">&gt;&gt;</operator><name pos:start="25:10" pos:end="25:10">n</name></expr>;</expr_stmt>
    <for pos:start="26:5" pos:end="28:5">for<control pos:start="26:8" pos:end="26:25">(<init pos:start="26:9" pos:end="26:16"><decl pos:start="26:9" pos:end="26:15"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:13">i</name><init pos:start="26:14" pos:end="26:15">=<expr pos:start="26:15" pos:end="26:15"><literal type="number" pos:start="26:15" pos:end="26:15">1</literal></expr></init></decl>;</init><condition pos:start="26:17" pos:end="26:21"><expr pos:start="26:17" pos:end="26:20"><name pos:start="26:17" pos:end="26:17">i</name><operator pos:start="26:18" pos:end="26:19">&lt;=</operator><name pos:start="26:20" pos:end="26:20">n</name></expr>;</condition><incr pos:start="26:22" pos:end="26:24"><expr pos:start="26:22" pos:end="26:24"><name pos:start="26:22" pos:end="26:22">i</name><operator pos:start="26:23" pos:end="26:24">++</operator></expr></incr>)</control><block pos:start="26:26" pos:end="28:5">{<block_content pos:start="27:9" pos:end="27:28">
        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:11">cin</name><operator pos:start="27:12" pos:end="27:13">&gt;&gt;</operator><name pos:start="27:14" pos:end="27:17"><name pos:start="27:14" pos:end="27:14">a</name><index pos:start="27:15" pos:end="27:17">[<expr pos:start="27:16" pos:end="27:16"><name pos:start="27:16" pos:end="27:16">i</name></expr>]</index></name><operator pos:start="27:18" pos:end="27:18">.</operator><name pos:start="27:19" pos:end="27:19">x</name><operator pos:start="27:20" pos:end="27:21">&gt;&gt;</operator><name pos:start="27:22" pos:end="27:25"><name pos:start="27:22" pos:end="27:22">a</name><index pos:start="27:23" pos:end="27:25">[<expr pos:start="27:24" pos:end="27:24"><name pos:start="27:24" pos:end="27:24">i</name></expr>]</index></name><operator pos:start="27:26" pos:end="27:26">.</operator><name pos:start="27:27" pos:end="27:27">y</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="29:5" pos:end="29:13"><expr pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:8"><name pos:start="29:5" pos:end="29:5">a</name><index pos:start="29:6" pos:end="29:8">[<expr pos:start="29:7" pos:end="29:7"><literal type="number" pos:start="29:7" pos:end="29:7">0</literal></expr>]</index></name><operator pos:start="29:9" pos:end="29:9">.</operator><name pos:start="29:10" pos:end="29:10">x</name><operator pos:start="29:11" pos:end="29:11">=</operator><literal type="number" pos:start="29:12" pos:end="29:12">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:11"><expr pos:start="30:5" pos:end="30:10"><call pos:start="30:5" pos:end="30:10"><name pos:start="30:5" pos:end="30:7">dfs</name><argument_list pos:start="30:8" pos:end="30:10">(<argument pos:start="30:9" pos:end="30:9"><expr pos:start="30:9" pos:end="30:9"><literal type="number" pos:start="30:9" pos:end="30:9">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:14"><expr pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:8">cout</name><operator pos:start="31:9" pos:end="31:10">&lt;&lt;</operator><name pos:start="31:11" pos:end="31:13">ans</name></expr>;</expr_stmt>
    <return pos:start="32:5" pos:end="32:13">return <expr pos:start="32:12" pos:end="32:12"><literal type="number" pos:start="32:12" pos:end="32:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
