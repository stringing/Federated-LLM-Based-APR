<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/510/510.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;vector&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>

<function pos:start="5:1" pos:end="41:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name> <parameter_list pos:start="5:10" pos:end="5:11">()</parameter_list>
<block pos:start="6:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="40:13">
    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><call pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:31">(<argument pos:start="7:13" pos:end="7:18"><expr pos:start="7:13" pos:end="7:18"><literal type="string" pos:start="7:13" pos:end="7:18">"p.in"</literal></expr></argument>, <argument pos:start="7:21" pos:end="7:23"><expr pos:start="7:21" pos:end="7:23"><literal type="string" pos:start="7:21" pos:end="7:23">"r"</literal></expr></argument>, <argument pos:start="7:26" pos:end="7:30"><expr pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:34"><expr pos:start="8:5" pos:end="8:33"><call pos:start="8:5" pos:end="8:33"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:33">(<argument pos:start="8:13" pos:end="8:19"><expr pos:start="8:13" pos:end="8:19"><literal type="string" pos:start="8:13" pos:end="8:19">"p.out"</literal></expr></argument>, <argument pos:start="8:22" pos:end="8:24"><expr pos:start="8:22" pos:end="8:24"><literal type="string" pos:start="8:22" pos:end="8:24">"w"</literal></expr></argument>, <argument pos:start="8:27" pos:end="8:32"><expr pos:start="8:27" pos:end="8:32"><name pos:start="8:27" pos:end="8:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:13"><expr pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:7">cin</name> <operator pos:start="10:9" pos:end="10:10">&gt;&gt;</operator> <name pos:start="10:12" pos:end="10:12">t</name></expr>;</expr_stmt>
    <while pos:start="11:5" pos:end="39:5">while <condition pos:start="11:11" pos:end="11:15">(<expr pos:start="11:12" pos:end="11:14"><name pos:start="11:12" pos:end="11:12">t</name><operator pos:start="11:13" pos:end="11:14">--</operator></expr>)</condition>
    <block pos:start="12:5" pos:end="39:5">{<block_content pos:start="13:9" pos:end="38:28">
        <decl_stmt pos:start="13:9" pos:end="13:34"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">n</name></decl>, <decl pos:start="13:16" pos:end="13:33"><type ref="prev" pos:start="13:9" pos:end="13:11"/><name pos:start="13:16" pos:end="13:28"><name pos:start="13:16" pos:end="13:16">G</name><index pos:start="13:17" pos:end="13:22">[<expr pos:start="13:18" pos:end="13:21"><literal type="number" pos:start="13:18" pos:end="13:21">1005</literal></expr>]</index><index pos:start="13:23" pos:end="13:28">[<expr pos:start="13:24" pos:end="13:27"><literal type="number" pos:start="13:24" pos:end="13:27">1005</literal></expr>]</index></name> <init pos:start="13:30" pos:end="13:33">= <expr pos:start="13:32" pos:end="13:33"><block pos:start="13:32" pos:end="13:33">{}</block></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:17"><expr pos:start="14:9" pos:end="14:16"><name pos:start="14:9" pos:end="14:11">cin</name> <operator pos:start="14:13" pos:end="14:14">&gt;&gt;</operator> <name pos:start="14:16" pos:end="14:16">n</name></expr>;</expr_stmt>
        <for pos:start="15:9" pos:end="20:9">for <control pos:start="15:13" pos:end="15:35">(<init pos:start="15:14" pos:end="15:23"><decl pos:start="15:14" pos:end="15:22"><type pos:start="15:14" pos:end="15:16"><name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:18">i</name> <init pos:start="15:20" pos:end="15:22">= <expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">1</literal></expr></init></decl>;</init> <condition pos:start="15:25" pos:end="15:30"><expr pos:start="15:25" pos:end="15:29"><name pos:start="15:25" pos:end="15:25">i</name> <operator pos:start="15:27" pos:end="15:27">&lt;</operator> <name pos:start="15:29" pos:end="15:29">n</name></expr>;</condition> <incr pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:32">i</name><operator pos:start="15:33" pos:end="15:34">++</operator></expr></incr>)</control>
        <block pos:start="16:9" pos:end="20:9">{<block_content pos:start="17:13" pos:end="19:24">
            <decl_stmt pos:start="17:13" pos:end="17:21"><decl pos:start="17:13" pos:end="17:17"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:17">x</name></decl>, <decl pos:start="17:20" pos:end="17:20"><type ref="prev" pos:start="17:13" pos:end="17:15"/><name pos:start="17:20" pos:end="17:20">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:26"><expr pos:start="18:13" pos:end="18:25"><name pos:start="18:13" pos:end="18:15">cin</name> <operator pos:start="18:17" pos:end="18:18">&gt;&gt;</operator> <name pos:start="18:20" pos:end="18:20">x</name> <operator pos:start="18:22" pos:end="18:23">&gt;&gt;</operator> <name pos:start="18:25" pos:end="18:25">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:24"><expr pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:13">G</name><index pos:start="19:14" pos:end="19:16">[<expr pos:start="19:15" pos:end="19:15"><name pos:start="19:15" pos:end="19:15">x</name></expr>]</index><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><name pos:start="19:18" pos:end="19:18">y</name></expr>]</index></name> <operator pos:start="19:21" pos:end="19:21">=</operator> <literal type="number" pos:start="19:23" pos:end="19:23">1</literal></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="21:9" pos:end="21:20"><decl pos:start="21:9" pos:end="21:19"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:15">sum</name> <init pos:start="21:17" pos:end="21:19">= <expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="22:9" pos:end="37:9">for <control pos:start="22:13" pos:end="22:36">(<init pos:start="22:14" pos:end="22:23"><decl pos:start="22:14" pos:end="22:22"><type pos:start="22:14" pos:end="22:16"><name pos:start="22:14" pos:end="22:16">int</name></type> <name pos:start="22:18" pos:end="22:18">i</name> <init pos:start="22:20" pos:end="22:22">= <expr pos:start="22:22" pos:end="22:22"><literal type="number" pos:start="22:22" pos:end="22:22">1</literal></expr></init></decl>;</init> <condition pos:start="22:25" pos:end="22:31"><expr pos:start="22:25" pos:end="22:30"><name pos:start="22:25" pos:end="22:25">i</name> <operator pos:start="22:27" pos:end="22:28">&lt;=</operator> <name pos:start="22:30" pos:end="22:30">n</name></expr>;</condition> <incr pos:start="22:33" pos:end="22:35"><expr pos:start="22:33" pos:end="22:35"><name pos:start="22:33" pos:end="22:33">i</name><operator pos:start="22:34" pos:end="22:35">++</operator></expr></incr>)</control>
        <block pos:start="23:9" pos:end="37:9">{<block_content pos:start="24:13" pos:end="36:34">
            <decl_stmt pos:start="24:13" pos:end="24:37"><decl pos:start="24:13" pos:end="24:25"><type pos:start="24:13" pos:end="24:15"><name pos:start="24:13" pos:end="24:15">int</name></type> <name pos:start="24:17" pos:end="24:21">flag1</name> <init pos:start="24:23" pos:end="24:25">= <expr pos:start="24:25" pos:end="24:25"><literal type="number" pos:start="24:25" pos:end="24:25">0</literal></expr></init></decl>, <decl pos:start="24:28" pos:end="24:36"><type ref="prev" pos:start="24:13" pos:end="24:15"/><name pos:start="24:28" pos:end="24:32">flag2</name> <init pos:start="24:34" pos:end="24:36">= <expr pos:start="24:36" pos:end="24:36"><literal type="number" pos:start="24:36" pos:end="24:36">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="25:13" pos:end="35:13">for <control pos:start="25:17" pos:end="25:40">(<init pos:start="25:18" pos:end="25:27"><decl pos:start="25:18" pos:end="25:26"><type pos:start="25:18" pos:end="25:20"><name pos:start="25:18" pos:end="25:20">int</name></type> <name pos:start="25:22" pos:end="25:22">j</name> <init pos:start="25:24" pos:end="25:26">= <expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">1</literal></expr></init></decl>;</init> <condition pos:start="25:29" pos:end="25:35"><expr pos:start="25:29" pos:end="25:34"><name pos:start="25:29" pos:end="25:29">j</name> <operator pos:start="25:31" pos:end="25:32">&lt;=</operator> <name pos:start="25:34" pos:end="25:34">n</name></expr>;</condition> <incr pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:37">j</name><operator pos:start="25:38" pos:end="25:39">++</operator></expr></incr>)</control>
            <block pos:start="26:13" pos:end="35:13">{<block_content pos:start="27:17" pos:end="34:17">
                <if_stmt pos:start="27:17" pos:end="30:17"><if pos:start="27:17" pos:end="30:17">if <condition pos:start="27:20" pos:end="27:28">(<expr pos:start="27:21" pos:end="27:27"><name pos:start="27:21" pos:end="27:27"><name pos:start="27:21" pos:end="27:21">G</name><index pos:start="27:22" pos:end="27:24">[<expr pos:start="27:23" pos:end="27:23"><name pos:start="27:23" pos:end="27:23">i</name></expr>]</index><index pos:start="27:25" pos:end="27:27">[<expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">j</name></expr>]</index></name></expr>)</condition>
                <block pos:start="28:17" pos:end="30:17">{<block_content pos:start="29:21" pos:end="29:30">
                    <expr_stmt pos:start="29:21" pos:end="29:30"><expr pos:start="29:21" pos:end="29:29"><name pos:start="29:21" pos:end="29:25">flag1</name> <operator pos:start="29:27" pos:end="29:27">=</operator> <literal type="number" pos:start="29:29" pos:end="29:29">1</literal></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt pos:start="31:17" pos:end="34:17"><if pos:start="31:17" pos:end="34:17">if <condition pos:start="31:20" pos:end="31:28">(<expr pos:start="31:21" pos:end="31:27"><name pos:start="31:21" pos:end="31:27"><name pos:start="31:21" pos:end="31:21">G</name><index pos:start="31:22" pos:end="31:24">[<expr pos:start="31:23" pos:end="31:23"><name pos:start="31:23" pos:end="31:23">j</name></expr>]</index><index pos:start="31:25" pos:end="31:27">[<expr pos:start="31:26" pos:end="31:26"><name pos:start="31:26" pos:end="31:26">i</name></expr>]</index></name></expr>)</condition>
                <block pos:start="32:17" pos:end="34:17">{<block_content pos:start="33:21" pos:end="33:30">
                    <expr_stmt pos:start="33:21" pos:end="33:30"><expr pos:start="33:21" pos:end="33:29"><name pos:start="33:21" pos:end="33:25">flag2</name> <operator pos:start="33:27" pos:end="33:27">=</operator> <literal type="number" pos:start="33:29" pos:end="33:29">1</literal></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="36:13" pos:end="36:34"><expr pos:start="36:13" pos:end="36:33"><name pos:start="36:13" pos:end="36:15">sum</name> <operator pos:start="36:17" pos:end="36:18">+=</operator> <name pos:start="36:20" pos:end="36:24">flag1</name> <operator pos:start="36:26" pos:end="36:27">&amp;&amp;</operator> <name pos:start="36:29" pos:end="36:33">flag2</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="38:9" pos:end="38:28"><expr pos:start="38:9" pos:end="38:27"><name pos:start="38:9" pos:end="38:12">cout</name> <operator pos:start="38:14" pos:end="38:15">&lt;&lt;</operator> <name pos:start="38:17" pos:end="38:19">sum</name> <operator pos:start="38:21" pos:end="38:22">&lt;&lt;</operator> <name pos:start="38:24" pos:end="38:27">endl</name></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="40:5" pos:end="40:13">return <expr pos:start="40:12" pos:end="40:12"><literal type="number" pos:start="40:12" pos:end="40:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
