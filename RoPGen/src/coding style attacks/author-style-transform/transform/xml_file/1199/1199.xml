<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1199/1199.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="27:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="27:1">{<block_content pos:start="5:5" pos:end="26:13">
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:12">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:20"><expr pos:start="6:5" pos:end="6:19"><call pos:start="6:5" pos:end="6:19"><name pos:start="6:5" pos:end="6:11">getline</name><argument_list pos:start="6:12" pos:end="6:19">(<argument pos:start="6:13" pos:end="6:15"><expr pos:start="6:13" pos:end="6:15"><name pos:start="6:13" pos:end="6:15">cin</name></expr></argument>, <argument pos:start="6:18" pos:end="6:18"><expr pos:start="6:18" pos:end="6:18"><name pos:start="6:18" pos:end="6:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">cnt</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>, <decl pos:start="7:18" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:20">ans</name> <init pos:start="7:22" pos:end="7:24">= <expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr></init></decl>, <decl pos:start="7:27" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:29">arr</name> <init pos:start="7:31" pos:end="7:33">= <expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="8:5" pos:end="18:13">for <control pos:start="8:9" pos:end="8:38">(<init pos:start="8:10" pos:end="8:19"><decl pos:start="8:10" pos:end="8:18"><type pos:start="8:10" pos:end="8:12"><name pos:start="8:10" pos:end="8:12">int</name></type> <name pos:start="8:14" pos:end="8:14">i</name> <init pos:start="8:16" pos:end="8:18">= <expr pos:start="8:18" pos:end="8:18"><literal type="number" pos:start="8:18" pos:end="8:18">0</literal></expr></init></decl>;</init> <condition pos:start="8:21" pos:end="8:33"><expr pos:start="8:21" pos:end="8:32"><name pos:start="8:21" pos:end="8:21">i</name> <operator pos:start="8:23" pos:end="8:23">&lt;</operator> <call pos:start="8:25" pos:end="8:32"><name pos:start="8:25" pos:end="8:30"><name pos:start="8:25" pos:end="8:25">s</name><operator pos:start="8:26" pos:end="8:26">.</operator><name pos:start="8:27" pos:end="8:30">size</name></name><argument_list pos:start="8:31" pos:end="8:32">()</argument_list></call></expr>;</condition> <incr pos:start="8:35" pos:end="8:37"><expr pos:start="8:35" pos:end="8:37"><name pos:start="8:35" pos:end="8:35">i</name><operator pos:start="8:36" pos:end="8:37">++</operator></expr></incr>)</control><block pos:start="8:39" pos:end="18:13">{<block_content pos:start="9:9" pos:end="17:9"> 
        <if_stmt pos:start="9:9" pos:end="17:9"><if pos:start="9:9" pos:end="15:9">if <condition pos:start="9:12" pos:end="9:24">(<expr pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:16"><name pos:start="9:13" pos:end="9:13">s</name><index pos:start="9:14" pos:end="9:16">[<expr pos:start="9:15" pos:end="9:15"><name pos:start="9:15" pos:end="9:15">i</name></expr>]</index></name> <operator pos:start="9:18" pos:end="9:19">==</operator> <literal type="char" pos:start="9:21" pos:end="9:23">' '</literal></expr>)</condition><block pos:start="9:25" pos:end="15:9">{<block_content pos:start="10:13" pos:end="14:20">
            <if_stmt pos:start="10:13" pos:end="13:13"><if pos:start="10:13" pos:end="13:13">if <condition pos:start="10:16" pos:end="10:26">(<expr pos:start="10:17" pos:end="10:25"><name pos:start="10:17" pos:end="10:19">cnt</name> <operator pos:start="10:21" pos:end="10:21">&gt;</operator> <name pos:start="10:23" pos:end="10:25">ans</name></expr>)</condition><block pos:start="10:27" pos:end="13:13">{<block_content pos:start="11:13" pos:end="12:30">
            <expr_stmt pos:start="11:13" pos:end="11:22"><expr pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:15">ans</name> <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:21">cnt</name></expr>;</expr_stmt>
            <expr_stmt pos:start="12:13" pos:end="12:30"><expr pos:start="12:13" pos:end="12:29"><name pos:start="12:13" pos:end="12:15">arr</name> <operator pos:start="12:17" pos:end="12:17">=</operator> <name pos:start="12:19" pos:end="12:19">i</name> <operator pos:start="12:21" pos:end="12:21">-</operator> <name pos:start="12:23" pos:end="12:25">ans</name> <operator pos:start="12:27" pos:end="12:27">-</operator> <literal type="number" pos:start="12:29" pos:end="12:29">1</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:20"><expr pos:start="14:13" pos:end="14:19"><name pos:start="14:13" pos:end="14:15">cnt</name> <operator pos:start="14:17" pos:end="14:17">=</operator> <literal type="number" pos:start="14:19" pos:end="14:19">0</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="15:11" pos:end="17:9">else <block pos:start="15:16" pos:end="17:9">{<block_content pos:start="16:13" pos:end="16:18">
            <expr_stmt pos:start="16:13" pos:end="16:18"><expr pos:start="16:13" pos:end="16:17"><name pos:start="16:13" pos:end="16:15">cnt</name><operator pos:start="16:16" pos:end="16:17">++</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
            </block_content>}</block></for>
    <if_stmt pos:start="19:5" pos:end="22:5"><if pos:start="19:5" pos:end="22:5">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:11">cnt</name> <operator pos:start="19:13" pos:end="19:13">&gt;</operator> <name pos:start="19:15" pos:end="19:17">ans</name></expr>)</condition><block pos:start="19:19" pos:end="22:5">{<block_content pos:start="20:9" pos:end="21:33">
        <expr_stmt pos:start="20:9" pos:end="20:18"><expr pos:start="20:9" pos:end="20:17"><name pos:start="20:9" pos:end="20:11">ans</name> <operator pos:start="20:13" pos:end="20:13">=</operator> <name pos:start="20:15" pos:end="20:17">cnt</name></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:11">arr</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:22"><name pos:start="21:15" pos:end="21:20"><name pos:start="21:15" pos:end="21:15">s</name><operator pos:start="21:16" pos:end="21:16">.</operator><name pos:start="21:17" pos:end="21:20">size</name></name><argument_list pos:start="21:21" pos:end="21:22">()</argument_list></call> <operator pos:start="21:24" pos:end="21:24">-</operator> <name pos:start="21:26" pos:end="21:28">ans</name> <operator pos:start="21:30" pos:end="21:30">-</operator> <literal type="number" pos:start="21:32" pos:end="21:32">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <for pos:start="23:5" pos:end="25:5">for <control pos:start="23:9" pos:end="23:45">(<init pos:start="23:10" pos:end="23:21"><decl pos:start="23:10" pos:end="23:20"><type pos:start="23:10" pos:end="23:12"><name pos:start="23:10" pos:end="23:12">int</name></type> <name pos:start="23:14" pos:end="23:14">i</name> <init pos:start="23:16" pos:end="23:20">= <expr pos:start="23:18" pos:end="23:20"><name pos:start="23:18" pos:end="23:20">arr</name></expr></init></decl>;</init> <condition pos:start="23:23" pos:end="23:40"><expr pos:start="23:23" pos:end="23:39"><name pos:start="23:23" pos:end="23:23">i</name> <operator pos:start="23:25" pos:end="23:25">&lt;</operator> <name pos:start="23:27" pos:end="23:29">ans</name> <operator pos:start="23:31" pos:end="23:31">+</operator> <name pos:start="23:33" pos:end="23:35">arr</name> <operator pos:start="23:37" pos:end="23:37">+</operator> <literal type="number" pos:start="23:39" pos:end="23:39">1</literal></expr>;</condition> <incr pos:start="23:42" pos:end="23:44"><expr pos:start="23:42" pos:end="23:44"><name pos:start="23:42" pos:end="23:42">i</name><operator pos:start="23:43" pos:end="23:44">++</operator></expr></incr>)</control><block pos:start="23:46" pos:end="25:5">{<block_content pos:start="24:10" pos:end="24:22">
         <expr_stmt pos:start="24:10" pos:end="24:22"><expr pos:start="24:10" pos:end="24:21"><name pos:start="24:10" pos:end="24:13">cout</name> <operator pos:start="24:15" pos:end="24:16">&lt;&lt;</operator> <name pos:start="24:18" pos:end="24:21"><name pos:start="24:18" pos:end="24:18">s</name><index pos:start="24:19" pos:end="24:21">[<expr pos:start="24:20" pos:end="24:20"><name pos:start="24:20" pos:end="24:20">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="26:5" pos:end="26:13">return <expr pos:start="26:12" pos:end="26:12"><literal type="number" pos:start="26:12" pos:end="26:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
