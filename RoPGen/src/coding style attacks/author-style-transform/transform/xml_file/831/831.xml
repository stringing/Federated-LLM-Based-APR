<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/831/831.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:7">define</cpp:directive> <cpp:macro pos:start="2:9" pos:end="2:10"><name pos:start="2:9" pos:end="2:10">ll</name></cpp:macro> <cpp:value pos:start="2:12" pos:end="2:20">long long</cpp:value></cpp:define>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:9"><decl pos:start="4:1" pos:end="4:8"><type pos:start="4:1" pos:end="4:6"><name pos:start="4:1" pos:end="4:6">string</name></type> <name pos:start="4:8" pos:end="4:8">a</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:14"><decl pos:start="5:1" pos:end="5:7"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:7">len</name></decl>,<decl pos:start="5:9" pos:end="5:9"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:9" pos:end="5:9">f</name></decl>,<decl pos:start="5:11" pos:end="5:11"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:11" pos:end="5:11">x</name></decl>,<decl pos:start="5:13" pos:end="5:13"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:13" pos:end="5:13">p</name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:15"><decl pos:start="6:1" pos:end="6:14"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">char</name></type> <name pos:start="6:6" pos:end="6:14"><name pos:start="6:6" pos:end="6:7">st</name><index pos:start="6:8" pos:end="6:14">[<expr pos:start="6:9" pos:end="6:13"><literal type="number" pos:start="6:9" pos:end="6:13">20000</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="25:1"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:10">change</name><parameter_list pos:start="7:11" pos:end="7:24">(<parameter pos:start="7:12" pos:end="7:16"><decl pos:start="7:12" pos:end="7:16"><type pos:start="7:12" pos:end="7:16"><name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:16">m</name></decl></parameter>,<parameter pos:start="7:18" pos:end="7:23"><decl pos:start="7:18" pos:end="7:23"><type pos:start="7:18" pos:end="7:23"><name pos:start="7:18" pos:end="7:20">int</name></type> <name pos:start="7:22" pos:end="7:23">fx</name></decl></parameter>)</parameter_list> <block pos:start="7:26" pos:end="25:1">{<block_content pos:start="8:5" pos:end="24:15">
    <decl_stmt pos:start="8:5" pos:end="8:18"><decl pos:start="8:5" pos:end="8:13"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:11">sum</name><init pos:start="8:12" pos:end="8:13">=<expr pos:start="8:13" pos:end="8:13"><literal type="number" pos:start="8:13" pos:end="8:13">0</literal></expr></init></decl>,<decl pos:start="8:15" pos:end="8:17"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:15" pos:end="8:17">cnt</name></decl>;</decl_stmt>
    <if_stmt pos:start="9:5" pos:end="23:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:14">(<expr pos:start="9:9" pos:end="9:13"><name pos:start="9:9" pos:end="9:10">fx</name><operator pos:start="9:11" pos:end="9:12">==</operator><literal type="number" pos:start="9:13" pos:end="9:13">1</literal></expr>)</condition> <block pos:start="9:16" pos:end="15:5">{<block_content pos:start="10:9" pos:end="14:9">
        <expr_stmt pos:start="10:9" pos:end="10:14"><expr pos:start="10:9" pos:end="10:13"><name pos:start="10:9" pos:end="10:11">cnt</name><operator pos:start="10:12" pos:end="10:12">=</operator><literal type="number" pos:start="10:13" pos:end="10:13">8</literal></expr>;</expr_stmt>
        <for pos:start="11:9" pos:end="14:9">for <control pos:start="11:13" pos:end="11:37">(<init pos:start="11:14" pos:end="11:23"><decl pos:start="11:14" pos:end="11:22"><type pos:start="11:14" pos:end="11:16"><name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">i</name><init pos:start="11:19" pos:end="11:22">=<expr pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:20">m</name><operator pos:start="11:21" pos:end="11:21">*</operator><literal type="number" pos:start="11:22" pos:end="11:22">8</literal></expr></init></decl>;</init><condition pos:start="11:24" pos:end="11:33"><expr pos:start="11:24" pos:end="11:32"><name pos:start="11:24" pos:end="11:24">i</name><operator pos:start="11:25" pos:end="11:25">&lt;</operator><operator pos:start="11:26" pos:end="11:26">(</operator><name pos:start="11:27" pos:end="11:27">m</name><operator pos:start="11:28" pos:end="11:28">+</operator><literal type="number" pos:start="11:29" pos:end="11:29">1</literal><operator pos:start="11:30" pos:end="11:30">)</operator><operator pos:start="11:31" pos:end="11:31">*</operator><literal type="number" pos:start="11:32" pos:end="11:32">8</literal></expr>;</condition><incr pos:start="11:34" pos:end="11:36"><expr pos:start="11:34" pos:end="11:36"><name pos:start="11:34" pos:end="11:34">i</name><operator pos:start="11:35" pos:end="11:36">++</operator></expr></incr>)</control> <block pos:start="11:39" pos:end="14:9">{<block_content pos:start="12:13" pos:end="13:43">
            <expr_stmt pos:start="12:13" pos:end="12:18"><expr pos:start="12:13" pos:end="12:17"><name pos:start="12:13" pos:end="12:15">cnt</name><operator pos:start="12:16" pos:end="12:17">--</operator></expr>;</expr_stmt>
            <if_stmt pos:start="13:13" pos:end="13:43"><if pos:start="13:13" pos:end="13:43">if <condition pos:start="13:16" pos:end="13:26">(<expr pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:20"><name pos:start="13:17" pos:end="13:17">a</name><index pos:start="13:18" pos:end="13:20">[<expr pos:start="13:19" pos:end="13:19"><name pos:start="13:19" pos:end="13:19">i</name></expr>]</index></name><operator pos:start="13:21" pos:end="13:22">==</operator><literal type="char" pos:start="13:23" pos:end="13:25">'1'</literal></expr>)</condition><block type="pseudo" pos:start="13:28" pos:end="13:43"><block_content pos:start="13:28" pos:end="13:43"> <expr_stmt pos:start="13:28" pos:end="13:43"><expr pos:start="13:28" pos:end="13:42"><name pos:start="13:28" pos:end="13:30">sum</name><operator pos:start="13:31" pos:end="13:32">+=</operator><call pos:start="13:33" pos:end="13:42"><name pos:start="13:33" pos:end="13:35">pow</name><argument_list pos:start="13:36" pos:end="13:42">(<argument pos:start="13:37" pos:end="13:37"><expr pos:start="13:37" pos:end="13:37"><literal type="number" pos:start="13:37" pos:end="13:37">2</literal></expr></argument>,<argument pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><name pos:start="13:39" pos:end="13:41">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></if> <else pos:start="15:7" pos:end="23:5">else <block pos:start="15:12" pos:end="23:5">{<block_content pos:start="16:9" pos:end="22:9">
        <expr_stmt pos:start="16:9" pos:end="16:14"><expr pos:start="16:9" pos:end="16:13"><name pos:start="16:9" pos:end="16:11">cnt</name><operator pos:start="16:12" pos:end="16:12">=</operator><literal type="number" pos:start="16:13" pos:end="16:13">5</literal></expr>;</expr_stmt>
        <for pos:start="17:9" pos:end="22:9">for <control pos:start="17:13" pos:end="17:39">(<init pos:start="17:14" pos:end="17:25"><decl pos:start="17:14" pos:end="17:24"><type pos:start="17:14" pos:end="17:16"><name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:18">i</name><init pos:start="17:19" pos:end="17:24">=<expr pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:20">m</name><operator pos:start="17:21" pos:end="17:21">*</operator><literal type="number" pos:start="17:22" pos:end="17:23">8</literal><operator pos:start="17:23" pos:end="17:23">+</operator><literal type="number" pos:start="17:24" pos:end="17:24">3</literal></expr></init></decl>;</init><condition pos:start="17:26" pos:end="17:35"><expr pos:start="17:26" pos:end="17:34"><name pos:start="17:26" pos:end="17:26">i</name><operator pos:start="17:27" pos:end="17:27">&lt;</operator><operator pos:start="17:28" pos:end="17:28">(</operator><name pos:start="17:29" pos:end="17:29">m</name><operator pos:start="17:30" pos:end="17:30">+</operator><literal type="number" pos:start="17:31" pos:end="17:31">1</literal><operator pos:start="17:32" pos:end="17:32">)</operator><operator pos:start="17:33" pos:end="17:33">*</operator><literal type="number" pos:start="17:34" pos:end="17:34">8</literal></expr>;</condition><incr pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:36">i</name><operator pos:start="17:37" pos:end="17:38">++</operator></expr></incr>)</control> <block pos:start="17:41" pos:end="22:9">{<block_content pos:start="18:13" pos:end="21:13">
            <expr_stmt pos:start="18:13" pos:end="18:18"><expr pos:start="18:13" pos:end="18:17"><name pos:start="18:13" pos:end="18:15">cnt</name><operator pos:start="18:16" pos:end="18:17">--</operator></expr>;</expr_stmt>
            <if_stmt pos:start="19:13" pos:end="21:13"><if pos:start="19:13" pos:end="21:13">if <condition pos:start="19:16" pos:end="19:26">(<expr pos:start="19:17" pos:end="19:25"><name pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:17">a</name><index pos:start="19:18" pos:end="19:20">[<expr pos:start="19:19" pos:end="19:19"><name pos:start="19:19" pos:end="19:19">i</name></expr>]</index></name><operator pos:start="19:21" pos:end="19:22">==</operator><literal type="char" pos:start="19:23" pos:end="19:25">'1'</literal></expr>)</condition> <block pos:start="19:28" pos:end="21:13">{<block_content pos:start="20:17" pos:end="20:32">
                <expr_stmt pos:start="20:17" pos:end="20:32"><expr pos:start="20:17" pos:end="20:31"><name pos:start="20:17" pos:end="20:19">sum</name><operator pos:start="20:20" pos:end="20:21">+=</operator><call pos:start="20:22" pos:end="20:31"><name pos:start="20:22" pos:end="20:24">pow</name><argument_list pos:start="20:25" pos:end="20:31">(<argument pos:start="20:26" pos:end="20:26"><expr pos:start="20:26" pos:end="20:26"><literal type="number" pos:start="20:26" pos:end="20:26">2</literal></expr></argument>,<argument pos:start="20:28" pos:end="20:30"><expr pos:start="20:28" pos:end="20:30"><name pos:start="20:28" pos:end="20:30">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></else></if_stmt>
    <return pos:start="24:5" pos:end="24:15">return <expr pos:start="24:12" pos:end="24:14"><name pos:start="24:12" pos:end="24:14">sum</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="26:1" pos:end="73:1"><type pos:start="26:1" pos:end="26:3"><name pos:start="26:1" pos:end="26:3">int</name></type> <name pos:start="26:5" pos:end="26:8">main</name><parameter_list pos:start="26:9" pos:end="26:10">()</parameter_list> <block pos:start="26:12" pos:end="73:1">{<block_content pos:start="27:5" pos:end="72:13">
    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><call pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:11">freopen</name><argument_list pos:start="27:12" pos:end="27:39">(<argument pos:start="27:13" pos:end="27:28"><expr pos:start="27:13" pos:end="27:28"><literal type="string" pos:start="27:13" pos:end="27:28">"information.in"</literal></expr></argument>,<argument pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><literal type="string" pos:start="27:30" pos:end="27:32">"r"</literal></expr></argument>,<argument pos:start="27:34" pos:end="27:38"><expr pos:start="27:34" pos:end="27:38"><name pos:start="27:34" pos:end="27:38">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:42"><expr pos:start="28:5" pos:end="28:41"><call pos:start="28:5" pos:end="28:41"><name pos:start="28:5" pos:end="28:11">freopen</name><argument_list pos:start="28:12" pos:end="28:41">(<argument pos:start="28:13" pos:end="28:29"><expr pos:start="28:13" pos:end="28:29"><literal type="string" pos:start="28:13" pos:end="28:29">"information.out"</literal></expr></argument>,<argument pos:start="28:31" pos:end="28:33"><expr pos:start="28:31" pos:end="28:33"><literal type="string" pos:start="28:31" pos:end="28:33">"w"</literal></expr></argument>,<argument pos:start="28:35" pos:end="28:40"><expr pos:start="28:35" pos:end="28:40"><name pos:start="28:35" pos:end="28:40">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:13"><expr pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:7">cin</name> <operator pos:start="29:9" pos:end="29:10">&gt;&gt;</operator> <name pos:start="29:12" pos:end="29:12">a</name></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:17"><expr pos:start="30:5" pos:end="30:16"><name pos:start="30:5" pos:end="30:7">len</name><operator pos:start="30:8" pos:end="30:8">=</operator><call pos:start="30:9" pos:end="30:16"><name pos:start="30:9" pos:end="30:14"><name pos:start="30:9" pos:end="30:9">a</name><operator pos:start="30:10" pos:end="30:10">.</operator><name pos:start="30:11" pos:end="30:14">size</name></name><argument_list pos:start="30:15" pos:end="30:16">()</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="31:5" pos:end="34:5"><if pos:start="31:5" pos:end="34:5">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:11">len</name><operator pos:start="31:12" pos:end="31:12">%</operator><literal type="number" pos:start="31:13" pos:end="31:13">8</literal><operator pos:start="31:14" pos:end="31:15">!=</operator><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>)</condition> <block pos:start="31:19" pos:end="34:5">{<block_content pos:start="32:9" pos:end="33:17">
        <expr_stmt pos:start="32:9" pos:end="32:32"><expr pos:start="32:9" pos:end="32:31"><name pos:start="32:9" pos:end="32:12">cout</name> <operator pos:start="32:14" pos:end="32:15">&lt;&lt;</operator> <literal type="string" pos:start="32:17" pos:end="32:23">"Error"</literal> <operator pos:start="32:25" pos:end="32:26">&lt;&lt;</operator> <name pos:start="32:28" pos:end="32:31">endl</name></expr>;</expr_stmt>
        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="35:5" pos:end="40:5">for <control pos:start="35:9" pos:end="35:27">(<init pos:start="35:10" pos:end="35:17"><decl pos:start="35:10" pos:end="35:16"><type pos:start="35:10" pos:end="35:12"><name pos:start="35:10" pos:end="35:12">int</name></type> <name pos:start="35:14" pos:end="35:14">i</name><init pos:start="35:15" pos:end="35:16">=<expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr></init></decl>;</init><condition pos:start="35:18" pos:end="35:23"><expr pos:start="35:18" pos:end="35:22"><name pos:start="35:18" pos:end="35:18">i</name><operator pos:start="35:19" pos:end="35:19">&lt;</operator><name pos:start="35:20" pos:end="35:22">len</name></expr>;</condition><incr pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:24">i</name><operator pos:start="35:25" pos:end="35:26">++</operator></expr></incr>)</control> <block pos:start="35:29" pos:end="40:5">{<block_content pos:start="36:9" pos:end="39:9">
        <if_stmt pos:start="36:9" pos:end="39:9"><if pos:start="36:9" pos:end="39:9">if <condition pos:start="36:12" pos:end="36:35">(<expr pos:start="36:13" pos:end="36:34"><name pos:start="36:13" pos:end="36:16"><name pos:start="36:13" pos:end="36:13">a</name><index pos:start="36:14" pos:end="36:16">[<expr pos:start="36:15" pos:end="36:15"><name pos:start="36:15" pos:end="36:15">i</name></expr>]</index></name><operator pos:start="36:17" pos:end="36:18">!=</operator><literal type="char" pos:start="36:19" pos:end="36:21">'0'</literal> <operator pos:start="36:23" pos:end="36:24">&amp;&amp;</operator> <name pos:start="36:26" pos:end="36:29"><name pos:start="36:26" pos:end="36:26">a</name><index pos:start="36:27" pos:end="36:29">[<expr pos:start="36:28" pos:end="36:28"><name pos:start="36:28" pos:end="36:28">i</name></expr>]</index></name><operator pos:start="36:30" pos:end="36:31">!=</operator><literal type="char" pos:start="36:32" pos:end="36:34">'1'</literal></expr>)</condition> <block pos:start="36:37" pos:end="39:9">{<block_content pos:start="37:13" pos:end="38:21">
            <expr_stmt pos:start="37:13" pos:end="37:36"><expr pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:16">cout</name> <operator pos:start="37:18" pos:end="37:19">&lt;&lt;</operator> <literal type="string" pos:start="37:21" pos:end="37:27">"Error"</literal> <operator pos:start="37:29" pos:end="37:30">&lt;&lt;</operator> <name pos:start="37:32" pos:end="37:35">endl</name></expr>;</expr_stmt>
            <return pos:start="38:13" pos:end="38:21">return <expr pos:start="38:20" pos:end="38:20"><literal type="number" pos:start="38:20" pos:end="38:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="41:5" pos:end="66:5">for <control pos:start="41:9" pos:end="41:29">(<init pos:start="41:10" pos:end="41:17"><decl pos:start="41:10" pos:end="41:16"><type pos:start="41:10" pos:end="41:12"><name pos:start="41:10" pos:end="41:12">int</name></type> <name pos:start="41:14" pos:end="41:14">i</name><init pos:start="41:15" pos:end="41:16">=<expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr></init></decl>;</init><condition pos:start="41:18" pos:end="41:25"><expr pos:start="41:18" pos:end="41:24"><name pos:start="41:18" pos:end="41:18">i</name><operator pos:start="41:19" pos:end="41:19">&lt;</operator><name pos:start="41:20" pos:end="41:22">len</name><operator pos:start="41:23" pos:end="41:23">/</operator><literal type="number" pos:start="41:24" pos:end="41:24">8</literal></expr>;</condition><incr pos:start="41:26" pos:end="41:28"><expr pos:start="41:26" pos:end="41:28"><name pos:start="41:26" pos:end="41:26">i</name><operator pos:start="41:27" pos:end="41:28">++</operator></expr></incr>)</control> <block pos:start="41:31" pos:end="66:5">{<block_content pos:start="42:9" pos:end="65:9">
        <if_stmt pos:start="42:9" pos:end="65:9"><if pos:start="42:9" pos:end="56:9">if <condition pos:start="42:12" pos:end="42:24">(<expr pos:start="42:13" pos:end="42:23"><name pos:start="42:13" pos:end="42:18"><name pos:start="42:13" pos:end="42:13">a</name><index pos:start="42:14" pos:end="42:18">[<expr pos:start="42:15" pos:end="42:17"><name pos:start="42:15" pos:end="42:15">i</name><operator pos:start="42:16" pos:end="42:16">*</operator><literal type="number" pos:start="42:17" pos:end="42:17">8</literal></expr>]</index></name><operator pos:start="42:19" pos:end="42:20">==</operator><literal type="char" pos:start="42:21" pos:end="42:23">'1'</literal></expr>)</condition> <block pos:start="42:26" pos:end="56:9">{<block_content pos:start="43:13" pos:end="55:13">
            <if_stmt pos:start="43:13" pos:end="55:13"><if pos:start="43:13" pos:end="50:13">if <condition pos:start="43:16" pos:end="43:47">(<expr pos:start="43:17" pos:end="43:46"><name pos:start="43:17" pos:end="43:24"><name pos:start="43:17" pos:end="43:17">a</name><index pos:start="43:18" pos:end="43:24">[<expr pos:start="43:19" pos:end="43:23"><name pos:start="43:19" pos:end="43:19">i</name><operator pos:start="43:20" pos:end="43:20">*</operator><literal type="number" pos:start="43:21" pos:end="43:22">8</literal><operator pos:start="43:22" pos:end="43:22">+</operator><literal type="number" pos:start="43:23" pos:end="43:23">1</literal></expr>]</index></name><operator pos:start="43:25" pos:end="43:26">==</operator><literal type="char" pos:start="43:27" pos:end="43:29">'0'</literal> <operator pos:start="43:31" pos:end="43:32">&amp;&amp;</operator> <name pos:start="43:34" pos:end="43:41"><name pos:start="43:34" pos:end="43:34">a</name><index pos:start="43:35" pos:end="43:41">[<expr pos:start="43:36" pos:end="43:40"><name pos:start="43:36" pos:end="43:36">i</name><operator pos:start="43:37" pos:end="43:37">*</operator><literal type="number" pos:start="43:38" pos:end="43:39">8</literal><operator pos:start="43:39" pos:end="43:39">+</operator><literal type="number" pos:start="43:40" pos:end="43:40">2</literal></expr>]</index></name><operator pos:start="43:42" pos:end="43:43">==</operator><literal type="char" pos:start="43:44" pos:end="43:46">'1'</literal></expr>)</condition> <block pos:start="43:49" pos:end="50:13">{<block_content pos:start="44:17" pos:end="49:17">
                <decl_stmt pos:start="44:17" pos:end="44:39"><decl pos:start="44:17" pos:end="44:38"><type pos:start="44:17" pos:end="44:19"><name pos:start="44:17" pos:end="44:19">int</name></type> <name pos:start="44:21" pos:end="44:26">number</name><init pos:start="44:27" pos:end="44:38">=<expr pos:start="44:28" pos:end="44:38"><call pos:start="44:28" pos:end="44:38"><name pos:start="44:28" pos:end="44:33">change</name><argument_list pos:start="44:34" pos:end="44:38">(<argument pos:start="44:35" pos:end="44:35"><expr pos:start="44:35" pos:end="44:35"><name pos:start="44:35" pos:end="44:35">i</name></expr></argument>,<argument pos:start="44:37" pos:end="44:37"><expr pos:start="44:37" pos:end="44:37"><literal type="number" pos:start="44:37" pos:end="44:37">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="45:17" pos:end="49:17"><if pos:start="45:17" pos:end="45:57">if <condition pos:start="45:20" pos:end="45:31">(<expr pos:start="45:21" pos:end="45:30"><name pos:start="45:21" pos:end="45:26">number</name><operator pos:start="45:27" pos:end="45:28">&lt;=</operator><literal type="number" pos:start="45:29" pos:end="45:30">25</literal></expr>)</condition><block type="pseudo" pos:start="45:33" pos:end="45:57"><block_content pos:start="45:33" pos:end="45:57"> <expr_stmt pos:start="45:33" pos:end="45:57"><expr pos:start="45:33" pos:end="45:56"><name pos:start="45:33" pos:end="45:39"><name pos:start="45:33" pos:end="45:34">st</name><index pos:start="45:35" pos:end="45:39">[<expr pos:start="45:36" pos:end="45:38"><name pos:start="45:36" pos:end="45:36">p</name><operator pos:start="45:37" pos:end="45:38">++</operator></expr>]</index></name><operator pos:start="45:40" pos:end="45:40">=</operator><call pos:start="45:41" pos:end="45:56"><name pos:start="45:41" pos:end="45:44">char</name><argument_list pos:start="45:45" pos:end="45:56">(<argument pos:start="45:46" pos:end="45:55"><expr pos:start="45:46" pos:end="45:55"><name pos:start="45:46" pos:end="45:51">number</name><operator pos:start="45:52" pos:end="45:52">+</operator><literal type="char" pos:start="45:53" pos:end="45:55">'A'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="46:17" pos:end="49:17">else <block pos:start="46:22" pos:end="49:17">{<block_content pos:start="47:21" pos:end="48:29">
                    <expr_stmt pos:start="47:21" pos:end="47:44"><expr pos:start="47:21" pos:end="47:43"><name pos:start="47:21" pos:end="47:24">cout</name> <operator pos:start="47:26" pos:end="47:27">&lt;&lt;</operator> <literal type="string" pos:start="47:29" pos:end="47:35">"Error"</literal> <operator pos:start="47:37" pos:end="47:38">&lt;&lt;</operator> <name pos:start="47:40" pos:end="47:43">endl</name></expr>;</expr_stmt>
                    <return pos:start="48:21" pos:end="48:29">return <expr pos:start="48:28" pos:end="48:28"><literal type="number" pos:start="48:28" pos:end="48:28">0</literal></expr>;</return>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="50:15" pos:end="52:13">else if <condition pos:start="50:23" pos:end="50:54">(<expr pos:start="50:24" pos:end="50:53"><name pos:start="50:24" pos:end="50:31"><name pos:start="50:24" pos:end="50:24">a</name><index pos:start="50:25" pos:end="50:31">[<expr pos:start="50:26" pos:end="50:30"><name pos:start="50:26" pos:end="50:26">i</name><operator pos:start="50:27" pos:end="50:27">*</operator><literal type="number" pos:start="50:28" pos:end="50:29">8</literal><operator pos:start="50:29" pos:end="50:29">+</operator><literal type="number" pos:start="50:30" pos:end="50:30">1</literal></expr>]</index></name><operator pos:start="50:32" pos:end="50:33">==</operator><literal type="char" pos:start="50:34" pos:end="50:36">'1'</literal> <operator pos:start="50:38" pos:end="50:39">&amp;&amp;</operator> <name pos:start="50:41" pos:end="50:48"><name pos:start="50:41" pos:end="50:41">a</name><index pos:start="50:42" pos:end="50:48">[<expr pos:start="50:43" pos:end="50:47"><name pos:start="50:43" pos:end="50:43">i</name><operator pos:start="50:44" pos:end="50:44">*</operator><literal type="number" pos:start="50:45" pos:end="50:46">8</literal><operator pos:start="50:46" pos:end="50:46">+</operator><literal type="number" pos:start="50:47" pos:end="50:47">2</literal></expr>]</index></name><operator pos:start="50:49" pos:end="50:50">==</operator><literal type="char" pos:start="50:51" pos:end="50:53">'1'</literal></expr>)</condition> <block pos:start="50:56" pos:end="52:13">{<block_content pos:start="51:17" pos:end="51:28">
                <expr_stmt pos:start="51:17" pos:end="51:28"><expr pos:start="51:17" pos:end="51:27"><name pos:start="51:17" pos:end="51:23"><name pos:start="51:17" pos:end="51:18">st</name><index pos:start="51:19" pos:end="51:23">[<expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:20">p</name><operator pos:start="51:21" pos:end="51:22">++</operator></expr>]</index></name><operator pos:start="51:24" pos:end="51:24">=</operator><literal type="char" pos:start="51:25" pos:end="51:27">' '</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="52:15" pos:end="55:13">else <block pos:start="52:20" pos:end="55:13">{<block_content pos:start="53:17" pos:end="54:25">
                <expr_stmt pos:start="53:17" pos:end="53:40"><expr pos:start="53:17" pos:end="53:39"><name pos:start="53:17" pos:end="53:20">cout</name> <operator pos:start="53:22" pos:end="53:23">&lt;&lt;</operator> <literal type="string" pos:start="53:25" pos:end="53:31">"Error"</literal> <operator pos:start="53:33" pos:end="53:34">&lt;&lt;</operator> <name pos:start="53:36" pos:end="53:39">endl</name></expr>;</expr_stmt>
                <return pos:start="54:17" pos:end="54:25">return <expr pos:start="54:24" pos:end="54:24"><literal type="number" pos:start="54:24" pos:end="54:24">0</literal></expr>;</return>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if> <else pos:start="56:11" pos:end="65:9">else <block pos:start="56:16" pos:end="65:9">{<block_content pos:start="57:13" pos:end="64:13">
            <if_stmt pos:start="57:13" pos:end="64:13"><if pos:start="57:13" pos:end="60:13">if <condition pos:start="57:16" pos:end="57:21">(<expr pos:start="57:17" pos:end="57:20"><name pos:start="57:17" pos:end="57:17">f</name><operator pos:start="57:18" pos:end="57:19">==</operator><literal type="number" pos:start="57:20" pos:end="57:20">0</literal></expr>)</condition> <block pos:start="57:23" pos:end="60:13">{<block_content pos:start="58:17" pos:end="59:20">
                <expr_stmt pos:start="58:17" pos:end="58:33"><expr pos:start="58:17" pos:end="58:32"><name pos:start="58:17" pos:end="58:17">x</name><operator pos:start="58:18" pos:end="58:19">+=</operator><call pos:start="58:20" pos:end="58:30"><name pos:start="58:20" pos:end="58:25">change</name><argument_list pos:start="58:26" pos:end="58:30">(<argument pos:start="58:27" pos:end="58:27"><expr pos:start="58:27" pos:end="58:27"><name pos:start="58:27" pos:end="58:27">i</name></expr></argument>,<argument pos:start="58:29" pos:end="58:29"><expr pos:start="58:29" pos:end="58:29"><literal type="number" pos:start="58:29" pos:end="58:29">1</literal></expr></argument>)</argument_list></call><operator pos:start="58:31" pos:end="58:31">/</operator><literal type="number" pos:start="58:32" pos:end="58:32">2</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="59:17" pos:end="59:20"><expr pos:start="59:17" pos:end="59:19"><name pos:start="59:17" pos:end="59:17">f</name><operator pos:start="59:18" pos:end="59:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="60:15" pos:end="64:13">else if <condition pos:start="60:23" pos:end="60:28">(<expr pos:start="60:24" pos:end="60:27"><name pos:start="60:24" pos:end="60:24">f</name><operator pos:start="60:25" pos:end="60:26">==</operator><literal type="number" pos:start="60:27" pos:end="60:27">1</literal></expr>)</condition> <block pos:start="60:30" pos:end="64:13">{<block_content pos:start="61:17" pos:end="63:20">
                <expr_stmt pos:start="61:17" pos:end="61:20"><expr pos:start="61:17" pos:end="61:19"><name pos:start="61:17" pos:end="61:17">f</name><operator pos:start="61:18" pos:end="61:18">=</operator><literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="62:17" pos:end="62:50"><expr pos:start="62:17" pos:end="62:49"><name pos:start="62:17" pos:end="62:23"><name pos:start="62:17" pos:end="62:18">st</name><index pos:start="62:19" pos:end="62:23">[<expr pos:start="62:20" pos:end="62:22"><name pos:start="62:20" pos:end="62:20">p</name><operator pos:start="62:21" pos:end="62:22">++</operator></expr>]</index></name><operator pos:start="62:24" pos:end="62:24">=</operator><call pos:start="62:25" pos:end="62:49"><name pos:start="62:25" pos:end="62:28">char</name><argument_list pos:start="62:29" pos:end="62:49">(<argument pos:start="62:30" pos:end="62:48"><expr pos:start="62:30" pos:end="62:48"><name pos:start="62:30" pos:end="62:30">x</name><operator pos:start="62:31" pos:end="62:31">+</operator><call pos:start="62:32" pos:end="62:42"><name pos:start="62:32" pos:end="62:37">change</name><argument_list pos:start="62:38" pos:end="62:42">(<argument pos:start="62:39" pos:end="62:39"><expr pos:start="62:39" pos:end="62:39"><name pos:start="62:39" pos:end="62:39">i</name></expr></argument>,<argument pos:start="62:41" pos:end="62:41"><expr pos:start="62:41" pos:end="62:41"><literal type="number" pos:start="62:41" pos:end="62:41">1</literal></expr></argument>)</argument_list></call><operator pos:start="62:43" pos:end="62:43">/</operator><literal type="number" pos:start="62:44" pos:end="62:45">2</literal><operator pos:start="62:45" pos:end="62:45">+</operator><literal type="char" pos:start="62:46" pos:end="62:48">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="63:17" pos:end="63:20"><expr pos:start="63:17" pos:end="63:19"><name pos:start="63:17" pos:end="63:17">x</name><operator pos:start="63:18" pos:end="63:18">=</operator><literal type="number" pos:start="63:19" pos:end="63:19">0</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="67:5" pos:end="70:5"><if pos:start="67:5" pos:end="70:5">if <condition pos:start="67:8" pos:end="67:13">(<expr pos:start="67:9" pos:end="67:12"><name pos:start="67:9" pos:end="67:9">f</name><operator pos:start="67:10" pos:end="67:11">==</operator><literal type="number" pos:start="67:12" pos:end="67:12">1</literal></expr>)</condition> <block pos:start="67:15" pos:end="70:5">{<block_content pos:start="68:9" pos:end="69:17">
        <expr_stmt pos:start="68:9" pos:end="68:32"><expr pos:start="68:9" pos:end="68:31"><name pos:start="68:9" pos:end="68:12">cout</name> <operator pos:start="68:14" pos:end="68:15">&lt;&lt;</operator> <literal type="string" pos:start="68:17" pos:end="68:23">"Error"</literal> <operator pos:start="68:25" pos:end="68:26">&lt;&lt;</operator> <name pos:start="68:28" pos:end="68:31">endl</name></expr>;</expr_stmt>
        <return pos:start="69:9" pos:end="69:17">return <expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="71:5" pos:end="71:40">for <control pos:start="71:9" pos:end="71:25">(<init pos:start="71:10" pos:end="71:17"><decl pos:start="71:10" pos:end="71:16"><type pos:start="71:10" pos:end="71:12"><name pos:start="71:10" pos:end="71:12">int</name></type> <name pos:start="71:14" pos:end="71:14">i</name><init pos:start="71:15" pos:end="71:16">=<expr pos:start="71:16" pos:end="71:16"><literal type="number" pos:start="71:16" pos:end="71:16">0</literal></expr></init></decl>;</init><condition pos:start="71:18" pos:end="71:21"><expr pos:start="71:18" pos:end="71:20"><name pos:start="71:18" pos:end="71:18">i</name><operator pos:start="71:19" pos:end="71:19">&lt;</operator><name pos:start="71:20" pos:end="71:20">p</name></expr>;</condition><incr pos:start="71:22" pos:end="71:24"><expr pos:start="71:22" pos:end="71:24"><name pos:start="71:22" pos:end="71:22">i</name><operator pos:start="71:23" pos:end="71:24">++</operator></expr></incr>)</control><block type="pseudo" pos:start="71:27" pos:end="71:40"><block_content pos:start="71:27" pos:end="71:40"> <expr_stmt pos:start="71:27" pos:end="71:40"><expr pos:start="71:27" pos:end="71:39"><name pos:start="71:27" pos:end="71:30">cout</name> <operator pos:start="71:32" pos:end="71:33">&lt;&lt;</operator> <name pos:start="71:35" pos:end="71:39"><name pos:start="71:35" pos:end="71:36">st</name><index pos:start="71:37" pos:end="71:39">[<expr pos:start="71:38" pos:end="71:38"><name pos:start="71:38" pos:end="71:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <return pos:start="72:5" pos:end="72:13">return <expr pos:start="72:12" pos:end="72:12"><literal type="number" pos:start="72:12" pos:end="72:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
