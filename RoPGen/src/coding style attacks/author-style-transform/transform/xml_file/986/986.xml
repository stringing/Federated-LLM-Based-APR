<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/986/986.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="37:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="37:1">{<block_content pos:start="5:5" pos:end="36:13">
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:13"><expr pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:7">cin</name> <operator pos:start="6:9" pos:end="6:10">&gt;&gt;</operator> <name pos:start="6:12" pos:end="6:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:14"><expr pos:start="7:5" pos:end="7:13"><call pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">getchar</name><argument_list pos:start="7:12" pos:end="7:13">()</argument_list></call></expr>;</expr_stmt>
    <while pos:start="8:5" pos:end="35:5">while<condition pos:start="8:10" pos:end="8:14">(<expr pos:start="8:11" pos:end="8:13"><name pos:start="8:11" pos:end="8:11">n</name><operator pos:start="8:12" pos:end="8:13">--</operator></expr>)</condition> <block pos:start="8:16" pos:end="35:5">{<block_content pos:start="9:9" pos:end="34:9">
        <decl_stmt pos:start="9:9" pos:end="9:17"><decl pos:start="9:9" pos:end="9:16"><type pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:14">string</name></type> <name pos:start="9:16" pos:end="9:16">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:24"><expr pos:start="10:9" pos:end="10:23"><call pos:start="10:9" pos:end="10:23"><name pos:start="10:9" pos:end="10:15">getline</name><argument_list pos:start="10:16" pos:end="10:23">(<argument pos:start="10:17" pos:end="10:19"><expr pos:start="10:17" pos:end="10:19"><name pos:start="10:17" pos:end="10:19">cin</name></expr></argument>, <argument pos:start="10:22" pos:end="10:22"><expr pos:start="10:22" pos:end="10:22"><name pos:start="10:22" pos:end="10:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="11:9" pos:end="11:18"><decl pos:start="11:9" pos:end="11:17"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">x</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="12:9" pos:end="12:28"><decl pos:start="12:9" pos:end="12:27"><type pos:start="12:9" pos:end="12:14"><name pos:start="12:9" pos:end="12:14">string</name></type> <name pos:start="12:16" pos:end="12:22"><name pos:start="12:16" pos:end="12:16">f</name><index pos:start="12:17" pos:end="12:22">[<expr pos:start="12:18" pos:end="12:21"><literal type="number" pos:start="12:18" pos:end="12:21">1005</literal></expr>]</index></name> <init pos:start="12:24" pos:end="12:27">= <expr pos:start="12:26" pos:end="12:27"><block pos:start="12:26" pos:end="12:27">{}</block></expr></init></decl>;</decl_stmt>
        <for pos:start="13:9" pos:end="25:9">for <control pos:start="13:13" pos:end="13:42">(<init pos:start="13:14" pos:end="13:23"><decl pos:start="13:14" pos:end="13:22"><type pos:start="13:14" pos:end="13:16"><name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">i</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</init> <condition pos:start="13:25" pos:end="13:37"><expr pos:start="13:25" pos:end="13:36"><name pos:start="13:25" pos:end="13:25">i</name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <call pos:start="13:29" pos:end="13:36"><name pos:start="13:29" pos:end="13:34"><name pos:start="13:29" pos:end="13:29">s</name><operator pos:start="13:30" pos:end="13:30">.</operator><name pos:start="13:31" pos:end="13:34">size</name></name><argument_list pos:start="13:35" pos:end="13:36">()</argument_list></call></expr>;</condition> <incr pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><name pos:start="13:39" pos:end="13:39">i</name><operator pos:start="13:40" pos:end="13:41">++</operator></expr></incr>)</control> <block pos:start="13:44" pos:end="25:9">{<block_content pos:start="14:13" pos:end="24:13">
            <if_stmt pos:start="14:13" pos:end="16:13"><if pos:start="14:13" pos:end="16:13">if <condition pos:start="14:16" pos:end="14:58">(<expr pos:start="14:17" pos:end="14:57"><name pos:start="14:17" pos:end="14:20"><name pos:start="14:17" pos:end="14:17">s</name><index pos:start="14:18" pos:end="14:20">[<expr pos:start="14:19" pos:end="14:19"><name pos:start="14:19" pos:end="14:19">i</name></expr>]</index></name> <operator pos:start="14:22" pos:end="14:23">&gt;=</operator> <literal type="char" pos:start="14:25" pos:end="14:27">'A'</literal> <operator pos:start="14:29" pos:end="14:30">&amp;&amp;</operator> <name pos:start="14:32" pos:end="14:35"><name pos:start="14:32" pos:end="14:32">s</name><index pos:start="14:33" pos:end="14:35">[<expr pos:start="14:34" pos:end="14:34"><name pos:start="14:34" pos:end="14:34">i</name></expr>]</index></name> <operator pos:start="14:37" pos:end="14:38">&lt;=</operator> <literal type="char" pos:start="14:40" pos:end="14:42">'Z'</literal> <operator pos:start="14:44" pos:end="14:45">&amp;&amp;</operator> <name pos:start="14:47" pos:end="14:50"><name pos:start="14:47" pos:end="14:47">s</name><index pos:start="14:48" pos:end="14:50">[<expr pos:start="14:49" pos:end="14:49"><name pos:start="14:49" pos:end="14:49">i</name></expr>]</index></name> <operator pos:start="14:52" pos:end="14:53">!=</operator> <literal type="char" pos:start="14:55" pos:end="14:57">'I'</literal></expr>)</condition> <block pos:start="14:60" pos:end="16:13">{<block_content pos:start="15:17" pos:end="15:27">
                <expr_stmt pos:start="15:17" pos:end="15:27"><expr pos:start="15:17" pos:end="15:26"><name pos:start="15:17" pos:end="15:20"><name pos:start="15:17" pos:end="15:17">s</name><index pos:start="15:18" pos:end="15:20">[<expr pos:start="15:19" pos:end="15:19"><name pos:start="15:19" pos:end="15:19">i</name></expr>]</index></name> <operator pos:start="15:22" pos:end="15:23">+=</operator> <literal type="number" pos:start="15:25" pos:end="15:26">32</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="17:13" pos:end="19:13"><if pos:start="17:13" pos:end="19:13">if <condition pos:start="17:16" pos:end="17:28">(<expr pos:start="17:17" pos:end="17:27"><name pos:start="17:17" pos:end="17:20"><name pos:start="17:17" pos:end="17:17">s</name><index pos:start="17:18" pos:end="17:20">[<expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">i</name></expr>]</index></name> <operator pos:start="17:22" pos:end="17:23">==</operator> <literal type="char" pos:start="17:25" pos:end="17:27">'?'</literal></expr>)</condition> <block pos:start="17:30" pos:end="19:13">{<block_content pos:start="18:17" pos:end="18:27">
                <expr_stmt pos:start="18:17" pos:end="18:27"><expr pos:start="18:17" pos:end="18:26"><name pos:start="18:17" pos:end="18:20"><name pos:start="18:17" pos:end="18:17">s</name><index pos:start="18:18" pos:end="18:20">[<expr pos:start="18:19" pos:end="18:19"><name pos:start="18:19" pos:end="18:19">i</name></expr>]</index></name> <operator pos:start="18:22" pos:end="18:22">=</operator> <literal type="char" pos:start="18:24" pos:end="18:26">'!'</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="20:13" pos:end="24:13"><if pos:start="20:13" pos:end="22:13">if <condition pos:start="20:16" pos:end="20:28">(<expr pos:start="20:17" pos:end="20:27"><name pos:start="20:17" pos:end="20:20"><name pos:start="20:17" pos:end="20:17">s</name><index pos:start="20:18" pos:end="20:20">[<expr pos:start="20:19" pos:end="20:19"><name pos:start="20:19" pos:end="20:19">i</name></expr>]</index></name> <operator pos:start="20:22" pos:end="20:23">!=</operator> <literal type="char" pos:start="20:25" pos:end="20:27">' '</literal></expr>)</condition> <block pos:start="20:30" pos:end="22:13">{<block_content pos:start="21:17" pos:end="21:29">
                <expr_stmt pos:start="21:17" pos:end="21:29"><expr pos:start="21:17" pos:end="21:28"><name pos:start="21:17" pos:end="21:20"><name pos:start="21:17" pos:end="21:17">f</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><name pos:start="21:19" pos:end="21:19">x</name></expr>]</index></name> <operator pos:start="21:22" pos:end="21:23">+=</operator> <name pos:start="21:25" pos:end="21:28"><name pos:start="21:25" pos:end="21:25">s</name><index pos:start="21:26" pos:end="21:28">[<expr pos:start="21:27" pos:end="21:27"><name pos:start="21:27" pos:end="21:27">i</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="22:15" pos:end="24:13">else <block pos:start="22:20" pos:end="24:13">{<block_content pos:start="23:17" pos:end="23:20">
                <expr_stmt pos:start="23:17" pos:end="23:20"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:17">x</name><operator pos:start="23:18" pos:end="23:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
        <for pos:start="26:9" pos:end="34:9">for <control pos:start="26:13" pos:end="26:36">(<init pos:start="26:14" pos:end="26:23"><decl pos:start="26:14" pos:end="26:22"><type pos:start="26:14" pos:end="26:16"><name pos:start="26:14" pos:end="26:16">int</name></type> <name pos:start="26:18" pos:end="26:18">i</name> <init pos:start="26:20" pos:end="26:22">= <expr pos:start="26:22" pos:end="26:22"><literal type="number" pos:start="26:22" pos:end="26:22">0</literal></expr></init></decl>;</init> <condition pos:start="26:25" pos:end="26:31"><expr pos:start="26:25" pos:end="26:30"><name pos:start="26:25" pos:end="26:25">i</name> <operator pos:start="26:27" pos:end="26:28">&lt;=</operator> <name pos:start="26:30" pos:end="26:30">x</name></expr>;</condition> <incr pos:start="26:33" pos:end="26:35"><expr pos:start="26:33" pos:end="26:35"><name pos:start="26:33" pos:end="26:33">i</name><operator pos:start="26:34" pos:end="26:35">++</operator></expr></incr>)</control> <block pos:start="26:38" pos:end="34:9">{<block_content pos:start="27:13" pos:end="33:13">
            <if_stmt pos:start="27:13" pos:end="33:13"><if pos:start="27:13" pos:end="29:13">if <condition pos:start="27:16" pos:end="27:70">(<expr pos:start="27:17" pos:end="27:69"><name pos:start="27:17" pos:end="27:20"><name pos:start="27:17" pos:end="27:17">f</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><name pos:start="27:19" pos:end="27:19">i</name></expr>]</index></name> <operator pos:start="27:22" pos:end="27:23">==</operator> <literal type="string" pos:start="27:25" pos:end="27:29">"can"</literal> <operator pos:start="27:31" pos:end="27:32">||</operator> <name pos:start="27:34" pos:end="27:37"><name pos:start="27:34" pos:end="27:34">f</name><index pos:start="27:35" pos:end="27:37">[<expr pos:start="27:36" pos:end="27:36"><name pos:start="27:36" pos:end="27:36">i</name></expr>]</index></name> <operator pos:start="27:39" pos:end="27:40">==</operator> <literal type="string" pos:start="27:42" pos:end="27:48">"could"</literal> <operator pos:start="27:50" pos:end="27:51">&amp;&amp;</operator> <name pos:start="27:53" pos:end="27:60"><name pos:start="27:53" pos:end="27:53">f</name><index pos:start="27:54" pos:end="27:60">[<expr pos:start="27:55" pos:end="27:59"><name pos:start="27:55" pos:end="27:55">i</name> <operator pos:start="27:57" pos:end="27:57">+</operator> <literal type="number" pos:start="27:59" pos:end="27:59">1</literal></expr>]</index></name> <operator pos:start="27:62" pos:end="27:63">==</operator> <literal type="string" pos:start="27:65" pos:end="27:69">"you"</literal></expr>)</condition> <block pos:start="27:72" pos:end="29:13">{<block_content pos:start="28:17" pos:end="28:44">
                <expr_stmt pos:start="28:17" pos:end="28:44"><expr pos:start="28:17" pos:end="28:43"><name pos:start="28:17" pos:end="28:20">cout</name> <operator pos:start="28:22" pos:end="28:23">&lt;&lt;</operator> <literal type="string" pos:start="28:25" pos:end="28:28">"I "</literal> <operator pos:start="28:30" pos:end="28:31">&lt;&lt;</operator> <name pos:start="28:33" pos:end="28:36"><name pos:start="28:33" pos:end="28:33">f</name><index pos:start="28:34" pos:end="28:36">[<expr pos:start="28:35" pos:end="28:35"><name pos:start="28:35" pos:end="28:35">i</name></expr>]</index></name> <operator pos:start="28:38" pos:end="28:39">&lt;&lt;</operator> <literal type="string" pos:start="28:41" pos:end="28:43">" "</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="29:15" pos:end="31:13">else if <condition pos:start="29:23" pos:end="29:51">(<expr pos:start="29:24" pos:end="29:50"><name pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:24">f</name><index pos:start="29:25" pos:end="29:27">[<expr pos:start="29:26" pos:end="29:26"><name pos:start="29:26" pos:end="29:26">i</name></expr>]</index></name> <operator pos:start="29:29" pos:end="29:30">==</operator> <literal type="string" pos:start="29:32" pos:end="29:34">"I"</literal> <operator pos:start="29:36" pos:end="29:37">||</operator> <name pos:start="29:39" pos:end="29:42"><name pos:start="29:39" pos:end="29:39">f</name><index pos:start="29:40" pos:end="29:42">[<expr pos:start="29:41" pos:end="29:41"><name pos:start="29:41" pos:end="29:41">i</name></expr>]</index></name> <operator pos:start="29:44" pos:end="29:45">==</operator> <literal type="string" pos:start="29:47" pos:end="29:50">"me"</literal></expr>)</condition> <block pos:start="29:53" pos:end="31:13">{<block_content pos:start="30:17" pos:end="30:31">
                <expr_stmt pos:start="30:17" pos:end="30:31"><expr pos:start="30:17" pos:end="30:30"><name pos:start="30:17" pos:end="30:20">cout</name> <operator pos:start="30:22" pos:end="30:23">&lt;&lt;</operator> <literal type="string" pos:start="30:25" pos:end="30:30">"you "</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="31:15" pos:end="33:13">else <block pos:start="31:20" pos:end="33:13">{<block_content pos:start="32:17" pos:end="32:36">
                <expr_stmt pos:start="32:17" pos:end="32:36"><expr pos:start="32:17" pos:end="32:35"><name pos:start="32:17" pos:end="32:20">cout</name> <operator pos:start="32:22" pos:end="32:23">&lt;&lt;</operator> <name pos:start="32:25" pos:end="32:28"><name pos:start="32:25" pos:end="32:25">f</name><index pos:start="32:26" pos:end="32:28">[<expr pos:start="32:27" pos:end="32:27"><name pos:start="32:27" pos:end="32:27">i</name></expr>]</index></name> <operator pos:start="32:30" pos:end="32:31">&lt;&lt;</operator> <literal type="string" pos:start="32:33" pos:end="32:35">" "</literal></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></while>
    <return pos:start="36:5" pos:end="36:13">return <expr pos:start="36:12" pos:end="36:12"><literal type="number" pos:start="36:12" pos:end="36:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
