<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1018/1018.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="10:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">sum</name><parameter_list pos:start="3:8" pos:end="3:14">(<parameter pos:start="3:9" pos:end="3:13"><decl pos:start="3:9" pos:end="3:13"><type pos:start="3:9" pos:end="3:11"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:13">x</name></decl></parameter>)</parameter_list> <block pos:start="3:16" pos:end="10:1">{<block_content pos:start="4:5" pos:end="9:13">
    <decl_stmt pos:start="4:5" pos:end="4:14"><decl pos:start="4:5" pos:end="4:13"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">s</name> <init pos:start="4:11" pos:end="4:13">= <expr pos:start="4:13" pos:end="4:13"><literal type="number" pos:start="4:13" pos:end="4:13">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="5:5" pos:end="8:5">while <condition pos:start="5:11" pos:end="5:13">(<expr pos:start="5:12" pos:end="5:12"><name pos:start="5:12" pos:end="5:12">x</name></expr>)</condition> <block pos:start="5:15" pos:end="8:5">{<block_content pos:start="6:9" pos:end="7:16">
        <expr_stmt pos:start="6:9" pos:end="6:20"><expr pos:start="6:9" pos:end="6:19"><name pos:start="6:9" pos:end="6:9">s</name> <operator pos:start="6:11" pos:end="6:12">+=</operator> <name pos:start="6:14" pos:end="6:14">x</name> <operator pos:start="6:16" pos:end="6:16">%</operator> <literal type="number" pos:start="6:18" pos:end="6:19">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="7:9" pos:end="7:16"><expr pos:start="7:9" pos:end="7:15"><name pos:start="7:9" pos:end="7:9">x</name> <operator pos:start="7:11" pos:end="7:12">/=</operator> <literal type="number" pos:start="7:14" pos:end="7:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="9:5" pos:end="9:13">return <expr pos:start="9:12" pos:end="9:12"><name pos:start="9:12" pos:end="9:12">s</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="11:1" pos:end="17:1"><type pos:start="11:1" pos:end="11:4"><name pos:start="11:1" pos:end="11:4">bool</name></type> <name pos:start="11:6" pos:end="11:8">cmp</name><parameter_list pos:start="11:9" pos:end="11:22">(<parameter pos:start="11:10" pos:end="11:14"><decl pos:start="11:10" pos:end="11:14"><type pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:12">int</name></type> <name pos:start="11:14" pos:end="11:14">x</name></decl></parameter>, <parameter pos:start="11:17" pos:end="11:21"><decl pos:start="11:17" pos:end="11:21"><type pos:start="11:17" pos:end="11:21"><name pos:start="11:17" pos:end="11:19">int</name></type> <name pos:start="11:21" pos:end="11:21">y</name></decl></parameter>)</parameter_list> <block pos:start="11:24" pos:end="17:1">{<block_content pos:start="12:5" pos:end="16:5">
    <if_stmt pos:start="12:5" pos:end="16:5"><if pos:start="12:5" pos:end="14:5">if <condition pos:start="12:8" pos:end="12:25">(<expr pos:start="12:9" pos:end="12:24"><call pos:start="12:9" pos:end="12:14"><name pos:start="12:9" pos:end="12:11">sum</name><argument_list pos:start="12:12" pos:end="12:14">(<argument pos:start="12:13" pos:end="12:13"><expr pos:start="12:13" pos:end="12:13"><name pos:start="12:13" pos:end="12:13">x</name></expr></argument>)</argument_list></call> <operator pos:start="12:16" pos:end="12:17">!=</operator> <call pos:start="12:19" pos:end="12:24"><name pos:start="12:19" pos:end="12:21">sum</name><argument_list pos:start="12:22" pos:end="12:24">(<argument pos:start="12:23" pos:end="12:23"><expr pos:start="12:23" pos:end="12:23"><name pos:start="12:23" pos:end="12:23">y</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="12:27" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:31">
        <return pos:start="13:9" pos:end="13:31">return <expr pos:start="13:16" pos:end="13:30"><call pos:start="13:16" pos:end="13:21"><name pos:start="13:16" pos:end="13:18">sum</name><argument_list pos:start="13:19" pos:end="13:21">(<argument pos:start="13:20" pos:end="13:20"><expr pos:start="13:20" pos:end="13:20"><name pos:start="13:20" pos:end="13:20">x</name></expr></argument>)</argument_list></call> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <call pos:start="13:25" pos:end="13:30"><name pos:start="13:25" pos:end="13:27">sum</name><argument_list pos:start="13:28" pos:end="13:30">(<argument pos:start="13:29" pos:end="13:29"><expr pos:start="13:29" pos:end="13:29"><name pos:start="13:29" pos:end="13:29">y</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if> <else pos:start="14:7" pos:end="16:5">else <block pos:start="14:12" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:21">
        <return pos:start="15:9" pos:end="15:21">return <expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:16">x</name> <operator pos:start="15:18" pos:end="15:18">&lt;</operator> <name pos:start="15:20" pos:end="15:20">y</name></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="18:1" pos:end="30:1"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:8">main</name><parameter_list pos:start="18:9" pos:end="18:10">()</parameter_list> <block pos:start="18:12" pos:end="30:1">{<block_content pos:start="19:5" pos:end="29:13">
    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">string</name></type> <name pos:start="19:12" pos:end="19:17"><name pos:start="19:12" pos:end="19:12">a</name><index pos:start="19:13" pos:end="19:17">[<expr pos:start="19:14" pos:end="19:16"><literal type="number" pos:start="19:14" pos:end="19:16">102</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="20:5" pos:end="20:10"><decl pos:start="20:5" pos:end="20:9"><type pos:start="20:5" pos:end="20:7"><name pos:start="20:5" pos:end="20:7">int</name></type> <name pos:start="20:9" pos:end="20:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:13"><expr pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:7">cin</name> <operator pos:start="21:9" pos:end="21:10">&gt;&gt;</operator> <name pos:start="21:12" pos:end="21:12">n</name></expr>;</expr_stmt>
    <for pos:start="22:5" pos:end="24:5">for <control pos:start="22:9" pos:end="22:31">(<init pos:start="22:10" pos:end="22:19"><decl pos:start="22:10" pos:end="22:18"><type pos:start="22:10" pos:end="22:12"><name pos:start="22:10" pos:end="22:12">int</name></type> <name pos:start="22:14" pos:end="22:14">i</name> <init pos:start="22:16" pos:end="22:18">= <expr pos:start="22:18" pos:end="22:18"><literal type="number" pos:start="22:18" pos:end="22:18">0</literal></expr></init></decl>;</init> <condition pos:start="22:21" pos:end="22:26"><expr pos:start="22:21" pos:end="22:25"><name pos:start="22:21" pos:end="22:21">i</name> <operator pos:start="22:23" pos:end="22:23">&lt;</operator> <name pos:start="22:25" pos:end="22:25">n</name></expr>;</condition> <incr pos:start="22:28" pos:end="22:30"><expr pos:start="22:28" pos:end="22:30"><name pos:start="22:28" pos:end="22:28">i</name><operator pos:start="22:29" pos:end="22:30">++</operator></expr></incr>)</control> <block pos:start="22:33" pos:end="24:5">{<block_content pos:start="23:9" pos:end="23:20">
        <expr_stmt pos:start="23:9" pos:end="23:20"><expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:11">cin</name> <operator pos:start="23:13" pos:end="23:14">&gt;&gt;</operator> <name pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:16">a</name><index pos:start="23:17" pos:end="23:19">[<expr pos:start="23:18" pos:end="23:18"><name pos:start="23:18" pos:end="23:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><call pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:8">sort</name><argument_list pos:start="25:9" pos:end="25:23">(<argument pos:start="25:10" pos:end="25:10"><expr pos:start="25:10" pos:end="25:10"><name pos:start="25:10" pos:end="25:10">a</name></expr></argument>, <argument pos:start="25:13" pos:end="25:17"><expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:13">a</name> <operator pos:start="25:15" pos:end="25:15">+</operator> <name pos:start="25:17" pos:end="25:17">n</name></expr></argument>, <argument pos:start="25:20" pos:end="25:22"><expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="26:5" pos:end="28:5">for <control pos:start="26:9" pos:end="26:31">(<init pos:start="26:10" pos:end="26:19"><decl pos:start="26:10" pos:end="26:18"><type pos:start="26:10" pos:end="26:12"><name pos:start="26:10" pos:end="26:12">int</name></type> <name pos:start="26:14" pos:end="26:14">i</name> <init pos:start="26:16" pos:end="26:18">= <expr pos:start="26:18" pos:end="26:18"><literal type="number" pos:start="26:18" pos:end="26:18">0</literal></expr></init></decl>;</init> <condition pos:start="26:21" pos:end="26:26"><expr pos:start="26:21" pos:end="26:25"><name pos:start="26:21" pos:end="26:21">i</name> <operator pos:start="26:23" pos:end="26:23">&lt;</operator> <name pos:start="26:25" pos:end="26:25">n</name></expr>;</condition> <incr pos:start="26:28" pos:end="26:30"><expr pos:start="26:28" pos:end="26:30"><name pos:start="26:28" pos:end="26:28">i</name><operator pos:start="26:29" pos:end="26:30">++</operator></expr></incr>)</control> <block pos:start="26:33" pos:end="28:5">{<block_content pos:start="27:9" pos:end="27:28">
        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:12">cout</name> <operator pos:start="27:14" pos:end="27:15">&lt;&lt;</operator> <name pos:start="27:17" pos:end="27:20"><name pos:start="27:17" pos:end="27:17">a</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><name pos:start="27:19" pos:end="27:19">i</name></expr>]</index></name> <operator pos:start="27:22" pos:end="27:23">&lt;&lt;</operator> <literal type="string" pos:start="27:25" pos:end="27:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
