<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/500/500.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:27"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:7"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:7">m</name></decl>,<decl pos:start="3:9" pos:end="3:13"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:9" pos:end="3:13"><name pos:start="3:9" pos:end="3:9">a</name><index pos:start="3:10" pos:end="3:13">[<expr pos:start="3:11" pos:end="3:12"><literal type="number" pos:start="3:11" pos:end="3:12">20</literal></expr>]</index></name></decl>,<decl pos:start="3:15" pos:end="3:26"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:15" pos:end="3:18">minn</name><init pos:start="3:19" pos:end="3:26">=<expr pos:start="3:20" pos:end="3:26"><name pos:start="3:20" pos:end="3:26">INT_MAX</name></expr></init></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="16:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">f</name><parameter_list pos:start="4:6" pos:end="4:20">(<parameter pos:start="4:7" pos:end="4:11"><decl pos:start="4:7" pos:end="4:11"><type pos:start="4:7" pos:end="4:11"><name pos:start="4:7" pos:end="4:9">int</name></type> <name pos:start="4:11" pos:end="4:11">u</name></decl></parameter>,<parameter pos:start="4:13" pos:end="4:19"><decl pos:start="4:13" pos:end="4:19"><type pos:start="4:13" pos:end="4:19"><name pos:start="4:13" pos:end="4:15">int</name></type> <name pos:start="4:17" pos:end="4:19">sum</name></decl></parameter>)</parameter_list><block pos:start="4:21" pos:end="16:1">{<block_content pos:start="5:5" pos:end="15:15">
    <if_stmt pos:start="5:5" pos:end="7:5"><if pos:start="5:5" pos:end="7:5">if<condition pos:start="5:7" pos:end="5:14">(<expr pos:start="5:8" pos:end="5:13"><name pos:start="5:8" pos:end="5:10">sum</name><operator pos:start="5:11" pos:end="5:12">==</operator><name pos:start="5:13" pos:end="5:13">m</name></expr>)</condition><block pos:start="5:15" pos:end="7:5">{<block_content pos:start="6:9" pos:end="6:17">
        <return pos:start="6:9" pos:end="6:17">return <expr pos:start="6:16" pos:end="6:16"><literal type="number" pos:start="6:16" pos:end="6:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="8:5" pos:end="10:5"><if pos:start="8:5" pos:end="10:5">if<condition pos:start="8:7" pos:end="8:25">(<expr pos:start="8:8" pos:end="8:24"><name pos:start="8:8" pos:end="8:10">sum</name><operator pos:start="8:11" pos:end="8:11">&gt;</operator><name pos:start="8:12" pos:end="8:12">m</name><operator pos:start="8:13" pos:end="8:14">&amp;&amp;</operator><name pos:start="8:15" pos:end="8:17">sum</name><operator pos:start="8:18" pos:end="8:18">-</operator><name pos:start="8:19" pos:end="8:19">m</name><operator pos:start="8:20" pos:end="8:20">&lt;</operator><name pos:start="8:21" pos:end="8:24">minn</name></expr>)</condition><block pos:start="8:26" pos:end="10:5">{<block_content pos:start="9:9" pos:end="9:19">
        <expr_stmt pos:start="9:9" pos:end="9:19"><expr pos:start="9:9" pos:end="9:18"><name pos:start="9:9" pos:end="9:12">minn</name><operator pos:start="9:13" pos:end="9:13">=</operator><name pos:start="9:14" pos:end="9:16">sum</name><operator pos:start="9:17" pos:end="9:17">-</operator><name pos:start="9:18" pos:end="9:18">m</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="11:5" pos:end="13:5"><if pos:start="11:5" pos:end="13:5">if<condition pos:start="11:7" pos:end="11:12">(<expr pos:start="11:8" pos:end="11:11"><name pos:start="11:8" pos:end="11:8">u</name><operator pos:start="11:9" pos:end="11:10">==</operator><name pos:start="11:11" pos:end="11:11">n</name></expr>)</condition><block pos:start="11:13" pos:end="13:5">{<block_content pos:start="12:9" pos:end="12:20">
        <return pos:start="12:9" pos:end="12:20">return <expr pos:start="12:16" pos:end="12:19"><name pos:start="12:16" pos:end="12:19">minn</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:20"><expr pos:start="14:5" pos:end="14:19"><call pos:start="14:5" pos:end="14:19"><name pos:start="14:5" pos:end="14:5">f</name><argument_list pos:start="14:6" pos:end="14:19">(<argument pos:start="14:7" pos:end="14:9"><expr pos:start="14:7" pos:end="14:9"><name pos:start="14:7" pos:end="14:7">u</name><operator pos:start="14:8" pos:end="14:8">+</operator><literal type="number" pos:start="14:9" pos:end="14:9">1</literal></expr></argument>,<argument pos:start="14:11" pos:end="14:18"><expr pos:start="14:11" pos:end="14:18"><name pos:start="14:11" pos:end="14:13">sum</name><operator pos:start="14:14" pos:end="14:14">+</operator><name pos:start="14:15" pos:end="14:18"><name pos:start="14:15" pos:end="14:15">a</name><index pos:start="14:16" pos:end="14:18">[<expr pos:start="14:17" pos:end="14:17"><name pos:start="14:17" pos:end="14:17">u</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:15"><expr pos:start="15:5" pos:end="15:14"><call pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:5">f</name><argument_list pos:start="15:6" pos:end="15:14">(<argument pos:start="15:7" pos:end="15:9"><expr pos:start="15:7" pos:end="15:9"><name pos:start="15:7" pos:end="15:7">u</name><operator pos:start="15:8" pos:end="15:8">+</operator><literal type="number" pos:start="15:9" pos:end="15:9">1</literal></expr></argument>,<argument pos:start="15:11" pos:end="15:13"><expr pos:start="15:11" pos:end="15:13"><name pos:start="15:11" pos:end="15:13">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="17:1" pos:end="26:1"><type pos:start="17:1" pos:end="17:3"><name pos:start="17:1" pos:end="17:3">int</name></type> <name pos:start="17:5" pos:end="17:8">main</name><parameter_list pos:start="17:9" pos:end="17:10">()</parameter_list><block pos:start="17:11" pos:end="26:1">{<block_content pos:start="18:5" pos:end="25:13">
    <expr_stmt pos:start="18:5" pos:end="18:34"><expr pos:start="18:5" pos:end="18:33"><call pos:start="18:5" pos:end="18:33"><name pos:start="18:5" pos:end="18:11">freopen</name><argument_list pos:start="18:12" pos:end="18:33">(<argument pos:start="18:13" pos:end="18:22"><expr pos:start="18:13" pos:end="18:22"><literal type="string" pos:start="18:13" pos:end="18:22">"shelf.in"</literal></expr></argument>,<argument pos:start="18:24" pos:end="18:26"><expr pos:start="18:24" pos:end="18:26"><literal type="string" pos:start="18:24" pos:end="18:26">"r"</literal></expr></argument>,<argument pos:start="18:28" pos:end="18:32"><expr pos:start="18:28" pos:end="18:32"><name pos:start="18:28" pos:end="18:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><call pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:11">freopen</name><argument_list pos:start="19:12" pos:end="19:35">(<argument pos:start="19:13" pos:end="19:23"><expr pos:start="19:13" pos:end="19:23"><literal type="string" pos:start="19:13" pos:end="19:23">"shelf.out"</literal></expr></argument>,<argument pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><literal type="string" pos:start="19:25" pos:end="19:27">"w"</literal></expr></argument>,<argument pos:start="19:29" pos:end="19:34"><expr pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:14"><expr pos:start="20:5" pos:end="20:13"><name pos:start="20:5" pos:end="20:7">cin</name><operator pos:start="20:8" pos:end="20:9">&gt;&gt;</operator><name pos:start="20:10" pos:end="20:10">n</name><operator pos:start="20:11" pos:end="20:12">&gt;&gt;</operator><name pos:start="20:13" pos:end="20:13">m</name></expr>;</expr_stmt>
    <for pos:start="21:5" pos:end="23:5">for<control pos:start="21:8" pos:end="21:24">(<init pos:start="21:9" pos:end="21:16"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">i</name><init pos:start="21:14" pos:end="21:15">=<expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr></init></decl>;</init><condition pos:start="21:17" pos:end="21:20"><expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:17">i</name><operator pos:start="21:18" pos:end="21:18">&lt;</operator><name pos:start="21:19" pos:end="21:19">n</name></expr>;</condition><incr pos:start="21:21" pos:end="21:23"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:21">i</name><operator pos:start="21:22" pos:end="21:23">++</operator></expr></incr>)</control><block pos:start="21:25" pos:end="23:5">{<block_content pos:start="22:9" pos:end="22:18">
        <expr_stmt pos:start="22:9" pos:end="22:18"><expr pos:start="22:9" pos:end="22:17"><name pos:start="22:9" pos:end="22:11">cin</name><operator pos:start="22:12" pos:end="22:13">&gt;&gt;</operator><name pos:start="22:14" pos:end="22:17"><name pos:start="22:14" pos:end="22:14">a</name><index pos:start="22:15" pos:end="22:17">[<expr pos:start="22:16" pos:end="22:16"><name pos:start="22:16" pos:end="22:16">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="24:5" pos:end="24:17"><expr pos:start="24:5" pos:end="24:16"><name pos:start="24:5" pos:end="24:8">cout</name><operator pos:start="24:9" pos:end="24:10">&lt;&lt;</operator><call pos:start="24:11" pos:end="24:16"><name pos:start="24:11" pos:end="24:11">f</name><argument_list pos:start="24:12" pos:end="24:16">(<argument pos:start="24:13" pos:end="24:13"><expr pos:start="24:13" pos:end="24:13"><literal type="number" pos:start="24:13" pos:end="24:13">0</literal></expr></argument>,<argument pos:start="24:15" pos:end="24:15"><expr pos:start="24:15" pos:end="24:15"><literal type="number" pos:start="24:15" pos:end="24:15">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="25:5" pos:end="25:13">return <expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
