<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/432/432.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:15">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:15">&lt;stack&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<function pos:start="5:1" pos:end="84:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list>
<block pos:start="6:1" pos:end="84:1">{<block_content pos:start="7:5" pos:end="83:13">
    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:11"><expr pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:10">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:9">stack</name><argument_list type="generic" pos:start="9:10" pos:end="9:14">&lt;<argument pos:start="9:11" pos:end="9:13"><expr pos:start="9:11" pos:end="9:13"><name pos:start="9:11" pos:end="9:13">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="9:16" pos:end="9:17">s1</name></decl>,<decl pos:start="9:19" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:14"/><name pos:start="9:19" pos:end="9:20">s2</name></decl>;</decl_stmt>
    <for pos:start="10:5" pos:end="70:5">for<control pos:start="10:8" pos:end="10:24">(<init pos:start="10:9" pos:end="10:16"><decl pos:start="10:9" pos:end="10:15"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">i</name><init pos:start="10:14" pos:end="10:15">=<expr pos:start="10:15" pos:end="10:15"><literal type="number" pos:start="10:15" pos:end="10:15">0</literal></expr></init></decl>;</init><condition pos:start="10:17" pos:end="10:20"><expr pos:start="10:17" pos:end="10:19"><name pos:start="10:17" pos:end="10:17">i</name><operator pos:start="10:18" pos:end="10:18">&lt;</operator><name pos:start="10:19" pos:end="10:19">n</name></expr>;</condition><incr pos:start="10:21" pos:end="10:23"><expr pos:start="10:21" pos:end="10:23"><name pos:start="10:21" pos:end="10:21">i</name><operator pos:start="10:22" pos:end="10:23">++</operator></expr></incr>)</control>
    <block pos:start="11:5" pos:end="70:5">{<block_content pos:start="12:9" pos:end="69:9">
        <decl_stmt pos:start="12:9" pos:end="12:17"><decl pos:start="12:9" pos:end="12:14"><type pos:start="12:9" pos:end="12:12"><name pos:start="12:9" pos:end="12:12">char</name></type> <name pos:start="12:14" pos:end="12:14">c</name></decl>,<decl pos:start="12:16" pos:end="12:16"><type ref="prev" pos:start="12:9" pos:end="12:12"/><name pos:start="12:16" pos:end="12:16">x</name></decl>;</decl_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:18"><expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:11">cin</name><operator pos:start="13:12" pos:end="13:13">&gt;&gt;</operator><name pos:start="13:14" pos:end="13:14">x</name><operator pos:start="13:15" pos:end="13:16">&gt;&gt;</operator><name pos:start="13:17" pos:end="13:17">c</name></expr>;</expr_stmt>
        <if_stmt pos:start="14:9" pos:end="41:9"><if pos:start="14:9" pos:end="41:9">if<condition pos:start="14:11" pos:end="14:18">(<expr pos:start="14:12" pos:end="14:17"><name pos:start="14:12" pos:end="14:12">x</name><operator pos:start="14:13" pos:end="14:14">==</operator><literal type="char" pos:start="14:15" pos:end="14:17">'A'</literal></expr>)</condition>
        <block pos:start="15:9" pos:end="41:9">{<block_content pos:start="16:13" pos:end="40:13">
            <if_stmt pos:start="16:13" pos:end="40:13"><if pos:start="16:13" pos:end="21:13">if<condition pos:start="16:15" pos:end="16:22">(<expr pos:start="16:16" pos:end="16:21"><name pos:start="16:16" pos:end="16:16">c</name><operator pos:start="16:17" pos:end="16:18">==</operator><literal type="char" pos:start="16:19" pos:end="16:21">'I'</literal></expr>)</condition>
            <block pos:start="17:13" pos:end="21:13">{<block_content pos:start="18:17" pos:end="20:30">
                <decl_stmt pos:start="18:17" pos:end="18:25"><decl pos:start="18:17" pos:end="18:24"><type pos:start="18:17" pos:end="18:19"><name pos:start="18:17" pos:end="18:19">int</name></type> <name pos:start="18:21" pos:end="18:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="19:17" pos:end="19:26"><expr pos:start="19:17" pos:end="19:25"><name pos:start="19:17" pos:end="19:19">cin</name><operator pos:start="19:20" pos:end="19:21">&gt;&gt;</operator><name pos:start="19:22" pos:end="19:25">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="20:17" pos:end="20:30"><expr pos:start="20:17" pos:end="20:29"><call pos:start="20:17" pos:end="20:29"><name pos:start="20:17" pos:end="20:23"><name pos:start="20:17" pos:end="20:18">s1</name><operator pos:start="20:19" pos:end="20:19">.</operator><name pos:start="20:20" pos:end="20:23">push</name></name><argument_list pos:start="20:24" pos:end="20:29">(<argument pos:start="20:25" pos:end="20:28"><expr pos:start="20:25" pos:end="20:28"><name pos:start="20:25" pos:end="20:28">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="22:13" pos:end="26:13">else if<condition pos:start="22:20" pos:end="22:27">(<expr pos:start="22:21" pos:end="22:26"><name pos:start="22:21" pos:end="22:21">c</name><operator pos:start="22:22" pos:end="22:23">==</operator><literal type="char" pos:start="22:24" pos:end="22:26">'D'</literal></expr>)</condition>
            <block pos:start="23:13" pos:end="26:13">{<block_content pos:start="24:17" pos:end="25:29">
                <if_stmt pos:start="24:17" pos:end="25:29"><if pos:start="24:17" pos:end="25:29">if<condition pos:start="24:19" pos:end="24:29">(<expr pos:start="24:20" pos:end="24:28"><call pos:start="24:20" pos:end="24:28"><name pos:start="24:20" pos:end="24:26"><name pos:start="24:20" pos:end="24:21">s1</name><operator pos:start="24:22" pos:end="24:22">.</operator><name pos:start="24:23" pos:end="24:26">size</name></name><argument_list pos:start="24:27" pos:end="24:28">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:21" pos:end="25:29"><block_content pos:start="25:21" pos:end="25:29">
                    <expr_stmt pos:start="25:21" pos:end="25:29"><expr pos:start="25:21" pos:end="25:28"><call pos:start="25:21" pos:end="25:28"><name pos:start="25:21" pos:end="25:26"><name pos:start="25:21" pos:end="25:22">s1</name><operator pos:start="25:23" pos:end="25:23">.</operator><name pos:start="25:24" pos:end="25:26">pop</name></name><argument_list pos:start="25:27" pos:end="25:28">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="27:13" pos:end="40:13">else if<condition pos:start="27:20" pos:end="27:27">(<expr pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:21">c</name><operator pos:start="27:22" pos:end="27:23">==</operator><literal type="char" pos:start="27:24" pos:end="27:26">'M'</literal></expr>)</condition>
            <block pos:start="28:13" pos:end="40:13">{<block_content pos:start="29:17" pos:end="39:17">
                <decl_stmt pos:start="29:17" pos:end="29:30"><decl pos:start="29:17" pos:end="29:29"><type pos:start="29:17" pos:end="29:26"><name pos:start="29:17" pos:end="29:26"><name pos:start="29:17" pos:end="29:21">stack</name><argument_list type="generic" pos:start="29:22" pos:end="29:26">&lt;<argument pos:start="29:23" pos:end="29:25"><expr pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:25">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="29:28" pos:end="29:29">s3</name></decl>;</decl_stmt>
                <while pos:start="30:17" pos:end="34:17">while<condition pos:start="30:22" pos:end="30:32">(<expr pos:start="30:23" pos:end="30:31"><call pos:start="30:23" pos:end="30:31"><name pos:start="30:23" pos:end="30:29"><name pos:start="30:23" pos:end="30:24">s2</name><operator pos:start="30:25" pos:end="30:25">.</operator><name pos:start="30:26" pos:end="30:29">size</name></name><argument_list pos:start="30:30" pos:end="30:31">()</argument_list></call></expr>)</condition>
                <block pos:start="31:17" pos:end="34:17">{<block_content pos:start="32:21" pos:end="33:29">
                    <expr_stmt pos:start="32:21" pos:end="32:38"><expr pos:start="32:21" pos:end="32:37"><call pos:start="32:21" pos:end="32:37"><name pos:start="32:21" pos:end="32:27"><name pos:start="32:21" pos:end="32:22">s3</name><operator pos:start="32:23" pos:end="32:23">.</operator><name pos:start="32:24" pos:end="32:27">push</name></name><argument_list pos:start="32:28" pos:end="32:37">(<argument pos:start="32:29" pos:end="32:36"><expr pos:start="32:29" pos:end="32:36"><call pos:start="32:29" pos:end="32:36"><name pos:start="32:29" pos:end="32:34"><name pos:start="32:29" pos:end="32:30">s2</name><operator pos:start="32:31" pos:end="32:31">.</operator><name pos:start="32:32" pos:end="32:34">top</name></name><argument_list pos:start="32:35" pos:end="32:36">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="33:21" pos:end="33:29"><expr pos:start="33:21" pos:end="33:28"><call pos:start="33:21" pos:end="33:28"><name pos:start="33:21" pos:end="33:26"><name pos:start="33:21" pos:end="33:22">s2</name><operator pos:start="33:23" pos:end="33:23">.</operator><name pos:start="33:24" pos:end="33:26">pop</name></name><argument_list pos:start="33:27" pos:end="33:28">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="35:17" pos:end="39:17">while<condition pos:start="35:22" pos:end="35:32">(<expr pos:start="35:23" pos:end="35:31"><call pos:start="35:23" pos:end="35:31"><name pos:start="35:23" pos:end="35:29"><name pos:start="35:23" pos:end="35:24">s3</name><operator pos:start="35:25" pos:end="35:25">.</operator><name pos:start="35:26" pos:end="35:29">size</name></name><argument_list pos:start="35:30" pos:end="35:31">()</argument_list></call></expr>)</condition>
                <block pos:start="36:17" pos:end="39:17">{<block_content pos:start="37:21" pos:end="38:29">
                    <expr_stmt pos:start="37:21" pos:end="37:38"><expr pos:start="37:21" pos:end="37:37"><call pos:start="37:21" pos:end="37:37"><name pos:start="37:21" pos:end="37:27"><name pos:start="37:21" pos:end="37:22">s1</name><operator pos:start="37:23" pos:end="37:23">.</operator><name pos:start="37:24" pos:end="37:27">push</name></name><argument_list pos:start="37:28" pos:end="37:37">(<argument pos:start="37:29" pos:end="37:36"><expr pos:start="37:29" pos:end="37:36"><call pos:start="37:29" pos:end="37:36"><name pos:start="37:29" pos:end="37:34"><name pos:start="37:29" pos:end="37:30">s3</name><operator pos:start="37:31" pos:end="37:31">.</operator><name pos:start="37:32" pos:end="37:34">top</name></name><argument_list pos:start="37:35" pos:end="37:36">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="38:21" pos:end="38:29"><expr pos:start="38:21" pos:end="38:28"><call pos:start="38:21" pos:end="38:28"><name pos:start="38:21" pos:end="38:26"><name pos:start="38:21" pos:end="38:22">s3</name><operator pos:start="38:23" pos:end="38:23">.</operator><name pos:start="38:24" pos:end="38:26">pop</name></name><argument_list pos:start="38:27" pos:end="38:28">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="42:9" pos:end="69:9"><if pos:start="42:9" pos:end="69:9">if<condition pos:start="42:11" pos:end="42:18">(<expr pos:start="42:12" pos:end="42:17"><name pos:start="42:12" pos:end="42:12">x</name><operator pos:start="42:13" pos:end="42:14">==</operator><literal type="char" pos:start="42:15" pos:end="42:17">'B'</literal></expr>)</condition>
        <block pos:start="43:9" pos:end="69:9">{<block_content pos:start="44:13" pos:end="68:13">
            <if_stmt pos:start="44:13" pos:end="68:13"><if pos:start="44:13" pos:end="49:13">if<condition pos:start="44:15" pos:end="44:22">(<expr pos:start="44:16" pos:end="44:21"><name pos:start="44:16" pos:end="44:16">c</name><operator pos:start="44:17" pos:end="44:18">==</operator><literal type="char" pos:start="44:19" pos:end="44:21">'I'</literal></expr>)</condition>
            <block pos:start="45:13" pos:end="49:13">{<block_content pos:start="46:17" pos:end="48:30">
                <decl_stmt pos:start="46:17" pos:end="46:25"><decl pos:start="46:17" pos:end="46:24"><type pos:start="46:17" pos:end="46:19"><name pos:start="46:17" pos:end="46:19">int</name></type> <name pos:start="46:21" pos:end="46:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="47:17" pos:end="47:26"><expr pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:19">cin</name><operator pos:start="47:20" pos:end="47:21">&gt;&gt;</operator><name pos:start="47:22" pos:end="47:25">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="48:17" pos:end="48:30"><expr pos:start="48:17" pos:end="48:29"><call pos:start="48:17" pos:end="48:29"><name pos:start="48:17" pos:end="48:23"><name pos:start="48:17" pos:end="48:18">s2</name><operator pos:start="48:19" pos:end="48:19">.</operator><name pos:start="48:20" pos:end="48:23">push</name></name><argument_list pos:start="48:24" pos:end="48:29">(<argument pos:start="48:25" pos:end="48:28"><expr pos:start="48:25" pos:end="48:28"><name pos:start="48:25" pos:end="48:28">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="50:13" pos:end="54:13">else if<condition pos:start="50:20" pos:end="50:27">(<expr pos:start="50:21" pos:end="50:26"><name pos:start="50:21" pos:end="50:21">c</name><operator pos:start="50:22" pos:end="50:23">==</operator><literal type="char" pos:start="50:24" pos:end="50:26">'D'</literal></expr>)</condition>
            <block pos:start="51:13" pos:end="54:13">{<block_content pos:start="52:17" pos:end="53:29">
                <if_stmt pos:start="52:17" pos:end="53:29"><if pos:start="52:17" pos:end="53:29">if<condition pos:start="52:19" pos:end="52:29">(<expr pos:start="52:20" pos:end="52:28"><call pos:start="52:20" pos:end="52:28"><name pos:start="52:20" pos:end="52:26"><name pos:start="52:20" pos:end="52:21">s2</name><operator pos:start="52:22" pos:end="52:22">.</operator><name pos:start="52:23" pos:end="52:26">size</name></name><argument_list pos:start="52:27" pos:end="52:28">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:21" pos:end="53:29"><block_content pos:start="53:21" pos:end="53:29">
                    <expr_stmt pos:start="53:21" pos:end="53:29"><expr pos:start="53:21" pos:end="53:28"><call pos:start="53:21" pos:end="53:28"><name pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:22">s2</name><operator pos:start="53:23" pos:end="53:23">.</operator><name pos:start="53:24" pos:end="53:26">pop</name></name><argument_list pos:start="53:27" pos:end="53:28">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="55:13" pos:end="68:13">else if<condition pos:start="55:20" pos:end="55:27">(<expr pos:start="55:21" pos:end="55:26"><name pos:start="55:21" pos:end="55:21">c</name><operator pos:start="55:22" pos:end="55:23">==</operator><literal type="char" pos:start="55:24" pos:end="55:26">'M'</literal></expr>)</condition>
            <block pos:start="56:13" pos:end="68:13">{<block_content pos:start="57:17" pos:end="67:17">
                <decl_stmt pos:start="57:17" pos:end="57:30"><decl pos:start="57:17" pos:end="57:29"><type pos:start="57:17" pos:end="57:26"><name pos:start="57:17" pos:end="57:26"><name pos:start="57:17" pos:end="57:21">stack</name><argument_list type="generic" pos:start="57:22" pos:end="57:26">&lt;<argument pos:start="57:23" pos:end="57:25"><expr pos:start="57:23" pos:end="57:25"><name pos:start="57:23" pos:end="57:25">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="57:28" pos:end="57:29">s3</name></decl>;</decl_stmt>
                <while pos:start="58:17" pos:end="62:17">while<condition pos:start="58:22" pos:end="58:32">(<expr pos:start="58:23" pos:end="58:31"><call pos:start="58:23" pos:end="58:31"><name pos:start="58:23" pos:end="58:29"><name pos:start="58:23" pos:end="58:24">s1</name><operator pos:start="58:25" pos:end="58:25">.</operator><name pos:start="58:26" pos:end="58:29">size</name></name><argument_list pos:start="58:30" pos:end="58:31">()</argument_list></call></expr>)</condition>
                <block pos:start="59:17" pos:end="62:17">{<block_content pos:start="60:21" pos:end="61:29">
                    <expr_stmt pos:start="60:21" pos:end="60:38"><expr pos:start="60:21" pos:end="60:37"><call pos:start="60:21" pos:end="60:37"><name pos:start="60:21" pos:end="60:27"><name pos:start="60:21" pos:end="60:22">s3</name><operator pos:start="60:23" pos:end="60:23">.</operator><name pos:start="60:24" pos:end="60:27">push</name></name><argument_list pos:start="60:28" pos:end="60:37">(<argument pos:start="60:29" pos:end="60:36"><expr pos:start="60:29" pos:end="60:36"><call pos:start="60:29" pos:end="60:36"><name pos:start="60:29" pos:end="60:34"><name pos:start="60:29" pos:end="60:30">s1</name><operator pos:start="60:31" pos:end="60:31">.</operator><name pos:start="60:32" pos:end="60:34">top</name></name><argument_list pos:start="60:35" pos:end="60:36">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="61:21" pos:end="61:29"><expr pos:start="61:21" pos:end="61:28"><call pos:start="61:21" pos:end="61:28"><name pos:start="61:21" pos:end="61:26"><name pos:start="61:21" pos:end="61:22">s1</name><operator pos:start="61:23" pos:end="61:23">.</operator><name pos:start="61:24" pos:end="61:26">pop</name></name><argument_list pos:start="61:27" pos:end="61:28">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="63:17" pos:end="67:17">while<condition pos:start="63:22" pos:end="63:32">(<expr pos:start="63:23" pos:end="63:31"><call pos:start="63:23" pos:end="63:31"><name pos:start="63:23" pos:end="63:29"><name pos:start="63:23" pos:end="63:24">s3</name><operator pos:start="63:25" pos:end="63:25">.</operator><name pos:start="63:26" pos:end="63:29">size</name></name><argument_list pos:start="63:30" pos:end="63:31">()</argument_list></call></expr>)</condition>
                <block pos:start="64:17" pos:end="67:17">{<block_content pos:start="65:21" pos:end="66:29">
                    <expr_stmt pos:start="65:21" pos:end="65:38"><expr pos:start="65:21" pos:end="65:37"><call pos:start="65:21" pos:end="65:37"><name pos:start="65:21" pos:end="65:27"><name pos:start="65:21" pos:end="65:22">s2</name><operator pos:start="65:23" pos:end="65:23">.</operator><name pos:start="65:24" pos:end="65:27">push</name></name><argument_list pos:start="65:28" pos:end="65:37">(<argument pos:start="65:29" pos:end="65:36"><expr pos:start="65:29" pos:end="65:36"><call pos:start="65:29" pos:end="65:36"><name pos:start="65:29" pos:end="65:34"><name pos:start="65:29" pos:end="65:30">s3</name><operator pos:start="65:31" pos:end="65:31">.</operator><name pos:start="65:32" pos:end="65:34">top</name></name><argument_list pos:start="65:35" pos:end="65:36">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="66:21" pos:end="66:29"><expr pos:start="66:21" pos:end="66:28"><call pos:start="66:21" pos:end="66:28"><name pos:start="66:21" pos:end="66:26"><name pos:start="66:21" pos:end="66:22">s3</name><operator pos:start="66:23" pos:end="66:23">.</operator><name pos:start="66:24" pos:end="66:26">pop</name></name><argument_list pos:start="66:27" pos:end="66:28">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <while pos:start="71:5" pos:end="75:5">while<condition pos:start="71:10" pos:end="71:20">(<expr pos:start="71:11" pos:end="71:19"><call pos:start="71:11" pos:end="71:19"><name pos:start="71:11" pos:end="71:17"><name pos:start="71:11" pos:end="71:12">s1</name><operator pos:start="71:13" pos:end="71:13">.</operator><name pos:start="71:14" pos:end="71:17">size</name></name><argument_list pos:start="71:18" pos:end="71:19">()</argument_list></call></expr>)</condition>
    <block pos:start="72:5" pos:end="75:5">{<block_content pos:start="73:9" pos:end="74:17">
        <expr_stmt pos:start="73:9" pos:end="73:28"><expr pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:12">cout</name><operator pos:start="73:13" pos:end="73:14">&lt;&lt;</operator><call pos:start="73:15" pos:end="73:22"><name pos:start="73:15" pos:end="73:20"><name pos:start="73:15" pos:end="73:16">s1</name><operator pos:start="73:17" pos:end="73:17">.</operator><name pos:start="73:18" pos:end="73:20">top</name></name><argument_list pos:start="73:21" pos:end="73:22">()</argument_list></call><operator pos:start="73:23" pos:end="73:24">&lt;&lt;</operator><literal type="string" pos:start="73:25" pos:end="73:27">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="74:9" pos:end="74:17"><expr pos:start="74:9" pos:end="74:16"><call pos:start="74:9" pos:end="74:16"><name pos:start="74:9" pos:end="74:14"><name pos:start="74:9" pos:end="74:10">s1</name><operator pos:start="74:11" pos:end="74:11">.</operator><name pos:start="74:12" pos:end="74:14">pop</name></name><argument_list pos:start="74:15" pos:end="74:16">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="76:5" pos:end="76:15"><expr pos:start="76:5" pos:end="76:14"><name pos:start="76:5" pos:end="76:8">cout</name><operator pos:start="76:9" pos:end="76:10">&lt;&lt;</operator><name pos:start="76:11" pos:end="76:14">endl</name></expr>;</expr_stmt>
    <while pos:start="77:5" pos:end="81:5">while<condition pos:start="77:10" pos:end="77:20">(<expr pos:start="77:11" pos:end="77:19"><call pos:start="77:11" pos:end="77:19"><name pos:start="77:11" pos:end="77:17"><name pos:start="77:11" pos:end="77:12">s2</name><operator pos:start="77:13" pos:end="77:13">.</operator><name pos:start="77:14" pos:end="77:17">size</name></name><argument_list pos:start="77:18" pos:end="77:19">()</argument_list></call></expr>)</condition>
    <block pos:start="78:5" pos:end="81:5">{<block_content pos:start="79:9" pos:end="80:17">
        <expr_stmt pos:start="79:9" pos:end="79:28"><expr pos:start="79:9" pos:end="79:27"><name pos:start="79:9" pos:end="79:12">cout</name><operator pos:start="79:13" pos:end="79:14">&lt;&lt;</operator><call pos:start="79:15" pos:end="79:22"><name pos:start="79:15" pos:end="79:20"><name pos:start="79:15" pos:end="79:16">s2</name><operator pos:start="79:17" pos:end="79:17">.</operator><name pos:start="79:18" pos:end="79:20">top</name></name><argument_list pos:start="79:21" pos:end="79:22">()</argument_list></call><operator pos:start="79:23" pos:end="79:24">&lt;&lt;</operator><literal type="string" pos:start="79:25" pos:end="79:27">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="80:9" pos:end="80:17"><expr pos:start="80:9" pos:end="80:16"><call pos:start="80:9" pos:end="80:16"><name pos:start="80:9" pos:end="80:14"><name pos:start="80:9" pos:end="80:10">s1</name><operator pos:start="80:11" pos:end="80:11">.</operator><name pos:start="80:12" pos:end="80:14">pop</name></name><argument_list pos:start="80:15" pos:end="80:16">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="82:5" pos:end="82:15"><expr pos:start="82:5" pos:end="82:14"><name pos:start="82:5" pos:end="82:8">cout</name><operator pos:start="82:9" pos:end="82:10">&lt;&lt;</operator><name pos:start="82:11" pos:end="82:14">endl</name></expr>;</expr_stmt>
    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
