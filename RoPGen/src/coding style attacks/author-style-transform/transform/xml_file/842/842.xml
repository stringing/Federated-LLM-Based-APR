<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/842/842.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:15">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:15">&lt;stack&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="95:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="95:1">{<block_content pos:start="5:5" pos:end="94:13">
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:11"><expr pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:7">cin</name><operator pos:start="6:8" pos:end="6:9">&gt;&gt;</operator><name pos:start="6:10" pos:end="6:10">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:9">stack</name><argument_list type="generic" pos:start="7:10" pos:end="7:14">&lt;<argument pos:start="7:11" pos:end="7:13"><expr pos:start="7:11" pos:end="7:13"><name pos:start="7:11" pos:end="7:13">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="7:16" pos:end="7:16">a</name></decl>,<decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:14"/><name pos:start="7:18" pos:end="7:18">b</name></decl>;</decl_stmt>
    <while pos:start="8:5" pos:end="72:6">while<condition pos:start="8:10" pos:end="8:14">(<expr pos:start="8:11" pos:end="8:13"><name pos:start="8:11" pos:end="8:11">n</name><operator pos:start="8:12" pos:end="8:13">--</operator></expr>)</condition>
    <block pos:start="9:5" pos:end="72:6">{<block_content pos:start="10:9" pos:end="71:9">
        <decl_stmt pos:start="10:9" pos:end="10:15"><decl pos:start="10:9" pos:end="10:14"><type pos:start="10:9" pos:end="10:12"><name pos:start="10:9" pos:end="10:12">char</name></type> <name pos:start="10:14" pos:end="10:14">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:15"><expr pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:11">cin</name><operator pos:start="11:12" pos:end="11:13">&gt;&gt;</operator><name pos:start="11:14" pos:end="11:14">s</name></expr>;</expr_stmt>
        <if_stmt pos:start="12:9" pos:end="71:9"><if pos:start="12:9" pos:end="41:9">if<condition pos:start="12:11" pos:end="12:18">(<expr pos:start="12:12" pos:end="12:17"><name pos:start="12:12" pos:end="12:12">s</name><operator pos:start="12:13" pos:end="12:14">==</operator><literal type="char" pos:start="12:15" pos:end="12:17">'A'</literal></expr>)</condition>
        <block pos:start="13:9" pos:end="41:9">{<block_content pos:start="14:13" pos:end="40:13">
            <decl_stmt pos:start="14:13" pos:end="14:19"><decl pos:start="14:13" pos:end="14:18"><type pos:start="14:13" pos:end="14:16"><name pos:start="14:13" pos:end="14:16">char</name></type> <name pos:start="14:18" pos:end="14:18">x</name></decl>;</decl_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:19"><expr pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:15">cin</name><operator pos:start="15:16" pos:end="15:17">&gt;&gt;</operator><name pos:start="15:18" pos:end="15:18">x</name></expr>;</expr_stmt>
            <if_stmt pos:start="16:13" pos:end="40:13"><if pos:start="16:13" pos:end="21:13">if<condition pos:start="16:15" pos:end="16:22">(<expr pos:start="16:16" pos:end="16:21"><name pos:start="16:16" pos:end="16:16">x</name><operator pos:start="16:17" pos:end="16:18">==</operator><literal type="char" pos:start="16:19" pos:end="16:21">'I'</literal></expr>)</condition>
            <block pos:start="17:13" pos:end="21:13">{<block_content pos:start="18:17" pos:end="20:29">
                <decl_stmt pos:start="18:17" pos:end="18:25"><decl pos:start="18:17" pos:end="18:24"><type pos:start="18:17" pos:end="18:19"><name pos:start="18:17" pos:end="18:19">int</name></type> <name pos:start="18:21" pos:end="18:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="19:17" pos:end="19:26"><expr pos:start="19:17" pos:end="19:25"><name pos:start="19:17" pos:end="19:19">cin</name><operator pos:start="19:20" pos:end="19:21">&gt;&gt;</operator><name pos:start="19:22" pos:end="19:25">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="20:17" pos:end="20:29"><expr pos:start="20:17" pos:end="20:28"><call pos:start="20:17" pos:end="20:28"><name pos:start="20:17" pos:end="20:22"><name pos:start="20:17" pos:end="20:17">a</name><operator pos:start="20:18" pos:end="20:18">.</operator><name pos:start="20:19" pos:end="20:22">push</name></name><argument_list pos:start="20:23" pos:end="20:28">(<argument pos:start="20:24" pos:end="20:27"><expr pos:start="20:24" pos:end="20:27"><name pos:start="20:24" pos:end="20:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="22:13" pos:end="28:13">else if<condition pos:start="22:20" pos:end="22:27">(<expr pos:start="22:21" pos:end="22:26"><name pos:start="22:21" pos:end="22:21">x</name><operator pos:start="22:22" pos:end="22:23">==</operator><literal type="char" pos:start="22:24" pos:end="22:26">'D'</literal></expr>)</condition>
            <block pos:start="23:13" pos:end="28:13">{<block_content pos:start="24:17" pos:end="27:17">
                <if_stmt pos:start="24:17" pos:end="27:17"><if pos:start="24:17" pos:end="27:17">if<condition pos:start="24:19" pos:end="24:30">(<expr pos:start="24:20" pos:end="24:29"><operator pos:start="24:20" pos:end="24:20">!</operator><call pos:start="24:21" pos:end="24:29"><name pos:start="24:21" pos:end="24:27"><name pos:start="24:21" pos:end="24:21">a</name><operator pos:start="24:22" pos:end="24:22">.</operator><name pos:start="24:23" pos:end="24:27">empty</name></name><argument_list pos:start="24:28" pos:end="24:29">()</argument_list></call></expr>)</condition>
                <block pos:start="25:17" pos:end="27:17">{<block_content pos:start="26:21" pos:end="26:28">
                    <expr_stmt pos:start="26:21" pos:end="26:28"><expr pos:start="26:21" pos:end="26:27"><call pos:start="26:21" pos:end="26:27"><name pos:start="26:21" pos:end="26:25"><name pos:start="26:21" pos:end="26:21">a</name><operator pos:start="26:22" pos:end="26:22">.</operator><name pos:start="26:23" pos:end="26:25">pop</name></name><argument_list pos:start="26:26" pos:end="26:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if>
            <else pos:start="29:13" pos:end="40:13">else
            <block pos:start="30:13" pos:end="40:13">{<block_content pos:start="31:17" pos:end="39:17">
                <decl_stmt pos:start="31:17" pos:end="31:29"><decl pos:start="31:17" pos:end="31:28"><type pos:start="31:17" pos:end="31:26"><name pos:start="31:17" pos:end="31:26"><name pos:start="31:17" pos:end="31:21">stack</name><argument_list type="generic" pos:start="31:22" pos:end="31:26">&lt;<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="31:28" pos:end="31:28">c</name></decl>;</decl_stmt>
                <while pos:start="32:17" pos:end="35:17">while<condition pos:start="32:22" pos:end="32:33">(<expr pos:start="32:23" pos:end="32:32"><operator pos:start="32:23" pos:end="32:23">!</operator><call pos:start="32:24" pos:end="32:32"><name pos:start="32:24" pos:end="32:30"><name pos:start="32:24" pos:end="32:24">b</name><operator pos:start="32:25" pos:end="32:25">.</operator><name pos:start="32:26" pos:end="32:30">empty</name></name><argument_list pos:start="32:31" pos:end="32:32">()</argument_list></call></expr>)</condition>
                <block pos:start="33:17" pos:end="35:17">{<block_content pos:start="34:21" pos:end="34:36">
                    <expr_stmt pos:start="34:21" pos:end="34:36"><expr pos:start="34:21" pos:end="34:35"><call pos:start="34:21" pos:end="34:35"><name pos:start="34:21" pos:end="34:26"><name pos:start="34:21" pos:end="34:21">c</name><operator pos:start="34:22" pos:end="34:22">.</operator><name pos:start="34:23" pos:end="34:26">push</name></name><argument_list pos:start="34:27" pos:end="34:35">(<argument pos:start="34:28" pos:end="34:34"><expr pos:start="34:28" pos:end="34:34"><call pos:start="34:28" pos:end="34:34"><name pos:start="34:28" pos:end="34:32"><name pos:start="34:28" pos:end="34:28">b</name><operator pos:start="34:29" pos:end="34:29">.</operator><name pos:start="34:30" pos:end="34:32">top</name></name><argument_list pos:start="34:33" pos:end="34:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="36:17" pos:end="39:17">while<condition pos:start="36:22" pos:end="36:33">(<expr pos:start="36:23" pos:end="36:32"><operator pos:start="36:23" pos:end="36:23">!</operator><call pos:start="36:24" pos:end="36:32"><name pos:start="36:24" pos:end="36:30"><name pos:start="36:24" pos:end="36:24">c</name><operator pos:start="36:25" pos:end="36:25">.</operator><name pos:start="36:26" pos:end="36:30">empty</name></name><argument_list pos:start="36:31" pos:end="36:32">()</argument_list></call></expr>)</condition>
                <block pos:start="37:17" pos:end="39:17">{<block_content pos:start="38:21" pos:end="38:36">
                    <expr_stmt pos:start="38:21" pos:end="38:36"><expr pos:start="38:21" pos:end="38:35"><call pos:start="38:21" pos:end="38:35"><name pos:start="38:21" pos:end="38:26"><name pos:start="38:21" pos:end="38:21">a</name><operator pos:start="38:22" pos:end="38:22">.</operator><name pos:start="38:23" pos:end="38:26">push</name></name><argument_list pos:start="38:27" pos:end="38:35">(<argument pos:start="38:28" pos:end="38:34"><expr pos:start="38:28" pos:end="38:34"><call pos:start="38:28" pos:end="38:34"><name pos:start="38:28" pos:end="38:32"><name pos:start="38:28" pos:end="38:28">c</name><operator pos:start="38:29" pos:end="38:29">.</operator><name pos:start="38:30" pos:end="38:32">top</name></name><argument_list pos:start="38:33" pos:end="38:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if>
        <else pos:start="42:9" pos:end="71:9">else
        <block pos:start="43:9" pos:end="71:9">{<block_content pos:start="44:13" pos:end="70:13">
            <decl_stmt pos:start="44:13" pos:end="44:19"><decl pos:start="44:13" pos:end="44:18"><type pos:start="44:13" pos:end="44:16"><name pos:start="44:13" pos:end="44:16">char</name></type> <name pos:start="44:18" pos:end="44:18">x</name></decl>;</decl_stmt>
            <expr_stmt pos:start="45:13" pos:end="45:19"><expr pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:15">cin</name><operator pos:start="45:16" pos:end="45:17">&gt;&gt;</operator><name pos:start="45:18" pos:end="45:18">x</name></expr>;</expr_stmt>
            <if_stmt pos:start="46:13" pos:end="70:13"><if pos:start="46:13" pos:end="51:13">if<condition pos:start="46:15" pos:end="46:22">(<expr pos:start="46:16" pos:end="46:21"><name pos:start="46:16" pos:end="46:16">x</name><operator pos:start="46:17" pos:end="46:18">==</operator><literal type="char" pos:start="46:19" pos:end="46:21">'I'</literal></expr>)</condition>
            <block pos:start="47:13" pos:end="51:13">{<block_content pos:start="48:17" pos:end="50:29">
                <decl_stmt pos:start="48:17" pos:end="48:25"><decl pos:start="48:17" pos:end="48:24"><type pos:start="48:17" pos:end="48:19"><name pos:start="48:17" pos:end="48:19">int</name></type> <name pos:start="48:21" pos:end="48:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="49:17" pos:end="49:26"><expr pos:start="49:17" pos:end="49:25"><name pos:start="49:17" pos:end="49:19">cin</name><operator pos:start="49:20" pos:end="49:21">&gt;&gt;</operator><name pos:start="49:22" pos:end="49:25">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="50:17" pos:end="50:29"><expr pos:start="50:17" pos:end="50:28"><call pos:start="50:17" pos:end="50:28"><name pos:start="50:17" pos:end="50:22"><name pos:start="50:17" pos:end="50:17">b</name><operator pos:start="50:18" pos:end="50:18">.</operator><name pos:start="50:19" pos:end="50:22">push</name></name><argument_list pos:start="50:23" pos:end="50:28">(<argument pos:start="50:24" pos:end="50:27"><expr pos:start="50:24" pos:end="50:27"><name pos:start="50:24" pos:end="50:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="52:13" pos:end="58:13">else if<condition pos:start="52:20" pos:end="52:27">(<expr pos:start="52:21" pos:end="52:26"><name pos:start="52:21" pos:end="52:21">x</name><operator pos:start="52:22" pos:end="52:23">==</operator><literal type="char" pos:start="52:24" pos:end="52:26">'D'</literal></expr>)</condition>
            <block pos:start="53:13" pos:end="58:13">{<block_content pos:start="54:17" pos:end="57:17">
                <if_stmt pos:start="54:17" pos:end="57:17"><if pos:start="54:17" pos:end="57:17">if<condition pos:start="54:19" pos:end="54:30">(<expr pos:start="54:20" pos:end="54:29"><operator pos:start="54:20" pos:end="54:20">!</operator><call pos:start="54:21" pos:end="54:29"><name pos:start="54:21" pos:end="54:27"><name pos:start="54:21" pos:end="54:21">b</name><operator pos:start="54:22" pos:end="54:22">.</operator><name pos:start="54:23" pos:end="54:27">empty</name></name><argument_list pos:start="54:28" pos:end="54:29">()</argument_list></call></expr>)</condition>
                <block pos:start="55:17" pos:end="57:17">{<block_content pos:start="56:21" pos:end="56:28">
                    <expr_stmt pos:start="56:21" pos:end="56:28"><expr pos:start="56:21" pos:end="56:27"><call pos:start="56:21" pos:end="56:27"><name pos:start="56:21" pos:end="56:25"><name pos:start="56:21" pos:end="56:21">b</name><operator pos:start="56:22" pos:end="56:22">.</operator><name pos:start="56:23" pos:end="56:25">pop</name></name><argument_list pos:start="56:26" pos:end="56:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if>
            <else pos:start="59:13" pos:end="70:13">else
            <block pos:start="60:13" pos:end="70:13">{<block_content pos:start="61:17" pos:end="69:17">
                <decl_stmt pos:start="61:17" pos:end="61:29"><decl pos:start="61:17" pos:end="61:28"><type pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:21">stack</name><argument_list type="generic" pos:start="61:22" pos:end="61:26">&lt;<argument pos:start="61:23" pos:end="61:25"><expr pos:start="61:23" pos:end="61:25"><name pos:start="61:23" pos:end="61:25">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="61:28" pos:end="61:28">c</name></decl>;</decl_stmt>
                <while pos:start="62:17" pos:end="65:17">while<condition pos:start="62:22" pos:end="62:33">(<expr pos:start="62:23" pos:end="62:32"><operator pos:start="62:23" pos:end="62:23">!</operator><call pos:start="62:24" pos:end="62:32"><name pos:start="62:24" pos:end="62:30"><name pos:start="62:24" pos:end="62:24">a</name><operator pos:start="62:25" pos:end="62:25">.</operator><name pos:start="62:26" pos:end="62:30">empty</name></name><argument_list pos:start="62:31" pos:end="62:32">()</argument_list></call></expr>)</condition>
                <block pos:start="63:17" pos:end="65:17">{<block_content pos:start="64:21" pos:end="64:36">
                    <expr_stmt pos:start="64:21" pos:end="64:36"><expr pos:start="64:21" pos:end="64:35"><call pos:start="64:21" pos:end="64:35"><name pos:start="64:21" pos:end="64:26"><name pos:start="64:21" pos:end="64:21">c</name><operator pos:start="64:22" pos:end="64:22">.</operator><name pos:start="64:23" pos:end="64:26">push</name></name><argument_list pos:start="64:27" pos:end="64:35">(<argument pos:start="64:28" pos:end="64:34"><expr pos:start="64:28" pos:end="64:34"><call pos:start="64:28" pos:end="64:34"><name pos:start="64:28" pos:end="64:32"><name pos:start="64:28" pos:end="64:28">a</name><operator pos:start="64:29" pos:end="64:29">.</operator><name pos:start="64:30" pos:end="64:32">top</name></name><argument_list pos:start="64:33" pos:end="64:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="66:17" pos:end="69:17">while<condition pos:start="66:22" pos:end="66:33">(<expr pos:start="66:23" pos:end="66:32"><operator pos:start="66:23" pos:end="66:23">!</operator><call pos:start="66:24" pos:end="66:32"><name pos:start="66:24" pos:end="66:30"><name pos:start="66:24" pos:end="66:24">c</name><operator pos:start="66:25" pos:end="66:25">.</operator><name pos:start="66:26" pos:end="66:30">empty</name></name><argument_list pos:start="66:31" pos:end="66:32">()</argument_list></call></expr>)</condition>
                <block pos:start="67:17" pos:end="69:17">{<block_content pos:start="68:21" pos:end="68:36">
                    <expr_stmt pos:start="68:21" pos:end="68:36"><expr pos:start="68:21" pos:end="68:35"><call pos:start="68:21" pos:end="68:35"><name pos:start="68:21" pos:end="68:26"><name pos:start="68:21" pos:end="68:21">b</name><operator pos:start="68:22" pos:end="68:22">.</operator><name pos:start="68:23" pos:end="68:26">push</name></name><argument_list pos:start="68:27" pos:end="68:35">(<argument pos:start="68:28" pos:end="68:34"><expr pos:start="68:28" pos:end="68:34"><call pos:start="68:28" pos:end="68:34"><name pos:start="68:28" pos:end="68:32"><name pos:start="68:28" pos:end="68:28">c</name><operator pos:start="68:29" pos:end="68:29">.</operator><name pos:start="68:30" pos:end="68:32">top</name></name><argument_list pos:start="68:33" pos:end="68:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></else></if_stmt>
     </block_content>}</block></while>
    <decl_stmt pos:start="73:5" pos:end="73:17"><decl pos:start="73:5" pos:end="73:16"><type pos:start="73:5" pos:end="73:14"><name pos:start="73:5" pos:end="73:14"><name pos:start="73:5" pos:end="73:9">stack</name><argument_list type="generic" pos:start="73:10" pos:end="73:14">&lt;<argument pos:start="73:11" pos:end="73:13"><expr pos:start="73:11" pos:end="73:13"><name pos:start="73:11" pos:end="73:13">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="73:16" pos:end="73:16">c</name></decl>;</decl_stmt>
    <while pos:start="74:5" pos:end="77:5">while<condition pos:start="74:10" pos:end="74:21">(<expr pos:start="74:11" pos:end="74:20"><operator pos:start="74:11" pos:end="74:11">!</operator><call pos:start="74:12" pos:end="74:20"><name pos:start="74:12" pos:end="74:18"><name pos:start="74:12" pos:end="74:12">a</name><operator pos:start="74:13" pos:end="74:13">.</operator><name pos:start="74:14" pos:end="74:18">empty</name></name><argument_list pos:start="74:19" pos:end="74:20">()</argument_list></call></expr>)</condition>
    <block pos:start="75:5" pos:end="77:5">{<block_content pos:start="76:9" pos:end="76:24">
        <expr_stmt pos:start="76:9" pos:end="76:24"><expr pos:start="76:9" pos:end="76:23"><call pos:start="76:9" pos:end="76:23"><name pos:start="76:9" pos:end="76:14"><name pos:start="76:9" pos:end="76:9">c</name><operator pos:start="76:10" pos:end="76:10">.</operator><name pos:start="76:11" pos:end="76:14">push</name></name><argument_list pos:start="76:15" pos:end="76:23">(<argument pos:start="76:16" pos:end="76:22"><expr pos:start="76:16" pos:end="76:22"><call pos:start="76:16" pos:end="76:22"><name pos:start="76:16" pos:end="76:20"><name pos:start="76:16" pos:end="76:16">a</name><operator pos:start="76:17" pos:end="76:17">.</operator><name pos:start="76:18" pos:end="76:20">top</name></name><argument_list pos:start="76:21" pos:end="76:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="78:5" pos:end="82:5">while<condition pos:start="78:10" pos:end="78:21">(<expr pos:start="78:11" pos:end="78:20"><operator pos:start="78:11" pos:end="78:11">!</operator><call pos:start="78:12" pos:end="78:20"><name pos:start="78:12" pos:end="78:18"><name pos:start="78:12" pos:end="78:12">c</name><operator pos:start="78:13" pos:end="78:13">.</operator><name pos:start="78:14" pos:end="78:18">empty</name></name><argument_list pos:start="78:19" pos:end="78:20">()</argument_list></call></expr>)</condition>
    <block pos:start="79:5" pos:end="82:5">{<block_content pos:start="80:9" pos:end="81:16">
        <expr_stmt pos:start="80:9" pos:end="80:27"><expr pos:start="80:9" pos:end="80:26"><name pos:start="80:9" pos:end="80:12">cout</name><operator pos:start="80:13" pos:end="80:14">&lt;&lt;</operator><call pos:start="80:15" pos:end="80:21"><name pos:start="80:15" pos:end="80:19"><name pos:start="80:15" pos:end="80:15">c</name><operator pos:start="80:16" pos:end="80:16">.</operator><name pos:start="80:17" pos:end="80:19">top</name></name><argument_list pos:start="80:20" pos:end="80:21">()</argument_list></call><operator pos:start="80:22" pos:end="80:23">&lt;&lt;</operator><literal type="string" pos:start="80:24" pos:end="80:26">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="81:9" pos:end="81:16"><expr pos:start="81:9" pos:end="81:15"><call pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:13"><name pos:start="81:9" pos:end="81:9">c</name><operator pos:start="81:10" pos:end="81:10">.</operator><name pos:start="81:11" pos:end="81:13">pop</name></name><argument_list pos:start="81:14" pos:end="81:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="83:5" pos:end="83:15"><expr pos:start="83:5" pos:end="83:14"><name pos:start="83:5" pos:end="83:8">cout</name><operator pos:start="83:9" pos:end="83:10">&lt;&lt;</operator><name pos:start="83:11" pos:end="83:14">endl</name></expr>;</expr_stmt>
    <while pos:start="84:5" pos:end="87:5">while<condition pos:start="84:10" pos:end="84:21">(<expr pos:start="84:11" pos:end="84:20"><operator pos:start="84:11" pos:end="84:11">!</operator><call pos:start="84:12" pos:end="84:20"><name pos:start="84:12" pos:end="84:18"><name pos:start="84:12" pos:end="84:12">b</name><operator pos:start="84:13" pos:end="84:13">.</operator><name pos:start="84:14" pos:end="84:18">empty</name></name><argument_list pos:start="84:19" pos:end="84:20">()</argument_list></call></expr>)</condition>
    <block pos:start="85:5" pos:end="87:5">{<block_content pos:start="86:9" pos:end="86:24">
        <expr_stmt pos:start="86:9" pos:end="86:24"><expr pos:start="86:9" pos:end="86:23"><call pos:start="86:9" pos:end="86:23"><name pos:start="86:9" pos:end="86:14"><name pos:start="86:9" pos:end="86:9">c</name><operator pos:start="86:10" pos:end="86:10">.</operator><name pos:start="86:11" pos:end="86:14">push</name></name><argument_list pos:start="86:15" pos:end="86:23">(<argument pos:start="86:16" pos:end="86:22"><expr pos:start="86:16" pos:end="86:22"><call pos:start="86:16" pos:end="86:22"><name pos:start="86:16" pos:end="86:20"><name pos:start="86:16" pos:end="86:16">b</name><operator pos:start="86:17" pos:end="86:17">.</operator><name pos:start="86:18" pos:end="86:20">top</name></name><argument_list pos:start="86:21" pos:end="86:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="88:5" pos:end="92:5">while<condition pos:start="88:10" pos:end="88:21">(<expr pos:start="88:11" pos:end="88:20"><operator pos:start="88:11" pos:end="88:11">!</operator><call pos:start="88:12" pos:end="88:20"><name pos:start="88:12" pos:end="88:18"><name pos:start="88:12" pos:end="88:12">c</name><operator pos:start="88:13" pos:end="88:13">.</operator><name pos:start="88:14" pos:end="88:18">empty</name></name><argument_list pos:start="88:19" pos:end="88:20">()</argument_list></call></expr>)</condition>
    <block pos:start="89:5" pos:end="92:5">{<block_content pos:start="90:9" pos:end="91:16">
        <expr_stmt pos:start="90:9" pos:end="90:27"><expr pos:start="90:9" pos:end="90:26"><name pos:start="90:9" pos:end="90:12">cout</name><operator pos:start="90:13" pos:end="90:14">&lt;&lt;</operator><call pos:start="90:15" pos:end="90:21"><name pos:start="90:15" pos:end="90:19"><name pos:start="90:15" pos:end="90:15">c</name><operator pos:start="90:16" pos:end="90:16">.</operator><name pos:start="90:17" pos:end="90:19">top</name></name><argument_list pos:start="90:20" pos:end="90:21">()</argument_list></call><operator pos:start="90:22" pos:end="90:23">&lt;&lt;</operator><literal type="string" pos:start="90:24" pos:end="90:26">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="91:9" pos:end="91:16"><expr pos:start="91:9" pos:end="91:15"><call pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:13"><name pos:start="91:9" pos:end="91:9">c</name><operator pos:start="91:10" pos:end="91:10">.</operator><name pos:start="91:11" pos:end="91:13">pop</name></name><argument_list pos:start="91:14" pos:end="91:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    
    <return pos:start="94:5" pos:end="94:13">return <expr pos:start="94:12" pos:end="94:12"><literal type="number" pos:start="94:12" pos:end="94:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
