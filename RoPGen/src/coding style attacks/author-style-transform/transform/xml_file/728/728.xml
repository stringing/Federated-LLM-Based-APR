<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/728/728.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:20"><decl pos:start="4:1" pos:end="4:19"><type pos:start="4:1" pos:end="4:9"><name pos:start="4:1" pos:end="4:4">long</name> <name pos:start="4:6" pos:end="4:9">long</name></type> <name pos:start="4:11" pos:end="4:19"><name pos:start="4:11" pos:end="4:11">a</name><index pos:start="4:12" pos:end="4:19">[<expr pos:start="4:13" pos:end="4:18"><literal type="number" pos:start="4:13" pos:end="4:18">100005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="31:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list><block pos:start="5:11" pos:end="31:1">{<block_content pos:start="6:5" pos:end="30:13">
    <expr_stmt pos:start="6:5" pos:end="6:39"><expr pos:start="6:5" pos:end="6:38"><call pos:start="6:5" pos:end="6:38"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:38">(<argument pos:start="6:13" pos:end="6:25"><expr pos:start="6:13" pos:end="6:25"><literal type="string" pos:start="6:13" pos:end="6:25">"elevator.in"</literal></expr></argument>, <argument pos:start="6:28" pos:end="6:30"><expr pos:start="6:28" pos:end="6:30"><literal type="string" pos:start="6:28" pos:end="6:30">"r"</literal></expr></argument>, <argument pos:start="6:33" pos:end="6:37"><expr pos:start="6:33" pos:end="6:37"><name pos:start="6:33" pos:end="6:37">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:41"><expr pos:start="7:5" pos:end="7:40"><call pos:start="7:5" pos:end="7:40"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:40">(<argument pos:start="7:13" pos:end="7:26"><expr pos:start="7:13" pos:end="7:26"><literal type="string" pos:start="7:13" pos:end="7:26">"elevator.out"</literal></expr></argument>, <argument pos:start="7:29" pos:end="7:31"><expr pos:start="7:29" pos:end="7:31"><literal type="string" pos:start="7:29" pos:end="7:31">"w"</literal></expr></argument>, <argument pos:start="7:34" pos:end="7:39"><expr pos:start="7:34" pos:end="7:39"><name pos:start="7:34" pos:end="7:39">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:10"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:13"><expr pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:7">cin</name> <operator pos:start="9:9" pos:end="9:10">&gt;&gt;</operator> <name pos:start="9:12" pos:end="9:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:28"><decl pos:start="10:5" pos:end="10:27"><type pos:start="10:5" pos:end="10:13"><name pos:start="10:5" pos:end="10:8">long</name> <name pos:start="10:10" pos:end="10:13">long</name></type> <name pos:start="10:15" pos:end="10:23">floor_now</name> <init pos:start="10:25" pos:end="10:27">= <expr pos:start="10:27" pos:end="10:27"><literal type="number" pos:start="10:27" pos:end="10:27">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:8">long</name> <name pos:start="11:10" pos:end="11:13">long</name></type> <name pos:start="11:15" pos:end="11:17">ans</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="12:5" pos:end="14:5">for<control pos:start="12:8" pos:end="12:31">(<init pos:start="12:9" pos:end="12:18"><decl pos:start="12:9" pos:end="12:17"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">i</name> <init pos:start="12:15" pos:end="12:17">= <expr pos:start="12:17" pos:end="12:17"><literal type="number" pos:start="12:17" pos:end="12:17">1</literal></expr></init></decl>;</init> <condition pos:start="12:20" pos:end="12:26"><expr pos:start="12:20" pos:end="12:25"><name pos:start="12:20" pos:end="12:20">i</name> <operator pos:start="12:22" pos:end="12:23">&lt;=</operator> <name pos:start="12:25" pos:end="12:25">n</name></expr>;</condition> <incr pos:start="12:28" pos:end="12:30"><expr pos:start="12:28" pos:end="12:30"><name pos:start="12:28" pos:end="12:28">i</name><operator pos:start="12:29" pos:end="12:30">++</operator></expr></incr>)</control><block pos:start="12:32" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:20">
        <expr_stmt pos:start="13:9" pos:end="13:20"><expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">cin</name> <operator pos:start="13:13" pos:end="13:14">&gt;&gt;</operator> <name pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:16">a</name><index pos:start="13:17" pos:end="13:19">[<expr pos:start="13:18" pos:end="13:18"><name pos:start="13:18" pos:end="13:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="15:5" pos:end="15:19"><expr pos:start="15:5" pos:end="15:18"><call pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:8">sort</name><argument_list pos:start="15:9" pos:end="15:18">(<argument pos:start="15:10" pos:end="15:10"><expr pos:start="15:10" pos:end="15:10"><name pos:start="15:10" pos:end="15:10">a</name></expr></argument>, <argument pos:start="15:13" pos:end="15:17"><expr pos:start="15:13" pos:end="15:17"><name pos:start="15:13" pos:end="15:13">a</name> <operator pos:start="15:15" pos:end="15:15">+</operator> <name pos:start="15:17" pos:end="15:17">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="16:5" pos:end="26:5">for<control pos:start="16:8" pos:end="16:31">(<init pos:start="16:9" pos:end="16:18"><decl pos:start="16:9" pos:end="16:17"><type pos:start="16:9" pos:end="16:11"><name pos:start="16:9" pos:end="16:11">int</name></type> <name pos:start="16:13" pos:end="16:13">i</name> <init pos:start="16:15" pos:end="16:17">= <expr pos:start="16:17" pos:end="16:17"><literal type="number" pos:start="16:17" pos:end="16:17">1</literal></expr></init></decl>;</init> <condition pos:start="16:20" pos:end="16:26"><expr pos:start="16:20" pos:end="16:25"><name pos:start="16:20" pos:end="16:20">i</name> <operator pos:start="16:22" pos:end="16:23">&lt;=</operator> <name pos:start="16:25" pos:end="16:25">n</name></expr>;</condition> <incr pos:start="16:28" pos:end="16:30"><expr pos:start="16:28" pos:end="16:30"><name pos:start="16:28" pos:end="16:28">i</name><operator pos:start="16:29" pos:end="16:30">++</operator></expr></incr>)</control><block pos:start="16:32" pos:end="26:5">{<block_content pos:start="17:9" pos:end="25:25">
        <if_stmt pos:start="17:9" pos:end="19:9"><if pos:start="17:9" pos:end="19:9">if<condition pos:start="17:11" pos:end="17:28">(<expr pos:start="17:12" pos:end="17:27"><name pos:start="17:12" pos:end="17:15"><name pos:start="17:12" pos:end="17:12">a</name><index pos:start="17:13" pos:end="17:15">[<expr pos:start="17:14" pos:end="17:14"><name pos:start="17:14" pos:end="17:14">i</name></expr>]</index></name> <operator pos:start="17:17" pos:end="17:17">&gt;</operator> <name pos:start="17:19" pos:end="17:27">floor_now</name></expr>)</condition><block pos:start="17:29" pos:end="19:9">{<block_content pos:start="18:13" pos:end="18:42">
            <expr_stmt pos:start="18:13" pos:end="18:42"><expr pos:start="18:13" pos:end="18:41"><name pos:start="18:13" pos:end="18:15">ans</name> <operator pos:start="18:17" pos:end="18:18">+=</operator> <operator pos:start="18:20" pos:end="18:20">(</operator><name pos:start="18:21" pos:end="18:24"><name pos:start="18:21" pos:end="18:21">a</name><index pos:start="18:22" pos:end="18:24">[<expr pos:start="18:23" pos:end="18:23"><name pos:start="18:23" pos:end="18:23">i</name></expr>]</index></name> <operator pos:start="18:26" pos:end="18:26">-</operator> <name pos:start="18:28" pos:end="18:36">floor_now</name><operator pos:start="18:37" pos:end="18:37">)</operator> <operator pos:start="18:39" pos:end="18:39">*</operator> <literal type="number" pos:start="18:41" pos:end="18:41">5</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="20:9" pos:end="24:9"><if pos:start="20:9" pos:end="22:9">if<condition pos:start="20:11" pos:end="20:29">(<expr pos:start="20:12" pos:end="20:28"><name pos:start="20:12" pos:end="20:20">floor_now</name> <operator pos:start="20:22" pos:end="20:23">==</operator> <name pos:start="20:25" pos:end="20:28"><name pos:start="20:25" pos:end="20:25">a</name><index pos:start="20:26" pos:end="20:28">[<expr pos:start="20:27" pos:end="20:27"><name pos:start="20:27" pos:end="20:27">i</name></expr>]</index></name></expr>)</condition><block pos:start="20:30" pos:end="22:9">{<block_content pos:start="21:13" pos:end="21:21">
            <expr_stmt pos:start="21:13" pos:end="21:21"><expr pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:15">ans</name> <operator pos:start="21:17" pos:end="21:18">+=</operator> <literal type="number" pos:start="21:20" pos:end="21:20">2</literal></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="22:10" pos:end="24:9">else<block pos:start="22:14" pos:end="24:9">{<block_content pos:start="23:13" pos:end="23:21">
            <expr_stmt pos:start="23:13" pos:end="23:21"><expr pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:15">ans</name> <operator pos:start="23:17" pos:end="23:18">+=</operator> <literal type="number" pos:start="23:20" pos:end="23:20">5</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:25"><expr pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:17">floor_now</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:24"><name pos:start="25:21" pos:end="25:21">a</name><index pos:start="25:22" pos:end="25:24">[<expr pos:start="25:23" pos:end="25:23"><name pos:start="25:23" pos:end="25:23">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:13">floor_now</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:20"><name pos:start="27:17" pos:end="27:17">a</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><name pos:start="27:19" pos:end="27:19">n</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:25"><expr pos:start="28:5" pos:end="28:24"><name pos:start="28:5" pos:end="28:7">ans</name> <operator pos:start="28:9" pos:end="28:10">+=</operator> <name pos:start="28:12" pos:end="28:20">floor_now</name> <operator pos:start="28:22" pos:end="28:22">*</operator> <literal type="number" pos:start="28:24" pos:end="28:24">4</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:8">cout</name> <operator pos:start="29:10" pos:end="29:11">&lt;&lt;</operator> <name pos:start="29:13" pos:end="29:15">ans</name> <operator pos:start="29:17" pos:end="29:18">&lt;&lt;</operator> <name pos:start="29:20" pos:end="29:23">endl</name></expr>;</expr_stmt>
    <return pos:start="30:5" pos:end="30:13">return <expr pos:start="30:12" pos:end="30:12"><literal type="number" pos:start="30:12" pos:end="30:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
