<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/442/442.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:14">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:14">&lt;map&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:20">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:20"><decl pos:start="5:1" pos:end="5:19"><type pos:start="5:1" pos:end="5:9"><name pos:start="5:1" pos:end="5:4">long</name> <name pos:start="5:6" pos:end="5:9">long</name></type> <name pos:start="5:11" pos:end="5:19"><name pos:start="5:11" pos:end="5:11">a</name><index pos:start="5:12" pos:end="5:19">[<expr pos:start="5:13" pos:end="5:18"><literal type="number" pos:start="5:13" pos:end="5:18">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:22"><decl pos:start="6:1" pos:end="6:21"><type pos:start="6:1" pos:end="6:9"><name pos:start="6:1" pos:end="6:4">long</name> <name pos:start="6:6" pos:end="6:9">long</name></type> <name pos:start="6:11" pos:end="6:21"><name pos:start="6:11" pos:end="6:13">cnt</name><index pos:start="6:14" pos:end="6:21">[<expr pos:start="6:15" pos:end="6:20"><literal type="number" pos:start="6:15" pos:end="6:20">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:14"><decl pos:start="7:1" pos:end="7:13"><type pos:start="7:1" pos:end="7:12"><name pos:start="7:1" pos:end="7:12"><name pos:start="7:1" pos:end="7:3">map</name><argument_list type="generic" pos:start="7:4" pos:end="7:12">&lt;<argument pos:start="7:5" pos:end="7:7"><expr pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></expr></argument>,<argument pos:start="7:9" pos:end="7:11"><expr pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="7:13" pos:end="7:13">m</name></decl>;</decl_stmt>
<function pos:start="8:1" pos:end="34:1"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:8">main</name><parameter_list pos:start="8:9" pos:end="8:10">()</parameter_list>
<block pos:start="9:1" pos:end="34:1">{<block_content pos:start="10:5" pos:end="33:13">
    <expr_stmt pos:start="10:5" pos:end="10:37"><expr pos:start="10:5" pos:end="10:36"><call pos:start="10:5" pos:end="10:36"><name pos:start="10:5" pos:end="10:11">freopen</name><argument_list pos:start="10:12" pos:end="10:36">(<argument pos:start="10:13" pos:end="10:25"><expr pos:start="10:13" pos:end="10:25"><literal type="string" pos:start="10:13" pos:end="10:25">"elevator.in"</literal></expr></argument>,<argument pos:start="10:27" pos:end="10:29"><expr pos:start="10:27" pos:end="10:29"><literal type="string" pos:start="10:27" pos:end="10:29">"r"</literal></expr></argument>,<argument pos:start="10:31" pos:end="10:35"><expr pos:start="10:31" pos:end="10:35"><name pos:start="10:31" pos:end="10:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:39"><expr pos:start="11:5" pos:end="11:38"><call pos:start="11:5" pos:end="11:38"><name pos:start="11:5" pos:end="11:11">freopen</name><argument_list pos:start="11:12" pos:end="11:38">(<argument pos:start="11:13" pos:end="11:26"><expr pos:start="11:13" pos:end="11:26"><literal type="string" pos:start="11:13" pos:end="11:26">"elevator.out"</literal></expr></argument>,<argument pos:start="11:28" pos:end="11:30"><expr pos:start="11:28" pos:end="11:30"><literal type="string" pos:start="11:28" pos:end="11:30">"w"</literal></expr></argument>,<argument pos:start="11:32" pos:end="11:37"><expr pos:start="11:32" pos:end="11:37"><name pos:start="11:32" pos:end="11:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:16"><decl pos:start="12:5" pos:end="12:9"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:9">n</name></decl>,<decl pos:start="12:11" pos:end="12:15"><type ref="prev" pos:start="12:5" pos:end="12:7"/><name pos:start="12:11" pos:end="12:13">sum</name><init pos:start="12:14" pos:end="12:15">=<expr pos:start="12:15" pos:end="12:15"><literal type="number" pos:start="12:15" pos:end="12:15">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:11"><expr pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:7">cin</name><operator pos:start="13:8" pos:end="13:9">&gt;&gt;</operator><name pos:start="13:10" pos:end="13:10">n</name></expr>;</expr_stmt>
    <for pos:start="14:5" pos:end="18:5">for<control pos:start="14:8" pos:end="14:25">(<init pos:start="14:9" pos:end="14:16"><decl pos:start="14:9" pos:end="14:15"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:13">i</name><init pos:start="14:14" pos:end="14:15">=<expr pos:start="14:15" pos:end="14:15"><literal type="number" pos:start="14:15" pos:end="14:15">1</literal></expr></init></decl>;</init><condition pos:start="14:17" pos:end="14:21"><expr pos:start="14:17" pos:end="14:20"><name pos:start="14:17" pos:end="14:17">i</name><operator pos:start="14:18" pos:end="14:19">&lt;=</operator><name pos:start="14:20" pos:end="14:20">n</name></expr>;</condition><incr pos:start="14:22" pos:end="14:24"><expr pos:start="14:22" pos:end="14:24"><name pos:start="14:22" pos:end="14:22">i</name><operator pos:start="14:23" pos:end="14:24">++</operator></expr></incr>)</control>
    <block pos:start="15:5" pos:end="18:5">{<block_content pos:start="16:9" pos:end="17:18">
        <expr_stmt pos:start="16:9" pos:end="16:18"><expr pos:start="16:9" pos:end="16:17"><name pos:start="16:9" pos:end="16:11">cin</name><operator pos:start="16:12" pos:end="16:13">&gt;&gt;</operator><name pos:start="16:14" pos:end="16:17"><name pos:start="16:14" pos:end="16:14">a</name><index pos:start="16:15" pos:end="16:17">[<expr pos:start="16:16" pos:end="16:16"><name pos:start="16:16" pos:end="16:16">i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:18"><expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:9">m</name><index pos:start="17:10" pos:end="17:15">[<expr pos:start="17:11" pos:end="17:14"><name pos:start="17:11" pos:end="17:14"><name pos:start="17:11" pos:end="17:11">a</name><index pos:start="17:12" pos:end="17:14">[<expr pos:start="17:13" pos:end="17:13"><name pos:start="17:13" pos:end="17:13">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="17:16" pos:end="17:17">++</operator></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><call pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:8">sort</name><argument_list pos:start="19:9" pos:end="19:19">(<argument pos:start="19:10" pos:end="19:12"><expr pos:start="19:10" pos:end="19:12"><name pos:start="19:10" pos:end="19:10">a</name><operator pos:start="19:11" pos:end="19:11">+</operator><literal type="number" pos:start="19:12" pos:end="19:12">1</literal></expr></argument>,<argument pos:start="19:14" pos:end="19:18"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:14">a</name><operator pos:start="19:15" pos:end="19:15">+</operator><name pos:start="19:16" pos:end="19:16">n</name><operator pos:start="19:17" pos:end="19:17">+</operator><literal type="number" pos:start="19:18" pos:end="19:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="20:5" pos:end="31:5">for<control pos:start="20:8" pos:end="20:25">(<init pos:start="20:9" pos:end="20:16"><decl pos:start="20:9" pos:end="20:15"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:13">i</name><init pos:start="20:14" pos:end="20:15">=<expr pos:start="20:15" pos:end="20:15"><literal type="number" pos:start="20:15" pos:end="20:15">1</literal></expr></init></decl>;</init><condition pos:start="20:17" pos:end="20:21"><expr pos:start="20:17" pos:end="20:20"><name pos:start="20:17" pos:end="20:17">i</name><operator pos:start="20:18" pos:end="20:19">&lt;=</operator><name pos:start="20:20" pos:end="20:20">n</name></expr>;</condition><incr pos:start="20:22" pos:end="20:24"><expr pos:start="20:22" pos:end="20:24"><name pos:start="20:22" pos:end="20:22">i</name><operator pos:start="20:23" pos:end="20:24">++</operator></expr></incr>)</control>
    <block pos:start="21:5" pos:end="31:5">{<block_content pos:start="22:9" pos:end="29:9">
        <if_stmt pos:start="22:9" pos:end="29:9"><if pos:start="22:9" pos:end="25:9">if<condition pos:start="22:11" pos:end="22:18">(<expr pos:start="22:12" pos:end="22:17"><name pos:start="22:12" pos:end="22:15"><name pos:start="22:12" pos:end="22:12">m</name><index pos:start="22:13" pos:end="22:15">[<expr pos:start="22:14" pos:end="22:14"><name pos:start="22:14" pos:end="22:14">i</name></expr>]</index></name><operator pos:start="22:16" pos:end="22:16">&gt;</operator><literal type="number" pos:start="22:17" pos:end="22:17">1</literal></expr>)</condition>
        <block pos:start="23:9" pos:end="25:9">{<block_content pos:start="24:13" pos:end="24:28">
            <expr_stmt pos:start="24:13" pos:end="24:28"><expr pos:start="24:13" pos:end="24:27"><name pos:start="24:13" pos:end="24:15">sum</name><operator pos:start="24:16" pos:end="24:17">+=</operator><operator pos:start="24:18" pos:end="24:18">(</operator><name pos:start="24:19" pos:end="24:22"><name pos:start="24:19" pos:end="24:19">m</name><index pos:start="24:20" pos:end="24:22">[<expr pos:start="24:21" pos:end="24:21"><name pos:start="24:21" pos:end="24:21">i</name></expr>]</index></name><operator pos:start="24:23" pos:end="24:23">-</operator><literal type="number" pos:start="24:24" pos:end="24:24">1</literal><operator pos:start="24:25" pos:end="24:25">)</operator><operator pos:start="24:26" pos:end="24:26">*</operator><literal type="number" pos:start="24:27" pos:end="24:27">2</literal></expr>;</expr_stmt> 
        </block_content>}</block></if>
        <else pos:start="26:9" pos:end="29:9">else
        <block pos:start="27:9" pos:end="29:9">{<block_content pos:start="28:13" pos:end="28:37">
            <expr_stmt pos:start="28:13" pos:end="28:37"><expr pos:start="28:13" pos:end="28:36"><name pos:start="28:13" pos:end="28:15">sum</name><operator pos:start="28:16" pos:end="28:17">+=</operator><operator pos:start="28:18" pos:end="28:18">(</operator><name pos:start="28:19" pos:end="28:22"><name pos:start="28:19" pos:end="28:19">a</name><index pos:start="28:20" pos:end="28:22">[<expr pos:start="28:21" pos:end="28:21"><name pos:start="28:21" pos:end="28:21">i</name></expr>]</index></name><operator pos:start="28:23" pos:end="28:23">-</operator><name pos:start="28:24" pos:end="28:29"><name pos:start="28:24" pos:end="28:24">a</name><index pos:start="28:25" pos:end="28:29">[<expr pos:start="28:26" pos:end="28:28"><name pos:start="28:26" pos:end="28:26">i</name><operator pos:start="28:27" pos:end="28:27">-</operator><literal type="number" pos:start="28:28" pos:end="28:28">1</literal></expr>]</index></name><operator pos:start="28:30" pos:end="28:30">)</operator><operator pos:start="28:31" pos:end="28:31">*</operator><literal type="number" pos:start="28:32" pos:end="28:33">5</literal><operator pos:start="28:33" pos:end="28:33">+</operator><literal type="number" pos:start="28:34" pos:end="28:35">3</literal><operator pos:start="28:35" pos:end="28:35">+</operator><literal type="number" pos:start="28:36" pos:end="28:36">2</literal></expr>;</expr_stmt> 
        </block_content>}</block></else></if_stmt>
        
    </block_content>}</block></for>
    <expr_stmt pos:start="32:5" pos:end="32:25"><expr pos:start="32:5" pos:end="32:24"><name pos:start="32:5" pos:end="32:8">cout</name><operator pos:start="32:9" pos:end="32:10">&lt;&lt;</operator><name pos:start="32:11" pos:end="32:13">sum</name><operator pos:start="32:14" pos:end="32:14">+</operator><operator pos:start="32:15" pos:end="32:15">(</operator><name pos:start="32:16" pos:end="32:19"><name pos:start="32:16" pos:end="32:16">a</name><index pos:start="32:17" pos:end="32:19">[<expr pos:start="32:18" pos:end="32:18"><name pos:start="32:18" pos:end="32:18">n</name></expr>]</index></name><operator pos:start="32:20" pos:end="32:20">-</operator><literal type="number" pos:start="32:21" pos:end="32:21">0</literal><operator pos:start="32:22" pos:end="32:22">)</operator><operator pos:start="32:23" pos:end="32:23">*</operator><literal type="number" pos:start="32:24" pos:end="32:24">4</literal></expr>;</expr_stmt>
    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
