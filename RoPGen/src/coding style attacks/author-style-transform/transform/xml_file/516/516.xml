<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/516/516.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:10"><decl pos:start="3:1" pos:end="3:9"><type pos:start="3:1" pos:end="3:6"><name pos:start="3:1" pos:end="3:6">string</name></type> <name pos:start="3:8" pos:end="3:9">s1</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:12"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">x</name></decl>,<decl pos:start="4:7" pos:end="4:7"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:7" pos:end="4:7">n</name></decl>,<decl pos:start="4:9" pos:end="4:11"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:9" pos:end="4:11">sum</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:15"><decl pos:start="5:1" pos:end="5:14"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:9">flag</name><init pos:start="5:10" pos:end="5:14">=<expr pos:start="5:11" pos:end="5:14"><literal type="boolean" pos:start="5:11" pos:end="5:14">true</literal></expr></init></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="42:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list><block pos:start="6:11" pos:end="42:1">{<block_content pos:start="7:5" pos:end="41:5">
    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><call pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:7">ios</name><operator pos:start="7:8" pos:end="7:9">::</operator><name pos:start="7:10" pos:end="7:24">sync_with_stdio</name></name><argument_list pos:start="7:25" pos:end="7:31">(<argument pos:start="7:26" pos:end="7:30"><expr pos:start="7:26" pos:end="7:30"><literal type="boolean" pos:start="7:26" pos:end="7:30">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:11"><expr pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:10">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:10"><expr pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:5">n</name><operator pos:start="9:6" pos:end="9:7">*=</operator><literal type="number" pos:start="9:8" pos:end="9:9">60</literal></expr>;</expr_stmt>
    <while pos:start="10:5" pos:end="41:5">while<condition pos:start="10:10" pos:end="10:15">(<expr pos:start="10:11" pos:end="10:14"><literal type="boolean" pos:start="10:11" pos:end="10:14">true</literal></expr>)</condition><block pos:start="10:16" pos:end="41:5">{<block_content pos:start="11:9" pos:end="40:9">
        <if_stmt pos:start="11:9" pos:end="15:9"><if pos:start="11:9" pos:end="15:9">if<condition pos:start="11:11" pos:end="11:16">(<expr pos:start="11:12" pos:end="11:15"><name pos:start="11:12" pos:end="11:15">flag</name></expr>)</condition><block pos:start="11:17" pos:end="15:9">{<block_content pos:start="12:13" pos:end="14:13">
            <if_stmt pos:start="12:13" pos:end="14:13"><if pos:start="12:13" pos:end="14:13">if<condition pos:start="12:15" pos:end="12:29">(<expr pos:start="12:16" pos:end="12:28"><operator pos:start="12:16" pos:end="12:16">!</operator><operator pos:start="12:17" pos:end="12:17">(</operator><name pos:start="12:18" pos:end="12:20">cin</name><operator pos:start="12:21" pos:end="12:22">&gt;&gt;</operator><name pos:start="12:23" pos:end="12:24">s1</name><operator pos:start="12:25" pos:end="12:26">&gt;&gt;</operator><name pos:start="12:27" pos:end="12:27">x</name><operator pos:start="12:28" pos:end="12:28">)</operator></expr>)</condition><block pos:start="12:30" pos:end="14:13">{<block_content pos:start="13:17" pos:end="13:25">
                <return pos:start="13:17" pos:end="13:25">return <expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">0</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:15"><expr pos:start="16:9" pos:end="16:14"><name pos:start="16:9" pos:end="16:11">sum</name><operator pos:start="16:12" pos:end="16:13">+=</operator><name pos:start="16:14" pos:end="16:14">x</name></expr>;</expr_stmt>
        <if_stmt pos:start="17:9" pos:end="20:9"><if pos:start="17:9" pos:end="20:9">if<condition pos:start="17:11" pos:end="17:17">(<expr pos:start="17:12" pos:end="17:16"><name pos:start="17:12" pos:end="17:14">sum</name><operator pos:start="17:15" pos:end="17:15">&gt;</operator><name pos:start="17:16" pos:end="17:16">n</name></expr>)</condition><block pos:start="17:18" pos:end="20:9">{<block_content pos:start="18:13" pos:end="19:21">
            <expr_stmt pos:start="18:13" pos:end="18:35"><expr pos:start="18:13" pos:end="18:34"><name pos:start="18:13" pos:end="18:16">cout</name><operator pos:start="18:17" pos:end="18:18">&lt;&lt;</operator><literal type="string" pos:start="18:19" pos:end="18:34">"Unfortunately."</literal></expr>;</expr_stmt>
            <return pos:start="19:13" pos:end="19:21">return <expr pos:start="19:20" pos:end="19:20"><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="21:9" pos:end="30:9"><if pos:start="21:9" pos:end="30:9">if<condition pos:start="21:11" pos:end="21:28">(<expr pos:start="21:12" pos:end="21:27"><name pos:start="21:12" pos:end="21:13">s1</name><operator pos:start="21:14" pos:end="21:15">==</operator><literal type="string" pos:start="21:16" pos:end="21:27">"kaomianjin"</literal></expr>)</condition><block pos:start="21:29" pos:end="30:9">{<block_content pos:start="22:13" pos:end="29:21">
            <if_stmt pos:start="22:13" pos:end="27:13"><if pos:start="22:13" pos:end="27:13">if<condition pos:start="22:15" pos:end="22:23">(<expr pos:start="22:16" pos:end="22:22"><name pos:start="22:16" pos:end="22:18">cin</name><operator pos:start="22:19" pos:end="22:20">&gt;&gt;</operator><name pos:start="22:21" pos:end="22:22">s1</name></expr>)</condition><block pos:start="22:24" pos:end="27:13">{<block_content pos:start="23:17" pos:end="26:17">
                <if_stmt pos:start="23:17" pos:end="26:17"><if pos:start="23:17" pos:end="26:17">if<condition pos:start="23:19" pos:end="23:38">(<expr pos:start="23:20" pos:end="23:37"><name pos:start="23:20" pos:end="23:21">s1</name><operator pos:start="23:22" pos:end="23:23">==</operator><literal type="string" pos:start="23:24" pos:end="23:37">"tingtingting"</literal></expr>)</condition><block pos:start="23:39" pos:end="26:17">{<block_content pos:start="24:21" pos:end="25:29">
                    <expr_stmt pos:start="24:21" pos:end="24:35"><expr pos:start="24:21" pos:end="24:34"><name pos:start="24:21" pos:end="24:24">cout</name><operator pos:start="24:25" pos:end="24:26">&lt;&lt;</operator><literal type="string" pos:start="24:27" pos:end="24:34">"Hahaha"</literal></expr>;</expr_stmt>
                    <return pos:start="25:21" pos:end="25:29">return <expr pos:start="25:28" pos:end="25:28"><literal type="number" pos:start="25:28" pos:end="25:28">0</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="28:13" pos:end="28:65"><expr pos:start="28:13" pos:end="28:64"><name pos:start="28:13" pos:end="28:16">cout</name><operator pos:start="28:17" pos:end="28:18">&lt;&lt;</operator><operator pos:start="28:19" pos:end="28:19">(</operator><ternary pos:start="28:20" pos:end="28:63"><condition pos:start="28:20" pos:end="28:27"><expr pos:start="28:20" pos:end="28:26"><operator pos:start="28:20" pos:end="28:20">(</operator><name pos:start="28:21" pos:end="28:23">sum</name><operator pos:start="28:24" pos:end="28:24">&gt;</operator><name pos:start="28:25" pos:end="28:25">n</name><operator pos:start="28:26" pos:end="28:26">)</operator></expr>?</condition><then pos:start="28:29" pos:end="28:44"> <expr pos:start="28:29" pos:end="28:44"><literal type="string" pos:start="28:29" pos:end="28:44">"Unfortunately."</literal></expr></then><else pos:start="28:45" pos:end="28:63">:<expr pos:start="28:46" pos:end="28:63"><literal type="string" pos:start="28:46" pos:end="28:63">"Congratulations!"</literal></expr></else></ternary><operator pos:start="28:64" pos:end="28:64">)</operator></expr>;</expr_stmt>
            <return pos:start="29:13" pos:end="29:21">return <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="31:9" pos:end="33:9"><if pos:start="31:9" pos:end="33:9">if<condition pos:start="31:11" pos:end="31:22">(<expr pos:start="31:12" pos:end="31:21"><operator pos:start="31:12" pos:end="31:12">!</operator><operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:16">cin</name><operator pos:start="31:17" pos:end="31:18">&gt;&gt;</operator><name pos:start="31:19" pos:end="31:20">s1</name><operator pos:start="31:21" pos:end="31:21">)</operator></expr>)</condition><block pos:start="31:23" pos:end="33:9">{<block_content pos:start="32:13" pos:end="32:21">
            <return pos:start="32:13" pos:end="32:21">return <expr pos:start="32:20" pos:end="32:20"><literal type="number" pos:start="32:20" pos:end="32:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="34:9" pos:end="40:9"><if pos:start="34:9" pos:end="37:9">if<condition pos:start="34:11" pos:end="34:30">(<expr pos:start="34:12" pos:end="34:29"><name pos:start="34:12" pos:end="34:13">s1</name><operator pos:start="34:14" pos:end="34:15">==</operator><literal type="string" pos:start="34:16" pos:end="34:29">"tingtingting"</literal></expr>)</condition><block pos:start="34:31" pos:end="37:9">{<block_content pos:start="35:13" pos:end="36:22">
            <expr_stmt pos:start="35:13" pos:end="35:19"><expr pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:15">sum</name><operator pos:start="35:16" pos:end="35:17">-=</operator><name pos:start="35:18" pos:end="35:18">x</name></expr>;</expr_stmt>
            <expr_stmt pos:start="36:13" pos:end="36:22"><expr pos:start="36:13" pos:end="36:21"><name pos:start="36:13" pos:end="36:16">flag</name><operator pos:start="36:17" pos:end="36:17">=</operator><literal type="boolean" pos:start="36:18" pos:end="36:21">true</literal></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="37:10" pos:end="40:9">else<block pos:start="37:14" pos:end="40:9">{<block_content pos:start="38:13" pos:end="39:23">
            <expr_stmt pos:start="38:13" pos:end="38:19"><expr pos:start="38:13" pos:end="38:18"><name pos:start="38:13" pos:end="38:15">cin</name><operator pos:start="38:16" pos:end="38:17">&gt;&gt;</operator><name pos:start="38:18" pos:end="38:18">x</name></expr>;</expr_stmt>
            <expr_stmt pos:start="39:13" pos:end="39:23"><expr pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:16">flag</name><operator pos:start="39:17" pos:end="39:17">=</operator><literal type="boolean" pos:start="39:18" pos:end="39:22">false</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>
</unit>
