<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/292/292.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:16">&lt;cmath&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>   
<function pos:start="4:1" pos:end="19:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="19:1">{<block_content pos:start="5:5" pos:end="18:13">
    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>,<decl pos:start="5:11" pos:end="5:11"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:11" pos:end="5:11">a</name></decl>,<decl pos:start="5:13" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:13">b</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">double</name></type> <name pos:start="6:12" pos:end="6:12">i</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:18"><expr pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:7">cin</name> <operator pos:start="7:9" pos:end="7:10">&gt;&gt;</operator><name pos:start="7:11" pos:end="7:11">n</name><operator pos:start="7:12" pos:end="7:13">&gt;&gt;</operator><name pos:start="7:14" pos:end="7:14">a</name><operator pos:start="7:15" pos:end="7:16">&gt;&gt;</operator><name pos:start="7:17" pos:end="7:17">b</name></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:26"><expr pos:start="8:5" pos:end="8:25"><name pos:start="8:5" pos:end="8:5">i</name><operator pos:start="8:6" pos:end="8:6">=</operator><operator pos:start="8:7" pos:end="8:7">(</operator><name pos:start="8:8" pos:end="8:8">n</name><operator pos:start="8:9" pos:end="8:9">*</operator><name pos:start="8:10" pos:end="8:10">a</name><operator pos:start="8:11" pos:end="8:11">-</operator><literal type="number" pos:start="8:12" pos:end="8:14">600</literal><operator pos:start="8:15" pos:end="8:15">)</operator><operator pos:start="8:16" pos:end="8:16">/</operator><operator pos:start="8:17" pos:end="8:17">(</operator><name pos:start="8:18" pos:end="8:18">b</name><operator pos:start="8:19" pos:end="8:19">-</operator><name pos:start="8:20" pos:end="8:20">a</name><operator pos:start="8:21" pos:end="8:21">)</operator><operator pos:start="8:22" pos:end="8:22">*</operator><literal type="number" pos:start="8:23" pos:end="8:25">1.0</literal></expr>;</expr_stmt>
    <if_stmt pos:start="9:5" pos:end="16:5"><if pos:start="9:5" pos:end="12:5">if <condition pos:start="9:8" pos:end="9:19">(<expr pos:start="9:9" pos:end="9:18"><call pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:11">int</name> <argument_list pos:start="9:13" pos:end="9:15">(<argument pos:start="9:14" pos:end="9:14"><expr pos:start="9:14" pos:end="9:14"><name pos:start="9:14" pos:end="9:14">i</name></expr></argument>)</argument_list></call><operator pos:start="9:16" pos:end="9:17">==</operator><name pos:start="9:18" pos:end="9:18">i</name></expr>)</condition>
    <block pos:start="10:5" pos:end="12:5">{<block_content pos:start="11:9" pos:end="11:17">
        <expr_stmt pos:start="11:9" pos:end="11:17"><expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:12">cout</name> <operator pos:start="11:14" pos:end="11:15">&lt;&lt;</operator><name pos:start="11:16" pos:end="11:16">i</name></expr>;</expr_stmt>
    </block_content>}</block></if>
    <else pos:start="13:5" pos:end="16:5">else
    <block pos:start="14:5" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:19">
        <expr_stmt pos:start="15:9" pos:end="15:19"><expr pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:12">cout</name> <operator pos:start="15:14" pos:end="15:15">&lt;&lt;</operator><name pos:start="15:16" pos:end="15:16">i</name><operator pos:start="15:17" pos:end="15:17">+</operator><literal type="number" pos:start="15:18" pos:end="15:18">1</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <return pos:start="18:5" pos:end="18:13">return <expr pos:start="18:12" pos:end="18:12"><literal type="number" pos:start="18:12" pos:end="18:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
