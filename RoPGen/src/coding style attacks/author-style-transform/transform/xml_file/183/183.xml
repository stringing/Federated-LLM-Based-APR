<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/183/183.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="5:0"><decl pos:start="3:1" pos:end="3:21"><type pos:start="3:1" pos:end="3:9"><specifier pos:start="3:1" pos:end="3:5">const</specifier> <name pos:start="3:7" pos:end="3:9">int</name></type> <name pos:start="3:11" pos:end="3:11">N</name> <init pos:start="3:13" pos:end="3:21">= <expr pos:start="3:15" pos:end="3:21"><literal type="number" pos:start="3:15" pos:end="3:19">1e2</literal> <operator pos:start="3:19" pos:end="3:19">+</operator> <literal type="number" pos:start="3:21" pos:end="3:21">9</literal></expr></init></decl>;</decl_stmt>
<cpp:define pos:start="4:1" pos:end="4:13">#<cpp:directive pos:start="4:2" pos:end="4:7">define</cpp:directive> <cpp:macro pos:start="4:9" pos:end="4:10"><name pos:start="4:9" pos:end="4:10">y1</name></cpp:macro> <cpp:value pos:start="4:12" pos:end="4:13">ed</cpp:value></cpp:define>
<decl_stmt pos:start="5:1" pos:end="5:14"><decl pos:start="5:1" pos:end="5:13"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">char</name></type> <name pos:start="5:6" pos:end="5:13"><name pos:start="5:6" pos:end="5:7">mp</name><index pos:start="5:8" pos:end="5:10">[<expr pos:start="5:9" pos:end="5:9"><name pos:start="5:9" pos:end="5:9">N</name></expr>]</index><index pos:start="5:11" pos:end="5:13">[<expr pos:start="5:12" pos:end="5:12"><name pos:start="5:12" pos:end="5:12">N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:49"><decl pos:start="6:1" pos:end="6:25"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:9"><name pos:start="6:5" pos:end="6:6">dx</name><index pos:start="6:7" pos:end="6:9">[<expr pos:start="6:8" pos:end="6:8"><literal type="number" pos:start="6:8" pos:end="6:8">5</literal></expr>]</index></name> <init pos:start="6:11" pos:end="6:25">= <expr pos:start="6:13" pos:end="6:25"><block pos:start="6:13" pos:end="6:25">{<expr pos:start="6:14" pos:end="6:15"><operator pos:start="6:14" pos:end="6:14">-</operator><literal type="number" pos:start="6:15" pos:end="6:15">1</literal></expr>, <expr pos:start="6:18" pos:end="6:18"><literal type="number" pos:start="6:18" pos:end="6:18">1</literal></expr>, <expr pos:start="6:21" pos:end="6:21"><literal type="number" pos:start="6:21" pos:end="6:21">0</literal></expr>, <expr pos:start="6:24" pos:end="6:24"><literal type="number" pos:start="6:24" pos:end="6:24">0</literal></expr>}</block></expr></init></decl>, <decl pos:start="6:28" pos:end="6:48"><type ref="prev" pos:start="6:1" pos:end="6:3"/><name pos:start="6:28" pos:end="6:32"><name pos:start="6:28" pos:end="6:29">dy</name><index pos:start="6:30" pos:end="6:32">[<expr pos:start="6:31" pos:end="6:31"><literal type="number" pos:start="6:31" pos:end="6:31">5</literal></expr>]</index></name> <init pos:start="6:34" pos:end="6:48">= <expr pos:start="6:36" pos:end="6:48"><block pos:start="6:36" pos:end="6:48">{<expr pos:start="6:37" pos:end="6:37"><literal type="number" pos:start="6:37" pos:end="6:37">0</literal></expr>, <expr pos:start="6:40" pos:end="6:40"><literal type="number" pos:start="6:40" pos:end="6:40">0</literal></expr>, <expr pos:start="6:43" pos:end="6:44"><operator pos:start="6:43" pos:end="6:43">-</operator><literal type="number" pos:start="6:44" pos:end="6:44">1</literal></expr>, <expr pos:start="6:47" pos:end="6:47"><literal type="number" pos:start="6:47" pos:end="6:47">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:35"><decl pos:start="7:1" pos:end="7:5"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:5">a</name></decl>, <decl pos:start="7:8" pos:end="7:8"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:8" pos:end="7:8">b</name></decl>, <decl pos:start="7:11" pos:end="7:11"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:11" pos:end="7:11">x</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:14" pos:end="7:14">y</name></decl>, <decl pos:start="7:17" pos:end="7:17"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:17" pos:end="7:17">n</name></decl>, <decl pos:start="7:20" pos:end="7:20"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:20" pos:end="7:20">m</name></decl>, <decl pos:start="7:23" pos:end="7:23"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:23" pos:end="7:23">k</name></decl>, <decl pos:start="7:26" pos:end="7:34"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:26" pos:end="7:34"><name pos:start="7:26" pos:end="7:28">vis</name><index pos:start="7:29" pos:end="7:31">[<expr pos:start="7:30" pos:end="7:30"><name pos:start="7:30" pos:end="7:30">N</name></expr>]</index><index pos:start="7:32" pos:end="7:34">[<expr pos:start="7:33" pos:end="7:33"><name pos:start="7:33" pos:end="7:33">N</name></expr>]</index></name></decl>;</decl_stmt>
<struct pos:start="8:1" pos:end="17:2">struct <name pos:start="8:8" pos:end="8:11">node</name> <block pos:start="8:13" pos:end="17:1">{<public type="default" pos:start="9:5" pos:end="16:5">
    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">k</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">x</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">y</name></decl>, <decl pos:start="9:18" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:20">dir</name></decl>;</decl_stmt>
    <constructor pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:8">node</name><parameter_list pos:start="10:9" pos:end="10:10">()</parameter_list><block pos:start="10:11" pos:end="10:12">{<block_content/>}</block></constructor>
    <constructor pos:start="11:5" pos:end="16:5"><name pos:start="11:5" pos:end="11:8">node</name><parameter_list pos:start="11:9" pos:end="11:42">(<parameter pos:start="11:10" pos:end="11:15"><decl pos:start="11:10" pos:end="11:15"><type pos:start="11:10" pos:end="11:15"><name pos:start="11:10" pos:end="11:12">int</name></type> <name pos:start="11:14" pos:end="11:15">x1</name></decl></parameter>, <parameter pos:start="11:18" pos:end="11:23"><decl pos:start="11:18" pos:end="11:23"><type pos:start="11:18" pos:end="11:23"><name pos:start="11:18" pos:end="11:20">int</name></type> <name pos:start="11:22" pos:end="11:23">y1</name></decl></parameter>, <parameter pos:start="11:26" pos:end="11:31"><decl pos:start="11:26" pos:end="11:31"><type pos:start="11:26" pos:end="11:31"><name pos:start="11:26" pos:end="11:28">int</name></type> <name pos:start="11:30" pos:end="11:31">k1</name></decl></parameter>, <parameter pos:start="11:34" pos:end="11:41"><decl pos:start="11:34" pos:end="11:41"><type pos:start="11:34" pos:end="11:41"><name pos:start="11:34" pos:end="11:36">int</name></type> <name pos:start="11:38" pos:end="11:41">dir1</name></decl></parameter>)</parameter_list> <block pos:start="11:44" pos:end="16:5">{<block_content pos:start="12:9" pos:end="15:19">
        <expr_stmt pos:start="12:9" pos:end="12:15"><expr pos:start="12:9" pos:end="12:14"><name pos:start="12:9" pos:end="12:9">x</name> <operator pos:start="12:11" pos:end="12:11">=</operator> <name pos:start="12:13" pos:end="12:14">x1</name></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:15"><expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:9">y</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <name pos:start="13:13" pos:end="13:14">y1</name></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:15"><expr pos:start="14:9" pos:end="14:14"><name pos:start="14:9" pos:end="14:9">k</name> <operator pos:start="14:11" pos:end="14:11">=</operator> <name pos:start="14:13" pos:end="14:14">k1</name></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:19"><expr pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:11">dir</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:18">dir1</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>
</public>}</block>;</struct>
<function pos:start="18:1" pos:end="41:1"><type pos:start="18:1" pos:end="18:4"><name pos:start="18:1" pos:end="18:4">void</name></type> <name pos:start="18:6" pos:end="18:8">BFS</name><parameter_list pos:start="18:9" pos:end="18:10">()</parameter_list> <block pos:start="18:12" pos:end="41:1">{<block_content pos:start="19:5" pos:end="40:15">
    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:9">queue</name><argument_list type="generic" pos:start="19:10" pos:end="19:15">&lt;<argument pos:start="19:11" pos:end="19:14"><expr pos:start="19:11" pos:end="19:14"><name pos:start="19:11" pos:end="19:14">node</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="19:17" pos:end="19:17">q</name></decl>;</decl_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:31"><expr pos:start="20:5" pos:end="20:30"><call pos:start="20:5" pos:end="20:30"><name pos:start="20:5" pos:end="20:10"><name pos:start="20:5" pos:end="20:5">q</name><operator pos:start="20:6" pos:end="20:6">.</operator><name pos:start="20:7" pos:end="20:10">push</name></name><argument_list pos:start="20:11" pos:end="20:30">(<argument pos:start="20:12" pos:end="20:29"><expr pos:start="20:12" pos:end="20:29"><call pos:start="20:12" pos:end="20:29"><name pos:start="20:12" pos:end="20:15">node</name><argument_list pos:start="20:16" pos:end="20:29">(<argument pos:start="20:17" pos:end="20:17"><expr pos:start="20:17" pos:end="20:17"><name pos:start="20:17" pos:end="20:17">a</name></expr></argument>, <argument pos:start="20:20" pos:end="20:20"><expr pos:start="20:20" pos:end="20:20"><name pos:start="20:20" pos:end="20:20">b</name></expr></argument>, <argument pos:start="20:23" pos:end="20:24"><expr pos:start="20:23" pos:end="20:24"><operator pos:start="20:23" pos:end="20:23">-</operator><literal type="number" pos:start="20:24" pos:end="20:24">1</literal></expr></argument>, <argument pos:start="20:27" pos:end="20:28"><expr pos:start="20:27" pos:end="20:28"><operator pos:start="20:27" pos:end="20:27">-</operator><literal type="number" pos:start="20:28" pos:end="20:28">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><call pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:10">memset</name><argument_list pos:start="21:11" pos:end="21:33">(<argument pos:start="21:12" pos:end="21:14"><expr pos:start="21:12" pos:end="21:14"><name pos:start="21:12" pos:end="21:14">vis</name></expr></argument>, <argument pos:start="21:17" pos:end="21:20"><expr pos:start="21:17" pos:end="21:20"><literal type="number" pos:start="21:17" pos:end="21:20">0x3f</literal></expr></argument>, <argument pos:start="21:23" pos:end="21:32"><expr pos:start="21:23" pos:end="21:32"><sizeof pos:start="21:23" pos:end="21:32">sizeof <name pos:start="21:30" pos:end="21:32">vis</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:19"><expr pos:start="22:5" pos:end="22:18"><name pos:start="22:5" pos:end="22:13"><name pos:start="22:5" pos:end="22:7">vis</name><index pos:start="22:8" pos:end="22:10">[<expr pos:start="22:9" pos:end="22:9"><name pos:start="22:9" pos:end="22:9">a</name></expr>]</index><index pos:start="22:11" pos:end="22:13">[<expr pos:start="22:12" pos:end="22:12"><name pos:start="22:12" pos:end="22:12">b</name></expr>]</index></name> <operator pos:start="22:15" pos:end="22:15">=</operator> <operator pos:start="22:17" pos:end="22:17">-</operator><literal type="number" pos:start="22:18" pos:end="22:18">1</literal></expr>;</expr_stmt>
    <while pos:start="23:5" pos:end="39:5">while<condition pos:start="23:10" pos:end="23:21">(<expr pos:start="23:11" pos:end="23:20"><operator pos:start="23:11" pos:end="23:11">!</operator><call pos:start="23:12" pos:end="23:20"><name pos:start="23:12" pos:end="23:18"><name pos:start="23:12" pos:end="23:12">q</name><operator pos:start="23:13" pos:end="23:13">.</operator><name pos:start="23:14" pos:end="23:18">empty</name></name><argument_list pos:start="23:19" pos:end="23:20">()</argument_list></call></expr>)</condition> <block pos:start="23:23" pos:end="39:5">{<block_content pos:start="24:9" pos:end="38:9">
        <decl_stmt pos:start="24:9" pos:end="24:27"><decl pos:start="24:9" pos:end="24:26"><type pos:start="24:9" pos:end="24:12"><name pos:start="24:9" pos:end="24:12">node</name></type> <name pos:start="24:14" pos:end="24:14">g</name> <init pos:start="24:16" pos:end="24:26">= <expr pos:start="24:18" pos:end="24:26"><call pos:start="24:18" pos:end="24:26"><name pos:start="24:18" pos:end="24:24"><name pos:start="24:18" pos:end="24:18">q</name><operator pos:start="24:19" pos:end="24:19">.</operator><name pos:start="24:20" pos:end="24:24">front</name></name><argument_list pos:start="24:25" pos:end="24:26">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:16"><expr pos:start="25:9" pos:end="25:15"><call pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">q</name><operator pos:start="25:10" pos:end="25:10">.</operator><name pos:start="25:11" pos:end="25:13">pop</name></name><argument_list pos:start="25:14" pos:end="25:15">()</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="26:9" pos:end="29:9"><if pos:start="26:9" pos:end="29:9">if<condition pos:start="26:11" pos:end="26:32">(<expr pos:start="26:12" pos:end="26:31"><name pos:start="26:12" pos:end="26:12">x</name> <operator pos:start="26:14" pos:end="26:15">==</operator> <name pos:start="26:17" pos:end="26:19"><name pos:start="26:17" pos:end="26:17">g</name><operator pos:start="26:18" pos:end="26:18">.</operator><name pos:start="26:19" pos:end="26:19">x</name></name> <operator pos:start="26:21" pos:end="26:22">&amp;&amp;</operator> <name pos:start="26:24" pos:end="26:24">y</name> <operator pos:start="26:26" pos:end="26:27">==</operator> <name pos:start="26:29" pos:end="26:31"><name pos:start="26:29" pos:end="26:29">g</name><operator pos:start="26:30" pos:end="26:30">.</operator><name pos:start="26:31" pos:end="26:31">y</name></name></expr>)</condition> <block pos:start="26:34" pos:end="29:9">{<block_content pos:start="27:13" pos:end="28:19">
            <expr_stmt pos:start="27:13" pos:end="27:24"><expr pos:start="27:13" pos:end="27:23"><call pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:16">puts</name><argument_list pos:start="27:17" pos:end="27:23">(<argument pos:start="27:18" pos:end="27:22"><expr pos:start="27:18" pos:end="27:22"><literal type="string" pos:start="27:18" pos:end="27:22">"yes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="28:13" pos:end="28:19">return;</return>
        </block_content>}</block></if></if_stmt>
        <for pos:start="30:9" pos:end="38:9">for<control pos:start="30:12" pos:end="30:34">(<init pos:start="30:13" pos:end="30:22"><decl pos:start="30:13" pos:end="30:21"><type pos:start="30:13" pos:end="30:15"><name pos:start="30:13" pos:end="30:15">int</name></type> <name pos:start="30:17" pos:end="30:17">i</name> <init pos:start="30:19" pos:end="30:21">= <expr pos:start="30:21" pos:end="30:21"><literal type="number" pos:start="30:21" pos:end="30:21">0</literal></expr></init></decl>;</init> <condition pos:start="30:24" pos:end="30:29"><expr pos:start="30:24" pos:end="30:28"><name pos:start="30:24" pos:end="30:24">i</name> <operator pos:start="30:26" pos:end="30:26">&lt;</operator> <literal type="number" pos:start="30:28" pos:end="30:28">4</literal></expr>;</condition> <incr pos:start="30:31" pos:end="30:33"><expr pos:start="30:31" pos:end="30:33"><name pos:start="30:31" pos:end="30:31">i</name><operator pos:start="30:32" pos:end="30:33">++</operator></expr></incr>)</control> <block pos:start="30:36" pos:end="38:9">{<block_content pos:start="31:13" pos:end="37:13">
            <decl_stmt pos:start="31:13" pos:end="31:31"><decl pos:start="31:13" pos:end="31:30"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:18">tx</name> <init pos:start="31:20" pos:end="31:30">= <expr pos:start="31:22" pos:end="31:30"><name pos:start="31:22" pos:end="31:22">x</name> <operator pos:start="31:24" pos:end="31:24">+</operator> <name pos:start="31:26" pos:end="31:30"><name pos:start="31:26" pos:end="31:27">dx</name><index pos:start="31:28" pos:end="31:30">[<expr pos:start="31:29" pos:end="31:29"><name pos:start="31:29" pos:end="31:29">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="32:13" pos:end="32:31"><decl pos:start="32:13" pos:end="32:30"><type pos:start="32:13" pos:end="32:15"><name pos:start="32:13" pos:end="32:15">int</name></type> <name pos:start="32:17" pos:end="32:18">ty</name> <init pos:start="32:20" pos:end="32:30">= <expr pos:start="32:22" pos:end="32:30"><name pos:start="32:22" pos:end="32:22">y</name> <operator pos:start="32:24" pos:end="32:24">+</operator> <name pos:start="32:26" pos:end="32:30"><name pos:start="32:26" pos:end="32:27">dy</name><index pos:start="32:28" pos:end="32:30">[<expr pos:start="32:29" pos:end="32:29"><name pos:start="32:29" pos:end="32:29">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="33:13" pos:end="33:40"><decl pos:start="33:13" pos:end="33:39"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:18">kk</name> <init pos:start="33:20" pos:end="33:39">= <expr pos:start="33:22" pos:end="33:39"><name pos:start="33:22" pos:end="33:24"><name pos:start="33:22" pos:end="33:22">g</name><operator pos:start="33:23" pos:end="33:23">.</operator><name pos:start="33:24" pos:end="33:24">k</name></name> <operator pos:start="33:26" pos:end="33:26">+</operator> <operator pos:start="33:28" pos:end="33:28">(</operator><name pos:start="33:29" pos:end="33:33"><name pos:start="33:29" pos:end="33:29">g</name><operator pos:start="33:30" pos:end="33:30">.</operator><name pos:start="33:31" pos:end="33:33">dir</name></name> <operator pos:start="33:35" pos:end="33:36">!=</operator> <literal type="number" pos:start="33:38" pos:end="33:38">1</literal><operator pos:start="33:39" pos:end="33:39">)</operator></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="34:13" pos:end="37:13"><if pos:start="34:13" pos:end="37:13">if<condition pos:start="34:15" pos:end="34:107">(<expr pos:start="34:16" pos:end="34:106"><name pos:start="34:16" pos:end="34:17">tx</name> <operator pos:start="34:19" pos:end="34:20">&gt;=</operator> <literal type="number" pos:start="34:22" pos:end="34:22">0</literal> <operator pos:start="34:24" pos:end="34:25">&amp;&amp;</operator> <name pos:start="34:27" pos:end="34:28">tx</name> <operator pos:start="34:30" pos:end="34:30">&lt;</operator> <name pos:start="34:32" pos:end="34:32">n</name> <operator pos:start="34:34" pos:end="34:35">&amp;&amp;</operator> <name pos:start="34:37" pos:end="34:38">ty</name> <operator pos:start="34:40" pos:end="34:41">&gt;=</operator> <literal type="number" pos:start="34:43" pos:end="34:43">0</literal> <operator pos:start="34:45" pos:end="34:46">&amp;&amp;</operator> <name pos:start="34:48" pos:end="34:49">ty</name> <operator pos:start="34:51" pos:end="34:51">&lt;</operator> <name pos:start="34:53" pos:end="34:53">m</name> <operator pos:start="34:55" pos:end="34:56">&amp;&amp;</operator> <name pos:start="34:58" pos:end="34:67"><name pos:start="34:58" pos:end="34:59">mp</name><index pos:start="34:60" pos:end="34:63">[<expr pos:start="34:61" pos:end="34:62"><name pos:start="34:61" pos:end="34:62">tx</name></expr>]</index><index pos:start="34:64" pos:end="34:67">[<expr pos:start="34:65" pos:end="34:66"><name pos:start="34:65" pos:end="34:66">ty</name></expr>]</index></name> <operator pos:start="34:69" pos:end="34:70">==</operator> <literal type="char" pos:start="34:72" pos:end="34:74">'.'</literal> <operator pos:start="34:76" pos:end="34:77">&amp;&amp;</operator> <name pos:start="34:79" pos:end="34:79">k</name> <operator pos:start="34:81" pos:end="34:82">&gt;=</operator> <name pos:start="34:84" pos:end="34:85">kk</name> <operator pos:start="34:87" pos:end="34:88">&amp;&amp;</operator> <name pos:start="34:90" pos:end="34:100"><name pos:start="34:90" pos:end="34:92">vis</name><index pos:start="34:93" pos:end="34:96">[<expr pos:start="34:94" pos:end="34:95"><name pos:start="34:94" pos:end="34:95">tx</name></expr>]</index><index pos:start="34:97" pos:end="34:100">[<expr pos:start="34:98" pos:end="34:99"><name pos:start="34:98" pos:end="34:99">ty</name></expr>]</index></name> <operator pos:start="34:102" pos:end="34:103">&gt;=</operator> <name pos:start="34:105" pos:end="34:106">kk</name></expr>)</condition> <block pos:start="34:109" pos:end="37:13">{<block_content pos:start="35:17" pos:end="36:44">
                <expr_stmt pos:start="35:17" pos:end="35:33"><expr pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:19">vis</name><index pos:start="35:20" pos:end="35:23">[<expr pos:start="35:21" pos:end="35:22"><name pos:start="35:21" pos:end="35:22">tx</name></expr>]</index><index pos:start="35:24" pos:end="35:27">[<expr pos:start="35:25" pos:end="35:26"><name pos:start="35:25" pos:end="35:26">ty</name></expr>]</index></name> <operator pos:start="35:29" pos:end="35:29">=</operator> <name pos:start="35:31" pos:end="35:32">kk</name></expr>;</expr_stmt>
                <expr_stmt pos:start="36:17" pos:end="36:44"><expr pos:start="36:17" pos:end="36:43"><call pos:start="36:17" pos:end="36:43"><name pos:start="36:17" pos:end="36:22"><name pos:start="36:17" pos:end="36:17">q</name><operator pos:start="36:18" pos:end="36:18">.</operator><name pos:start="36:19" pos:end="36:22">push</name></name><argument_list pos:start="36:23" pos:end="36:43">(<argument pos:start="36:24" pos:end="36:42"><expr pos:start="36:24" pos:end="36:42"><call pos:start="36:24" pos:end="36:42"><name pos:start="36:24" pos:end="36:27">node</name><argument_list pos:start="36:28" pos:end="36:42">(<argument pos:start="36:29" pos:end="36:30"><expr pos:start="36:29" pos:end="36:30"><name pos:start="36:29" pos:end="36:30">tx</name></expr></argument>, <argument pos:start="36:33" pos:end="36:34"><expr pos:start="36:33" pos:end="36:34"><name pos:start="36:33" pos:end="36:34">ty</name></expr></argument>, <argument pos:start="36:37" pos:end="36:38"><expr pos:start="36:37" pos:end="36:38"><name pos:start="36:37" pos:end="36:38">kk</name></expr></argument>, <argument pos:start="36:41" pos:end="36:41"><expr pos:start="36:41" pos:end="36:41"><name pos:start="36:41" pos:end="36:41">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></while>
    <expr_stmt pos:start="40:5" pos:end="40:15"><expr pos:start="40:5" pos:end="40:14"><call pos:start="40:5" pos:end="40:14"><name pos:start="40:5" pos:end="40:8">puts</name><argument_list pos:start="40:9" pos:end="40:14">(<argument pos:start="40:10" pos:end="40:13"><expr pos:start="40:10" pos:end="40:13"><literal type="string" pos:start="40:10" pos:end="40:13">"no"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="42:1" pos:end="56:1"><type pos:start="42:1" pos:end="42:3"><name pos:start="42:1" pos:end="42:3">int</name></type> <name pos:start="42:5" pos:end="42:8">main</name><parameter_list pos:start="42:9" pos:end="42:10">()</parameter_list> <block pos:start="42:12" pos:end="56:1">{<block_content pos:start="43:5" pos:end="55:13">
    <expr_stmt pos:start="43:5" pos:end="43:35"><expr pos:start="43:5" pos:end="43:34"><call pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:11">freopen</name><argument_list pos:start="43:12" pos:end="43:34">(<argument pos:start="43:13" pos:end="43:21"><expr pos:start="43:13" pos:end="43:21"><literal type="string" pos:start="43:13" pos:end="43:21">"maze.in"</literal></expr></argument>, <argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><literal type="string" pos:start="43:24" pos:end="43:26">"r"</literal></expr></argument>, <argument pos:start="43:29" pos:end="43:33"><expr pos:start="43:29" pos:end="43:33"><name pos:start="43:29" pos:end="43:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:37"><expr pos:start="44:5" pos:end="44:36"><call pos:start="44:5" pos:end="44:36"><name pos:start="44:5" pos:end="44:11">freopen</name><argument_list pos:start="44:12" pos:end="44:36">(<argument pos:start="44:13" pos:end="44:22"><expr pos:start="44:13" pos:end="44:22"><literal type="string" pos:start="44:13" pos:end="44:22">"maze.out"</literal></expr></argument>, <argument pos:start="44:25" pos:end="44:27"><expr pos:start="44:25" pos:end="44:27"><literal type="string" pos:start="44:25" pos:end="44:27">"w"</literal></expr></argument>, <argument pos:start="44:30" pos:end="44:35"><expr pos:start="44:30" pos:end="44:35"><name pos:start="44:30" pos:end="44:35">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="45:5" pos:end="45:10"><decl pos:start="45:5" pos:end="45:9"><type pos:start="45:5" pos:end="45:7"><name pos:start="45:5" pos:end="45:7">int</name></type> <name pos:start="45:9" pos:end="45:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="46:5" pos:end="46:13"><expr pos:start="46:5" pos:end="46:12"><name pos:start="46:5" pos:end="46:7">cin</name> <operator pos:start="46:9" pos:end="46:10">&gt;&gt;</operator> <name pos:start="46:12" pos:end="46:12">t</name></expr>;</expr_stmt>
    <while pos:start="47:5" pos:end="54:5">while<condition pos:start="47:10" pos:end="47:14">(<expr pos:start="47:11" pos:end="47:13"><name pos:start="47:11" pos:end="47:11">t</name><operator pos:start="47:12" pos:end="47:13">--</operator></expr>)</condition> <block pos:start="47:16" pos:end="54:5">{<block_content pos:start="48:9" pos:end="53:14">
        <expr_stmt pos:start="48:9" pos:end="48:22"><expr pos:start="48:9" pos:end="48:21"><name pos:start="48:9" pos:end="48:11">cin</name> <operator pos:start="48:13" pos:end="48:14">&gt;&gt;</operator> <name pos:start="48:16" pos:end="48:16">n</name> <operator pos:start="48:18" pos:end="48:19">&gt;&gt;</operator> <name pos:start="48:21" pos:end="48:21">m</name></expr>;</expr_stmt>
        <for pos:start="49:9" pos:end="50:25">for<control pos:start="49:12" pos:end="49:34">(<init pos:start="49:13" pos:end="49:22"><decl pos:start="49:13" pos:end="49:21"><type pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">int</name></type> <name pos:start="49:17" pos:end="49:17">i</name> <init pos:start="49:19" pos:end="49:21">= <expr pos:start="49:21" pos:end="49:21"><literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr></init></decl>;</init> <condition pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:24">i</name> <operator pos:start="49:26" pos:end="49:26">&lt;</operator> <name pos:start="49:28" pos:end="49:28">n</name></expr>;</condition> <incr pos:start="49:31" pos:end="49:33"><expr pos:start="49:31" pos:end="49:33"><name pos:start="49:31" pos:end="49:31">i</name><operator pos:start="49:32" pos:end="49:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="50:13" pos:end="50:25"><block_content pos:start="50:13" pos:end="50:25">
            <expr_stmt pos:start="50:13" pos:end="50:25"><expr pos:start="50:13" pos:end="50:24"><name pos:start="50:13" pos:end="50:15">cin</name> <operator pos:start="50:17" pos:end="50:18">&gt;&gt;</operator> <name pos:start="50:20" pos:end="50:24"><name pos:start="50:20" pos:end="50:21">mp</name><index pos:start="50:22" pos:end="50:24">[<expr pos:start="50:23" pos:end="50:23"><name pos:start="50:23" pos:end="50:23">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
        <expr_stmt pos:start="51:9" pos:end="51:37"><expr pos:start="51:9" pos:end="51:36"><name pos:start="51:9" pos:end="51:11">cin</name> <operator pos:start="51:13" pos:end="51:14">&gt;&gt;</operator> <name pos:start="51:16" pos:end="51:16">k</name> <operator pos:start="51:18" pos:end="51:19">&gt;&gt;</operator> <name pos:start="51:21" pos:end="51:21">b</name> <operator pos:start="51:23" pos:end="51:24">&gt;&gt;</operator> <name pos:start="51:26" pos:end="51:26">a</name> <operator pos:start="51:28" pos:end="51:29">&gt;&gt;</operator> <name pos:start="51:31" pos:end="51:31">y</name> <operator pos:start="51:33" pos:end="51:34">&gt;&gt;</operator> <name pos:start="51:36" pos:end="51:36">x</name></expr>;</expr_stmt>
        <expr_stmt pos:start="52:9" pos:end="52:27"><expr pos:start="52:9" pos:end="52:11"><name pos:start="52:9" pos:end="52:9">a</name><operator pos:start="52:10" pos:end="52:11">--</operator></expr><operator pos:start="52:12" pos:end="52:12">,</operator> <expr pos:start="52:14" pos:end="52:16"><name pos:start="52:14" pos:end="52:14">b</name><operator pos:start="52:15" pos:end="52:16">--</operator></expr><operator pos:start="52:17" pos:end="52:17">,</operator> <expr pos:start="52:19" pos:end="52:21"><name pos:start="52:19" pos:end="52:19">x</name><operator pos:start="52:20" pos:end="52:21">--</operator></expr><operator pos:start="52:22" pos:end="52:22">,</operator> <expr pos:start="52:24" pos:end="52:26"><name pos:start="52:24" pos:end="52:24">y</name><operator pos:start="52:25" pos:end="52:26">--</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="53:9" pos:end="53:14"><expr pos:start="53:9" pos:end="53:13"><call pos:start="53:9" pos:end="53:13"><name pos:start="53:9" pos:end="53:11">BFS</name><argument_list pos:start="53:12" pos:end="53:13">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
