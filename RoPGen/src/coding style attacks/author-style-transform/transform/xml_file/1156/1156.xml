<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1156/1156.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<struct pos:start="3:1" pos:end="5:2">struct <name pos:start="3:8" pos:end="3:11">node</name><block pos:start="3:12" pos:end="5:1">{<public type="default" pos:start="4:5" pos:end="4:12">
    <decl_stmt pos:start="4:5" pos:end="4:12"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">x</name></decl>,<decl pos:start="4:11" pos:end="4:11"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:11" pos:end="4:11">y</name></decl>;</decl_stmt>
</public>}</block>;</struct>
<decl_stmt pos:start="6:1" pos:end="6:70"><decl pos:start="6:1" pos:end="6:17"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:17"><name pos:start="6:5" pos:end="6:5">a</name><index pos:start="6:6" pos:end="6:11">[<expr pos:start="6:7" pos:end="6:10"><literal type="number" pos:start="6:7" pos:end="6:10">1000</literal></expr>]</index><index pos:start="6:12" pos:end="6:17">[<expr pos:start="6:13" pos:end="6:16"><literal type="number" pos:start="6:13" pos:end="6:16">1000</literal></expr>]</index></name></decl>,<decl pos:start="6:19" pos:end="6:21"><type ref="prev" pos:start="6:1" pos:end="6:3"/><name pos:start="6:19" pos:end="6:19">s</name><init pos:start="6:20" pos:end="6:21">=<expr pos:start="6:21" pos:end="6:21"><literal type="number" pos:start="6:21" pos:end="6:21">0</literal></expr></init></decl>,<decl pos:start="6:23" pos:end="6:27"><type ref="prev" pos:start="6:1" pos:end="6:3"/><name pos:start="6:23" pos:end="6:25">ans</name><init pos:start="6:26" pos:end="6:27">=<expr pos:start="6:27" pos:end="6:27"><literal type="number" pos:start="6:27" pos:end="6:27">0</literal></expr></init></decl>,<decl pos:start="6:29" pos:end="6:29"><type ref="prev" pos:start="6:1" pos:end="6:3"/><name pos:start="6:29" pos:end="6:29">n</name></decl>,<decl pos:start="6:31" pos:end="6:31"><type ref="prev" pos:start="6:1" pos:end="6:3"/><name pos:start="6:31" pos:end="6:31">m</name></decl>,<decl pos:start="6:33" pos:end="6:69"><type ref="prev" pos:start="6:1" pos:end="6:3"/><name pos:start="6:33" pos:end="6:41"><name pos:start="6:33" pos:end="6:35">dxy</name><index pos:start="6:36" pos:end="6:38">[<expr pos:start="6:37" pos:end="6:37"><literal type="number" pos:start="6:37" pos:end="6:37">4</literal></expr>]</index><index pos:start="6:39" pos:end="6:41">[<expr pos:start="6:40" pos:end="6:40"><literal type="number" pos:start="6:40" pos:end="6:40">2</literal></expr>]</index></name><init pos:start="6:42" pos:end="6:69">=<expr pos:start="6:43" pos:end="6:69"><block pos:start="6:43" pos:end="6:69">{<expr pos:start="6:44" pos:end="6:49"><block pos:start="6:44" pos:end="6:49">{<expr pos:start="6:45" pos:end="6:46"><operator pos:start="6:45" pos:end="6:45">-</operator><literal type="number" pos:start="6:46" pos:end="6:46">1</literal></expr>,<expr pos:start="6:48" pos:end="6:48"><literal type="number" pos:start="6:48" pos:end="6:48">0</literal></expr>}</block></expr>,<expr pos:start="6:51" pos:end="6:55"><block pos:start="6:51" pos:end="6:55">{<expr pos:start="6:52" pos:end="6:52"><literal type="number" pos:start="6:52" pos:end="6:52">1</literal></expr>,<expr pos:start="6:54" pos:end="6:54"><literal type="number" pos:start="6:54" pos:end="6:54">0</literal></expr>}</block></expr>,<expr pos:start="6:57" pos:end="6:62"><block pos:start="6:57" pos:end="6:62">{<expr pos:start="6:58" pos:end="6:58"><literal type="number" pos:start="6:58" pos:end="6:58">0</literal></expr>,<expr pos:start="6:60" pos:end="6:61"><operator pos:start="6:60" pos:end="6:60">-</operator><literal type="number" pos:start="6:61" pos:end="6:61">1</literal></expr>}</block></expr>,<expr pos:start="6:64" pos:end="6:68"><block pos:start="6:64" pos:end="6:68">{<expr pos:start="6:65" pos:end="6:65"><literal type="number" pos:start="6:65" pos:end="6:65">0</literal></expr>,<expr pos:start="6:67" pos:end="6:67"><literal type="number" pos:start="6:67" pos:end="6:67">1</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:21"><decl pos:start="7:1" pos:end="7:20"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">bool</name></type> <name pos:start="7:6" pos:end="7:20"><name pos:start="7:6" pos:end="7:8">vis</name><index pos:start="7:9" pos:end="7:14">[<expr pos:start="7:10" pos:end="7:13"><literal type="number" pos:start="7:10" pos:end="7:13">1000</literal></expr>]</index><index pos:start="7:15" pos:end="7:20">[<expr pos:start="7:16" pos:end="7:19"><literal type="number" pos:start="7:16" pos:end="7:19">1000</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="8:1" pos:end="27:1"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">void</name></type> <name pos:start="8:6" pos:end="8:8">bfs</name><parameter_list pos:start="8:9" pos:end="8:23">(<parameter pos:start="8:10" pos:end="8:15"><decl pos:start="8:10" pos:end="8:15"><type pos:start="8:10" pos:end="8:15"><name pos:start="8:10" pos:end="8:12">int</name></type> <name pos:start="8:14" pos:end="8:15">sx</name></decl></parameter>,<parameter pos:start="8:17" pos:end="8:22"><decl pos:start="8:17" pos:end="8:22"><type pos:start="8:17" pos:end="8:22"><name pos:start="8:17" pos:end="8:19">int</name></type> <name pos:start="8:21" pos:end="8:22">sy</name></decl></parameter>)</parameter_list><block pos:start="8:24" pos:end="27:1">{<block_content pos:start="9:5" pos:end="26:5">
    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:9">queue</name><argument_list type="generic" pos:start="9:10" pos:end="9:15">&lt;<argument pos:start="9:11" pos:end="9:14"><expr pos:start="9:11" pos:end="9:14"><name pos:start="9:11" pos:end="9:14">node</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="9:17" pos:end="9:17">q</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:20"><expr pos:start="10:5" pos:end="10:19"><name pos:start="10:5" pos:end="10:15"><name pos:start="10:5" pos:end="10:7">vis</name><index pos:start="10:8" pos:end="10:11">[<expr pos:start="10:9" pos:end="10:10"><name pos:start="10:9" pos:end="10:10">sx</name></expr>]</index><index pos:start="10:12" pos:end="10:15">[<expr pos:start="10:13" pos:end="10:14"><name pos:start="10:13" pos:end="10:14">sy</name></expr>]</index></name> <operator pos:start="10:17" pos:end="10:17">=</operator> <literal type="number" pos:start="10:19" pos:end="10:19">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><call pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:5">q</name><operator pos:start="11:6" pos:end="11:6">.</operator><name pos:start="11:7" pos:end="11:10">push</name></name><argument_list pos:start="11:11" pos:end="11:23">(<argument pos:start="11:12" pos:end="11:22"><expr pos:start="11:12" pos:end="11:22"><call pos:start="11:12" pos:end="11:22"><name pos:start="11:12" pos:end="11:15">node</name><argument_list pos:start="11:16" pos:end="11:22">{<argument pos:start="11:17" pos:end="11:18"><expr pos:start="11:17" pos:end="11:18"><name pos:start="11:17" pos:end="11:18">sx</name></expr></argument>,<argument pos:start="11:20" pos:end="11:21"><expr pos:start="11:20" pos:end="11:21"><name pos:start="11:20" pos:end="11:21">sy</name></expr></argument>}</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while pos:start="12:5" pos:end="26:5">while<condition pos:start="12:10" pos:end="12:19">(<expr pos:start="12:11" pos:end="12:18"><call pos:start="12:11" pos:end="12:18"><name pos:start="12:11" pos:end="12:16"><name pos:start="12:11" pos:end="12:11">q</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">size</name></name><argument_list pos:start="12:17" pos:end="12:18">()</argument_list></call></expr>)</condition><block pos:start="12:20" pos:end="26:5">{<block_content pos:start="13:9" pos:end="25:9">
        <decl_stmt pos:start="13:9" pos:end="13:27"><decl pos:start="13:9" pos:end="13:26"><type pos:start="13:9" pos:end="13:12"><name pos:start="13:9" pos:end="13:12">node</name></type> <name pos:start="13:14" pos:end="13:16">cur</name><init pos:start="13:17" pos:end="13:26">=<expr pos:start="13:18" pos:end="13:26"><call pos:start="13:18" pos:end="13:26"><name pos:start="13:18" pos:end="13:24"><name pos:start="13:18" pos:end="13:18">q</name><operator pos:start="13:19" pos:end="13:19">.</operator><name pos:start="13:20" pos:end="13:24">front</name></name><argument_list pos:start="13:25" pos:end="13:26">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:16"><expr pos:start="14:9" pos:end="14:15"><call pos:start="14:9" pos:end="14:15"><name pos:start="14:9" pos:end="14:13"><name pos:start="14:9" pos:end="14:9">q</name><operator pos:start="14:10" pos:end="14:10">.</operator><name pos:start="14:11" pos:end="14:13">pop</name></name><argument_list pos:start="14:14" pos:end="14:15">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:26"><expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:9">s</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <name pos:start="15:13" pos:end="15:13">s</name> <operator pos:start="15:15" pos:end="15:15">+</operator> <name pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:17">a</name><index pos:start="15:18" pos:end="15:21">[<expr pos:start="15:19" pos:end="15:20"><name pos:start="15:19" pos:end="15:20">sx</name></expr>]</index><index pos:start="15:22" pos:end="15:25">[<expr pos:start="15:23" pos:end="15:24"><name pos:start="15:23" pos:end="15:24">sy</name></expr>]</index></name></expr>;</expr_stmt> 
        <for pos:start="16:9" pos:end="25:9">for<control pos:start="16:12" pos:end="16:30">(<init pos:start="16:13" pos:end="16:20"><decl pos:start="16:13" pos:end="16:19"><type pos:start="16:13" pos:end="16:15"><name pos:start="16:13" pos:end="16:15">int</name></type> <name pos:start="16:17" pos:end="16:17">i</name><init pos:start="16:18" pos:end="16:19">=<expr pos:start="16:19" pos:end="16:19"><literal type="number" pos:start="16:19" pos:end="16:19">0</literal></expr></init></decl>;</init> <condition pos:start="16:22" pos:end="16:25"><expr pos:start="16:22" pos:end="16:24"><name pos:start="16:22" pos:end="16:22">i</name><operator pos:start="16:23" pos:end="16:23">&lt;</operator><literal type="number" pos:start="16:24" pos:end="16:24">4</literal></expr>;</condition> <incr pos:start="16:27" pos:end="16:29"><expr pos:start="16:27" pos:end="16:29"><name pos:start="16:27" pos:end="16:27">i</name><operator pos:start="16:28" pos:end="16:29">++</operator></expr></incr>)</control><block pos:start="16:31" pos:end="25:9">{<block_content pos:start="17:13" pos:end="24:13">
            <decl_stmt pos:start="17:13" pos:end="17:54"><decl pos:start="17:13" pos:end="17:34"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:18">nx</name><init pos:start="17:19" pos:end="17:34">=<expr pos:start="17:20" pos:end="17:34"><name pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:22">cur</name><operator pos:start="17:23" pos:end="17:23">.</operator><name pos:start="17:24" pos:end="17:24">x</name></name><operator pos:start="17:25" pos:end="17:25">+</operator><name pos:start="17:26" pos:end="17:34"><name pos:start="17:26" pos:end="17:28">dxy</name><index pos:start="17:29" pos:end="17:31">[<expr pos:start="17:30" pos:end="17:30"><name pos:start="17:30" pos:end="17:30">i</name></expr>]</index><index pos:start="17:32" pos:end="17:34">[<expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">0</literal></expr>]</index></name></expr></init></decl>,<decl pos:start="17:36" pos:end="17:53"><type ref="prev" pos:start="17:13" pos:end="17:15"/><name pos:start="17:36" pos:end="17:37">ny</name><init pos:start="17:38" pos:end="17:53">=<expr pos:start="17:39" pos:end="17:53"><name pos:start="17:39" pos:end="17:43"><name pos:start="17:39" pos:end="17:41">cur</name><operator pos:start="17:42" pos:end="17:42">.</operator><name pos:start="17:43" pos:end="17:43">y</name></name><operator pos:start="17:44" pos:end="17:44">+</operator><name pos:start="17:45" pos:end="17:53"><name pos:start="17:45" pos:end="17:47">dxy</name><index pos:start="17:48" pos:end="17:50">[<expr pos:start="17:49" pos:end="17:49"><name pos:start="17:49" pos:end="17:49">i</name></expr>]</index><index pos:start="17:51" pos:end="17:53">[<expr pos:start="17:52" pos:end="17:52"><literal type="number" pos:start="17:52" pos:end="17:52">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="18:13" pos:end="20:13"><if pos:start="18:13" pos:end="20:13">if<condition pos:start="18:15" pos:end="18:38">(<expr pos:start="18:16" pos:end="18:37"><name pos:start="18:16" pos:end="18:24"><name pos:start="18:16" pos:end="18:17">nx</name><argument_list type="generic" pos:start="18:18" pos:end="18:24">&lt;<argument pos:start="18:19" pos:end="18:23"><expr pos:start="18:19" pos:end="18:23"><literal type="number" pos:start="18:19" pos:end="18:19">1</literal><operator pos:start="18:20" pos:end="18:21">||</operator><name pos:start="18:22" pos:end="18:23">nx</name></expr></argument>&gt;</argument_list></name><name pos:start="18:25" pos:end="18:25">n</name><operator pos:start="18:26" pos:end="18:27">||</operator><name pos:start="18:28" pos:end="18:36"><name pos:start="18:28" pos:end="18:29">ny</name><argument_list type="generic" pos:start="18:30" pos:end="18:36">&lt;<argument pos:start="18:31" pos:end="18:35"><expr pos:start="18:31" pos:end="18:35"><literal type="number" pos:start="18:31" pos:end="18:31">1</literal><operator pos:start="18:32" pos:end="18:33">||</operator><name pos:start="18:34" pos:end="18:35">ny</name></expr></argument>&gt;</argument_list></name><name pos:start="18:37" pos:end="18:37">m</name></expr>)</condition><block pos:start="18:39" pos:end="20:13">{<block_content pos:start="19:17" pos:end="19:25">
                <continue pos:start="19:17" pos:end="19:25">continue;</continue>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="21:13" pos:end="24:13"><if pos:start="21:13" pos:end="24:13">if<condition pos:start="21:15" pos:end="21:42">(<expr pos:start="21:16" pos:end="21:41"><name pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:16">a</name><index pos:start="21:17" pos:end="21:20">[<expr pos:start="21:18" pos:end="21:19"><name pos:start="21:18" pos:end="21:19">nx</name></expr>]</index><index pos:start="21:21" pos:end="21:24">[<expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">ny</name></expr>]</index></name><operator pos:start="21:25" pos:end="21:26">==</operator><literal type="number" pos:start="21:27" pos:end="21:27">1</literal><operator pos:start="21:28" pos:end="21:29">&amp;&amp;</operator><operator pos:start="21:30" pos:end="21:30">!</operator><name pos:start="21:31" pos:end="21:41"><name pos:start="21:31" pos:end="21:33">vis</name><index pos:start="21:34" pos:end="21:37">[<expr pos:start="21:35" pos:end="21:36"><name pos:start="21:35" pos:end="21:36">nx</name></expr>]</index><index pos:start="21:38" pos:end="21:41">[<expr pos:start="21:39" pos:end="21:40"><name pos:start="21:39" pos:end="21:40">ny</name></expr>]</index></name></expr>)</condition><block pos:start="21:43" pos:end="24:13">{<block_content pos:start="22:17" pos:end="23:36">
                <expr_stmt pos:start="22:17" pos:end="22:32"><expr pos:start="22:17" pos:end="22:31"><name pos:start="22:17" pos:end="22:27"><name pos:start="22:17" pos:end="22:19">vis</name><index pos:start="22:20" pos:end="22:23">[<expr pos:start="22:21" pos:end="22:22"><name pos:start="22:21" pos:end="22:22">nx</name></expr>]</index><index pos:start="22:24" pos:end="22:27">[<expr pos:start="22:25" pos:end="22:26"><name pos:start="22:25" pos:end="22:26">ny</name></expr>]</index></name> <operator pos:start="22:29" pos:end="22:29">=</operator> <literal type="number" pos:start="22:31" pos:end="22:31">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="23:17" pos:end="23:36"><expr pos:start="23:17" pos:end="23:35"><call pos:start="23:17" pos:end="23:35"><name pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:17">q</name><operator pos:start="23:18" pos:end="23:18">.</operator><name pos:start="23:19" pos:end="23:22">push</name></name><argument_list pos:start="23:23" pos:end="23:35">(<argument pos:start="23:24" pos:end="23:34"><expr pos:start="23:24" pos:end="23:34"><call pos:start="23:24" pos:end="23:34"><name pos:start="23:24" pos:end="23:27">node</name><argument_list pos:start="23:28" pos:end="23:34">{<argument pos:start="23:29" pos:end="23:30"><expr pos:start="23:29" pos:end="23:30"><name pos:start="23:29" pos:end="23:30">nx</name></expr></argument>,<argument pos:start="23:32" pos:end="23:33"><expr pos:start="23:32" pos:end="23:33"><name pos:start="23:32" pos:end="23:33">ny</name></expr></argument>}</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for> 
    </block_content>}</block></while>
</block_content>}</block></function>
<function pos:start="28:1" pos:end="48:1"><type pos:start="28:1" pos:end="28:3"><name pos:start="28:1" pos:end="28:3">int</name></type> <name pos:start="28:5" pos:end="28:8">main</name><parameter_list pos:start="28:9" pos:end="28:10">()</parameter_list><block pos:start="28:11" pos:end="48:1">{<block_content pos:start="29:5" pos:end="47:13">
    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:7">cin</name> <operator pos:start="29:9" pos:end="29:10">&gt;&gt;</operator> <name pos:start="29:12" pos:end="29:12">n</name> <operator pos:start="29:14" pos:end="29:15">&gt;&gt;</operator> <name pos:start="29:17" pos:end="29:17">m</name></expr>;</expr_stmt>
    <for pos:start="30:5" pos:end="34:5">for<control pos:start="30:8" pos:end="30:27">(<init pos:start="30:9" pos:end="30:16"><decl pos:start="30:9" pos:end="30:15"><type pos:start="30:9" pos:end="30:11"><name pos:start="30:9" pos:end="30:11">int</name></type> <name pos:start="30:13" pos:end="30:13">i</name><init pos:start="30:14" pos:end="30:15">=<expr pos:start="30:15" pos:end="30:15"><literal type="number" pos:start="30:15" pos:end="30:15">1</literal></expr></init></decl>;</init> <condition pos:start="30:18" pos:end="30:22"><expr pos:start="30:18" pos:end="30:21"><name pos:start="30:18" pos:end="30:18">i</name><operator pos:start="30:19" pos:end="30:20">&lt;=</operator><name pos:start="30:21" pos:end="30:21">n</name></expr>;</condition> <incr pos:start="30:24" pos:end="30:26"><expr pos:start="30:24" pos:end="30:26"><name pos:start="30:24" pos:end="30:24">i</name><operator pos:start="30:25" pos:end="30:26">++</operator></expr></incr>)</control><block pos:start="30:28" pos:end="34:5">{<block_content pos:start="31:9" pos:end="33:9">
        <for pos:start="31:9" pos:end="33:9">for<control pos:start="31:12" pos:end="31:31">(<init pos:start="31:13" pos:end="31:20"><decl pos:start="31:13" pos:end="31:19"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:17">j</name><init pos:start="31:18" pos:end="31:19">=<expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">1</literal></expr></init></decl>;</init> <condition pos:start="31:22" pos:end="31:26"><expr pos:start="31:22" pos:end="31:25"><name pos:start="31:22" pos:end="31:22">j</name><operator pos:start="31:23" pos:end="31:24">&lt;=</operator><name pos:start="31:25" pos:end="31:25">m</name></expr>;</condition> <incr pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:28">j</name><operator pos:start="31:29" pos:end="31:30">++</operator></expr></incr>)</control><block pos:start="31:32" pos:end="33:9">{<block_content pos:start="32:13" pos:end="32:27">
            <expr_stmt pos:start="32:13" pos:end="32:27"><expr pos:start="32:13" pos:end="32:26"><name pos:start="32:13" pos:end="32:15">cin</name> <operator pos:start="32:17" pos:end="32:18">&gt;&gt;</operator> <name pos:start="32:20" pos:end="32:26"><name pos:start="32:20" pos:end="32:20">a</name><index pos:start="32:21" pos:end="32:23">[<expr pos:start="32:22" pos:end="32:22"><name pos:start="32:22" pos:end="32:22">i</name></expr>]</index><index pos:start="32:24" pos:end="32:26">[<expr pos:start="32:25" pos:end="32:25"><name pos:start="32:25" pos:end="32:25">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="35:5" pos:end="45:5">for<control pos:start="35:8" pos:end="35:27">(<init pos:start="35:9" pos:end="35:16"><decl pos:start="35:9" pos:end="35:15"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:13">i</name><init pos:start="35:14" pos:end="35:15">=<expr pos:start="35:15" pos:end="35:15"><literal type="number" pos:start="35:15" pos:end="35:15">1</literal></expr></init></decl>;</init> <condition pos:start="35:18" pos:end="35:22"><expr pos:start="35:18" pos:end="35:21"><name pos:start="35:18" pos:end="35:18">i</name><operator pos:start="35:19" pos:end="35:20">&lt;=</operator><name pos:start="35:21" pos:end="35:21">n</name></expr>;</condition> <incr pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:24">i</name><operator pos:start="35:25" pos:end="35:26">++</operator></expr></incr>)</control><block pos:start="35:28" pos:end="45:5">{<block_content pos:start="36:9" pos:end="44:9">
        <for pos:start="36:9" pos:end="44:9">for<control pos:start="36:12" pos:end="36:31">(<init pos:start="36:13" pos:end="36:20"><decl pos:start="36:13" pos:end="36:19"><type pos:start="36:13" pos:end="36:15"><name pos:start="36:13" pos:end="36:15">int</name></type> <name pos:start="36:17" pos:end="36:17">j</name><init pos:start="36:18" pos:end="36:19">=<expr pos:start="36:19" pos:end="36:19"><literal type="number" pos:start="36:19" pos:end="36:19">1</literal></expr></init></decl>;</init> <condition pos:start="36:22" pos:end="36:26"><expr pos:start="36:22" pos:end="36:25"><name pos:start="36:22" pos:end="36:22">j</name><operator pos:start="36:23" pos:end="36:24">&lt;=</operator><name pos:start="36:25" pos:end="36:25">m</name></expr>;</condition> <incr pos:start="36:28" pos:end="36:30"><expr pos:start="36:28" pos:end="36:30"><name pos:start="36:28" pos:end="36:28">j</name><operator pos:start="36:29" pos:end="36:30">++</operator></expr></incr>)</control><block pos:start="36:32" pos:end="44:9">{<block_content pos:start="37:13" pos:end="43:13">
            <if_stmt pos:start="37:13" pos:end="43:13"><if pos:start="37:13" pos:end="43:13">if<condition pos:start="37:15" pos:end="37:37">(<expr pos:start="37:16" pos:end="37:36"><name pos:start="37:16" pos:end="37:22"><name pos:start="37:16" pos:end="37:16">a</name><index pos:start="37:17" pos:end="37:19">[<expr pos:start="37:18" pos:end="37:18"><name pos:start="37:18" pos:end="37:18">i</name></expr>]</index><index pos:start="37:20" pos:end="37:22">[<expr pos:start="37:21" pos:end="37:21"><name pos:start="37:21" pos:end="37:21">j</name></expr>]</index></name><operator pos:start="37:23" pos:end="37:23">&gt;</operator><literal type="number" pos:start="37:24" pos:end="37:24">0</literal><operator pos:start="37:25" pos:end="37:26">&amp;&amp;</operator><operator pos:start="37:27" pos:end="37:27">!</operator><name pos:start="37:28" pos:end="37:36"><name pos:start="37:28" pos:end="37:30">vis</name><index pos:start="37:31" pos:end="37:33">[<expr pos:start="37:32" pos:end="37:32"><name pos:start="37:32" pos:end="37:32">i</name></expr>]</index><index pos:start="37:34" pos:end="37:36">[<expr pos:start="37:35" pos:end="37:35"><name pos:start="37:35" pos:end="37:35">j</name></expr>]</index></name></expr>)</condition><block pos:start="37:38" pos:end="43:13">{<block_content pos:start="38:17" pos:end="42:17">
                <expr_stmt pos:start="38:17" pos:end="38:22"><expr pos:start="38:17" pos:end="38:21"><name pos:start="38:17" pos:end="38:17">s</name> <operator pos:start="38:19" pos:end="38:19">=</operator> <literal type="number" pos:start="38:21" pos:end="38:21">0</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="39:17" pos:end="39:25"><expr pos:start="39:17" pos:end="39:24"><call pos:start="39:17" pos:end="39:24"><name pos:start="39:17" pos:end="39:19">bfs</name><argument_list pos:start="39:20" pos:end="39:24">(<argument pos:start="39:21" pos:end="39:21"><expr pos:start="39:21" pos:end="39:21"><name pos:start="39:21" pos:end="39:21">i</name></expr></argument>,<argument pos:start="39:23" pos:end="39:23"><expr pos:start="39:23" pos:end="39:23"><name pos:start="39:23" pos:end="39:23">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="40:17" pos:end="42:17"><if pos:start="40:17" pos:end="42:17">if<condition pos:start="40:19" pos:end="40:25">(<expr pos:start="40:20" pos:end="40:24"><name pos:start="40:20" pos:end="40:20">s</name><operator pos:start="40:21" pos:end="40:21">&gt;</operator><name pos:start="40:22" pos:end="40:24">ans</name></expr>)</condition><block pos:start="40:26" pos:end="42:17">{<block_content pos:start="41:21" pos:end="41:28">
                    <expr_stmt pos:start="41:21" pos:end="41:28"><expr pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:23">ans</name> <operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:27">s</name></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="46:5" pos:end="46:16"><expr pos:start="46:5" pos:end="46:15"><name pos:start="46:5" pos:end="46:8">cout</name> <operator pos:start="46:10" pos:end="46:11">&lt;&lt;</operator> <name pos:start="46:13" pos:end="46:15">ans</name></expr>;</expr_stmt>
    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
