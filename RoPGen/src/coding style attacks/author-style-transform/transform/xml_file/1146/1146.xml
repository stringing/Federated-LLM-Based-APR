<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1146/1146.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:13">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:13">&lt;map&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="20:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="20:1">{<block_content pos:start="5:5" pos:end="19:13">
    <expr_stmt pos:start="5:5" pos:end="5:33"><expr pos:start="5:5" pos:end="5:32"><call pos:start="5:5" pos:end="5:32"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:32">(<argument pos:start="5:13" pos:end="5:21"><expr pos:start="5:13" pos:end="5:21"><literal type="string" pos:start="5:13" pos:end="5:21">"pair.in"</literal></expr></argument>,<argument pos:start="5:23" pos:end="5:25"><expr pos:start="5:23" pos:end="5:25"><literal type="string" pos:start="5:23" pos:end="5:25">"r"</literal></expr></argument>,<argument pos:start="5:27" pos:end="5:31"><expr pos:start="5:27" pos:end="5:31"><name pos:start="5:27" pos:end="5:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:35"><expr pos:start="6:5" pos:end="6:34"><call pos:start="6:5" pos:end="6:34"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:34">(<argument pos:start="6:13" pos:end="6:22"><expr pos:start="6:13" pos:end="6:22"><literal type="string" pos:start="6:13" pos:end="6:22">"pair.out"</literal></expr></argument>,<argument pos:start="6:24" pos:end="6:26"><expr pos:start="6:24" pos:end="6:26"><literal type="string" pos:start="6:24" pos:end="6:26">"w"</literal></expr></argument>,<argument pos:start="6:28" pos:end="6:33"><expr pos:start="6:28" pos:end="6:33"><name pos:start="6:28" pos:end="6:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>,<decl pos:start="7:11" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:19"><name pos:start="7:11" pos:end="7:11">l</name><index pos:start="7:12" pos:end="7:19">[<expr pos:start="7:13" pos:end="7:18"><literal type="number" pos:start="7:13" pos:end="7:18">100004</literal></expr>]</index></name></decl>,<decl pos:start="7:21" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:21">i</name></decl>,<decl pos:start="7:23" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:24">mx</name><init pos:start="7:25" pos:end="7:26">=<expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:21"><decl pos:start="8:5" pos:end="8:20"><type pos:start="8:5" pos:end="8:16"><name pos:start="8:5" pos:end="8:16"><name pos:start="8:5" pos:end="8:7">map</name><argument_list type="generic" pos:start="8:8" pos:end="8:16">&lt;<argument pos:start="8:9" pos:end="8:11"><expr pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></expr></argument>,<argument pos:start="8:13" pos:end="8:15"><expr pos:start="8:13" pos:end="8:15"><name pos:start="8:13" pos:end="8:15">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="8:18" pos:end="8:20">cnt</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:11"><expr pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:7">cin</name><operator pos:start="9:8" pos:end="9:9">&gt;&gt;</operator><name pos:start="9:10" pos:end="9:10">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:11"><expr pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:8"><name pos:start="10:5" pos:end="10:5">l</name><index pos:start="10:6" pos:end="10:8">[<expr pos:start="10:7" pos:end="10:7"><literal type="number" pos:start="10:7" pos:end="10:7">0</literal></expr>]</index></name><operator pos:start="10:9" pos:end="10:9">=</operator><literal type="number" pos:start="10:10" pos:end="10:10">0</literal></expr>;</expr_stmt>
    <for pos:start="11:5" pos:end="18:5">for<control pos:start="11:8" pos:end="11:21">(<init pos:start="11:9" pos:end="11:12"><expr pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:9">i</name><operator pos:start="11:10" pos:end="11:10">=</operator><literal type="number" pos:start="11:11" pos:end="11:11">1</literal></expr>;</init><condition pos:start="11:13" pos:end="11:17"><expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:13">i</name><operator pos:start="11:14" pos:end="11:15">&lt;=</operator><name pos:start="11:16" pos:end="11:16">n</name></expr>;</condition><incr pos:start="11:18" pos:end="11:20"><expr pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:18">i</name><operator pos:start="11:19" pos:end="11:20">++</operator></expr></incr>)</control><block pos:start="11:22" pos:end="18:5">{<block_content pos:start="12:9" pos:end="17:25">
        <decl_stmt pos:start="12:9" pos:end="12:14"><decl pos:start="12:9" pos:end="12:13"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">k</name></decl>;</decl_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:15"><expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:11">cin</name><operator pos:start="13:12" pos:end="13:13">&gt;&gt;</operator><name pos:start="13:14" pos:end="13:14">k</name></expr>;</expr_stmt>
        <if_stmt pos:start="14:9" pos:end="14:20"><if pos:start="14:9" pos:end="14:20">if<condition pos:start="14:11" pos:end="14:14">(<expr pos:start="14:12" pos:end="14:13"><operator pos:start="14:12" pos:end="14:12">!</operator><name pos:start="14:13" pos:end="14:13">k</name></expr>)</condition><block type="pseudo" pos:start="14:16" pos:end="14:20"><block_content pos:start="14:16" pos:end="14:20"> <expr_stmt pos:start="14:16" pos:end="14:20"><expr pos:start="14:16" pos:end="14:19"><name pos:start="14:16" pos:end="14:16">k</name><operator pos:start="14:17" pos:end="14:17">=</operator><operator pos:start="14:18" pos:end="14:18">-</operator><literal type="number" pos:start="14:19" pos:end="14:19">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:22"><expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:12"><name pos:start="15:9" pos:end="15:9">l</name><index pos:start="15:10" pos:end="15:12">[<expr pos:start="15:11" pos:end="15:11"><name pos:start="15:11" pos:end="15:11">i</name></expr>]</index></name><operator pos:start="15:13" pos:end="15:13">=</operator><name pos:start="15:14" pos:end="15:19"><name pos:start="15:14" pos:end="15:14">l</name><index pos:start="15:15" pos:end="15:19">[<expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:16">i</name><operator pos:start="15:17" pos:end="15:17">-</operator><literal type="number" pos:start="15:18" pos:end="15:18">1</literal></expr>]</index></name><operator pos:start="15:20" pos:end="15:20">+</operator><name pos:start="15:21" pos:end="15:21">k</name></expr>;</expr_stmt>
        <if_stmt pos:start="16:9" pos:end="17:25"><if pos:start="16:9" pos:end="16:51">if<condition pos:start="16:11" pos:end="16:27">(<expr pos:start="16:12" pos:end="16:26"><call pos:start="16:12" pos:end="16:26"><name pos:start="16:12" pos:end="16:20"><name pos:start="16:12" pos:end="16:14">cnt</name><operator pos:start="16:15" pos:end="16:15">.</operator><name pos:start="16:16" pos:end="16:20">count</name></name><argument_list pos:start="16:21" pos:end="16:26">(<argument pos:start="16:22" pos:end="16:25"><expr pos:start="16:22" pos:end="16:25"><name pos:start="16:22" pos:end="16:25"><name pos:start="16:22" pos:end="16:22">l</name><index pos:start="16:23" pos:end="16:25">[<expr pos:start="16:24" pos:end="16:24"><name pos:start="16:24" pos:end="16:24">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="16:29" pos:end="16:51"><block_content pos:start="16:29" pos:end="16:51"> <expr_stmt pos:start="16:29" pos:end="16:51"><expr pos:start="16:29" pos:end="16:50"><name pos:start="16:29" pos:end="16:30">mx</name><operator pos:start="16:31" pos:end="16:31">=</operator><call pos:start="16:32" pos:end="16:50"><name pos:start="16:32" pos:end="16:34">max</name><argument_list pos:start="16:35" pos:end="16:50">(<argument pos:start="16:36" pos:end="16:46"><expr pos:start="16:36" pos:end="16:46"><name pos:start="16:36" pos:end="16:36">i</name><operator pos:start="16:37" pos:end="16:37">-</operator><name pos:start="16:38" pos:end="16:46"><name pos:start="16:38" pos:end="16:40">cnt</name><index pos:start="16:41" pos:end="16:46">[<expr pos:start="16:42" pos:end="16:45"><name pos:start="16:42" pos:end="16:45"><name pos:start="16:42" pos:end="16:42">l</name><index pos:start="16:43" pos:end="16:45">[<expr pos:start="16:44" pos:end="16:44"><name pos:start="16:44" pos:end="16:44">i</name></expr>]</index></name></expr>]</index></name></expr></argument>,<argument pos:start="16:48" pos:end="16:49"><expr pos:start="16:48" pos:end="16:49"><name pos:start="16:48" pos:end="16:49">mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="17:9" pos:end="17:25">else<block type="pseudo" pos:start="17:14" pos:end="17:25"><block_content pos:start="17:14" pos:end="17:25"> <expr_stmt pos:start="17:14" pos:end="17:25"><expr pos:start="17:14" pos:end="17:24"><name pos:start="17:14" pos:end="17:22"><name pos:start="17:14" pos:end="17:16">cnt</name><index pos:start="17:17" pos:end="17:22">[<expr pos:start="17:18" pos:end="17:21"><name pos:start="17:18" pos:end="17:21"><name pos:start="17:18" pos:end="17:18">l</name><index pos:start="17:19" pos:end="17:21">[<expr pos:start="17:20" pos:end="17:20"><name pos:start="17:20" pos:end="17:20">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="17:23" pos:end="17:23">=</operator><name pos:start="17:24" pos:end="17:24">i</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="19:5" pos:end="19:13"><expr pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:8">cout</name><operator pos:start="19:9" pos:end="19:10">&lt;&lt;</operator><name pos:start="19:11" pos:end="19:12">mx</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
