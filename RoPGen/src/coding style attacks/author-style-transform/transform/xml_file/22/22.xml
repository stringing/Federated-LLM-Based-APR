<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/22/22.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="54:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list>
<block pos:start="4:1" pos:end="54:1">{<block_content pos:start="5:5" pos:end="53:13">
    <expr_stmt pos:start="5:5" pos:end="5:32"><expr pos:start="5:5" pos:end="5:31"><call pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:31">(<argument pos:start="5:13" pos:end="5:20"><expr pos:start="5:13" pos:end="5:20"><literal type="string" pos:start="5:13" pos:end="5:20">"zip.in"</literal></expr></argument>,<argument pos:start="5:22" pos:end="5:24"><expr pos:start="5:22" pos:end="5:24"><literal type="string" pos:start="5:22" pos:end="5:24">"r"</literal></expr></argument>,<argument pos:start="5:26" pos:end="5:30"><expr pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:34"><expr pos:start="6:5" pos:end="6:33"><call pos:start="6:5" pos:end="6:33"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:33">(<argument pos:start="6:13" pos:end="6:21"><expr pos:start="6:13" pos:end="6:21"><literal type="string" pos:start="6:13" pos:end="6:21">"zip.out"</literal></expr></argument>,<argument pos:start="6:23" pos:end="6:25"><expr pos:start="6:23" pos:end="6:25"><literal type="string" pos:start="6:23" pos:end="6:25">"w"</literal></expr></argument>,<argument pos:start="6:27" pos:end="6:32"><expr pos:start="6:27" pos:end="6:32"><name pos:start="6:27" pos:end="6:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>,<decl pos:start="7:11" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:11">m</name><init pos:start="7:12" pos:end="7:13">=<expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:15"><decl pos:start="8:5" pos:end="8:10"><type pos:start="8:5" pos:end="8:8"><name pos:start="8:5" pos:end="8:8">char</name></type> <name pos:start="8:10" pos:end="8:10">a</name></decl>,<decl pos:start="8:12" pos:end="8:14"><type ref="prev" pos:start="8:5" pos:end="8:8"/><name pos:start="8:12" pos:end="8:14">num</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">string</name></type> <name pos:start="9:12" pos:end="9:12">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:11"><expr pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:7">cin</name><operator pos:start="10:8" pos:end="10:9">&gt;&gt;</operator><name pos:start="10:10" pos:end="10:10">s</name></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:15"><expr pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:5">n</name><operator pos:start="11:6" pos:end="11:6">=</operator><call pos:start="11:7" pos:end="11:14"><name pos:start="11:7" pos:end="11:12"><name pos:start="11:7" pos:end="11:7">s</name><operator pos:start="11:8" pos:end="11:8">.</operator><name pos:start="11:9" pos:end="11:12">size</name></name><argument_list pos:start="11:13" pos:end="11:14">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:17"><expr pos:start="12:5" pos:end="12:16"><name pos:start="12:5" pos:end="12:8">cout</name><operator pos:start="12:9" pos:end="12:10">&lt;&lt;</operator><name pos:start="12:11" pos:end="12:11">n</name><operator pos:start="12:12" pos:end="12:13">&lt;&lt;</operator><literal type="string" pos:start="12:14" pos:end="12:16">" "</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:8"><expr pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:5">m</name><operator pos:start="13:6" pos:end="13:6">=</operator><literal type="number" pos:start="13:7" pos:end="13:7">1</literal></expr>;</expr_stmt>
    <for pos:start="14:5" pos:end="34:9">for<control pos:start="14:8" pos:end="14:24">(<init pos:start="14:9" pos:end="14:16"><decl pos:start="14:9" pos:end="14:15"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:13">j</name><init pos:start="14:14" pos:end="14:15">=<expr pos:start="14:15" pos:end="14:15"><literal type="number" pos:start="14:15" pos:end="14:15">0</literal></expr></init></decl>;</init><condition pos:start="14:17" pos:end="14:20"><expr pos:start="14:17" pos:end="14:19"><name pos:start="14:17" pos:end="14:17">j</name><operator pos:start="14:18" pos:end="14:18">&lt;</operator><name pos:start="14:19" pos:end="14:19">n</name></expr>;</condition><incr pos:start="14:21" pos:end="14:23"><expr pos:start="14:21" pos:end="14:23"><name pos:start="14:21" pos:end="14:21">j</name><operator pos:start="14:22" pos:end="14:23">++</operator></expr></incr>)</control>
    <block pos:start="15:5" pos:end="34:9">{<block_content pos:start="16:9" pos:end="33:13">
        <expr_stmt pos:start="16:9" pos:end="16:15"><expr pos:start="16:9" pos:end="16:14"><name pos:start="16:9" pos:end="16:9">a</name><operator pos:start="16:10" pos:end="16:10">=</operator><name pos:start="16:11" pos:end="16:14"><name pos:start="16:11" pos:end="16:11">s</name><index pos:start="16:12" pos:end="16:14">[<expr pos:start="16:13" pos:end="16:13"><name pos:start="16:13" pos:end="16:13">j</name></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="17:9" pos:end="33:13"><if pos:start="17:9" pos:end="20:13">if<condition pos:start="17:11" pos:end="17:16">(<expr pos:start="17:12" pos:end="17:15"><name pos:start="17:12" pos:end="17:12">j</name><operator pos:start="17:13" pos:end="17:14">==</operator><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>)</condition>
            <block pos:start="18:13" pos:end="20:13">{<block_content pos:start="19:17" pos:end="19:22">
                <expr_stmt pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:21"><name pos:start="19:17" pos:end="19:19">num</name><operator pos:start="19:20" pos:end="19:20">=</operator><name pos:start="19:21" pos:end="19:21">a</name></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="21:13" pos:end="33:13">else
            <block pos:start="22:13" pos:end="33:13">{<block_content pos:start="23:17" pos:end="32:17">
                <if_stmt pos:start="23:17" pos:end="32:17"><if pos:start="23:17" pos:end="26:17">if<condition pos:start="23:19" pos:end="23:26">(<expr pos:start="23:20" pos:end="23:25"><name pos:start="23:20" pos:end="23:22">num</name><operator pos:start="23:23" pos:end="23:24">==</operator><name pos:start="23:25" pos:end="23:25">a</name></expr>)</condition>
                <block pos:start="24:17" pos:end="26:17">{<block_content pos:start="25:21" pos:end="25:24">
                    <expr_stmt pos:start="25:21" pos:end="25:24"><expr pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:21">m</name><operator pos:start="25:22" pos:end="25:23">++</operator></expr>;</expr_stmt>
                </block_content>}</block></if>
                <else pos:start="27:17" pos:end="32:17">else
                <block pos:start="28:17" pos:end="32:17">{<block_content pos:start="29:21" pos:end="31:26">
                    <expr_stmt pos:start="29:21" pos:end="29:33"><expr pos:start="29:21" pos:end="29:32"><name pos:start="29:21" pos:end="29:24">cout</name><operator pos:start="29:25" pos:end="29:26">&lt;&lt;</operator><name pos:start="29:27" pos:end="29:27">m</name><operator pos:start="29:28" pos:end="29:29">&lt;&lt;</operator><literal type="string" pos:start="29:30" pos:end="29:32">" "</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="30:21" pos:end="30:24"><expr pos:start="30:21" pos:end="30:23"><name pos:start="30:21" pos:end="30:21">m</name><operator pos:start="30:22" pos:end="30:22">=</operator><literal type="number" pos:start="30:23" pos:end="30:23">1</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:23">num</name><operator pos:start="31:24" pos:end="31:24">=</operator><name pos:start="31:25" pos:end="31:25">a</name></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    <for pos:start="35:5" pos:end="51:5">for<control pos:start="35:8" pos:end="35:24">(<init pos:start="35:9" pos:end="35:16"><decl pos:start="35:9" pos:end="35:15"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:13">i</name><init pos:start="35:14" pos:end="35:15">=<expr pos:start="35:15" pos:end="35:15"><literal type="number" pos:start="35:15" pos:end="35:15">1</literal></expr></init></decl>;</init><condition pos:start="35:17" pos:end="35:20"><expr pos:start="35:17" pos:end="35:19"><name pos:start="35:17" pos:end="35:17">i</name><operator pos:start="35:18" pos:end="35:18">&lt;</operator><name pos:start="35:19" pos:end="35:19">n</name></expr>;</condition><incr pos:start="35:21" pos:end="35:23"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:21">i</name><operator pos:start="35:22" pos:end="35:23">++</operator></expr></incr>)</control>
    <block pos:start="36:5" pos:end="51:5">{<block_content pos:start="37:9" pos:end="50:9">
        <for pos:start="37:9" pos:end="50:9">for<control pos:start="37:12" pos:end="37:28">(<init pos:start="37:13" pos:end="37:20"><decl pos:start="37:13" pos:end="37:19"><type pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">int</name></type> <name pos:start="37:17" pos:end="37:17">j</name><init pos:start="37:18" pos:end="37:19">=<expr pos:start="37:19" pos:end="37:19"><literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr></init></decl>;</init><condition pos:start="37:21" pos:end="37:24"><expr pos:start="37:21" pos:end="37:23"><name pos:start="37:21" pos:end="37:21">j</name><operator pos:start="37:22" pos:end="37:22">&lt;</operator><name pos:start="37:23" pos:end="37:23">n</name></expr>;</condition><incr pos:start="37:25" pos:end="37:27"><expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:25">j</name><operator pos:start="37:26" pos:end="37:27">++</operator></expr></incr>)</control>
        <block pos:start="38:9" pos:end="50:9">{<block_content pos:start="39:13" pos:end="49:13">
            <expr_stmt pos:start="39:13" pos:end="39:19"><expr pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:15">cin</name><operator pos:start="39:16" pos:end="39:17">&gt;&gt;</operator><name pos:start="39:18" pos:end="39:18">a</name></expr>;</expr_stmt>
            <if_stmt pos:start="40:13" pos:end="49:13"><if pos:start="40:13" pos:end="43:13">if<condition pos:start="40:15" pos:end="40:22">(<expr pos:start="40:16" pos:end="40:21"><name pos:start="40:16" pos:end="40:18">num</name><operator pos:start="40:19" pos:end="40:20">==</operator><name pos:start="40:21" pos:end="40:21">a</name></expr>)</condition>
            <block pos:start="41:13" pos:end="43:13">{<block_content pos:start="42:17" pos:end="42:20">
                <expr_stmt pos:start="42:17" pos:end="42:20"><expr pos:start="42:17" pos:end="42:19"><name pos:start="42:17" pos:end="42:17">m</name><operator pos:start="42:18" pos:end="42:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="44:13" pos:end="49:13">else
            <block pos:start="45:13" pos:end="49:13">{<block_content pos:start="46:17" pos:end="48:22">
                <expr_stmt pos:start="46:17" pos:end="46:29"><expr pos:start="46:17" pos:end="46:28"><name pos:start="46:17" pos:end="46:20">cout</name><operator pos:start="46:21" pos:end="46:22">&lt;&lt;</operator><name pos:start="46:23" pos:end="46:23">m</name><operator pos:start="46:24" pos:end="46:25">&lt;&lt;</operator><literal type="string" pos:start="46:26" pos:end="46:28">" "</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="47:17" pos:end="47:20"><expr pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:17">m</name><operator pos:start="47:18" pos:end="47:18">=</operator><literal type="number" pos:start="47:19" pos:end="47:19">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="48:17" pos:end="48:22"><expr pos:start="48:17" pos:end="48:21"><name pos:start="48:17" pos:end="48:19">num</name><operator pos:start="48:20" pos:end="48:20">=</operator><name pos:start="48:21" pos:end="48:21">a</name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="52:5" pos:end="52:12"><expr pos:start="52:5" pos:end="52:11"><name pos:start="52:5" pos:end="52:8">cout</name><operator pos:start="52:9" pos:end="52:10">&lt;&lt;</operator><name pos:start="52:11" pos:end="52:11">m</name></expr>;</expr_stmt>
    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
