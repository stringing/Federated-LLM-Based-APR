<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/721/721.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="10:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">sum</name><parameter_list pos:start="3:8" pos:end="3:14">(<parameter pos:start="3:9" pos:end="3:13"><decl pos:start="3:9" pos:end="3:13"><type pos:start="3:9" pos:end="3:11"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:13">x</name></decl></parameter>)</parameter_list> <block pos:start="3:16" pos:end="10:1">{<block_content pos:start="4:1" pos:end="9:9">
<decl_stmt pos:start="4:1" pos:end="4:10"><decl pos:start="4:1" pos:end="4:9"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">s</name> <init pos:start="4:7" pos:end="4:9">= <expr pos:start="4:9" pos:end="4:9"><literal type="number" pos:start="4:9" pos:end="4:9">0</literal></expr></init></decl>;</decl_stmt>
<while pos:start="5:1" pos:end="8:1">while <condition pos:start="5:7" pos:end="5:9">(<expr pos:start="5:8" pos:end="5:8"><name pos:start="5:8" pos:end="5:8">x</name></expr>)</condition> <block pos:start="5:11" pos:end="8:1">{<block_content pos:start="6:5" pos:end="7:12">
    <expr_stmt pos:start="6:5" pos:end="6:16"><expr pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:5">s</name> <operator pos:start="6:7" pos:end="6:8">+=</operator> <name pos:start="6:10" pos:end="6:10">x</name> <operator pos:start="6:12" pos:end="6:12">%</operator> <literal type="number" pos:start="6:14" pos:end="6:15">10</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:12"><expr pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:5">x</name> <operator pos:start="7:7" pos:end="7:8">/=</operator> <literal type="number" pos:start="7:10" pos:end="7:11">10</literal></expr>;</expr_stmt>
</block_content>}</block></while>
<return pos:start="9:1" pos:end="9:9">return <expr pos:start="9:8" pos:end="9:8"><name pos:start="9:8" pos:end="9:8">s</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="11:1" pos:end="16:1"><type pos:start="11:1" pos:end="11:4"><name pos:start="11:1" pos:end="11:4">bool</name></type> <name pos:start="11:6" pos:end="11:8">cmp</name><parameter_list pos:start="11:9" pos:end="11:22">(<parameter pos:start="11:10" pos:end="11:14"><decl pos:start="11:10" pos:end="11:14"><type pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:12">int</name></type> <name pos:start="11:14" pos:end="11:14">y</name></decl></parameter>, <parameter pos:start="11:17" pos:end="11:21"><decl pos:start="11:17" pos:end="11:21"><type pos:start="11:17" pos:end="11:21"><name pos:start="11:17" pos:end="11:19">int</name></type> <name pos:start="11:21" pos:end="11:21">d</name></decl></parameter>)</parameter_list> <block pos:start="11:24" pos:end="16:1">{<block_content pos:start="12:5" pos:end="15:17">
    <if_stmt pos:start="12:5" pos:end="14:5"><if pos:start="12:5" pos:end="14:5">if <condition pos:start="12:8" pos:end="12:33">(<expr pos:start="12:9" pos:end="12:32"><call pos:start="12:9" pos:end="12:14"><name pos:start="12:9" pos:end="12:11">sum</name><argument_list pos:start="12:12" pos:end="12:14">(<argument pos:start="12:13" pos:end="12:13"><expr pos:start="12:13" pos:end="12:13"><name pos:start="12:13" pos:end="12:13">y</name></expr></argument>)</argument_list></call> <operator pos:start="12:16" pos:end="12:16">+</operator> <call pos:start="12:18" pos:end="12:23"><name pos:start="12:18" pos:end="12:20">sum</name><argument_list pos:start="12:21" pos:end="12:23">(<argument pos:start="12:22" pos:end="12:22"><expr pos:start="12:22" pos:end="12:22"><name pos:start="12:22" pos:end="12:22">d</name></expr></argument>)</argument_list></call> <operator pos:start="12:25" pos:end="12:26">==</operator> <call pos:start="12:28" pos:end="12:32"><name pos:start="12:28" pos:end="12:30">sum</name><argument_list pos:start="12:31" pos:end="12:32">()</argument_list></call></expr>)</condition> <block pos:start="12:35" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:31">
        <return pos:start="13:9" pos:end="13:31">return <expr pos:start="13:16" pos:end="13:30"><call pos:start="13:16" pos:end="13:21"><name pos:start="13:16" pos:end="13:18">sum</name><argument_list pos:start="13:19" pos:end="13:21">(<argument pos:start="13:20" pos:end="13:20"><expr pos:start="13:20" pos:end="13:20"><name pos:start="13:20" pos:end="13:20">y</name></expr></argument>)</argument_list></call> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <call pos:start="13:25" pos:end="13:30"><name pos:start="13:25" pos:end="13:27">sum</name><argument_list pos:start="13:28" pos:end="13:30">(<argument pos:start="13:29" pos:end="13:29"><expr pos:start="13:29" pos:end="13:29"><name pos:start="13:29" pos:end="13:29">d</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="15:5" pos:end="15:17">return <expr pos:start="15:12" pos:end="15:16"><name pos:start="15:12" pos:end="15:12">y</name> <operator pos:start="15:14" pos:end="15:14">&lt;</operator> <name pos:start="15:16" pos:end="15:16">d</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="17:1" pos:end="26:1"><type pos:start="17:1" pos:end="17:3"><name pos:start="17:1" pos:end="17:3">int</name></type> <name pos:start="17:5" pos:end="17:8">main</name><parameter_list pos:start="17:9" pos:end="17:10">()</parameter_list> <block pos:start="17:12" pos:end="26:1">{<block_content pos:start="18:5" pos:end="25:13">
    <decl_stmt pos:start="18:5" pos:end="18:18"><decl pos:start="18:5" pos:end="18:17"><type pos:start="18:5" pos:end="18:10"><name pos:start="18:5" pos:end="18:10">string</name></type> <name pos:start="18:12" pos:end="18:17"><name pos:start="18:12" pos:end="18:12">a</name><index pos:start="18:13" pos:end="18:17">[<expr pos:start="18:14" pos:end="18:16"><literal type="number" pos:start="18:14" pos:end="18:16">102</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:13"><expr pos:start="20:5" pos:end="20:12"><name pos:start="20:5" pos:end="20:7">cin</name> <operator pos:start="20:9" pos:end="20:10">&gt;&gt;</operator> <name pos:start="20:12" pos:end="20:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><call pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:8">sort</name><argument_list pos:start="21:9" pos:end="21:23">(<argument pos:start="21:10" pos:end="21:10"><expr pos:start="21:10" pos:end="21:10"><name pos:start="21:10" pos:end="21:10">a</name></expr></argument>, <argument pos:start="21:13" pos:end="21:17"><expr pos:start="21:13" pos:end="21:17"><name pos:start="21:13" pos:end="21:13">a</name> <operator pos:start="21:15" pos:end="21:15">+</operator> <name pos:start="21:17" pos:end="21:17">n</name></expr></argument>, <argument pos:start="21:20" pos:end="21:22"><expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="22:5" pos:end="24:5">for <control pos:start="22:9" pos:end="22:32">(<init pos:start="22:10" pos:end="22:19"><decl pos:start="22:10" pos:end="22:18"><type pos:start="22:10" pos:end="22:12"><name pos:start="22:10" pos:end="22:12">int</name></type> <name pos:start="22:14" pos:end="22:14">i</name> <init pos:start="22:16" pos:end="22:18">= <expr pos:start="22:18" pos:end="22:18"><literal type="number" pos:start="22:18" pos:end="22:18">0</literal></expr></init></decl>;</init> <condition pos:start="22:21" pos:end="22:27"><expr pos:start="22:21" pos:end="22:26"><name pos:start="22:21" pos:end="22:21">i</name> <operator pos:start="22:23" pos:end="22:24">&lt;=</operator> <name pos:start="22:26" pos:end="22:26">n</name></expr>;</condition> <incr pos:start="22:29" pos:end="22:31"><expr pos:start="22:29" pos:end="22:31"><name pos:start="22:29" pos:end="22:29">i</name><operator pos:start="22:30" pos:end="22:31">++</operator></expr></incr>)</control> <block pos:start="22:34" pos:end="24:5">{<block_content pos:start="23:9" pos:end="23:26">
        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:12">cout</name> <operator pos:start="23:14" pos:end="23:15">&lt;&lt;</operator> <name pos:start="23:17" pos:end="23:17">n</name> <operator pos:start="23:19" pos:end="23:20">&lt;&lt;</operator> <name pos:start="23:22" pos:end="23:25">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="25:5" pos:end="25:13">return <expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
