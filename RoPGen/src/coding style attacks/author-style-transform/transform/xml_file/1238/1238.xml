<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1238/1238.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:14"><decl pos:start="3:1" pos:end="3:13"><type pos:start="3:1" pos:end="3:11"><name pos:start="3:1" pos:end="3:11"><name pos:start="3:1" pos:end="3:6">vector</name><argument_list type="generic" pos:start="3:7" pos:end="3:11">&lt;<argument pos:start="3:8" pos:end="3:10"><expr pos:start="3:8" pos:end="3:10"><name pos:start="3:8" pos:end="3:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="3:13" pos:end="3:13">v</name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="33:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list>
<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="6:5" pos:end="32:13">
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:12">s</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">t</name></decl>,<decl pos:start="7:11" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:14">allt</name></decl>,<decl pos:start="7:16" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:18">sum</name><init pos:start="7:19" pos:end="7:20">=<expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:14"><expr pos:start="8:5" pos:end="8:13"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:13">allt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:13"><expr pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:8">allt</name><operator pos:start="9:9" pos:end="9:10">*=</operator><literal type="number" pos:start="9:11" pos:end="9:12">60</literal></expr>;</expr_stmt>
    <while pos:start="10:5" pos:end="30:5">while<condition pos:start="10:10" pos:end="10:17">(<expr pos:start="10:11" pos:end="10:16"><name pos:start="10:11" pos:end="10:13">cin</name><operator pos:start="10:14" pos:end="10:15">&gt;&gt;</operator><name pos:start="10:16" pos:end="10:16">s</name></expr>)</condition><block pos:start="10:18" pos:end="30:5">{<block_content pos:start="11:9" pos:end="29:9">
        <if_stmt pos:start="11:9" pos:end="29:9"><if pos:start="11:9" pos:end="14:9">if<condition pos:start="11:11" pos:end="11:29">(<expr pos:start="11:12" pos:end="11:28"><name pos:start="11:12" pos:end="11:12">s</name><operator pos:start="11:13" pos:end="11:14">==</operator><literal type="char" pos:start="11:15" pos:end="11:28">'tingtingting'</literal></expr>)</condition><block pos:start="11:30" pos:end="14:9">{<block_content pos:start="12:13" pos:end="13:30">
            <expr_stmt pos:start="12:13" pos:end="12:25"><expr pos:start="12:13" pos:end="12:24"><call pos:start="12:13" pos:end="12:24"><name pos:start="12:13" pos:end="12:22"><name pos:start="12:13" pos:end="12:13">v</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:22">pop_back</name></name><argument_list pos:start="12:23" pos:end="12:24">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:30"><expr pos:start="13:13" pos:end="13:29"><name pos:start="13:13" pos:end="13:15">sum</name><operator pos:start="13:16" pos:end="13:16">=</operator><name pos:start="13:17" pos:end="13:29"><name pos:start="13:17" pos:end="13:17">v</name><index pos:start="13:18" pos:end="13:29">[<expr pos:start="13:19" pos:end="13:28"><call pos:start="13:19" pos:end="13:26"><name pos:start="13:19" pos:end="13:24"><name pos:start="13:19" pos:end="13:19">v</name><operator pos:start="13:20" pos:end="13:20">.</operator><name pos:start="13:21" pos:end="13:24">size</name></name><argument_list pos:start="13:25" pos:end="13:26">()</argument_list></call><operator pos:start="13:27" pos:end="13:27">-</operator><literal type="number" pos:start="13:28" pos:end="13:28">1</literal></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="14:10" pos:end="22:9">else if<condition pos:start="14:17" pos:end="14:33">(<expr pos:start="14:18" pos:end="14:32"><name pos:start="14:18" pos:end="14:18">s</name><operator pos:start="14:19" pos:end="14:20">==</operator><literal type="char" pos:start="14:21" pos:end="14:32">'kaomianjin'</literal></expr>)</condition><block pos:start="14:34" pos:end="22:9">{<block_content pos:start="15:13" pos:end="21:21">
            <expr_stmt pos:start="15:13" pos:end="15:19"><expr pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:15">cin</name><operator pos:start="15:16" pos:end="15:17">&gt;&gt;</operator><name pos:start="15:18" pos:end="15:18">t</name></expr>;</expr_stmt>
            <if_stmt pos:start="16:13" pos:end="19:13"><if pos:start="16:13" pos:end="19:13">if<condition pos:start="16:15" pos:end="16:41">(<expr pos:start="16:16" pos:end="16:40"><name pos:start="16:16" pos:end="16:18">cin</name><operator pos:start="16:19" pos:end="16:20">&gt;&gt;</operator><name pos:start="16:21" pos:end="16:21">s</name><operator pos:start="16:22" pos:end="16:23">&amp;&amp;</operator><name pos:start="16:24" pos:end="16:24">s</name><operator pos:start="16:25" pos:end="16:26">==</operator><literal type="char" pos:start="16:27" pos:end="16:40">'tingtingting'</literal></expr>)</condition><block pos:start="16:42" pos:end="19:13">{<block_content pos:start="17:17" pos:end="18:25">
                <expr_stmt pos:start="17:17" pos:end="17:38"><expr pos:start="17:17" pos:end="17:37"><name pos:start="17:17" pos:end="17:20">cout</name><operator pos:start="17:21" pos:end="17:22">&lt;&lt;</operator><literal type="string" pos:start="17:23" pos:end="17:31">"Hahaha."</literal><operator pos:start="17:32" pos:end="17:33">&lt;&lt;</operator><name pos:start="17:34" pos:end="17:37">endl</name></expr>;</expr_stmt>
                <return pos:start="18:17" pos:end="18:25">return <expr pos:start="18:24" pos:end="18:24"><literal type="number" pos:start="18:24" pos:end="18:24">0</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:43"><expr pos:start="20:13" pos:end="20:42"><name pos:start="20:13" pos:end="20:16">cout</name><operator pos:start="20:17" pos:end="20:18">&lt;&lt;</operator><literal type="string" pos:start="20:19" pos:end="20:36">"Congratulations!"</literal><operator pos:start="20:37" pos:end="20:38">&lt;&lt;</operator><name pos:start="20:39" pos:end="20:42">endl</name></expr>;</expr_stmt>
            <return pos:start="21:13" pos:end="21:21">return <expr pos:start="21:20" pos:end="21:20"><literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr>;</return>
        </block_content>}</block></if><else pos:start="22:10" pos:end="29:9">else<block pos:start="22:14" pos:end="29:9">{<block_content pos:start="23:13" pos:end="28:29">
            <expr_stmt pos:start="23:13" pos:end="23:19"><expr pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:15">cin</name><operator pos:start="23:16" pos:end="23:17">&gt;&gt;</operator><name pos:start="23:18" pos:end="23:18">t</name></expr>;</expr_stmt>
            <expr_stmt pos:start="24:13" pos:end="24:19"><expr pos:start="24:13" pos:end="24:18"><name pos:start="24:13" pos:end="24:15">sum</name><operator pos:start="24:16" pos:end="24:17">+=</operator><name pos:start="24:18" pos:end="24:18">t</name></expr>;</expr_stmt>
            <if_stmt pos:start="25:13" pos:end="27:13"><if pos:start="25:13" pos:end="27:13">if<condition pos:start="25:15" pos:end="25:25">(<expr pos:start="25:16" pos:end="25:24"><name pos:start="25:16" pos:end="25:18">sum</name><operator pos:start="25:19" pos:end="25:20">&gt;=</operator><name pos:start="25:21" pos:end="25:24">allt</name></expr>)</condition><block pos:start="25:26" pos:end="27:13">{<block_content pos:start="26:17" pos:end="26:22">
                <break pos:start="26:17" pos:end="26:22">break;</break>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="28:13" pos:end="28:29"><expr pos:start="28:13" pos:end="28:28"><call pos:start="28:13" pos:end="28:28"><name pos:start="28:13" pos:end="28:23"><name pos:start="28:13" pos:end="28:13">v</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:23">push_back</name></name><argument_list pos:start="28:24" pos:end="28:28">(<argument pos:start="28:25" pos:end="28:27"><expr pos:start="28:25" pos:end="28:27"><name pos:start="28:25" pos:end="28:27">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:8">cout</name><operator pos:start="31:9" pos:end="31:10">&lt;&lt;</operator><literal type="string" pos:start="31:11" pos:end="31:26">"Unfortunately."</literal><operator pos:start="31:27" pos:end="31:28">&lt;&lt;</operator><name pos:start="31:29" pos:end="31:32">endl</name></expr>;</expr_stmt>
    <return pos:start="32:5" pos:end="32:13">return <expr pos:start="32:12" pos:end="32:12"><literal type="number" pos:start="32:12" pos:end="32:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
