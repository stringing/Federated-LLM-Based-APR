<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/253/253.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<struct pos:start="3:1" pos:end="6:2">struct <name pos:start="3:8" pos:end="3:10">stu</name><block pos:start="3:11" pos:end="6:1">{<public type="default" pos:start="4:5" pos:end="5:13">
    <decl_stmt pos:start="4:5" pos:end="4:15"><decl pos:start="4:5" pos:end="4:14"><type pos:start="4:5" pos:end="4:10"><name pos:start="4:5" pos:end="4:10">string</name></type> <name pos:start="4:12" pos:end="4:14">str</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">time</name></decl>;</decl_stmt>
</public>}</block>;</struct>
<function pos:start="7:1" pos:end="34:1"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:8">main</name><parameter_list pos:start="7:9" pos:end="7:10">()</parameter_list><block pos:start="7:11" pos:end="34:1">{<block_content pos:start="8:5" pos:end="33:13">
    <decl_stmt pos:start="8:5" pos:end="8:18"><decl pos:start="8:5" pos:end="8:17"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">stu</name></type> <name pos:start="8:9" pos:end="8:17"><name pos:start="8:9" pos:end="8:9">s</name><index pos:start="8:10" pos:end="8:17">[<expr pos:start="8:11" pos:end="8:16"><literal type="number" pos:start="8:11" pos:end="8:16">100001</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:10">vector</name><argument_list type="generic" pos:start="9:11" pos:end="9:18">&lt;<argument pos:start="9:12" pos:end="9:17"><expr pos:start="9:12" pos:end="9:17"><name pos:start="9:12" pos:end="9:17">string</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="9:20" pos:end="9:22">vec</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:10"><decl pos:start="10:5" pos:end="10:9"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">x</name></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:11"><expr pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:7">cin</name><operator pos:start="11:8" pos:end="11:9">&gt;&gt;</operator><name pos:start="11:10" pos:end="11:10">x</name></expr>;</expr_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:18"><decl pos:start="12:5" pos:end="12:13"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:11">cnt</name><init pos:start="12:12" pos:end="12:13">=<expr pos:start="12:13" pos:end="12:13"><literal type="number" pos:start="12:13" pos:end="12:13">0</literal></expr></init></decl>,<decl pos:start="12:15" pos:end="12:17"><type ref="prev" pos:start="12:5" pos:end="12:7"/><name pos:start="12:15" pos:end="12:15">i</name><init pos:start="12:16" pos:end="12:17">=<expr pos:start="12:17" pos:end="12:17"><literal type="number" pos:start="12:17" pos:end="12:17">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="13:5" pos:end="25:5">while<condition pos:start="13:10" pos:end="13:17">(<expr pos:start="13:11" pos:end="13:16"><name pos:start="13:11" pos:end="13:13">cnt</name><operator pos:start="13:14" pos:end="13:15">&lt;=</operator><name pos:start="13:16" pos:end="13:16">x</name></expr>)</condition><block pos:start="13:18" pos:end="25:5">{<block_content pos:start="14:9" pos:end="24:12">
        <expr_stmt pos:start="14:9" pos:end="14:22"><expr pos:start="14:9" pos:end="14:21"><name pos:start="14:9" pos:end="14:11">cin</name><operator pos:start="14:12" pos:end="14:13">&gt;&gt;</operator><name pos:start="14:14" pos:end="14:17"><name pos:start="14:14" pos:end="14:14">s</name><index pos:start="14:15" pos:end="14:17">[<expr pos:start="14:16" pos:end="14:16"><name pos:start="14:16" pos:end="14:16">i</name></expr>]</index></name><operator pos:start="14:18" pos:end="14:18">.</operator><name pos:start="14:19" pos:end="14:21">str</name></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:32"><expr pos:start="15:9" pos:end="15:31"><call pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:11">vec</name><operator pos:start="15:12" pos:end="15:12">.</operator><name pos:start="15:13" pos:end="15:21">push_back</name></name><argument_list pos:start="15:22" pos:end="15:31">(<argument pos:start="15:23" pos:end="15:30"><expr pos:start="15:23" pos:end="15:30"><name pos:start="15:23" pos:end="15:26"><name pos:start="15:23" pos:end="15:23">s</name><index pos:start="15:24" pos:end="15:26">[<expr pos:start="15:25" pos:end="15:25"><name pos:start="15:25" pos:end="15:25">i</name></expr>]</index></name><operator pos:start="15:27" pos:end="15:27">.</operator><name pos:start="15:28" pos:end="15:30">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="16:9" pos:end="23:9"><if pos:start="16:9" pos:end="19:9">if<condition pos:start="16:11" pos:end="16:34">(<expr pos:start="16:12" pos:end="16:33"><name pos:start="16:12" pos:end="16:17"><name pos:start="16:12" pos:end="16:14">vec</name><index pos:start="16:15" pos:end="16:17">[<expr pos:start="16:16" pos:end="16:16"><name pos:start="16:16" pos:end="16:16">i</name></expr>]</index></name><operator pos:start="16:18" pos:end="16:19">!=</operator><literal type="string" pos:start="16:20" pos:end="16:33">"tingtingting"</literal></expr>)</condition><block pos:start="16:35" pos:end="19:9">{<block_content pos:start="17:13" pos:end="18:27">
            <expr_stmt pos:start="17:13" pos:end="17:27"><expr pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:15">cin</name><operator pos:start="17:16" pos:end="17:17">&gt;&gt;</operator><name pos:start="17:18" pos:end="17:21"><name pos:start="17:18" pos:end="17:18">s</name><index pos:start="17:19" pos:end="17:21">[<expr pos:start="17:20" pos:end="17:20"><name pos:start="17:20" pos:end="17:20">i</name></expr>]</index></name><operator pos:start="17:22" pos:end="17:22">.</operator><name pos:start="17:23" pos:end="17:26">time</name></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:27"><expr pos:start="18:13" pos:end="18:26"><name pos:start="18:13" pos:end="18:15">cnt</name><operator pos:start="18:16" pos:end="18:17">+=</operator><name pos:start="18:18" pos:end="18:21"><name pos:start="18:18" pos:end="18:18">s</name><index pos:start="18:19" pos:end="18:21">[<expr pos:start="18:20" pos:end="18:20"><name pos:start="18:20" pos:end="18:20">i</name></expr>]</index></name><operator pos:start="18:22" pos:end="18:22">.</operator><name pos:start="18:23" pos:end="18:26">time</name></expr>;</expr_stmt>            
        </block_content>}</block></if>
        <if type="elseif" pos:start="20:9" pos:end="23:9">else if<condition pos:start="20:16" pos:end="20:63">(<expr pos:start="20:17" pos:end="20:62"><name pos:start="20:17" pos:end="20:22"><name pos:start="20:17" pos:end="20:19">vec</name><index pos:start="20:20" pos:end="20:22">[<expr pos:start="20:21" pos:end="20:21"><name pos:start="20:21" pos:end="20:21">i</name></expr>]</index></name><operator pos:start="20:23" pos:end="20:24">==</operator><literal type="string" pos:start="20:25" pos:end="20:38">"tingtingting"</literal><operator pos:start="20:39" pos:end="20:40">&amp;&amp;</operator><name pos:start="20:41" pos:end="20:48"><name pos:start="20:41" pos:end="20:43">vec</name><index pos:start="20:44" pos:end="20:48">[<expr pos:start="20:45" pos:end="20:47"><name pos:start="20:45" pos:end="20:45">i</name><operator pos:start="20:46" pos:end="20:46">-</operator><literal type="number" pos:start="20:47" pos:end="20:47">1</literal></expr>]</index></name><operator pos:start="20:49" pos:end="20:50">==</operator><literal type="string" pos:start="20:51" pos:end="20:62">"kaomianjin"</literal></expr>)</condition><block pos:start="20:64" pos:end="23:9">{<block_content pos:start="21:13" pos:end="22:21">
            <expr_stmt pos:start="21:13" pos:end="21:28"><expr pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:16">cout</name><operator pos:start="21:17" pos:end="21:18">&lt;&lt;</operator><literal type="string" pos:start="21:19" pos:end="21:27">"Hahaha."</literal></expr>;</expr_stmt>
            <return pos:start="22:13" pos:end="22:21">return <expr pos:start="22:20" pos:end="22:20"><literal type="number" pos:start="22:20" pos:end="22:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt> 
        <expr_stmt pos:start="24:9" pos:end="24:12"><expr pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:9">i</name><operator pos:start="24:10" pos:end="24:11">++</operator></expr>;</expr_stmt>
    </block_content>}</block></while>
    <for pos:start="26:5" pos:end="31:5">for<control pos:start="26:8" pos:end="26:33">(<init pos:start="26:9" pos:end="26:16"><decl pos:start="26:9" pos:end="26:15"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:13">i</name><init pos:start="26:14" pos:end="26:15">=<expr pos:start="26:15" pos:end="26:15"><literal type="number" pos:start="26:15" pos:end="26:15">0</literal></expr></init></decl>;</init><condition pos:start="26:17" pos:end="26:29"><expr pos:start="26:17" pos:end="26:28"><name pos:start="26:17" pos:end="26:17">i</name><operator pos:start="26:18" pos:end="26:18">&lt;</operator><call pos:start="26:19" pos:end="26:28"><name pos:start="26:19" pos:end="26:26"><name pos:start="26:19" pos:end="26:21">vec</name><operator pos:start="26:22" pos:end="26:22">.</operator><name pos:start="26:23" pos:end="26:26">size</name></name><argument_list pos:start="26:27" pos:end="26:28">()</argument_list></call></expr>;</condition><incr pos:start="26:30" pos:end="26:32"><expr pos:start="26:30" pos:end="26:32"><name pos:start="26:30" pos:end="26:30">i</name><operator pos:start="26:31" pos:end="26:32">++</operator></expr></incr>)</control><block pos:start="26:34" pos:end="31:5">{<block_content pos:start="27:9" pos:end="30:9">
        <if_stmt pos:start="27:9" pos:end="30:9"><if pos:start="27:9" pos:end="30:9">if<condition pos:start="27:11" pos:end="27:101">(<expr pos:start="27:12" pos:end="27:100"><operator pos:start="27:12" pos:end="27:12">(</operator><name pos:start="27:13" pos:end="27:18"><name pos:start="27:13" pos:end="27:15">vec</name><index pos:start="27:16" pos:end="27:18">[<expr pos:start="27:17" pos:end="27:17"><name pos:start="27:17" pos:end="27:17">i</name></expr>]</index></name><operator pos:start="27:19" pos:end="27:20">==</operator><literal type="string" pos:start="27:21" pos:end="27:32">"kaomianjin"</literal><operator pos:start="27:33" pos:end="27:34">&amp;&amp;</operator><name pos:start="27:35" pos:end="27:35">i</name><operator pos:start="27:36" pos:end="27:36">+</operator><literal type="number" pos:start="27:37" pos:end="27:37">1</literal><operator pos:start="27:38" pos:end="27:39">==</operator><call pos:start="27:40" pos:end="27:49"><name pos:start="27:40" pos:end="27:47"><name pos:start="27:40" pos:end="27:42">vec</name><operator pos:start="27:43" pos:end="27:43">.</operator><name pos:start="27:44" pos:end="27:47">size</name></name><argument_list pos:start="27:48" pos:end="27:49">()</argument_list></call><operator pos:start="27:50" pos:end="27:50">)</operator><operator pos:start="27:51" pos:end="27:52">||</operator><operator pos:start="27:53" pos:end="27:53">(</operator><name pos:start="27:54" pos:end="27:59"><name pos:start="27:54" pos:end="27:56">vec</name><index pos:start="27:57" pos:end="27:59">[<expr pos:start="27:58" pos:end="27:58"><name pos:start="27:58" pos:end="27:58">i</name></expr>]</index></name><operator pos:start="27:60" pos:end="27:61">==</operator><literal type="string" pos:start="27:62" pos:end="27:73">"kaomianjin"</literal><operator pos:start="27:74" pos:end="27:75">&amp;&amp;</operator><name pos:start="27:76" pos:end="27:83"><name pos:start="27:76" pos:end="27:78">vec</name><index pos:start="27:79" pos:end="27:83">[<expr pos:start="27:80" pos:end="27:82"><name pos:start="27:80" pos:end="27:80">i</name><operator pos:start="27:81" pos:end="27:81">+</operator><literal type="number" pos:start="27:82" pos:end="27:82">1</literal></expr>]</index></name><operator pos:start="27:84" pos:end="27:85">!=</operator><literal type="string" pos:start="27:86" pos:end="27:99">"tingtingting"</literal><operator pos:start="27:100" pos:end="27:100">)</operator></expr>)</condition><block pos:start="27:102" pos:end="30:9">{<block_content pos:start="28:13" pos:end="29:21">
            <expr_stmt pos:start="28:13" pos:end="28:37"><expr pos:start="28:13" pos:end="28:36"><name pos:start="28:13" pos:end="28:16">cout</name><operator pos:start="28:17" pos:end="28:18">&lt;&lt;</operator><literal type="string" pos:start="28:19" pos:end="28:36">"Congratulations!"</literal></expr>;</expr_stmt>
            <return pos:start="29:13" pos:end="29:21">return <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="32:5" pos:end="32:27"><expr pos:start="32:5" pos:end="32:26"><name pos:start="32:5" pos:end="32:8">cout</name><operator pos:start="32:9" pos:end="32:10">&lt;&lt;</operator><literal type="string" pos:start="32:11" pos:end="32:26">"Unfortunately."</literal></expr>;</expr_stmt>
    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
