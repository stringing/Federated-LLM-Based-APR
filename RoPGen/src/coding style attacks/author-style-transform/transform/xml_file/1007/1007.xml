<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1007/1007.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<typedef pos:start="3:1" pos:end="3:21">typedef <type pos:start="3:9" pos:end="3:17"><name pos:start="3:9" pos:end="3:12">long</name> <name pos:start="3:14" pos:end="3:17">long</name></type> <name pos:start="3:19" pos:end="3:20">ll</name>;</typedef>
<decl_stmt pos:start="4:1" pos:end="4:8"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">n</name></decl>,<decl pos:start="4:7" pos:end="4:7"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:7" pos:end="4:7">m</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:6"><decl pos:start="5:1" pos:end="5:5"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:5">t</name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:19"><decl pos:start="6:1" pos:end="6:18"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">char</name></type> <name pos:start="6:6" pos:end="6:18"><name pos:start="6:6" pos:end="6:6">s</name><index pos:start="6:7" pos:end="6:12">[<expr pos:start="6:8" pos:end="6:11"><literal type="number" pos:start="6:8" pos:end="6:11">1001</literal></expr>]</index><index pos:start="6:13" pos:end="6:18">[<expr pos:start="6:14" pos:end="6:17"><literal type="number" pos:start="6:14" pos:end="6:17">1001</literal></expr>]</index></name></decl>;</decl_stmt>
<struct pos:start="7:1" pos:end="9:2">struct <name pos:start="7:8" pos:end="7:11">node</name><block pos:start="7:12" pos:end="9:1">{<public type="default" pos:start="8:5" pos:end="8:16">
    <decl_stmt pos:start="8:5" pos:end="8:16"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">x</name></decl>,<decl pos:start="8:11" pos:end="8:11"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:11" pos:end="8:11">y</name></decl>,<decl pos:start="8:13" pos:end="8:13"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:13" pos:end="8:13">q</name></decl>,<decl pos:start="8:15" pos:end="8:15"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:15" pos:end="8:15">f</name></decl>;</decl_stmt>
</public>}</block>;</struct>
<decl_stmt pos:start="10:1" pos:end="10:16"><decl pos:start="10:1" pos:end="10:15"><type pos:start="10:1" pos:end="10:11"><name pos:start="10:1" pos:end="10:11"><name pos:start="10:1" pos:end="10:5">deque</name><argument_list type="generic" pos:start="10:6" pos:end="10:11">&lt;<argument pos:start="10:7" pos:end="10:10"><expr pos:start="10:7" pos:end="10:10"><name pos:start="10:7" pos:end="10:10">node</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="10:13" pos:end="10:15">deq</name></decl>;</decl_stmt>
<decl_stmt pos:start="11:1" pos:end="11:22"><decl pos:start="11:1" pos:end="11:21"><type pos:start="11:1" pos:end="11:3"><name pos:start="11:1" pos:end="11:3">int</name></type> <name pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:7">vis</name><index pos:start="11:8" pos:end="11:12">[<expr pos:start="11:9" pos:end="11:11"><literal type="number" pos:start="11:9" pos:end="11:11">101</literal></expr>]</index><index pos:start="11:13" pos:end="11:17">[<expr pos:start="11:14" pos:end="11:16"><literal type="number" pos:start="11:14" pos:end="11:16">101</literal></expr>]</index><index pos:start="11:18" pos:end="11:21">[<expr pos:start="11:19" pos:end="11:20"><literal type="number" pos:start="11:19" pos:end="11:20">10</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="12:1" pos:end="12:19"><decl pos:start="12:1" pos:end="12:6"><type pos:start="12:1" pos:end="12:3"><name pos:start="12:1" pos:end="12:3">int</name></type> <name pos:start="12:5" pos:end="12:6">x1</name></decl>,<decl pos:start="12:8" pos:end="12:9"><type ref="prev" pos:start="12:1" pos:end="12:3"/><name pos:start="12:8" pos:end="12:9">x2</name></decl>,<decl pos:start="12:11" pos:end="12:13"><type ref="prev" pos:start="12:1" pos:end="12:3"/><name pos:start="12:11" pos:end="12:13">y11</name></decl>,<decl pos:start="12:15" pos:end="12:16"><type ref="prev" pos:start="12:1" pos:end="12:3"/><name pos:start="12:15" pos:end="12:16">y2</name></decl>,<decl pos:start="12:18" pos:end="12:18"><type ref="prev" pos:start="12:1" pos:end="12:3"/><name pos:start="12:18" pos:end="12:18">k</name></decl>;</decl_stmt>
<decl_stmt pos:start="13:1" pos:end="13:42"><decl pos:start="13:1" pos:end="13:22"><type pos:start="13:1" pos:end="13:3"><name pos:start="13:1" pos:end="13:3">int</name></type> <name pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:7">df1</name><index pos:start="13:8" pos:end="13:10">[<expr pos:start="13:9" pos:end="13:9"><literal type="number" pos:start="13:9" pos:end="13:9">5</literal></expr>]</index></name><init pos:start="13:11" pos:end="13:22">=<expr pos:start="13:12" pos:end="13:22"><block pos:start="13:12" pos:end="13:22">{<expr pos:start="13:13" pos:end="13:13"><literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr>,<expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">1</literal></expr>,<expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr>,<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">1</literal></expr>,<expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr>}</block></expr></init></decl>,<decl pos:start="13:24" pos:end="13:41"><type ref="prev" pos:start="13:1" pos:end="13:3"/><name pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:26">df2</name><index pos:start="13:27" pos:end="13:29">[<expr pos:start="13:28" pos:end="13:28"><literal type="number" pos:start="13:28" pos:end="13:28">5</literal></expr>]</index></name><init pos:start="13:30" pos:end="13:41">=<expr pos:start="13:31" pos:end="13:41"><block pos:start="13:31" pos:end="13:41">{<expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr>,<expr pos:start="13:34" pos:end="13:34"><literal type="number" pos:start="13:34" pos:end="13:34">0</literal></expr>,<expr pos:start="13:36" pos:end="13:36"><literal type="number" pos:start="13:36" pos:end="13:36">1</literal></expr>,<expr pos:start="13:38" pos:end="13:38"><literal type="number" pos:start="13:38" pos:end="13:38">0</literal></expr>,<expr pos:start="13:40" pos:end="13:40"><literal type="number" pos:start="13:40" pos:end="13:40">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<function pos:start="14:1" pos:end="17:1"><type pos:start="14:1" pos:end="14:4"><name pos:start="14:1" pos:end="14:4">bool</name></type> <name pos:start="14:6" pos:end="14:7">hf</name><parameter_list pos:start="14:8" pos:end="14:26">(<parameter pos:start="14:9" pos:end="14:13"><decl pos:start="14:9" pos:end="14:13"><type pos:start="14:9" pos:end="14:13"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:13">x</name></decl></parameter>,<parameter pos:start="14:15" pos:end="14:19"><decl pos:start="14:15" pos:end="14:19"><type pos:start="14:15" pos:end="14:19"><name pos:start="14:15" pos:end="14:17">int</name></type> <name pos:start="14:19" pos:end="14:19">y</name></decl></parameter>,<parameter pos:start="14:21" pos:end="14:25"><decl pos:start="14:21" pos:end="14:25"><type pos:start="14:21" pos:end="14:25"><name pos:start="14:21" pos:end="14:23">int</name></type> <name pos:start="14:25" pos:end="14:25">i</name></decl></parameter>)</parameter_list>
<block pos:start="15:1" pos:end="17:1">{<block_content pos:start="16:5" pos:end="16:60">
    <return pos:start="16:5" pos:end="16:60">return <expr pos:start="16:12" pos:end="16:59"><name pos:start="16:12" pos:end="16:12">x</name><operator pos:start="16:13" pos:end="16:13">+</operator><name pos:start="16:14" pos:end="16:19"><name pos:start="16:14" pos:end="16:16">df1</name><index pos:start="16:17" pos:end="16:19">[<expr pos:start="16:18" pos:end="16:18"><name pos:start="16:18" pos:end="16:18">i</name></expr>]</index></name><operator pos:start="16:20" pos:end="16:20">&gt;</operator><literal type="number" pos:start="16:21" pos:end="16:21">0</literal><operator pos:start="16:22" pos:end="16:23">&amp;&amp;</operator><name pos:start="16:24" pos:end="16:24">x</name><operator pos:start="16:25" pos:end="16:25">+</operator><name pos:start="16:26" pos:end="16:31"><name pos:start="16:26" pos:end="16:28">df1</name><index pos:start="16:29" pos:end="16:31">[<expr pos:start="16:30" pos:end="16:30"><name pos:start="16:30" pos:end="16:30">i</name></expr>]</index></name><operator pos:start="16:32" pos:end="16:33">&lt;=</operator><name pos:start="16:34" pos:end="16:34">n</name><operator pos:start="16:35" pos:end="16:36">&amp;&amp;</operator><name pos:start="16:37" pos:end="16:37">y</name><operator pos:start="16:38" pos:end="16:38">+</operator><name pos:start="16:39" pos:end="16:44"><name pos:start="16:39" pos:end="16:41">df2</name><index pos:start="16:42" pos:end="16:44">[<expr pos:start="16:43" pos:end="16:43"><name pos:start="16:43" pos:end="16:43">i</name></expr>]</index></name><operator pos:start="16:45" pos:end="16:45">&gt;</operator><literal type="number" pos:start="16:46" pos:end="16:46">0</literal><operator pos:start="16:47" pos:end="16:48">&amp;&amp;</operator><name pos:start="16:49" pos:end="16:49">y</name><operator pos:start="16:50" pos:end="16:50">+</operator><name pos:start="16:51" pos:end="16:56"><name pos:start="16:51" pos:end="16:53">df2</name><index pos:start="16:54" pos:end="16:56">[<expr pos:start="16:55" pos:end="16:55"><name pos:start="16:55" pos:end="16:55">i</name></expr>]</index></name><operator pos:start="16:57" pos:end="16:58">&lt;=</operator><name pos:start="16:59" pos:end="16:59">m</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="18:1" pos:end="45:1"><type pos:start="18:1" pos:end="18:4"><name pos:start="18:1" pos:end="18:4">bool</name></type> <name pos:start="18:6" pos:end="18:8">bfs</name><parameter_list pos:start="18:9" pos:end="18:10">()</parameter_list>
<block pos:start="19:1" pos:end="45:1">{<block_content pos:start="20:5" pos:end="44:17">
    <while pos:start="20:5" pos:end="43:5">while<condition pos:start="20:10" pos:end="20:23">(<expr pos:start="20:11" pos:end="20:22"><operator pos:start="20:11" pos:end="20:11">!</operator><call pos:start="20:12" pos:end="20:22"><name pos:start="20:12" pos:end="20:20"><name pos:start="20:12" pos:end="20:14">deq</name><operator pos:start="20:15" pos:end="20:15">.</operator><name pos:start="20:16" pos:end="20:20">empty</name></name><argument_list pos:start="20:21" pos:end="20:22">()</argument_list></call></expr>)</condition>
    <block pos:start="21:5" pos:end="43:5">{<block_content pos:start="22:9" pos:end="42:9">
        <decl_stmt pos:start="22:9" pos:end="22:29"><decl pos:start="22:9" pos:end="22:28"><type pos:start="22:9" pos:end="22:12"><name pos:start="22:9" pos:end="22:12">node</name></type> <name pos:start="22:14" pos:end="22:16">now</name><init pos:start="22:17" pos:end="22:28">=<expr pos:start="22:18" pos:end="22:28"><call pos:start="22:18" pos:end="22:28"><name pos:start="22:18" pos:end="22:26"><name pos:start="22:18" pos:end="22:20">deq</name><operator pos:start="22:21" pos:end="22:21">.</operator><name pos:start="22:22" pos:end="22:26">front</name></name><argument_list pos:start="22:27" pos:end="22:28">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:24"><expr pos:start="23:9" pos:end="23:23"><call pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:11">deq</name><operator pos:start="23:12" pos:end="23:12">.</operator><name pos:start="23:13" pos:end="23:21">pop_front</name></name><argument_list pos:start="23:22" pos:end="23:23">()</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="24:9" pos:end="27:9"><if pos:start="24:9" pos:end="27:9">if<condition pos:start="24:11" pos:end="24:19">(<expr pos:start="24:12" pos:end="24:18"><name pos:start="24:12" pos:end="24:16"><name pos:start="24:12" pos:end="24:14">now</name><operator pos:start="24:15" pos:end="24:15">.</operator><name pos:start="24:16" pos:end="24:16">q</name></name><operator pos:start="24:17" pos:end="24:17">&gt;</operator><name pos:start="24:18" pos:end="24:18">k</name></expr>)</condition>
        <block pos:start="25:9" pos:end="27:9">{<block_content pos:start="26:13" pos:end="26:21">
            <continue pos:start="26:13" pos:end="26:21">continue;</continue>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="28:9" pos:end="31:9"><if pos:start="28:9" pos:end="31:9">if<condition pos:start="28:11" pos:end="28:32">(<expr pos:start="28:12" pos:end="28:31"><name pos:start="28:12" pos:end="28:16"><name pos:start="28:12" pos:end="28:14">now</name><operator pos:start="28:15" pos:end="28:15">.</operator><name pos:start="28:16" pos:end="28:16">x</name></name><operator pos:start="28:17" pos:end="28:18">==</operator><name pos:start="28:19" pos:end="28:20">x2</name><operator pos:start="28:21" pos:end="28:22">&amp;&amp;</operator><name pos:start="28:23" pos:end="28:27"><name pos:start="28:23" pos:end="28:25">now</name><operator pos:start="28:26" pos:end="28:26">.</operator><name pos:start="28:27" pos:end="28:27">y</name></name><operator pos:start="28:28" pos:end="28:29">==</operator><name pos:start="28:30" pos:end="28:31">y2</name></expr>)</condition>
        <block pos:start="29:9" pos:end="31:9">{<block_content pos:start="30:13" pos:end="30:24">
            <return pos:start="30:13" pos:end="30:24">return <expr pos:start="30:20" pos:end="30:23"><literal type="boolean" pos:start="30:20" pos:end="30:23">true</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <for pos:start="32:9" pos:end="42:9">for<control pos:start="32:12" pos:end="32:29">(<init pos:start="32:13" pos:end="32:20"><decl pos:start="32:13" pos:end="32:19"><type pos:start="32:13" pos:end="32:15"><name pos:start="32:13" pos:end="32:15">int</name></type> <name pos:start="32:17" pos:end="32:17">i</name><init pos:start="32:18" pos:end="32:19">=<expr pos:start="32:19" pos:end="32:19"><literal type="number" pos:start="32:19" pos:end="32:19">1</literal></expr></init></decl>;</init><condition pos:start="32:21" pos:end="32:25"><expr pos:start="32:21" pos:end="32:24"><name pos:start="32:21" pos:end="32:21">i</name><operator pos:start="32:22" pos:end="32:23">&lt;=</operator><literal type="number" pos:start="32:24" pos:end="32:24">4</literal></expr>;</condition><incr pos:start="32:26" pos:end="32:28"><expr pos:start="32:26" pos:end="32:28"><name pos:start="32:26" pos:end="32:26">i</name><operator pos:start="32:27" pos:end="32:28">++</operator></expr></incr>)</control>
        <block pos:start="33:9" pos:end="42:9">{<block_content pos:start="34:13" pos:end="41:13">
            <decl_stmt pos:start="34:13" pos:end="34:48"><decl pos:start="34:13" pos:end="34:23"><type pos:start="34:13" pos:end="34:15"><name pos:start="34:13" pos:end="34:15">int</name></type> <name pos:start="34:17" pos:end="34:17">x</name><init pos:start="34:18" pos:end="34:23">=<expr pos:start="34:19" pos:end="34:23"><name pos:start="34:19" pos:end="34:23"><name pos:start="34:19" pos:end="34:21">now</name><operator pos:start="34:22" pos:end="34:22">.</operator><name pos:start="34:23" pos:end="34:23">x</name></name></expr></init></decl>,<decl pos:start="34:25" pos:end="34:31"><type ref="prev" pos:start="34:13" pos:end="34:15"/><name pos:start="34:25" pos:end="34:25">y</name><init pos:start="34:26" pos:end="34:31">=<expr pos:start="34:27" pos:end="34:31"><name pos:start="34:27" pos:end="34:31"><name pos:start="34:27" pos:end="34:29">now</name><operator pos:start="34:30" pos:end="34:30">.</operator><name pos:start="34:31" pos:end="34:31">y</name></name></expr></init></decl>,<decl pos:start="34:33" pos:end="34:39"><type ref="prev" pos:start="34:13" pos:end="34:15"/><name pos:start="34:33" pos:end="34:33">q</name><init pos:start="34:34" pos:end="34:39">=<expr pos:start="34:35" pos:end="34:39"><name pos:start="34:35" pos:end="34:39"><name pos:start="34:35" pos:end="34:37">now</name><operator pos:start="34:38" pos:end="34:38">.</operator><name pos:start="34:39" pos:end="34:39">q</name></name></expr></init></decl>,<decl pos:start="34:41" pos:end="34:47"><type ref="prev" pos:start="34:13" pos:end="34:15"/><name pos:start="34:41" pos:end="34:41">f</name><init pos:start="34:42" pos:end="34:47">=<expr pos:start="34:43" pos:end="34:47"><name pos:start="34:43" pos:end="34:47"><name pos:start="34:43" pos:end="34:45">now</name><operator pos:start="34:46" pos:end="34:46">.</operator><name pos:start="34:47" pos:end="34:47">f</name></name></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="35:13" pos:end="35:27"><expr pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:15">vis</name><index pos:start="35:16" pos:end="35:18">[<expr pos:start="35:17" pos:end="35:17"><name pos:start="35:17" pos:end="35:17">x</name></expr>]</index><index pos:start="35:19" pos:end="35:21">[<expr pos:start="35:20" pos:end="35:20"><name pos:start="35:20" pos:end="35:20">y</name></expr>]</index><index pos:start="35:22" pos:end="35:24">[<expr pos:start="35:23" pos:end="35:23"><name pos:start="35:23" pos:end="35:23">f</name></expr>]</index></name><operator pos:start="35:25" pos:end="35:25">=</operator><literal type="number" pos:start="35:26" pos:end="35:26">1</literal></expr>;</expr_stmt>
            <if_stmt pos:start="36:13" pos:end="41:13"><if pos:start="36:13" pos:end="39:13">if<condition pos:start="36:15" pos:end="36:62">(<expr pos:start="36:16" pos:end="36:61"><name pos:start="36:16" pos:end="36:16">i</name><operator pos:start="36:17" pos:end="36:18">==</operator><name pos:start="36:19" pos:end="36:19">f</name><operator pos:start="36:20" pos:end="36:21">&amp;&amp;</operator><name pos:start="36:22" pos:end="36:47"><name pos:start="36:22" pos:end="36:24">vis</name><index pos:start="36:25" pos:end="36:34">[<expr pos:start="36:26" pos:end="36:33"><name pos:start="36:26" pos:end="36:26">x</name><operator pos:start="36:27" pos:end="36:27">+</operator><name pos:start="36:28" pos:end="36:33"><name pos:start="36:28" pos:end="36:30">df1</name><index pos:start="36:31" pos:end="36:33">[<expr pos:start="36:32" pos:end="36:32"><name pos:start="36:32" pos:end="36:32">i</name></expr>]</index></name></expr>]</index><index pos:start="36:35" pos:end="36:44">[<expr pos:start="36:36" pos:end="36:43"><name pos:start="36:36" pos:end="36:36">y</name><operator pos:start="36:37" pos:end="36:37">+</operator><name pos:start="36:38" pos:end="36:43"><name pos:start="36:38" pos:end="36:40">df2</name><index pos:start="36:41" pos:end="36:43">[<expr pos:start="36:42" pos:end="36:42"><name pos:start="36:42" pos:end="36:42">i</name></expr>]</index></name></expr>]</index><index pos:start="36:45" pos:end="36:47">[<expr pos:start="36:46" pos:end="36:46"><name pos:start="36:46" pos:end="36:46">i</name></expr>]</index></name><operator pos:start="36:48" pos:end="36:49">==</operator><literal type="number" pos:start="36:50" pos:end="36:50">0</literal><operator pos:start="36:51" pos:end="36:52">&amp;&amp;</operator><call pos:start="36:53" pos:end="36:61"><name pos:start="36:53" pos:end="36:54">hf</name><argument_list pos:start="36:55" pos:end="36:61">(<argument pos:start="36:56" pos:end="36:56"><expr pos:start="36:56" pos:end="36:56"><name pos:start="36:56" pos:end="36:56">x</name></expr></argument>,<argument pos:start="36:58" pos:end="36:58"><expr pos:start="36:58" pos:end="36:58"><name pos:start="36:58" pos:end="36:58">y</name></expr></argument>,<argument pos:start="36:60" pos:end="36:60"><expr pos:start="36:60" pos:end="36:60"><name pos:start="36:60" pos:end="36:60">i</name></expr></argument>)</argument_list></call></expr>)</condition>
            <block pos:start="37:13" pos:end="39:13">{<block_content pos:start="38:17" pos:end="38:60">
                <expr_stmt pos:start="38:17" pos:end="38:60"><expr pos:start="38:17" pos:end="38:59"><call pos:start="38:17" pos:end="38:59"><name pos:start="38:17" pos:end="38:30"><name pos:start="38:17" pos:end="38:19">deq</name><operator pos:start="38:20" pos:end="38:20">.</operator><name pos:start="38:21" pos:end="38:30">push_front</name></name><argument_list pos:start="38:31" pos:end="38:59">(<argument pos:start="38:32" pos:end="38:58"><expr pos:start="38:32" pos:end="38:58"><call pos:start="38:32" pos:end="38:58"><name pos:start="38:32" pos:end="38:35">node</name><argument_list pos:start="38:36" pos:end="38:58">{<argument pos:start="38:37" pos:end="38:44"><expr pos:start="38:37" pos:end="38:44"><name pos:start="38:37" pos:end="38:37">x</name><operator pos:start="38:38" pos:end="38:38">+</operator><name pos:start="38:39" pos:end="38:44"><name pos:start="38:39" pos:end="38:41">df1</name><index pos:start="38:42" pos:end="38:44">[<expr pos:start="38:43" pos:end="38:43"><name pos:start="38:43" pos:end="38:43">i</name></expr>]</index></name></expr></argument>,<argument pos:start="38:46" pos:end="38:53"><expr pos:start="38:46" pos:end="38:53"><name pos:start="38:46" pos:end="38:46">y</name><operator pos:start="38:47" pos:end="38:47">+</operator><name pos:start="38:48" pos:end="38:53"><name pos:start="38:48" pos:end="38:50">df2</name><index pos:start="38:51" pos:end="38:53">[<expr pos:start="38:52" pos:end="38:52"><name pos:start="38:52" pos:end="38:52">i</name></expr>]</index></name></expr></argument>,<argument pos:start="38:55" pos:end="38:55"><expr pos:start="38:55" pos:end="38:55"><name pos:start="38:55" pos:end="38:55">q</name></expr></argument>,<argument pos:start="38:57" pos:end="38:57"><expr pos:start="38:57" pos:end="38:57"><name pos:start="38:57" pos:end="38:57">f</name></expr></argument>}</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><else pos:start="39:14" pos:end="41:13">else<block pos:start="39:18" pos:end="41:13">{<block_content pos:start="40:17" pos:end="40:62">
                <expr_stmt pos:start="40:17" pos:end="40:62"><expr pos:start="40:17" pos:end="40:61"><call pos:start="40:17" pos:end="40:61"><name pos:start="40:17" pos:end="40:30"><name pos:start="40:17" pos:end="40:19">deq</name><operator pos:start="40:20" pos:end="40:20">.</operator><name pos:start="40:21" pos:end="40:30">push_front</name></name><argument_list pos:start="40:31" pos:end="40:61">(<argument pos:start="40:32" pos:end="40:60"><expr pos:start="40:32" pos:end="40:60"><call pos:start="40:32" pos:end="40:60"><name pos:start="40:32" pos:end="40:35">node</name><argument_list pos:start="40:36" pos:end="40:60">{<argument pos:start="40:37" pos:end="40:44"><expr pos:start="40:37" pos:end="40:44"><name pos:start="40:37" pos:end="40:37">x</name><operator pos:start="40:38" pos:end="40:38">+</operator><name pos:start="40:39" pos:end="40:44"><name pos:start="40:39" pos:end="40:41">df1</name><index pos:start="40:42" pos:end="40:44">[<expr pos:start="40:43" pos:end="40:43"><name pos:start="40:43" pos:end="40:43">i</name></expr>]</index></name></expr></argument>,<argument pos:start="40:46" pos:end="40:53"><expr pos:start="40:46" pos:end="40:53"><name pos:start="40:46" pos:end="40:46">y</name><operator pos:start="40:47" pos:end="40:47">+</operator><name pos:start="40:48" pos:end="40:53"><name pos:start="40:48" pos:end="40:50">df2</name><index pos:start="40:51" pos:end="40:53">[<expr pos:start="40:52" pos:end="40:52"><name pos:start="40:52" pos:end="40:52">i</name></expr>]</index></name></expr></argument>,<argument pos:start="40:55" pos:end="40:57"><expr pos:start="40:55" pos:end="40:57"><name pos:start="40:55" pos:end="40:55">q</name><operator pos:start="40:56" pos:end="40:56">+</operator><literal type="number" pos:start="40:57" pos:end="40:57">1</literal></expr></argument>,<argument pos:start="40:59" pos:end="40:59"><expr pos:start="40:59" pos:end="40:59"><name pos:start="40:59" pos:end="40:59">i</name></expr></argument>}</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></while>
    <return pos:start="44:5" pos:end="44:17">return <expr pos:start="44:12" pos:end="44:16"><literal type="boolean" pos:start="44:12" pos:end="44:16">false</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="46:1" pos:end="84:1"><type pos:start="46:1" pos:end="46:3"><name pos:start="46:1" pos:end="46:3">int</name></type> <name pos:start="46:5" pos:end="46:8">main</name><parameter_list pos:start="46:9" pos:end="46:10">()</parameter_list>
<block pos:start="47:1" pos:end="84:1">{<block_content pos:start="48:5" pos:end="83:13">
    <expr_stmt pos:start="48:5" pos:end="48:33"><expr pos:start="48:5" pos:end="48:32"><call pos:start="48:5" pos:end="48:32"><name pos:start="48:5" pos:end="48:11">freopen</name><argument_list pos:start="48:12" pos:end="48:32">(<argument pos:start="48:13" pos:end="48:21"><expr pos:start="48:13" pos:end="48:21"><literal type="string" pos:start="48:13" pos:end="48:21">"maze.in"</literal></expr></argument>,<argument pos:start="48:23" pos:end="48:25"><expr pos:start="48:23" pos:end="48:25"><literal type="string" pos:start="48:23" pos:end="48:25">"r"</literal></expr></argument>,<argument pos:start="48:27" pos:end="48:31"><expr pos:start="48:27" pos:end="48:31"><name pos:start="48:27" pos:end="48:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="49:5" pos:end="49:35"><expr pos:start="49:5" pos:end="49:34"><call pos:start="49:5" pos:end="49:34"><name pos:start="49:5" pos:end="49:11">freopen</name><argument_list pos:start="49:12" pos:end="49:34">(<argument pos:start="49:13" pos:end="49:22"><expr pos:start="49:13" pos:end="49:22"><literal type="string" pos:start="49:13" pos:end="49:22">"maze.out"</literal></expr></argument>,<argument pos:start="49:24" pos:end="49:26"><expr pos:start="49:24" pos:end="49:26"><literal type="string" pos:start="49:24" pos:end="49:26">"w"</literal></expr></argument>,<argument pos:start="49:28" pos:end="49:33"><expr pos:start="49:28" pos:end="49:33"><name pos:start="49:28" pos:end="49:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="50:5" pos:end="50:11"><expr pos:start="50:5" pos:end="50:10"><name pos:start="50:5" pos:end="50:7">cin</name><operator pos:start="50:8" pos:end="50:9">&gt;&gt;</operator><name pos:start="50:10" pos:end="50:10">t</name></expr>;</expr_stmt>
    <while pos:start="51:5" pos:end="82:5">while<condition pos:start="51:10" pos:end="51:14">(<expr pos:start="51:11" pos:end="51:13"><name pos:start="51:11" pos:end="51:11">t</name><operator pos:start="51:12" pos:end="51:13">--</operator></expr>)</condition>
    <block pos:start="52:5" pos:end="82:5">{<block_content pos:start="53:9" pos:end="81:9">
        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><call pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:14">memset</name><argument_list pos:start="53:15" pos:end="53:29">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">s</name></expr></argument>,<argument pos:start="53:18" pos:end="53:18"><expr pos:start="53:18" pos:end="53:18"><literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr></argument>,<argument pos:start="53:20" pos:end="53:28"><expr pos:start="53:20" pos:end="53:28"><sizeof pos:start="53:20" pos:end="53:28">sizeof<argument_list pos:start="53:26" pos:end="53:28">(<argument pos:start="53:27" pos:end="53:27"><expr pos:start="53:27" pos:end="53:27"><name pos:start="53:27" pos:end="53:27">s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="54:9" pos:end="54:34"><expr pos:start="54:9" pos:end="54:33"><call pos:start="54:9" pos:end="54:33"><name pos:start="54:9" pos:end="54:14">memset</name><argument_list pos:start="54:15" pos:end="54:33">(<argument pos:start="54:16" pos:end="54:18"><expr pos:start="54:16" pos:end="54:18"><name pos:start="54:16" pos:end="54:18">vis</name></expr></argument>,<argument pos:start="54:20" pos:end="54:20"><expr pos:start="54:20" pos:end="54:20"><literal type="number" pos:start="54:20" pos:end="54:20">0</literal></expr></argument>,<argument pos:start="54:22" pos:end="54:32"><expr pos:start="54:22" pos:end="54:32"><sizeof pos:start="54:22" pos:end="54:32">sizeof<argument_list pos:start="54:28" pos:end="54:32">(<argument pos:start="54:29" pos:end="54:31"><expr pos:start="54:29" pos:end="54:31"><name pos:start="54:29" pos:end="54:31">vis</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="55:9" pos:end="55:20"><expr pos:start="55:9" pos:end="55:19"><call pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:11">deq</name><operator pos:start="55:12" pos:end="55:12">.</operator><name pos:start="55:13" pos:end="55:17">clear</name></name><argument_list pos:start="55:18" pos:end="55:19">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="56:9" pos:end="56:18"><expr pos:start="56:9" pos:end="56:17"><name pos:start="56:9" pos:end="56:11">cin</name><operator pos:start="56:12" pos:end="56:13">&gt;&gt;</operator><name pos:start="56:14" pos:end="56:14">n</name><operator pos:start="56:15" pos:end="56:16">&gt;&gt;</operator><name pos:start="56:17" pos:end="56:17">m</name></expr>;</expr_stmt>
        <for pos:start="57:9" pos:end="70:9">for<control pos:start="57:12" pos:end="57:29">(<init pos:start="57:13" pos:end="57:20"><decl pos:start="57:13" pos:end="57:19"><type pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:15">int</name></type> <name pos:start="57:17" pos:end="57:17">i</name><init pos:start="57:18" pos:end="57:19">=<expr pos:start="57:19" pos:end="57:19"><literal type="number" pos:start="57:19" pos:end="57:19">1</literal></expr></init></decl>;</init><condition pos:start="57:21" pos:end="57:25"><expr pos:start="57:21" pos:end="57:24"><name pos:start="57:21" pos:end="57:21">i</name><operator pos:start="57:22" pos:end="57:23">&lt;=</operator><name pos:start="57:24" pos:end="57:24">n</name></expr>;</condition><incr pos:start="57:26" pos:end="57:28"><expr pos:start="57:26" pos:end="57:28"><name pos:start="57:26" pos:end="57:26">i</name><operator pos:start="57:27" pos:end="57:28">++</operator></expr></incr>)</control>
        <block pos:start="58:9" pos:end="70:9">{<block_content pos:start="59:13" pos:end="69:13">
            <for pos:start="59:13" pos:end="69:13">for<control pos:start="59:16" pos:end="59:33">(<init pos:start="59:17" pos:end="59:24"><decl pos:start="59:17" pos:end="59:23"><type pos:start="59:17" pos:end="59:19"><name pos:start="59:17" pos:end="59:19">int</name></type> <name pos:start="59:21" pos:end="59:21">j</name><init pos:start="59:22" pos:end="59:23">=<expr pos:start="59:23" pos:end="59:23"><literal type="number" pos:start="59:23" pos:end="59:23">1</literal></expr></init></decl>;</init><condition pos:start="59:25" pos:end="59:29"><expr pos:start="59:25" pos:end="59:28"><name pos:start="59:25" pos:end="59:25">j</name><operator pos:start="59:26" pos:end="59:27">&lt;=</operator><name pos:start="59:28" pos:end="59:28">m</name></expr>;</condition><incr pos:start="59:30" pos:end="59:32"><expr pos:start="59:30" pos:end="59:32"><name pos:start="59:30" pos:end="59:30">j</name><operator pos:start="59:31" pos:end="59:32">++</operator></expr></incr>)</control>
            <block pos:start="60:13" pos:end="69:13">{<block_content pos:start="61:17" pos:end="68:17">
                <expr_stmt pos:start="61:17" pos:end="61:29"><expr pos:start="61:17" pos:end="61:28"><name pos:start="61:17" pos:end="61:19">cin</name><operator pos:start="61:20" pos:end="61:21">&gt;&gt;</operator><name pos:start="61:22" pos:end="61:28"><name pos:start="61:22" pos:end="61:22">s</name><index pos:start="61:23" pos:end="61:25">[<expr pos:start="61:24" pos:end="61:24"><name pos:start="61:24" pos:end="61:24">i</name></expr>]</index><index pos:start="61:26" pos:end="61:28">[<expr pos:start="61:27" pos:end="61:27"><name pos:start="61:27" pos:end="61:27">j</name></expr>]</index></name></expr>;</expr_stmt>
                <if_stmt pos:start="62:17" pos:end="68:17"><if pos:start="62:17" pos:end="68:17">if<condition pos:start="62:19" pos:end="62:32">(<expr pos:start="62:20" pos:end="62:31"><name pos:start="62:20" pos:end="62:26"><name pos:start="62:20" pos:end="62:20">s</name><index pos:start="62:21" pos:end="62:23">[<expr pos:start="62:22" pos:end="62:22"><name pos:start="62:22" pos:end="62:22">i</name></expr>]</index><index pos:start="62:24" pos:end="62:26">[<expr pos:start="62:25" pos:end="62:25"><name pos:start="62:25" pos:end="62:25">j</name></expr>]</index></name><operator pos:start="62:27" pos:end="62:28">==</operator><literal type="char" pos:start="62:29" pos:end="62:31">'*'</literal></expr>)</condition>
                <block pos:start="63:17" pos:end="68:17">{<block_content pos:start="64:21" pos:end="67:36">
                    <expr_stmt pos:start="64:21" pos:end="64:36"><expr pos:start="64:21" pos:end="64:35"><name pos:start="64:21" pos:end="64:32"><name pos:start="64:21" pos:end="64:23">vis</name><index pos:start="64:24" pos:end="64:26">[<expr pos:start="64:25" pos:end="64:25"><name pos:start="64:25" pos:end="64:25">i</name></expr>]</index><index pos:start="64:27" pos:end="64:29">[<expr pos:start="64:28" pos:end="64:28"><name pos:start="64:28" pos:end="64:28">j</name></expr>]</index><index pos:start="64:30" pos:end="64:32">[<expr pos:start="64:31" pos:end="64:31"><literal type="number" pos:start="64:31" pos:end="64:31">1</literal></expr>]</index></name><operator pos:start="64:33" pos:end="64:34">==</operator><literal type="number" pos:start="64:35" pos:end="64:35">1</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="65:21" pos:end="65:36"><expr pos:start="65:21" pos:end="65:35"><name pos:start="65:21" pos:end="65:32"><name pos:start="65:21" pos:end="65:23">vis</name><index pos:start="65:24" pos:end="65:26">[<expr pos:start="65:25" pos:end="65:25"><name pos:start="65:25" pos:end="65:25">i</name></expr>]</index><index pos:start="65:27" pos:end="65:29">[<expr pos:start="65:28" pos:end="65:28"><name pos:start="65:28" pos:end="65:28">j</name></expr>]</index><index pos:start="65:30" pos:end="65:32">[<expr pos:start="65:31" pos:end="65:31"><literal type="number" pos:start="65:31" pos:end="65:31">2</literal></expr>]</index></name><operator pos:start="65:33" pos:end="65:34">==</operator><literal type="number" pos:start="65:35" pos:end="65:35">1</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="66:21" pos:end="66:36"><expr pos:start="66:21" pos:end="66:35"><name pos:start="66:21" pos:end="66:32"><name pos:start="66:21" pos:end="66:23">vis</name><index pos:start="66:24" pos:end="66:26">[<expr pos:start="66:25" pos:end="66:25"><name pos:start="66:25" pos:end="66:25">i</name></expr>]</index><index pos:start="66:27" pos:end="66:29">[<expr pos:start="66:28" pos:end="66:28"><name pos:start="66:28" pos:end="66:28">j</name></expr>]</index><index pos:start="66:30" pos:end="66:32">[<expr pos:start="66:31" pos:end="66:31"><literal type="number" pos:start="66:31" pos:end="66:31">3</literal></expr>]</index></name><operator pos:start="66:33" pos:end="66:34">==</operator><literal type="number" pos:start="66:35" pos:end="66:35">1</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="67:21" pos:end="67:36"><expr pos:start="67:21" pos:end="67:35"><name pos:start="67:21" pos:end="67:32"><name pos:start="67:21" pos:end="67:23">vis</name><index pos:start="67:24" pos:end="67:26">[<expr pos:start="67:25" pos:end="67:25"><name pos:start="67:25" pos:end="67:25">i</name></expr>]</index><index pos:start="67:27" pos:end="67:29">[<expr pos:start="67:28" pos:end="67:28"><name pos:start="67:28" pos:end="67:28">j</name></expr>]</index><index pos:start="67:30" pos:end="67:32">[<expr pos:start="67:31" pos:end="67:31"><literal type="number" pos:start="67:31" pos:end="67:31">4</literal></expr>]</index></name><operator pos:start="67:33" pos:end="67:34">==</operator><literal type="number" pos:start="67:35" pos:end="67:35">1</literal></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>
        <expr_stmt pos:start="71:9" pos:end="71:32"><expr pos:start="71:9" pos:end="71:31"><name pos:start="71:9" pos:end="71:11">cin</name><operator pos:start="71:12" pos:end="71:13">&gt;&gt;</operator><name pos:start="71:14" pos:end="71:14">k</name><operator pos:start="71:15" pos:end="71:16">&gt;&gt;</operator><name pos:start="71:17" pos:end="71:18">x1</name><operator pos:start="71:19" pos:end="71:20">&gt;&gt;</operator><name pos:start="71:21" pos:end="71:22">x2</name><operator pos:start="71:23" pos:end="71:24">&gt;&gt;</operator><name pos:start="71:25" pos:end="71:27">y11</name><operator pos:start="71:28" pos:end="71:29">&gt;&gt;</operator><name pos:start="71:30" pos:end="71:31">y2</name></expr>;</expr_stmt>
        <expr_stmt pos:start="72:9" pos:end="72:39"><expr pos:start="72:9" pos:end="72:38"><call pos:start="72:9" pos:end="72:38"><name pos:start="72:9" pos:end="72:22"><name pos:start="72:9" pos:end="72:11">deq</name><operator pos:start="72:12" pos:end="72:12">.</operator><name pos:start="72:13" pos:end="72:22">push_front</name></name><argument_list pos:start="72:23" pos:end="72:38">(<argument pos:start="72:24" pos:end="72:37"><expr pos:start="72:24" pos:end="72:37"><call pos:start="72:24" pos:end="72:37"><name pos:start="72:24" pos:end="72:27">node</name><argument_list pos:start="72:28" pos:end="72:37">{<argument pos:start="72:29" pos:end="72:30"><expr pos:start="72:29" pos:end="72:30"><name pos:start="72:29" pos:end="72:30">x1</name></expr></argument>,<argument pos:start="72:32" pos:end="72:34"><expr pos:start="72:32" pos:end="72:34"><name pos:start="72:32" pos:end="72:34">y11</name></expr></argument>,<argument pos:start="72:36" pos:end="72:36"><expr pos:start="72:36" pos:end="72:36"><literal type="number" pos:start="72:36" pos:end="72:36">1</literal></expr></argument>}</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="73:9" pos:end="73:39"><expr pos:start="73:9" pos:end="73:38"><call pos:start="73:9" pos:end="73:38"><name pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:11">deq</name><operator pos:start="73:12" pos:end="73:12">.</operator><name pos:start="73:13" pos:end="73:22">push_front</name></name><argument_list pos:start="73:23" pos:end="73:38">(<argument pos:start="73:24" pos:end="73:37"><expr pos:start="73:24" pos:end="73:37"><call pos:start="73:24" pos:end="73:37"><name pos:start="73:24" pos:end="73:27">node</name><argument_list pos:start="73:28" pos:end="73:37">{<argument pos:start="73:29" pos:end="73:30"><expr pos:start="73:29" pos:end="73:30"><name pos:start="73:29" pos:end="73:30">x1</name></expr></argument>,<argument pos:start="73:32" pos:end="73:34"><expr pos:start="73:32" pos:end="73:34"><name pos:start="73:32" pos:end="73:34">y11</name></expr></argument>,<argument pos:start="73:36" pos:end="73:36"><expr pos:start="73:36" pos:end="73:36"><literal type="number" pos:start="73:36" pos:end="73:36">2</literal></expr></argument>}</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="74:9" pos:end="74:39"><expr pos:start="74:9" pos:end="74:38"><call pos:start="74:9" pos:end="74:38"><name pos:start="74:9" pos:end="74:22"><name pos:start="74:9" pos:end="74:11">deq</name><operator pos:start="74:12" pos:end="74:12">.</operator><name pos:start="74:13" pos:end="74:22">push_front</name></name><argument_list pos:start="74:23" pos:end="74:38">(<argument pos:start="74:24" pos:end="74:37"><expr pos:start="74:24" pos:end="74:37"><call pos:start="74:24" pos:end="74:37"><name pos:start="74:24" pos:end="74:27">node</name><argument_list pos:start="74:28" pos:end="74:37">{<argument pos:start="74:29" pos:end="74:30"><expr pos:start="74:29" pos:end="74:30"><name pos:start="74:29" pos:end="74:30">x1</name></expr></argument>,<argument pos:start="74:32" pos:end="74:34"><expr pos:start="74:32" pos:end="74:34"><name pos:start="74:32" pos:end="74:34">y11</name></expr></argument>,<argument pos:start="74:36" pos:end="74:36"><expr pos:start="74:36" pos:end="74:36"><literal type="number" pos:start="74:36" pos:end="74:36">3</literal></expr></argument>}</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><call pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:11">deq</name><operator pos:start="75:12" pos:end="75:12">.</operator><name pos:start="75:13" pos:end="75:22">push_front</name></name><argument_list pos:start="75:23" pos:end="75:38">(<argument pos:start="75:24" pos:end="75:37"><expr pos:start="75:24" pos:end="75:37"><call pos:start="75:24" pos:end="75:37"><name pos:start="75:24" pos:end="75:27">node</name><argument_list pos:start="75:28" pos:end="75:37">{<argument pos:start="75:29" pos:end="75:30"><expr pos:start="75:29" pos:end="75:30"><name pos:start="75:29" pos:end="75:30">x1</name></expr></argument>,<argument pos:start="75:32" pos:end="75:34"><expr pos:start="75:32" pos:end="75:34"><name pos:start="75:32" pos:end="75:34">y11</name></expr></argument>,<argument pos:start="75:36" pos:end="75:36"><expr pos:start="75:36" pos:end="75:36"><literal type="number" pos:start="75:36" pos:end="75:36">4</literal></expr></argument>}</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="76:9" pos:end="81:9"><if pos:start="76:9" pos:end="79:9">if<condition pos:start="76:11" pos:end="76:17">(<expr pos:start="76:12" pos:end="76:16"><call pos:start="76:12" pos:end="76:16"><name pos:start="76:12" pos:end="76:14">bfs</name><argument_list pos:start="76:15" pos:end="76:16">()</argument_list></call></expr>)</condition>
        <block pos:start="77:9" pos:end="79:9">{<block_content pos:start="78:13" pos:end="78:30">
            <expr_stmt pos:start="78:13" pos:end="78:30"><expr pos:start="78:13" pos:end="78:29"><name pos:start="78:13" pos:end="78:16">cout</name><operator pos:start="78:17" pos:end="78:18">&lt;&lt;</operator><literal type="string" pos:start="78:19" pos:end="78:23">"yes"</literal><operator pos:start="78:24" pos:end="78:25">&lt;&lt;</operator><name pos:start="78:26" pos:end="78:29">endl</name></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="79:10" pos:end="81:9">else<block pos:start="79:14" pos:end="81:9">{<block_content pos:start="80:13" pos:end="80:29">
            <expr_stmt pos:start="80:13" pos:end="80:29"><expr pos:start="80:13" pos:end="80:28"><name pos:start="80:13" pos:end="80:16">cout</name><operator pos:start="80:17" pos:end="80:18">&lt;&lt;</operator><literal type="string" pos:start="80:19" pos:end="80:22">"no"</literal><operator pos:start="80:23" pos:end="80:24">&lt;&lt;</operator><name pos:start="80:25" pos:end="80:28">endl</name></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
