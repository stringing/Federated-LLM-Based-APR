<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/119/119.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>

<decl_stmt pos:start="4:1" pos:end="4:17"><decl pos:start="4:1" pos:end="4:16"><type pos:start="4:1" pos:end="4:6"><name pos:start="4:1" pos:end="4:6">string</name></type> <name pos:start="4:8" pos:end="4:16"><name pos:start="4:8" pos:end="4:11">book</name><index pos:start="4:12" pos:end="4:16">[<expr pos:start="4:13" pos:end="4:15"><literal type="number" pos:start="4:13" pos:end="4:15">101</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="20:1"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:7">pd</name><parameter_list pos:start="5:8" pos:end="5:20">(<parameter pos:start="5:9" pos:end="5:13"><decl pos:start="5:9" pos:end="5:13"><type pos:start="5:9" pos:end="5:13"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:13">x</name></decl></parameter>,<parameter pos:start="5:15" pos:end="5:19"><decl pos:start="5:15" pos:end="5:19"><type pos:start="5:15" pos:end="5:19"><name pos:start="5:15" pos:end="5:17">int</name></type> <name pos:start="5:19" pos:end="5:19">y</name></decl></parameter>)</parameter_list><block pos:start="5:21" pos:end="20:1">{<block_content pos:start="6:5" pos:end="19:5">
    <decl_stmt pos:start="6:5" pos:end="6:18"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:12">sumx</name></decl>,<decl pos:start="6:14" pos:end="6:17"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:14" pos:end="6:17">sumy</name></decl>;</decl_stmt>
    <for pos:start="7:5" pos:end="10:5">for<control pos:start="7:8" pos:end="7:28">(<init pos:start="7:9" pos:end="7:18"><decl pos:start="7:9" pos:end="7:17"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">i</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">1</literal></expr></init></decl>;</init><condition pos:start="7:19" pos:end="7:24"><expr pos:start="7:19" pos:end="7:23"><name pos:start="7:19" pos:end="7:19">i</name> <operator pos:start="7:21" pos:end="7:21">&lt;</operator> <literal type="number" pos:start="7:23" pos:end="7:23">5</literal></expr>;</condition><incr pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:25">i</name><operator pos:start="7:26" pos:end="7:27">++</operator></expr></incr>)</control><block pos:start="7:29" pos:end="10:5">{<block_content pos:start="8:9" pos:end="9:16">
        <expr_stmt pos:start="8:9" pos:end="8:23"><expr pos:start="8:9" pos:end="8:22"><name pos:start="8:9" pos:end="8:12">sumx</name> <operator pos:start="8:14" pos:end="8:15">+=</operator> <name pos:start="8:17" pos:end="8:17">x</name> <operator pos:start="8:19" pos:end="8:19">%</operator> <literal type="number" pos:start="8:21" pos:end="8:22">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:16"><expr pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:9">x</name> <operator pos:start="9:11" pos:end="9:12">/=</operator> <literal type="number" pos:start="9:14" pos:end="9:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="11:5" pos:end="14:5">for<control pos:start="11:8" pos:end="11:28">(<init pos:start="11:9" pos:end="11:18"><decl pos:start="11:9" pos:end="11:17"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr></init></decl>;</init><condition pos:start="11:19" pos:end="11:24"><expr pos:start="11:19" pos:end="11:23"><name pos:start="11:19" pos:end="11:19">i</name> <operator pos:start="11:21" pos:end="11:21">&lt;</operator> <literal type="number" pos:start="11:23" pos:end="11:23">5</literal></expr>;</condition><incr pos:start="11:25" pos:end="11:27"><expr pos:start="11:25" pos:end="11:27"><name pos:start="11:25" pos:end="11:25">i</name><operator pos:start="11:26" pos:end="11:27">++</operator></expr></incr>)</control><block pos:start="11:29" pos:end="14:5">{<block_content pos:start="12:9" pos:end="13:16">
        <expr_stmt pos:start="12:9" pos:end="12:23"><expr pos:start="12:9" pos:end="12:22"><name pos:start="12:9" pos:end="12:12">sumy</name> <operator pos:start="12:14" pos:end="12:15">+=</operator> <name pos:start="12:17" pos:end="12:17">y</name> <operator pos:start="12:19" pos:end="12:19">%</operator> <literal type="number" pos:start="12:21" pos:end="12:22">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:16"><expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:9">y</name> <operator pos:start="13:11" pos:end="13:12">/=</operator> <literal type="number" pos:start="13:14" pos:end="13:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="17:5">if<condition pos:start="15:7" pos:end="15:20">(<expr pos:start="15:8" pos:end="15:19"><name pos:start="15:8" pos:end="15:11">sumx</name> <operator pos:start="15:13" pos:end="15:14">!=</operator> <name pos:start="15:16" pos:end="15:19">sumy</name></expr>)</condition><block pos:start="15:21" pos:end="17:5">{<block_content pos:start="16:9" pos:end="16:21">
        <return pos:start="16:9" pos:end="16:21">return <expr pos:start="16:16" pos:end="16:20"><name pos:start="16:16" pos:end="16:16">x</name> <operator pos:start="16:18" pos:end="16:18">&lt;</operator> <name pos:start="16:20" pos:end="16:20">y</name></expr>;</return>
    </block_content>}</block></if><else pos:start="17:6" pos:end="19:5">else<block pos:start="17:10" pos:end="19:5">{<block_content pos:start="18:9" pos:end="18:21">    
        <return pos:start="18:9" pos:end="18:21">return <expr pos:start="18:16" pos:end="18:20"><name pos:start="18:16" pos:end="18:16">x</name> <operator pos:start="18:18" pos:end="18:18">&lt;</operator> <name pos:start="18:20" pos:end="18:20">y</name></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="21:1" pos:end="32:1"><type pos:start="21:1" pos:end="21:3"><name pos:start="21:1" pos:end="21:3">int</name></type> <name pos:start="21:5" pos:end="21:8">main</name><parameter_list pos:start="21:9" pos:end="21:10">()</parameter_list><block pos:start="21:11" pos:end="32:1">{<block_content pos:start="22:5" pos:end="31:13">
    <decl_stmt pos:start="22:5" pos:end="22:10"><decl pos:start="22:5" pos:end="22:9"><type pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></type> <name pos:start="22:9" pos:end="22:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:13"><expr pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:7">cin</name> <operator pos:start="23:9" pos:end="23:10">&gt;&gt;</operator> <name pos:start="23:12" pos:end="23:12">n</name></expr>;</expr_stmt>
    <for pos:start="24:5" pos:end="26:5">for<control pos:start="24:8" pos:end="24:28">(<init pos:start="24:9" pos:end="24:18"><decl pos:start="24:9" pos:end="24:17"><type pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:11">int</name></type> <name pos:start="24:13" pos:end="24:13">i</name> <init pos:start="24:15" pos:end="24:17">= <expr pos:start="24:17" pos:end="24:17"><literal type="number" pos:start="24:17" pos:end="24:17">0</literal></expr></init></decl>;</init><condition pos:start="24:19" pos:end="24:24"><expr pos:start="24:19" pos:end="24:23"><name pos:start="24:19" pos:end="24:19">i</name> <operator pos:start="24:21" pos:end="24:21">&lt;</operator> <name pos:start="24:23" pos:end="24:23">n</name></expr>;</condition><incr pos:start="24:25" pos:end="24:27"><expr pos:start="24:25" pos:end="24:27"><name pos:start="24:25" pos:end="24:25">i</name><operator pos:start="24:26" pos:end="24:27">++</operator></expr></incr>)</control><block pos:start="24:29" pos:end="26:5">{<block_content pos:start="25:9" pos:end="25:23">
        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:11">cin</name> <operator pos:start="25:13" pos:end="25:14">&gt;&gt;</operator> <name pos:start="25:16" pos:end="25:22"><name pos:start="25:16" pos:end="25:19">book</name><index pos:start="25:20" pos:end="25:22">[<expr pos:start="25:21" pos:end="25:21"><name pos:start="25:21" pos:end="25:21">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><call pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:8">sort</name><argument_list pos:start="27:9" pos:end="27:26">(<argument pos:start="27:10" pos:end="27:13"><expr pos:start="27:10" pos:end="27:13"><name pos:start="27:10" pos:end="27:13">book</name></expr></argument>,<argument pos:start="27:15" pos:end="27:22"><expr pos:start="27:15" pos:end="27:22"><name pos:start="27:15" pos:end="27:18">book</name> <operator pos:start="27:20" pos:end="27:20">+</operator> <name pos:start="27:22" pos:end="27:22">n</name></expr></argument>,<argument pos:start="27:24" pos:end="27:25"><expr pos:start="27:24" pos:end="27:25"><name pos:start="27:24" pos:end="27:25">pd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="28:5" pos:end="30:5">for<control pos:start="28:8" pos:end="28:28">(<init pos:start="28:9" pos:end="28:18"><decl pos:start="28:9" pos:end="28:17"><type pos:start="28:9" pos:end="28:11"><name pos:start="28:9" pos:end="28:11">int</name></type> <name pos:start="28:13" pos:end="28:13">i</name> <init pos:start="28:15" pos:end="28:17">= <expr pos:start="28:17" pos:end="28:17"><literal type="number" pos:start="28:17" pos:end="28:17">0</literal></expr></init></decl>;</init><condition pos:start="28:19" pos:end="28:24"><expr pos:start="28:19" pos:end="28:23"><name pos:start="28:19" pos:end="28:19">i</name> <operator pos:start="28:21" pos:end="28:21">&lt;</operator> <name pos:start="28:23" pos:end="28:23">n</name></expr>;</condition><incr pos:start="28:25" pos:end="28:27"><expr pos:start="28:25" pos:end="28:27"><name pos:start="28:25" pos:end="28:25">i</name><operator pos:start="28:26" pos:end="28:27">++</operator></expr></incr>)</control><block pos:start="28:29" pos:end="30:5">{<block_content pos:start="29:9" pos:end="29:31">
        <expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:12">cout</name> <operator pos:start="29:14" pos:end="29:15">&lt;&lt;</operator> <name pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:20">book</name><index pos:start="29:21" pos:end="29:23">[<expr pos:start="29:22" pos:end="29:22"><name pos:start="29:22" pos:end="29:22">i</name></expr>]</index></name> <operator pos:start="29:25" pos:end="29:26">&lt;&lt;</operator> <literal type="string" pos:start="29:28" pos:end="29:30">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>
</block_content>}</block></function>









</unit>
