<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/409/409.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="38:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list>
<block pos:start="4:1" pos:end="38:1">{<block_content pos:start="5:5" pos:end="36:5">
    <expr_stmt pos:start="5:5" pos:end="5:30"><expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:29">(<argument pos:start="5:13" pos:end="5:18"><expr pos:start="5:13" pos:end="5:18"><literal type="string" pos:start="5:13" pos:end="5:18">"p.in"</literal></expr></argument>,<argument pos:start="5:20" pos:end="5:22"><expr pos:start="5:20" pos:end="5:22"><literal type="string" pos:start="5:20" pos:end="5:22">"r"</literal></expr></argument>,<argument pos:start="5:24" pos:end="5:28"><expr pos:start="5:24" pos:end="5:28"><name pos:start="5:24" pos:end="5:28">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:32"><expr pos:start="6:5" pos:end="6:31"><call pos:start="6:5" pos:end="6:31"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:31">(<argument pos:start="6:13" pos:end="6:19"><expr pos:start="6:13" pos:end="6:19"><literal type="string" pos:start="6:13" pos:end="6:19">"p.out"</literal></expr></argument>,<argument pos:start="6:21" pos:end="6:23"><expr pos:start="6:21" pos:end="6:23"><literal type="string" pos:start="6:21" pos:end="6:23">"w"</literal></expr></argument>,<argument pos:start="6:25" pos:end="6:30"><expr pos:start="6:25" pos:end="6:30"><name pos:start="6:25" pos:end="6:30">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">t</name></decl>,<decl pos:start="7:11" pos:end="7:11"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:11">n</name></decl>,<decl pos:start="7:13" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:13">x</name></decl>,<decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">y</name></decl>,<decl pos:start="7:17" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:17">p</name></decl>,<decl pos:start="7:19" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:19">o</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:11"><expr pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:10">t</name></expr>;</expr_stmt>
    <for pos:start="9:5" pos:end="36:5">for<control pos:start="9:8" pos:end="9:25">(<init pos:start="9:9" pos:end="9:16"><decl pos:start="9:9" pos:end="9:15"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">j</name><init pos:start="9:14" pos:end="9:15">=<expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">1</literal></expr></init></decl>;</init><condition pos:start="9:17" pos:end="9:21"><expr pos:start="9:17" pos:end="9:20"><name pos:start="9:17" pos:end="9:17">j</name><operator pos:start="9:18" pos:end="9:19">&lt;=</operator><name pos:start="9:20" pos:end="9:20">t</name></expr>;</condition><incr pos:start="9:22" pos:end="9:24"><expr pos:start="9:22" pos:end="9:24"><name pos:start="9:22" pos:end="9:22">j</name><operator pos:start="9:23" pos:end="9:24">++</operator></expr></incr>)</control>
    <block pos:start="10:5" pos:end="36:5">{<block_content pos:start="11:9" pos:end="35:22">
        <expr_stmt pos:start="11:9" pos:end="11:12"><expr pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:9">p</name><operator pos:start="11:10" pos:end="11:10">=</operator><literal type="number" pos:start="11:11" pos:end="11:11">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:15"><expr pos:start="12:9" pos:end="12:14"><name pos:start="12:9" pos:end="12:11">cin</name><operator pos:start="12:12" pos:end="12:13">&gt;&gt;</operator><name pos:start="12:14" pos:end="12:14">n</name></expr>;</expr_stmt>
        <decl_stmt pos:start="13:9" pos:end="13:27"><decl pos:start="13:9" pos:end="13:26"><type pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:14">vector</name><argument_list type="generic" pos:start="13:15" pos:end="13:19">&lt;<argument pos:start="13:16" pos:end="13:18"><expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="13:21" pos:end="13:26"><name pos:start="13:21" pos:end="13:21">G</name><index pos:start="13:22" pos:end="13:26">[<expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:23">n</name><operator pos:start="13:24" pos:end="13:24">+</operator><literal type="number" pos:start="13:25" pos:end="13:25">1</literal></expr>]</index></name></decl>;</decl_stmt>
        <for pos:start="14:9" pos:end="19:9">for<control pos:start="14:12" pos:end="14:29">(<init pos:start="14:13" pos:end="14:20"><decl pos:start="14:13" pos:end="14:19"><type pos:start="14:13" pos:end="14:15"><name pos:start="14:13" pos:end="14:15">int</name></type> <name pos:start="14:17" pos:end="14:17">i</name><init pos:start="14:18" pos:end="14:19">=<expr pos:start="14:19" pos:end="14:19"><literal type="number" pos:start="14:19" pos:end="14:19">2</literal></expr></init></decl>;</init><condition pos:start="14:21" pos:end="14:25"><expr pos:start="14:21" pos:end="14:24"><name pos:start="14:21" pos:end="14:21">i</name><operator pos:start="14:22" pos:end="14:23">&lt;=</operator><name pos:start="14:24" pos:end="14:24">n</name></expr>;</condition><incr pos:start="14:26" pos:end="14:28"><expr pos:start="14:26" pos:end="14:28"><name pos:start="14:26" pos:end="14:26">i</name><operator pos:start="14:27" pos:end="14:28">++</operator></expr></incr>)</control>
        <block pos:start="15:9" pos:end="19:9">{<block_content pos:start="16:13" pos:end="18:30">
            <expr_stmt pos:start="16:13" pos:end="16:22"><expr pos:start="16:13" pos:end="16:21"><name pos:start="16:13" pos:end="16:15">cin</name><operator pos:start="16:16" pos:end="16:17">&gt;&gt;</operator><name pos:start="16:18" pos:end="16:18">x</name><operator pos:start="16:19" pos:end="16:20">&gt;&gt;</operator><name pos:start="16:21" pos:end="16:21">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:30"><expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:13">G</name><index pos:start="17:14" pos:end="17:16">[<expr pos:start="17:15" pos:end="17:15"><name pos:start="17:15" pos:end="17:15">x</name></expr>]</index></name><operator pos:start="17:17" pos:end="17:17">.</operator><call pos:start="17:18" pos:end="17:29"><name pos:start="17:18" pos:end="17:26">push_back</name><argument_list pos:start="17:27" pos:end="17:29">(<argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:30"><expr pos:start="18:13" pos:end="18:29"><name pos:start="18:13" pos:end="18:16"><name pos:start="18:13" pos:end="18:13">G</name><index pos:start="18:14" pos:end="18:16">[<expr pos:start="18:15" pos:end="18:15"><name pos:start="18:15" pos:end="18:15">y</name></expr>]</index></name><operator pos:start="18:17" pos:end="18:17">.</operator><call pos:start="18:18" pos:end="18:29"><name pos:start="18:18" pos:end="18:26">push_back</name><argument_list pos:start="18:27" pos:end="18:29">(<argument pos:start="18:28" pos:end="18:28"><expr pos:start="18:28" pos:end="18:28"><name pos:start="18:28" pos:end="18:28">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="20:9" pos:end="34:9">for<control pos:start="20:12" pos:end="20:28">(<init pos:start="20:13" pos:end="20:20"><decl pos:start="20:13" pos:end="20:19"><type pos:start="20:13" pos:end="20:15"><name pos:start="20:13" pos:end="20:15">int</name></type> <name pos:start="20:17" pos:end="20:17">i</name><init pos:start="20:18" pos:end="20:19">=<expr pos:start="20:19" pos:end="20:19"><literal type="number" pos:start="20:19" pos:end="20:19">0</literal></expr></init></decl>;</init><condition pos:start="20:21" pos:end="20:24"><expr pos:start="20:21" pos:end="20:23"><name pos:start="20:21" pos:end="20:21">i</name><operator pos:start="20:22" pos:end="20:22">&lt;</operator><name pos:start="20:23" pos:end="20:23">n</name></expr>;</condition><incr pos:start="20:25" pos:end="20:27"><expr pos:start="20:25" pos:end="20:27"><name pos:start="20:25" pos:end="20:25">i</name><operator pos:start="20:26" pos:end="20:27">++</operator></expr></incr>)</control>
        <block pos:start="21:9" pos:end="34:9">{<block_content pos:start="22:13" pos:end="33:13">
            <expr_stmt pos:start="22:13" pos:end="22:16"><expr pos:start="22:13" pos:end="22:15"><name pos:start="22:13" pos:end="22:13">o</name><operator pos:start="22:14" pos:end="22:14">=</operator><literal type="number" pos:start="22:15" pos:end="22:15">0</literal></expr>;</expr_stmt>
            <for pos:start="23:13" pos:end="29:13">for<control pos:start="23:16" pos:end="23:42">(<init pos:start="23:17" pos:end="23:24"><decl pos:start="23:17" pos:end="23:23"><type pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:19">int</name></type> <name pos:start="23:21" pos:end="23:21">v</name><init pos:start="23:22" pos:end="23:23">=<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr></init></decl>;</init><condition pos:start="23:25" pos:end="23:38"><expr pos:start="23:25" pos:end="23:37"><name pos:start="23:25" pos:end="23:25">v</name><operator pos:start="23:26" pos:end="23:26">&lt;</operator><name pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:27">G</name><index pos:start="23:28" pos:end="23:30">[<expr pos:start="23:29" pos:end="23:29"><name pos:start="23:29" pos:end="23:29">i</name></expr>]</index></name><operator pos:start="23:31" pos:end="23:31">.</operator><call pos:start="23:32" pos:end="23:37"><name pos:start="23:32" pos:end="23:35">size</name><argument_list pos:start="23:36" pos:end="23:37">()</argument_list></call></expr>;</condition><incr pos:start="23:39" pos:end="23:41"><expr pos:start="23:39" pos:end="23:41"><name pos:start="23:39" pos:end="23:39">v</name><operator pos:start="23:40" pos:end="23:41">++</operator></expr></incr>)</control>
            <block pos:start="24:13" pos:end="29:13">{<block_content pos:start="25:17" pos:end="28:17">
                <if_stmt pos:start="25:17" pos:end="28:17"><if pos:start="25:17" pos:end="28:17">if<condition pos:start="25:19" pos:end="25:49">(<expr pos:start="25:20" pos:end="25:48"><name pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:20">G</name><index pos:start="25:21" pos:end="25:23">[<expr pos:start="25:22" pos:end="25:22"><name pos:start="25:22" pos:end="25:22">i</name></expr>]</index></name><operator pos:start="25:24" pos:end="25:24">.</operator><call pos:start="25:25" pos:end="25:30"><name pos:start="25:25" pos:end="25:28">size</name><argument_list pos:start="25:29" pos:end="25:30">()</argument_list></call><operator pos:start="25:31" pos:end="25:31">&lt;</operator><name pos:start="25:32" pos:end="25:41"><name pos:start="25:32" pos:end="25:32">G</name><index pos:start="25:33" pos:end="25:41">[<expr pos:start="25:34" pos:end="25:40"><name pos:start="25:34" pos:end="25:40"><name pos:start="25:34" pos:end="25:34">G</name><index pos:start="25:35" pos:end="25:37">[<expr pos:start="25:36" pos:end="25:36"><name pos:start="25:36" pos:end="25:36">i</name></expr>]</index><index pos:start="25:38" pos:end="25:40">[<expr pos:start="25:39" pos:end="25:39"><name pos:start="25:39" pos:end="25:39">v</name></expr>]</index></name></expr>]</index></name><operator pos:start="25:42" pos:end="25:42">.</operator><call pos:start="25:43" pos:end="25:48"><name pos:start="25:43" pos:end="25:46">size</name><argument_list pos:start="25:47" pos:end="25:48">()</argument_list></call></expr>)</condition>
                <block pos:start="26:17" pos:end="28:17">{<block_content pos:start="27:21" pos:end="27:24">
                    <expr_stmt pos:start="27:21" pos:end="27:24"><expr pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:21">o</name><operator pos:start="27:22" pos:end="27:23">++</operator></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="30:13" pos:end="33:13"><if pos:start="30:13" pos:end="33:13">if<condition pos:start="30:15" pos:end="30:20">(<expr pos:start="30:16" pos:end="30:19"><name pos:start="30:16" pos:end="30:16">o</name><operator pos:start="30:17" pos:end="30:18">==</operator><literal type="number" pos:start="30:19" pos:end="30:19">0</literal></expr>)</condition>
            <block pos:start="31:13" pos:end="33:13">{<block_content pos:start="32:17" pos:end="32:20">
                <expr_stmt pos:start="32:17" pos:end="32:20"><expr pos:start="32:17" pos:end="32:19"><name pos:start="32:17" pos:end="32:17">p</name><operator pos:start="32:18" pos:end="32:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="35:9" pos:end="35:22"><expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:12">cout</name><operator pos:start="35:13" pos:end="35:14">&lt;&lt;</operator><name pos:start="35:15" pos:end="35:15">p</name><operator pos:start="35:16" pos:end="35:17">&lt;&lt;</operator><name pos:start="35:18" pos:end="35:21">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
   
</block_content>}</block></function>
</unit>
