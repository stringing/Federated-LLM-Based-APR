<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1187/1187.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:20"><decl pos:start="3:1" pos:end="3:19"><type pos:start="3:1" pos:end="3:11"><name pos:start="3:1" pos:end="3:11"><name pos:start="3:1" pos:end="3:6">vector</name><argument_list type="generic" pos:start="3:7" pos:end="3:11">&lt;<argument pos:start="3:8" pos:end="3:10"><expr pos:start="3:8" pos:end="3:10"><name pos:start="3:8" pos:end="3:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="3:13" pos:end="3:19"><name pos:start="3:13" pos:end="3:13">G</name><index pos:start="3:14" pos:end="3:19">[<expr pos:start="3:15" pos:end="3:18"><literal type="number" pos:start="3:15" pos:end="3:18">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:10"><decl pos:start="4:1" pos:end="4:9"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:7">ans</name><init pos:start="4:8" pos:end="4:9">=<expr pos:start="4:9" pos:end="4:9"><literal type="number" pos:start="4:9" pos:end="4:9">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:7"><decl pos:start="5:1" pos:end="5:6"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:6">f</name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:13"><decl pos:start="6:1" pos:end="6:12"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:6">fa</name><index pos:start="6:7" pos:end="6:12">[<expr pos:start="6:8" pos:end="6:11"><literal type="number" pos:start="6:8" pos:end="6:11">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="39:1"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:8">main</name><parameter_list pos:start="7:9" pos:end="7:10">()</parameter_list><block pos:start="7:11" pos:end="39:1">{<block_content pos:start="8:5" pos:end="38:13">
    <expr_stmt pos:start="8:5" pos:end="8:30"><expr pos:start="8:5" pos:end="8:29"><call pos:start="8:5" pos:end="8:29"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:29">(<argument pos:start="8:13" pos:end="8:18"><expr pos:start="8:13" pos:end="8:18"><literal type="string" pos:start="8:13" pos:end="8:18">"p.in"</literal></expr></argument>,<argument pos:start="8:20" pos:end="8:22"><expr pos:start="8:20" pos:end="8:22"><literal type="string" pos:start="8:20" pos:end="8:22">"r"</literal></expr></argument>,<argument pos:start="8:24" pos:end="8:28"><expr pos:start="8:24" pos:end="8:28"><name pos:start="8:24" pos:end="8:28">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:32"><expr pos:start="9:5" pos:end="9:31"><call pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:11">freopen</name><argument_list pos:start="9:12" pos:end="9:31">(<argument pos:start="9:13" pos:end="9:19"><expr pos:start="9:13" pos:end="9:19"><literal type="string" pos:start="9:13" pos:end="9:19">"p.out"</literal></expr></argument>,<argument pos:start="9:21" pos:end="9:23"><expr pos:start="9:21" pos:end="9:23"><literal type="string" pos:start="9:21" pos:end="9:23">"w"</literal></expr></argument>,<argument pos:start="9:25" pos:end="9:30"><expr pos:start="9:25" pos:end="9:30"><name pos:start="9:25" pos:end="9:30">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:16"><decl pos:start="10:5" pos:end="10:9"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">t</name></decl>,<decl pos:start="10:11" pos:end="10:11"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:11" pos:end="10:11">n</name></decl>,<decl pos:start="10:13" pos:end="10:13"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:13" pos:end="10:13">x</name></decl>,<decl pos:start="10:15" pos:end="10:15"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:15" pos:end="10:15">y</name></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:11"><expr pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:7">cin</name><operator pos:start="11:8" pos:end="11:9">&gt;&gt;</operator><name pos:start="11:10" pos:end="11:10">t</name></expr>;</expr_stmt>
    <while pos:start="12:5" pos:end="37:9">while<condition pos:start="12:10" pos:end="12:14">(<expr pos:start="12:11" pos:end="12:13"><name pos:start="12:11" pos:end="12:11">t</name><operator pos:start="12:12" pos:end="12:13">--</operator></expr>)</condition><block pos:start="12:15" pos:end="37:9">{<block_content pos:start="13:13" pos:end="36:36">
            <expr_stmt pos:start="13:13" pos:end="13:19"><expr pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:15">cin</name><operator pos:start="13:16" pos:end="13:17">&gt;&gt;</operator><name pos:start="13:18" pos:end="13:18">n</name></expr>;</expr_stmt>
            <for pos:start="14:13" pos:end="18:13">for<control pos:start="14:16" pos:end="14:34">(<init pos:start="14:17" pos:end="14:24"><decl pos:start="14:17" pos:end="14:23"><type pos:start="14:17" pos:end="14:19"><name pos:start="14:17" pos:end="14:19">int</name></type> <name pos:start="14:21" pos:end="14:21">i</name><init pos:start="14:22" pos:end="14:23">=<expr pos:start="14:23" pos:end="14:23"><literal type="number" pos:start="14:23" pos:end="14:23">0</literal></expr></init></decl>;</init><condition pos:start="14:25" pos:end="14:30"><expr pos:start="14:25" pos:end="14:29"><name pos:start="14:25" pos:end="14:25">i</name><operator pos:start="14:26" pos:end="14:26">&lt;</operator><name pos:start="14:27" pos:end="14:27">n</name><operator pos:start="14:28" pos:end="14:28">-</operator><literal type="number" pos:start="14:29" pos:end="14:29">1</literal></expr>;</condition><incr pos:start="14:31" pos:end="14:33"><expr pos:start="14:31" pos:end="14:33"><name pos:start="14:31" pos:end="14:31">i</name><operator pos:start="14:32" pos:end="14:33">++</operator></expr></incr>)</control><block pos:start="14:35" pos:end="18:13">{<block_content pos:start="15:17" pos:end="17:24">
                <expr_stmt pos:start="15:17" pos:end="15:26"><expr pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:19">cin</name><operator pos:start="15:20" pos:end="15:21">&gt;&gt;</operator><name pos:start="15:22" pos:end="15:22">x</name><operator pos:start="15:23" pos:end="15:24">&gt;&gt;</operator><name pos:start="15:25" pos:end="15:25">y</name></expr>;</expr_stmt>
                <expr_stmt pos:start="16:17" pos:end="16:34"><expr pos:start="16:17" pos:end="16:33"><name pos:start="16:17" pos:end="16:20"><name pos:start="16:17" pos:end="16:17">G</name><index pos:start="16:18" pos:end="16:20">[<expr pos:start="16:19" pos:end="16:19"><name pos:start="16:19" pos:end="16:19">x</name></expr>]</index></name><operator pos:start="16:21" pos:end="16:21">.</operator><call pos:start="16:22" pos:end="16:33"><name pos:start="16:22" pos:end="16:30">push_back</name><argument_list pos:start="16:31" pos:end="16:33">(<argument pos:start="16:32" pos:end="16:32"><expr pos:start="16:32" pos:end="16:32"><name pos:start="16:32" pos:end="16:32">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="17:17" pos:end="17:24"><expr pos:start="17:17" pos:end="17:23"><name pos:start="17:17" pos:end="17:21"><name pos:start="17:17" pos:end="17:18">fa</name><index pos:start="17:19" pos:end="17:21">[<expr pos:start="17:20" pos:end="17:20"><name pos:start="17:20" pos:end="17:20">y</name></expr>]</index></name><operator pos:start="17:22" pos:end="17:22">=</operator><name pos:start="17:23" pos:end="17:23">x</name></expr>;</expr_stmt>
            </block_content>}</block></for>
            <for pos:start="19:13" pos:end="31:13">for<control pos:start="19:16" pos:end="19:33">(<init pos:start="19:17" pos:end="19:24"><decl pos:start="19:17" pos:end="19:23"><type pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">int</name></type> <name pos:start="19:21" pos:end="19:21">i</name><init pos:start="19:22" pos:end="19:23">=<expr pos:start="19:23" pos:end="19:23"><literal type="number" pos:start="19:23" pos:end="19:23">1</literal></expr></init></decl>;</init><condition pos:start="19:25" pos:end="19:29"><expr pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:25">i</name><operator pos:start="19:26" pos:end="19:27">&lt;=</operator><name pos:start="19:28" pos:end="19:28">n</name></expr>;</condition><incr pos:start="19:30" pos:end="19:32"><expr pos:start="19:30" pos:end="19:32"><name pos:start="19:30" pos:end="19:30">i</name><operator pos:start="19:31" pos:end="19:32">++</operator></expr></incr>)</control><block pos:start="19:34" pos:end="31:13">{<block_content pos:start="20:17" pos:end="30:21">
                <expr_stmt pos:start="20:17" pos:end="20:23"><expr pos:start="20:17" pos:end="20:22"><name pos:start="20:17" pos:end="20:17">f</name><operator pos:start="20:18" pos:end="20:18">=</operator><literal type="boolean" pos:start="20:19" pos:end="20:22">true</literal></expr>;</expr_stmt>
                <for pos:start="21:17" pos:end="26:17">for<control pos:start="21:20" pos:end="21:46">(<init pos:start="21:21" pos:end="21:28"><decl pos:start="21:21" pos:end="21:27"><type pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:23">int</name></type> <name pos:start="21:25" pos:end="21:25">j</name><init pos:start="21:26" pos:end="21:27">=<expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">0</literal></expr></init></decl>;</init><condition pos:start="21:29" pos:end="21:42"><expr pos:start="21:29" pos:end="21:41"><name pos:start="21:29" pos:end="21:29">j</name><operator pos:start="21:30" pos:end="21:30">&lt;</operator><name pos:start="21:31" pos:end="21:34"><name pos:start="21:31" pos:end="21:31">G</name><index pos:start="21:32" pos:end="21:34">[<expr pos:start="21:33" pos:end="21:33"><name pos:start="21:33" pos:end="21:33">i</name></expr>]</index></name><operator pos:start="21:35" pos:end="21:35">.</operator><call pos:start="21:36" pos:end="21:41"><name pos:start="21:36" pos:end="21:39">size</name><argument_list pos:start="21:40" pos:end="21:41">()</argument_list></call></expr>;</condition><incr pos:start="21:43" pos:end="21:45"><expr pos:start="21:43" pos:end="21:45"><name pos:start="21:43" pos:end="21:43">j</name><operator pos:start="21:44" pos:end="21:45">++</operator></expr></incr>)</control><block pos:start="21:47" pos:end="26:17">{<block_content pos:start="22:21" pos:end="25:21">
                    <if_stmt pos:start="22:21" pos:end="25:21"><if pos:start="22:21" pos:end="25:21">if<condition pos:start="22:23" pos:end="22:53">(<expr pos:start="22:24" pos:end="22:52"><name pos:start="22:24" pos:end="22:27"><name pos:start="22:24" pos:end="22:24">G</name><index pos:start="22:25" pos:end="22:27">[<expr pos:start="22:26" pos:end="22:26"><name pos:start="22:26" pos:end="22:26">i</name></expr>]</index></name><operator pos:start="22:28" pos:end="22:28">.</operator><call pos:start="22:29" pos:end="22:34"><name pos:start="22:29" pos:end="22:32">size</name><argument_list pos:start="22:33" pos:end="22:34">()</argument_list></call><operator pos:start="22:35" pos:end="22:35">&lt;</operator><name pos:start="22:36" pos:end="22:45"><name pos:start="22:36" pos:end="22:36">G</name><index pos:start="22:37" pos:end="22:45">[<expr pos:start="22:38" pos:end="22:44"><name pos:start="22:38" pos:end="22:44"><name pos:start="22:38" pos:end="22:38">G</name><index pos:start="22:39" pos:end="22:41">[<expr pos:start="22:40" pos:end="22:40"><name pos:start="22:40" pos:end="22:40">i</name></expr>]</index><index pos:start="22:42" pos:end="22:44">[<expr pos:start="22:43" pos:end="22:43"><name pos:start="22:43" pos:end="22:43">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="22:46" pos:end="22:46">.</operator><call pos:start="22:47" pos:end="22:52"><name pos:start="22:47" pos:end="22:50">size</name><argument_list pos:start="22:51" pos:end="22:52">()</argument_list></call></expr>)</condition><block pos:start="22:54" pos:end="25:21">{<block_content pos:start="23:25" pos:end="24:30">
                        <expr_stmt pos:start="23:25" pos:end="23:32"><expr pos:start="23:25" pos:end="23:31"><name pos:start="23:25" pos:end="23:25">f</name><operator pos:start="23:26" pos:end="23:26">=</operator><literal type="boolean" pos:start="23:27" pos:end="23:31">false</literal></expr>;</expr_stmt>
                        <break pos:start="24:25" pos:end="24:30">break;</break>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></for>
                <if_stmt pos:start="27:17" pos:end="30:21"><if pos:start="27:17" pos:end="30:21">if<condition pos:start="27:19" pos:end="27:53">(<expr pos:start="27:20" pos:end="27:52"><name pos:start="27:20" pos:end="27:20">f</name> <operator pos:start="27:22" pos:end="27:23">&amp;&amp;</operator> <name pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:25">G</name><index pos:start="27:26" pos:end="27:28">[<expr pos:start="27:27" pos:end="27:27"><name pos:start="27:27" pos:end="27:27">i</name></expr>]</index></name><operator pos:start="27:29" pos:end="27:29">.</operator><call pos:start="27:30" pos:end="27:35"><name pos:start="27:30" pos:end="27:33">size</name><argument_list pos:start="27:34" pos:end="27:35">()</argument_list></call><operator pos:start="27:36" pos:end="27:37">&gt;=</operator><name pos:start="27:38" pos:end="27:45"><name pos:start="27:38" pos:end="27:38">G</name><index pos:start="27:39" pos:end="27:45">[<expr pos:start="27:40" pos:end="27:44"><name pos:start="27:40" pos:end="27:44"><name pos:start="27:40" pos:end="27:41">fa</name><index pos:start="27:42" pos:end="27:44">[<expr pos:start="27:43" pos:end="27:43"><name pos:start="27:43" pos:end="27:43">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="27:46" pos:end="27:46">.</operator><call pos:start="27:47" pos:end="27:52"><name pos:start="27:47" pos:end="27:50">size</name><argument_list pos:start="27:51" pos:end="27:52">()</argument_list></call></expr>)</condition>
                    <block pos:start="28:21" pos:end="30:21">{<block_content pos:start="29:25" pos:end="29:30">
                        <expr_stmt pos:start="29:25" pos:end="29:30"><expr pos:start="29:25" pos:end="29:29"><name pos:start="29:25" pos:end="29:27">ans</name><operator pos:start="29:28" pos:end="29:29">++</operator></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="32:13" pos:end="32:28"><expr pos:start="32:13" pos:end="32:27"><name pos:start="32:13" pos:end="32:16">cout</name><operator pos:start="32:17" pos:end="32:18">&lt;&lt;</operator><name pos:start="32:19" pos:end="32:21">ans</name><operator pos:start="32:22" pos:end="32:23">&lt;&lt;</operator><name pos:start="32:24" pos:end="32:27">endl</name></expr>;</expr_stmt>
            <for pos:start="33:13" pos:end="35:13">for<control pos:start="33:16" pos:end="33:33">(<init pos:start="33:17" pos:end="33:24"><decl pos:start="33:17" pos:end="33:23"><type pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:19">int</name></type> <name pos:start="33:21" pos:end="33:21">i</name><init pos:start="33:22" pos:end="33:23">=<expr pos:start="33:23" pos:end="33:23"><literal type="number" pos:start="33:23" pos:end="33:23">1</literal></expr></init></decl>;</init><condition pos:start="33:25" pos:end="33:29"><expr pos:start="33:25" pos:end="33:28"><name pos:start="33:25" pos:end="33:25">i</name><operator pos:start="33:26" pos:end="33:27">&lt;=</operator><name pos:start="33:28" pos:end="33:28">n</name></expr>;</condition><incr pos:start="33:30" pos:end="33:32"><expr pos:start="33:30" pos:end="33:32"><name pos:start="33:30" pos:end="33:30">i</name><operator pos:start="33:31" pos:end="33:32">++</operator></expr></incr>)</control><block pos:start="33:34" pos:end="35:13">{<block_content pos:start="34:17" pos:end="34:41">
                <expr_stmt pos:start="34:17" pos:end="34:41"><expr pos:start="34:17" pos:end="34:40"><call pos:start="34:17" pos:end="34:29"><name pos:start="34:17" pos:end="34:27"><name pos:start="34:17" pos:end="34:22">vector</name><argument_list type="generic" pos:start="34:23" pos:end="34:27">&lt;<argument pos:start="34:24" pos:end="34:26"><expr pos:start="34:24" pos:end="34:26"><name pos:start="34:24" pos:end="34:26">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:start="34:28" pos:end="34:29">()</argument_list></call><operator pos:start="34:30" pos:end="34:30">.</operator><call pos:start="34:31" pos:end="34:40"><name pos:start="34:31" pos:end="34:34">swap</name><argument_list pos:start="34:35" pos:end="34:40">(<argument pos:start="34:36" pos:end="34:39"><expr pos:start="34:36" pos:end="34:39"><name pos:start="34:36" pos:end="34:39"><name pos:start="34:36" pos:end="34:36">G</name><index pos:start="34:37" pos:end="34:39">[<expr pos:start="34:38" pos:end="34:38"><name pos:start="34:38" pos:end="34:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="36:13" pos:end="36:36"><expr pos:start="36:13" pos:end="36:35"><call pos:start="36:13" pos:end="36:35"><name pos:start="36:13" pos:end="36:18">memset</name><argument_list pos:start="36:19" pos:end="36:35">(<argument pos:start="36:20" pos:end="36:21"><expr pos:start="36:20" pos:end="36:21"><name pos:start="36:20" pos:end="36:21">fa</name></expr></argument>,<argument pos:start="36:23" pos:end="36:23"><expr pos:start="36:23" pos:end="36:23"><literal type="number" pos:start="36:23" pos:end="36:23">0</literal></expr></argument>,<argument pos:start="36:25" pos:end="36:34"><expr pos:start="36:25" pos:end="36:34"><sizeof pos:start="36:25" pos:end="36:34">sizeof<argument_list pos:start="36:31" pos:end="36:34">(<argument pos:start="36:32" pos:end="36:33"><expr pos:start="36:32" pos:end="36:33"><name pos:start="36:32" pos:end="36:33">fa</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>
    <return pos:start="38:5" pos:end="38:13">return <expr pos:start="38:12" pos:end="38:12"><literal type="number" pos:start="38:12" pos:end="38:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
