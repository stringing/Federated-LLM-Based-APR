<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/390/390.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:15"><decl pos:start="3:1" pos:end="3:14"><type pos:start="3:1" pos:end="3:6"><name pos:start="3:1" pos:end="3:6">string</name></type> <name pos:start="3:8" pos:end="3:14"><name pos:start="3:8" pos:end="3:8">a</name><index pos:start="3:9" pos:end="3:14">[<expr pos:start="3:10" pos:end="3:13"><literal type="number" pos:start="3:10" pos:end="3:13">1000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:6"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:8"><decl pos:start="5:1" pos:end="5:7"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:5">m</name><init pos:start="5:6" pos:end="5:7">=<expr pos:start="5:7" pos:end="5:7"><literal type="number" pos:start="5:7" pos:end="5:7">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="15:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">void</name></type> <name pos:start="6:6" pos:end="6:11">little</name><parameter_list pos:start="6:12" pos:end="6:21">(<parameter pos:start="6:13" pos:end="6:20"><decl pos:start="6:13" pos:end="6:20"><type pos:start="6:13" pos:end="6:18"><name pos:start="6:13" pos:end="6:18">string</name></type> <name pos:start="6:20" pos:end="6:20">x</name></decl></parameter>)</parameter_list><block pos:start="6:22" pos:end="15:1">{<block_content pos:start="7:5" pos:end="14:5">
    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">string</name></type> <name pos:start="7:12" pos:end="7:12">m</name></decl>;</decl_stmt>
    <for pos:start="8:5" pos:end="14:5">for<control pos:start="8:8" pos:end="8:35">(<init pos:start="8:9" pos:end="8:18"><decl pos:start="8:9" pos:end="8:17"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:13">i</name> <init pos:start="8:15" pos:end="8:17">= <expr pos:start="8:17" pos:end="8:17"><literal type="number" pos:start="8:17" pos:end="8:17">0</literal></expr></init></decl>;</init><condition pos:start="8:19" pos:end="8:31"><expr pos:start="8:19" pos:end="8:30"><name pos:start="8:19" pos:end="8:19">i</name> <operator pos:start="8:21" pos:end="8:21">&lt;</operator> <call pos:start="8:23" pos:end="8:30"><name pos:start="8:23" pos:end="8:28"><name pos:start="8:23" pos:end="8:23">x</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:28">size</name></name><argument_list pos:start="8:29" pos:end="8:30">()</argument_list></call></expr>;</condition><incr pos:start="8:32" pos:end="8:34"><expr pos:start="8:32" pos:end="8:34"><name pos:start="8:32" pos:end="8:32">i</name><operator pos:start="8:33" pos:end="8:34">++</operator></expr></incr>)</control><block pos:start="8:36" pos:end="14:5">{<block_content pos:start="9:9" pos:end="12:9">
        <expr_stmt pos:start="9:9" pos:end="9:12"><expr pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:9">m</name><operator pos:start="9:10" pos:end="9:10">=</operator><name pos:start="9:11" pos:end="9:11">x</name></expr>;</expr_stmt>
        <if_stmt pos:start="10:9" pos:end="12:9"><if pos:start="10:9" pos:end="12:9">if<condition pos:start="10:11" pos:end="10:39">(<expr pos:start="10:12" pos:end="10:38"><name pos:start="10:12" pos:end="10:15"><name pos:start="10:12" pos:end="10:12">x</name><index pos:start="10:13" pos:end="10:15">[<expr pos:start="10:14" pos:end="10:14"><name pos:start="10:14" pos:end="10:14">i</name></expr>]</index></name><operator pos:start="10:16" pos:end="10:17">!=</operator><literal type="char" pos:start="10:18" pos:end="10:20">'I'</literal><operator pos:start="10:21" pos:end="10:22">&amp;&amp;</operator><name pos:start="10:23" pos:end="10:26"><name pos:start="10:23" pos:end="10:23">x</name><index pos:start="10:24" pos:end="10:26">[<expr pos:start="10:25" pos:end="10:25"><name pos:start="10:25" pos:end="10:25">i</name></expr>]</index></name><operator pos:start="10:27" pos:end="10:27">&gt;</operator><literal type="number" pos:start="10:28" pos:end="10:29">64</literal><operator pos:start="10:30" pos:end="10:31">&amp;&amp;</operator><name pos:start="10:32" pos:end="10:35"><name pos:start="10:32" pos:end="10:32">x</name><index pos:start="10:33" pos:end="10:35">[<expr pos:start="10:34" pos:end="10:34"><name pos:start="10:34" pos:end="10:34">i</name></expr>]</index></name><operator pos:start="10:36" pos:end="10:36">&lt;</operator><literal type="number" pos:start="10:37" pos:end="10:38">91</literal></expr>)</condition><block pos:start="10:40" pos:end="12:9">{<block_content pos:start="11:13" pos:end="11:25">
            <expr_stmt pos:start="11:13" pos:end="11:25"><expr pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:13">x</name><index pos:start="11:14" pos:end="11:16">[<expr pos:start="11:15" pos:end="11:15"><name pos:start="11:15" pos:end="11:15">i</name></expr>]</index></name><operator pos:start="11:17" pos:end="11:17">=</operator><name pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:18">m</name><index pos:start="11:19" pos:end="11:21">[<expr pos:start="11:20" pos:end="11:20"><name pos:start="11:20" pos:end="11:20">i</name></expr>]</index></name><operator pos:start="11:22" pos:end="11:22">+</operator><literal type="number" pos:start="11:23" pos:end="11:24">32</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="16:1" pos:end="28:1"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:8">main</name><parameter_list pos:start="16:9" pos:end="16:10">()</parameter_list><block pos:start="16:11" pos:end="28:1">{<block_content pos:start="17:5" pos:end="27:5">
    <expr_stmt pos:start="17:5" pos:end="17:11"><expr pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:7">cin</name><operator pos:start="17:8" pos:end="17:9">&gt;&gt;</operator><name pos:start="17:10" pos:end="17:10">n</name></expr>;</expr_stmt>
    <for pos:start="18:5" pos:end="27:5">for<control pos:start="18:8" pos:end="18:28">(<init pos:start="18:9" pos:end="18:18"><decl pos:start="18:9" pos:end="18:17"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">i</name> <init pos:start="18:15" pos:end="18:17">= <expr pos:start="18:17" pos:end="18:17"><literal type="number" pos:start="18:17" pos:end="18:17">0</literal></expr></init></decl>;</init><condition pos:start="18:19" pos:end="18:24"><expr pos:start="18:19" pos:end="18:23"><name pos:start="18:19" pos:end="18:19">i</name> <operator pos:start="18:21" pos:end="18:21">&lt;</operator> <name pos:start="18:23" pos:end="18:23">n</name></expr>;</condition><incr pos:start="18:25" pos:end="18:27"><expr pos:start="18:25" pos:end="18:27"><name pos:start="18:25" pos:end="18:25">i</name><operator pos:start="18:26" pos:end="18:27">++</operator></expr></incr>)</control><block pos:start="18:29" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:9">
        <while pos:start="19:9" pos:end="25:9">while<condition pos:start="19:14" pos:end="19:35">(<expr pos:start="19:15" pos:end="19:34"><name pos:start="19:15" pos:end="19:18"><name pos:start="19:15" pos:end="19:15">a</name><index pos:start="19:16" pos:end="19:18">[<expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">m</name></expr>]</index></name><operator pos:start="19:19" pos:end="19:20">==</operator><literal type="char" pos:start="19:21" pos:end="19:23">'?'</literal><operator pos:start="19:24" pos:end="19:25">||</operator><name pos:start="19:26" pos:end="19:29"><name pos:start="19:26" pos:end="19:26">a</name><index pos:start="19:27" pos:end="19:29">[<expr pos:start="19:28" pos:end="19:28"><name pos:start="19:28" pos:end="19:28">m</name></expr>]</index></name><operator pos:start="19:30" pos:end="19:31">==</operator><literal type="char" pos:start="19:32" pos:end="19:34">'!'</literal></expr>)</condition>
        <block pos:start="20:9" pos:end="25:9">{<block_content pos:start="21:13" pos:end="24:20">
            <expr_stmt pos:start="21:13" pos:end="21:22"><expr pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:15">cin</name><operator pos:start="21:16" pos:end="21:17">&gt;&gt;</operator><name pos:start="21:18" pos:end="21:21"><name pos:start="21:18" pos:end="21:18">a</name><index pos:start="21:19" pos:end="21:21">[<expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">m</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:16"><expr pos:start="22:13" pos:end="22:15"><name pos:start="22:13" pos:end="22:13">m</name><operator pos:start="22:14" pos:end="22:15">++</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:22"><expr pos:start="23:13" pos:end="23:21"><call pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:18">little</name><argument_list pos:start="23:19" pos:end="23:21">(<argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="24:13" pos:end="24:20"><expr pos:start="24:13" pos:end="24:19"><name pos:start="24:13" pos:end="24:16">cout</name><operator pos:start="24:17" pos:end="24:18">&lt;&lt;</operator><name pos:start="24:19" pos:end="24:19">a</name></expr>;</expr_stmt>
        </block_content>}</block></while>
       
    </block_content>}</block></for>
</block_content>}</block></function>
</unit>
