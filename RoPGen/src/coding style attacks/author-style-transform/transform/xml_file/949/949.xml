<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/949/949.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define pos:start="2:1" pos:end="2:15">#<cpp:directive pos:start="2:2" pos:end="2:7">define</cpp:directive> <cpp:macro pos:start="2:9" pos:end="2:11"><name pos:start="2:9" pos:end="2:11">MAX</name></cpp:macro> <cpp:value pos:start="2:13" pos:end="2:15">205</cpp:value></cpp:define>
<expr_stmt pos:start="3:1" pos:end="3:35"><expr pos:start="3:1" pos:end="3:34"><call pos:start="3:1" pos:end="3:34"><name pos:start="3:1" pos:end="3:7">freopen</name><argument_list pos:start="3:8" pos:end="3:34">(<argument pos:start="3:9" pos:end="3:21"><expr pos:start="3:9" pos:end="3:21"><literal type="string" pos:start="3:9" pos:end="3:21">"elevator.in"</literal></expr></argument>, <argument pos:start="3:24" pos:end="3:26"><expr pos:start="3:24" pos:end="3:26"><literal type="string" pos:start="3:24" pos:end="3:26">"r"</literal></expr></argument>, <argument pos:start="3:29" pos:end="3:33"><expr pos:start="3:29" pos:end="3:33"><name pos:start="3:29" pos:end="3:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt pos:start="4:1" pos:end="4:36"><expr pos:start="4:1" pos:end="4:35"><call pos:start="4:1" pos:end="4:35"><name pos:start="4:1" pos:end="4:7">freopen</name><argument_list pos:start="4:8" pos:end="4:35">(<argument pos:start="4:9" pos:end="4:22"><expr pos:start="4:9" pos:end="4:22"><literal type="string" pos:start="4:9" pos:end="4:22">"elevator.out"</literal></expr></argument>, <argument pos:start="4:25" pos:end="4:27"><expr pos:start="4:25" pos:end="4:27"><literal type="string" pos:start="4:25" pos:end="4:27">"w"</literal></expr></argument>, <argument pos:start="4:30" pos:end="4:34"><expr pos:start="4:30" pos:end="4:34"><name pos:start="4:30" pos:end="4:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<function pos:start="6:1" pos:end="34:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list>
<block pos:start="7:1" pos:end="34:1">{<block_content pos:start="8:5" pos:end="33:13">
    <decl_stmt pos:start="8:5" pos:end="8:23"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">T</name></decl>,<decl pos:start="8:11" pos:end="8:11"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:11" pos:end="8:11">n</name></decl>,<decl pos:start="8:13" pos:end="8:13"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:13" pos:end="8:13">i</name></decl>,<decl pos:start="8:15" pos:end="8:15"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:15" pos:end="8:15">j</name></decl>,<decl pos:start="8:17" pos:end="8:22"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:17" pos:end="8:22"><name pos:start="8:17" pos:end="8:17">p</name><index pos:start="8:18" pos:end="8:22">[<expr pos:start="8:19" pos:end="8:21"><name pos:start="8:19" pos:end="8:21">MAX</name></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:13"><expr pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:7">cin</name> <operator pos:start="9:9" pos:end="9:10">&gt;&gt;</operator> <name pos:start="9:12" pos:end="9:12">T</name></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:13"><expr pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:7">cin</name> <operator pos:start="10:9" pos:end="10:10">&gt;&gt;</operator> <name pos:start="10:12" pos:end="10:12">n</name></expr>;</expr_stmt>
    <for pos:start="11:5" pos:end="14:5">for<control pos:start="11:8" pos:end="11:21">(<init pos:start="11:9" pos:end="11:12"><expr pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:9">i</name><operator pos:start="11:10" pos:end="11:10">=</operator><literal type="number" pos:start="11:11" pos:end="11:11">1</literal></expr>;</init><condition pos:start="11:13" pos:end="11:17"><expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:13">i</name><operator pos:start="11:14" pos:end="11:15">&lt;=</operator><name pos:start="11:16" pos:end="11:16">n</name></expr>;</condition><incr pos:start="11:18" pos:end="11:20"><expr pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:18">i</name><operator pos:start="11:19" pos:end="11:20">++</operator></expr></incr>)</control>
    <block pos:start="12:5" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:20">
        <expr_stmt pos:start="13:9" pos:end="13:20"><expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">cin</name> <operator pos:start="13:13" pos:end="13:14">&gt;&gt;</operator> <name pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:16">p</name><index pos:start="13:17" pos:end="13:19">[<expr pos:start="13:18" pos:end="13:18"><name pos:start="13:18" pos:end="13:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><call pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:8">sort</name><argument_list pos:start="15:9" pos:end="15:19">(<argument pos:start="15:10" pos:end="15:12"><expr pos:start="15:10" pos:end="15:12"><name pos:start="15:10" pos:end="15:10">p</name><operator pos:start="15:11" pos:end="15:11">+</operator><literal type="number" pos:start="15:12" pos:end="15:12">1</literal></expr></argument>,<argument pos:start="15:14" pos:end="15:18"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">p</name><operator pos:start="15:15" pos:end="15:15">+</operator><name pos:start="15:16" pos:end="15:16">n</name><operator pos:start="15:17" pos:end="15:17">+</operator><literal type="number" pos:start="15:18" pos:end="15:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="16:5" pos:end="16:27"><decl pos:start="16:5" pos:end="16:26"><type pos:start="16:5" pos:end="16:7"><name pos:start="16:5" pos:end="16:7">int</name></type> <name pos:start="16:9" pos:end="16:12">time</name><init pos:start="16:13" pos:end="16:26">=<expr pos:start="16:14" pos:end="16:26"><literal type="number" pos:start="16:14" pos:end="16:14">5</literal><operator pos:start="16:15" pos:end="16:15">*</operator><name pos:start="16:16" pos:end="16:19"><name pos:start="16:16" pos:end="16:16">p</name><index pos:start="16:17" pos:end="16:19">[<expr pos:start="16:18" pos:end="16:18"><name pos:start="16:18" pos:end="16:18">n</name></expr>]</index></name><operator pos:start="16:20" pos:end="16:20">+</operator><literal type="number" pos:start="16:21" pos:end="16:21">4</literal><operator pos:start="16:22" pos:end="16:22">*</operator><name pos:start="16:23" pos:end="16:26"><name pos:start="16:23" pos:end="16:23">p</name><index pos:start="16:24" pos:end="16:26">[<expr pos:start="16:25" pos:end="16:25"><name pos:start="16:25" pos:end="16:25">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <for pos:start="17:5" pos:end="31:5">for<control pos:start="17:8" pos:end="17:24">(<init pos:start="17:9" pos:end="17:12"><expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:9">i</name><operator pos:start="17:10" pos:end="17:10">=</operator><literal type="number" pos:start="17:11" pos:end="17:11">0</literal></expr>;</init><condition pos:start="17:13" pos:end="17:20"><expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:13">i</name><operator pos:start="17:14" pos:end="17:15">&lt;=</operator><literal type="number" pos:start="17:16" pos:end="17:19">1000</literal></expr>;</condition><incr pos:start="17:21" pos:end="17:23"><expr pos:start="17:21" pos:end="17:23"><name pos:start="17:21" pos:end="17:21">i</name><operator pos:start="17:22" pos:end="17:23">++</operator></expr></incr>)</control>
    <block pos:start="18:5" pos:end="31:5">{<block_content pos:start="19:9" pos:end="30:24">
        <decl_stmt pos:start="19:9" pos:end="19:25"><decl pos:start="19:9" pos:end="19:17"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:15">num</name><init pos:start="19:16" pos:end="19:17">=<expr pos:start="19:17" pos:end="19:17"><literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr></init></decl>,<decl pos:start="19:19" pos:end="19:24"><type ref="prev" pos:start="19:9" pos:end="19:11"/><name pos:start="19:19" pos:end="19:22">flag</name><init pos:start="19:23" pos:end="19:24">=<expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="20:9" pos:end="27:9">for<control pos:start="20:12" pos:end="20:25">(<init pos:start="20:13" pos:end="20:16"><expr pos:start="20:13" pos:end="20:15"><name pos:start="20:13" pos:end="20:13">j</name><operator pos:start="20:14" pos:end="20:14">=</operator><literal type="number" pos:start="20:15" pos:end="20:15">1</literal></expr>;</init><condition pos:start="20:17" pos:end="20:21"><expr pos:start="20:17" pos:end="20:20"><name pos:start="20:17" pos:end="20:17">j</name><operator pos:start="20:18" pos:end="20:19">&lt;=</operator><name pos:start="20:20" pos:end="20:20">n</name></expr>;</condition><incr pos:start="20:22" pos:end="20:24"><expr pos:start="20:22" pos:end="20:24"><name pos:start="20:22" pos:end="20:22">j</name><operator pos:start="20:23" pos:end="20:24">++</operator></expr></incr>)</control>
        <block pos:start="21:9" pos:end="27:9">{<block_content pos:start="22:13" pos:end="26:13">
            <if_stmt pos:start="22:13" pos:end="26:13"><if pos:start="22:13" pos:end="26:13">if<condition pos:start="22:15" pos:end="22:23">(<expr pos:start="22:16" pos:end="22:22"><name pos:start="22:16" pos:end="22:19"><name pos:start="22:16" pos:end="22:16">p</name><index pos:start="22:17" pos:end="22:19">[<expr pos:start="22:18" pos:end="22:18"><name pos:start="22:18" pos:end="22:18">j</name></expr>]</index></name><operator pos:start="22:20" pos:end="22:21">==</operator><name pos:start="22:22" pos:end="22:22">i</name></expr>)</condition>
            <block pos:start="23:13" pos:end="26:13">{<block_content pos:start="24:17" pos:end="25:22">
                <expr_stmt pos:start="24:17" pos:end="24:23"><expr pos:start="24:17" pos:end="24:22"><name pos:start="24:17" pos:end="24:20">flag</name><operator pos:start="24:21" pos:end="24:21">=</operator><literal type="number" pos:start="24:22" pos:end="24:22">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="25:17" pos:end="25:22"><expr pos:start="25:17" pos:end="25:21"><name pos:start="25:17" pos:end="25:19">num</name><operator pos:start="25:20" pos:end="25:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <if_stmt pos:start="28:9" pos:end="29:20"><if pos:start="28:9" pos:end="29:20">if<condition pos:start="28:11" pos:end="28:16">(<expr pos:start="28:12" pos:end="28:15"><name pos:start="28:12" pos:end="28:15">flag</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:20"><block_content pos:start="29:13" pos:end="29:20">
            <expr_stmt pos:start="29:13" pos:end="29:20"><expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:16">time</name><operator pos:start="29:17" pos:end="29:18">+=</operator><literal type="number" pos:start="29:19" pos:end="29:19">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="30:13" pos:end="30:24"><expr pos:start="30:13" pos:end="30:23"><name pos:start="30:13" pos:end="30:16">time</name><operator pos:start="30:17" pos:end="30:18">+=</operator><name pos:start="30:19" pos:end="30:21">num</name><operator pos:start="30:22" pos:end="30:22">*</operator><literal type="number" pos:start="30:23" pos:end="30:23">2</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="32:5" pos:end="32:17"><expr pos:start="32:5" pos:end="32:16"><name pos:start="32:5" pos:end="32:8">cout</name> <operator pos:start="32:10" pos:end="32:11">&lt;&lt;</operator> <name pos:start="32:13" pos:end="32:16">time</name></expr>;</expr_stmt>
    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
