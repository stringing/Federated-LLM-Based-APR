<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/85/85.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:17">&lt;iomanip&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:19">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:16">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive><cpp:file pos:start="5:9" pos:end="5:16">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="6:1" pos:end="6:17">#<cpp:directive pos:start="6:2" pos:end="6:8">include</cpp:directive><cpp:file pos:start="6:9" pos:end="6:17">&lt;cstring&gt;</cpp:file></cpp:include>
<using pos:start="7:1" pos:end="7:20">using <namespace pos:start="7:7" pos:end="7:20">namespace <name pos:start="7:17" pos:end="7:19">std</name>;</namespace></using>
<decl_stmt pos:start="8:1" pos:end="8:18"><decl pos:start="8:1" pos:end="8:17"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:17"><name pos:start="8:5" pos:end="8:11">inOrder</name><index pos:start="8:12" pos:end="8:17">[<expr pos:start="8:13" pos:end="8:16"><literal type="number" pos:start="8:13" pos:end="8:16">1001</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="9:1" pos:end="9:20"><decl pos:start="9:1" pos:end="9:19"><type pos:start="9:1" pos:end="9:3"><name pos:start="9:1" pos:end="9:3">int</name></type> <name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:13">postOrder</name><index pos:start="9:14" pos:end="9:19">[<expr pos:start="9:15" pos:end="9:18"><literal type="number" pos:start="9:15" pos:end="9:18">1001</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="10:1" pos:end="10:6"><decl pos:start="10:1" pos:end="10:5"><type pos:start="10:1" pos:end="10:3"><name pos:start="10:1" pos:end="10:3">int</name></type> <name pos:start="10:5" pos:end="10:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="11:1" pos:end="11:22"><decl pos:start="11:1" pos:end="11:12"><type pos:start="11:1" pos:end="11:3"><name pos:start="11:1" pos:end="11:3">int</name></type> <name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:6">lc</name><index pos:start="11:7" pos:end="11:12">[<expr pos:start="11:8" pos:end="11:11"><literal type="number" pos:start="11:8" pos:end="11:11">1001</literal></expr>]</index></name></decl>,<decl pos:start="11:14" pos:end="11:21"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:14" pos:end="11:21"><name pos:start="11:14" pos:end="11:15">rc</name><index pos:start="11:16" pos:end="11:21">[<expr pos:start="11:17" pos:end="11:20"><literal type="number" pos:start="11:17" pos:end="11:20">1001</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="12:1" pos:end="26:1"><type pos:start="12:1" pos:end="12:3"><name pos:start="12:1" pos:end="12:3">int</name></type> <name pos:start="12:5" pos:end="12:7">dfs</name><parameter_list pos:start="12:8" pos:end="12:36">(<parameter pos:start="12:9" pos:end="12:14"><decl pos:start="12:9" pos:end="12:14"><type pos:start="12:9" pos:end="12:14"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:14">l1</name></decl></parameter>,<parameter pos:start="12:16" pos:end="12:21"><decl pos:start="12:16" pos:end="12:21"><type pos:start="12:16" pos:end="12:21"><name pos:start="12:16" pos:end="12:18">int</name></type> <name pos:start="12:20" pos:end="12:21">l2</name></decl></parameter>,<parameter pos:start="12:23" pos:end="12:28"><decl pos:start="12:23" pos:end="12:28"><type pos:start="12:23" pos:end="12:28"><name pos:start="12:23" pos:end="12:25">int</name></type> <name pos:start="12:27" pos:end="12:28">r1</name></decl></parameter>,<parameter pos:start="12:30" pos:end="12:35"><decl pos:start="12:30" pos:end="12:35"><type pos:start="12:30" pos:end="12:35"><name pos:start="12:30" pos:end="12:32">int</name></type> <name pos:start="12:34" pos:end="12:35">r2</name></decl></parameter>)</parameter_list><block pos:start="12:37" pos:end="26:1">{<block_content pos:start="13:5" pos:end="25:16">
    <if_stmt pos:start="13:5" pos:end="15:5"><if pos:start="13:5" pos:end="15:5">if<condition pos:start="13:7" pos:end="13:13">(<expr pos:start="13:8" pos:end="13:12"><name pos:start="13:8" pos:end="13:9">l1</name><operator pos:start="13:10" pos:end="13:10">&gt;</operator><name pos:start="13:11" pos:end="13:12">r1</name></expr>)</condition><block pos:start="13:14" pos:end="15:5">{<block_content pos:start="14:9" pos:end="14:17">
        <return pos:start="14:9" pos:end="14:17">return <expr pos:start="14:16" pos:end="14:16"><literal type="number" pos:start="14:16" pos:end="14:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt pos:start="16:5" pos:end="16:31"><decl pos:start="16:5" pos:end="16:26"><type pos:start="16:5" pos:end="16:7"><name pos:start="16:5" pos:end="16:7">int</name></type> <name pos:start="16:9" pos:end="16:12">root</name><init pos:start="16:13" pos:end="16:26">=<expr pos:start="16:14" pos:end="16:26"><name pos:start="16:14" pos:end="16:26"><name pos:start="16:14" pos:end="16:22">postOrder</name><index pos:start="16:23" pos:end="16:26">[<expr pos:start="16:24" pos:end="16:25"><name pos:start="16:24" pos:end="16:25">r1</name></expr>]</index></name></expr></init></decl>,<decl pos:start="16:28" pos:end="16:30"><type ref="prev" pos:start="16:5" pos:end="16:7"/><name pos:start="16:28" pos:end="16:30">pos</name></decl>;</decl_stmt>
    <for pos:start="17:5" pos:end="21:5">for<control pos:start="17:8" pos:end="17:29">(<init pos:start="17:9" pos:end="17:15"><expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:11">pos</name><operator pos:start="17:12" pos:end="17:12">=</operator><name pos:start="17:13" pos:end="17:14">l2</name></expr>;</init><condition pos:start="17:16" pos:end="17:23"><expr pos:start="17:16" pos:end="17:22"><name pos:start="17:16" pos:end="17:18">pos</name><operator pos:start="17:19" pos:end="17:20">&lt;=</operator><name pos:start="17:21" pos:end="17:22">r2</name></expr>;</condition><incr pos:start="17:24" pos:end="17:28"><expr pos:start="17:24" pos:end="17:28"><name pos:start="17:24" pos:end="17:26">pos</name><operator pos:start="17:27" pos:end="17:28">++</operator></expr></incr>)</control><block pos:start="17:30" pos:end="21:5">{<block_content pos:start="18:9" pos:end="20:9">
        <if_stmt pos:start="18:9" pos:end="20:9"><if pos:start="18:9" pos:end="20:9">if<condition pos:start="18:11" pos:end="18:30">(<expr pos:start="18:12" pos:end="18:29"><name pos:start="18:12" pos:end="18:23"><name pos:start="18:12" pos:end="18:18">inOrder</name><index pos:start="18:19" pos:end="18:23">[<expr pos:start="18:20" pos:end="18:22"><name pos:start="18:20" pos:end="18:22">pos</name></expr>]</index></name><operator pos:start="18:24" pos:end="18:25">==</operator><name pos:start="18:26" pos:end="18:29">root</name></expr>)</condition><block pos:start="18:31" pos:end="20:9">{<block_content pos:start="19:13" pos:end="19:18">
            <break pos:start="19:13" pos:end="19:18">break;</break>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="22:5" pos:end="22:34"><decl pos:start="22:5" pos:end="22:20"><type pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></type> <name pos:start="22:9" pos:end="22:13">lsize</name><init pos:start="22:14" pos:end="22:20">=<expr pos:start="22:15" pos:end="22:20"><name pos:start="22:15" pos:end="22:17">pos</name><operator pos:start="22:18" pos:end="22:18">-</operator><name pos:start="22:19" pos:end="22:20">l2</name></expr></init></decl>,<decl pos:start="22:22" pos:end="22:33"><type ref="prev" pos:start="22:5" pos:end="22:7"/><name pos:start="22:22" pos:end="22:26">rsize</name><init pos:start="22:27" pos:end="22:33">=<expr pos:start="22:28" pos:end="22:33"><name pos:start="22:28" pos:end="22:29">r2</name><operator pos:start="22:30" pos:end="22:30">-</operator><name pos:start="22:31" pos:end="22:33">pos</name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:6">lc</name><index pos:start="23:7" pos:end="23:12">[<expr pos:start="23:8" pos:end="23:11"><name pos:start="23:8" pos:end="23:11">root</name></expr>]</index></name><operator pos:start="23:13" pos:end="23:13">=</operator><call pos:start="23:14" pos:end="23:40"><name pos:start="23:14" pos:end="23:16">dfs</name><argument_list pos:start="23:17" pos:end="23:40">(<argument pos:start="23:18" pos:end="23:19"><expr pos:start="23:18" pos:end="23:19"><name pos:start="23:18" pos:end="23:19">l1</name></expr></argument>,<argument pos:start="23:21" pos:end="23:30"><expr pos:start="23:21" pos:end="23:30"><name pos:start="23:21" pos:end="23:22">l1</name><operator pos:start="23:23" pos:end="23:23">+</operator><name pos:start="23:24" pos:end="23:28">lsize</name><operator pos:start="23:29" pos:end="23:29">-</operator><literal type="number" pos:start="23:30" pos:end="23:30">1</literal></expr></argument>,<argument pos:start="23:32" pos:end="23:33"><expr pos:start="23:32" pos:end="23:33"><name pos:start="23:32" pos:end="23:33">l2</name></expr></argument>,<argument pos:start="23:35" pos:end="23:39"><expr pos:start="23:35" pos:end="23:39"><name pos:start="23:35" pos:end="23:37">pos</name><operator pos:start="23:38" pos:end="23:38">-</operator><literal type="number" pos:start="23:39" pos:end="23:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:41"><expr pos:start="24:5" pos:end="24:40"><name pos:start="24:5" pos:end="24:12"><name pos:start="24:5" pos:end="24:6">rc</name><index pos:start="24:7" pos:end="24:12">[<expr pos:start="24:8" pos:end="24:11"><name pos:start="24:8" pos:end="24:11">root</name></expr>]</index></name><operator pos:start="24:13" pos:end="24:13">=</operator><call pos:start="24:14" pos:end="24:40"><name pos:start="24:14" pos:end="24:16">dfs</name><argument_list pos:start="24:17" pos:end="24:40">(<argument pos:start="24:18" pos:end="24:25"><expr pos:start="24:18" pos:end="24:25"><name pos:start="24:18" pos:end="24:19">r1</name><operator pos:start="24:20" pos:end="24:20">-</operator><name pos:start="24:21" pos:end="24:25">rsize</name></expr></argument>,<argument pos:start="24:27" pos:end="24:30"><expr pos:start="24:27" pos:end="24:30"><name pos:start="24:27" pos:end="24:28">r1</name><operator pos:start="24:29" pos:end="24:29">-</operator><literal type="number" pos:start="24:30" pos:end="24:30">1</literal></expr></argument>,<argument pos:start="24:32" pos:end="24:36"><expr pos:start="24:32" pos:end="24:36"><name pos:start="24:32" pos:end="24:34">pos</name><operator pos:start="24:35" pos:end="24:35">-</operator><literal type="number" pos:start="24:36" pos:end="24:36">1</literal></expr></argument>,<argument pos:start="24:38" pos:end="24:39"><expr pos:start="24:38" pos:end="24:39"><name pos:start="24:38" pos:end="24:39">r2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="25:5" pos:end="25:16">return <expr pos:start="25:12" pos:end="25:15"><name pos:start="25:12" pos:end="25:15">root</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="27:1" pos:end="47:1"><type pos:start="27:1" pos:end="27:3"><name pos:start="27:1" pos:end="27:3">int</name></type> <name pos:start="27:5" pos:end="27:8">main</name><parameter_list pos:start="27:9" pos:end="27:10">()</parameter_list><block pos:start="27:11" pos:end="47:1">{<block_content pos:start="28:5" pos:end="46:13">
    <expr_stmt pos:start="28:5" pos:end="28:33"><expr pos:start="28:5" pos:end="28:32"><call pos:start="28:5" pos:end="28:32"><name pos:start="28:5" pos:end="28:11">freopen</name><argument_list pos:start="28:12" pos:end="28:32">(<argument pos:start="28:13" pos:end="28:21"><expr pos:start="28:13" pos:end="28:21"><literal type="string" pos:start="28:13" pos:end="28:21">"sort.in"</literal></expr></argument>,<argument pos:start="28:23" pos:end="28:25"><expr pos:start="28:23" pos:end="28:25"><literal type="string" pos:start="28:23" pos:end="28:25">"r"</literal></expr></argument>,<argument pos:start="28:27" pos:end="28:31"><expr pos:start="28:27" pos:end="28:31"><name pos:start="28:27" pos:end="28:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><call pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:11">freopen</name><argument_list pos:start="29:12" pos:end="29:34">(<argument pos:start="29:13" pos:end="29:22"><expr pos:start="29:13" pos:end="29:22"><literal type="string" pos:start="29:13" pos:end="29:22">"sort.out"</literal></expr></argument>,<argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><literal type="string" pos:start="29:24" pos:end="29:26">"w"</literal></expr></argument>,<argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    
    <expr_stmt pos:start="32:5" pos:end="32:11"><expr pos:start="32:5" pos:end="32:10"><name pos:start="32:5" pos:end="32:7">cin</name><operator pos:start="32:8" pos:end="32:9">&gt;&gt;</operator><name pos:start="32:10" pos:end="32:10">n</name></expr>;</expr_stmt>
    <for pos:start="33:5" pos:end="35:5">for<control pos:start="33:8" pos:end="33:25">(<init pos:start="33:9" pos:end="33:16"><decl pos:start="33:9" pos:end="33:15"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:13">i</name><init pos:start="33:14" pos:end="33:15">=<expr pos:start="33:15" pos:end="33:15"><literal type="number" pos:start="33:15" pos:end="33:15">1</literal></expr></init></decl>;</init><condition pos:start="33:17" pos:end="33:21"><expr pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:17">i</name><operator pos:start="33:18" pos:end="33:19">&lt;=</operator><name pos:start="33:20" pos:end="33:20">n</name></expr>;</condition><incr pos:start="33:22" pos:end="33:24"><expr pos:start="33:22" pos:end="33:24"><name pos:start="33:22" pos:end="33:22">i</name><operator pos:start="33:23" pos:end="33:24">++</operator></expr></incr>)</control><block pos:start="33:26" pos:end="35:5">{<block_content pos:start="34:9" pos:end="34:26">
        <expr_stmt pos:start="34:9" pos:end="34:26"><expr pos:start="34:9" pos:end="34:25"><name pos:start="34:9" pos:end="34:11">cin</name><operator pos:start="34:12" pos:end="34:13">&gt;&gt;</operator><name pos:start="34:14" pos:end="34:25"><name pos:start="34:14" pos:end="34:22">postOrder</name><index pos:start="34:23" pos:end="34:25">[<expr pos:start="34:24" pos:end="34:24"><name pos:start="34:24" pos:end="34:24">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="36:5" pos:end="38:5">for<control pos:start="36:8" pos:end="36:25">(<init pos:start="36:9" pos:end="36:16"><decl pos:start="36:9" pos:end="36:15"><type pos:start="36:9" pos:end="36:11"><name pos:start="36:9" pos:end="36:11">int</name></type> <name pos:start="36:13" pos:end="36:13">i</name><init pos:start="36:14" pos:end="36:15">=<expr pos:start="36:15" pos:end="36:15"><literal type="number" pos:start="36:15" pos:end="36:15">1</literal></expr></init></decl>;</init><condition pos:start="36:17" pos:end="36:21"><expr pos:start="36:17" pos:end="36:20"><name pos:start="36:17" pos:end="36:17">i</name><operator pos:start="36:18" pos:end="36:19">&lt;=</operator><name pos:start="36:20" pos:end="36:20">n</name></expr>;</condition><incr pos:start="36:22" pos:end="36:24"><expr pos:start="36:22" pos:end="36:24"><name pos:start="36:22" pos:end="36:22">i</name><operator pos:start="36:23" pos:end="36:24">++</operator></expr></incr>)</control><block pos:start="36:26" pos:end="38:5">{<block_content pos:start="37:9" pos:end="37:24">
        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:11">cin</name><operator pos:start="37:12" pos:end="37:13">&gt;&gt;</operator><name pos:start="37:14" pos:end="37:23"><name pos:start="37:14" pos:end="37:20">inOrder</name><index pos:start="37:21" pos:end="37:23">[<expr pos:start="37:22" pos:end="37:22"><name pos:start="37:22" pos:end="37:22">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="39:5" pos:end="39:17"><expr pos:start="39:5" pos:end="39:16"><call pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:7">dfs</name><argument_list pos:start="39:8" pos:end="39:16">(<argument pos:start="39:9" pos:end="39:9"><expr pos:start="39:9" pos:end="39:9"><literal type="number" pos:start="39:9" pos:end="39:9">1</literal></expr></argument>,<argument pos:start="39:11" pos:end="39:11"><expr pos:start="39:11" pos:end="39:11"><name pos:start="39:11" pos:end="39:11">n</name></expr></argument>,<argument pos:start="39:13" pos:end="39:13"><expr pos:start="39:13" pos:end="39:13"><literal type="number" pos:start="39:13" pos:end="39:13">1</literal></expr></argument>,<argument pos:start="39:15" pos:end="39:15"><expr pos:start="39:15" pos:end="39:15"><name pos:start="39:15" pos:end="39:15">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:32"><expr pos:start="40:5" pos:end="40:31"><call pos:start="40:5" pos:end="40:31"><name pos:start="40:5" pos:end="40:8">sort</name><argument_list pos:start="40:9" pos:end="40:31">(<argument pos:start="40:10" pos:end="40:18"><expr pos:start="40:10" pos:end="40:18"><name pos:start="40:10" pos:end="40:16">inOrder</name><operator pos:start="40:17" pos:end="40:17">+</operator><literal type="number" pos:start="40:18" pos:end="40:18">1</literal></expr></argument>,<argument pos:start="40:20" pos:end="40:30"><expr pos:start="40:20" pos:end="40:30"><name pos:start="40:20" pos:end="40:26">inOrder</name><operator pos:start="40:27" pos:end="40:27">+</operator><name pos:start="40:28" pos:end="40:28">n</name><operator pos:start="40:29" pos:end="40:29">+</operator><literal type="number" pos:start="40:30" pos:end="40:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="41:5" pos:end="43:5">for<control pos:start="41:8" pos:end="41:25">(<init pos:start="41:9" pos:end="41:16"><decl pos:start="41:9" pos:end="41:15"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:13">i</name><init pos:start="41:14" pos:end="41:15">=<expr pos:start="41:15" pos:end="41:15"><literal type="number" pos:start="41:15" pos:end="41:15">1</literal></expr></init></decl>;</init><condition pos:start="41:17" pos:end="41:21"><expr pos:start="41:17" pos:end="41:20"><name pos:start="41:17" pos:end="41:17">i</name><operator pos:start="41:18" pos:end="41:19">&lt;=</operator><name pos:start="41:20" pos:end="41:20">n</name></expr>;</condition><incr pos:start="41:22" pos:end="41:24"><expr pos:start="41:22" pos:end="41:24"><name pos:start="41:22" pos:end="41:22">i</name><operator pos:start="41:23" pos:end="41:24">++</operator></expr></incr>)</control><block pos:start="41:26" pos:end="43:5">{<block_content pos:start="42:9" pos:end="42:56">
        <expr_stmt pos:start="42:9" pos:end="42:56"><expr pos:start="42:9" pos:end="42:55"><name pos:start="42:9" pos:end="42:12">cout</name><operator pos:start="42:13" pos:end="42:14">&lt;&lt;</operator><name pos:start="42:15" pos:end="42:28"><name pos:start="42:15" pos:end="42:16">lc</name><index pos:start="42:17" pos:end="42:28">[<expr pos:start="42:18" pos:end="42:27"><name pos:start="42:18" pos:end="42:27"><name pos:start="42:18" pos:end="42:24">inOrder</name><index pos:start="42:25" pos:end="42:27">[<expr pos:start="42:26" pos:end="42:26"><name pos:start="42:26" pos:end="42:26">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="42:29" pos:end="42:30">&lt;&lt;</operator><literal type="char" pos:start="42:31" pos:end="42:33">' '</literal><operator pos:start="42:34" pos:end="42:35">&lt;&lt;</operator><name pos:start="42:36" pos:end="42:49"><name pos:start="42:36" pos:end="42:37">rc</name><index pos:start="42:38" pos:end="42:49">[<expr pos:start="42:39" pos:end="42:48"><name pos:start="42:39" pos:end="42:48"><name pos:start="42:39" pos:end="42:45">inOrder</name><index pos:start="42:46" pos:end="42:48">[<expr pos:start="42:47" pos:end="42:47"><name pos:start="42:47" pos:end="42:47">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="42:50" pos:end="42:51">&lt;&lt;</operator><name pos:start="42:52" pos:end="42:55">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="44:5" pos:end="44:18"><expr pos:start="44:5" pos:end="44:17"><call pos:start="44:5" pos:end="44:17"><name pos:start="44:5" pos:end="44:10">fclose</name><argument_list pos:start="44:11" pos:end="44:17">(<argument pos:start="44:12" pos:end="44:16"><expr pos:start="44:12" pos:end="44:16"><name pos:start="44:12" pos:end="44:16">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:19"><expr pos:start="45:5" pos:end="45:18"><call pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:10">fclose</name><argument_list pos:start="45:11" pos:end="45:18">(<argument pos:start="45:12" pos:end="45:17"><expr pos:start="45:12" pos:end="45:17"><name pos:start="45:12" pos:end="45:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="46:5" pos:end="46:13">return <expr pos:start="46:12" pos:end="46:12"><literal type="number" pos:start="46:12" pos:end="46:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
