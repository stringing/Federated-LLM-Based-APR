<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/61/61.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:30"><decl pos:start="3:1" pos:end="3:16"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:8">sumb</name><index pos:start="3:9" pos:end="3:16">[<expr pos:start="3:10" pos:end="3:15"><literal type="number" pos:start="3:10" pos:end="3:15">100005</literal></expr>]</index></name></decl>,<decl pos:start="3:18" pos:end="3:29"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:18" pos:end="3:29"><name pos:start="3:18" pos:end="3:21">sumg</name><index pos:start="3:22" pos:end="3:29">[<expr pos:start="3:23" pos:end="3:28"><literal type="number" pos:start="3:23" pos:end="3:28">100005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:20"><decl pos:start="4:1" pos:end="4:19"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:19"><name pos:start="4:6" pos:end="4:11">ismale</name><index pos:start="4:12" pos:end="4:19">[<expr pos:start="4:13" pos:end="4:18"><literal type="number" pos:start="4:13" pos:end="4:18">100005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:6"><decl pos:start="5:1" pos:end="5:5"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:5">n</name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="39:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list>
<block pos:start="7:1" pos:end="39:1">{<block_content pos:start="8:5" pos:end="38:5">
    <expr_stmt pos:start="8:5" pos:end="8:34"><expr pos:start="8:5" pos:end="8:33"><call pos:start="8:5" pos:end="8:33"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:33">(<argument pos:start="8:13" pos:end="8:22"><expr pos:start="8:13" pos:end="8:22"><literal type="string" pos:start="8:13" pos:end="8:22">"match.in"</literal></expr></argument>,<argument pos:start="8:24" pos:end="8:26"><expr pos:start="8:24" pos:end="8:26"><literal type="string" pos:start="8:24" pos:end="8:26">"r"</literal></expr></argument>,<argument pos:start="8:28" pos:end="8:32"><expr pos:start="8:28" pos:end="8:32"><name pos:start="8:28" pos:end="8:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:36"><expr pos:start="9:5" pos:end="9:35"><call pos:start="9:5" pos:end="9:35"><name pos:start="9:5" pos:end="9:11">freopen</name><argument_list pos:start="9:12" pos:end="9:35">(<argument pos:start="9:13" pos:end="9:23"><expr pos:start="9:13" pos:end="9:23"><literal type="string" pos:start="9:13" pos:end="9:23">"match.out"</literal></expr></argument>,<argument pos:start="9:25" pos:end="9:27"><expr pos:start="9:25" pos:end="9:27"><literal type="string" pos:start="9:25" pos:end="9:27">"w"</literal></expr></argument>,<argument pos:start="9:29" pos:end="9:34"><expr pos:start="9:29" pos:end="9:34"><name pos:start="9:29" pos:end="9:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:11"><expr pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:7">cin</name><operator pos:start="10:8" pos:end="10:9">&gt;&gt;</operator><name pos:start="10:10" pos:end="10:10">n</name></expr>;</expr_stmt>
    <for pos:start="11:5" pos:end="23:5">for<control pos:start="11:8" pos:end="11:25">(<init pos:start="11:9" pos:end="11:16"><decl pos:start="11:9" pos:end="11:15"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name><init pos:start="11:14" pos:end="11:15">=<expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">1</literal></expr></init></decl>;</init><condition pos:start="11:17" pos:end="11:21"><expr pos:start="11:17" pos:end="11:20"><name pos:start="11:17" pos:end="11:17">i</name><operator pos:start="11:18" pos:end="11:19">&lt;=</operator><name pos:start="11:20" pos:end="11:20">n</name></expr>;</condition><incr pos:start="11:22" pos:end="11:24"><expr pos:start="11:22" pos:end="11:24"><operator pos:start="11:22" pos:end="11:23">++</operator><name pos:start="11:24" pos:end="11:24">i</name></expr></incr>)</control>
    <block pos:start="12:5" pos:end="23:5">{<block_content pos:start="13:9" pos:end="22:9">
        <expr_stmt pos:start="13:9" pos:end="13:23"><expr pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:11">cin</name><operator pos:start="13:12" pos:end="13:13">&gt;&gt;</operator><name pos:start="13:14" pos:end="13:22"><name pos:start="13:14" pos:end="13:19">ismale</name><index pos:start="13:20" pos:end="13:22">[<expr pos:start="13:21" pos:end="13:21"><name pos:start="13:21" pos:end="13:21">i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:26"><expr pos:start="14:9" pos:end="14:25"><name pos:start="14:9" pos:end="14:15"><name pos:start="14:9" pos:end="14:12">sumb</name><index pos:start="14:13" pos:end="14:15">[<expr pos:start="14:14" pos:end="14:14"><name pos:start="14:14" pos:end="14:14">i</name></expr>]</index></name><operator pos:start="14:16" pos:end="14:16">=</operator><name pos:start="14:17" pos:end="14:25"><name pos:start="14:17" pos:end="14:20">sumb</name><index pos:start="14:21" pos:end="14:25">[<expr pos:start="14:22" pos:end="14:24"><name pos:start="14:22" pos:end="14:22">i</name><operator pos:start="14:23" pos:end="14:23">-</operator><literal type="number" pos:start="14:24" pos:end="14:24">1</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:26"><expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:12">sumg</name><index pos:start="15:13" pos:end="15:15">[<expr pos:start="15:14" pos:end="15:14"><name pos:start="15:14" pos:end="15:14">i</name></expr>]</index></name><operator pos:start="15:16" pos:end="15:16">=</operator><name pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:20">sumg</name><index pos:start="15:21" pos:end="15:25">[<expr pos:start="15:22" pos:end="15:24"><name pos:start="15:22" pos:end="15:22">i</name><operator pos:start="15:23" pos:end="15:23">-</operator><literal type="number" pos:start="15:24" pos:end="15:24">1</literal></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="16:9" pos:end="22:9"><if pos:start="16:9" pos:end="19:9">if<condition pos:start="16:11" pos:end="16:21">(<expr pos:start="16:12" pos:end="16:20"><name pos:start="16:12" pos:end="16:20"><name pos:start="16:12" pos:end="16:17">ismale</name><index pos:start="16:18" pos:end="16:20">[<expr pos:start="16:19" pos:end="16:19"><name pos:start="16:19" pos:end="16:19">i</name></expr>]</index></name></expr>)</condition>
        <block pos:start="17:9" pos:end="19:9">{<block_content pos:start="18:13" pos:end="18:22">
            <expr_stmt pos:start="18:13" pos:end="18:22"><expr pos:start="18:13" pos:end="18:21"><operator pos:start="18:13" pos:end="18:14">++</operator><name pos:start="18:15" pos:end="18:21"><name pos:start="18:15" pos:end="18:18">sumb</name><index pos:start="18:19" pos:end="18:21">[<expr pos:start="18:20" pos:end="18:20"><name pos:start="18:20" pos:end="18:20">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="19:10" pos:end="22:9">else
        <block pos:start="20:9" pos:end="22:9">{<block_content pos:start="21:13" pos:end="21:22">
            <expr_stmt pos:start="21:13" pos:end="21:22"><expr pos:start="21:13" pos:end="21:21"><operator pos:start="21:13" pos:end="21:14">++</operator><name pos:start="21:15" pos:end="21:21"><name pos:start="21:15" pos:end="21:18">sumg</name><index pos:start="21:19" pos:end="21:21">[<expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <for pos:start="24:5" pos:end="38:5">for<control pos:start="24:8" pos:end="24:25">(<init pos:start="24:9" pos:end="24:16"><decl pos:start="24:9" pos:end="24:15"><type pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:11">int</name></type> <name pos:start="24:13" pos:end="24:13">i</name><init pos:start="24:14" pos:end="24:15">=<expr pos:start="24:15" pos:end="24:15"><name pos:start="24:15" pos:end="24:15">n</name></expr></init></decl>;</init><condition pos:start="24:17" pos:end="24:21"><expr pos:start="24:17" pos:end="24:20"><name pos:start="24:17" pos:end="24:17">i</name><operator pos:start="24:18" pos:end="24:19">&gt;=</operator><literal type="number" pos:start="24:20" pos:end="24:20">0</literal></expr>;</condition><incr pos:start="24:22" pos:end="24:24"><expr pos:start="24:22" pos:end="24:24"><operator pos:start="24:22" pos:end="24:23">--</operator><name pos:start="24:24" pos:end="24:24">i</name></expr></incr>)</control>
    <block pos:start="25:5" pos:end="38:5">{<block_content pos:start="26:9" pos:end="37:9">
        <decl_stmt pos:start="26:9" pos:end="26:22"><decl pos:start="26:9" pos:end="26:16"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:14">bx</name><init pos:start="26:15" pos:end="26:16">=<expr pos:start="26:16" pos:end="26:16"><literal type="number" pos:start="26:16" pos:end="26:16">0</literal></expr></init></decl>,<decl pos:start="26:18" pos:end="26:21"><type ref="prev" pos:start="26:9" pos:end="26:11"/><name pos:start="26:18" pos:end="26:19">gx</name><init pos:start="26:20" pos:end="26:21">=<expr pos:start="26:21" pos:end="26:21"><literal type="number" pos:start="26:21" pos:end="26:21">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="27:9" pos:end="37:9">for<control pos:start="27:12" pos:end="27:31">(<init pos:start="27:13" pos:end="27:20"><decl pos:start="27:13" pos:end="27:19"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:17">j</name><init pos:start="27:18" pos:end="27:19">=<expr pos:start="27:19" pos:end="27:19"><literal type="number" pos:start="27:19" pos:end="27:19">1</literal></expr></init></decl>;</init><condition pos:start="27:21" pos:end="27:27"><expr pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:21">j</name><operator pos:start="27:22" pos:end="27:23">&lt;=</operator><name pos:start="27:24" pos:end="27:24">n</name><operator pos:start="27:25" pos:end="27:25">-</operator><name pos:start="27:26" pos:end="27:26">i</name></expr>;</condition><incr pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><operator pos:start="27:28" pos:end="27:29">++</operator><name pos:start="27:30" pos:end="27:30">j</name></expr></incr>)</control>
        <block pos:start="28:9" pos:end="37:9">{<block_content pos:start="29:13" pos:end="36:13">
            <decl_stmt pos:start="29:13" pos:end="29:22"><decl pos:start="29:13" pos:end="29:21"><type pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">int</name></type> <name pos:start="29:17" pos:end="29:17">k</name><init pos:start="29:18" pos:end="29:21">=<expr pos:start="29:19" pos:end="29:21"><name pos:start="29:19" pos:end="29:19">i</name><operator pos:start="29:20" pos:end="29:20">+</operator><name pos:start="29:21" pos:end="29:21">j</name></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="30:13" pos:end="30:31"><expr pos:start="30:13" pos:end="30:30"><name pos:start="30:13" pos:end="30:14">bx</name><operator pos:start="30:15" pos:end="30:15">=</operator><name pos:start="30:16" pos:end="30:22"><name pos:start="30:16" pos:end="30:19">sumb</name><index pos:start="30:20" pos:end="30:22">[<expr pos:start="30:21" pos:end="30:21"><name pos:start="30:21" pos:end="30:21">k</name></expr>]</index></name><operator pos:start="30:23" pos:end="30:23">-</operator><name pos:start="30:24" pos:end="30:30"><name pos:start="30:24" pos:end="30:27">sumb</name><index pos:start="30:28" pos:end="30:30">[<expr pos:start="30:29" pos:end="30:29"><name pos:start="30:29" pos:end="30:29">j</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="31:13" pos:end="31:31"><expr pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:14">gx</name><operator pos:start="31:15" pos:end="31:15">=</operator><name pos:start="31:16" pos:end="31:22"><name pos:start="31:16" pos:end="31:19">sumg</name><index pos:start="31:20" pos:end="31:22">[<expr pos:start="31:21" pos:end="31:21"><name pos:start="31:21" pos:end="31:21">k</name></expr>]</index></name><operator pos:start="31:23" pos:end="31:23">-</operator><name pos:start="31:24" pos:end="31:30"><name pos:start="31:24" pos:end="31:27">sumg</name><index pos:start="31:28" pos:end="31:30">[<expr pos:start="31:29" pos:end="31:29"><name pos:start="31:29" pos:end="31:29">j</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="32:13" pos:end="36:13"><if pos:start="32:13" pos:end="36:13">if<condition pos:start="32:15" pos:end="32:22">(<expr pos:start="32:16" pos:end="32:21"><name pos:start="32:16" pos:end="32:17">bx</name><operator pos:start="32:18" pos:end="32:19">==</operator><name pos:start="32:20" pos:end="32:21">gx</name></expr>)</condition>
            <block pos:start="33:13" pos:end="36:13">{<block_content pos:start="34:17" pos:end="35:25">
                <expr_stmt pos:start="34:17" pos:end="34:24"><expr pos:start="34:17" pos:end="34:23"><name pos:start="34:17" pos:end="34:20">cout</name><operator pos:start="34:21" pos:end="34:22">&lt;&lt;</operator><name pos:start="34:23" pos:end="34:23">i</name></expr>;</expr_stmt>
                <return pos:start="35:17" pos:end="35:25">return <expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
</block_content>}</block></function>
</unit>
