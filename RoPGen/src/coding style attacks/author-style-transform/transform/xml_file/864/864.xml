<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/864/864.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<function pos:start="5:1" pos:end="55:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list><block pos:start="5:11" pos:end="55:1">{<block_content pos:start="6:5" pos:end="54:13">
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:12">s</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:11"><expr pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:10">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:17"><expr pos:start="9:5" pos:end="9:16"><call pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:7">cin</name><operator pos:start="9:8" pos:end="9:8">.</operator><name pos:start="9:9" pos:end="9:14">ignore</name></name><argument_list pos:start="9:15" pos:end="9:16">()</argument_list></call></expr>;</expr_stmt>
    <for pos:start="10:5" pos:end="13:5">for<control pos:start="10:8" pos:end="10:24">(<init pos:start="10:9" pos:end="10:16"><decl pos:start="10:9" pos:end="10:15"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">i</name><init pos:start="10:14" pos:end="10:15">=<expr pos:start="10:15" pos:end="10:15"><literal type="number" pos:start="10:15" pos:end="10:15">0</literal></expr></init></decl>;</init><condition pos:start="10:17" pos:end="10:20"><expr pos:start="10:17" pos:end="10:19"><name pos:start="10:17" pos:end="10:17">i</name><operator pos:start="10:18" pos:end="10:18">&lt;</operator><name pos:start="10:19" pos:end="10:19">n</name></expr>;</condition><incr pos:start="10:21" pos:end="10:23"><expr pos:start="10:21" pos:end="10:23"><name pos:start="10:21" pos:end="10:21">i</name><operator pos:start="10:22" pos:end="10:23">++</operator></expr></incr>)</control>
    <block pos:start="11:5" pos:end="13:5">{<block_content pos:start="12:9" pos:end="12:23">
        <expr_stmt pos:start="12:9" pos:end="12:23"><expr pos:start="12:9" pos:end="12:22"><call pos:start="12:9" pos:end="12:22"><name pos:start="12:9" pos:end="12:15">getline</name><argument_list pos:start="12:16" pos:end="12:22">(<argument pos:start="12:17" pos:end="12:19"><expr pos:start="12:17" pos:end="12:19"><name pos:start="12:17" pos:end="12:19">cin</name></expr></argument>,<argument pos:start="12:21" pos:end="12:21"><expr pos:start="12:21" pos:end="12:21"><name pos:start="12:21" pos:end="12:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="14:5" pos:end="25:5">for<control pos:start="14:8" pos:end="14:31">(<init pos:start="14:9" pos:end="14:16"><decl pos:start="14:9" pos:end="14:15"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:13">i</name><init pos:start="14:14" pos:end="14:15">=<expr pos:start="14:15" pos:end="14:15"><literal type="number" pos:start="14:15" pos:end="14:15">0</literal></expr></init></decl>;</init><condition pos:start="14:17" pos:end="14:27"><expr pos:start="14:17" pos:end="14:26"><name pos:start="14:17" pos:end="14:17">i</name><operator pos:start="14:18" pos:end="14:18">&lt;</operator><call pos:start="14:19" pos:end="14:26"><name pos:start="14:19" pos:end="14:24"><name pos:start="14:19" pos:end="14:19">s</name><operator pos:start="14:20" pos:end="14:20">.</operator><name pos:start="14:21" pos:end="14:24">size</name></name><argument_list pos:start="14:25" pos:end="14:26">()</argument_list></call></expr>;</condition><incr pos:start="14:28" pos:end="14:30"><expr pos:start="14:28" pos:end="14:30"><name pos:start="14:28" pos:end="14:28">i</name><operator pos:start="14:29" pos:end="14:30">++</operator></expr></incr>)</control>
    <block pos:start="15:5" pos:end="25:5">{<block_content pos:start="16:9" pos:end="23:9">
        <if_stmt pos:start="16:9" pos:end="19:9"><if pos:start="16:9" pos:end="19:9">if<condition pos:start="16:11" pos:end="16:43">(<expr pos:start="16:12" pos:end="16:42"><name pos:start="16:12" pos:end="16:15"><name pos:start="16:12" pos:end="16:12">s</name><index pos:start="16:13" pos:end="16:15">[<expr pos:start="16:14" pos:end="16:14"><name pos:start="16:14" pos:end="16:14">i</name></expr>]</index></name><operator pos:start="16:16" pos:end="16:17">&gt;=</operator><literal type="char" pos:start="16:18" pos:end="16:20">'A'</literal><operator pos:start="16:21" pos:end="16:22">&amp;&amp;</operator><name pos:start="16:23" pos:end="16:26"><name pos:start="16:23" pos:end="16:23">s</name><index pos:start="16:24" pos:end="16:26">[<expr pos:start="16:25" pos:end="16:25"><name pos:start="16:25" pos:end="16:25">i</name></expr>]</index></name><operator pos:start="16:27" pos:end="16:28">&lt;=</operator><literal type="char" pos:start="16:29" pos:end="16:31">'Z'</literal><operator pos:start="16:32" pos:end="16:33">&amp;&amp;</operator><name pos:start="16:34" pos:end="16:37"><name pos:start="16:34" pos:end="16:34">s</name><index pos:start="16:35" pos:end="16:37">[<expr pos:start="16:36" pos:end="16:36"><name pos:start="16:36" pos:end="16:36">i</name></expr>]</index></name><operator pos:start="16:38" pos:end="16:39">!=</operator><literal type="char" pos:start="16:40" pos:end="16:42">'I'</literal></expr>)</condition>
        <block pos:start="17:9" pos:end="19:9">{<block_content pos:start="18:13" pos:end="18:21">
            <expr_stmt pos:start="18:13" pos:end="18:21"><expr pos:start="18:13" pos:end="18:20"><name pos:start="18:13" pos:end="18:16"><name pos:start="18:13" pos:end="18:13">s</name><index pos:start="18:14" pos:end="18:16">[<expr pos:start="18:15" pos:end="18:15"><name pos:start="18:15" pos:end="18:15">i</name></expr>]</index></name><operator pos:start="18:17" pos:end="18:18">+=</operator><literal type="number" pos:start="18:19" pos:end="18:20">32</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="20:9" pos:end="23:9"><if pos:start="20:9" pos:end="23:9">if<condition pos:start="20:11" pos:end="20:21">(<expr pos:start="20:12" pos:end="20:20"><name pos:start="20:12" pos:end="20:15"><name pos:start="20:12" pos:end="20:12">s</name><index pos:start="20:13" pos:end="20:15">[<expr pos:start="20:14" pos:end="20:14"><name pos:start="20:14" pos:end="20:14">i</name></expr>]</index></name><operator pos:start="20:16" pos:end="20:17">==</operator><literal type="char" pos:start="20:18" pos:end="20:20">'?'</literal></expr>)</condition>
        <block pos:start="21:9" pos:end="23:9">{<block_content pos:start="22:13" pos:end="22:21">
            <expr_stmt pos:start="22:13" pos:end="22:21"><expr pos:start="22:13" pos:end="22:20"><name pos:start="22:13" pos:end="22:16"><name pos:start="22:13" pos:end="22:13">s</name><index pos:start="22:14" pos:end="22:16">[<expr pos:start="22:15" pos:end="22:15"><name pos:start="22:15" pos:end="22:15">i</name></expr>]</index></name><operator pos:start="22:17" pos:end="22:17">=</operator><literal type="char" pos:start="22:18" pos:end="22:20">'!'</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        
    </block_content>}</block></for>
    <decl_stmt pos:start="26:5" pos:end="26:22"><decl pos:start="26:5" pos:end="26:21"><type pos:start="26:5" pos:end="26:10"><name pos:start="26:5" pos:end="26:10">string</name></type> <name pos:start="26:12" pos:end="26:18"><name pos:start="26:12" pos:end="26:12">f</name><index pos:start="26:13" pos:end="26:18">[<expr pos:start="26:14" pos:end="26:17"><literal type="number" pos:start="26:14" pos:end="26:17">1005</literal></expr>]</index></name><init pos:start="26:19" pos:end="26:21">=<expr pos:start="26:20" pos:end="26:21"><block pos:start="26:20" pos:end="26:21">{}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">x</name><init pos:start="27:10" pos:end="27:11">=<expr pos:start="27:11" pos:end="27:11"><literal type="number" pos:start="27:11" pos:end="27:11">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="28:5" pos:end="38:5">for<control pos:start="28:8" pos:end="28:31">(<init pos:start="28:9" pos:end="28:16"><decl pos:start="28:9" pos:end="28:15"><type pos:start="28:9" pos:end="28:11"><name pos:start="28:9" pos:end="28:11">int</name></type> <name pos:start="28:13" pos:end="28:13">i</name><init pos:start="28:14" pos:end="28:15">=<expr pos:start="28:15" pos:end="28:15"><literal type="number" pos:start="28:15" pos:end="28:15">0</literal></expr></init></decl>;</init><condition pos:start="28:17" pos:end="28:27"><expr pos:start="28:17" pos:end="28:26"><name pos:start="28:17" pos:end="28:17">i</name><operator pos:start="28:18" pos:end="28:18">&lt;</operator><call pos:start="28:19" pos:end="28:26"><name pos:start="28:19" pos:end="28:24"><name pos:start="28:19" pos:end="28:19">s</name><operator pos:start="28:20" pos:end="28:20">.</operator><name pos:start="28:21" pos:end="28:24">size</name></name><argument_list pos:start="28:25" pos:end="28:26">()</argument_list></call></expr>;</condition><incr pos:start="28:28" pos:end="28:30"><expr pos:start="28:28" pos:end="28:30"><name pos:start="28:28" pos:end="28:28">i</name><operator pos:start="28:29" pos:end="28:30">++</operator></expr></incr>)</control>
    <block pos:start="29:5" pos:end="38:5">{<block_content pos:start="30:9" pos:end="37:9">
        <if_stmt pos:start="30:9" pos:end="37:9"><if pos:start="30:9" pos:end="33:9">if<condition pos:start="30:11" pos:end="30:21">(<expr pos:start="30:12" pos:end="30:20"><name pos:start="30:12" pos:end="30:15"><name pos:start="30:12" pos:end="30:12">s</name><index pos:start="30:13" pos:end="30:15">[<expr pos:start="30:14" pos:end="30:14"><name pos:start="30:14" pos:end="30:14">i</name></expr>]</index></name><operator pos:start="30:16" pos:end="30:17">!=</operator><literal type="char" pos:start="30:18" pos:end="30:20">' '</literal></expr>)</condition>
        <block pos:start="31:9" pos:end="33:9">{<block_content pos:start="32:13" pos:end="32:23">
            <expr_stmt pos:start="32:13" pos:end="32:23"><expr pos:start="32:13" pos:end="32:22"><name pos:start="32:13" pos:end="32:16"><name pos:start="32:13" pos:end="32:13">f</name><index pos:start="32:14" pos:end="32:16">[<expr pos:start="32:15" pos:end="32:15"><name pos:start="32:15" pos:end="32:15">x</name></expr>]</index></name><operator pos:start="32:17" pos:end="32:18">+=</operator><name pos:start="32:19" pos:end="32:22"><name pos:start="32:19" pos:end="32:19">s</name><index pos:start="32:20" pos:end="32:22">[<expr pos:start="32:21" pos:end="32:21"><name pos:start="32:21" pos:end="32:21">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else pos:start="34:9" pos:end="37:9">else
        <block pos:start="35:9" pos:end="37:9">{<block_content pos:start="36:13" pos:end="36:16">
            <expr_stmt pos:start="36:13" pos:end="36:16"><expr pos:start="36:13" pos:end="36:15"><name pos:start="36:13" pos:end="36:13">x</name><operator pos:start="36:14" pos:end="36:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <for pos:start="39:5" pos:end="53:5">for<control pos:start="39:8" pos:end="39:24">(<init pos:start="39:9" pos:end="39:16"><decl pos:start="39:9" pos:end="39:15"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:13">i</name><init pos:start="39:14" pos:end="39:15">=<expr pos:start="39:15" pos:end="39:15"><literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr></init></decl>;</init><condition pos:start="39:17" pos:end="39:20"><expr pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:17">i</name><operator pos:start="39:18" pos:end="39:18">&lt;</operator><name pos:start="39:19" pos:end="39:19">x</name></expr>;</condition><incr pos:start="39:21" pos:end="39:23"><expr pos:start="39:21" pos:end="39:23"><name pos:start="39:21" pos:end="39:21">i</name><operator pos:start="39:22" pos:end="39:23">++</operator></expr></incr>)</control>
    <block pos:start="40:5" pos:end="53:5">{<block_content pos:start="41:9" pos:end="52:9">
        <if_stmt pos:start="41:9" pos:end="52:9"><if pos:start="41:9" pos:end="44:9">if<condition pos:start="41:11" pos:end="41:53">(<expr pos:start="41:12" pos:end="41:52"><name pos:start="41:12" pos:end="41:15"><name pos:start="41:12" pos:end="41:12">f</name><index pos:start="41:13" pos:end="41:15">[<expr pos:start="41:14" pos:end="41:14"><name pos:start="41:14" pos:end="41:14">i</name></expr>]</index></name><operator pos:start="41:16" pos:end="41:17">==</operator><literal type="string" pos:start="41:18" pos:end="41:22">"can"</literal><operator pos:start="41:23" pos:end="41:24">||</operator><name pos:start="41:25" pos:end="41:28"><name pos:start="41:25" pos:end="41:25">f</name><index pos:start="41:26" pos:end="41:28">[<expr pos:start="41:27" pos:end="41:27"><name pos:start="41:27" pos:end="41:27">i</name></expr>]</index></name><operator pos:start="41:29" pos:end="41:30">==</operator><literal type="string" pos:start="41:31" pos:end="41:37">"could"</literal><operator pos:start="41:38" pos:end="41:39">&amp;&amp;</operator><name pos:start="41:40" pos:end="41:45"><name pos:start="41:40" pos:end="41:40">f</name><index pos:start="41:41" pos:end="41:45">[<expr pos:start="41:42" pos:end="41:44"><name pos:start="41:42" pos:end="41:42">i</name><operator pos:start="41:43" pos:end="41:43">+</operator><literal type="number" pos:start="41:44" pos:end="41:44">1</literal></expr>]</index></name><operator pos:start="41:46" pos:end="41:47">==</operator><literal type="string" pos:start="41:48" pos:end="41:52">"you"</literal></expr>)</condition>
        <block pos:start="42:9" pos:end="44:9">{<block_content pos:start="43:13" pos:end="43:34">
            <expr_stmt pos:start="43:13" pos:end="43:34"><expr pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:16">cout</name><operator pos:start="43:17" pos:end="43:18">&lt;&lt;</operator><literal type="string" pos:start="43:19" pos:end="43:22">"I "</literal><operator pos:start="43:23" pos:end="43:24">&lt;&lt;</operator><name pos:start="43:25" pos:end="43:28"><name pos:start="43:25" pos:end="43:25">f</name><index pos:start="43:26" pos:end="43:28">[<expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">i</name></expr>]</index></name><operator pos:start="43:29" pos:end="43:30">&lt;&lt;</operator><literal type="string" pos:start="43:31" pos:end="43:33">" "</literal></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="45:9" pos:end="48:9">else if<condition pos:start="45:16" pos:end="45:38">(<expr pos:start="45:17" pos:end="45:37"><name pos:start="45:17" pos:end="45:20"><name pos:start="45:17" pos:end="45:17">f</name><index pos:start="45:18" pos:end="45:20">[<expr pos:start="45:19" pos:end="45:19"><name pos:start="45:19" pos:end="45:19">i</name></expr>]</index></name><operator pos:start="45:21" pos:end="45:22">==</operator><literal type="string" pos:start="45:23" pos:end="45:25">"I"</literal><operator pos:start="45:26" pos:end="45:27">||</operator><name pos:start="45:28" pos:end="45:31"><name pos:start="45:28" pos:end="45:28">f</name><index pos:start="45:29" pos:end="45:31">[<expr pos:start="45:30" pos:end="45:30"><name pos:start="45:30" pos:end="45:30">i</name></expr>]</index></name><operator pos:start="45:32" pos:end="45:33">==</operator><literal type="string" pos:start="45:34" pos:end="45:37">"me"</literal></expr>)</condition>
        <block pos:start="46:9" pos:end="48:9">{<block_content pos:start="47:13" pos:end="47:25">
            <expr_stmt pos:start="47:13" pos:end="47:25"><expr pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:16">cout</name><operator pos:start="47:17" pos:end="47:18">&lt;&lt;</operator><literal type="string" pos:start="47:19" pos:end="47:24">"You "</literal></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else pos:start="49:9" pos:end="52:9">else
        <block pos:start="50:9" pos:end="52:9">{<block_content pos:start="51:13" pos:end="51:28">
            <expr_stmt pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:16">cout</name><operator pos:start="51:17" pos:end="51:18">&lt;&lt;</operator><name pos:start="51:19" pos:end="51:22"><name pos:start="51:19" pos:end="51:19">f</name><index pos:start="51:20" pos:end="51:22">[<expr pos:start="51:21" pos:end="51:21"><name pos:start="51:21" pos:end="51:21">i</name></expr>]</index></name><operator pos:start="51:23" pos:end="51:24">&lt;&lt;</operator><literal type="string" pos:start="51:25" pos:end="51:27">" "</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <return pos:start="54:5" pos:end="54:13">return <expr pos:start="54:12" pos:end="54:12"><literal type="number" pos:start="54:12" pos:end="54:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
