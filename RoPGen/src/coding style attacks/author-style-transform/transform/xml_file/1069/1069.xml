<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1069/1069.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:19">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:15">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:15">&lt;cmath&gt;</cpp:file></cpp:include>
<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<decl_stmt pos:start="6:1" pos:end="6:26"><decl pos:start="6:1" pos:end="6:5"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:5">n</name></decl>,<decl pos:start="6:7" pos:end="6:11"><type ref="prev" pos:start="6:1" pos:end="6:3"/><name pos:start="6:7" pos:end="6:11"><name pos:start="6:7" pos:end="6:7">a</name><index pos:start="6:8" pos:end="6:11">[<expr pos:start="6:9" pos:end="6:10"><literal type="number" pos:start="6:9" pos:end="6:10">15</literal></expr>]</index></name></decl>,<decl pos:start="6:13" pos:end="6:17"><type ref="prev" pos:start="6:1" pos:end="6:3"/><name pos:start="6:13" pos:end="6:17"><name pos:start="6:13" pos:end="6:13">b</name><index pos:start="6:14" pos:end="6:17">[<expr pos:start="6:15" pos:end="6:16"><literal type="number" pos:start="6:15" pos:end="6:16">15</literal></expr>]</index></name></decl>,<decl pos:start="6:19" pos:end="6:25"><type ref="prev" pos:start="6:1" pos:end="6:3"/><name pos:start="6:19" pos:end="6:21">ans</name><init pos:start="6:22" pos:end="6:25">=<expr pos:start="6:23" pos:end="6:25"><literal type="number" pos:start="6:23" pos:end="6:25">1e9</literal></expr></init></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="14:1"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">void</name></type> <name pos:start="7:6" pos:end="7:8">dfs</name><parameter_list pos:start="7:9" pos:end="7:32">(<parameter pos:start="7:10" pos:end="7:14"><decl pos:start="7:10" pos:end="7:14"><type pos:start="7:10" pos:end="7:14"><name pos:start="7:10" pos:end="7:12">int</name></type> <name pos:start="7:14" pos:end="7:14">t</name></decl></parameter>,<parameter pos:start="7:16" pos:end="7:23"><decl pos:start="7:16" pos:end="7:23"><type pos:start="7:16" pos:end="7:23"><name pos:start="7:16" pos:end="7:18">int</name></type> <name pos:start="7:20" pos:end="7:23">temp</name></decl></parameter>,<parameter pos:start="7:25" pos:end="7:31"><decl pos:start="7:25" pos:end="7:31"><type pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:27">int</name></type> <name pos:start="7:29" pos:end="7:31">sum</name></decl></parameter>)</parameter_list><block pos:start="7:33" pos:end="14:1">{<block_content pos:start="8:5" pos:end="13:22">
    <if_stmt pos:start="8:5" pos:end="11:5"><if pos:start="8:5" pos:end="11:5">if<condition pos:start="8:7" pos:end="8:12">(<expr pos:start="8:8" pos:end="8:11"><name pos:start="8:8" pos:end="8:8">t</name><operator pos:start="8:9" pos:end="8:10">==</operator><name pos:start="8:11" pos:end="8:11">n</name></expr>)</condition><block pos:start="8:13" pos:end="11:5">{<block_content pos:start="9:9" pos:end="10:15">
        <expr_stmt pos:start="9:9" pos:end="9:35"><expr pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:11">ans</name><operator pos:start="9:12" pos:end="9:12">=</operator><call pos:start="9:13" pos:end="9:34"><name pos:start="9:13" pos:end="9:15">min</name><argument_list pos:start="9:16" pos:end="9:34">(<argument pos:start="9:17" pos:end="9:19"><expr pos:start="9:17" pos:end="9:19"><name pos:start="9:17" pos:end="9:19">ans</name></expr></argument>,<argument pos:start="9:21" pos:end="9:33"><expr pos:start="9:21" pos:end="9:33"><call pos:start="9:21" pos:end="9:33"><name pos:start="9:21" pos:end="9:23">abs</name><argument_list pos:start="9:24" pos:end="9:33">(<argument pos:start="9:25" pos:end="9:32"><expr pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:28">temp</name><operator pos:start="9:29" pos:end="9:29">-</operator><name pos:start="9:30" pos:end="9:32">sum</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="10:9" pos:end="10:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:36"><expr pos:start="12:5" pos:end="12:35"><call pos:start="12:5" pos:end="12:35"><name pos:start="12:5" pos:end="12:7">dfs</name><argument_list pos:start="12:8" pos:end="12:35">(<argument pos:start="12:9" pos:end="12:11"><expr pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:9">t</name><operator pos:start="12:10" pos:end="12:10">+</operator><literal type="number" pos:start="12:11" pos:end="12:11">1</literal></expr></argument>,<argument pos:start="12:13" pos:end="12:23"><expr pos:start="12:13" pos:end="12:23"><name pos:start="12:13" pos:end="12:16">temp</name><operator pos:start="12:17" pos:end="12:17">*</operator><name pos:start="12:18" pos:end="12:23"><name pos:start="12:18" pos:end="12:18">a</name><index pos:start="12:19" pos:end="12:23">[<expr pos:start="12:20" pos:end="12:22"><name pos:start="12:20" pos:end="12:20">t</name><operator pos:start="12:21" pos:end="12:21">+</operator><literal type="number" pos:start="12:22" pos:end="12:22">1</literal></expr>]</index></name></expr></argument>,<argument pos:start="12:25" pos:end="12:34"><expr pos:start="12:25" pos:end="12:34"><name pos:start="12:25" pos:end="12:27">sum</name><operator pos:start="12:28" pos:end="12:28">+</operator><name pos:start="12:29" pos:end="12:34"><name pos:start="12:29" pos:end="12:29">b</name><index pos:start="12:30" pos:end="12:34">[<expr pos:start="12:31" pos:end="12:33"><name pos:start="12:31" pos:end="12:31">t</name><operator pos:start="12:32" pos:end="12:32">+</operator><literal type="number" pos:start="12:33" pos:end="12:33">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><call pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:7">dfs</name><argument_list pos:start="13:8" pos:end="13:21">(<argument pos:start="13:9" pos:end="13:11"><expr pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:9">t</name><operator pos:start="13:10" pos:end="13:10">+</operator><literal type="number" pos:start="13:11" pos:end="13:11">1</literal></expr></argument>,<argument pos:start="13:13" pos:end="13:16"><expr pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:16">temp</name></expr></argument>,<argument pos:start="13:18" pos:end="13:20"><expr pos:start="13:18" pos:end="13:20"><name pos:start="13:18" pos:end="13:20">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="15:1" pos:end="24:1"><type pos:start="15:1" pos:end="15:3"><name pos:start="15:1" pos:end="15:3">int</name></type> <name pos:start="15:5" pos:end="15:8">main</name><parameter_list pos:start="15:9" pos:end="15:10">()</parameter_list><block pos:start="15:11" pos:end="24:1">{<block_content pos:start="16:5" pos:end="23:14">
    <expr_stmt pos:start="16:5" pos:end="16:34"><expr pos:start="16:5" pos:end="16:33"><call pos:start="16:5" pos:end="16:33"><name pos:start="16:5" pos:end="16:11">freopen</name><argument_list pos:start="16:12" pos:end="16:33">(<argument pos:start="16:13" pos:end="16:22"><expr pos:start="16:13" pos:end="16:22"><literal type="string" pos:start="16:13" pos:end="16:22">"stone.in"</literal></expr></argument>,<argument pos:start="16:24" pos:end="16:26"><expr pos:start="16:24" pos:end="16:26"><literal type="string" pos:start="16:24" pos:end="16:26">"r"</literal></expr></argument>,<argument pos:start="16:28" pos:end="16:32"><expr pos:start="16:28" pos:end="16:32"><name pos:start="16:28" pos:end="16:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:11">freopen</name><argument_list pos:start="17:12" pos:end="17:35">(<argument pos:start="17:13" pos:end="17:23"><expr pos:start="17:13" pos:end="17:23"><literal type="string" pos:start="17:13" pos:end="17:23">"stone.out"</literal></expr></argument>,<argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><literal type="string" pos:start="17:25" pos:end="17:27">"w"</literal></expr></argument>,<argument pos:start="17:29" pos:end="17:34"><expr pos:start="17:29" pos:end="17:34"><name pos:start="17:29" pos:end="17:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:11"><expr pos:start="18:5" pos:end="18:10"><name pos:start="18:5" pos:end="18:7">cin</name><operator pos:start="18:8" pos:end="18:9">&gt;&gt;</operator><name pos:start="18:10" pos:end="18:10">n</name></expr>;</expr_stmt>
    <for pos:start="19:5" pos:end="21:5">for<control pos:start="19:8" pos:end="19:26">(<init pos:start="19:9" pos:end="19:17"><decl pos:start="19:9" pos:end="19:16"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">i</name> <init pos:start="19:15" pos:end="19:16">=<expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">1</literal></expr></init></decl>;</init><condition pos:start="19:18" pos:end="19:22"><expr pos:start="19:18" pos:end="19:21"><name pos:start="19:18" pos:end="19:18">i</name><operator pos:start="19:19" pos:end="19:20">&lt;=</operator><name pos:start="19:21" pos:end="19:21">n</name></expr>;</condition><incr pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:23">i</name><operator pos:start="19:24" pos:end="19:25">++</operator></expr></incr>)</control><block pos:start="19:27" pos:end="21:5">{<block_content pos:start="20:9" pos:end="20:24">
        <expr_stmt pos:start="20:9" pos:end="20:24"><expr pos:start="20:9" pos:end="20:23"><name pos:start="20:9" pos:end="20:11">cin</name><operator pos:start="20:12" pos:end="20:13">&gt;&gt;</operator><name pos:start="20:14" pos:end="20:17"><name pos:start="20:14" pos:end="20:14">a</name><index pos:start="20:15" pos:end="20:17">[<expr pos:start="20:16" pos:end="20:16"><name pos:start="20:16" pos:end="20:16">i</name></expr>]</index></name><operator pos:start="20:18" pos:end="20:19">&gt;&gt;</operator><name pos:start="20:20" pos:end="20:23"><name pos:start="20:20" pos:end="20:20">b</name><index pos:start="20:21" pos:end="20:23">[<expr pos:start="20:22" pos:end="20:22"><name pos:start="20:22" pos:end="20:22">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="22:5" pos:end="22:15"><expr pos:start="22:5" pos:end="22:14"><call pos:start="22:5" pos:end="22:14"><name pos:start="22:5" pos:end="22:7">dfs</name><argument_list pos:start="22:8" pos:end="22:14">(<argument pos:start="22:9" pos:end="22:9"><expr pos:start="22:9" pos:end="22:9"><literal type="number" pos:start="22:9" pos:end="22:9">0</literal></expr></argument>,<argument pos:start="22:11" pos:end="22:11"><expr pos:start="22:11" pos:end="22:11"><literal type="number" pos:start="22:11" pos:end="22:11">1</literal></expr></argument>,<argument pos:start="22:13" pos:end="22:13"><expr pos:start="22:13" pos:end="22:13"><literal type="number" pos:start="22:13" pos:end="22:13">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:14"><expr pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:8">cout</name><operator pos:start="23:9" pos:end="23:10">&lt;&lt;</operator><name pos:start="23:11" pos:end="23:13">ans</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
