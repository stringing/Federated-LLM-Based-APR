<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1020/1020.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:20"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">t</name></decl>, <decl pos:start="3:8" pos:end="3:8"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:8" pos:end="3:8">n</name></decl>, <decl pos:start="3:11" pos:end="3:11"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:11" pos:end="3:11">x</name></decl>, <decl pos:start="3:14" pos:end="3:14"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:14" pos:end="3:14">y</name></decl>, <decl pos:start="3:17" pos:end="3:19"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:17" pos:end="3:19">ans</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:25"><decl pos:start="4:1" pos:end="4:24"><type pos:start="4:1" pos:end="4:11"><name pos:start="4:1" pos:end="4:11"><name pos:start="4:1" pos:end="4:6">vector</name><argument_list type="generic" pos:start="4:7" pos:end="4:11">&lt;<argument pos:start="4:8" pos:end="4:10"><expr pos:start="4:8" pos:end="4:10"><name pos:start="4:8" pos:end="4:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="4:13" pos:end="4:24"><name pos:start="4:13" pos:end="4:13">a</name><index pos:start="4:14" pos:end="4:18">[<expr pos:start="4:15" pos:end="4:17"><literal type="number" pos:start="4:15" pos:end="4:17">101</literal></expr>]</index><index pos:start="4:19" pos:end="4:24">[<expr pos:start="4:20" pos:end="4:23"><literal type="number" pos:start="4:20" pos:end="4:23">1010</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="12:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:9">check</name><parameter_list pos:start="5:10" pos:end="5:23">(<parameter pos:start="5:11" pos:end="5:15"><decl pos:start="5:11" pos:end="5:15"><type pos:start="5:11" pos:end="5:15"><name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:15">p</name></decl></parameter>, <parameter pos:start="5:18" pos:end="5:22"><decl pos:start="5:18" pos:end="5:22"><type pos:start="5:18" pos:end="5:22"><name pos:start="5:18" pos:end="5:20">int</name></type> <name pos:start="5:22" pos:end="5:22">q</name></decl></parameter>)</parameter_list>
<block pos:start="6:1" pos:end="12:1">{<block_content pos:start="7:5" pos:end="11:19">
    <for pos:start="7:5" pos:end="10:25">for<control pos:start="7:8" pos:end="7:53">(<init pos:start="7:9" pos:end="7:18"><decl pos:start="7:9" pos:end="7:17"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">c</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</init> <condition pos:start="7:20" pos:end="7:48"><expr pos:start="7:20" pos:end="7:47"><name pos:start="7:20" pos:end="7:20">c</name> <operator pos:start="7:22" pos:end="7:22">&lt;</operator> <sizeof pos:start="7:24" pos:end="7:35">sizeof<argument_list pos:start="7:30" pos:end="7:35">(<argument pos:start="7:31" pos:end="7:34"><expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:31">a</name><index pos:start="7:32" pos:end="7:34">[<expr pos:start="7:33" pos:end="7:33"><name pos:start="7:33" pos:end="7:33">p</name></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="7:37" pos:end="7:37">/</operator> <sizeof pos:start="7:39" pos:end="7:47">sizeof<argument_list pos:start="7:45" pos:end="7:47">(<argument pos:start="7:46" pos:end="7:46"><expr pos:start="7:46" pos:end="7:46"><literal type="number" pos:start="7:46" pos:end="7:46">0</literal></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr pos:start="7:50" pos:end="7:52"><expr pos:start="7:50" pos:end="7:52"><name pos:start="7:50" pos:end="7:50">c</name><operator pos:start="7:51" pos:end="7:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="8:9" pos:end="10:25"><block_content pos:start="8:9" pos:end="10:25">
        <for pos:start="8:9" pos:end="10:25">for<control pos:start="8:12" pos:end="8:47">(<init pos:start="8:13" pos:end="8:22"><decl pos:start="8:13" pos:end="8:21"><type pos:start="8:13" pos:end="8:15"><name pos:start="8:13" pos:end="8:15">int</name></type> <name pos:start="8:17" pos:end="8:17">d</name> <init pos:start="8:19" pos:end="8:21">= <expr pos:start="8:21" pos:end="8:21"><literal type="number" pos:start="8:21" pos:end="8:21">0</literal></expr></init></decl>;</init> <condition pos:start="8:24" pos:end="8:42"><expr pos:start="8:24" pos:end="8:41"><name pos:start="8:24" pos:end="8:24">d</name> <operator pos:start="8:26" pos:end="8:26">&lt;</operator> <name pos:start="8:28" pos:end="8:34"><name pos:start="8:28" pos:end="8:28">a</name><index pos:start="8:29" pos:end="8:31">[<expr pos:start="8:30" pos:end="8:30"><name pos:start="8:30" pos:end="8:30">p</name></expr>]</index><index pos:start="8:32" pos:end="8:34">[<expr pos:start="8:33" pos:end="8:33"><name pos:start="8:33" pos:end="8:33">c</name></expr>]</index></name><operator pos:start="8:35" pos:end="8:35">.</operator><call pos:start="8:36" pos:end="8:41"><name pos:start="8:36" pos:end="8:39">size</name><argument_list pos:start="8:40" pos:end="8:41">()</argument_list></call></expr>;</condition> <incr pos:start="8:44" pos:end="8:46"><expr pos:start="8:44" pos:end="8:46"><name pos:start="8:44" pos:end="8:44">d</name><operator pos:start="8:45" pos:end="8:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="9:13" pos:end="10:25"><block_content pos:start="9:13" pos:end="10:25">
            <if_stmt pos:start="9:13" pos:end="10:25"><if pos:start="9:13" pos:end="10:25">if<condition pos:start="9:15" pos:end="9:30">(<expr pos:start="9:16" pos:end="9:29"><name pos:start="9:16" pos:end="9:25"><name pos:start="9:16" pos:end="9:16">a</name><index pos:start="9:17" pos:end="9:19">[<expr pos:start="9:18" pos:end="9:18"><name pos:start="9:18" pos:end="9:18">p</name></expr>]</index><index pos:start="9:20" pos:end="9:22">[<expr pos:start="9:21" pos:end="9:21"><name pos:start="9:21" pos:end="9:21">c</name></expr>]</index><index pos:start="9:23" pos:end="9:25">[<expr pos:start="9:24" pos:end="9:24"><name pos:start="9:24" pos:end="9:24">d</name></expr>]</index></name> <operator pos:start="9:27" pos:end="9:27">=</operator> <name pos:start="9:29" pos:end="9:29">q</name></expr>)</condition><block type="pseudo" pos:start="10:17" pos:end="10:25"><block_content pos:start="10:17" pos:end="10:25">
                <return pos:start="10:17" pos:end="10:25">return <expr pos:start="10:24" pos:end="10:24"><name pos:start="10:24" pos:end="10:24">c</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for>
    <return pos:start="11:5" pos:end="11:19">return <expr pos:start="11:12" pos:end="11:18"><name pos:start="11:12" pos:end="11:18">INT_MAX</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="13:1" pos:end="16:1"><type pos:start="13:1" pos:end="13:3"><name pos:start="13:1" pos:end="13:3">int</name></type> <name pos:start="13:5" pos:end="13:7">cal</name><parameter_list pos:start="13:8" pos:end="13:21">(<parameter pos:start="13:9" pos:end="13:13"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">e</name></decl></parameter>, <parameter pos:start="13:16" pos:end="13:20"><decl pos:start="13:16" pos:end="13:20"><type pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:18">int</name></type> <name pos:start="13:20" pos:end="13:20">f</name></decl></parameter>)</parameter_list>
<block pos:start="14:1" pos:end="16:1">{<block_content pos:start="15:5" pos:end="15:26">
    <return pos:start="15:5" pos:end="15:26">return <expr pos:start="15:12" pos:end="15:25"><name pos:start="15:12" pos:end="15:18"><name pos:start="15:12" pos:end="15:12">a</name><index pos:start="15:13" pos:end="15:15">[<expr pos:start="15:14" pos:end="15:14"><name pos:start="15:14" pos:end="15:14">e</name></expr>]</index><index pos:start="15:16" pos:end="15:18">[<expr pos:start="15:17" pos:end="15:17"><name pos:start="15:17" pos:end="15:17">f</name></expr>]</index></name><operator pos:start="15:19" pos:end="15:19">.</operator><call pos:start="15:20" pos:end="15:25"><name pos:start="15:20" pos:end="15:23">size</name><argument_list pos:start="15:24" pos:end="15:25">()</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function pos:start="17:1" pos:end="23:1"><type pos:start="17:1" pos:end="17:3"><name pos:start="17:1" pos:end="17:3">int</name></type> <name pos:start="17:5" pos:end="17:8">cals</name><parameter_list pos:start="17:9" pos:end="17:22">(<parameter pos:start="17:10" pos:end="17:14"><decl pos:start="17:10" pos:end="17:14"><type pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:12">int</name></type> <name pos:start="17:14" pos:end="17:14">g</name></decl></parameter>, <parameter pos:start="17:17" pos:end="17:21"><decl pos:start="17:17" pos:end="17:21"><type pos:start="17:17" pos:end="17:21"><name pos:start="17:17" pos:end="17:19">int</name></type> <name pos:start="17:21" pos:end="17:21">h</name></decl></parameter>)</parameter_list>
<block pos:start="18:1" pos:end="23:1">{<block_content pos:start="19:5" pos:end="22:13">
    <decl_stmt pos:start="19:5" pos:end="19:14"><decl pos:start="19:5" pos:end="19:13"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">s</name> <init pos:start="19:11" pos:end="19:13">= <expr pos:start="19:13" pos:end="19:13"><literal type="number" pos:start="19:13" pos:end="19:13">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="20:5" pos:end="21:32">for<control pos:start="20:8" pos:end="20:43">(<init pos:start="20:9" pos:end="20:18"><decl pos:start="20:9" pos:end="20:17"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:13">i</name> <init pos:start="20:15" pos:end="20:17">= <expr pos:start="20:17" pos:end="20:17"><literal type="number" pos:start="20:17" pos:end="20:17">0</literal></expr></init></decl>;</init> <condition pos:start="20:20" pos:end="20:38"><expr pos:start="20:20" pos:end="20:37"><name pos:start="20:20" pos:end="20:20">i</name> <operator pos:start="20:22" pos:end="20:22">&lt;</operator> <name pos:start="20:24" pos:end="20:30"><name pos:start="20:24" pos:end="20:24">a</name><index pos:start="20:25" pos:end="20:27">[<expr pos:start="20:26" pos:end="20:26"><name pos:start="20:26" pos:end="20:26">g</name></expr>]</index><index pos:start="20:28" pos:end="20:30">[<expr pos:start="20:29" pos:end="20:29"><name pos:start="20:29" pos:end="20:29">h</name></expr>]</index></name><operator pos:start="20:31" pos:end="20:31">.</operator><call pos:start="20:32" pos:end="20:37"><name pos:start="20:32" pos:end="20:35">size</name><argument_list pos:start="20:36" pos:end="20:37">()</argument_list></call></expr>;</condition> <incr pos:start="20:40" pos:end="20:42"><expr pos:start="20:40" pos:end="20:42"><name pos:start="20:40" pos:end="20:40">i</name><operator pos:start="20:41" pos:end="20:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:9" pos:end="21:32"><block_content pos:start="21:9" pos:end="21:32">
        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:9">s</name> <operator pos:start="21:11" pos:end="21:12">+=</operator> <call pos:start="21:14" pos:end="21:31"><name pos:start="21:14" pos:end="21:16">cal</name><argument_list pos:start="21:17" pos:end="21:31">(<argument pos:start="21:18" pos:end="21:18"><expr pos:start="21:18" pos:end="21:18"><name pos:start="21:18" pos:end="21:18">g</name></expr></argument>, <argument pos:start="21:21" pos:end="21:30"><expr pos:start="21:21" pos:end="21:30"><name pos:start="21:21" pos:end="21:30"><name pos:start="21:21" pos:end="21:21">a</name><index pos:start="21:22" pos:end="21:24">[<expr pos:start="21:23" pos:end="21:23"><name pos:start="21:23" pos:end="21:23">g</name></expr>]</index><index pos:start="21:25" pos:end="21:27">[<expr pos:start="21:26" pos:end="21:26"><name pos:start="21:26" pos:end="21:26">h</name></expr>]</index><index pos:start="21:28" pos:end="21:30">[<expr pos:start="21:29" pos:end="21:29"><name pos:start="21:29" pos:end="21:29">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <return pos:start="22:5" pos:end="22:13">return <expr pos:start="22:12" pos:end="22:12"><name pos:start="22:12" pos:end="22:12">s</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="24:1" pos:end="44:1"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:8">main</name><parameter_list pos:start="24:9" pos:end="24:10">()</parameter_list>
<block pos:start="25:1" pos:end="44:1">{<block_content pos:start="26:5" pos:end="43:13">
    <expr_stmt pos:start="26:5" pos:end="26:32"><expr pos:start="26:5" pos:end="26:31"><call pos:start="26:5" pos:end="26:31"><name pos:start="26:5" pos:end="26:11">freopen</name><argument_list pos:start="26:12" pos:end="26:31">(<argument pos:start="26:13" pos:end="26:18"><expr pos:start="26:13" pos:end="26:18"><literal type="string" pos:start="26:13" pos:end="26:18">"p.in"</literal></expr></argument>, <argument pos:start="26:21" pos:end="26:23"><expr pos:start="26:21" pos:end="26:23"><literal type="string" pos:start="26:21" pos:end="26:23">"r"</literal></expr></argument>, <argument pos:start="26:26" pos:end="26:30"><expr pos:start="26:26" pos:end="26:30"><name pos:start="26:26" pos:end="26:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><call pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:11">freopen</name><argument_list pos:start="27:12" pos:end="27:33">(<argument pos:start="27:13" pos:end="27:19"><expr pos:start="27:13" pos:end="27:19"><literal type="string" pos:start="27:13" pos:end="27:19">"p.out"</literal></expr></argument>, <argument pos:start="27:22" pos:end="27:24"><expr pos:start="27:22" pos:end="27:24"><literal type="string" pos:start="27:22" pos:end="27:24">"w"</literal></expr></argument>, <argument pos:start="27:27" pos:end="27:32"><expr pos:start="27:27" pos:end="27:32"><name pos:start="27:27" pos:end="27:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:13"><expr pos:start="28:5" pos:end="28:12"><name pos:start="28:5" pos:end="28:7">cin</name> <operator pos:start="28:9" pos:end="28:10">&gt;&gt;</operator> <name pos:start="28:12" pos:end="28:12">t</name></expr>;</expr_stmt>
    <for pos:start="29:5" pos:end="42:5">for<control pos:start="29:8" pos:end="29:30">(<init pos:start="29:9" pos:end="29:18"><decl pos:start="29:9" pos:end="29:17"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:13">i</name> <init pos:start="29:15" pos:end="29:17">= <expr pos:start="29:17" pos:end="29:17"><literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr></init></decl>;</init> <condition pos:start="29:20" pos:end="29:25"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:20">i</name> <operator pos:start="29:22" pos:end="29:22">&lt;</operator> <name pos:start="29:24" pos:end="29:24">t</name></expr>;</condition> <incr pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:27">i</name><operator pos:start="29:28" pos:end="29:29">++</operator></expr></incr>)</control>
    <block pos:start="30:5" pos:end="42:5">{<block_content pos:start="31:9" pos:end="41:28">
        <expr_stmt pos:start="31:9" pos:end="31:16"><expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ans</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:17"><expr pos:start="32:9" pos:end="32:16"><name pos:start="32:9" pos:end="32:11">cin</name> <operator pos:start="32:13" pos:end="32:14">&gt;&gt;</operator> <name pos:start="32:16" pos:end="32:16">n</name></expr>;</expr_stmt>
        <for pos:start="33:9" pos:end="37:9">for<control pos:start="33:12" pos:end="33:38">(<init pos:start="33:13" pos:end="33:22"><decl pos:start="33:13" pos:end="33:21"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:17">j</name> <init pos:start="33:19" pos:end="33:21">= <expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr></init></decl>;</init> <condition pos:start="33:24" pos:end="33:33"><expr pos:start="33:24" pos:end="33:32"><name pos:start="33:24" pos:end="33:24">j</name> <operator pos:start="33:26" pos:end="33:26">&lt;</operator> <name pos:start="33:28" pos:end="33:28">n</name> <operator pos:start="33:30" pos:end="33:30">-</operator> <literal type="number" pos:start="33:32" pos:end="33:32">1</literal></expr>;</condition> <incr pos:start="33:35" pos:end="33:37"><expr pos:start="33:35" pos:end="33:37"><name pos:start="33:35" pos:end="33:35">j</name><operator pos:start="33:36" pos:end="33:37">++</operator></expr></incr>)</control>
        <block pos:start="34:9" pos:end="37:9">{<block_content pos:start="35:13" pos:end="36:33">
            <expr_stmt pos:start="35:13" pos:end="35:26"><expr pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:15">cin</name> <operator pos:start="35:17" pos:end="35:18">&gt;&gt;</operator> <name pos:start="35:20" pos:end="35:20">x</name> <operator pos:start="35:22" pos:end="35:23">&gt;&gt;</operator> <name pos:start="35:25" pos:end="35:25">y</name></expr>;</expr_stmt>            
            <expr_stmt pos:start="36:13" pos:end="36:33"><expr pos:start="36:13" pos:end="36:32"><name pos:start="36:13" pos:end="36:19"><name pos:start="36:13" pos:end="36:13">a</name><index pos:start="36:14" pos:end="36:16">[<expr pos:start="36:15" pos:end="36:15"><name pos:start="36:15" pos:end="36:15">i</name></expr>]</index><index pos:start="36:17" pos:end="36:19">[<expr pos:start="36:18" pos:end="36:18"><name pos:start="36:18" pos:end="36:18">x</name></expr>]</index></name><operator pos:start="36:20" pos:end="36:20">.</operator><call pos:start="36:21" pos:end="36:32"><name pos:start="36:21" pos:end="36:29">push_back</name><argument_list pos:start="36:30" pos:end="36:32">(<argument pos:start="36:31" pos:end="36:31"><expr pos:start="36:31" pos:end="36:31"><name pos:start="36:31" pos:end="36:31">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="38:9" pos:end="40:22">for<control pos:start="38:12" pos:end="38:35">(<init pos:start="38:13" pos:end="38:22"><decl pos:start="38:13" pos:end="38:21"><type pos:start="38:13" pos:end="38:15"><name pos:start="38:13" pos:end="38:15">int</name></type> <name pos:start="38:17" pos:end="38:17">k</name> <init pos:start="38:19" pos:end="38:21">= <expr pos:start="38:21" pos:end="38:21"><literal type="number" pos:start="38:21" pos:end="38:21">1</literal></expr></init></decl>;</init> <condition pos:start="38:24" pos:end="38:30"><expr pos:start="38:24" pos:end="38:29"><name pos:start="38:24" pos:end="38:24">k</name> <operator pos:start="38:26" pos:end="38:27">&lt;=</operator> <name pos:start="38:29" pos:end="38:29">n</name></expr>;</condition> <incr pos:start="38:32" pos:end="38:34"><expr pos:start="38:32" pos:end="38:34"><name pos:start="38:32" pos:end="38:32">k</name><operator pos:start="38:33" pos:end="38:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:13" pos:end="40:22"><block_content pos:start="39:13" pos:end="40:22">
            <if_stmt pos:start="39:13" pos:end="40:22"><if pos:start="39:13" pos:end="40:22">if<condition pos:start="39:15" pos:end="39:76">(<expr pos:start="39:16" pos:end="39:75"><call pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:18">cal</name><argument_list pos:start="39:19" pos:end="39:34">(<argument pos:start="39:20" pos:end="39:20"><expr pos:start="39:20" pos:end="39:20"><name pos:start="39:20" pos:end="39:20">i</name></expr></argument>, <argument pos:start="39:23" pos:end="39:33"><expr pos:start="39:23" pos:end="39:33"><call pos:start="39:23" pos:end="39:33"><name pos:start="39:23" pos:end="39:27">check</name><argument_list pos:start="39:28" pos:end="39:33">(<argument pos:start="39:29" pos:end="39:29"><expr pos:start="39:29" pos:end="39:29"><name pos:start="39:29" pos:end="39:29">i</name></expr></argument>, <argument pos:start="39:32" pos:end="39:32"><expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">k</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="39:36" pos:end="39:37">&lt;=</operator> <call pos:start="39:39" pos:end="39:47"><name pos:start="39:39" pos:end="39:41">cal</name><argument_list pos:start="39:42" pos:end="39:47">(<argument pos:start="39:43" pos:end="39:43"><expr pos:start="39:43" pos:end="39:43"><name pos:start="39:43" pos:end="39:43">i</name></expr></argument>, <argument pos:start="39:46" pos:end="39:46"><expr pos:start="39:46" pos:end="39:46"><name pos:start="39:46" pos:end="39:46">k</name></expr></argument>)</argument_list></call> <operator pos:start="39:49" pos:end="39:51">and</operator> <call pos:start="39:53" pos:end="39:61"><name pos:start="39:53" pos:end="39:55">cal</name><argument_list pos:start="39:56" pos:end="39:61">(<argument pos:start="39:57" pos:end="39:57"><expr pos:start="39:57" pos:end="39:57"><name pos:start="39:57" pos:end="39:57">i</name></expr></argument>, <argument pos:start="39:60" pos:end="39:60"><expr pos:start="39:60" pos:end="39:60"><name pos:start="39:60" pos:end="39:60">k</name></expr></argument>)</argument_list></call> <operator pos:start="39:63" pos:end="39:64">&gt;=</operator> <call pos:start="39:66" pos:end="39:75"><name pos:start="39:66" pos:end="39:69">cals</name><argument_list pos:start="39:70" pos:end="39:75">(<argument pos:start="39:71" pos:end="39:71"><expr pos:start="39:71" pos:end="39:71"><name pos:start="39:71" pos:end="39:71">i</name></expr></argument>, <argument pos:start="39:74" pos:end="39:74"><expr pos:start="39:74" pos:end="39:74"><name pos:start="39:74" pos:end="39:74">k</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="40:17" pos:end="40:22"><block_content pos:start="40:17" pos:end="40:22">
                <expr_stmt pos:start="40:17" pos:end="40:22"><expr pos:start="40:17" pos:end="40:21"><name pos:start="40:17" pos:end="40:19">ans</name><operator pos:start="40:20" pos:end="40:21">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>
        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:12">cout</name> <operator pos:start="41:14" pos:end="41:15">&lt;&lt;</operator> <name pos:start="41:17" pos:end="41:19">ans</name> <operator pos:start="41:21" pos:end="41:22">&lt;&lt;</operator> <name pos:start="41:24" pos:end="41:27">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
