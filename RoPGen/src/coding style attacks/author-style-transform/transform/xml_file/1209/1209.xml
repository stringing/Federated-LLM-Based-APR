<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1209/1209.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:20">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:21"><decl pos:start="5:1" pos:end="5:11"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:7">idg</name><index pos:start="5:8" pos:end="5:11">[<expr pos:start="5:9" pos:end="5:10"><literal type="number" pos:start="5:9" pos:end="5:10">12</literal></expr>]</index></name></decl>, <decl pos:start="5:14" pos:end="5:20"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:14" pos:end="5:20"><name pos:start="5:14" pos:end="5:16">ira</name><index pos:start="5:17" pos:end="5:20">[<expr pos:start="5:18" pos:end="5:19"><literal type="number" pos:start="5:18" pos:end="5:19">12</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:15"><decl pos:start="6:1" pos:end="6:12"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:8">comb</name><index pos:start="6:9" pos:end="6:12">[<expr pos:start="6:10" pos:end="6:11"><literal type="number" pos:start="6:10" pos:end="6:11">12</literal></expr>]</index></name></decl>,<decl pos:start="6:14" pos:end="6:14"><type ref="prev" pos:start="6:1" pos:end="6:3"/><name pos:start="6:14" pos:end="6:14">a</name></decl>;</decl_stmt>

<function pos:start="8:1" pos:end="10:1"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">void</name></type> <name pos:start="8:6" pos:end="8:8">dfs</name><parameter_list pos:start="8:9" pos:end="8:24">(<parameter pos:start="8:10" pos:end="8:14"><decl pos:start="8:10" pos:end="8:14"><type pos:start="8:10" pos:end="8:14"><name pos:start="8:10" pos:end="8:12">int</name></type> <name pos:start="8:14" pos:end="8:14">x</name></decl></parameter>, <parameter pos:start="8:17" pos:end="8:23"><decl pos:start="8:17" pos:end="8:23"><type pos:start="8:17" pos:end="8:23"><name pos:start="8:17" pos:end="8:19">int</name></type> <name pos:start="8:21" pos:end="8:23">dep</name></decl></parameter>)</parameter_list><block pos:start="8:25" pos:end="10:1">{<block_content>
          
</block_content>}</block></function>

<function pos:start="12:1" pos:end="21:1"><type pos:start="12:1" pos:end="12:3"><name pos:start="12:1" pos:end="12:3">int</name></type> <name pos:start="12:5" pos:end="12:8">main</name> <parameter_list pos:start="12:10" pos:end="12:11">()</parameter_list><block pos:start="12:12" pos:end="21:1">{<block_content pos:start="13:5" pos:end="20:13">
    <expr_stmt pos:start="13:5" pos:end="13:36"><expr pos:start="13:5" pos:end="13:35"><call pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:11">freopen</name><argument_list pos:start="13:12" pos:end="13:35">(<argument pos:start="13:13" pos:end="13:22"><expr pos:start="13:13" pos:end="13:22"><literal type="string" pos:start="13:13" pos:end="13:22">"stone.in"</literal></expr></argument>, <argument pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><literal type="string" pos:start="13:25" pos:end="13:27">"w"</literal></expr></argument>, <argument pos:start="13:30" pos:end="13:34"><expr pos:start="13:30" pos:end="13:34"><name pos:start="13:30" pos:end="13:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:38"><expr pos:start="14:5" pos:end="14:37"><call pos:start="14:5" pos:end="14:37"><name pos:start="14:5" pos:end="14:11">freopen</name><argument_list pos:start="14:12" pos:end="14:37">(<argument pos:start="14:13" pos:end="14:23"><expr pos:start="14:13" pos:end="14:23"><literal type="string" pos:start="14:13" pos:end="14:23">"stone.out"</literal></expr></argument>, <argument pos:start="14:26" pos:end="14:28"><expr pos:start="14:26" pos:end="14:28"><literal type="string" pos:start="14:26" pos:end="14:28">"r"</literal></expr></argument>, <argument pos:start="14:31" pos:end="14:36"><expr pos:start="14:31" pos:end="14:36"><name pos:start="14:31" pos:end="14:36">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:19"><expr pos:start="16:5" pos:end="16:18"><call pos:start="16:5" pos:end="16:18"><name pos:start="16:5" pos:end="16:9">scanf</name><argument_list pos:start="16:10" pos:end="16:18">(<argument pos:start="16:11" pos:end="16:14"><expr pos:start="16:11" pos:end="16:14"><literal type="string" pos:start="16:11" pos:end="16:14">"%d"</literal></expr></argument>,<argument pos:start="16:16" pos:end="16:17"><expr pos:start="16:16" pos:end="16:17"><operator pos:start="16:16" pos:end="16:16">&amp;</operator><name pos:start="16:17" pos:end="16:17">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="17:5" pos:end="19:5">for <control pos:start="17:9" pos:end="17:31">(<init pos:start="17:10" pos:end="17:19"><decl pos:start="17:10" pos:end="17:18"><type pos:start="17:10" pos:end="17:12"><name pos:start="17:10" pos:end="17:12">int</name></type> <name pos:start="17:14" pos:end="17:14">i</name> <init pos:start="17:16" pos:end="17:18">= <expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr></init></decl>;</init> <condition pos:start="17:21" pos:end="17:26"><expr pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:21">i</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <name pos:start="17:25" pos:end="17:25">n</name></expr>;</condition> <incr pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:28">i</name><operator pos:start="17:29" pos:end="17:30">++</operator></expr></incr>)</control><block pos:start="17:32" pos:end="19:5">{<block_content pos:start="18:9" pos:end="18:39">
        <expr_stmt pos:start="18:9" pos:end="18:39"><expr pos:start="18:9" pos:end="18:38"><call pos:start="18:9" pos:end="18:38"><name pos:start="18:9" pos:end="18:13">scanf</name><argument_list pos:start="18:14" pos:end="18:38">(<argument pos:start="18:15" pos:end="18:21"><expr pos:start="18:15" pos:end="18:21"><literal type="string" pos:start="18:15" pos:end="18:21">"%d %d"</literal></expr></argument>,<argument pos:start="18:23" pos:end="18:29"><expr pos:start="18:23" pos:end="18:29"><operator pos:start="18:23" pos:end="18:23">&amp;</operator><name pos:start="18:24" pos:end="18:29"><name pos:start="18:24" pos:end="18:26">idg</name><index pos:start="18:27" pos:end="18:29">[<expr pos:start="18:28" pos:end="18:28"><name pos:start="18:28" pos:end="18:28">i</name></expr>]</index></name></expr></argument>,<argument pos:start="18:31" pos:end="18:37"><expr pos:start="18:31" pos:end="18:37"><operator pos:start="18:31" pos:end="18:31">&amp;</operator><name pos:start="18:32" pos:end="18:37"><name pos:start="18:32" pos:end="18:34">ira</name><index pos:start="18:35" pos:end="18:37">[<expr pos:start="18:36" pos:end="18:36"><name pos:start="18:36" pos:end="18:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="20:5" pos:end="20:13">return <expr pos:start="20:12" pos:end="20:12"><literal type="number" pos:start="20:12" pos:end="20:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
