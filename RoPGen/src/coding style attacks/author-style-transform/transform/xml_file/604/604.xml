<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/604/604.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="12:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">sum</name><parameter_list pos:start="3:8" pos:end="3:14">(<parameter pos:start="3:9" pos:end="3:13"><decl pos:start="3:9" pos:end="3:13"><type pos:start="3:9" pos:end="3:11"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:13">x</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="12:1">{<block_content pos:start="5:5" pos:end="11:13">
    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">s</name> <init pos:start="5:11" pos:end="5:13">= <expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="6:5" pos:end="10:5">while<condition pos:start="6:10" pos:end="6:12">(<expr pos:start="6:11" pos:end="6:11"><name pos:start="6:11" pos:end="6:11">x</name></expr>)</condition>
    <block pos:start="7:5" pos:end="10:5">{<block_content pos:start="8:9" pos:end="9:14">
        <expr_stmt pos:start="8:9" pos:end="8:16"><expr pos:start="8:9" pos:end="8:15"><name pos:start="8:9" pos:end="8:9">s</name><operator pos:start="8:10" pos:end="8:11">+=</operator><name pos:start="8:12" pos:end="8:12">x</name><operator pos:start="8:13" pos:end="8:13">%</operator><literal type="number" pos:start="8:14" pos:end="8:15">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:14"><expr pos:start="9:9" pos:end="9:13"><name pos:start="9:9" pos:end="9:9">x</name><operator pos:start="9:10" pos:end="9:11">/=</operator><literal type="number" pos:start="9:12" pos:end="9:13">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="11:5" pos:end="11:13">return <expr pos:start="11:12" pos:end="11:12"><name pos:start="11:12" pos:end="11:12">s</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="13:1" pos:end="25:1"><type pos:start="13:1" pos:end="13:4"><name pos:start="13:1" pos:end="13:4">bool</name></type> <name pos:start="13:6" pos:end="13:8">cmp</name><parameter_list pos:start="13:9" pos:end="13:21">(<parameter pos:start="13:10" pos:end="13:14"><decl pos:start="13:10" pos:end="13:14"><type pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:12">int</name></type> <name pos:start="13:14" pos:end="13:14">x</name></decl></parameter>,<parameter pos:start="13:16" pos:end="13:20"><decl pos:start="13:16" pos:end="13:20"><type pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:18">int</name></type> <name pos:start="13:20" pos:end="13:20">y</name></decl></parameter>)</parameter_list>
<block pos:start="14:1" pos:end="25:1">{<block_content pos:start="15:5" pos:end="24:5">
    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">sx</name> <init pos:start="15:12" pos:end="15:19">= <expr pos:start="15:14" pos:end="15:19"><call pos:start="15:14" pos:end="15:19"><name pos:start="15:14" pos:end="15:16">sum</name><argument_list pos:start="15:17" pos:end="15:19">(<argument pos:start="15:18" pos:end="15:18"><expr pos:start="15:18" pos:end="15:18"><name pos:start="15:18" pos:end="15:18">x</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="16:5" pos:end="16:20"><decl pos:start="16:5" pos:end="16:19"><type pos:start="16:5" pos:end="16:7"><name pos:start="16:5" pos:end="16:7">int</name></type> <name pos:start="16:9" pos:end="16:10">sy</name> <init pos:start="16:12" pos:end="16:19">= <expr pos:start="16:14" pos:end="16:19"><call pos:start="16:14" pos:end="16:19"><name pos:start="16:14" pos:end="16:16">sum</name><argument_list pos:start="16:17" pos:end="16:19">(<argument pos:start="16:18" pos:end="16:18"><expr pos:start="16:18" pos:end="16:18"><name pos:start="16:18" pos:end="16:18">y</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="17:5" pos:end="24:5"><if pos:start="17:5" pos:end="20:5">if<condition pos:start="17:7" pos:end="17:13">(<expr pos:start="17:8" pos:end="17:12"><name pos:start="17:8" pos:end="17:9">sx</name><operator pos:start="17:10" pos:end="17:10">&lt;</operator><name pos:start="17:11" pos:end="17:12">sy</name></expr>)</condition>
    <block pos:start="18:5" pos:end="20:5">{<block_content pos:start="19:9" pos:end="19:19">
        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:16">x</name><operator pos:start="19:17" pos:end="19:17">&lt;</operator><name pos:start="19:18" pos:end="19:18">y</name></expr>;</return>
    </block_content>}</block></if>
    <else pos:start="21:5" pos:end="24:5">else
    <block pos:start="22:5" pos:end="24:5">{<block_content pos:start="23:9" pos:end="23:21">
        <return pos:start="23:9" pos:end="23:21">return <expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:17">sx</name><operator pos:start="23:18" pos:end="23:18">&lt;</operator><name pos:start="23:19" pos:end="23:20">sy</name></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="26:1" pos:end="39:1"><type pos:start="26:1" pos:end="26:3"><name pos:start="26:1" pos:end="26:3">int</name></type> <name pos:start="26:5" pos:end="26:8">main</name><parameter_list pos:start="26:9" pos:end="26:10">()</parameter_list>
<block pos:start="27:1" pos:end="39:1">{<block_content pos:start="28:5" pos:end="38:5">
    <decl_stmt pos:start="28:5" pos:end="28:19"><decl pos:start="28:5" pos:end="28:9"><type pos:start="28:5" pos:end="28:7"><name pos:start="28:5" pos:end="28:7">int</name></type> <name pos:start="28:9" pos:end="28:9">n</name></decl>,<decl pos:start="28:11" pos:end="28:18"><type ref="prev" pos:start="28:5" pos:end="28:7"/><name pos:start="28:11" pos:end="28:18"><name pos:start="28:11" pos:end="28:11">a</name><index pos:start="28:12" pos:end="28:18">[<expr pos:start="28:13" pos:end="28:17"><literal type="number" pos:start="28:13" pos:end="28:17">10000</literal></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:11"><expr pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:7">cin</name><operator pos:start="29:8" pos:end="29:9">&gt;&gt;</operator><name pos:start="29:10" pos:end="29:10">n</name></expr>;</expr_stmt>
    <for pos:start="30:5" pos:end="33:5">for<control pos:start="30:8" pos:end="30:26">(<init pos:start="30:9" pos:end="30:18"><decl pos:start="30:9" pos:end="30:17"><type pos:start="30:9" pos:end="30:11"><name pos:start="30:9" pos:end="30:11">int</name></type> <name pos:start="30:13" pos:end="30:13">i</name> <init pos:start="30:15" pos:end="30:17">= <expr pos:start="30:17" pos:end="30:17"><literal type="number" pos:start="30:17" pos:end="30:17">0</literal></expr></init></decl>;</init><condition pos:start="30:19" pos:end="30:22"><expr pos:start="30:19" pos:end="30:21"><name pos:start="30:19" pos:end="30:19">i</name><operator pos:start="30:20" pos:end="30:20">&lt;</operator><name pos:start="30:21" pos:end="30:21">n</name></expr>;</condition><incr pos:start="30:23" pos:end="30:25"><expr pos:start="30:23" pos:end="30:25"><name pos:start="30:23" pos:end="30:23">i</name><operator pos:start="30:24" pos:end="30:25">++</operator></expr></incr>)</control>
    <block pos:start="31:5" pos:end="33:5">{<block_content pos:start="32:9" pos:end="32:18">
        <expr_stmt pos:start="32:9" pos:end="32:18"><expr pos:start="32:9" pos:end="32:17"><name pos:start="32:9" pos:end="32:11">cin</name><operator pos:start="32:12" pos:end="32:13">&gt;&gt;</operator><name pos:start="32:14" pos:end="32:17"><name pos:start="32:14" pos:end="32:14">a</name><index pos:start="32:15" pos:end="32:17">[<expr pos:start="32:16" pos:end="32:16"><name pos:start="32:16" pos:end="32:16">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="34:5" pos:end="34:20"><expr pos:start="34:5" pos:end="34:19"><call pos:start="34:5" pos:end="34:19"><name pos:start="34:5" pos:end="34:8">sort</name><argument_list pos:start="34:9" pos:end="34:19">(<argument pos:start="34:10" pos:end="34:10"><expr pos:start="34:10" pos:end="34:10"><name pos:start="34:10" pos:end="34:10">a</name></expr></argument>,<argument pos:start="34:12" pos:end="34:14"><expr pos:start="34:12" pos:end="34:14"><name pos:start="34:12" pos:end="34:12">a</name><operator pos:start="34:13" pos:end="34:13">+</operator><name pos:start="34:14" pos:end="34:14">n</name></expr></argument>,<argument pos:start="34:16" pos:end="34:18"><expr pos:start="34:16" pos:end="34:18"><name pos:start="34:16" pos:end="34:18">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="35:5" pos:end="38:5">for<control pos:start="35:8" pos:end="35:26">(<init pos:start="35:9" pos:end="35:18"><decl pos:start="35:9" pos:end="35:17"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:13">i</name> <init pos:start="35:15" pos:end="35:17">= <expr pos:start="35:17" pos:end="35:17"><literal type="number" pos:start="35:17" pos:end="35:17">0</literal></expr></init></decl>;</init><condition pos:start="35:19" pos:end="35:22"><expr pos:start="35:19" pos:end="35:21"><name pos:start="35:19" pos:end="35:19">i</name><operator pos:start="35:20" pos:end="35:20">&lt;</operator><name pos:start="35:21" pos:end="35:21">n</name></expr>;</condition><incr pos:start="35:23" pos:end="35:25"><expr pos:start="35:23" pos:end="35:25"><name pos:start="35:23" pos:end="35:23">i</name><operator pos:start="35:24" pos:end="35:25">++</operator></expr></incr>)</control>
    <block pos:start="36:5" pos:end="38:5">{<block_content pos:start="37:9" pos:end="37:24">  
        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:12">cout</name><operator pos:start="37:13" pos:end="37:14">&lt;&lt;</operator><name pos:start="37:15" pos:end="37:18"><name pos:start="37:15" pos:end="37:15">a</name><index pos:start="37:16" pos:end="37:18">[<expr pos:start="37:17" pos:end="37:17"><name pos:start="37:17" pos:end="37:17">i</name></expr>]</index></name><operator pos:start="37:19" pos:end="37:20">&lt;&lt;</operator><literal type="char" pos:start="37:21" pos:end="37:23">' '</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
</unit>
