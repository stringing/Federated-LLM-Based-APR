<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/937/937.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:10"><decl pos:start="3:1" pos:end="3:9"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:9"><name pos:start="3:5" pos:end="3:5">a</name><index pos:start="3:6" pos:end="3:9">[<expr pos:start="3:7" pos:end="3:8"><literal type="number" pos:start="3:7" pos:end="3:8">25</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:12"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">n</name></decl>,<decl pos:start="4:7" pos:end="4:7"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:7" pos:end="4:7">m</name></decl>,<decl pos:start="4:9" pos:end="4:11"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:9" pos:end="4:11">ans</name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="12:1"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">void</name></type> <name pos:start="5:6" pos:end="5:8">dfs</name><parameter_list pos:start="5:9" pos:end="5:23">(<parameter pos:start="5:10" pos:end="5:14"><decl pos:start="5:10" pos:end="5:14"><type pos:start="5:10" pos:end="5:14"><name pos:start="5:10" pos:end="5:12">int</name></type> <name pos:start="5:14" pos:end="5:14">x</name></decl></parameter>,<parameter pos:start="5:16" pos:end="5:22"><decl pos:start="5:16" pos:end="5:22"><type pos:start="5:16" pos:end="5:22"><name pos:start="5:16" pos:end="5:18">int</name></type> <name pos:start="5:20" pos:end="5:22">sum</name></decl></parameter>)</parameter_list><block pos:start="5:24" pos:end="12:1">{<block_content pos:start="6:3" pos:end="11:15">
  <if_stmt pos:start="6:3" pos:end="10:3"><if pos:start="6:3" pos:end="10:3">if<condition pos:start="6:5" pos:end="6:10">(<expr pos:start="6:6" pos:end="6:9"><name pos:start="6:6" pos:end="6:6">x</name><operator pos:start="6:7" pos:end="6:8">==</operator><name pos:start="6:9" pos:end="6:9">n</name></expr>)</condition><block pos:start="6:11" pos:end="10:3">{<block_content pos:start="7:5" pos:end="9:12">
    <if_stmt pos:start="7:5" pos:end="9:5"><if pos:start="7:5" pos:end="9:5">if<condition pos:start="7:7" pos:end="7:25">(<expr pos:start="7:8" pos:end="7:24"><name pos:start="7:8" pos:end="7:10">sum</name><operator pos:start="7:11" pos:end="7:11">&gt;</operator><operator pos:start="7:12" pos:end="7:12">-</operator><name pos:start="7:13" pos:end="7:13">m</name><operator pos:start="7:14" pos:end="7:15">&amp;&amp;</operator><name pos:start="7:16" pos:end="7:18">sum</name><operator pos:start="7:19" pos:end="7:19">-</operator><name pos:start="7:20" pos:end="7:20">m</name><operator pos:start="7:21" pos:end="7:21">&lt;</operator><name pos:start="7:22" pos:end="7:24">ans</name></expr>)</condition><block pos:start="7:26" pos:end="9:5">{<block_content pos:start="8:7" pos:end="8:16">
      <expr_stmt pos:start="8:7" pos:end="8:16"><expr pos:start="8:7" pos:end="8:15"><name pos:start="8:7" pos:end="8:9">ans</name><operator pos:start="8:10" pos:end="8:10">=</operator><name pos:start="8:11" pos:end="8:13">sum</name><operator pos:start="8:14" pos:end="8:14">-</operator><name pos:start="8:15" pos:end="8:15">m</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt><return pos:start="9:6" pos:end="9:12">return;</return>
  </block_content>}</block></if></if_stmt><expr_stmt pos:start="10:4" pos:end="10:21"><expr pos:start="10:4" pos:end="10:20"><call pos:start="10:4" pos:end="10:20"><name pos:start="10:4" pos:end="10:6">dfs</name><argument_list pos:start="10:7" pos:end="10:20">(<argument pos:start="10:8" pos:end="10:10"><expr pos:start="10:8" pos:end="10:10"><name pos:start="10:8" pos:end="10:8">x</name><operator pos:start="10:9" pos:end="10:9">+</operator><literal type="number" pos:start="10:10" pos:end="10:10">1</literal></expr></argument>,<argument pos:start="10:12" pos:end="10:19"><expr pos:start="10:12" pos:end="10:19"><name pos:start="10:12" pos:end="10:14">sum</name><operator pos:start="10:15" pos:end="10:15">+</operator><name pos:start="10:16" pos:end="10:19"><name pos:start="10:16" pos:end="10:16">a</name><index pos:start="10:17" pos:end="10:19">[<expr pos:start="10:18" pos:end="10:18"><name pos:start="10:18" pos:end="10:18">x</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt pos:start="11:3" pos:end="11:15"><expr pos:start="11:3" pos:end="11:14"><call pos:start="11:3" pos:end="11:14"><name pos:start="11:3" pos:end="11:5">dfs</name><argument_list pos:start="11:6" pos:end="11:14">(<argument pos:start="11:7" pos:end="11:9"><expr pos:start="11:7" pos:end="11:9"><name pos:start="11:7" pos:end="11:7">x</name><operator pos:start="11:8" pos:end="11:8">+</operator><literal type="number" pos:start="11:9" pos:end="11:9">2</literal></expr></argument>,<argument pos:start="11:11" pos:end="11:13"><expr pos:start="11:11" pos:end="11:13"><name pos:start="11:11" pos:end="11:13">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="13:1" pos:end="23:1"><type pos:start="13:1" pos:end="13:3"><name pos:start="13:1" pos:end="13:3">int</name></type> <name pos:start="13:5" pos:end="13:8">main</name><parameter_list pos:start="13:9" pos:end="13:10">()</parameter_list>
<block pos:start="14:1" pos:end="23:1">{<block_content pos:start="15:3" pos:end="22:11">
  <expr_stmt pos:start="15:3" pos:end="15:32"><expr pos:start="15:3" pos:end="15:31"><call pos:start="15:3" pos:end="15:31"><name pos:start="15:3" pos:end="15:9">freopen</name><argument_list pos:start="15:10" pos:end="15:31">(<argument pos:start="15:11" pos:end="15:20"><expr pos:start="15:11" pos:end="15:20"><literal type="string" pos:start="15:11" pos:end="15:20">"shelf.in"</literal></expr></argument>,<argument pos:start="15:22" pos:end="15:24"><expr pos:start="15:22" pos:end="15:24"><literal type="string" pos:start="15:22" pos:end="15:24">"r"</literal></expr></argument>,<argument pos:start="15:26" pos:end="15:30"><expr pos:start="15:26" pos:end="15:30"><name pos:start="15:26" pos:end="15:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt pos:start="16:3" pos:end="16:34"><expr pos:start="16:3" pos:end="16:33"><call pos:start="16:3" pos:end="16:33"><name pos:start="16:3" pos:end="16:9">freopen</name><argument_list pos:start="16:10" pos:end="16:33">(<argument pos:start="16:11" pos:end="16:21"><expr pos:start="16:11" pos:end="16:21"><literal type="string" pos:start="16:11" pos:end="16:21">"shelf.out"</literal></expr></argument>,<argument pos:start="16:23" pos:end="16:25"><expr pos:start="16:23" pos:end="16:25"><literal type="string" pos:start="16:23" pos:end="16:25">"w"</literal></expr></argument>,<argument pos:start="16:27" pos:end="16:32"><expr pos:start="16:27" pos:end="16:32"><name pos:start="16:27" pos:end="16:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt pos:start="17:3" pos:end="17:12"><expr pos:start="17:3" pos:end="17:11"><name pos:start="17:3" pos:end="17:5">cin</name><operator pos:start="17:6" pos:end="17:7">&gt;&gt;</operator><name pos:start="17:8" pos:end="17:8">n</name><operator pos:start="17:9" pos:end="17:10">&gt;&gt;</operator><name pos:start="17:11" pos:end="17:11">m</name></expr>;</expr_stmt>
  <expr_stmt pos:start="18:3" pos:end="18:15"><expr pos:start="18:3" pos:end="18:14"><name pos:start="18:3" pos:end="18:5">ans</name><operator pos:start="18:6" pos:end="18:6">=</operator><literal type="number" pos:start="18:7" pos:end="18:14">0x3f3f3f</literal></expr>;</expr_stmt> <for pos:start="18:17" pos:end="19:14">for<control pos:start="18:20" pos:end="18:36">(<init pos:start="18:21" pos:end="18:28"><decl pos:start="18:21" pos:end="18:27"><type pos:start="18:21" pos:end="18:23"><name pos:start="18:21" pos:end="18:23">int</name></type> <name pos:start="18:25" pos:end="18:25">i</name><init pos:start="18:26" pos:end="18:27">=<expr pos:start="18:27" pos:end="18:27"><literal type="number" pos:start="18:27" pos:end="18:27">0</literal></expr></init></decl>;</init><condition pos:start="18:29" pos:end="18:32"><expr pos:start="18:29" pos:end="18:31"><name pos:start="18:29" pos:end="18:29">i</name><operator pos:start="18:30" pos:end="18:30">&lt;</operator><name pos:start="18:31" pos:end="18:31">n</name></expr>;</condition><incr pos:start="18:33" pos:end="18:35"><expr pos:start="18:33" pos:end="18:35"><name pos:start="18:33" pos:end="18:33">i</name><operator pos:start="18:34" pos:end="18:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:5" pos:end="19:14"><block_content pos:start="19:5" pos:end="19:14">
    <expr_stmt pos:start="19:5" pos:end="19:14"><expr pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:7">cin</name><operator pos:start="19:8" pos:end="19:9">&gt;&gt;</operator><name pos:start="19:10" pos:end="19:13"><name pos:start="19:10" pos:end="19:10">a</name><index pos:start="19:11" pos:end="19:13">[<expr pos:start="19:12" pos:end="19:12"><name pos:start="19:12" pos:end="19:12">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
<expr_stmt pos:start="20:1" pos:end="20:9"><expr pos:start="20:1" pos:end="20:8"><call pos:start="20:1" pos:end="20:8"><name pos:start="20:1" pos:end="20:3">dfs</name><argument_list pos:start="20:4" pos:end="20:8">(<argument pos:start="20:5" pos:end="20:5"><expr pos:start="20:5" pos:end="20:5"><literal type="number" pos:start="20:5" pos:end="20:5">0</literal></expr></argument>,<argument pos:start="20:7" pos:end="20:7"><expr pos:start="20:7" pos:end="20:7"><literal type="number" pos:start="20:7" pos:end="20:7">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt pos:start="21:3" pos:end="21:21"><expr pos:start="21:3" pos:end="21:20"><call pos:start="21:3" pos:end="21:20"><name pos:start="21:3" pos:end="21:8">printf</name><argument_list pos:start="21:9" pos:end="21:20">(<argument pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:15"><literal type="string" pos:start="21:10" pos:end="21:15">"%d\n"</literal></expr></argument>,<argument pos:start="21:17" pos:end="21:19"><expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:19">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return pos:start="22:3" pos:end="22:11">return <expr pos:start="22:10" pos:end="22:10"><literal type="number" pos:start="22:10" pos:end="22:10">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
