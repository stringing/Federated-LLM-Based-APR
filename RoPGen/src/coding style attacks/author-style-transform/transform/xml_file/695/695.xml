<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/695/695.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:15">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:15">&lt;stack&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="60:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="60:1">{<block_content pos:start="5:3" pos:end="59:11">
  <decl_stmt pos:start="5:3" pos:end="5:8"><decl pos:start="5:3" pos:end="5:7"><type pos:start="5:3" pos:end="5:5"><name pos:start="5:3" pos:end="5:5">int</name></type> <name pos:start="5:7" pos:end="5:7">n</name></decl>;</decl_stmt>
  <expr_stmt pos:start="6:3" pos:end="6:11"><expr pos:start="6:3" pos:end="6:10"><name pos:start="6:3" pos:end="6:5">cin</name> <operator pos:start="6:7" pos:end="6:8">&gt;&gt;</operator> <name pos:start="6:10" pos:end="6:10">n</name></expr>;</expr_stmt>
  <decl_stmt pos:start="7:3" pos:end="7:18"><decl pos:start="7:3" pos:end="7:14"><type pos:start="7:3" pos:end="7:12"><name pos:start="7:3" pos:end="7:12"><name pos:start="7:3" pos:end="7:7">stack</name><argument_list type="generic" pos:start="7:8" pos:end="7:12">&lt;<argument pos:start="7:9" pos:end="7:11"><expr pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="7:14" pos:end="7:14">a</name></decl>, <decl pos:start="7:17" pos:end="7:17"><type ref="prev" pos:start="7:3" pos:end="7:12"/><name pos:start="7:17" pos:end="7:17">b</name></decl>;</decl_stmt>
  <while pos:start="8:3" pos:end="39:3">while<condition pos:start="8:8" pos:end="8:12">(<expr pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:9">n</name><operator pos:start="8:10" pos:end="8:11">--</operator></expr>)</condition><block pos:start="8:13" pos:end="39:3">{<block_content pos:start="9:5" pos:end="38:5">
    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:10">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:13"><expr pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:7">cin</name> <operator pos:start="10:9" pos:end="10:10">&gt;&gt;</operator> <name pos:start="10:12" pos:end="10:12">s</name></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="38:5"><if pos:start="11:5" pos:end="33:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:9">s</name> <operator pos:start="11:11" pos:end="11:12">==</operator> <literal type="char" pos:start="11:14" pos:end="11:16">'A'</literal></expr>)</condition><block pos:start="11:18" pos:end="33:5">{<block_content pos:start="12:7" pos:end="32:7">
      <decl_stmt pos:start="12:7" pos:end="12:13"><decl pos:start="12:7" pos:end="12:12"><type pos:start="12:7" pos:end="12:10"><name pos:start="12:7" pos:end="12:10">char</name></type> <name pos:start="12:12" pos:end="12:12">x</name></decl>;</decl_stmt>
      <expr_stmt pos:start="13:7" pos:end="13:15"><expr pos:start="13:7" pos:end="13:14"><name pos:start="13:7" pos:end="13:9">cin</name> <operator pos:start="13:11" pos:end="13:12">&gt;&gt;</operator> <name pos:start="13:14" pos:end="13:14">x</name></expr>;</expr_stmt>
      <if_stmt pos:start="14:7" pos:end="32:7"><if pos:start="14:7" pos:end="18:7">if <condition pos:start="14:10" pos:end="14:19">(<expr pos:start="14:11" pos:end="14:18"><name pos:start="14:11" pos:end="14:11">x</name> <operator pos:start="14:13" pos:end="14:14">==</operator> <literal type="char" pos:start="14:16" pos:end="14:18">'I'</literal></expr>)</condition><block pos:start="14:20" pos:end="18:7">{<block_content pos:start="15:9" pos:end="17:21">
        <decl_stmt pos:start="15:9" pos:end="15:17"><decl pos:start="15:9" pos:end="15:16"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:16">data</name></decl>;</decl_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:20"><expr pos:start="16:9" pos:end="16:19"><name pos:start="16:9" pos:end="16:11">cin</name> <operator pos:start="16:13" pos:end="16:14">&gt;&gt;</operator> <name pos:start="16:16" pos:end="16:19">data</name></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:21"><expr pos:start="17:9" pos:end="17:20"><call pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:9">a</name><operator pos:start="17:10" pos:end="17:10">.</operator><name pos:start="17:11" pos:end="17:14">push</name></name><argument_list pos:start="17:15" pos:end="17:20">(<argument pos:start="17:16" pos:end="17:19"><expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if><if type="elseif" pos:start="18:8" pos:end="22:7">else if <condition pos:start="18:16" pos:end="18:25">(<expr pos:start="18:17" pos:end="18:24"><name pos:start="18:17" pos:end="18:17">x</name> <operator pos:start="18:19" pos:end="18:20">==</operator> <literal type="char" pos:start="18:22" pos:end="18:24">'D'</literal></expr>)</condition><block pos:start="18:26" pos:end="22:7">{<block_content pos:start="19:9" pos:end="21:9">
        <if_stmt pos:start="19:9" pos:end="21:9"><if pos:start="19:9" pos:end="21:9">if <condition pos:start="19:12" pos:end="19:23">(<expr pos:start="19:13" pos:end="19:22"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:22"><name pos:start="19:14" pos:end="19:20"><name pos:start="19:14" pos:end="19:14">a</name><operator pos:start="19:15" pos:end="19:15">.</operator><name pos:start="19:16" pos:end="19:20">empty</name></name><argument_list pos:start="19:21" pos:end="19:22">()</argument_list></call></expr>)</condition><block pos:start="19:24" pos:end="21:9">{<block_content pos:start="20:11" pos:end="20:18">
          <expr_stmt pos:start="20:11" pos:end="20:18"><expr pos:start="20:11" pos:end="20:17"><call pos:start="20:11" pos:end="20:17"><name pos:start="20:11" pos:end="20:15"><name pos:start="20:11" pos:end="20:11">a</name><operator pos:start="20:12" pos:end="20:12">.</operator><name pos:start="20:13" pos:end="20:15">pop</name></name><argument_list pos:start="20:16" pos:end="20:17">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></if><else pos:start="22:8" pos:end="32:7">else<block pos:start="22:12" pos:end="32:7">{<block_content pos:start="23:9" pos:end="31:9">
        <decl_stmt pos:start="23:9" pos:end="23:21"><decl pos:start="23:9" pos:end="23:20"><type pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:13">stack</name><argument_list type="generic" pos:start="23:14" pos:end="23:18">&lt;<argument pos:start="23:15" pos:end="23:17"><expr pos:start="23:15" pos:end="23:17"><name pos:start="23:15" pos:end="23:17">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="23:20" pos:end="23:20">c</name></decl>;</decl_stmt>
        <while pos:start="24:9" pos:end="27:9">while<condition pos:start="24:14" pos:end="24:25">(<expr pos:start="24:15" pos:end="24:24"><operator pos:start="24:15" pos:end="24:15">!</operator><call pos:start="24:16" pos:end="24:24"><name pos:start="24:16" pos:end="24:22"><name pos:start="24:16" pos:end="24:16">b</name><operator pos:start="24:17" pos:end="24:17">.</operator><name pos:start="24:18" pos:end="24:22">empty</name></name><argument_list pos:start="24:23" pos:end="24:24">()</argument_list></call></expr>)</condition><block pos:start="24:26" pos:end="27:9">{<block_content pos:start="25:11" pos:end="25:26">
          <expr_stmt pos:start="25:11" pos:end="25:26"><expr pos:start="25:11" pos:end="25:25"><call pos:start="25:11" pos:end="25:25"><name pos:start="25:11" pos:end="25:16"><name pos:start="25:11" pos:end="25:11">c</name><operator pos:start="25:12" pos:end="25:12">.</operator><name pos:start="25:13" pos:end="25:16">push</name></name><argument_list pos:start="25:17" pos:end="25:25">(<argument pos:start="25:18" pos:end="25:24"><expr pos:start="25:18" pos:end="25:24"><call pos:start="25:18" pos:end="25:24"><name pos:start="25:18" pos:end="25:22"><name pos:start="25:18" pos:end="25:18">b</name><operator pos:start="25:19" pos:end="25:19">.</operator><name pos:start="25:20" pos:end="25:22">top</name></name><argument_list pos:start="25:23" pos:end="25:24">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          
        </block_content>}</block></while>
        <while pos:start="28:9" pos:end="31:9">while<condition pos:start="28:14" pos:end="28:25">(<expr pos:start="28:15" pos:end="28:24"><operator pos:start="28:15" pos:end="28:15">!</operator><call pos:start="28:16" pos:end="28:24"><name pos:start="28:16" pos:end="28:22"><name pos:start="28:16" pos:end="28:16">c</name><operator pos:start="28:17" pos:end="28:17">.</operator><name pos:start="28:18" pos:end="28:22">empty</name></name><argument_list pos:start="28:23" pos:end="28:24">()</argument_list></call></expr>)</condition><block pos:start="28:26" pos:end="31:9">{<block_content pos:start="29:11" pos:end="29:26">
          <expr_stmt pos:start="29:11" pos:end="29:26"><expr pos:start="29:11" pos:end="29:25"><call pos:start="29:11" pos:end="29:25"><name pos:start="29:11" pos:end="29:16"><name pos:start="29:11" pos:end="29:11">a</name><operator pos:start="29:12" pos:end="29:12">.</operator><name pos:start="29:13" pos:end="29:16">push</name></name><argument_list pos:start="29:17" pos:end="29:25">(<argument pos:start="29:18" pos:end="29:24"><expr pos:start="29:18" pos:end="29:24"><call pos:start="29:18" pos:end="29:24"><name pos:start="29:18" pos:end="29:22"><name pos:start="29:18" pos:end="29:18">c</name><operator pos:start="29:19" pos:end="29:19">.</operator><name pos:start="29:20" pos:end="29:22">top</name></name><argument_list pos:start="29:23" pos:end="29:24">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          
        </block_content>}</block></while>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></if><else pos:start="33:6" pos:end="38:5">else<block pos:start="33:10" pos:end="38:5">{<block_content pos:start="34:7" pos:end="37:9">
      <while pos:start="34:7" pos:end="37:9">while<condition pos:start="34:12" pos:end="34:23">(<expr pos:start="34:13" pos:end="34:22"><operator pos:start="34:13" pos:end="34:13">!</operator><call pos:start="34:14" pos:end="34:22"><name pos:start="34:14" pos:end="34:20"><name pos:start="34:14" pos:end="34:14">b</name><operator pos:start="34:15" pos:end="34:15">.</operator><name pos:start="34:16" pos:end="34:20">empty</name></name><argument_list pos:start="34:21" pos:end="34:22">()</argument_list></call></expr>)</condition><block pos:start="34:24" pos:end="37:9">{<block_content pos:start="35:11" pos:end="36:18">
          <expr_stmt pos:start="35:11" pos:end="35:26"><expr pos:start="35:11" pos:end="35:25"><call pos:start="35:11" pos:end="35:25"><name pos:start="35:11" pos:end="35:16"><name pos:start="35:11" pos:end="35:11">c</name><operator pos:start="35:12" pos:end="35:12">.</operator><name pos:start="35:13" pos:end="35:16">push</name></name><argument_list pos:start="35:17" pos:end="35:25">(<argument pos:start="35:18" pos:end="35:24"><expr pos:start="35:18" pos:end="35:24"><call pos:start="35:18" pos:end="35:24"><name pos:start="35:18" pos:end="35:22"><name pos:start="35:18" pos:end="35:18">b</name><operator pos:start="35:19" pos:end="35:19">.</operator><name pos:start="35:20" pos:end="35:22">top</name></name><argument_list pos:start="35:23" pos:end="35:24">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt pos:start="36:11" pos:end="36:18"><expr pos:start="36:11" pos:end="36:17"><call pos:start="36:11" pos:end="36:17"><name pos:start="36:11" pos:end="36:15"><name pos:start="36:11" pos:end="36:11">b</name><operator pos:start="36:12" pos:end="36:12">.</operator><name pos:start="36:13" pos:end="36:15">pop</name></name><argument_list pos:start="36:16" pos:end="36:17">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></while>
  <decl_stmt pos:start="40:3" pos:end="40:14"><decl pos:start="40:3" pos:end="40:13"><type pos:start="40:3" pos:end="40:12"><name pos:start="40:3" pos:end="40:12"><name pos:start="40:3" pos:end="40:7">stack</name><argument_list type="generic" pos:start="40:8" pos:end="40:12">&lt;<argument pos:start="40:9" pos:end="40:11"><expr pos:start="40:9" pos:end="40:11"><name pos:start="40:9" pos:end="40:11">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="40:13" pos:end="40:13">c</name></decl>;</decl_stmt>
  <while pos:start="41:3" pos:end="44:3">while<condition pos:start="41:8" pos:end="41:19">(<expr pos:start="41:9" pos:end="41:18"><operator pos:start="41:9" pos:end="41:9">!</operator><call pos:start="41:10" pos:end="41:18"><name pos:start="41:10" pos:end="41:16"><name pos:start="41:10" pos:end="41:10">a</name><operator pos:start="41:11" pos:end="41:11">.</operator><name pos:start="41:12" pos:end="41:16">empty</name></name><argument_list pos:start="41:17" pos:end="41:18">()</argument_list></call></expr>)</condition><block pos:start="41:20" pos:end="44:3">{<block_content pos:start="42:5" pos:end="43:12">
    <expr_stmt pos:start="42:5" pos:end="42:20"><expr pos:start="42:5" pos:end="42:19"><call pos:start="42:5" pos:end="42:19"><name pos:start="42:5" pos:end="42:10"><name pos:start="42:5" pos:end="42:5">c</name><operator pos:start="42:6" pos:end="42:6">.</operator><name pos:start="42:7" pos:end="42:10">push</name></name><argument_list pos:start="42:11" pos:end="42:19">(<argument pos:start="42:12" pos:end="42:18"><expr pos:start="42:12" pos:end="42:18"><call pos:start="42:12" pos:end="42:18"><name pos:start="42:12" pos:end="42:16"><name pos:start="42:12" pos:end="42:12">a</name><operator pos:start="42:13" pos:end="42:13">.</operator><name pos:start="42:14" pos:end="42:16">top</name></name><argument_list pos:start="42:17" pos:end="42:18">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="43:5" pos:end="43:12"><expr pos:start="43:5" pos:end="43:11"><call pos:start="43:5" pos:end="43:11"><name pos:start="43:5" pos:end="43:9"><name pos:start="43:5" pos:end="43:5">a</name><operator pos:start="43:6" pos:end="43:6">.</operator><name pos:start="43:7" pos:end="43:9">pop</name></name><argument_list pos:start="43:10" pos:end="43:11">()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
  <while pos:start="45:3" pos:end="48:3">while<condition pos:start="45:8" pos:end="45:19">(<expr pos:start="45:9" pos:end="45:18"><operator pos:start="45:9" pos:end="45:9">!</operator><call pos:start="45:10" pos:end="45:18"><name pos:start="45:10" pos:end="45:16"><name pos:start="45:10" pos:end="45:10">c</name><operator pos:start="45:11" pos:end="45:11">.</operator><name pos:start="45:12" pos:end="45:16">empty</name></name><argument_list pos:start="45:17" pos:end="45:18">()</argument_list></call></expr>)</condition><block pos:start="45:20" pos:end="48:3">{<block_content pos:start="46:5" pos:end="47:12">
    <expr_stmt pos:start="46:5" pos:end="46:27"><expr pos:start="46:5" pos:end="46:26"><name pos:start="46:5" pos:end="46:8">cout</name> <operator pos:start="46:10" pos:end="46:11">&lt;&lt;</operator> <call pos:start="46:13" pos:end="46:19"><name pos:start="46:13" pos:end="46:17"><name pos:start="46:13" pos:end="46:13">c</name><operator pos:start="46:14" pos:end="46:14">.</operator><name pos:start="46:15" pos:end="46:17">top</name></name><argument_list pos:start="46:18" pos:end="46:19">()</argument_list></call> <operator pos:start="46:21" pos:end="46:22">&lt;&lt;</operator> <literal type="string" pos:start="46:24" pos:end="46:26">" "</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="47:5" pos:end="47:12"><expr pos:start="47:5" pos:end="47:11"><call pos:start="47:5" pos:end="47:11"><name pos:start="47:5" pos:end="47:9"><name pos:start="47:5" pos:end="47:5">c</name><operator pos:start="47:6" pos:end="47:6">.</operator><name pos:start="47:7" pos:end="47:9">pop</name></name><argument_list pos:start="47:10" pos:end="47:11">()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
  <expr_stmt pos:start="49:3" pos:end="49:15"><expr pos:start="49:3" pos:end="49:14"><name pos:start="49:3" pos:end="49:6">cout</name> <operator pos:start="49:8" pos:end="49:9">&lt;&lt;</operator> <name pos:start="49:11" pos:end="49:14">endl</name></expr>;</expr_stmt>
  <while pos:start="50:3" pos:end="53:3">while<condition pos:start="50:8" pos:end="50:19">(<expr pos:start="50:9" pos:end="50:18"><operator pos:start="50:9" pos:end="50:9">!</operator><call pos:start="50:10" pos:end="50:18"><name pos:start="50:10" pos:end="50:16"><name pos:start="50:10" pos:end="50:10">b</name><operator pos:start="50:11" pos:end="50:11">.</operator><name pos:start="50:12" pos:end="50:16">empty</name></name><argument_list pos:start="50:17" pos:end="50:18">()</argument_list></call></expr>)</condition><block pos:start="50:20" pos:end="53:3">{<block_content pos:start="51:5" pos:end="52:12">
    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><call pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:10"><name pos:start="51:5" pos:end="51:5">c</name><operator pos:start="51:6" pos:end="51:6">.</operator><name pos:start="51:7" pos:end="51:10">push</name></name><argument_list pos:start="51:11" pos:end="51:19">(<argument pos:start="51:12" pos:end="51:18"><expr pos:start="51:12" pos:end="51:18"><call pos:start="51:12" pos:end="51:18"><name pos:start="51:12" pos:end="51:16"><name pos:start="51:12" pos:end="51:12">b</name><operator pos:start="51:13" pos:end="51:13">.</operator><name pos:start="51:14" pos:end="51:16">top</name></name><argument_list pos:start="51:17" pos:end="51:18">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="52:5" pos:end="52:12"><expr pos:start="52:5" pos:end="52:11"><call pos:start="52:5" pos:end="52:11"><name pos:start="52:5" pos:end="52:9"><name pos:start="52:5" pos:end="52:5">b</name><operator pos:start="52:6" pos:end="52:6">.</operator><name pos:start="52:7" pos:end="52:9">pop</name></name><argument_list pos:start="52:10" pos:end="52:11">()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
  <while pos:start="54:3" pos:end="57:3">while<condition pos:start="54:8" pos:end="54:19">(<expr pos:start="54:9" pos:end="54:18"><operator pos:start="54:9" pos:end="54:9">!</operator><call pos:start="54:10" pos:end="54:18"><name pos:start="54:10" pos:end="54:16"><name pos:start="54:10" pos:end="54:10">c</name><operator pos:start="54:11" pos:end="54:11">.</operator><name pos:start="54:12" pos:end="54:16">empty</name></name><argument_list pos:start="54:17" pos:end="54:18">()</argument_list></call></expr>)</condition><block pos:start="54:20" pos:end="57:3">{<block_content pos:start="55:5" pos:end="56:12">
    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:8">cout</name> <operator pos:start="55:10" pos:end="55:11">&lt;&lt;</operator> <call pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:17"><name pos:start="55:13" pos:end="55:13">c</name><operator pos:start="55:14" pos:end="55:14">.</operator><name pos:start="55:15" pos:end="55:17">top</name></name><argument_list pos:start="55:18" pos:end="55:19">()</argument_list></call> <operator pos:start="55:21" pos:end="55:22">&lt;&lt;</operator> <literal type="string" pos:start="55:24" pos:end="55:26">" "</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="56:5" pos:end="56:12"><expr pos:start="56:5" pos:end="56:11"><call pos:start="56:5" pos:end="56:11"><name pos:start="56:5" pos:end="56:9"><name pos:start="56:5" pos:end="56:5">c</name><operator pos:start="56:6" pos:end="56:6">.</operator><name pos:start="56:7" pos:end="56:9">pop</name></name><argument_list pos:start="56:10" pos:end="56:11">()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
  <expr_stmt pos:start="58:3" pos:end="58:15"><expr pos:start="58:3" pos:end="58:14"><name pos:start="58:3" pos:end="58:6">cout</name> <operator pos:start="58:8" pos:end="58:9">&lt;&lt;</operator> <name pos:start="58:11" pos:end="58:14">endl</name></expr>;</expr_stmt>
  <return pos:start="59:3" pos:end="59:11">return <expr pos:start="59:10" pos:end="59:10"><literal type="number" pos:start="59:10" pos:end="59:10">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
