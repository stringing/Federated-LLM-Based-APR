<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/474/474.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:14"><decl pos:start="4:1" pos:end="4:11"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:7">ans</name> <init pos:start="4:9" pos:end="4:11">= <expr pos:start="4:11" pos:end="4:11"><literal type="number" pos:start="4:11" pos:end="4:11">0</literal></expr></init></decl>,<decl pos:start="4:13" pos:end="4:13"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:13" pos:end="4:13">N</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:41"><decl pos:start="5:1" pos:end="5:12"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:12"><name pos:start="5:6" pos:end="5:8">row</name><index pos:start="5:9" pos:end="5:12">[<expr pos:start="5:10" pos:end="5:11"><literal type="number" pos:start="5:10" pos:end="5:11">10</literal></expr>]</index></name></decl>,<decl pos:start="5:14" pos:end="5:19"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:14" pos:end="5:19"><name pos:start="5:14" pos:end="5:15">x1</name><index pos:start="5:16" pos:end="5:19">[<expr pos:start="5:17" pos:end="5:18"><literal type="number" pos:start="5:17" pos:end="5:18">20</literal></expr>]</index></name></decl>,<decl pos:start="5:21" pos:end="5:26"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:21" pos:end="5:26"><name pos:start="5:21" pos:end="5:22">x2</name><index pos:start="5:23" pos:end="5:26">[<expr pos:start="5:24" pos:end="5:25"><literal type="number" pos:start="5:24" pos:end="5:25">20</literal></expr>]</index></name></decl>,<decl pos:start="5:28" pos:end="5:40"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:32">sjdsd</name><index pos:start="5:33" pos:end="5:36">[<expr pos:start="5:34" pos:end="5:35"><literal type="number" pos:start="5:34" pos:end="5:35">10</literal></expr>]</index><index pos:start="5:37" pos:end="5:40">[<expr pos:start="5:38" pos:end="5:39"><literal type="number" pos:start="5:38" pos:end="5:39">10</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="8:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">bool</name></type> <name pos:start="6:6" pos:end="6:10">check</name><parameter_list pos:start="6:11" pos:end="6:23">(<parameter pos:start="6:12" pos:end="6:16"><decl pos:start="6:12" pos:end="6:16"><type pos:start="6:12" pos:end="6:16"><name pos:start="6:12" pos:end="6:14">int</name></type> <name pos:start="6:16" pos:end="6:16">i</name></decl></parameter>,<parameter pos:start="6:18" pos:end="6:22"><decl pos:start="6:18" pos:end="6:22"><type pos:start="6:18" pos:end="6:22"><name pos:start="6:18" pos:end="6:20">int</name></type> <name pos:start="6:22" pos:end="6:22">c</name></decl></parameter>)</parameter_list><block pos:start="6:24" pos:end="8:1">{<block_content pos:start="7:5" pos:end="7:54">
    <return pos:start="7:5" pos:end="7:54">return <expr pos:start="7:12" pos:end="7:53"><operator pos:start="7:12" pos:end="7:12">!</operator><name pos:start="7:13" pos:end="7:18"><name pos:start="7:13" pos:end="7:15">row</name><index pos:start="7:16" pos:end="7:18">[<expr pos:start="7:17" pos:end="7:17"><name pos:start="7:17" pos:end="7:17">i</name></expr>]</index></name><operator pos:start="7:19" pos:end="7:20">&amp;&amp;</operator><operator pos:start="7:21" pos:end="7:21">!</operator><name pos:start="7:22" pos:end="7:28"><name pos:start="7:22" pos:end="7:23">x1</name><index pos:start="7:24" pos:end="7:28">[<expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:25">i</name><operator pos:start="7:26" pos:end="7:26">+</operator><name pos:start="7:27" pos:end="7:27">c</name></expr>]</index></name><operator pos:start="7:29" pos:end="7:30">&amp;&amp;</operator><operator pos:start="7:31" pos:end="7:31">!</operator><name pos:start="7:32" pos:end="7:40"><name pos:start="7:32" pos:end="7:33">x2</name><index pos:start="7:34" pos:end="7:40">[<expr pos:start="7:35" pos:end="7:39"><name pos:start="7:35" pos:end="7:35">i</name><operator pos:start="7:36" pos:end="7:36">-</operator><name pos:start="7:37" pos:end="7:37">c</name><operator pos:start="7:38" pos:end="7:38">+</operator><name pos:start="7:39" pos:end="7:39">N</name></expr>]</index></name><operator pos:start="7:41" pos:end="7:42">&amp;&amp;</operator><name pos:start="7:43" pos:end="7:53"><name pos:start="7:43" pos:end="7:47">sjdsd</name><index pos:start="7:48" pos:end="7:50">[<expr pos:start="7:49" pos:end="7:49"><name pos:start="7:49" pos:end="7:49">i</name></expr>]</index><index pos:start="7:51" pos:end="7:53">[<expr pos:start="7:52" pos:end="7:52"><name pos:start="7:52" pos:end="7:52">c</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>
<function pos:start="9:1" pos:end="23:1"><type pos:start="9:1" pos:end="9:4"><name pos:start="9:1" pos:end="9:4">void</name></type> <name pos:start="9:6" pos:end="9:8">dfs</name><parameter_list pos:start="9:9" pos:end="9:15">(<parameter pos:start="9:10" pos:end="9:14"><decl pos:start="9:10" pos:end="9:14"><type pos:start="9:10" pos:end="9:12"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:14">c</name></decl></parameter>)</parameter_list><block pos:start="9:16" pos:end="23:1">{<block_content pos:start="10:5" pos:end="22:5">
    <if_stmt pos:start="10:5" pos:end="13:5"><if pos:start="10:5" pos:end="13:5">if<condition pos:start="10:7" pos:end="10:14">(<expr pos:start="10:8" pos:end="10:13"><name pos:start="10:8" pos:end="10:8">c</name><operator pos:start="10:9" pos:end="10:10">==</operator><literal type="number" pos:start="10:11" pos:end="10:11">2</literal><operator pos:start="10:12" pos:end="10:12">*</operator><name pos:start="10:13" pos:end="10:13">N</name></expr>)</condition><block pos:start="10:15" pos:end="13:5">{<block_content pos:start="11:9" pos:end="12:15">
        <expr_stmt pos:start="11:9" pos:end="11:14"><expr pos:start="11:9" pos:end="11:13"><name pos:start="11:9" pos:end="11:11">ans</name><operator pos:start="11:12" pos:end="11:13">++</operator></expr>;</expr_stmt>
        <return pos:start="12:9" pos:end="12:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="14:5" pos:end="22:5">for<control pos:start="14:8" pos:end="14:24">(<init pos:start="14:9" pos:end="14:16"><decl pos:start="14:9" pos:end="14:15"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:13">i</name><init pos:start="14:14" pos:end="14:15">=<expr pos:start="14:15" pos:end="14:15"><literal type="number" pos:start="14:15" pos:end="14:15">0</literal></expr></init></decl>;</init><condition pos:start="14:17" pos:end="14:20"><expr pos:start="14:17" pos:end="14:19"><name pos:start="14:17" pos:end="14:17">i</name><operator pos:start="14:18" pos:end="14:18">&lt;</operator><name pos:start="14:19" pos:end="14:19">N</name></expr>;</condition><incr pos:start="14:21" pos:end="14:23"><expr pos:start="14:21" pos:end="14:23"><name pos:start="14:21" pos:end="14:21">i</name><operator pos:start="14:22" pos:end="14:23">++</operator></expr></incr>)</control><block pos:start="14:25" pos:end="22:5">{<block_content pos:start="15:9" pos:end="21:9">
        <if_stmt pos:start="15:9" pos:end="21:9"><if pos:start="15:9" pos:end="21:9">if<condition pos:start="15:11" pos:end="15:22">(<expr pos:start="15:12" pos:end="15:21"><call pos:start="15:12" pos:end="15:21"><name pos:start="15:12" pos:end="15:16">check</name><argument_list pos:start="15:17" pos:end="15:21">(<argument pos:start="15:18" pos:end="15:18"><expr pos:start="15:18" pos:end="15:18"><name pos:start="15:18" pos:end="15:18">i</name></expr></argument>,<argument pos:start="15:20" pos:end="15:20"><expr pos:start="15:20" pos:end="15:20"><name pos:start="15:20" pos:end="15:20">c</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="15:23" pos:end="21:9">{<block_content pos:start="16:13" pos:end="20:29">
            <expr_stmt pos:start="16:13" pos:end="16:42"><expr pos:start="16:13" pos:end="16:41"><name pos:start="16:13" pos:end="16:18"><name pos:start="16:13" pos:end="16:15">row</name><index pos:start="16:16" pos:end="16:18">[<expr pos:start="16:17" pos:end="16:17"><name pos:start="16:17" pos:end="16:17">i</name></expr>]</index></name><operator pos:start="16:19" pos:end="16:19">=</operator><name pos:start="16:20" pos:end="16:26"><name pos:start="16:20" pos:end="16:21">x1</name><index pos:start="16:22" pos:end="16:26">[<expr pos:start="16:23" pos:end="16:25"><name pos:start="16:23" pos:end="16:23">i</name><operator pos:start="16:24" pos:end="16:24">+</operator><name pos:start="16:25" pos:end="16:25">c</name></expr>]</index></name><operator pos:start="16:27" pos:end="16:27">=</operator><name pos:start="16:28" pos:end="16:36"><name pos:start="16:28" pos:end="16:29">x2</name><index pos:start="16:30" pos:end="16:36">[<expr pos:start="16:31" pos:end="16:35"><name pos:start="16:31" pos:end="16:31">i</name><operator pos:start="16:32" pos:end="16:32">-</operator><name pos:start="16:33" pos:end="16:33">c</name><operator pos:start="16:34" pos:end="16:34">+</operator><name pos:start="16:35" pos:end="16:35">N</name></expr>]</index></name><operator pos:start="16:37" pos:end="16:37">=</operator><literal type="boolean" pos:start="16:38" pos:end="16:41">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:30"><expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:17">sjdsd</name><index pos:start="17:18" pos:end="17:20">[<expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">i</name></expr>]</index><index pos:start="17:21" pos:end="17:23">[<expr pos:start="17:22" pos:end="17:22"><name pos:start="17:22" pos:end="17:22">c</name></expr>]</index></name><operator pos:start="17:24" pos:end="17:24">=</operator><literal type="boolean" pos:start="17:25" pos:end="17:29">false</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:21"><expr pos:start="18:13" pos:end="18:20"><call pos:start="18:13" pos:end="18:20"><name pos:start="18:13" pos:end="18:15">dfs</name><argument_list pos:start="18:16" pos:end="18:20">(<argument pos:start="18:17" pos:end="18:19"><expr pos:start="18:17" pos:end="18:19"><name pos:start="18:17" pos:end="18:17">c</name><operator pos:start="18:18" pos:end="18:18">+</operator><literal type="number" pos:start="18:19" pos:end="18:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:43"><expr pos:start="19:13" pos:end="19:42"><name pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:15">row</name><index pos:start="19:16" pos:end="19:18">[<expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">i</name></expr>]</index></name><operator pos:start="19:19" pos:end="19:19">=</operator><name pos:start="19:20" pos:end="19:26"><name pos:start="19:20" pos:end="19:21">x1</name><index pos:start="19:22" pos:end="19:26">[<expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:23">i</name><operator pos:start="19:24" pos:end="19:24">+</operator><name pos:start="19:25" pos:end="19:25">c</name></expr>]</index></name><operator pos:start="19:27" pos:end="19:27">=</operator><name pos:start="19:28" pos:end="19:36"><name pos:start="19:28" pos:end="19:29">x2</name><index pos:start="19:30" pos:end="19:36">[<expr pos:start="19:31" pos:end="19:35"><name pos:start="19:31" pos:end="19:31">i</name><operator pos:start="19:32" pos:end="19:32">-</operator><name pos:start="19:33" pos:end="19:33">c</name><operator pos:start="19:34" pos:end="19:34">+</operator><name pos:start="19:35" pos:end="19:35">N</name></expr>]</index></name><operator pos:start="19:37" pos:end="19:37">=</operator><literal type="boolean" pos:start="19:38" pos:end="19:42">false</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:29"><expr pos:start="20:13" pos:end="20:28"><name pos:start="20:13" pos:end="20:23"><name pos:start="20:13" pos:end="20:17">sjdsd</name><index pos:start="20:18" pos:end="20:20">[<expr pos:start="20:19" pos:end="20:19"><name pos:start="20:19" pos:end="20:19">i</name></expr>]</index><index pos:start="20:21" pos:end="20:23">[<expr pos:start="20:22" pos:end="20:22"><name pos:start="20:22" pos:end="20:22">c</name></expr>]</index></name><operator pos:start="20:24" pos:end="20:24">=</operator><literal type="boolean" pos:start="20:25" pos:end="20:28">true</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="24:1" pos:end="40:1"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:8">main</name><parameter_list pos:start="24:9" pos:end="24:10">()</parameter_list> <block pos:start="24:12" pos:end="40:1">{<block_content pos:start="25:5" pos:end="39:13">
    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><call pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:11">freopen</name><argument_list pos:start="25:12" pos:end="25:33">(<argument pos:start="25:13" pos:end="25:22"><expr pos:start="25:13" pos:end="25:22"><literal type="string" pos:start="25:13" pos:end="25:22">"queen.in"</literal></expr></argument>,<argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><literal type="string" pos:start="25:24" pos:end="25:26">"r"</literal></expr></argument>,<argument pos:start="25:28" pos:end="25:32"><expr pos:start="25:28" pos:end="25:32"><name pos:start="25:28" pos:end="25:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:36"><expr pos:start="26:5" pos:end="26:35"><call pos:start="26:5" pos:end="26:35"><name pos:start="26:5" pos:end="26:11">freopen</name><argument_list pos:start="26:12" pos:end="26:35">(<argument pos:start="26:13" pos:end="26:23"><expr pos:start="26:13" pos:end="26:23"><literal type="string" pos:start="26:13" pos:end="26:23">"queen.out"</literal></expr></argument>,<argument pos:start="26:25" pos:end="26:27"><expr pos:start="26:25" pos:end="26:27"><literal type="string" pos:start="26:25" pos:end="26:27">"w"</literal></expr></argument>,<argument pos:start="26:29" pos:end="26:34"><expr pos:start="26:29" pos:end="26:34"><name pos:start="26:29" pos:end="26:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:11"><expr pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:7">cin</name><operator pos:start="27:8" pos:end="27:9">&gt;&gt;</operator><name pos:start="27:10" pos:end="27:10">N</name></expr>;</expr_stmt>
    <for pos:start="28:5" pos:end="34:5">for<control pos:start="28:8" pos:end="28:24">(<init pos:start="28:9" pos:end="28:16"><decl pos:start="28:9" pos:end="28:15"><type pos:start="28:9" pos:end="28:11"><name pos:start="28:9" pos:end="28:11">int</name></type> <name pos:start="28:13" pos:end="28:13">i</name><init pos:start="28:14" pos:end="28:15">=<expr pos:start="28:15" pos:end="28:15"><literal type="number" pos:start="28:15" pos:end="28:15">0</literal></expr></init></decl>;</init><condition pos:start="28:17" pos:end="28:20"><expr pos:start="28:17" pos:end="28:19"><name pos:start="28:17" pos:end="28:17">i</name><operator pos:start="28:18" pos:end="28:18">&lt;</operator><name pos:start="28:19" pos:end="28:19">N</name></expr>;</condition><incr pos:start="28:21" pos:end="28:23"><expr pos:start="28:21" pos:end="28:23"><name pos:start="28:21" pos:end="28:21">i</name><operator pos:start="28:22" pos:end="28:23">++</operator></expr></incr>)</control><block pos:start="28:25" pos:end="34:5">{<block_content pos:start="29:9" pos:end="33:9">
        <for pos:start="29:9" pos:end="33:9">for<control pos:start="29:12" pos:end="29:28">(<init pos:start="29:13" pos:end="29:20"><decl pos:start="29:13" pos:end="29:19"><type pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">int</name></type> <name pos:start="29:17" pos:end="29:17">j</name><init pos:start="29:18" pos:end="29:19">=<expr pos:start="29:19" pos:end="29:19"><literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr></init></decl>;</init><condition pos:start="29:21" pos:end="29:24"><expr pos:start="29:21" pos:end="29:23"><name pos:start="29:21" pos:end="29:21">j</name><operator pos:start="29:22" pos:end="29:22">&lt;</operator><name pos:start="29:23" pos:end="29:23">N</name></expr>;</condition><incr pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:25">j</name><operator pos:start="29:26" pos:end="29:27">++</operator></expr></incr>)</control><block pos:start="29:29" pos:end="33:9">{<block_content pos:start="30:13" pos:end="32:33">
            <decl_stmt pos:start="30:13" pos:end="30:25"><decl pos:start="30:13" pos:end="30:24"><type pos:start="30:13" pos:end="30:15"><name pos:start="30:13" pos:end="30:15">int</name></type> <name pos:start="30:17" pos:end="30:24">djdsjfds</name></decl>;</decl_stmt>
            <expr_stmt pos:start="31:13" pos:end="31:26"><expr pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:15">cin</name><operator pos:start="31:16" pos:end="31:17">&gt;&gt;</operator><name pos:start="31:18" pos:end="31:25">djdsjfds</name></expr>;</expr_stmt>
            <expr_stmt pos:start="32:13" pos:end="32:33"><expr pos:start="32:13" pos:end="32:32"><name pos:start="32:13" pos:end="32:23"><name pos:start="32:13" pos:end="32:17">sjdsd</name><index pos:start="32:18" pos:end="32:20">[<expr pos:start="32:19" pos:end="32:19"><name pos:start="32:19" pos:end="32:19">i</name></expr>]</index><index pos:start="32:21" pos:end="32:23">[<expr pos:start="32:22" pos:end="32:22"><name pos:start="32:22" pos:end="32:22">j</name></expr>]</index></name><operator pos:start="32:24" pos:end="32:24">=</operator><name pos:start="32:25" pos:end="32:32">djdsjfds</name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="35:5" pos:end="35:11"><expr pos:start="35:5" pos:end="35:10"><call pos:start="35:5" pos:end="35:10"><name pos:start="35:5" pos:end="35:7">dfs</name><argument_list pos:start="35:8" pos:end="35:10">(<argument pos:start="35:9" pos:end="35:9"><expr pos:start="35:9" pos:end="35:9"><literal type="number" pos:start="35:9" pos:end="35:9">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:20"><expr pos:start="36:5" pos:end="36:19"><name pos:start="36:5" pos:end="36:8">cout</name><operator pos:start="36:9" pos:end="36:10">&lt;&lt;</operator><name pos:start="36:11" pos:end="36:13">ans</name><operator pos:start="36:14" pos:end="36:15">&lt;&lt;</operator><name pos:start="36:16" pos:end="36:19">endl</name></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:18"><expr pos:start="37:5" pos:end="37:17"><call pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:10">fclose</name><argument_list pos:start="37:11" pos:end="37:17">(<argument pos:start="37:12" pos:end="37:16"><expr pos:start="37:12" pos:end="37:16"><name pos:start="37:12" pos:end="37:16">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:19"><expr pos:start="38:5" pos:end="38:18"><call pos:start="38:5" pos:end="38:18"><name pos:start="38:5" pos:end="38:10">fclose</name><argument_list pos:start="38:11" pos:end="38:18">(<argument pos:start="38:12" pos:end="38:17"><expr pos:start="38:12" pos:end="38:17"><name pos:start="38:12" pos:end="38:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>    
</block_content>}</block></function>
</unit>
