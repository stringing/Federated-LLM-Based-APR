<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1129/1129.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:17">&lt;stdio.h&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<function pos:start="5:1" pos:end="39:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list><block pos:start="5:11" pos:end="39:1">{<block_content pos:start="6:5" pos:end="38:5">
    <decl_stmt pos:start="6:5" pos:end="6:10"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:13"><expr pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">cin</name> <operator pos:start="7:9" pos:end="7:10">&gt;&gt;</operator> <name pos:start="7:12" pos:end="7:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:14"><expr pos:start="8:5" pos:end="8:13"><call pos:start="8:5" pos:end="8:13"><name pos:start="8:5" pos:end="8:11">getchar</name><argument_list pos:start="8:12" pos:end="8:13">()</argument_list></call></expr>;</expr_stmt>
    <while pos:start="9:5" pos:end="12:5">while<condition pos:start="9:10" pos:end="9:12">(<expr pos:start="9:11" pos:end="9:11"><name pos:start="9:11" pos:end="9:11">n</name></expr>)</condition><block pos:start="9:13" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:23">
        <decl_stmt pos:start="10:9" pos:end="10:17"><decl pos:start="10:9" pos:end="10:16"><type pos:start="10:9" pos:end="10:14"><name pos:start="10:9" pos:end="10:14">string</name></type> <name pos:start="10:16" pos:end="10:16">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:23"><expr pos:start="11:9" pos:end="11:22"><call pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:15">getline</name><argument_list pos:start="11:16" pos:end="11:22">(<argument pos:start="11:17" pos:end="11:19"><expr pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:19">cin</name></expr></argument>,<argument pos:start="11:21" pos:end="11:21"><expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">string</name></type> <name pos:start="13:12" pos:end="13:17"><name pos:start="13:12" pos:end="13:12">f</name><index pos:start="13:13" pos:end="13:17">[<expr pos:start="13:14" pos:end="13:16"><literal type="number" pos:start="13:14" pos:end="13:16">100</literal></expr>]</index></name> <init pos:start="13:19" pos:end="13:22">= <expr pos:start="13:21" pos:end="13:22"><block pos:start="13:21" pos:end="13:22">{}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:14"><decl pos:start="14:5" pos:end="14:13"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:9">x</name> <init pos:start="14:11" pos:end="14:13">= <expr pos:start="14:13" pos:end="14:13"><literal type="number" pos:start="14:13" pos:end="14:13">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="15:5" pos:end="27:5">for<control pos:start="15:8" pos:end="15:35">(<init pos:start="15:9" pos:end="15:18"><decl pos:start="15:9" pos:end="15:17"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">i</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</init><condition pos:start="15:19" pos:end="15:31"><expr pos:start="15:19" pos:end="15:30"><name pos:start="15:19" pos:end="15:19">i</name> <operator pos:start="15:21" pos:end="15:21">&lt;</operator> <call pos:start="15:23" pos:end="15:30"><name pos:start="15:23" pos:end="15:28"><name pos:start="15:23" pos:end="15:23">f</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:28">size</name></name><argument_list pos:start="15:29" pos:end="15:30">()</argument_list></call></expr>;</condition><incr pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:32">i</name><operator pos:start="15:33" pos:end="15:34">++</operator></expr></incr>)</control><block pos:start="15:36" pos:end="27:5">{<block_content pos:start="16:9" pos:end="26:9">
        <if_stmt pos:start="16:9" pos:end="18:9"><if pos:start="16:9" pos:end="18:9">if<condition pos:start="16:11" pos:end="16:49">(<expr pos:start="16:12" pos:end="16:48"><name pos:start="16:12" pos:end="16:15"><name pos:start="16:12" pos:end="16:12">f</name><index pos:start="16:13" pos:end="16:15">[<expr pos:start="16:14" pos:end="16:14"><name pos:start="16:14" pos:end="16:14">i</name></expr>]</index></name> <operator pos:start="16:17" pos:end="16:18">&gt;=</operator> <literal type="string" pos:start="16:20" pos:end="16:22">"A"</literal><operator pos:start="16:23" pos:end="16:24">&amp;&amp;</operator><name pos:start="16:25" pos:end="16:28"><name pos:start="16:25" pos:end="16:25">f</name><index pos:start="16:26" pos:end="16:28">[<expr pos:start="16:27" pos:end="16:27"><name pos:start="16:27" pos:end="16:27">i</name></expr>]</index></name> <operator pos:start="16:30" pos:end="16:31">&lt;=</operator> <literal type="string" pos:start="16:33" pos:end="16:35">"Z"</literal><operator pos:start="16:36" pos:end="16:37">&amp;&amp;</operator><name pos:start="16:38" pos:end="16:41"><name pos:start="16:38" pos:end="16:38">f</name><index pos:start="16:39" pos:end="16:41">[<expr pos:start="16:40" pos:end="16:40"><name pos:start="16:40" pos:end="16:40">i</name></expr>]</index></name> <operator pos:start="16:43" pos:end="16:44">!=</operator> <literal type="string" pos:start="16:46" pos:end="16:48">"I"</literal></expr>)</condition><block pos:start="16:50" pos:end="18:9">{<block_content pos:start="17:13" pos:end="17:23">
            <expr_stmt pos:start="17:13" pos:end="17:23"><expr pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:13">f</name><index pos:start="17:14" pos:end="17:16">[<expr pos:start="17:15" pos:end="17:15"><name pos:start="17:15" pos:end="17:15">i</name></expr>]</index></name> <operator pos:start="17:18" pos:end="17:19">+=</operator> <literal type="number" pos:start="17:21" pos:end="17:22">32</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="19:9" pos:end="21:9"><if pos:start="19:9" pos:end="21:9">if<condition pos:start="19:11" pos:end="19:23">(<expr pos:start="19:12" pos:end="19:22"><name pos:start="19:12" pos:end="19:15"><name pos:start="19:12" pos:end="19:12">f</name><index pos:start="19:13" pos:end="19:15">[<expr pos:start="19:14" pos:end="19:14"><name pos:start="19:14" pos:end="19:14">i</name></expr>]</index></name> <operator pos:start="19:17" pos:end="19:18">==</operator> <literal type="string" pos:start="19:20" pos:end="19:22">"?"</literal></expr>)</condition><block pos:start="19:24" pos:end="21:9">{<block_content pos:start="20:13" pos:end="20:23">
            <expr_stmt pos:start="20:13" pos:end="20:23"><expr pos:start="20:13" pos:end="20:22"><name pos:start="20:13" pos:end="20:16"><name pos:start="20:13" pos:end="20:13">f</name><index pos:start="20:14" pos:end="20:16">[<expr pos:start="20:15" pos:end="20:15"><name pos:start="20:15" pos:end="20:15">i</name></expr>]</index></name> <operator pos:start="20:18" pos:end="20:18">=</operator> <literal type="string" pos:start="20:20" pos:end="20:22">"!"</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="22:9" pos:end="26:9"><if pos:start="22:9" pos:end="24:9">if <condition pos:start="22:12" pos:end="22:24">(<expr pos:start="22:13" pos:end="22:23"><name pos:start="22:13" pos:end="22:16"><name pos:start="22:13" pos:end="22:13">f</name><index pos:start="22:14" pos:end="22:16">[<expr pos:start="22:15" pos:end="22:15"><name pos:start="22:15" pos:end="22:15">i</name></expr>]</index></name> <operator pos:start="22:18" pos:end="22:19">!=</operator> <literal type="string" pos:start="22:21" pos:end="22:23">" "</literal></expr>)</condition><block pos:start="22:25" pos:end="24:9">{<block_content pos:start="23:13" pos:end="23:25">
            <expr_stmt pos:start="23:13" pos:end="23:25"><expr pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:16"><name pos:start="23:13" pos:end="23:13">f</name><index pos:start="23:14" pos:end="23:16">[<expr pos:start="23:15" pos:end="23:15"><name pos:start="23:15" pos:end="23:15">x</name></expr>]</index></name> <operator pos:start="23:18" pos:end="23:19">+=</operator> <name pos:start="23:21" pos:end="23:24"><name pos:start="23:21" pos:end="23:21">f</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><name pos:start="23:23" pos:end="23:23">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="24:10" pos:end="26:9">else<block pos:start="24:14" pos:end="26:9">{<block_content pos:start="25:13" pos:end="25:16">
            <expr_stmt pos:start="25:13" pos:end="25:16"><expr pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:13">x</name><operator pos:start="25:14" pos:end="25:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <for pos:start="28:5" pos:end="38:5">for<control pos:start="28:8" pos:end="28:29">(<init pos:start="28:9" pos:end="28:18"><decl pos:start="28:9" pos:end="28:17"><type pos:start="28:9" pos:end="28:11"><name pos:start="28:9" pos:end="28:11">int</name></type> <name pos:start="28:13" pos:end="28:13">i</name> <init pos:start="28:15" pos:end="28:17">= <expr pos:start="28:17" pos:end="28:17"><literal type="number" pos:start="28:17" pos:end="28:17">0</literal></expr></init></decl>;</init><condition pos:start="28:19" pos:end="28:25"><expr pos:start="28:19" pos:end="28:24"><name pos:start="28:19" pos:end="28:19">i</name> <operator pos:start="28:21" pos:end="28:22">&lt;=</operator> <name pos:start="28:24" pos:end="28:24">x</name></expr>;</condition><incr pos:start="28:26" pos:end="28:28"><expr pos:start="28:26" pos:end="28:28"><name pos:start="28:26" pos:end="28:26">i</name><operator pos:start="28:27" pos:end="28:28">++</operator></expr></incr>)</control><block pos:start="28:30" pos:end="38:5">{<block_content pos:start="29:9" pos:end="37:9">
        <if_stmt pos:start="29:9" pos:end="31:9"><if pos:start="29:9" pos:end="31:9">if<condition pos:start="29:11" pos:end="29:44">(<expr pos:start="29:12" pos:end="29:43"><name pos:start="29:12" pos:end="29:15"><name pos:start="29:12" pos:end="29:12">f</name><index pos:start="29:13" pos:end="29:15">[<expr pos:start="29:14" pos:end="29:14"><name pos:start="29:14" pos:end="29:14">i</name></expr>]</index></name> <operator pos:start="29:17" pos:end="29:18">==</operator> <literal type="string" pos:start="29:20" pos:end="29:24">"can"</literal><operator pos:start="29:25" pos:end="29:26">&amp;&amp;</operator><name pos:start="29:27" pos:end="29:34"><name pos:start="29:27" pos:end="29:27">f</name><index pos:start="29:28" pos:end="29:34">[<expr pos:start="29:29" pos:end="29:33"><name pos:start="29:29" pos:end="29:29">i</name> <operator pos:start="29:31" pos:end="29:31">+</operator> <literal type="number" pos:start="29:33" pos:end="29:33">1</literal></expr>]</index></name> <operator pos:start="29:36" pos:end="29:37">==</operator> <literal type="string" pos:start="29:39" pos:end="29:43">"you"</literal></expr>)</condition><block pos:start="29:45" pos:end="31:9">{<block_content pos:start="30:13" pos:end="30:43">
            <expr_stmt pos:start="30:13" pos:end="30:43"><expr pos:start="30:13" pos:end="30:42"><name pos:start="30:13" pos:end="30:16">cout</name> <operator pos:start="30:18" pos:end="30:19">&lt;&lt;</operator> <literal type="string" pos:start="30:21" pos:end="30:27">"I can"</literal> <operator pos:start="30:29" pos:end="30:30">&lt;&lt;</operator> <name pos:start="30:32" pos:end="30:35"><name pos:start="30:32" pos:end="30:32">f</name><index pos:start="30:33" pos:end="30:35">[<expr pos:start="30:34" pos:end="30:34"><name pos:start="30:34" pos:end="30:34">i</name></expr>]</index></name> <operator pos:start="30:37" pos:end="30:38">&lt;&lt;</operator> <literal type="string" pos:start="30:40" pos:end="30:42">" "</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="32:9" pos:end="34:9"><if pos:start="32:9" pos:end="34:9">if<condition pos:start="32:11" pos:end="32:46">(<expr pos:start="32:12" pos:end="32:45"><name pos:start="32:12" pos:end="32:15"><name pos:start="32:12" pos:end="32:12">f</name><index pos:start="32:13" pos:end="32:15">[<expr pos:start="32:14" pos:end="32:14"><name pos:start="32:14" pos:end="32:14">i</name></expr>]</index></name> <operator pos:start="32:17" pos:end="32:18">==</operator> <literal type="string" pos:start="32:20" pos:end="32:26">"could"</literal><operator pos:start="32:27" pos:end="32:28">&amp;&amp;</operator><name pos:start="32:29" pos:end="32:36"><name pos:start="32:29" pos:end="32:29">f</name><index pos:start="32:30" pos:end="32:36">[<expr pos:start="32:31" pos:end="32:35"><name pos:start="32:31" pos:end="32:31">i</name> <operator pos:start="32:33" pos:end="32:33">+</operator> <literal type="number" pos:start="32:35" pos:end="32:35">1</literal></expr>]</index></name> <operator pos:start="32:38" pos:end="32:39">==</operator> <literal type="string" pos:start="32:41" pos:end="32:45">"you"</literal></expr>)</condition><block pos:start="32:47" pos:end="34:9">{<block_content pos:start="33:13" pos:end="33:45">
            <expr_stmt pos:start="33:13" pos:end="33:45"><expr pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:16">cout</name> <operator pos:start="33:18" pos:end="33:19">&lt;&lt;</operator> <literal type="string" pos:start="33:21" pos:end="33:29">"I could"</literal> <operator pos:start="33:31" pos:end="33:32">&lt;&lt;</operator> <name pos:start="33:34" pos:end="33:37"><name pos:start="33:34" pos:end="33:34">f</name><index pos:start="33:35" pos:end="33:37">[<expr pos:start="33:36" pos:end="33:36"><name pos:start="33:36" pos:end="33:36">i</name></expr>]</index></name> <operator pos:start="33:39" pos:end="33:40">&lt;&lt;</operator> <literal type="string" pos:start="33:42" pos:end="33:44">" "</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="35:9" pos:end="37:9"><if pos:start="35:9" pos:end="37:9">if<condition pos:start="35:11" pos:end="35:37">(<expr pos:start="35:12" pos:end="35:36"><name pos:start="35:12" pos:end="35:15"><name pos:start="35:12" pos:end="35:12">f</name><index pos:start="35:13" pos:end="35:15">[<expr pos:start="35:14" pos:end="35:14"><name pos:start="35:14" pos:end="35:14">i</name></expr>]</index></name> <operator pos:start="35:17" pos:end="35:18">==</operator> <literal type="string" pos:start="35:20" pos:end="35:22">"I"</literal><operator pos:start="35:23" pos:end="35:24">||</operator><name pos:start="35:25" pos:end="35:28"><name pos:start="35:25" pos:end="35:25">f</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><name pos:start="35:27" pos:end="35:27">i</name></expr>]</index></name> <operator pos:start="35:30" pos:end="35:31">==</operator> <literal type="string" pos:start="35:33" pos:end="35:36">"me"</literal></expr>)</condition><block pos:start="35:38" pos:end="37:9">{<block_content pos:start="36:13" pos:end="36:32">
            <expr_stmt pos:start="36:13" pos:end="36:32"><expr pos:start="36:13" pos:end="36:31"><name pos:start="36:13" pos:end="36:16">cout</name> <operator pos:start="36:18" pos:end="36:19">&lt;&lt;</operator> <literal type="string" pos:start="36:21" pos:end="36:25">"you"</literal> <operator pos:start="36:27" pos:end="36:28">&lt;&lt;</operator><literal type="string" pos:start="36:29" pos:end="36:31">" "</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
</unit>
