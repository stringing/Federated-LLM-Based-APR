<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/194/194.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:35"><decl pos:start="3:1" pos:end="3:9"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:9"><name pos:start="3:5" pos:end="3:5">a</name><index pos:start="3:6" pos:end="3:9">[<expr pos:start="3:7" pos:end="3:8"><literal type="number" pos:start="3:7" pos:end="3:8">10</literal></expr>]</index></name></decl>, <decl pos:start="3:12" pos:end="3:16"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:12" pos:end="3:16"><name pos:start="3:12" pos:end="3:12">b</name><index pos:start="3:13" pos:end="3:16">[<expr pos:start="3:14" pos:end="3:15"><literal type="number" pos:start="3:14" pos:end="3:15">10</literal></expr>]</index></name></decl>, <decl pos:start="3:19" pos:end="3:34"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:19" pos:end="3:21">ans</name> <init pos:start="3:23" pos:end="3:34">= <expr pos:start="3:25" pos:end="3:34"><literal type="number" pos:start="3:25" pos:end="3:34">2147483647</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:6"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">n</name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="17:1"><type pos:start="5:1" pos:end="5:6"><name pos:start="5:1" pos:end="5:6">string</name></type> <name pos:start="5:8" pos:end="5:13">to_bin</name><parameter_list pos:start="5:14" pos:end="5:22">(<parameter pos:start="5:15" pos:end="5:21"><decl pos:start="5:15" pos:end="5:21"><type pos:start="5:15" pos:end="5:17"><name pos:start="5:15" pos:end="5:17">int</name></type> <name pos:start="5:19" pos:end="5:21">dec</name></decl></parameter>)</parameter_list> <block pos:start="5:24" pos:end="17:1">{<block_content pos:start="6:5" pos:end="16:18">
    <decl_stmt pos:start="6:5" pos:end="6:18"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:10">vector</name><argument_list type="generic" pos:start="6:11" pos:end="6:15">&lt;<argument pos:start="6:12" pos:end="6:14"><expr pos:start="6:12" pos:end="6:14"><name pos:start="6:12" pos:end="6:14">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:17" pos:end="6:17">v</name></decl>;</decl_stmt>
    <while pos:start="7:5" pos:end="10:5">while <condition pos:start="7:11" pos:end="7:20">(<expr pos:start="7:12" pos:end="7:19"><name pos:start="7:12" pos:end="7:14">dec</name> <operator pos:start="7:16" pos:end="7:17">!=</operator> <literal type="number" pos:start="7:19" pos:end="7:19">0</literal></expr>)</condition> <block pos:start="7:22" pos:end="10:5">{<block_content pos:start="8:9" pos:end="9:17">
        <expr_stmt pos:start="8:9" pos:end="8:29"><expr pos:start="8:9" pos:end="8:28"><call pos:start="8:9" pos:end="8:28"><name pos:start="8:9" pos:end="8:19"><name pos:start="8:9" pos:end="8:9">v</name><operator pos:start="8:10" pos:end="8:10">.</operator><name pos:start="8:11" pos:end="8:19">push_back</name></name><argument_list pos:start="8:20" pos:end="8:28">(<argument pos:start="8:21" pos:end="8:27"><expr pos:start="8:21" pos:end="8:27"><name pos:start="8:21" pos:end="8:23">dec</name> <operator pos:start="8:25" pos:end="8:25">%</operator> <literal type="number" pos:start="8:27" pos:end="8:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:17"><expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">dec</name> <operator pos:start="9:13" pos:end="9:14">/=</operator> <literal type="number" pos:start="9:16" pos:end="9:16">2</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">string</name></type> <name pos:start="11:12" pos:end="11:17">binary</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="12:5" pos:end="14:5">for <control pos:start="12:9" pos:end="12:43">(<init pos:start="12:10" pos:end="12:30"><decl pos:start="12:10" pos:end="12:29"><type pos:start="12:10" pos:end="12:12"><name pos:start="12:10" pos:end="12:12">int</name></type> <name pos:start="12:14" pos:end="12:14">i</name> <init pos:start="12:16" pos:end="12:29">= <expr pos:start="12:18" pos:end="12:29"><call pos:start="12:18" pos:end="12:25"><name pos:start="12:18" pos:end="12:23"><name pos:start="12:18" pos:end="12:18">v</name><operator pos:start="12:19" pos:end="12:19">.</operator><name pos:start="12:20" pos:end="12:23">size</name></name><argument_list pos:start="12:24" pos:end="12:25">()</argument_list></call> <operator pos:start="12:27" pos:end="12:27">-</operator> <literal type="number" pos:start="12:29" pos:end="12:29">1</literal></expr></init></decl>;</init> <condition pos:start="12:32" pos:end="12:38"><expr pos:start="12:32" pos:end="12:37"><name pos:start="12:32" pos:end="12:32">i</name> <operator pos:start="12:34" pos:end="12:35">&gt;=</operator> <literal type="number" pos:start="12:37" pos:end="12:37">0</literal></expr>;</condition> <incr pos:start="12:40" pos:end="12:42"><expr pos:start="12:40" pos:end="12:42"><name pos:start="12:40" pos:end="12:40">i</name><operator pos:start="12:41" pos:end="12:42">--</operator></expr></incr>)</control> <block pos:start="12:45" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:42">
        <expr_stmt pos:start="13:9" pos:end="13:42"><expr pos:start="13:9" pos:end="13:41"><name pos:start="13:9" pos:end="13:14">binary</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <name pos:start="13:18" pos:end="13:23">binary</name> <operator pos:start="13:25" pos:end="13:25">+</operator> <call pos:start="13:27" pos:end="13:41"><name pos:start="13:27" pos:end="13:35">to_string</name><argument_list pos:start="13:36" pos:end="13:41">(<argument pos:start="13:37" pos:end="13:40"><expr pos:start="13:37" pos:end="13:40"><name pos:start="13:37" pos:end="13:40"><name pos:start="13:37" pos:end="13:37">v</name><index pos:start="13:38" pos:end="13:40">[<expr pos:start="13:39" pos:end="13:39"><name pos:start="13:39" pos:end="13:39">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <while pos:start="15:5" pos:end="15:52">while <condition pos:start="15:11" pos:end="15:29">(<expr pos:start="15:12" pos:end="15:28"><call pos:start="15:12" pos:end="15:24"><name pos:start="15:12" pos:end="15:22"><name pos:start="15:12" pos:end="15:17">binary</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:22">size</name></name><argument_list pos:start="15:23" pos:end="15:24">()</argument_list></call> <operator pos:start="15:26" pos:end="15:26">&lt;</operator> <name pos:start="15:28" pos:end="15:28">n</name></expr>)</condition><block type="pseudo" pos:start="15:31" pos:end="15:52"><block_content pos:start="15:31" pos:end="15:52"> <expr_stmt pos:start="15:31" pos:end="15:52"><expr pos:start="15:31" pos:end="15:51"><name pos:start="15:31" pos:end="15:36">binary</name> <operator pos:start="15:38" pos:end="15:38">=</operator> <literal type="string" pos:start="15:40" pos:end="15:42">"0"</literal> <operator pos:start="15:44" pos:end="15:44">+</operator> <name pos:start="15:46" pos:end="15:51">binary</name></expr>;</expr_stmt></block_content></block></while>
    <return pos:start="16:5" pos:end="16:18">return <expr pos:start="16:12" pos:end="16:17"><name pos:start="16:12" pos:end="16:17">binary</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="18:1" pos:end="24:1"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:11">search1</name><parameter_list pos:start="18:12" pos:end="18:21">(<parameter pos:start="18:13" pos:end="18:20"><decl pos:start="18:13" pos:end="18:20"><type pos:start="18:13" pos:end="18:18"><name pos:start="18:13" pos:end="18:18">string</name></type> <name pos:start="18:20" pos:end="18:20">s</name></decl></parameter>)</parameter_list> <block pos:start="18:23" pos:end="24:1">{<block_content pos:start="19:5" pos:end="23:15">
    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">num</name> <init pos:start="19:13" pos:end="19:15">= <expr pos:start="19:15" pos:end="19:15"><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="20:5" pos:end="22:5">for <control pos:start="20:9" pos:end="20:38">(<init pos:start="20:10" pos:end="20:19"><decl pos:start="20:10" pos:end="20:18"><type pos:start="20:10" pos:end="20:12"><name pos:start="20:10" pos:end="20:12">int</name></type> <name pos:start="20:14" pos:end="20:14">i</name> <init pos:start="20:16" pos:end="20:18">= <expr pos:start="20:18" pos:end="20:18"><literal type="number" pos:start="20:18" pos:end="20:18">0</literal></expr></init></decl>;</init> <condition pos:start="20:21" pos:end="20:33"><expr pos:start="20:21" pos:end="20:32"><name pos:start="20:21" pos:end="20:21">i</name> <operator pos:start="20:23" pos:end="20:23">&lt;</operator> <call pos:start="20:25" pos:end="20:32"><name pos:start="20:25" pos:end="20:30"><name pos:start="20:25" pos:end="20:25">s</name><operator pos:start="20:26" pos:end="20:26">.</operator><name pos:start="20:27" pos:end="20:30">size</name></name><argument_list pos:start="20:31" pos:end="20:32">()</argument_list></call></expr>;</condition> <incr pos:start="20:35" pos:end="20:37"><expr pos:start="20:35" pos:end="20:37"><name pos:start="20:35" pos:end="20:35">i</name><operator pos:start="20:36" pos:end="20:37">++</operator></expr></incr>)</control> <block pos:start="20:40" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:31">
        <if_stmt pos:start="21:9" pos:end="21:31"><if pos:start="21:9" pos:end="21:31">if <condition pos:start="21:12" pos:end="21:24">(<expr pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:16"><name pos:start="21:13" pos:end="21:13">s</name><index pos:start="21:14" pos:end="21:16">[<expr pos:start="21:15" pos:end="21:15"><name pos:start="21:15" pos:end="21:15">i</name></expr>]</index></name> <operator pos:start="21:18" pos:end="21:19">==</operator> <literal type="char" pos:start="21:21" pos:end="21:23">'1'</literal></expr>)</condition><block type="pseudo" pos:start="21:26" pos:end="21:31"><block_content pos:start="21:26" pos:end="21:31"> <expr_stmt pos:start="21:26" pos:end="21:31"><expr pos:start="21:26" pos:end="21:30"><name pos:start="21:26" pos:end="21:28">num</name><operator pos:start="21:29" pos:end="21:30">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="23:5" pos:end="23:15">return <expr pos:start="23:12" pos:end="23:14"><name pos:start="23:12" pos:end="23:14">num</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="25:1" pos:end="39:1"><type pos:start="25:1" pos:end="25:4"><name pos:start="25:1" pos:end="25:4">void</name></type> <name pos:start="25:6" pos:end="25:8">dfs</name><parameter_list pos:start="25:9" pos:end="25:19">(<parameter pos:start="25:10" pos:end="25:18"><decl pos:start="25:10" pos:end="25:18"><type pos:start="25:10" pos:end="25:12"><name pos:start="25:10" pos:end="25:12">int</name></type> <name pos:start="25:14" pos:end="25:18">depth</name></decl></parameter>)</parameter_list> <block pos:start="25:21" pos:end="39:1">{<block_content pos:start="26:5" pos:end="38:11">
    <for pos:start="26:5" pos:end="37:5">for <control pos:start="26:9" pos:end="26:26">(<init pos:start="26:10" pos:end="26:19"><decl pos:start="26:10" pos:end="26:18"><type pos:start="26:10" pos:end="26:12"><name pos:start="26:10" pos:end="26:12">int</name></type> <name pos:start="26:14" pos:end="26:14">i</name> <init pos:start="26:16" pos:end="26:18">= <expr pos:start="26:18" pos:end="26:18"><literal type="number" pos:start="26:18" pos:end="26:18">0</literal></expr></init></decl>;</init> <condition pos:start="26:21" pos:end="26:21">;</condition> <incr pos:start="26:23" pos:end="26:25"><expr pos:start="26:23" pos:end="26:25"><name pos:start="26:23" pos:end="26:23">i</name><operator pos:start="26:24" pos:end="26:25">++</operator></expr></incr>)</control> <block pos:start="26:28" pos:end="37:5">{<block_content pos:start="27:9" pos:end="36:41">
        <if_stmt pos:start="27:9" pos:end="27:40"><if pos:start="27:9" pos:end="27:40">if <condition pos:start="27:12" pos:end="27:33">(<expr pos:start="27:13" pos:end="27:32"><call pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:18">to_bin</name><argument_list pos:start="27:19" pos:end="27:21">(<argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">i</name></expr></argument>)</argument_list></call><operator pos:start="27:22" pos:end="27:22">.</operator><call pos:start="27:23" pos:end="27:28"><name pos:start="27:23" pos:end="27:26">size</name><argument_list pos:start="27:27" pos:end="27:28">()</argument_list></call> <operator pos:start="27:30" pos:end="27:30">&gt;</operator> <name pos:start="27:32" pos:end="27:32">n</name></expr>)</condition><block type="pseudo" pos:start="27:35" pos:end="27:40"><block_content pos:start="27:35" pos:end="27:40"> <break pos:start="27:35" pos:end="27:40">break;</break></block_content></block></if></if_stmt>
        <if_stmt pos:start="28:9" pos:end="28:50"><if pos:start="28:9" pos:end="28:50">if <condition pos:start="28:12" pos:end="28:40">(<expr pos:start="28:13" pos:end="28:39"><call pos:start="28:13" pos:end="28:30"><name pos:start="28:13" pos:end="28:19">search1</name><argument_list pos:start="28:20" pos:end="28:30">(<argument pos:start="28:21" pos:end="28:29"><expr pos:start="28:21" pos:end="28:29"><call pos:start="28:21" pos:end="28:29"><name pos:start="28:21" pos:end="28:26">to_bin</name><argument_list pos:start="28:27" pos:end="28:29">(<argument pos:start="28:28" pos:end="28:28"><expr pos:start="28:28" pos:end="28:28"><name pos:start="28:28" pos:end="28:28">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="28:32" pos:end="28:33">!=</operator> <name pos:start="28:35" pos:end="28:39">depth</name></expr>)</condition><block type="pseudo" pos:start="28:42" pos:end="28:50"><block_content pos:start="28:42" pos:end="28:50"> <continue pos:start="28:42" pos:end="28:50">continue;</continue></block_content></block></if></if_stmt>
        <decl_stmt pos:start="29:9" pos:end="29:31"><decl pos:start="29:9" pos:end="29:30"><type pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:14">string</name></type> <name pos:start="29:16" pos:end="29:18">tmp</name> <init pos:start="29:20" pos:end="29:30">= <expr pos:start="29:22" pos:end="29:30"><call pos:start="29:22" pos:end="29:30"><name pos:start="29:22" pos:end="29:27">to_bin</name><argument_list pos:start="29:28" pos:end="29:30">(<argument pos:start="29:29" pos:end="29:29"><expr pos:start="29:29" pos:end="29:29"><name pos:start="29:29" pos:end="29:29">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="30:9" pos:end="30:31"><decl pos:start="30:9" pos:end="30:20"><type pos:start="30:9" pos:end="30:11"><name pos:start="30:9" pos:end="30:11">int</name></type> <name pos:start="30:13" pos:end="30:16">tmp1</name> <init pos:start="30:18" pos:end="30:20">= <expr pos:start="30:20" pos:end="30:20"><literal type="number" pos:start="30:20" pos:end="30:20">1</literal></expr></init></decl>, <decl pos:start="30:23" pos:end="30:30"><type ref="prev" pos:start="30:9" pos:end="30:11"/><name pos:start="30:23" pos:end="30:26">tmp2</name> <init pos:start="30:28" pos:end="30:30">= <expr pos:start="30:30" pos:end="30:30"><literal type="number" pos:start="30:30" pos:end="30:30">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="31:9" pos:end="35:9">for <control pos:start="31:13" pos:end="31:35">(<init pos:start="31:14" pos:end="31:23"><decl pos:start="31:14" pos:end="31:22"><type pos:start="31:14" pos:end="31:16"><name pos:start="31:14" pos:end="31:16">int</name></type> <name pos:start="31:18" pos:end="31:18">j</name> <init pos:start="31:20" pos:end="31:22">= <expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr></init></decl>;</init> <condition pos:start="31:25" pos:end="31:30"><expr pos:start="31:25" pos:end="31:29"><name pos:start="31:25" pos:end="31:25">j</name> <operator pos:start="31:27" pos:end="31:27">&lt;</operator> <name pos:start="31:29" pos:end="31:29">n</name></expr>;</condition> <incr pos:start="31:32" pos:end="31:34"><expr pos:start="31:32" pos:end="31:34"><name pos:start="31:32" pos:end="31:32">j</name><operator pos:start="31:33" pos:end="31:34">++</operator></expr></incr>)</control> <block pos:start="31:37" pos:end="35:9">{<block_content pos:start="32:13" pos:end="34:25">
            <if_stmt pos:start="32:13" pos:end="32:42"><if pos:start="32:13" pos:end="32:42">if <condition pos:start="32:16" pos:end="32:32">(<expr pos:start="32:17" pos:end="32:31"><operator pos:start="32:17" pos:end="32:17">!</operator><operator pos:start="32:18" pos:end="32:18">(</operator><name pos:start="32:19" pos:end="32:24"><name pos:start="32:19" pos:end="32:21">tmp</name><index pos:start="32:22" pos:end="32:24">[<expr pos:start="32:23" pos:end="32:23"><name pos:start="32:23" pos:end="32:23">j</name></expr>]</index></name> <operator pos:start="32:26" pos:end="32:26">-</operator> <literal type="char" pos:start="32:28" pos:end="32:30">'0'</literal><operator pos:start="32:31" pos:end="32:31">)</operator></expr>)</condition><block type="pseudo" pos:start="32:34" pos:end="32:42"><block_content pos:start="32:34" pos:end="32:42"> <continue pos:start="32:34" pos:end="32:42">continue;</continue></block_content></block></if></if_stmt>
            <expr_stmt pos:start="33:13" pos:end="33:25"><expr pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:16">tmp1</name> <operator pos:start="33:18" pos:end="33:19">*=</operator> <name pos:start="33:21" pos:end="33:24"><name pos:start="33:21" pos:end="33:21">a</name><index pos:start="33:22" pos:end="33:24">[<expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">j</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="34:13" pos:end="34:25"><expr pos:start="34:13" pos:end="34:24"><name pos:start="34:13" pos:end="34:16">tmp2</name> <operator pos:start="34:18" pos:end="34:19">+=</operator> <name pos:start="34:21" pos:end="34:24"><name pos:start="34:21" pos:end="34:21">b</name><index pos:start="34:22" pos:end="34:24">[<expr pos:start="34:23" pos:end="34:23"><name pos:start="34:23" pos:end="34:23">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="36:9" pos:end="36:41"><expr pos:start="36:9" pos:end="36:40"><name pos:start="36:9" pos:end="36:11">ans</name> <operator pos:start="36:13" pos:end="36:13">=</operator> <call pos:start="36:15" pos:end="36:40"><name pos:start="36:15" pos:end="36:17">min</name><argument_list pos:start="36:18" pos:end="36:40">(<argument pos:start="36:19" pos:end="36:21"><expr pos:start="36:19" pos:end="36:21"><name pos:start="36:19" pos:end="36:21">ans</name></expr></argument>, <argument pos:start="36:24" pos:end="36:39"><expr pos:start="36:24" pos:end="36:39"><call pos:start="36:24" pos:end="36:39"><name pos:start="36:24" pos:end="36:26">abs</name><argument_list pos:start="36:27" pos:end="36:39">(<argument pos:start="36:28" pos:end="36:38"><expr pos:start="36:28" pos:end="36:38"><name pos:start="36:28" pos:end="36:31">tmp1</name> <operator pos:start="36:33" pos:end="36:33">-</operator> <name pos:start="36:35" pos:end="36:38">tmp2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="38:5" pos:end="38:11">return;</return>
</block_content>}</block></function>
<function pos:start="40:1" pos:end="51:1"><type pos:start="40:1" pos:end="40:3"><name pos:start="40:1" pos:end="40:3">int</name></type> <name pos:start="40:5" pos:end="40:8">main</name><parameter_list pos:start="40:9" pos:end="40:10">()</parameter_list> <block pos:start="40:12" pos:end="51:1">{<block_content pos:start="41:5" pos:end="50:13">
    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><call pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:11">freopen</name><argument_list pos:start="41:12" pos:end="41:35">(<argument pos:start="41:13" pos:end="41:22"><expr pos:start="41:13" pos:end="41:22"><literal type="string" pos:start="41:13" pos:end="41:22">"stone.in"</literal></expr></argument>, <argument pos:start="41:25" pos:end="41:27"><expr pos:start="41:25" pos:end="41:27"><literal type="string" pos:start="41:25" pos:end="41:27">"r"</literal></expr></argument>, <argument pos:start="41:30" pos:end="41:34"><expr pos:start="41:30" pos:end="41:34"><name pos:start="41:30" pos:end="41:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:38"><expr pos:start="42:5" pos:end="42:37"><call pos:start="42:5" pos:end="42:37"><name pos:start="42:5" pos:end="42:11">freopen</name><argument_list pos:start="42:12" pos:end="42:37">(<argument pos:start="42:13" pos:end="42:23"><expr pos:start="42:13" pos:end="42:23"><literal type="string" pos:start="42:13" pos:end="42:23">"stone.out"</literal></expr></argument>, <argument pos:start="42:26" pos:end="42:28"><expr pos:start="42:26" pos:end="42:28"><literal type="string" pos:start="42:26" pos:end="42:28">"w"</literal></expr></argument>, <argument pos:start="42:31" pos:end="42:36"><expr pos:start="42:31" pos:end="42:36"><name pos:start="42:31" pos:end="42:36">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="43:5" pos:end="43:13"><expr pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:7">cin</name> <operator pos:start="43:9" pos:end="43:10">&gt;&gt;</operator> <name pos:start="43:12" pos:end="43:12">n</name></expr>;</expr_stmt>
    <for pos:start="44:5" pos:end="46:5">for <control pos:start="44:9" pos:end="44:31">(<init pos:start="44:10" pos:end="44:19"><decl pos:start="44:10" pos:end="44:18"><type pos:start="44:10" pos:end="44:12"><name pos:start="44:10" pos:end="44:12">int</name></type> <name pos:start="44:14" pos:end="44:14">i</name> <init pos:start="44:16" pos:end="44:18">= <expr pos:start="44:18" pos:end="44:18"><literal type="number" pos:start="44:18" pos:end="44:18">0</literal></expr></init></decl>;</init> <condition pos:start="44:21" pos:end="44:26"><expr pos:start="44:21" pos:end="44:25"><name pos:start="44:21" pos:end="44:21">i</name> <operator pos:start="44:23" pos:end="44:23">&lt;</operator> <name pos:start="44:25" pos:end="44:25">n</name></expr>;</condition> <incr pos:start="44:28" pos:end="44:30"><expr pos:start="44:28" pos:end="44:30"><name pos:start="44:28" pos:end="44:28">i</name><operator pos:start="44:29" pos:end="44:30">++</operator></expr></incr>)</control> <block pos:start="44:33" pos:end="46:5">{<block_content pos:start="45:9" pos:end="45:28">
        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:11">cin</name> <operator pos:start="45:13" pos:end="45:14">&gt;&gt;</operator> <name pos:start="45:16" pos:end="45:19"><name pos:start="45:16" pos:end="45:16">a</name><index pos:start="45:17" pos:end="45:19">[<expr pos:start="45:18" pos:end="45:18"><name pos:start="45:18" pos:end="45:18">i</name></expr>]</index></name> <operator pos:start="45:21" pos:end="45:22">&gt;&gt;</operator> <name pos:start="45:24" pos:end="45:27"><name pos:start="45:24" pos:end="45:24">b</name><index pos:start="45:25" pos:end="45:27">[<expr pos:start="45:26" pos:end="45:26"><name pos:start="45:26" pos:end="45:26">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="47:5" pos:end="49:5">for <control pos:start="47:9" pos:end="47:32">(<init pos:start="47:10" pos:end="47:19"><decl pos:start="47:10" pos:end="47:18"><type pos:start="47:10" pos:end="47:12"><name pos:start="47:10" pos:end="47:12">int</name></type> <name pos:start="47:14" pos:end="47:14">i</name> <init pos:start="47:16" pos:end="47:18">= <expr pos:start="47:18" pos:end="47:18"><literal type="number" pos:start="47:18" pos:end="47:18">1</literal></expr></init></decl>;</init> <condition pos:start="47:21" pos:end="47:27"><expr pos:start="47:21" pos:end="47:26"><name pos:start="47:21" pos:end="47:21">i</name> <operator pos:start="47:23" pos:end="47:24">&lt;=</operator> <name pos:start="47:26" pos:end="47:26">n</name></expr>;</condition> <incr pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><name pos:start="47:29" pos:end="47:29">i</name><operator pos:start="47:30" pos:end="47:31">++</operator></expr></incr>)</control> <block pos:start="47:34" pos:end="49:5">{<block_content pos:start="48:9" pos:end="48:15">
        <expr_stmt pos:start="48:9" pos:end="48:15"><expr pos:start="48:9" pos:end="48:14"><call pos:start="48:9" pos:end="48:14"><name pos:start="48:9" pos:end="48:11">dfs</name><argument_list pos:start="48:12" pos:end="48:14">(<argument pos:start="48:13" pos:end="48:13"><expr pos:start="48:13" pos:end="48:13"><name pos:start="48:13" pos:end="48:13">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="50:5" pos:end="50:13">return <expr pos:start="50:12" pos:end="50:12"><literal type="number" pos:start="50:12" pos:end="50:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
