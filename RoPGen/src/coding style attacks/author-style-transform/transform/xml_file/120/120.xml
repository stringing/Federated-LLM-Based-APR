<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/120/120.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>


<function pos:start="5:1" pos:end="23:1"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:7">pd</name><parameter_list pos:start="5:8" pos:end="5:20">(<parameter pos:start="5:9" pos:end="5:13"><decl pos:start="5:9" pos:end="5:13"><type pos:start="5:9" pos:end="5:13"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:13">x</name></decl></parameter>,<parameter pos:start="5:15" pos:end="5:19"><decl pos:start="5:15" pos:end="5:19"><type pos:start="5:15" pos:end="5:19"><name pos:start="5:15" pos:end="5:17">int</name></type> <name pos:start="5:19" pos:end="5:19">y</name></decl></parameter>)</parameter_list><block pos:start="5:21" pos:end="23:1">{<block_content pos:start="6:5" pos:end="22:50">
    <decl_stmt pos:start="6:5" pos:end="6:26"><decl pos:start="6:5" pos:end="6:16"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:12">sumx</name> <init pos:start="6:14" pos:end="6:16">= <expr pos:start="6:16" pos:end="6:16"><literal type="number" pos:start="6:16" pos:end="6:16">0</literal></expr></init></decl>,<decl pos:start="6:18" pos:end="6:25"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:18" pos:end="6:21">sumy</name> <init pos:start="6:23" pos:end="6:25">= <expr pos:start="6:25" pos:end="6:25"><literal type="number" pos:start="6:25" pos:end="6:25">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="7:5" pos:end="10:5">for<control pos:start="7:8" pos:end="7:28">(<init pos:start="7:9" pos:end="7:18"><decl pos:start="7:9" pos:end="7:17"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">i</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">1</literal></expr></init></decl>;</init><condition pos:start="7:19" pos:end="7:24"><expr pos:start="7:19" pos:end="7:23"><name pos:start="7:19" pos:end="7:19">i</name> <operator pos:start="7:21" pos:end="7:21">&lt;</operator> <literal type="number" pos:start="7:23" pos:end="7:23">5</literal></expr>;</condition><incr pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:25">i</name><operator pos:start="7:26" pos:end="7:27">++</operator></expr></incr>)</control><block pos:start="7:29" pos:end="10:5">{<block_content pos:start="8:9" pos:end="9:16">
        <expr_stmt pos:start="8:9" pos:end="8:23"><expr pos:start="8:9" pos:end="8:22"><name pos:start="8:9" pos:end="8:12">sumx</name> <operator pos:start="8:14" pos:end="8:15">+=</operator> <name pos:start="8:17" pos:end="8:17">x</name> <operator pos:start="8:19" pos:end="8:19">%</operator> <literal type="number" pos:start="8:21" pos:end="8:22">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:16"><expr pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:9">x</name> <operator pos:start="9:11" pos:end="9:12">/=</operator> <literal type="number" pos:start="9:14" pos:end="9:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="11:5" pos:end="14:5">for<control pos:start="11:8" pos:end="11:28">(<init pos:start="11:9" pos:end="11:18"><decl pos:start="11:9" pos:end="11:17"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr></init></decl>;</init><condition pos:start="11:19" pos:end="11:24"><expr pos:start="11:19" pos:end="11:23"><name pos:start="11:19" pos:end="11:19">i</name> <operator pos:start="11:21" pos:end="11:21">&lt;</operator> <literal type="number" pos:start="11:23" pos:end="11:23">5</literal></expr>;</condition><incr pos:start="11:25" pos:end="11:27"><expr pos:start="11:25" pos:end="11:27"><name pos:start="11:25" pos:end="11:25">i</name><operator pos:start="11:26" pos:end="11:27">++</operator></expr></incr>)</control><block pos:start="11:29" pos:end="14:5">{<block_content pos:start="12:9" pos:end="13:16">
        <expr_stmt pos:start="12:9" pos:end="12:23"><expr pos:start="12:9" pos:end="12:22"><name pos:start="12:9" pos:end="12:12">sumy</name> <operator pos:start="12:14" pos:end="12:15">+=</operator> <name pos:start="12:17" pos:end="12:17">y</name> <operator pos:start="12:19" pos:end="12:19">%</operator> <literal type="number" pos:start="12:21" pos:end="12:22">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:16"><expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:9">y</name> <operator pos:start="13:11" pos:end="13:12">/=</operator> <literal type="number" pos:start="13:14" pos:end="13:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
   
   
   
   
   
    
    
      <return pos:start="22:7" pos:end="22:50">return <expr pos:start="22:14" pos:end="22:49"><name pos:start="22:14" pos:end="22:17">sumx</name> <operator pos:start="22:19" pos:end="22:19">&lt;</operator> <name pos:start="22:21" pos:end="22:24">sumy</name> <operator pos:start="22:26" pos:end="22:27">||</operator> <name pos:start="22:29" pos:end="22:32">sumx</name> <operator pos:start="22:34" pos:end="22:35">==</operator> <name pos:start="22:37" pos:end="22:40">sumy</name> <operator pos:start="22:42" pos:end="22:43">&amp;&amp;</operator> <name pos:start="22:45" pos:end="22:45">x</name> <operator pos:start="22:47" pos:end="22:47">&lt;</operator> <name pos:start="22:49" pos:end="22:49">y</name></expr>;</return>
</block_content>}</block></function>
    
<decl_stmt pos:start="25:1" pos:end="25:11"><decl pos:start="25:1" pos:end="25:10"><type pos:start="25:1" pos:end="25:3"><name pos:start="25:1" pos:end="25:3">int</name></type> <name pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:5">a</name><index pos:start="25:6" pos:end="25:10">[<expr pos:start="25:7" pos:end="25:9"><literal type="number" pos:start="25:7" pos:end="25:9">101</literal></expr>]</index></name></decl>;</decl_stmt>
    
<function pos:start="27:1" pos:end="39:1"><type pos:start="27:1" pos:end="27:3"><name pos:start="27:1" pos:end="27:3">int</name></type> <name pos:start="27:5" pos:end="27:8">main</name><parameter_list pos:start="27:9" pos:end="27:10">()</parameter_list> <block pos:start="27:12" pos:end="39:1">{<block_content pos:start="28:5" pos:end="38:13">
    <decl_stmt pos:start="28:5" pos:end="28:10"><decl pos:start="28:5" pos:end="28:9"><type pos:start="28:5" pos:end="28:7"><name pos:start="28:5" pos:end="28:7">int</name></type> <name pos:start="28:9" pos:end="28:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:13"><expr pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:7">cin</name> <operator pos:start="29:9" pos:end="29:10">&gt;&gt;</operator> <name pos:start="29:12" pos:end="29:12">n</name></expr>;</expr_stmt>
    <for pos:start="30:5" pos:end="32:5">for<control pos:start="30:8" pos:end="30:28">(<init pos:start="30:9" pos:end="30:18"><decl pos:start="30:9" pos:end="30:17"><type pos:start="30:9" pos:end="30:11"><name pos:start="30:9" pos:end="30:11">int</name></type> <name pos:start="30:13" pos:end="30:13">i</name> <init pos:start="30:15" pos:end="30:17">= <expr pos:start="30:17" pos:end="30:17"><literal type="number" pos:start="30:17" pos:end="30:17">0</literal></expr></init></decl>;</init><condition pos:start="30:19" pos:end="30:24"><expr pos:start="30:19" pos:end="30:23"><name pos:start="30:19" pos:end="30:19">i</name> <operator pos:start="30:21" pos:end="30:21">&lt;</operator> <name pos:start="30:23" pos:end="30:23">n</name></expr>;</condition><incr pos:start="30:25" pos:end="30:27"><expr pos:start="30:25" pos:end="30:27"><name pos:start="30:25" pos:end="30:25">i</name><operator pos:start="30:26" pos:end="30:27">++</operator></expr></incr>)</control><block pos:start="30:29" pos:end="32:5">{<block_content pos:start="31:9" pos:end="31:20">
        <expr_stmt pos:start="31:9" pos:end="31:20"><expr pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:11">cin</name> <operator pos:start="31:13" pos:end="31:14">&gt;&gt;</operator> <name pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:16">a</name><index pos:start="31:17" pos:end="31:19">[<expr pos:start="31:18" pos:end="31:18"><name pos:start="31:18" pos:end="31:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><call pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:8">sort</name><argument_list pos:start="33:9" pos:end="33:18">(<argument pos:start="33:10" pos:end="33:10"><expr pos:start="33:10" pos:end="33:10"><name pos:start="33:10" pos:end="33:10">a</name></expr></argument>,<argument pos:start="33:12" pos:end="33:14"><expr pos:start="33:12" pos:end="33:14"><name pos:start="33:12" pos:end="33:12">a</name><operator pos:start="33:13" pos:end="33:13">+</operator><name pos:start="33:14" pos:end="33:14">n</name></expr></argument>,<argument pos:start="33:16" pos:end="33:17"><expr pos:start="33:16" pos:end="33:17"><name pos:start="33:16" pos:end="33:17">pd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="34:5" pos:end="36:5">for<control pos:start="34:8" pos:end="34:28">(<init pos:start="34:9" pos:end="34:18"><decl pos:start="34:9" pos:end="34:17"><type pos:start="34:9" pos:end="34:11"><name pos:start="34:9" pos:end="34:11">int</name></type> <name pos:start="34:13" pos:end="34:13">i</name> <init pos:start="34:15" pos:end="34:17">= <expr pos:start="34:17" pos:end="34:17"><literal type="number" pos:start="34:17" pos:end="34:17">0</literal></expr></init></decl>;</init><condition pos:start="34:19" pos:end="34:24"><expr pos:start="34:19" pos:end="34:23"><name pos:start="34:19" pos:end="34:19">i</name> <operator pos:start="34:21" pos:end="34:21">&lt;</operator> <name pos:start="34:23" pos:end="34:23">n</name></expr>;</condition><incr pos:start="34:25" pos:end="34:27"><expr pos:start="34:25" pos:end="34:27"><name pos:start="34:25" pos:end="34:25">i</name><operator pos:start="34:26" pos:end="34:27">++</operator></expr></incr>)</control><block pos:start="34:29" pos:end="36:5">{<block_content pos:start="35:9" pos:end="35:28">
        <expr_stmt pos:start="35:9" pos:end="35:28"><expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:12">cout</name> <operator pos:start="35:14" pos:end="35:15">&lt;&lt;</operator> <name pos:start="35:17" pos:end="35:20"><name pos:start="35:17" pos:end="35:17">a</name><index pos:start="35:18" pos:end="35:20">[<expr pos:start="35:19" pos:end="35:19"><name pos:start="35:19" pos:end="35:19">i</name></expr>]</index></name> <operator pos:start="35:22" pos:end="35:23">&lt;&lt;</operator> <literal type="string" pos:start="35:25" pos:end="35:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="37:5" pos:end="37:17"><expr pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:8">cout</name> <operator pos:start="37:10" pos:end="37:11">&lt;&lt;</operator> <name pos:start="37:13" pos:end="37:16">endl</name></expr>;</expr_stmt>
    <return pos:start="38:5" pos:end="38:13">return <expr pos:start="38:12" pos:end="38:12"><literal type="number" pos:start="38:12" pos:end="38:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
