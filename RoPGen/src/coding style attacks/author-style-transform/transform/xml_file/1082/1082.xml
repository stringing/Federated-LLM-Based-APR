<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1082/1082.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:13"><decl pos:start="4:1" pos:end="4:12"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:12"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:12">[<expr pos:start="4:7" pos:end="4:11"><literal type="number" pos:start="4:7" pos:end="4:11">10001</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="12:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:7">sum</name> <parameter_list pos:start="5:9" pos:end="5:15">(<parameter pos:start="5:10" pos:end="5:14"><decl pos:start="5:10" pos:end="5:14"><type pos:start="5:10" pos:end="5:12"><name pos:start="5:10" pos:end="5:12">int</name></type> <name pos:start="5:14" pos:end="5:14">x</name></decl></parameter>)</parameter_list> <block pos:start="5:17" pos:end="12:1">{<block_content pos:start="6:5" pos:end="11:15">
    <decl_stmt pos:start="6:5" pos:end="6:16"><decl pos:start="6:5" pos:end="6:15"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">ans</name> <init pos:start="6:13" pos:end="6:15">= <expr pos:start="6:15" pos:end="6:15"><literal type="number" pos:start="6:15" pos:end="6:15">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="7:5" pos:end="10:5">while <condition pos:start="7:11" pos:end="7:13">(<expr pos:start="7:12" pos:end="7:12"><name pos:start="7:12" pos:end="7:12">x</name></expr>)</condition> <block pos:start="7:15" pos:end="10:5">{<block_content pos:start="8:9" pos:end="9:16">
        <expr_stmt pos:start="8:9" pos:end="8:22"><expr pos:start="8:9" pos:end="8:21"><name pos:start="8:9" pos:end="8:11">ans</name> <operator pos:start="8:13" pos:end="8:14">+=</operator> <name pos:start="8:16" pos:end="8:16">x</name> <operator pos:start="8:18" pos:end="8:18">%</operator> <literal type="number" pos:start="8:20" pos:end="8:21">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:16"><expr pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:9">x</name> <operator pos:start="9:11" pos:end="9:12">/=</operator> <literal type="number" pos:start="9:14" pos:end="9:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="11:5" pos:end="11:15">return <expr pos:start="11:12" pos:end="11:14"><name pos:start="11:12" pos:end="11:14">ans</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="13:1" pos:end="18:1"><type pos:start="13:1" pos:end="13:4"><name pos:start="13:1" pos:end="13:4">bool</name></type> <name pos:start="13:6" pos:end="13:8">cmp</name> <parameter_list pos:start="13:10" pos:end="13:23">(<parameter pos:start="13:11" pos:end="13:15"><decl pos:start="13:11" pos:end="13:15"><type pos:start="13:11" pos:end="13:15"><name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:15">a</name></decl></parameter>, <parameter pos:start="13:18" pos:end="13:22"><decl pos:start="13:18" pos:end="13:22"><type pos:start="13:18" pos:end="13:22"><name pos:start="13:18" pos:end="13:20">int</name></type> <name pos:start="13:22" pos:end="13:22">b</name></decl></parameter>)</parameter_list> <block pos:start="13:25" pos:end="18:1">{<block_content pos:start="14:5" pos:end="17:17">
    <if_stmt pos:start="14:5" pos:end="16:5"><if pos:start="14:5" pos:end="16:5">if <condition pos:start="14:8" pos:end="14:25">(<expr pos:start="14:9" pos:end="14:24"><call pos:start="14:9" pos:end="14:14"><name pos:start="14:9" pos:end="14:11">sum</name><argument_list pos:start="14:12" pos:end="14:14">(<argument pos:start="14:13" pos:end="14:13"><expr pos:start="14:13" pos:end="14:13"><name pos:start="14:13" pos:end="14:13">a</name></expr></argument>)</argument_list></call> <operator pos:start="14:16" pos:end="14:17">!=</operator> <call pos:start="14:19" pos:end="14:24"><name pos:start="14:19" pos:end="14:21">sum</name><argument_list pos:start="14:22" pos:end="14:24">(<argument pos:start="14:23" pos:end="14:23"><expr pos:start="14:23" pos:end="14:23"><name pos:start="14:23" pos:end="14:23">b</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="14:27" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:31">
        <return pos:start="15:9" pos:end="15:31">return <expr pos:start="15:16" pos:end="15:30"><call pos:start="15:16" pos:end="15:21"><name pos:start="15:16" pos:end="15:18">sum</name><argument_list pos:start="15:19" pos:end="15:21">(<argument pos:start="15:20" pos:end="15:20"><expr pos:start="15:20" pos:end="15:20"><name pos:start="15:20" pos:end="15:20">a</name></expr></argument>)</argument_list></call> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <call pos:start="15:25" pos:end="15:30"><name pos:start="15:25" pos:end="15:27">sum</name><argument_list pos:start="15:28" pos:end="15:30">(<argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><name pos:start="15:29" pos:end="15:29">b</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="17:5" pos:end="17:17">return <expr pos:start="17:12" pos:end="17:16"><name pos:start="17:12" pos:end="17:12">a</name> <operator pos:start="17:14" pos:end="17:14">&gt;</operator> <name pos:start="17:16" pos:end="17:16">b</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="19:1" pos:end="34:1"><type pos:start="19:1" pos:end="19:3"><name pos:start="19:1" pos:end="19:3">int</name></type> <name pos:start="19:5" pos:end="19:8">main</name><parameter_list pos:start="19:9" pos:end="19:10">()</parameter_list><block pos:start="19:11" pos:end="34:1">{<block_content pos:start="20:5" pos:end="33:13">
    <decl_stmt pos:start="20:5" pos:end="20:10"><decl pos:start="20:5" pos:end="20:9"><type pos:start="20:5" pos:end="20:7"><name pos:start="20:5" pos:end="20:7">int</name></type> <name pos:start="20:9" pos:end="20:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:13"><expr pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:7">cin</name> <operator pos:start="21:9" pos:end="21:10">&gt;&gt;</operator> <name pos:start="21:12" pos:end="21:12">n</name></expr>;</expr_stmt>
    <for pos:start="22:5" pos:end="24:5">for <control pos:start="22:9" pos:end="22:31">(<init pos:start="22:10" pos:end="22:19"><decl pos:start="22:10" pos:end="22:18"><type pos:start="22:10" pos:end="22:12"><name pos:start="22:10" pos:end="22:12">int</name></type> <name pos:start="22:14" pos:end="22:14">i</name> <init pos:start="22:16" pos:end="22:18">= <expr pos:start="22:18" pos:end="22:18"><literal type="number" pos:start="22:18" pos:end="22:18">0</literal></expr></init></decl>;</init> <condition pos:start="22:21" pos:end="22:26"><expr pos:start="22:21" pos:end="22:25"><name pos:start="22:21" pos:end="22:21">i</name> <operator pos:start="22:23" pos:end="22:23">&lt;</operator> <name pos:start="22:25" pos:end="22:25">n</name></expr>;</condition> <incr pos:start="22:28" pos:end="22:30"><expr pos:start="22:28" pos:end="22:30"><name pos:start="22:28" pos:end="22:28">i</name><operator pos:start="22:29" pos:end="22:30">++</operator></expr></incr>)</control> <block pos:start="22:33" pos:end="24:5">{<block_content pos:start="23:9" pos:end="23:20">
        <expr_stmt pos:start="23:9" pos:end="23:20"><expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:11">cin</name> <operator pos:start="23:13" pos:end="23:14">&gt;&gt;</operator> <name pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:16">a</name><index pos:start="23:17" pos:end="23:19">[<expr pos:start="23:18" pos:end="23:18"><name pos:start="23:18" pos:end="23:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="25:5" pos:end="25:24"><decl pos:start="25:5" pos:end="25:23"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:12">flag</name> <init pos:start="25:14" pos:end="25:23">= <expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">a</name><index pos:start="25:17" pos:end="25:23">[<expr pos:start="25:18" pos:end="25:22"><name pos:start="25:18" pos:end="25:18">n</name> <operator pos:start="25:20" pos:end="25:20">-</operator> <literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:24"><expr pos:start="26:5" pos:end="26:23"><call pos:start="26:5" pos:end="26:23"><name pos:start="26:5" pos:end="26:8">sort</name><argument_list pos:start="26:9" pos:end="26:23">(<argument pos:start="26:10" pos:end="26:10"><expr pos:start="26:10" pos:end="26:10"><name pos:start="26:10" pos:end="26:10">a</name></expr></argument>, <argument pos:start="26:13" pos:end="26:17"><expr pos:start="26:13" pos:end="26:17"><name pos:start="26:13" pos:end="26:13">a</name> <operator pos:start="26:15" pos:end="26:15">+</operator> <name pos:start="26:17" pos:end="26:17">n</name></expr></argument>, <argument pos:start="26:20" pos:end="26:22"><expr pos:start="26:20" pos:end="26:22"><name pos:start="26:20" pos:end="26:22">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="27:5" pos:end="32:5">for <control pos:start="27:9" pos:end="27:31">(<init pos:start="27:10" pos:end="27:19"><decl pos:start="27:10" pos:end="27:18"><type pos:start="27:10" pos:end="27:12"><name pos:start="27:10" pos:end="27:12">int</name></type> <name pos:start="27:14" pos:end="27:14">i</name> <init pos:start="27:16" pos:end="27:18">= <expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr></init></decl>;</init> <condition pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:21">i</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <name pos:start="27:25" pos:end="27:25">n</name></expr>;</condition> <incr pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:28">i</name><operator pos:start="27:29" pos:end="27:30">++</operator></expr></incr>)</control> <block pos:start="27:33" pos:end="32:5">{<block_content pos:start="28:9" pos:end="31:9">
        <if_stmt pos:start="28:9" pos:end="31:9"><if pos:start="28:9" pos:end="31:9">if <condition pos:start="28:12" pos:end="28:25">(<expr pos:start="28:13" pos:end="28:24"><name pos:start="28:13" pos:end="28:16"><name pos:start="28:13" pos:end="28:13">a</name><index pos:start="28:14" pos:end="28:16">[<expr pos:start="28:15" pos:end="28:15"><name pos:start="28:15" pos:end="28:15">i</name></expr>]</index></name> <operator pos:start="28:18" pos:end="28:19">==</operator> <name pos:start="28:21" pos:end="28:24">flag</name></expr>)</condition> <block pos:start="28:27" pos:end="31:9">{<block_content pos:start="29:13" pos:end="30:18">
            <expr_stmt pos:start="29:13" pos:end="29:34"><expr pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:16">cout</name> <operator pos:start="29:18" pos:end="29:19">&lt;&lt;</operator> <name pos:start="29:21" pos:end="29:21">i</name> <operator pos:start="29:23" pos:end="29:23">+</operator> <literal type="number" pos:start="29:25" pos:end="29:25">1</literal> <operator pos:start="29:27" pos:end="29:28">&lt;&lt;</operator> <name pos:start="29:30" pos:end="29:33">endl</name></expr>;</expr_stmt>
            <break pos:start="30:13" pos:end="30:18">break;</break>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
