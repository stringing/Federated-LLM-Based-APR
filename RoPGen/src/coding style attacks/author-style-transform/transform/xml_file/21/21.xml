<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/21/21.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="57:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list>
<block pos:start="4:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="56:13">
    <expr_stmt pos:start="5:5" pos:end="5:32"><expr pos:start="5:5" pos:end="5:31"><call pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:31">(<argument pos:start="5:13" pos:end="5:20"><expr pos:start="5:13" pos:end="5:20"><literal type="string" pos:start="5:13" pos:end="5:20">"zip.in"</literal></expr></argument>,<argument pos:start="5:22" pos:end="5:24"><expr pos:start="5:22" pos:end="5:24"><literal type="string" pos:start="5:22" pos:end="5:24">"r"</literal></expr></argument>,<argument pos:start="5:26" pos:end="5:30"><expr pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:34"><expr pos:start="6:5" pos:end="6:33"><call pos:start="6:5" pos:end="6:33"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:33">(<argument pos:start="6:13" pos:end="6:21"><expr pos:start="6:13" pos:end="6:21"><literal type="string" pos:start="6:13" pos:end="6:21">"zip.out"</literal></expr></argument>,<argument pos:start="6:23" pos:end="6:25"><expr pos:start="6:23" pos:end="6:25"><literal type="string" pos:start="6:23" pos:end="6:25">"w"</literal></expr></argument>,<argument pos:start="6:27" pos:end="6:32"><expr pos:start="6:27" pos:end="6:32"><name pos:start="6:27" pos:end="6:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>,<decl pos:start="7:11" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:11">m</name><init pos:start="7:12" pos:end="7:13">=<expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:15"><decl pos:start="8:5" pos:end="8:10"><type pos:start="8:5" pos:end="8:8"><name pos:start="8:5" pos:end="8:8">char</name></type> <name pos:start="8:10" pos:end="8:10">a</name></decl>,<decl pos:start="8:12" pos:end="8:14"><type ref="prev" pos:start="8:5" pos:end="8:8"/><name pos:start="8:12" pos:end="8:14">num</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:13">flag</name><init pos:start="9:14" pos:end="9:19">=<expr pos:start="9:15" pos:end="9:19"><literal type="boolean" pos:start="9:15" pos:end="9:19">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:13"><decl pos:start="10:5" pos:end="10:12"><type pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:10">string</name></type> <name pos:start="10:12" pos:end="10:12">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:11"><expr pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:7">cin</name><operator pos:start="11:8" pos:end="11:9">&gt;&gt;</operator><name pos:start="11:10" pos:end="11:10">s</name></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:15"><expr pos:start="12:5" pos:end="12:14"><name pos:start="12:5" pos:end="12:5">n</name><operator pos:start="12:6" pos:end="12:6">=</operator><call pos:start="12:7" pos:end="12:14"><name pos:start="12:7" pos:end="12:12"><name pos:start="12:7" pos:end="12:7">s</name><operator pos:start="12:8" pos:end="12:8">.</operator><name pos:start="12:9" pos:end="12:12">size</name></name><argument_list pos:start="12:13" pos:end="12:14">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:8">cout</name><operator pos:start="13:9" pos:end="13:10">&lt;&lt;</operator><name pos:start="13:11" pos:end="13:11">n</name><operator pos:start="13:12" pos:end="13:13">&lt;&lt;</operator><literal type="string" pos:start="13:14" pos:end="13:16">" "</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:8"><expr pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:5">m</name><operator pos:start="14:6" pos:end="14:6">=</operator><literal type="number" pos:start="14:7" pos:end="14:7">1</literal></expr>;</expr_stmt>
    <for pos:start="15:5" pos:end="35:9">for<control pos:start="15:8" pos:end="15:24">(<init pos:start="15:9" pos:end="15:16"><decl pos:start="15:9" pos:end="15:15"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">j</name><init pos:start="15:14" pos:end="15:15">=<expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</init><condition pos:start="15:17" pos:end="15:20"><expr pos:start="15:17" pos:end="15:19"><name pos:start="15:17" pos:end="15:17">j</name><operator pos:start="15:18" pos:end="15:18">&lt;</operator><name pos:start="15:19" pos:end="15:19">n</name></expr>;</condition><incr pos:start="15:21" pos:end="15:23"><expr pos:start="15:21" pos:end="15:23"><name pos:start="15:21" pos:end="15:21">j</name><operator pos:start="15:22" pos:end="15:23">++</operator></expr></incr>)</control>
    <block pos:start="16:5" pos:end="35:9">{<block_content pos:start="17:9" pos:end="34:13">
        <expr_stmt pos:start="17:9" pos:end="17:15"><expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:9">a</name><operator pos:start="17:10" pos:end="17:10">=</operator><name pos:start="17:11" pos:end="17:14"><name pos:start="17:11" pos:end="17:11">s</name><index pos:start="17:12" pos:end="17:14">[<expr pos:start="17:13" pos:end="17:13"><name pos:start="17:13" pos:end="17:13">j</name></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="18:9" pos:end="34:13"><if pos:start="18:9" pos:end="21:13">if<condition pos:start="18:11" pos:end="18:16">(<expr pos:start="18:12" pos:end="18:15"><name pos:start="18:12" pos:end="18:12">j</name><operator pos:start="18:13" pos:end="18:14">==</operator><literal type="number" pos:start="18:15" pos:end="18:15">0</literal></expr>)</condition>
            <block pos:start="19:13" pos:end="21:13">{<block_content pos:start="20:17" pos:end="20:22">
                <expr_stmt pos:start="20:17" pos:end="20:22"><expr pos:start="20:17" pos:end="20:21"><name pos:start="20:17" pos:end="20:19">num</name><operator pos:start="20:20" pos:end="20:20">=</operator><name pos:start="20:21" pos:end="20:21">a</name></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="22:13" pos:end="34:13">else
            <block pos:start="23:13" pos:end="34:13">{<block_content pos:start="24:17" pos:end="33:17">
                <if_stmt pos:start="24:17" pos:end="33:17"><if pos:start="24:17" pos:end="27:17">if<condition pos:start="24:19" pos:end="24:26">(<expr pos:start="24:20" pos:end="24:25"><name pos:start="24:20" pos:end="24:22">num</name><operator pos:start="24:23" pos:end="24:24">==</operator><name pos:start="24:25" pos:end="24:25">a</name></expr>)</condition>
                <block pos:start="25:17" pos:end="27:17">{<block_content pos:start="26:21" pos:end="26:24">
                    <expr_stmt pos:start="26:21" pos:end="26:24"><expr pos:start="26:21" pos:end="26:23"><name pos:start="26:21" pos:end="26:21">m</name><operator pos:start="26:22" pos:end="26:23">++</operator></expr>;</expr_stmt>
                </block_content>}</block></if>
                <else pos:start="28:17" pos:end="33:17">else
                <block pos:start="29:17" pos:end="33:17">{<block_content pos:start="30:21" pos:end="32:26">
                    <expr_stmt pos:start="30:21" pos:end="30:33"><expr pos:start="30:21" pos:end="30:32"><name pos:start="30:21" pos:end="30:24">cout</name><operator pos:start="30:25" pos:end="30:26">&lt;&lt;</operator><name pos:start="30:27" pos:end="30:27">m</name><operator pos:start="30:28" pos:end="30:29">&lt;&lt;</operator><literal type="string" pos:start="30:30" pos:end="30:32">" "</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="31:21" pos:end="31:24"><expr pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:21">m</name><operator pos:start="31:22" pos:end="31:22">=</operator><literal type="number" pos:start="31:23" pos:end="31:23">1</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="32:21" pos:end="32:26"><expr pos:start="32:21" pos:end="32:25"><name pos:start="32:21" pos:end="32:23">num</name><operator pos:start="32:24" pos:end="32:24">=</operator><name pos:start="32:25" pos:end="32:25">a</name></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    <for pos:start="36:5" pos:end="54:5">for<control pos:start="36:8" pos:end="36:24">(<init pos:start="36:9" pos:end="36:16"><decl pos:start="36:9" pos:end="36:15"><type pos:start="36:9" pos:end="36:11"><name pos:start="36:9" pos:end="36:11">int</name></type> <name pos:start="36:13" pos:end="36:13">i</name><init pos:start="36:14" pos:end="36:15">=<expr pos:start="36:15" pos:end="36:15"><literal type="number" pos:start="36:15" pos:end="36:15">1</literal></expr></init></decl>;</init><condition pos:start="36:17" pos:end="36:20"><expr pos:start="36:17" pos:end="36:19"><name pos:start="36:17" pos:end="36:17">i</name><operator pos:start="36:18" pos:end="36:18">&lt;</operator><name pos:start="36:19" pos:end="36:19">n</name></expr>;</condition><incr pos:start="36:21" pos:end="36:23"><expr pos:start="36:21" pos:end="36:23"><name pos:start="36:21" pos:end="36:21">i</name><operator pos:start="36:22" pos:end="36:23">++</operator></expr></incr>)</control>
    <block pos:start="37:5" pos:end="54:5">{<block_content pos:start="38:9" pos:end="53:9">
        <for pos:start="38:9" pos:end="53:9">for<control pos:start="38:12" pos:end="38:28">(<init pos:start="38:13" pos:end="38:20"><decl pos:start="38:13" pos:end="38:19"><type pos:start="38:13" pos:end="38:15"><name pos:start="38:13" pos:end="38:15">int</name></type> <name pos:start="38:17" pos:end="38:17">j</name><init pos:start="38:18" pos:end="38:19">=<expr pos:start="38:19" pos:end="38:19"><literal type="number" pos:start="38:19" pos:end="38:19">0</literal></expr></init></decl>;</init><condition pos:start="38:21" pos:end="38:24"><expr pos:start="38:21" pos:end="38:23"><name pos:start="38:21" pos:end="38:21">j</name><operator pos:start="38:22" pos:end="38:22">&lt;</operator><name pos:start="38:23" pos:end="38:23">n</name></expr>;</condition><incr pos:start="38:25" pos:end="38:27"><expr pos:start="38:25" pos:end="38:27"><name pos:start="38:25" pos:end="38:25">j</name><operator pos:start="38:26" pos:end="38:27">++</operator></expr></incr>)</control>
        <block pos:start="39:9" pos:end="53:9">{<block_content pos:start="40:13" pos:end="52:13">
            <expr_stmt pos:start="40:13" pos:end="40:19"><expr pos:start="40:13" pos:end="40:18"><name pos:start="40:13" pos:end="40:15">cin</name><operator pos:start="40:16" pos:end="40:17">&gt;&gt;</operator><name pos:start="40:18" pos:end="40:18">a</name></expr>;</expr_stmt>
            <if_stmt pos:start="41:13" pos:end="52:13"><if pos:start="41:13" pos:end="45:13">if<condition pos:start="41:15" pos:end="41:22">(<expr pos:start="41:16" pos:end="41:21"><name pos:start="41:16" pos:end="41:18">num</name><operator pos:start="41:19" pos:end="41:20">==</operator><name pos:start="41:21" pos:end="41:21">a</name></expr>)</condition>
            <block pos:start="42:13" pos:end="45:13">{<block_content pos:start="43:17" pos:end="44:26">
                <expr_stmt pos:start="43:17" pos:end="43:20"><expr pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:17">m</name><operator pos:start="43:18" pos:end="43:19">++</operator></expr>;</expr_stmt>
                <expr_stmt pos:start="44:17" pos:end="44:26"><expr pos:start="44:17" pos:end="44:25"><name pos:start="44:17" pos:end="44:20">flag</name><operator pos:start="44:21" pos:end="44:21">=</operator><literal type="boolean" pos:start="44:22" pos:end="44:25">true</literal></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="46:13" pos:end="52:13">else
            <block pos:start="47:13" pos:end="52:13">{<block_content pos:start="48:17" pos:end="51:27">
                <expr_stmt pos:start="48:17" pos:end="48:29"><expr pos:start="48:17" pos:end="48:28"><name pos:start="48:17" pos:end="48:20">cout</name><operator pos:start="48:21" pos:end="48:22">&lt;&lt;</operator><name pos:start="48:23" pos:end="48:23">m</name><operator pos:start="48:24" pos:end="48:25">&lt;&lt;</operator><literal type="string" pos:start="48:26" pos:end="48:28">" "</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="49:17" pos:end="49:20"><expr pos:start="49:17" pos:end="49:19"><name pos:start="49:17" pos:end="49:17">m</name><operator pos:start="49:18" pos:end="49:18">=</operator><literal type="number" pos:start="49:19" pos:end="49:19">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="50:17" pos:end="50:22"><expr pos:start="50:17" pos:end="50:21"><name pos:start="50:17" pos:end="50:19">num</name><operator pos:start="50:20" pos:end="50:20">=</operator><name pos:start="50:21" pos:end="50:21">a</name></expr>;</expr_stmt>
                <expr_stmt pos:start="51:17" pos:end="51:27"><expr pos:start="51:17" pos:end="51:26"><name pos:start="51:17" pos:end="51:20">flag</name><operator pos:start="51:21" pos:end="51:21">=</operator><literal type="boolean" pos:start="51:22" pos:end="51:26">false</literal></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="55:5" pos:end="55:12"><expr pos:start="55:5" pos:end="55:11"><name pos:start="55:5" pos:end="55:8">cout</name><operator pos:start="55:9" pos:end="55:10">&lt;&lt;</operator><name pos:start="55:11" pos:end="55:11">m</name></expr>;</expr_stmt>
    <return pos:start="56:5" pos:end="56:13">return <expr pos:start="56:12" pos:end="56:12"><literal type="number" pos:start="56:12" pos:end="56:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
