<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/232/232.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:22"><decl pos:start="3:1" pos:end="3:21"><type pos:start="3:1" pos:end="3:9"><specifier pos:start="3:1" pos:end="3:5">const</specifier> <name pos:start="3:7" pos:end="3:9">int</name></type> <name pos:start="3:11" pos:end="3:14">maxm</name> <init pos:start="3:16" pos:end="3:21">= <expr pos:start="3:18" pos:end="3:21"><literal type="number" pos:start="3:18" pos:end="3:21">1010</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:21"><decl pos:start="4:1" pos:end="4:20"><type pos:start="4:1" pos:end="4:9"><specifier pos:start="4:1" pos:end="4:5">const</specifier> <name pos:start="4:7" pos:end="4:9">int</name></type> <name pos:start="4:11" pos:end="4:14">maxn</name> <init pos:start="4:16" pos:end="4:20">= <expr pos:start="4:18" pos:end="4:20"><literal type="number" pos:start="4:18" pos:end="4:20">110</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:20"><decl pos:start="5:1" pos:end="5:19"><type pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:6">vector</name><argument_list type="generic" pos:start="5:7" pos:end="5:11">&lt;<argument pos:start="5:8" pos:end="5:10"><expr pos:start="5:8" pos:end="5:10"><name pos:start="5:8" pos:end="5:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="5:13" pos:end="5:19"><name pos:start="5:13" pos:end="5:13">G</name><index pos:start="5:14" pos:end="5:19">[<expr pos:start="5:15" pos:end="5:18"><name pos:start="5:15" pos:end="5:18">maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:21"><decl pos:start="6:1" pos:end="6:20"><type pos:start="6:1" pos:end="6:11"><name pos:start="6:1" pos:end="6:11"><name pos:start="6:1" pos:end="6:6">vector</name><argument_list type="generic" pos:start="6:7" pos:end="6:11">&lt;<argument pos:start="6:8" pos:end="6:10"><expr pos:start="6:8" pos:end="6:10"><name pos:start="6:8" pos:end="6:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:13" pos:end="6:20"><name pos:start="6:13" pos:end="6:14">G2</name><index pos:start="6:15" pos:end="6:20">[<expr pos:start="6:16" pos:end="6:19"><name pos:start="6:16" pos:end="6:19">maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:6"><decl pos:start="7:1" pos:end="7:5"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:23"><decl pos:start="8:1" pos:end="8:13"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:13"><name pos:start="8:5" pos:end="8:7">out</name><index pos:start="8:8" pos:end="8:13">[<expr pos:start="8:9" pos:end="8:12"><name pos:start="8:9" pos:end="8:12">maxn</name></expr>]</index></name></decl>,<decl pos:start="8:15" pos:end="8:22"><type ref="prev" pos:start="8:1" pos:end="8:3"/><name pos:start="8:15" pos:end="8:22"><name pos:start="8:15" pos:end="8:16">in</name><index pos:start="8:17" pos:end="8:22">[<expr pos:start="8:18" pos:end="8:21"><name pos:start="8:18" pos:end="8:21">maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="9:1" pos:end="9:14"><decl pos:start="9:1" pos:end="9:13"><type pos:start="9:1" pos:end="9:3"><name pos:start="9:1" pos:end="9:3">int</name></type> <name pos:start="9:5" pos:end="9:9">times</name> <init pos:start="9:11" pos:end="9:13">= <expr pos:start="9:13" pos:end="9:13"><literal type="number" pos:start="9:13" pos:end="9:13">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="10:1" pos:end="10:25"><decl pos:start="10:1" pos:end="10:13"><type pos:start="10:1" pos:end="10:3"><name pos:start="10:1" pos:end="10:3">int</name></type> <name pos:start="10:5" pos:end="10:13"><name pos:start="10:5" pos:end="10:7">dfn</name><index pos:start="10:8" pos:end="10:13">[<expr pos:start="10:9" pos:end="10:12"><name pos:start="10:9" pos:end="10:12">maxn</name></expr>]</index></name></decl>, <decl pos:start="10:16" pos:end="10:24"><type ref="prev" pos:start="10:1" pos:end="10:3"/><name pos:start="10:16" pos:end="10:24"><name pos:start="10:16" pos:end="10:18">low</name><index pos:start="10:19" pos:end="10:24">[<expr pos:start="10:20" pos:end="10:23"><name pos:start="10:20" pos:end="10:23">maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="11:1" pos:end="11:16"><decl pos:start="11:1" pos:end="11:15"><type pos:start="11:1" pos:end="11:3"><name pos:start="11:1" pos:end="11:3">int</name></type> <name pos:start="11:5" pos:end="11:11">scc_cnt</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="12:1" pos:end="12:16"><decl pos:start="12:1" pos:end="12:15"><type pos:start="12:1" pos:end="12:3"><name pos:start="12:1" pos:end="12:3">int</name></type> <name pos:start="12:5" pos:end="12:15"><name pos:start="12:5" pos:end="12:9">sccno</name><index pos:start="12:10" pos:end="12:15">[<expr pos:start="12:11" pos:end="12:14"><name pos:start="12:11" pos:end="12:14">maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="13:1" pos:end="13:19"><decl pos:start="13:1" pos:end="13:18"><type pos:start="13:1" pos:end="13:8"><name pos:start="13:1" pos:end="13:8"><name pos:start="13:1" pos:end="13:3">set</name><argument_list type="generic" pos:start="13:4" pos:end="13:8">&lt;<argument pos:start="13:5" pos:end="13:7"><expr pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="13:10" pos:end="13:18"><name pos:start="13:10" pos:end="13:12">scc</name><index pos:start="13:13" pos:end="13:18">[<expr pos:start="13:14" pos:end="13:17"><name pos:start="13:14" pos:end="13:17">maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="14:1" pos:end="14:13"><decl pos:start="14:1" pos:end="14:12"><type pos:start="14:1" pos:end="14:10"><name pos:start="14:1" pos:end="14:10"><name pos:start="14:1" pos:end="14:5">stack</name><argument_list type="generic" pos:start="14:6" pos:end="14:10">&lt;<argument pos:start="14:7" pos:end="14:9"><expr pos:start="14:7" pos:end="14:9"><name pos:start="14:7" pos:end="14:9">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="14:12" pos:end="14:12">S</name></decl>;</decl_stmt>
<function pos:start="15:1" pos:end="39:1"><type pos:start="15:1" pos:end="15:4"><name pos:start="15:1" pos:end="15:4">void</name></type> <name pos:start="15:6" pos:end="15:8">dfs</name> <parameter_list pos:start="15:10" pos:end="15:16">(<parameter pos:start="15:11" pos:end="15:15"><decl pos:start="15:11" pos:end="15:15"><type pos:start="15:11" pos:end="15:13"><name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:15">u</name></decl></parameter>)</parameter_list> <block pos:start="15:18" pos:end="39:1">{<block_content pos:start="16:5" pos:end="38:5">
    <expr_stmt pos:start="16:5" pos:end="16:30"><expr pos:start="16:5" pos:end="16:29"><name pos:start="16:5" pos:end="16:10"><name pos:start="16:5" pos:end="16:7">dfn</name><index pos:start="16:8" pos:end="16:10">[<expr pos:start="16:9" pos:end="16:9"><name pos:start="16:9" pos:end="16:9">u</name></expr>]</index></name> <operator pos:start="16:12" pos:end="16:12">=</operator> <name pos:start="16:14" pos:end="16:19"><name pos:start="16:14" pos:end="16:16">low</name><index pos:start="16:17" pos:end="16:19">[<expr pos:start="16:18" pos:end="16:18"><name pos:start="16:18" pos:end="16:18">u</name></expr>]</index></name> <operator pos:start="16:21" pos:end="16:21">=</operator> <operator pos:start="16:23" pos:end="16:24">++</operator><name pos:start="16:25" pos:end="16:29">times</name></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:14"><expr pos:start="17:5" pos:end="17:13"><call pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:5">S</name><operator pos:start="17:6" pos:end="17:6">.</operator><name pos:start="17:7" pos:end="17:10">push</name></name><argument_list pos:start="17:11" pos:end="17:13">(<argument pos:start="17:12" pos:end="17:12"><expr pos:start="17:12" pos:end="17:12"><name pos:start="17:12" pos:end="17:12">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="18:5" pos:end="26:5">for <control pos:start="18:9" pos:end="18:35">(<init pos:start="18:10" pos:end="18:17"><decl pos:start="18:10" pos:end="18:16"><type pos:start="18:10" pos:end="18:12"><name pos:start="18:10" pos:end="18:12">int</name></type> <name pos:start="18:14" pos:end="18:14">i</name><init pos:start="18:15" pos:end="18:16">=<expr pos:start="18:16" pos:end="18:16"><literal type="number" pos:start="18:16" pos:end="18:16">0</literal></expr></init></decl>;</init><condition pos:start="18:18" pos:end="18:31"><expr pos:start="18:18" pos:end="18:30"><name pos:start="18:18" pos:end="18:18">i</name><operator pos:start="18:19" pos:end="18:19">&lt;</operator><name pos:start="18:20" pos:end="18:23"><name pos:start="18:20" pos:end="18:20">G</name><index pos:start="18:21" pos:end="18:23">[<expr pos:start="18:22" pos:end="18:22"><name pos:start="18:22" pos:end="18:22">u</name></expr>]</index></name><operator pos:start="18:24" pos:end="18:24">.</operator><call pos:start="18:25" pos:end="18:30"><name pos:start="18:25" pos:end="18:28">size</name><argument_list pos:start="18:29" pos:end="18:30">()</argument_list></call></expr>;</condition><incr pos:start="18:32" pos:end="18:34"><expr pos:start="18:32" pos:end="18:34"><name pos:start="18:32" pos:end="18:32">i</name><operator pos:start="18:33" pos:end="18:34">++</operator></expr></incr>)</control> <block pos:start="18:37" pos:end="26:5">{<block_content pos:start="19:9" pos:end="25:9">
        <decl_stmt pos:start="19:9" pos:end="19:24"><decl pos:start="19:9" pos:end="19:23"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">v</name> <init pos:start="19:15" pos:end="19:23">= <expr pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:17">G</name><index pos:start="19:18" pos:end="19:20">[<expr pos:start="19:19" pos:end="19:19"><name pos:start="19:19" pos:end="19:19">u</name></expr>]</index><index pos:start="19:21" pos:end="19:23">[<expr pos:start="19:22" pos:end="19:22"><name pos:start="19:22" pos:end="19:22">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="20:9" pos:end="25:9"><if pos:start="20:9" pos:end="23:9">if <condition pos:start="20:12" pos:end="20:24">(<expr pos:start="20:13" pos:end="20:23"><name pos:start="20:13" pos:end="20:18"><name pos:start="20:13" pos:end="20:15">dfn</name><index pos:start="20:16" pos:end="20:18">[<expr pos:start="20:17" pos:end="20:17"><name pos:start="20:17" pos:end="20:17">v</name></expr>]</index></name> <operator pos:start="20:20" pos:end="20:21">==</operator> <literal type="number" pos:start="20:23" pos:end="20:23">0</literal></expr>)</condition> <block pos:start="20:26" pos:end="23:9">{<block_content pos:start="21:13" pos:end="22:41"> 
            <expr_stmt pos:start="21:13" pos:end="21:19"><expr pos:start="21:13" pos:end="21:18"><call pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:15">dfs</name><argument_list pos:start="21:16" pos:end="21:18">(<argument pos:start="21:17" pos:end="21:17"><expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:41"><expr pos:start="22:13" pos:end="22:40"><name pos:start="22:13" pos:end="22:18"><name pos:start="22:13" pos:end="22:15">low</name><index pos:start="22:16" pos:end="22:18">[<expr pos:start="22:17" pos:end="22:17"><name pos:start="22:17" pos:end="22:17">u</name></expr>]</index></name> <operator pos:start="22:20" pos:end="22:20">=</operator> <call pos:start="22:22" pos:end="22:40"><name pos:start="22:22" pos:end="22:24">min</name><argument_list pos:start="22:25" pos:end="22:40">(<argument pos:start="22:26" pos:end="22:31"><expr pos:start="22:26" pos:end="22:31"><name pos:start="22:26" pos:end="22:31"><name pos:start="22:26" pos:end="22:28">low</name><index pos:start="22:29" pos:end="22:31">[<expr pos:start="22:30" pos:end="22:30"><name pos:start="22:30" pos:end="22:30">u</name></expr>]</index></name></expr></argument>, <argument pos:start="22:34" pos:end="22:39"><expr pos:start="22:34" pos:end="22:39"><name pos:start="22:34" pos:end="22:39"><name pos:start="22:34" pos:end="22:36">low</name><index pos:start="22:37" pos:end="22:39">[<expr pos:start="22:38" pos:end="22:38"><name pos:start="22:38" pos:end="22:38">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="23:11" pos:end="25:9">else if <condition pos:start="23:19" pos:end="23:29">(<expr pos:start="23:20" pos:end="23:28"><operator pos:start="23:20" pos:end="23:20">!</operator><name pos:start="23:21" pos:end="23:28"><name pos:start="23:21" pos:end="23:25">sccno</name><index pos:start="23:26" pos:end="23:28">[<expr pos:start="23:27" pos:end="23:27"><name pos:start="23:27" pos:end="23:27">v</name></expr>]</index></name></expr>)</condition> <block pos:start="23:31" pos:end="25:9">{<block_content pos:start="24:13" pos:end="24:41"> 
            <expr_stmt pos:start="24:13" pos:end="24:41"><expr pos:start="24:13" pos:end="24:40"><name pos:start="24:13" pos:end="24:18"><name pos:start="24:13" pos:end="24:15">low</name><index pos:start="24:16" pos:end="24:18">[<expr pos:start="24:17" pos:end="24:17"><name pos:start="24:17" pos:end="24:17">u</name></expr>]</index></name> <operator pos:start="24:20" pos:end="24:20">=</operator> <call pos:start="24:22" pos:end="24:40"><name pos:start="24:22" pos:end="24:24">min</name><argument_list pos:start="24:25" pos:end="24:40">(<argument pos:start="24:26" pos:end="24:31"><expr pos:start="24:26" pos:end="24:31"><name pos:start="24:26" pos:end="24:31"><name pos:start="24:26" pos:end="24:28">low</name><index pos:start="24:29" pos:end="24:31">[<expr pos:start="24:30" pos:end="24:30"><name pos:start="24:30" pos:end="24:30">u</name></expr>]</index></name></expr></argument>, <argument pos:start="24:34" pos:end="24:39"><expr pos:start="24:34" pos:end="24:39"><name pos:start="24:34" pos:end="24:39"><name pos:start="24:34" pos:end="24:36">dfn</name><index pos:start="24:37" pos:end="24:39">[<expr pos:start="24:38" pos:end="24:38"><name pos:start="24:38" pos:end="24:38">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="27:5" pos:end="38:5"><if pos:start="27:5" pos:end="38:5">if <condition pos:start="27:8" pos:end="27:25">(<expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:11">low</name><index pos:start="27:12" pos:end="27:14">[<expr pos:start="27:13" pos:end="27:13"><name pos:start="27:13" pos:end="27:13">u</name></expr>]</index></name> <operator pos:start="27:16" pos:end="27:17">==</operator> <name pos:start="27:19" pos:end="27:24"><name pos:start="27:19" pos:end="27:21">dfn</name><index pos:start="27:22" pos:end="27:24">[<expr pos:start="27:23" pos:end="27:23"><name pos:start="27:23" pos:end="27:23">u</name></expr>]</index></name></expr>)</condition> <block pos:start="27:27" pos:end="38:5">{<block_content pos:start="28:9" pos:end="37:9">
        <expr_stmt pos:start="28:9" pos:end="28:18"><expr pos:start="28:9" pos:end="28:17"><operator pos:start="28:9" pos:end="28:10">++</operator><name pos:start="28:11" pos:end="28:17">scc_cnt</name></expr>;</expr_stmt>
        <while pos:start="29:9" pos:end="37:9">while <condition pos:start="29:15" pos:end="29:20">(<expr pos:start="29:16" pos:end="29:19"><literal type="boolean" pos:start="29:16" pos:end="29:19">true</literal></expr>)</condition> <block pos:start="29:22" pos:end="37:9">{<block_content pos:start="30:13" pos:end="36:13">
            <decl_stmt pos:start="30:13" pos:end="30:28"><decl pos:start="30:13" pos:end="30:27"><type pos:start="30:13" pos:end="30:15"><name pos:start="30:13" pos:end="30:15">int</name></type> <name pos:start="30:17" pos:end="30:17">x</name> <init pos:start="30:19" pos:end="30:27">= <expr pos:start="30:21" pos:end="30:27"><call pos:start="30:21" pos:end="30:27"><name pos:start="30:21" pos:end="30:25"><name pos:start="30:21" pos:end="30:21">S</name><operator pos:start="30:22" pos:end="30:22">.</operator><name pos:start="30:23" pos:end="30:25">top</name></name><argument_list pos:start="30:26" pos:end="30:27">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:19"><call pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:17"><name pos:start="31:13" pos:end="31:13">S</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:17">pop</name></name><argument_list pos:start="31:18" pos:end="31:19">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="32:13" pos:end="32:31"><expr pos:start="32:13" pos:end="32:30"><name pos:start="32:13" pos:end="32:20"><name pos:start="32:13" pos:end="32:17">sccno</name><index pos:start="32:18" pos:end="32:20">[<expr pos:start="32:19" pos:end="32:19"><name pos:start="32:19" pos:end="32:19">x</name></expr>]</index></name> <operator pos:start="32:22" pos:end="32:22">=</operator> <name pos:start="32:24" pos:end="32:30">scc_cnt</name></expr>;</expr_stmt>
            <expr_stmt pos:start="33:13" pos:end="33:35"><expr pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:15">scc</name><index pos:start="33:16" pos:end="33:24">[<expr pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:23">scc_cnt</name></expr>]</index></name><operator pos:start="33:25" pos:end="33:25">.</operator><call pos:start="33:26" pos:end="33:34"><name pos:start="33:26" pos:end="33:31">insert</name><argument_list pos:start="33:32" pos:end="33:34">(<argument pos:start="33:33" pos:end="33:33"><expr pos:start="33:33" pos:end="33:33"><name pos:start="33:33" pos:end="33:33">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="34:13" pos:end="36:13"><if pos:start="34:13" pos:end="36:13">if <condition pos:start="34:16" pos:end="34:23">(<expr pos:start="34:17" pos:end="34:22"><name pos:start="34:17" pos:end="34:17">x</name> <operator pos:start="34:19" pos:end="34:20">==</operator> <name pos:start="34:22" pos:end="34:22">u</name></expr>)</condition> <block pos:start="34:25" pos:end="36:13">{<block_content pos:start="35:17" pos:end="35:22">
                <break pos:start="35:17" pos:end="35:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="40:1" pos:end="66:1"><type pos:start="40:1" pos:end="40:3"><name pos:start="40:1" pos:end="40:3">int</name></type> <name pos:start="40:5" pos:end="40:8">main</name><parameter_list pos:start="40:9" pos:end="40:10">()</parameter_list><block pos:start="40:11" pos:end="66:1">{<block_content pos:start="41:5" pos:end="65:13">
    <expr_stmt pos:start="41:5" pos:end="41:24"><expr pos:start="41:5" pos:end="41:23"><call pos:start="41:5" pos:end="41:23"><name pos:start="41:5" pos:end="41:9">scanf</name><argument_list pos:start="41:10" pos:end="41:23">(<argument pos:start="41:11" pos:end="41:16"><expr pos:start="41:11" pos:end="41:16"><literal type="string" pos:start="41:11" pos:end="41:16">"%d%d"</literal></expr></argument>,<argument pos:start="41:18" pos:end="41:19"><expr pos:start="41:18" pos:end="41:19"><operator pos:start="41:18" pos:end="41:18">&amp;</operator><name pos:start="41:19" pos:end="41:19">n</name></expr></argument>,<argument pos:start="41:21" pos:end="41:22"><expr pos:start="41:21" pos:end="41:22"><operator pos:start="41:21" pos:end="41:21">&amp;</operator><name pos:start="41:22" pos:end="41:22">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="42:5" pos:end="50:5">for <control pos:start="42:9" pos:end="42:25">(<init pos:start="42:10" pos:end="42:17"><decl pos:start="42:10" pos:end="42:16"><type pos:start="42:10" pos:end="42:12"><name pos:start="42:10" pos:end="42:12">int</name></type> <name pos:start="42:14" pos:end="42:14">i</name><init pos:start="42:15" pos:end="42:16">=<expr pos:start="42:16" pos:end="42:16"><literal type="number" pos:start="42:16" pos:end="42:16">0</literal></expr></init></decl>;</init><condition pos:start="42:18" pos:end="42:21"><expr pos:start="42:18" pos:end="42:20"><name pos:start="42:18" pos:end="42:18">i</name><operator pos:start="42:19" pos:end="42:19">&lt;</operator><name pos:start="42:20" pos:end="42:20">n</name></expr>;</condition><incr pos:start="42:22" pos:end="42:24"><expr pos:start="42:22" pos:end="42:24"><name pos:start="42:22" pos:end="42:22">i</name><operator pos:start="42:23" pos:end="42:24">++</operator></expr></incr>)</control><block pos:start="42:26" pos:end="50:5">{<block_content pos:start="43:9" pos:end="49:9">
        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><call pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:15">getline</name><argument_list pos:start="43:16" pos:end="43:25">(<argument pos:start="43:17" pos:end="43:19"><expr pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">cin</name></expr></argument>,<argument pos:start="43:21" pos:end="43:24"><expr pos:start="43:21" pos:end="43:24"><name pos:start="43:21" pos:end="43:24"><name pos:start="43:21" pos:end="43:21">s</name><index pos:start="43:22" pos:end="43:24">[<expr pos:start="43:23" pos:end="43:23"><name pos:start="43:23" pos:end="43:23">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="44:9" pos:end="49:9">for <control pos:start="44:13" pos:end="44:29">(<init pos:start="44:14" pos:end="44:21"><decl pos:start="44:14" pos:end="44:20"><type pos:start="44:14" pos:end="44:16"><name pos:start="44:14" pos:end="44:16">int</name></type> <name pos:start="44:18" pos:end="44:18">j</name><init pos:start="44:19" pos:end="44:20">=<expr pos:start="44:20" pos:end="44:20"><literal type="number" pos:start="44:20" pos:end="44:20">0</literal></expr></init></decl>;</init><condition pos:start="44:22" pos:end="44:25"><expr pos:start="44:22" pos:end="44:24"><name pos:start="44:22" pos:end="44:22">j</name><operator pos:start="44:23" pos:end="44:23">&lt;</operator><name pos:start="44:24" pos:end="44:24">m</name></expr>;</condition><incr pos:start="44:26" pos:end="44:28"><expr pos:start="44:26" pos:end="44:28"><name pos:start="44:26" pos:end="44:26">j</name><operator pos:start="44:27" pos:end="44:28">++</operator></expr></incr>)</control><block pos:start="44:30" pos:end="49:9">{<block_content pos:start="45:13" pos:end="48:37">
            <if_stmt pos:start="45:13" pos:end="46:46"><if pos:start="45:13" pos:end="46:46">if <condition pos:start="45:16" pos:end="45:29">(<expr pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:23"><name pos:start="45:17" pos:end="45:17">s</name><index pos:start="45:18" pos:end="45:20">[<expr pos:start="45:19" pos:end="45:19"><name pos:start="45:19" pos:end="45:19">i</name></expr>]</index><index pos:start="45:21" pos:end="45:23">[<expr pos:start="45:22" pos:end="45:22"><name pos:start="45:22" pos:end="45:22">j</name></expr>]</index></name><operator pos:start="45:24" pos:end="45:25">==</operator><literal type="char" pos:start="45:26" pos:end="45:28">'*'</literal></expr>)</condition><block type="pseudo" pos:start="46:17" pos:end="46:46"><block_content pos:start="46:17" pos:end="46:46">
                <expr_stmt pos:start="46:17" pos:end="46:46"><expr pos:start="46:17" pos:end="46:34"><name pos:start="46:17" pos:end="46:28"><name pos:start="46:17" pos:end="46:21">extra</name><index pos:start="46:22" pos:end="46:28">[<expr pos:start="46:23" pos:end="46:27"><operator pos:start="46:23" pos:end="46:24">++</operator><name pos:start="46:25" pos:end="46:27">len</name></expr>]</index></name><operator pos:start="46:29" pos:end="46:29">=</operator><name pos:start="46:30" pos:end="46:30">i</name><operator pos:start="46:31" pos:end="46:31">*</operator><name pos:start="46:32" pos:end="46:32">n</name><operator pos:start="46:33" pos:end="46:33">+</operator><name pos:start="46:34" pos:end="46:34">j</name></expr><operator pos:start="46:35" pos:end="46:35">,</operator><expr pos:start="46:36" pos:end="46:45"><name pos:start="46:36" pos:end="46:43"><name pos:start="46:36" pos:end="46:36">v</name><index pos:start="46:37" pos:end="46:43">[<expr pos:start="46:38" pos:end="46:42"><name pos:start="46:38" pos:end="46:38">i</name><operator pos:start="46:39" pos:end="46:39">*</operator><name pos:start="46:40" pos:end="46:40">n</name><operator pos:start="46:41" pos:end="46:41">+</operator><name pos:start="46:42" pos:end="46:42">j</name></expr>]</index></name><operator pos:start="46:44" pos:end="46:44">=</operator><literal type="number" pos:start="46:45" pos:end="46:45">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="47:13" pos:end="48:37"><if pos:start="47:13" pos:end="48:37">if <condition pos:start="47:16" pos:end="47:45">(<expr pos:start="47:17" pos:end="47:44"><name pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:17">s</name><index pos:start="47:18" pos:end="47:20">[<expr pos:start="47:19" pos:end="47:19"><name pos:start="47:19" pos:end="47:19">i</name></expr>]</index><index pos:start="47:21" pos:end="47:23">[<expr pos:start="47:22" pos:end="47:22"><name pos:start="47:22" pos:end="47:22">j</name></expr>]</index></name><operator pos:start="47:24" pos:end="47:25">&gt;=</operator><literal type="char" pos:start="47:26" pos:end="47:28">'0'</literal> <operator pos:start="47:30" pos:end="47:31">&amp;&amp;</operator> <name pos:start="47:33" pos:end="47:39"><name pos:start="47:33" pos:end="47:33">s</name><index pos:start="47:34" pos:end="47:36">[<expr pos:start="47:35" pos:end="47:35"><name pos:start="47:35" pos:end="47:35">i</name></expr>]</index><index pos:start="47:37" pos:end="47:39">[<expr pos:start="47:38" pos:end="47:38"><name pos:start="47:38" pos:end="47:38">j</name></expr>]</index></name><operator pos:start="47:40" pos:end="47:41">&lt;=</operator><literal type="char" pos:start="47:42" pos:end="47:44">'9'</literal></expr>)</condition><block type="pseudo" pos:start="48:17" pos:end="48:37"><block_content pos:start="48:17" pos:end="48:37">
                <expr_stmt pos:start="48:17" pos:end="48:37"><expr pos:start="48:17" pos:end="48:36"><name pos:start="48:17" pos:end="48:24"><name pos:start="48:17" pos:end="48:17">v</name><index pos:start="48:18" pos:end="48:24">[<expr pos:start="48:19" pos:end="48:23"><name pos:start="48:19" pos:end="48:19">i</name><operator pos:start="48:20" pos:end="48:20">*</operator><name pos:start="48:21" pos:end="48:21">n</name><operator pos:start="48:22" pos:end="48:22">+</operator><name pos:start="48:23" pos:end="48:23">j</name></expr>]</index></name><operator pos:start="48:25" pos:end="48:25">=</operator><name pos:start="48:26" pos:end="48:32"><name pos:start="48:26" pos:end="48:26">s</name><index pos:start="48:27" pos:end="48:29">[<expr pos:start="48:28" pos:end="48:28"><name pos:start="48:28" pos:end="48:28">i</name></expr>]</index><index pos:start="48:30" pos:end="48:32">[<expr pos:start="48:31" pos:end="48:31"><name pos:start="48:31" pos:end="48:31">j</name></expr>]</index></name><operator pos:start="48:33" pos:end="48:33">-</operator><literal type="char" pos:start="48:34" pos:end="48:36">'0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="51:5" pos:end="55:5">for <control pos:start="51:9" pos:end="51:28">(<init pos:start="51:10" pos:end="51:17"><decl pos:start="51:10" pos:end="51:16"><type pos:start="51:10" pos:end="51:12"><name pos:start="51:10" pos:end="51:12">int</name></type> <name pos:start="51:14" pos:end="51:14">i</name><init pos:start="51:15" pos:end="51:16">=<expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">1</literal></expr></init></decl>;</init><condition pos:start="51:18" pos:end="51:24"><expr pos:start="51:18" pos:end="51:23"><name pos:start="51:18" pos:end="51:18">i</name><operator pos:start="51:19" pos:end="51:20">&lt;=</operator><name pos:start="51:21" pos:end="51:23">len</name></expr>;</condition><incr pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><name pos:start="51:25" pos:end="51:25">i</name><operator pos:start="51:26" pos:end="51:27">++</operator></expr></incr>)</control><block pos:start="51:29" pos:end="55:5">{<block_content pos:start="52:9" pos:end="54:37">
        <decl_stmt pos:start="52:9" pos:end="52:16"><decl pos:start="52:9" pos:end="52:13"><type pos:start="52:9" pos:end="52:11"><name pos:start="52:9" pos:end="52:11">int</name></type> <name pos:start="52:13" pos:end="52:13">x</name></decl>,<decl pos:start="52:15" pos:end="52:15"><type ref="prev" pos:start="52:9" pos:end="52:11"/><name pos:start="52:15" pos:end="52:15">y</name></decl>;</decl_stmt>
        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><call pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:13">scanf</name><argument_list pos:start="53:14" pos:end="53:27">(<argument pos:start="53:15" pos:end="53:20"><expr pos:start="53:15" pos:end="53:20"><literal type="string" pos:start="53:15" pos:end="53:20">"%d%d"</literal></expr></argument>,<argument pos:start="53:22" pos:end="53:23"><expr pos:start="53:22" pos:end="53:23"><operator pos:start="53:22" pos:end="53:22">&amp;</operator><name pos:start="53:23" pos:end="53:23">x</name></expr></argument>,<argument pos:start="53:25" pos:end="53:26"><expr pos:start="53:25" pos:end="53:26"><operator pos:start="53:25" pos:end="53:25">&amp;</operator><name pos:start="53:26" pos:end="53:26">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="54:9" pos:end="54:37"><expr pos:start="54:9" pos:end="54:36"><name pos:start="54:9" pos:end="54:19"><name pos:start="54:9" pos:end="54:9">G</name><index pos:start="54:10" pos:end="54:19">[<expr pos:start="54:11" pos:end="54:18"><name pos:start="54:11" pos:end="54:18"><name pos:start="54:11" pos:end="54:15">extra</name><index pos:start="54:16" pos:end="54:18">[<expr pos:start="54:17" pos:end="54:17"><name pos:start="54:17" pos:end="54:17">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="54:20" pos:end="54:20">.</operator><call pos:start="54:21" pos:end="54:36"><name pos:start="54:21" pos:end="54:29">push_back</name><argument_list pos:start="54:30" pos:end="54:36">(<argument pos:start="54:31" pos:end="54:35"><expr pos:start="54:31" pos:end="54:35"><name pos:start="54:31" pos:end="54:31">x</name><operator pos:start="54:32" pos:end="54:32">*</operator><name pos:start="54:33" pos:end="54:33">n</name><operator pos:start="54:34" pos:end="54:34">+</operator><name pos:start="54:35" pos:end="54:35">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="56:5" pos:end="59:44">for <control pos:start="56:9" pos:end="56:27">(<init pos:start="56:10" pos:end="56:17"><decl pos:start="56:10" pos:end="56:16"><type pos:start="56:10" pos:end="56:12"><name pos:start="56:10" pos:end="56:12">int</name></type> <name pos:start="56:14" pos:end="56:14">i</name><init pos:start="56:15" pos:end="56:16">=<expr pos:start="56:16" pos:end="56:16"><literal type="number" pos:start="56:16" pos:end="56:16">0</literal></expr></init></decl>;</init><condition pos:start="56:18" pos:end="56:23"><expr pos:start="56:18" pos:end="56:22"><name pos:start="56:18" pos:end="56:18">i</name><operator pos:start="56:19" pos:end="56:19">&lt;</operator><name pos:start="56:20" pos:end="56:20">n</name><operator pos:start="56:21" pos:end="56:21">-</operator><literal type="number" pos:start="56:22" pos:end="56:22">1</literal></expr>;</condition><incr pos:start="56:24" pos:end="56:26"><expr pos:start="56:24" pos:end="56:26"><name pos:start="56:24" pos:end="56:24">i</name><operator pos:start="56:25" pos:end="56:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:9" pos:end="59:44"><block_content pos:start="57:9" pos:end="59:44">
        <for pos:start="57:9" pos:end="59:44">for <control pos:start="57:13" pos:end="57:29">(<init pos:start="57:14" pos:end="57:21"><decl pos:start="57:14" pos:end="57:20"><type pos:start="57:14" pos:end="57:16"><name pos:start="57:14" pos:end="57:16">int</name></type> <name pos:start="57:18" pos:end="57:18">j</name><init pos:start="57:19" pos:end="57:20">=<expr pos:start="57:20" pos:end="57:20"><literal type="number" pos:start="57:20" pos:end="57:20">0</literal></expr></init></decl>;</init><condition pos:start="57:22" pos:end="57:25"><expr pos:start="57:22" pos:end="57:24"><name pos:start="57:22" pos:end="57:22">j</name><operator pos:start="57:23" pos:end="57:23">&lt;</operator><name pos:start="57:24" pos:end="57:24">m</name></expr>;</condition><incr pos:start="57:26" pos:end="57:28"><expr pos:start="57:26" pos:end="57:28"><name pos:start="57:26" pos:end="57:26">j</name><operator pos:start="57:27" pos:end="57:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="58:13" pos:end="59:44"><block_content pos:start="58:13" pos:end="59:44">
            <if_stmt pos:start="58:13" pos:end="59:44"><if pos:start="58:13" pos:end="59:44">if <condition pos:start="58:16" pos:end="58:47">(<expr pos:start="58:17" pos:end="58:46"><name pos:start="58:17" pos:end="58:23"><name pos:start="58:17" pos:end="58:17">s</name><index pos:start="58:18" pos:end="58:20">[<expr pos:start="58:19" pos:end="58:19"><name pos:start="58:19" pos:end="58:19">i</name></expr>]</index><index pos:start="58:21" pos:end="58:23">[<expr pos:start="58:22" pos:end="58:22"><name pos:start="58:22" pos:end="58:22">j</name></expr>]</index></name><operator pos:start="58:24" pos:end="58:25">!=</operator><literal type="char" pos:start="58:26" pos:end="58:28">'#'</literal> <operator pos:start="58:30" pos:end="58:31">&amp;&amp;</operator> <name pos:start="58:33" pos:end="58:41"><name pos:start="58:33" pos:end="58:33">s</name><index pos:start="58:34" pos:end="58:38">[<expr pos:start="58:35" pos:end="58:37"><name pos:start="58:35" pos:end="58:35">i</name><operator pos:start="58:36" pos:end="58:36">+</operator><literal type="number" pos:start="58:37" pos:end="58:37">1</literal></expr>]</index><index pos:start="58:39" pos:end="58:41">[<expr pos:start="58:40" pos:end="58:40"><name pos:start="58:40" pos:end="58:40">j</name></expr>]</index></name><operator pos:start="58:42" pos:end="58:43">!=</operator><literal type="char" pos:start="58:44" pos:end="58:46">'#'</literal></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:44"><block_content pos:start="59:17" pos:end="59:44">
                <expr_stmt pos:start="59:17" pos:end="59:44"><expr pos:start="59:17" pos:end="59:43"><name pos:start="59:17" pos:end="59:24"><name pos:start="59:17" pos:end="59:17">G</name><index pos:start="59:18" pos:end="59:24">[<expr pos:start="59:19" pos:end="59:23"><name pos:start="59:19" pos:end="59:19">i</name><operator pos:start="59:20" pos:end="59:20">*</operator><name pos:start="59:21" pos:end="59:21">n</name><operator pos:start="59:22" pos:end="59:22">+</operator><name pos:start="59:23" pos:end="59:23">j</name></expr>]</index></name><operator pos:start="59:25" pos:end="59:25">.</operator><call pos:start="59:26" pos:end="59:43"><name pos:start="59:26" pos:end="59:34">push_back</name><argument_list pos:start="59:35" pos:end="59:43">(<argument pos:start="59:36" pos:end="59:42"><expr pos:start="59:36" pos:end="59:42"><name pos:start="59:36" pos:end="59:36">i</name><operator pos:start="59:37" pos:end="59:37">*</operator><name pos:start="59:38" pos:end="59:38">n</name><operator pos:start="59:39" pos:end="59:39">+</operator><name pos:start="59:40" pos:end="59:40">j</name><operator pos:start="59:41" pos:end="59:41">+</operator><name pos:start="59:42" pos:end="59:42">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for>
    <for pos:start="60:5" pos:end="63:44">for <control pos:start="60:9" pos:end="60:25">(<init pos:start="60:10" pos:end="60:17"><decl pos:start="60:10" pos:end="60:16"><type pos:start="60:10" pos:end="60:12"><name pos:start="60:10" pos:end="60:12">int</name></type> <name pos:start="60:14" pos:end="60:14">i</name><init pos:start="60:15" pos:end="60:16">=<expr pos:start="60:16" pos:end="60:16"><literal type="number" pos:start="60:16" pos:end="60:16">0</literal></expr></init></decl>;</init><condition pos:start="60:18" pos:end="60:21"><expr pos:start="60:18" pos:end="60:20"><name pos:start="60:18" pos:end="60:18">i</name><operator pos:start="60:19" pos:end="60:19">&lt;</operator><name pos:start="60:20" pos:end="60:20">n</name></expr>;</condition><incr pos:start="60:22" pos:end="60:24"><expr pos:start="60:22" pos:end="60:24"><name pos:start="60:22" pos:end="60:22">i</name><operator pos:start="60:23" pos:end="60:24">++</operator></expr></incr>)</control><block type="pseudo" pos:start="61:9" pos:end="63:44"><block_content pos:start="61:9" pos:end="63:44">
        <for pos:start="61:9" pos:end="63:44">for <control pos:start="61:13" pos:end="61:31">(<init pos:start="61:14" pos:end="61:21"><decl pos:start="61:14" pos:end="61:20"><type pos:start="61:14" pos:end="61:16"><name pos:start="61:14" pos:end="61:16">int</name></type> <name pos:start="61:18" pos:end="61:18">j</name><init pos:start="61:19" pos:end="61:20">=<expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr></init></decl>;</init><condition pos:start="61:22" pos:end="61:27"><expr pos:start="61:22" pos:end="61:26"><name pos:start="61:22" pos:end="61:22">j</name><operator pos:start="61:23" pos:end="61:23">&lt;</operator><name pos:start="61:24" pos:end="61:24">m</name><operator pos:start="61:25" pos:end="61:25">-</operator><literal type="number" pos:start="61:26" pos:end="61:26">1</literal></expr>;</condition><incr pos:start="61:28" pos:end="61:30"><expr pos:start="61:28" pos:end="61:30"><name pos:start="61:28" pos:end="61:28">j</name><operator pos:start="61:29" pos:end="61:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="62:13" pos:end="63:44"><block_content pos:start="62:13" pos:end="63:44">
            <if_stmt pos:start="62:13" pos:end="63:44"><if pos:start="62:13" pos:end="63:44">if <condition pos:start="62:16" pos:end="62:47">(<expr pos:start="62:17" pos:end="62:46"><name pos:start="62:17" pos:end="62:23"><name pos:start="62:17" pos:end="62:17">s</name><index pos:start="62:18" pos:end="62:20">[<expr pos:start="62:19" pos:end="62:19"><name pos:start="62:19" pos:end="62:19">i</name></expr>]</index><index pos:start="62:21" pos:end="62:23">[<expr pos:start="62:22" pos:end="62:22"><name pos:start="62:22" pos:end="62:22">j</name></expr>]</index></name><operator pos:start="62:24" pos:end="62:25">!=</operator><literal type="char" pos:start="62:26" pos:end="62:28">'#'</literal> <operator pos:start="62:30" pos:end="62:31">&amp;&amp;</operator> <name pos:start="62:33" pos:end="62:41"><name pos:start="62:33" pos:end="62:33">s</name><index pos:start="62:34" pos:end="62:36">[<expr pos:start="62:35" pos:end="62:35"><name pos:start="62:35" pos:end="62:35">i</name></expr>]</index><index pos:start="62:37" pos:end="62:41">[<expr pos:start="62:38" pos:end="62:40"><name pos:start="62:38" pos:end="62:38">j</name><operator pos:start="62:39" pos:end="62:39">+</operator><literal type="number" pos:start="62:40" pos:end="62:40">1</literal></expr>]</index></name><operator pos:start="62:42" pos:end="62:43">!=</operator><literal type="char" pos:start="62:44" pos:end="62:46">'#'</literal></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:44"><block_content pos:start="63:17" pos:end="63:44">
                <expr_stmt pos:start="63:17" pos:end="63:44"><expr pos:start="63:17" pos:end="63:43"><name pos:start="63:17" pos:end="63:24"><name pos:start="63:17" pos:end="63:17">G</name><index pos:start="63:18" pos:end="63:24">[<expr pos:start="63:19" pos:end="63:23"><name pos:start="63:19" pos:end="63:19">i</name><operator pos:start="63:20" pos:end="63:20">*</operator><name pos:start="63:21" pos:end="63:21">n</name><operator pos:start="63:22" pos:end="63:22">+</operator><name pos:start="63:23" pos:end="63:23">j</name></expr>]</index></name><operator pos:start="63:25" pos:end="63:25">.</operator><call pos:start="63:26" pos:end="63:43"><name pos:start="63:26" pos:end="63:34">push_back</name><argument_list pos:start="63:35" pos:end="63:43">(<argument pos:start="63:36" pos:end="63:42"><expr pos:start="63:36" pos:end="63:42"><name pos:start="63:36" pos:end="63:36">i</name><operator pos:start="63:37" pos:end="63:37">*</operator><name pos:start="63:38" pos:end="63:38">n</name><operator pos:start="63:39" pos:end="63:39">+</operator><name pos:start="63:40" pos:end="63:40">j</name><operator pos:start="63:41" pos:end="63:41">+</operator><literal type="number" pos:start="63:42" pos:end="63:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for>
    <expr_stmt pos:start="64:5" pos:end="64:14"><expr pos:start="64:5" pos:end="64:13"><call pos:start="64:5" pos:end="64:13"><name pos:start="64:5" pos:end="64:7">dfs</name><argument_list pos:start="64:8" pos:end="64:13">(<argument pos:start="64:9" pos:end="64:9"><expr pos:start="64:9" pos:end="64:9"><literal type="number" pos:start="64:9" pos:end="64:9">0</literal></expr></argument>,<argument pos:start="64:11" pos:end="64:12"><expr pos:start="64:11" pos:end="64:12"><operator pos:start="64:11" pos:end="64:11">-</operator><literal type="number" pos:start="64:12" pos:end="64:12">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
