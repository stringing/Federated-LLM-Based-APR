<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/665/665.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="45:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list>
<block pos:start="4:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:5">
    <expr_stmt pos:start="5:5" pos:end="5:30"><expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:29">(<argument pos:start="5:13" pos:end="5:18"><expr pos:start="5:13" pos:end="5:18"><literal type="string" pos:start="5:13" pos:end="5:18">"p.in"</literal></expr></argument>,<argument pos:start="5:20" pos:end="5:22"><expr pos:start="5:20" pos:end="5:22"><literal type="string" pos:start="5:20" pos:end="5:22">"r"</literal></expr></argument>,<argument pos:start="5:24" pos:end="5:28"><expr pos:start="5:24" pos:end="5:28"><name pos:start="5:24" pos:end="5:28">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:32"><expr pos:start="6:5" pos:end="6:31"><call pos:start="6:5" pos:end="6:31"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:31">(<argument pos:start="6:13" pos:end="6:19"><expr pos:start="6:13" pos:end="6:19"><literal type="string" pos:start="6:13" pos:end="6:19">"p.out"</literal></expr></argument>,<argument pos:start="6:21" pos:end="6:23"><expr pos:start="6:21" pos:end="6:23"><literal type="string" pos:start="6:21" pos:end="6:23">"w"</literal></expr></argument>,<argument pos:start="6:25" pos:end="6:30"><expr pos:start="6:25" pos:end="6:30"><name pos:start="6:25" pos:end="6:30">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">t</name></decl>,<decl pos:start="7:11" pos:end="7:11"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:11">n</name></decl>,<decl pos:start="7:13" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:13">x</name></decl>,<decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">y</name></decl>,<decl pos:start="7:17" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:17">p</name></decl>,<decl pos:start="7:19" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:19">o</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:11"><expr pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:10">t</name></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:27"><name pos:start="9:9" pos:end="9:14">degree</name><index pos:start="9:15" pos:end="9:19">[<expr pos:start="9:16" pos:end="9:18"><name pos:start="9:16" pos:end="9:16">t</name><operator pos:start="9:17" pos:end="9:17">+</operator><literal type="number" pos:start="9:18" pos:end="9:18">1</literal></expr>]</index><index pos:start="9:20" pos:end="9:27">[<expr pos:start="9:21" pos:end="9:26"><literal type="number" pos:start="9:21" pos:end="9:26">100000</literal></expr>]</index></name></decl>;</decl_stmt>
    <for pos:start="10:5" pos:end="43:5">for<control pos:start="10:8" pos:end="10:25">(<init pos:start="10:9" pos:end="10:16"><decl pos:start="10:9" pos:end="10:15"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">j</name><init pos:start="10:14" pos:end="10:15">=<expr pos:start="10:15" pos:end="10:15"><literal type="number" pos:start="10:15" pos:end="10:15">1</literal></expr></init></decl>;</init><condition pos:start="10:17" pos:end="10:21"><expr pos:start="10:17" pos:end="10:20"><name pos:start="10:17" pos:end="10:17">j</name><operator pos:start="10:18" pos:end="10:19">&lt;=</operator><name pos:start="10:20" pos:end="10:20">t</name></expr>;</condition><incr pos:start="10:22" pos:end="10:24"><expr pos:start="10:22" pos:end="10:24"><name pos:start="10:22" pos:end="10:22">j</name><operator pos:start="10:23" pos:end="10:24">++</operator></expr></incr>)</control>
    <block pos:start="11:5" pos:end="43:5">{<block_content pos:start="12:9" pos:end="42:22">
        <expr_stmt pos:start="12:9" pos:end="12:12"><expr pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:9">p</name><operator pos:start="12:10" pos:end="12:10">=</operator><literal type="number" pos:start="12:11" pos:end="12:11">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:15"><expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:11">cin</name><operator pos:start="13:12" pos:end="13:13">&gt;&gt;</operator><name pos:start="13:14" pos:end="13:14">n</name></expr>;</expr_stmt>
        <decl_stmt pos:start="14:9" pos:end="14:27"><decl pos:start="14:9" pos:end="14:26"><type pos:start="14:9" pos:end="14:19"><name pos:start="14:9" pos:end="14:19"><name pos:start="14:9" pos:end="14:14">vector</name><argument_list type="generic" pos:start="14:15" pos:end="14:19">&lt;<argument pos:start="14:16" pos:end="14:18"><expr pos:start="14:16" pos:end="14:18"><name pos:start="14:16" pos:end="14:18">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="14:21" pos:end="14:26"><name pos:start="14:21" pos:end="14:21">G</name><index pos:start="14:22" pos:end="14:26">[<expr pos:start="14:23" pos:end="14:25"><name pos:start="14:23" pos:end="14:23">n</name><operator pos:start="14:24" pos:end="14:24">+</operator><literal type="number" pos:start="14:25" pos:end="14:25">1</literal></expr>]</index></name></decl>;</decl_stmt>
        <for pos:start="15:9" pos:end="18:9">for<control pos:start="15:12" pos:end="15:29">(<init pos:start="15:13" pos:end="15:20"><decl pos:start="15:13" pos:end="15:19"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:17">i</name><init pos:start="15:18" pos:end="15:19">=<expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr></init></decl>;</init><condition pos:start="15:21" pos:end="15:25"><expr pos:start="15:21" pos:end="15:24"><name pos:start="15:21" pos:end="15:21">i</name><operator pos:start="15:22" pos:end="15:23">&lt;=</operator><name pos:start="15:24" pos:end="15:24">n</name></expr>;</condition><incr pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><name pos:start="15:26" pos:end="15:26">i</name><operator pos:start="15:27" pos:end="15:28">++</operator></expr></incr>)</control>
        <block pos:start="16:9" pos:end="18:9">{<block_content pos:start="17:13" pos:end="17:27">
            <expr_stmt pos:start="17:13" pos:end="17:27"><expr pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:18">degree</name><index pos:start="17:19" pos:end="17:21">[<expr pos:start="17:20" pos:end="17:20"><name pos:start="17:20" pos:end="17:20">j</name></expr>]</index><index pos:start="17:22" pos:end="17:24">[<expr pos:start="17:23" pos:end="17:23"><name pos:start="17:23" pos:end="17:23">i</name></expr>]</index></name><operator pos:start="17:25" pos:end="17:25">=</operator><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="19:9" pos:end="25:9">for<control pos:start="19:12" pos:end="19:29">(<init pos:start="19:13" pos:end="19:20"><decl pos:start="19:13" pos:end="19:19"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:17">i</name><init pos:start="19:18" pos:end="19:19">=<expr pos:start="19:19" pos:end="19:19"><literal type="number" pos:start="19:19" pos:end="19:19">2</literal></expr></init></decl>;</init><condition pos:start="19:21" pos:end="19:25"><expr pos:start="19:21" pos:end="19:24"><name pos:start="19:21" pos:end="19:21">i</name><operator pos:start="19:22" pos:end="19:23">&lt;=</operator><name pos:start="19:24" pos:end="19:24">n</name></expr>;</condition><incr pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:26">i</name><operator pos:start="19:27" pos:end="19:28">++</operator></expr></incr>)</control>
        <block pos:start="20:9" pos:end="25:9">{<block_content pos:start="21:13" pos:end="24:27">
            <expr_stmt pos:start="21:13" pos:end="21:22"><expr pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:15">cin</name><operator pos:start="21:16" pos:end="21:17">&gt;&gt;</operator><name pos:start="21:18" pos:end="21:18">x</name><operator pos:start="21:19" pos:end="21:20">&gt;&gt;</operator><name pos:start="21:21" pos:end="21:21">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:30"><expr pos:start="22:13" pos:end="22:29"><name pos:start="22:13" pos:end="22:16"><name pos:start="22:13" pos:end="22:13">G</name><index pos:start="22:14" pos:end="22:16">[<expr pos:start="22:15" pos:end="22:15"><name pos:start="22:15" pos:end="22:15">x</name></expr>]</index></name><operator pos:start="22:17" pos:end="22:17">.</operator><call pos:start="22:18" pos:end="22:29"><name pos:start="22:18" pos:end="22:26">push_back</name><argument_list pos:start="22:27" pos:end="22:29">(<argument pos:start="22:28" pos:end="22:28"><expr pos:start="22:28" pos:end="22:28"><name pos:start="22:28" pos:end="22:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:30"><expr pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:16"><name pos:start="23:13" pos:end="23:13">G</name><index pos:start="23:14" pos:end="23:16">[<expr pos:start="23:15" pos:end="23:15"><name pos:start="23:15" pos:end="23:15">y</name></expr>]</index></name><operator pos:start="23:17" pos:end="23:17">.</operator><call pos:start="23:18" pos:end="23:29"><name pos:start="23:18" pos:end="23:26">push_back</name><argument_list pos:start="23:27" pos:end="23:29">(<argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="24:13" pos:end="24:27"><expr pos:start="24:13" pos:end="24:26"><name pos:start="24:13" pos:end="24:24"><name pos:start="24:13" pos:end="24:18">degree</name><index pos:start="24:19" pos:end="24:21">[<expr pos:start="24:20" pos:end="24:20"><name pos:start="24:20" pos:end="24:20">j</name></expr>]</index><index pos:start="24:22" pos:end="24:24">[<expr pos:start="24:23" pos:end="24:23"><name pos:start="24:23" pos:end="24:23">x</name></expr>]</index></name><operator pos:start="24:25" pos:end="24:26">++</operator></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="26:9" pos:end="41:9">for<control pos:start="26:12" pos:end="26:28">(<init pos:start="26:13" pos:end="26:20"><decl pos:start="26:13" pos:end="26:19"><type pos:start="26:13" pos:end="26:15"><name pos:start="26:13" pos:end="26:15">int</name></type> <name pos:start="26:17" pos:end="26:17">i</name><init pos:start="26:18" pos:end="26:19">=<expr pos:start="26:19" pos:end="26:19"><literal type="number" pos:start="26:19" pos:end="26:19">1</literal></expr></init></decl>;</init><condition pos:start="26:21" pos:end="26:24"><expr pos:start="26:21" pos:end="26:23"><name pos:start="26:21" pos:end="26:21">i</name><operator pos:start="26:22" pos:end="26:22">&lt;</operator><name pos:start="26:23" pos:end="26:23">n</name></expr>;</condition><incr pos:start="26:25" pos:end="26:27"><expr pos:start="26:25" pos:end="26:27"><name pos:start="26:25" pos:end="26:25">i</name><operator pos:start="26:26" pos:end="26:27">++</operator></expr></incr>)</control>
        <block pos:start="27:9" pos:end="41:9">{<block_content pos:start="28:13" pos:end="40:13">
            <expr_stmt pos:start="28:13" pos:end="28:16"><expr pos:start="28:13" pos:end="28:15"><name pos:start="28:13" pos:end="28:13">o</name><operator pos:start="28:14" pos:end="28:14">=</operator><literal type="number" pos:start="28:15" pos:end="28:15">0</literal></expr>;</expr_stmt>
            <for pos:start="29:13" pos:end="36:13">for<control pos:start="29:16" pos:end="29:42">(<init pos:start="29:17" pos:end="29:24"><decl pos:start="29:17" pos:end="29:23"><type pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:19">int</name></type> <name pos:start="29:21" pos:end="29:21">v</name><init pos:start="29:22" pos:end="29:23">=<expr pos:start="29:23" pos:end="29:23"><literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr></init></decl>;</init><condition pos:start="29:25" pos:end="29:38"><expr pos:start="29:25" pos:end="29:37"><name pos:start="29:25" pos:end="29:25">v</name><operator pos:start="29:26" pos:end="29:26">&lt;</operator><name pos:start="29:27" pos:end="29:30"><name pos:start="29:27" pos:end="29:27">G</name><index pos:start="29:28" pos:end="29:30">[<expr pos:start="29:29" pos:end="29:29"><name pos:start="29:29" pos:end="29:29">i</name></expr>]</index></name><operator pos:start="29:31" pos:end="29:31">.</operator><call pos:start="29:32" pos:end="29:37"><name pos:start="29:32" pos:end="29:35">size</name><argument_list pos:start="29:36" pos:end="29:37">()</argument_list></call></expr>;</condition><incr pos:start="29:39" pos:end="29:41"><expr pos:start="29:39" pos:end="29:41"><name pos:start="29:39" pos:end="29:39">v</name><operator pos:start="29:40" pos:end="29:41">++</operator></expr></incr>)</control>
            <block pos:start="30:13" pos:end="36:13">{<block_content pos:start="31:17" pos:end="35:17">
                <if_stmt pos:start="31:17" pos:end="35:17"><if pos:start="31:17" pos:end="35:17">if<condition pos:start="31:19" pos:end="31:51">(<expr pos:start="31:20" pos:end="31:50"><name pos:start="31:20" pos:end="31:31"><name pos:start="31:20" pos:end="31:25">degree</name><index pos:start="31:26" pos:end="31:28">[<expr pos:start="31:27" pos:end="31:27"><name pos:start="31:27" pos:end="31:27">j</name></expr>]</index><index pos:start="31:29" pos:end="31:31">[<expr pos:start="31:30" pos:end="31:30"><name pos:start="31:30" pos:end="31:30">i</name></expr>]</index></name><operator pos:start="31:32" pos:end="31:32">&lt;</operator><name pos:start="31:33" pos:end="31:50"><name pos:start="31:33" pos:end="31:38">degree</name><index pos:start="31:39" pos:end="31:41">[<expr pos:start="31:40" pos:end="31:40"><name pos:start="31:40" pos:end="31:40">j</name></expr>]</index><index pos:start="31:42" pos:end="31:50">[<expr pos:start="31:43" pos:end="31:49"><name pos:start="31:43" pos:end="31:49"><name pos:start="31:43" pos:end="31:43">G</name><index pos:start="31:44" pos:end="31:46">[<expr pos:start="31:45" pos:end="31:45"><name pos:start="31:45" pos:end="31:45">i</name></expr>]</index><index pos:start="31:47" pos:end="31:49">[<expr pos:start="31:48" pos:end="31:48"><name pos:start="31:48" pos:end="31:48">v</name></expr>]</index></name></expr>]</index></name></expr>)</condition>
                <block pos:start="32:17" pos:end="35:17">{<block_content pos:start="33:21" pos:end="34:26">
                    <expr_stmt pos:start="33:21" pos:end="33:24"><expr pos:start="33:21" pos:end="33:23"><name pos:start="33:21" pos:end="33:21">o</name><operator pos:start="33:22" pos:end="33:23">++</operator></expr>;</expr_stmt>
                    <break pos:start="34:21" pos:end="34:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="37:13" pos:end="40:13"><if pos:start="37:13" pos:end="40:13">if<condition pos:start="37:15" pos:end="37:20">(<expr pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:16">o</name><operator pos:start="37:17" pos:end="37:18">==</operator><literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition>
            <block pos:start="38:13" pos:end="40:13">{<block_content pos:start="39:17" pos:end="39:20">
                <expr_stmt pos:start="39:17" pos:end="39:20"><expr pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:17">p</name><operator pos:start="39:18" pos:end="39:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="42:9" pos:end="42:22"><expr pos:start="42:9" pos:end="42:21"><name pos:start="42:9" pos:end="42:12">cout</name><operator pos:start="42:13" pos:end="42:14">&lt;&lt;</operator><name pos:start="42:15" pos:end="42:15">p</name><operator pos:start="42:16" pos:end="42:17">&lt;&lt;</operator><name pos:start="42:18" pos:end="42:21">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
   
</block_content>}</block></function>
</unit>
