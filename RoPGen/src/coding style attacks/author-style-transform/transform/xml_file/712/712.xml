<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/712/712.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:14">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:14">&lt;map&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:30"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">n</name></decl>, <decl pos:start="4:8" pos:end="4:10"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:8" pos:end="4:10">tmp</name></decl>, <decl pos:start="4:13" pos:end="4:23"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:13" pos:end="4:23"><name pos:start="4:13" pos:end="4:15">sum</name><index pos:start="4:16" pos:end="4:23">[<expr pos:start="4:17" pos:end="4:22"><literal type="number" pos:start="4:17" pos:end="4:22">100005</literal></expr>]</index></name></decl>, <decl pos:start="4:26" pos:end="4:29"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:26" pos:end="4:29">maxx</name></decl>;</decl_stmt> 
<function pos:start="5:1" pos:end="26:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name> <parameter_list pos:start="5:10" pos:end="5:11">()</parameter_list> <block pos:start="5:13" pos:end="26:1">{<block_content pos:start="6:5" pos:end="25:13">
    <expr_stmt pos:start="6:5" pos:end="6:35"><expr pos:start="6:5" pos:end="6:34"><call pos:start="6:5" pos:end="6:34"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:34">(<argument pos:start="6:13" pos:end="6:21"><expr pos:start="6:13" pos:end="6:21"><literal type="string" pos:start="6:13" pos:end="6:21">"pair.in"</literal></expr></argument>, <argument pos:start="6:24" pos:end="6:26"><expr pos:start="6:24" pos:end="6:26"><literal type="string" pos:start="6:24" pos:end="6:26">"r"</literal></expr></argument>, <argument pos:start="6:29" pos:end="6:33"><expr pos:start="6:29" pos:end="6:33"><name pos:start="6:29" pos:end="6:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:37"><expr pos:start="7:5" pos:end="7:36"><call pos:start="7:5" pos:end="7:36"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:36">(<argument pos:start="7:13" pos:end="7:22"><expr pos:start="7:13" pos:end="7:22"><literal type="string" pos:start="7:13" pos:end="7:22">"pair.out"</literal></expr></argument>, <argument pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><literal type="string" pos:start="7:25" pos:end="7:27">"w"</literal></expr></argument>, <argument pos:start="7:30" pos:end="7:35"><expr pos:start="7:30" pos:end="7:35"><name pos:start="7:30" pos:end="7:35">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:22"><decl pos:start="8:5" pos:end="8:21"><type pos:start="8:5" pos:end="8:17"><name pos:start="8:5" pos:end="8:17"><name pos:start="8:5" pos:end="8:7">map</name><argument_list type="generic" pos:start="8:8" pos:end="8:17">&lt;<argument pos:start="8:9" pos:end="8:11"><expr pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></expr></argument>, <argument pos:start="8:14" pos:end="8:16"><expr pos:start="8:14" pos:end="8:16"><name pos:start="8:14" pos:end="8:16">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="8:19" pos:end="8:21">vis</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:13"><expr pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:7">cin</name> <operator pos:start="9:9" pos:end="9:10">&gt;&gt;</operator> <name pos:start="9:12" pos:end="9:12">n</name></expr>;</expr_stmt>
    <for pos:start="10:5" pos:end="23:5">for <control pos:start="10:9" pos:end="10:32">(<init pos:start="10:10" pos:end="10:19"><decl pos:start="10:10" pos:end="10:18"><type pos:start="10:10" pos:end="10:12"><name pos:start="10:10" pos:end="10:12">int</name></type> <name pos:start="10:14" pos:end="10:14">i</name> <init pos:start="10:16" pos:end="10:18">= <expr pos:start="10:18" pos:end="10:18"><literal type="number" pos:start="10:18" pos:end="10:18">1</literal></expr></init></decl>;</init> <condition pos:start="10:21" pos:end="10:27"><expr pos:start="10:21" pos:end="10:26"><name pos:start="10:21" pos:end="10:21">i</name> <operator pos:start="10:23" pos:end="10:24">&lt;=</operator> <name pos:start="10:26" pos:end="10:26">n</name></expr>;</condition> <incr pos:start="10:29" pos:end="10:31"><expr pos:start="10:29" pos:end="10:31"><name pos:start="10:29" pos:end="10:29">i</name><operator pos:start="10:30" pos:end="10:31">++</operator></expr></incr>)</control> <block pos:start="10:34" pos:end="23:5">{<block_content pos:start="11:9" pos:end="22:9">
        <expr_stmt pos:start="11:9" pos:end="11:19"><expr pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:11">cin</name> <operator pos:start="11:13" pos:end="11:14">&gt;&gt;</operator> <name pos:start="11:16" pos:end="11:18">tmp</name></expr>;</expr_stmt>
        <if_stmt pos:start="12:9" pos:end="14:9"><if pos:start="12:9" pos:end="14:9">if <condition pos:start="12:12" pos:end="12:21">(<expr pos:start="12:13" pos:end="12:20"><name pos:start="12:13" pos:end="12:15">tmp</name> <operator pos:start="12:17" pos:end="12:18">==</operator> <literal type="number" pos:start="12:20" pos:end="12:20">0</literal></expr>)</condition> <block pos:start="12:23" pos:end="14:9">{<block_content pos:start="13:13" pos:end="13:21"> 
            <expr_stmt pos:start="13:13" pos:end="13:21"><expr pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:15">tmp</name> <operator pos:start="13:17" pos:end="13:17">=</operator> <operator pos:start="13:19" pos:end="13:19">-</operator><literal type="number" pos:start="13:20" pos:end="13:20">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:34"><expr pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:11">sum</name><index pos:start="15:12" pos:end="15:14">[<expr pos:start="15:13" pos:end="15:13"><name pos:start="15:13" pos:end="15:13">i</name></expr>]</index></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <name pos:start="15:18" pos:end="15:27"><name pos:start="15:18" pos:end="15:20">sum</name><index pos:start="15:21" pos:end="15:27">[<expr pos:start="15:22" pos:end="15:26"><name pos:start="15:22" pos:end="15:22">i</name> <operator pos:start="15:24" pos:end="15:24">-</operator> <literal type="number" pos:start="15:26" pos:end="15:26">1</literal></expr>]</index></name> <operator pos:start="15:29" pos:end="15:29">+</operator> <name pos:start="15:31" pos:end="15:33">tmp</name></expr>;</expr_stmt>
        <if_stmt pos:start="16:9" pos:end="22:9"><if pos:start="16:9" pos:end="18:9">if <condition pos:start="16:12" pos:end="16:31">(<expr pos:start="16:13" pos:end="16:30"><operator pos:start="16:13" pos:end="16:13">!</operator><call pos:start="16:14" pos:end="16:30"><name pos:start="16:14" pos:end="16:22"><name pos:start="16:14" pos:end="16:16">vis</name><operator pos:start="16:17" pos:end="16:17">.</operator><name pos:start="16:18" pos:end="16:22">count</name></name><argument_list pos:start="16:23" pos:end="16:30">(<argument pos:start="16:24" pos:end="16:29"><expr pos:start="16:24" pos:end="16:29"><name pos:start="16:24" pos:end="16:29"><name pos:start="16:24" pos:end="16:26">sum</name><index pos:start="16:27" pos:end="16:29">[<expr pos:start="16:28" pos:end="16:28"><name pos:start="16:28" pos:end="16:28">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="16:33" pos:end="18:9">{<block_content pos:start="17:13" pos:end="17:28">
            <expr_stmt pos:start="17:13" pos:end="17:28"><expr pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:15">vis</name><index pos:start="17:16" pos:end="17:23">[<expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:19">sum</name><index pos:start="17:20" pos:end="17:22">[<expr pos:start="17:21" pos:end="17:21"><name pos:start="17:21" pos:end="17:21">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="17:25" pos:end="17:25">=</operator> <name pos:start="17:27" pos:end="17:27">i</name></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="18:11" pos:end="22:9">else <block pos:start="18:16" pos:end="22:9">{<block_content pos:start="19:13" pos:end="21:13">
            <if_stmt pos:start="19:13" pos:end="21:13"><if pos:start="19:13" pos:end="21:13">if <condition pos:start="19:16" pos:end="19:39">(<expr pos:start="19:17" pos:end="19:38"><name pos:start="19:17" pos:end="19:20">maxx</name> <operator pos:start="19:22" pos:end="19:22">&lt;</operator> <name pos:start="19:24" pos:end="19:24">i</name> <operator pos:start="19:26" pos:end="19:26">-</operator> <name pos:start="19:28" pos:end="19:38"><name pos:start="19:28" pos:end="19:30">vis</name><index pos:start="19:31" pos:end="19:38">[<expr pos:start="19:32" pos:end="19:37"><name pos:start="19:32" pos:end="19:37"><name pos:start="19:32" pos:end="19:34">sum</name><index pos:start="19:35" pos:end="19:37">[<expr pos:start="19:36" pos:end="19:36"><name pos:start="19:36" pos:end="19:36">i</name></expr>]</index></name></expr>]</index></name></expr>)</condition> <block pos:start="19:41" pos:end="21:13">{<block_content pos:start="20:17" pos:end="20:39">
                <expr_stmt pos:start="20:17" pos:end="20:39"><expr pos:start="20:17" pos:end="20:38"><name pos:start="20:17" pos:end="20:20">maxx</name> <operator pos:start="20:22" pos:end="20:22">=</operator> <name pos:start="20:24" pos:end="20:24">i</name> <operator pos:start="20:26" pos:end="20:26">-</operator> <name pos:start="20:28" pos:end="20:38"><name pos:start="20:28" pos:end="20:30">vis</name><index pos:start="20:31" pos:end="20:38">[<expr pos:start="20:32" pos:end="20:37"><name pos:start="20:32" pos:end="20:37"><name pos:start="20:32" pos:end="20:34">sum</name><index pos:start="20:35" pos:end="20:37">[<expr pos:start="20:36" pos:end="20:36"><name pos:start="20:36" pos:end="20:36">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="24:5" pos:end="24:17"><expr pos:start="24:5" pos:end="24:16"><name pos:start="24:5" pos:end="24:8">cout</name> <operator pos:start="24:10" pos:end="24:11">&lt;&lt;</operator> <name pos:start="24:13" pos:end="24:16">maxx</name></expr>;</expr_stmt>
    <return pos:start="25:5" pos:end="25:13">return <expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
