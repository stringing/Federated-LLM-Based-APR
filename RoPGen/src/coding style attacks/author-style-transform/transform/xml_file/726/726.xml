<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/726/726.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="20:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="20:1">{<block_content pos:start="5:5" pos:end="19:13">
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:12">c</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:20"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:12">z</name></decl>,<decl pos:start="6:14" pos:end="6:19"><type ref="prev" pos:start="6:5" pos:end="6:10"/><name pos:start="6:14" pos:end="6:16">max</name><init pos:start="6:17" pos:end="6:19">=<expr pos:start="6:18" pos:end="6:19"><literal type="string" pos:start="6:18" pos:end="6:19">""</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:19"><expr pos:start="7:5" pos:end="7:18"><call pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:11">getline</name><argument_list pos:start="7:12" pos:end="7:18">(<argument pos:start="7:13" pos:end="7:15"><expr pos:start="7:13" pos:end="7:15"><name pos:start="7:13" pos:end="7:15">cin</name></expr></argument>,<argument pos:start="7:17" pos:end="7:17"><expr pos:start="7:17" pos:end="7:17"><name pos:start="7:17" pos:end="7:17">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="8:5" pos:end="17:5">for<control pos:start="8:8" pos:end="8:31">(<init pos:start="8:9" pos:end="8:16"><decl pos:start="8:9" pos:end="8:15"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:13">i</name><init pos:start="8:14" pos:end="8:15">=<expr pos:start="8:15" pos:end="8:15"><literal type="number" pos:start="8:15" pos:end="8:15">0</literal></expr></init></decl>;</init><condition pos:start="8:17" pos:end="8:27"><expr pos:start="8:17" pos:end="8:26"><name pos:start="8:17" pos:end="8:17">i</name><operator pos:start="8:18" pos:end="8:18">&lt;</operator><call pos:start="8:19" pos:end="8:26"><name pos:start="8:19" pos:end="8:24"><name pos:start="8:19" pos:end="8:19">c</name><operator pos:start="8:20" pos:end="8:20">.</operator><name pos:start="8:21" pos:end="8:24">size</name></name><argument_list pos:start="8:25" pos:end="8:26">()</argument_list></call></expr>;</condition><incr pos:start="8:28" pos:end="8:30"><expr pos:start="8:28" pos:end="8:30"><name pos:start="8:28" pos:end="8:28">i</name><operator pos:start="8:29" pos:end="8:30">++</operator></expr></incr>)</control><block pos:start="8:32" pos:end="17:5">{<block_content pos:start="9:9" pos:end="16:9">
        <if_stmt pos:start="9:9" pos:end="16:9"><if pos:start="9:9" pos:end="11:9">if<condition pos:start="9:11" pos:end="9:21">(<expr pos:start="9:12" pos:end="9:20"><name pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:12">c</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><name pos:start="9:14" pos:end="9:14">i</name></expr>]</index></name><operator pos:start="9:16" pos:end="9:17">!=</operator><literal type="char" pos:start="9:18" pos:end="9:20">' '</literal></expr>)</condition><block pos:start="9:22" pos:end="11:9">{<block_content pos:start="10:13" pos:end="10:21">
            <expr_stmt pos:start="10:13" pos:end="10:21"><expr pos:start="10:13" pos:end="10:20"><name pos:start="10:13" pos:end="10:13">z</name><operator pos:start="10:14" pos:end="10:14">=</operator><name pos:start="10:15" pos:end="10:15">z</name><operator pos:start="10:16" pos:end="10:16">+</operator><name pos:start="10:17" pos:end="10:20"><name pos:start="10:17" pos:end="10:17">c</name><index pos:start="10:18" pos:end="10:20">[<expr pos:start="10:19" pos:end="10:19"><name pos:start="10:19" pos:end="10:19">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="11:10" pos:end="16:9">else<block pos:start="11:14" pos:end="16:9">{<block_content pos:start="12:13" pos:end="15:17">
            <if_stmt pos:start="12:13" pos:end="14:13"><if pos:start="12:13" pos:end="14:13">if<condition pos:start="12:15" pos:end="12:35">(<expr pos:start="12:16" pos:end="12:34"><call pos:start="12:16" pos:end="12:23"><name pos:start="12:16" pos:end="12:21"><name pos:start="12:16" pos:end="12:16">z</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:21">size</name></name><argument_list pos:start="12:22" pos:end="12:23">()</argument_list></call><operator pos:start="12:24" pos:end="12:24">&gt;</operator><call pos:start="12:25" pos:end="12:34"><name pos:start="12:25" pos:end="12:32"><name pos:start="12:25" pos:end="12:27">max</name><operator pos:start="12:28" pos:end="12:28">.</operator><name pos:start="12:29" pos:end="12:32">size</name></name><argument_list pos:start="12:33" pos:end="12:34">()</argument_list></call></expr>)</condition><block pos:start="12:36" pos:end="14:13">{<block_content pos:start="13:17" pos:end="13:22">
                <expr_stmt pos:start="13:17" pos:end="13:22"><expr pos:start="13:17" pos:end="13:21"><name pos:start="13:17" pos:end="13:19">max</name><operator pos:start="13:20" pos:end="13:20">=</operator><name pos:start="13:21" pos:end="13:21">z</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:17"><expr pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:13">z</name><operator pos:start="15:14" pos:end="15:14">=</operator><literal type="string" pos:start="15:15" pos:end="15:16">""</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>    
    </block_content>}</block></for>
    <expr_stmt pos:start="18:5" pos:end="18:21"><expr pos:start="18:5" pos:end="18:20"><name pos:start="18:5" pos:end="18:8">cout</name><operator pos:start="18:9" pos:end="18:10">&lt;&lt;</operator><name pos:start="18:11" pos:end="18:13">max</name><operator pos:start="18:14" pos:end="18:15">&lt;&lt;</operator> <name pos:start="18:17" pos:end="18:20">endl</name></expr>;</expr_stmt>
    <return pos:start="19:5" pos:end="19:13">return <expr pos:start="19:12" pos:end="19:12"><literal type="number" pos:start="19:12" pos:end="19:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
