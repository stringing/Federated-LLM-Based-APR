<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/191/191.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="50:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list>
<block pos:start="4:1" pos:end="50:1">{<block_content pos:start="5:5" pos:end="49:13">
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:11"><expr pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:7">cin</name><operator pos:start="6:8" pos:end="6:9">&gt;&gt;</operator><name pos:start="6:10" pos:end="6:10">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">string</name></type> <name pos:start="7:12" pos:end="7:17"><name pos:start="7:12" pos:end="7:12">q</name><index pos:start="7:13" pos:end="7:17">[<expr pos:start="7:14" pos:end="7:16"><literal type="number" pos:start="7:14" pos:end="7:16">105</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:19"><decl pos:start="8:5" pos:end="8:12"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">l</name> <init pos:start="8:11" pos:end="8:12">=<expr pos:start="8:12" pos:end="8:12"><literal type="number" pos:start="8:12" pos:end="8:12">0</literal></expr></init></decl>,<decl pos:start="8:14" pos:end="8:18"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:14" pos:end="8:14">r</name> <init pos:start="8:16" pos:end="8:18">= <expr pos:start="8:18" pos:end="8:18"><literal type="number" pos:start="8:18" pos:end="8:18">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="9:5" pos:end="48:5">while <condition pos:start="9:11" pos:end="9:15">(<expr pos:start="9:12" pos:end="9:14"><name pos:start="9:12" pos:end="9:12">n</name><operator pos:start="9:13" pos:end="9:14">--</operator></expr>)</condition>
    <block pos:start="10:5" pos:end="48:5">{<block_content pos:start="11:9" pos:end="47:9">
        <decl_stmt pos:start="11:9" pos:end="11:14"><decl pos:start="11:9" pos:end="11:13"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">k</name></decl>;</decl_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:17"><expr pos:start="12:9" pos:end="12:16"><name pos:start="12:9" pos:end="12:11">cin</name> <operator pos:start="12:13" pos:end="12:14">&gt;&gt;</operator> <name pos:start="12:16" pos:end="12:16">k</name></expr>;</expr_stmt>
        <if_stmt pos:start="13:9" pos:end="47:9"><if pos:start="13:9" pos:end="37:9">if<condition pos:start="13:11" pos:end="13:17">(<expr pos:start="13:12" pos:end="13:16"><name pos:start="13:12" pos:end="13:12">k</name> <operator pos:start="13:14" pos:end="13:15">==</operator><literal type="number" pos:start="13:16" pos:end="13:16">1</literal></expr>)</condition>
        <block pos:start="14:9" pos:end="37:9">{<block_content pos:start="15:13" pos:end="36:16">
            <decl_stmt pos:start="15:13" pos:end="15:24"><decl pos:start="15:13" pos:end="15:23"><type pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:18">string</name></type> <name pos:start="15:20" pos:end="15:23">name</name></decl>;</decl_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:24"><expr pos:start="16:13" pos:end="16:23"><name pos:start="16:13" pos:end="16:15">cin</name> <operator pos:start="16:17" pos:end="16:18">&gt;&gt;</operator> <name pos:start="16:20" pos:end="16:23">name</name></expr>;</expr_stmt>
            <decl_stmt pos:start="17:13" pos:end="17:24"><decl pos:start="17:13" pos:end="17:23"><type pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:16">bool</name></type> <name pos:start="17:18" pos:end="17:21">flag</name><init pos:start="17:22" pos:end="17:23">=<expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="18:13" pos:end="31:13">for <control pos:start="18:17" pos:end="18:39">(<init pos:start="18:18" pos:end="18:27"><decl pos:start="18:18" pos:end="18:26"><type pos:start="18:18" pos:end="18:20"><name pos:start="18:18" pos:end="18:20">int</name></type> <name pos:start="18:22" pos:end="18:22">i</name> <init pos:start="18:24" pos:end="18:26">= <expr pos:start="18:26" pos:end="18:26"><name pos:start="18:26" pos:end="18:26">l</name></expr></init></decl>;</init> <condition pos:start="18:29" pos:end="18:34"><expr pos:start="18:29" pos:end="18:33"><name pos:start="18:29" pos:end="18:29">i</name> <operator pos:start="18:31" pos:end="18:31">&lt;</operator> <name pos:start="18:33" pos:end="18:33">r</name></expr>;</condition> <incr pos:start="18:36" pos:end="18:38"><expr pos:start="18:36" pos:end="18:38"><name pos:start="18:36" pos:end="18:36">i</name><operator pos:start="18:37" pos:end="18:38">++</operator></expr></incr>)</control>
            <block pos:start="19:13" pos:end="31:13">{<block_content pos:start="20:17" pos:end="29:17">
                <if_stmt pos:start="20:17" pos:end="29:17"><if pos:start="20:17" pos:end="29:17">if <condition pos:start="20:20" pos:end="20:38">(<expr pos:start="20:21" pos:end="20:37"><name pos:start="20:21" pos:end="20:27"><name pos:start="20:21" pos:end="20:21">q</name><index pos:start="20:22" pos:end="20:24">[<expr pos:start="20:23" pos:end="20:23"><name pos:start="20:23" pos:end="20:23">i</name></expr>]</index><index pos:start="20:25" pos:end="20:27">[<expr pos:start="20:26" pos:end="20:26"><literal type="number" pos:start="20:26" pos:end="20:26">0</literal></expr>]</index></name> <operator pos:start="20:29" pos:end="20:30">==</operator><name pos:start="20:31" pos:end="20:37"><name pos:start="20:31" pos:end="20:34">name</name><index pos:start="20:35" pos:end="20:37">[<expr pos:start="20:36" pos:end="20:36"><literal type="number" pos:start="20:36" pos:end="20:36">0</literal></expr>]</index></name></expr>)</condition>
                <block pos:start="21:17" pos:end="29:17">{<block_content pos:start="22:21" pos:end="28:26">
                    <for pos:start="22:21" pos:end="25:21">for <control pos:start="22:25" pos:end="22:43">(<init pos:start="22:26" pos:end="22:33"><decl pos:start="22:26" pos:end="22:32"><type pos:start="22:26" pos:end="22:28"><name pos:start="22:26" pos:end="22:28">int</name></type> <name pos:start="22:30" pos:end="22:30">j</name><init pos:start="22:31" pos:end="22:32">=<expr pos:start="22:32" pos:end="22:32"><name pos:start="22:32" pos:end="22:32">r</name></expr></init></decl>;</init><condition pos:start="22:34" pos:end="22:39"><expr pos:start="22:34" pos:end="22:38"><name pos:start="22:34" pos:end="22:34">j</name><operator pos:start="22:35" pos:end="22:35">&gt;</operator><name pos:start="22:36" pos:end="22:36">i</name><operator pos:start="22:37" pos:end="22:37">+</operator><literal type="number" pos:start="22:38" pos:end="22:38">1</literal></expr>;</condition><incr pos:start="22:40" pos:end="22:42"><expr pos:start="22:40" pos:end="22:42"><name pos:start="22:40" pos:end="22:40">j</name><operator pos:start="22:41" pos:end="22:42">--</operator></expr></incr>)</control>
                    <block pos:start="23:21" pos:end="25:21">{<block_content pos:start="24:25" pos:end="24:39">
                        <expr_stmt pos:start="24:25" pos:end="24:39"><expr pos:start="24:25" pos:end="24:38"><name pos:start="24:25" pos:end="24:28"><name pos:start="24:25" pos:end="24:25">q</name><index pos:start="24:26" pos:end="24:28">[<expr pos:start="24:27" pos:end="24:27"><name pos:start="24:27" pos:end="24:27">j</name></expr>]</index></name><operator pos:start="24:29" pos:end="24:29">=</operator> <name pos:start="24:31" pos:end="24:38"><name pos:start="24:31" pos:end="24:31">q</name><index pos:start="24:32" pos:end="24:38">[<expr pos:start="24:33" pos:end="24:37"><name pos:start="24:33" pos:end="24:33">j</name> <operator pos:start="24:35" pos:end="24:35">-</operator> <literal type="number" pos:start="24:37" pos:end="24:37">1</literal></expr>]</index></name></expr>;</expr_stmt>
                    </block_content>}</block></for>
                    <expr_stmt pos:start="26:21" pos:end="26:36"><expr pos:start="26:21" pos:end="26:35"><name pos:start="26:21" pos:end="26:28"><name pos:start="26:21" pos:end="26:21">q</name><index pos:start="26:22" pos:end="26:28">[<expr pos:start="26:23" pos:end="26:27"><name pos:start="26:23" pos:end="26:23">i</name> <operator pos:start="26:25" pos:end="26:25">+</operator> <literal type="number" pos:start="26:27" pos:end="26:27">1</literal></expr>]</index></name> <operator pos:start="26:30" pos:end="26:30">=</operator> <name pos:start="26:32" pos:end="26:35">name</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="27:21" pos:end="27:29"><expr pos:start="27:21" pos:end="27:28"><name pos:start="27:21" pos:end="27:24">flag</name> <operator pos:start="27:26" pos:end="27:26">=</operator> <literal type="number" pos:start="27:28" pos:end="27:28">1</literal></expr>;</expr_stmt>
                    <break pos:start="28:21" pos:end="28:26">break;</break>
                </block_content>}</block></if></if_stmt>
                
            </block_content>}</block></for>
            <if_stmt pos:start="32:13" pos:end="35:13"><if pos:start="32:13" pos:end="35:13">if <condition pos:start="32:16" pos:end="32:22">(<expr pos:start="32:17" pos:end="32:21"><operator pos:start="32:17" pos:end="32:17">!</operator><name pos:start="32:18" pos:end="32:21">flag</name></expr>)</condition>
            <block pos:start="33:13" pos:end="35:13">{<block_content pos:start="34:17" pos:end="34:28">
                <expr_stmt pos:start="34:17" pos:end="34:28"><expr pos:start="34:17" pos:end="34:27"><name pos:start="34:17" pos:end="34:20"><name pos:start="34:17" pos:end="34:17">q</name><index pos:start="34:18" pos:end="34:20">[<expr pos:start="34:19" pos:end="34:19"><name pos:start="34:19" pos:end="34:19">r</name></expr>]</index></name> <operator pos:start="34:22" pos:end="34:22">=</operator> <name pos:start="34:24" pos:end="34:27">name</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="36:13" pos:end="36:16"><expr pos:start="36:13" pos:end="36:15"><name pos:start="36:13" pos:end="36:13">r</name><operator pos:start="36:14" pos:end="36:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="38:9" pos:end="42:9">else if<condition pos:start="38:16" pos:end="38:21">(<expr pos:start="38:17" pos:end="38:20"><name pos:start="38:17" pos:end="38:17">l</name><operator pos:start="38:18" pos:end="38:19">!=</operator><name pos:start="38:20" pos:end="38:20">r</name></expr>)</condition>
        <block pos:start="39:9" pos:end="42:9">{<block_content pos:start="40:13" pos:end="41:16">   
            <expr_stmt pos:start="40:13" pos:end="40:29"><expr pos:start="40:13" pos:end="40:28"><name pos:start="40:13" pos:end="40:16">cout</name><operator pos:start="40:17" pos:end="40:18">&lt;&lt;</operator><name pos:start="40:19" pos:end="40:22"><name pos:start="40:19" pos:end="40:19">q</name><index pos:start="40:20" pos:end="40:22">[<expr pos:start="40:21" pos:end="40:21"><name pos:start="40:21" pos:end="40:21">l</name></expr>]</index></name><operator pos:start="40:23" pos:end="40:24">&lt;&lt;</operator><name pos:start="40:25" pos:end="40:28">endl</name></expr>;</expr_stmt>
            <expr_stmt pos:start="41:13" pos:end="41:16"><expr pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:13">l</name><operator pos:start="41:14" pos:end="41:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else pos:start="43:9" pos:end="47:9">else
        <block pos:start="44:9" pos:end="47:9">{<block_content pos:start="45:13" pos:end="46:18">
            <expr_stmt pos:start="45:13" pos:end="45:22"><expr pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:16">cout</name><operator pos:start="45:17" pos:end="45:18">&lt;&lt;</operator><literal type="char" pos:start="45:19" pos:end="45:21">'0'</literal></expr>;</expr_stmt>
            <break pos:start="46:13" pos:end="46:18">break;</break>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
