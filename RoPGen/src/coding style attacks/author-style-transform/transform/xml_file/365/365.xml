<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/365/365.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:16">&lt;stack&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="75:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="75:1">{<block_content pos:start="5:5" pos:end="74:13">
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:13"><expr pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:7">cin</name> <operator pos:start="6:9" pos:end="6:10">&gt;&gt;</operator> <name pos:start="6:12" pos:end="6:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:9">stack</name> <argument_list type="generic" pos:start="7:11" pos:end="7:15">&lt;<argument pos:start="7:12" pos:end="7:14"><expr pos:start="7:12" pos:end="7:14"><name pos:start="7:12" pos:end="7:14">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="7:17" pos:end="7:17">a</name></decl>, <decl pos:start="7:20" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:15"/><name pos:start="7:20" pos:end="7:20">b</name></decl>;</decl_stmt>
    <while pos:start="8:5" pos:end="54:5">while <condition pos:start="8:11" pos:end="8:15">(<expr pos:start="8:12" pos:end="8:14"><name pos:start="8:12" pos:end="8:12">n</name><operator pos:start="8:13" pos:end="8:14">--</operator></expr>)</condition> <block pos:start="8:17" pos:end="54:5">{<block_content pos:start="9:9" pos:end="53:9">
        <decl_stmt pos:start="9:9" pos:end="9:15"><decl pos:start="9:9" pos:end="9:14"><type pos:start="9:9" pos:end="9:12"><name pos:start="9:9" pos:end="9:12">char</name></type> <name pos:start="9:14" pos:end="9:14">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:17"><expr pos:start="10:9" pos:end="10:16"><name pos:start="10:9" pos:end="10:11">cin</name> <operator pos:start="10:13" pos:end="10:14">&gt;&gt;</operator> <name pos:start="10:16" pos:end="10:16">s</name></expr>;</expr_stmt>
        <if_stmt pos:start="11:9" pos:end="53:9"><if pos:start="11:9" pos:end="31:9">if <condition pos:start="11:12" pos:end="11:21">(<expr pos:start="11:13" pos:end="11:20"><name pos:start="11:13" pos:end="11:13">s</name> <operator pos:start="11:15" pos:end="11:16">==</operator> <literal type="char" pos:start="11:18" pos:end="11:20">'A'</literal></expr>)</condition> <block pos:start="11:23" pos:end="31:9">{<block_content pos:start="12:13" pos:end="30:13">
            <decl_stmt pos:start="12:13" pos:end="12:19"><decl pos:start="12:13" pos:end="12:18"><type pos:start="12:13" pos:end="12:16"><name pos:start="12:13" pos:end="12:16">char</name></type> <name pos:start="12:18" pos:end="12:18">x</name></decl>;</decl_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:21"><expr pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:15">cin</name> <operator pos:start="13:17" pos:end="13:18">&gt;&gt;</operator> <name pos:start="13:20" pos:end="13:20">x</name></expr>;</expr_stmt>
            <if_stmt pos:start="14:13" pos:end="30:13"><if pos:start="14:13" pos:end="18:13">if <condition pos:start="14:16" pos:end="14:25">(<expr pos:start="14:17" pos:end="14:24"><name pos:start="14:17" pos:end="14:17">x</name> <operator pos:start="14:19" pos:end="14:20">==</operator> <literal type="char" pos:start="14:22" pos:end="14:24">'I'</literal></expr>)</condition> <block pos:start="14:27" pos:end="18:13">{<block_content pos:start="15:17" pos:end="17:29">
                <decl_stmt pos:start="15:17" pos:end="15:25"><decl pos:start="15:17" pos:end="15:24"><type pos:start="15:17" pos:end="15:19"><name pos:start="15:17" pos:end="15:19">int</name></type> <name pos:start="15:21" pos:end="15:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="16:17" pos:end="16:28"><expr pos:start="16:17" pos:end="16:27"><name pos:start="16:17" pos:end="16:19">cin</name> <operator pos:start="16:21" pos:end="16:22">&gt;&gt;</operator> <name pos:start="16:24" pos:end="16:27">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="17:17" pos:end="17:29"><expr pos:start="17:17" pos:end="17:28"><call pos:start="17:17" pos:end="17:28"><name pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:17">a</name><operator pos:start="17:18" pos:end="17:18">.</operator><name pos:start="17:19" pos:end="17:22">push</name></name><argument_list pos:start="17:23" pos:end="17:28">(<argument pos:start="17:24" pos:end="17:27"><expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="18:15" pos:end="22:13">else if <condition pos:start="18:23" pos:end="18:32">(<expr pos:start="18:24" pos:end="18:31"><name pos:start="18:24" pos:end="18:24">x</name> <operator pos:start="18:26" pos:end="18:27">==</operator> <literal type="char" pos:start="18:29" pos:end="18:31">'D'</literal></expr>)</condition> <block pos:start="18:34" pos:end="22:13">{<block_content pos:start="19:17" pos:end="21:17">
                <if_stmt pos:start="19:17" pos:end="21:17"><if pos:start="19:17" pos:end="21:17">if <condition pos:start="19:20" pos:end="19:31">(<expr pos:start="19:21" pos:end="19:30"><operator pos:start="19:21" pos:end="19:21">!</operator><call pos:start="19:22" pos:end="19:30"><name pos:start="19:22" pos:end="19:28"><name pos:start="19:22" pos:end="19:22">a</name><operator pos:start="19:23" pos:end="19:23">.</operator><name pos:start="19:24" pos:end="19:28">empty</name></name><argument_list pos:start="19:29" pos:end="19:30">()</argument_list></call></expr>)</condition> <block pos:start="19:33" pos:end="21:17">{<block_content pos:start="20:21" pos:end="20:28">
                    <expr_stmt pos:start="20:21" pos:end="20:28"><expr pos:start="20:21" pos:end="20:27"><call pos:start="20:21" pos:end="20:27"><name pos:start="20:21" pos:end="20:25"><name pos:start="20:21" pos:end="20:21">a</name><operator pos:start="20:22" pos:end="20:22">.</operator><name pos:start="20:23" pos:end="20:25">pop</name></name><argument_list pos:start="20:26" pos:end="20:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if> <else pos:start="22:15" pos:end="30:13">else <block pos:start="22:20" pos:end="30:13">{<block_content pos:start="23:17" pos:end="29:17">
                <decl_stmt pos:start="23:17" pos:end="23:30"><decl pos:start="23:17" pos:end="23:29"><type pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:21">stack</name> <argument_list type="generic" pos:start="23:23" pos:end="23:27">&lt;<argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="23:29" pos:end="23:29">c</name></decl>;</decl_stmt>
                <while pos:start="24:17" pos:end="26:17">while <condition pos:start="24:23" pos:end="24:34">(<expr pos:start="24:24" pos:end="24:33"><operator pos:start="24:24" pos:end="24:24">!</operator><call pos:start="24:25" pos:end="24:33"><name pos:start="24:25" pos:end="24:31"><name pos:start="24:25" pos:end="24:25">b</name><operator pos:start="24:26" pos:end="24:26">.</operator><name pos:start="24:27" pos:end="24:31">empty</name></name><argument_list pos:start="24:32" pos:end="24:33">()</argument_list></call></expr>)</condition> <block pos:start="24:36" pos:end="26:17">{<block_content pos:start="25:21" pos:end="25:36">
                    <expr_stmt pos:start="25:21" pos:end="25:36"><expr pos:start="25:21" pos:end="25:35"><call pos:start="25:21" pos:end="25:35"><name pos:start="25:21" pos:end="25:26"><name pos:start="25:21" pos:end="25:21">c</name><operator pos:start="25:22" pos:end="25:22">.</operator><name pos:start="25:23" pos:end="25:26">push</name></name><argument_list pos:start="25:27" pos:end="25:35">(<argument pos:start="25:28" pos:end="25:34"><expr pos:start="25:28" pos:end="25:34"><call pos:start="25:28" pos:end="25:34"><name pos:start="25:28" pos:end="25:32"><name pos:start="25:28" pos:end="25:28">b</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:32">top</name></name><argument_list pos:start="25:33" pos:end="25:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="27:17" pos:end="29:17">while <condition pos:start="27:23" pos:end="27:34">(<expr pos:start="27:24" pos:end="27:33"><operator pos:start="27:24" pos:end="27:24">!</operator><call pos:start="27:25" pos:end="27:33"><name pos:start="27:25" pos:end="27:31"><name pos:start="27:25" pos:end="27:25">c</name><operator pos:start="27:26" pos:end="27:26">.</operator><name pos:start="27:27" pos:end="27:31">empty</name></name><argument_list pos:start="27:32" pos:end="27:33">()</argument_list></call></expr>)</condition> <block pos:start="27:36" pos:end="29:17">{<block_content pos:start="28:21" pos:end="28:36">
                    <expr_stmt pos:start="28:21" pos:end="28:36"><expr pos:start="28:21" pos:end="28:35"><call pos:start="28:21" pos:end="28:35"><name pos:start="28:21" pos:end="28:26"><name pos:start="28:21" pos:end="28:21">a</name><operator pos:start="28:22" pos:end="28:22">.</operator><name pos:start="28:23" pos:end="28:26">push</name></name><argument_list pos:start="28:27" pos:end="28:35">(<argument pos:start="28:28" pos:end="28:34"><expr pos:start="28:28" pos:end="28:34"><call pos:start="28:28" pos:end="28:34"><name pos:start="28:28" pos:end="28:32"><name pos:start="28:28" pos:end="28:28">c</name><operator pos:start="28:29" pos:end="28:29">.</operator><name pos:start="28:30" pos:end="28:32">top</name></name><argument_list pos:start="28:33" pos:end="28:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if> <else pos:start="31:11" pos:end="53:9">else <block pos:start="31:16" pos:end="53:9">{<block_content pos:start="32:13" pos:end="52:12">
            <if_stmt pos:start="32:13" pos:end="52:12"><if pos:start="32:13" pos:end="52:12">if <condition pos:start="32:16" pos:end="32:25">(<expr pos:start="32:17" pos:end="32:24"><name pos:start="32:17" pos:end="32:17">s</name> <operator pos:start="32:19" pos:end="32:20">==</operator> <literal type="char" pos:start="32:22" pos:end="32:24">'A'</literal></expr>)</condition> <block pos:start="32:27" pos:end="52:12">{<block_content pos:start="33:13" pos:end="51:15">
            <decl_stmt pos:start="33:13" pos:end="33:19"><decl pos:start="33:13" pos:end="33:18"><type pos:start="33:13" pos:end="33:16"><name pos:start="33:13" pos:end="33:16">char</name></type> <name pos:start="33:18" pos:end="33:18">x</name></decl>;</decl_stmt>
            <expr_stmt pos:start="34:13" pos:end="34:21"><expr pos:start="34:13" pos:end="34:20"><name pos:start="34:13" pos:end="34:15">cin</name> <operator pos:start="34:17" pos:end="34:18">&gt;&gt;</operator> <name pos:start="34:20" pos:end="34:20">x</name></expr>;</expr_stmt>
            <if_stmt pos:start="35:13" pos:end="51:15"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:25">(<expr pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:17">x</name> <operator pos:start="35:19" pos:end="35:20">==</operator> <literal type="char" pos:start="35:22" pos:end="35:24">'I'</literal></expr>)</condition> <block pos:start="35:27" pos:end="39:13">{<block_content pos:start="36:17" pos:end="38:29">
                <decl_stmt pos:start="36:17" pos:end="36:25"><decl pos:start="36:17" pos:end="36:24"><type pos:start="36:17" pos:end="36:19"><name pos:start="36:17" pos:end="36:19">int</name></type> <name pos:start="36:21" pos:end="36:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="37:17" pos:end="37:28"><expr pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:19">cin</name> <operator pos:start="37:21" pos:end="37:22">&gt;&gt;</operator> <name pos:start="37:24" pos:end="37:27">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="38:17" pos:end="38:29"><expr pos:start="38:17" pos:end="38:28"><call pos:start="38:17" pos:end="38:28"><name pos:start="38:17" pos:end="38:22"><name pos:start="38:17" pos:end="38:17">b</name><operator pos:start="38:18" pos:end="38:18">.</operator><name pos:start="38:19" pos:end="38:22">push</name></name><argument_list pos:start="38:23" pos:end="38:28">(<argument pos:start="38:24" pos:end="38:27"><expr pos:start="38:24" pos:end="38:27"><name pos:start="38:24" pos:end="38:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="39:15" pos:end="43:13">else if <condition pos:start="39:23" pos:end="39:32">(<expr pos:start="39:24" pos:end="39:31"><name pos:start="39:24" pos:end="39:24">x</name> <operator pos:start="39:26" pos:end="39:27">==</operator> <literal type="char" pos:start="39:29" pos:end="39:31">'D'</literal></expr>)</condition> <block pos:start="39:34" pos:end="43:13">{<block_content pos:start="40:17" pos:end="42:17">
                <if_stmt pos:start="40:17" pos:end="42:17"><if pos:start="40:17" pos:end="42:17">if <condition pos:start="40:20" pos:end="40:31">(<expr pos:start="40:21" pos:end="40:30"><operator pos:start="40:21" pos:end="40:21">!</operator><call pos:start="40:22" pos:end="40:30"><name pos:start="40:22" pos:end="40:28"><name pos:start="40:22" pos:end="40:22">b</name><operator pos:start="40:23" pos:end="40:23">.</operator><name pos:start="40:24" pos:end="40:28">empty</name></name><argument_list pos:start="40:29" pos:end="40:30">()</argument_list></call></expr>)</condition> <block pos:start="40:33" pos:end="42:17">{<block_content pos:start="41:21" pos:end="41:28">
                    <expr_stmt pos:start="41:21" pos:end="41:28"><expr pos:start="41:21" pos:end="41:27"><call pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:21">b</name><operator pos:start="41:22" pos:end="41:22">.</operator><name pos:start="41:23" pos:end="41:25">pop</name></name><argument_list pos:start="41:26" pos:end="41:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if> <else pos:start="43:15" pos:end="51:15">else <block pos:start="43:20" pos:end="51:15">{<block_content pos:start="44:17" pos:end="50:18">
                <decl_stmt pos:start="44:17" pos:end="44:30"><decl pos:start="44:17" pos:end="44:29"><type pos:start="44:17" pos:end="44:27"><name pos:start="44:17" pos:end="44:27"><name pos:start="44:17" pos:end="44:21">stack</name> <argument_list type="generic" pos:start="44:23" pos:end="44:27">&lt;<argument pos:start="44:24" pos:end="44:26"><expr pos:start="44:24" pos:end="44:26"><name pos:start="44:24" pos:end="44:26">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="44:29" pos:end="44:29">c</name></decl>;</decl_stmt>
                <while pos:start="45:17" pos:end="47:17">while <condition pos:start="45:23" pos:end="45:34">(<expr pos:start="45:24" pos:end="45:33"><operator pos:start="45:24" pos:end="45:24">!</operator><call pos:start="45:25" pos:end="45:33"><name pos:start="45:25" pos:end="45:31"><name pos:start="45:25" pos:end="45:25">a</name><operator pos:start="45:26" pos:end="45:26">.</operator><name pos:start="45:27" pos:end="45:31">empty</name></name><argument_list pos:start="45:32" pos:end="45:33">()</argument_list></call></expr>)</condition> <block pos:start="45:36" pos:end="47:17">{<block_content pos:start="46:21" pos:end="46:36">
                    <expr_stmt pos:start="46:21" pos:end="46:36"><expr pos:start="46:21" pos:end="46:35"><call pos:start="46:21" pos:end="46:35"><name pos:start="46:21" pos:end="46:26"><name pos:start="46:21" pos:end="46:21">c</name><operator pos:start="46:22" pos:end="46:22">.</operator><name pos:start="46:23" pos:end="46:26">push</name></name><argument_list pos:start="46:27" pos:end="46:35">(<argument pos:start="46:28" pos:end="46:34"><expr pos:start="46:28" pos:end="46:34"><call pos:start="46:28" pos:end="46:34"><name pos:start="46:28" pos:end="46:32"><name pos:start="46:28" pos:end="46:28">a</name><operator pos:start="46:29" pos:end="46:29">.</operator><name pos:start="46:30" pos:end="46:32">top</name></name><argument_list pos:start="46:33" pos:end="46:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="48:17" pos:end="50:18">while <condition pos:start="48:23" pos:end="48:34">(<expr pos:start="48:24" pos:end="48:33"><operator pos:start="48:24" pos:end="48:24">!</operator><call pos:start="48:25" pos:end="48:33"><name pos:start="48:25" pos:end="48:31"><name pos:start="48:25" pos:end="48:25">c</name><operator pos:start="48:26" pos:end="48:26">.</operator><name pos:start="48:27" pos:end="48:31">empty</name></name><argument_list pos:start="48:32" pos:end="48:33">()</argument_list></call></expr>)</condition> <block pos:start="48:36" pos:end="50:18">{<block_content pos:start="49:21" pos:end="49:36">
                    <expr_stmt pos:start="49:21" pos:end="49:36"><expr pos:start="49:21" pos:end="49:35"><call pos:start="49:21" pos:end="49:35"><name pos:start="49:21" pos:end="49:26"><name pos:start="49:21" pos:end="49:21">b</name><operator pos:start="49:22" pos:end="49:22">.</operator><name pos:start="49:23" pos:end="49:26">push</name></name><argument_list pos:start="49:27" pos:end="49:35">(<argument pos:start="49:28" pos:end="49:34"><expr pos:start="49:28" pos:end="49:34"><call pos:start="49:28" pos:end="49:34"><name pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:28">c</name><operator pos:start="49:29" pos:end="49:29">.</operator><name pos:start="49:30" pos:end="49:32">top</name></name><argument_list pos:start="49:33" pos:end="49:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 </block_content>}</block></while>
              </block_content>}</block></else></if_stmt>
           </block_content>}</block></if></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <decl_stmt pos:start="55:5" pos:end="55:18"><decl pos:start="55:5" pos:end="55:17"><type pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:9">stack</name> <argument_list type="generic" pos:start="55:11" pos:end="55:15">&lt;<argument pos:start="55:12" pos:end="55:14"><expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="55:17" pos:end="55:17">c</name></decl>;</decl_stmt>
    <while pos:start="56:5" pos:end="58:5">while <condition pos:start="56:11" pos:end="56:22">(<expr pos:start="56:12" pos:end="56:21"><operator pos:start="56:12" pos:end="56:12">!</operator><call pos:start="56:13" pos:end="56:21"><name pos:start="56:13" pos:end="56:19"><name pos:start="56:13" pos:end="56:13">a</name><operator pos:start="56:14" pos:end="56:14">.</operator><name pos:start="56:15" pos:end="56:19">empty</name></name><argument_list pos:start="56:20" pos:end="56:21">()</argument_list></call></expr>)</condition> <block pos:start="56:24" pos:end="58:5">{<block_content pos:start="57:9" pos:end="57:24">
        <expr_stmt pos:start="57:9" pos:end="57:24"><expr pos:start="57:9" pos:end="57:23"><call pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:9">c</name><operator pos:start="57:10" pos:end="57:10">.</operator><name pos:start="57:11" pos:end="57:14">push</name></name><argument_list pos:start="57:15" pos:end="57:23">(<argument pos:start="57:16" pos:end="57:22"><expr pos:start="57:16" pos:end="57:22"><call pos:start="57:16" pos:end="57:22"><name pos:start="57:16" pos:end="57:20"><name pos:start="57:16" pos:end="57:16">a</name><operator pos:start="57:17" pos:end="57:17">.</operator><name pos:start="57:18" pos:end="57:20">top</name></name><argument_list pos:start="57:21" pos:end="57:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="59:5" pos:end="62:5">while <condition pos:start="59:11" pos:end="59:22">(<expr pos:start="59:12" pos:end="59:21"><operator pos:start="59:12" pos:end="59:12">!</operator><call pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:13">c</name><operator pos:start="59:14" pos:end="59:14">.</operator><name pos:start="59:15" pos:end="59:19">empty</name></name><argument_list pos:start="59:20" pos:end="59:21">()</argument_list></call></expr>)</condition> <block pos:start="59:24" pos:end="62:5">{<block_content pos:start="60:9" pos:end="61:16">
        <expr_stmt pos:start="60:9" pos:end="60:31"><expr pos:start="60:9" pos:end="60:30"><name pos:start="60:9" pos:end="60:12">cout</name> <operator pos:start="60:14" pos:end="60:15">&lt;&lt;</operator> <call pos:start="60:17" pos:end="60:23"><name pos:start="60:17" pos:end="60:21"><name pos:start="60:17" pos:end="60:17">c</name><operator pos:start="60:18" pos:end="60:18">.</operator><name pos:start="60:19" pos:end="60:21">top</name></name><argument_list pos:start="60:22" pos:end="60:23">()</argument_list></call> <operator pos:start="60:25" pos:end="60:26">&lt;&lt;</operator> <literal type="string" pos:start="60:28" pos:end="60:30">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="61:9" pos:end="61:16"><expr pos:start="61:9" pos:end="61:15"><call pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:13"><name pos:start="61:9" pos:end="61:9">c</name><operator pos:start="61:10" pos:end="61:10">.</operator><name pos:start="61:11" pos:end="61:13">pop</name></name><argument_list pos:start="61:14" pos:end="61:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="63:5" pos:end="63:17"><expr pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:8">cout</name> <operator pos:start="63:10" pos:end="63:11">&lt;&lt;</operator> <name pos:start="63:13" pos:end="63:16">endl</name></expr>;</expr_stmt>
    
    <while pos:start="65:5" pos:end="67:5">while <condition pos:start="65:11" pos:end="65:22">(<expr pos:start="65:12" pos:end="65:21"><operator pos:start="65:12" pos:end="65:12">!</operator><call pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:13">b</name><operator pos:start="65:14" pos:end="65:14">.</operator><name pos:start="65:15" pos:end="65:19">empty</name></name><argument_list pos:start="65:20" pos:end="65:21">()</argument_list></call></expr>)</condition> <block pos:start="65:24" pos:end="67:5">{<block_content pos:start="66:9" pos:end="66:24">
        <expr_stmt pos:start="66:9" pos:end="66:24"><expr pos:start="66:9" pos:end="66:23"><call pos:start="66:9" pos:end="66:23"><name pos:start="66:9" pos:end="66:14"><name pos:start="66:9" pos:end="66:9">c</name><operator pos:start="66:10" pos:end="66:10">.</operator><name pos:start="66:11" pos:end="66:14">push</name></name><argument_list pos:start="66:15" pos:end="66:23">(<argument pos:start="66:16" pos:end="66:22"><expr pos:start="66:16" pos:end="66:22"><call pos:start="66:16" pos:end="66:22"><name pos:start="66:16" pos:end="66:20"><name pos:start="66:16" pos:end="66:16">b</name><operator pos:start="66:17" pos:end="66:17">.</operator><name pos:start="66:18" pos:end="66:20">top</name></name><argument_list pos:start="66:21" pos:end="66:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="68:5" pos:end="71:5">while <condition pos:start="68:11" pos:end="68:22">(<expr pos:start="68:12" pos:end="68:21"><operator pos:start="68:12" pos:end="68:12">!</operator><call pos:start="68:13" pos:end="68:21"><name pos:start="68:13" pos:end="68:19"><name pos:start="68:13" pos:end="68:13">c</name><operator pos:start="68:14" pos:end="68:14">.</operator><name pos:start="68:15" pos:end="68:19">empty</name></name><argument_list pos:start="68:20" pos:end="68:21">()</argument_list></call></expr>)</condition> <block pos:start="68:24" pos:end="71:5">{<block_content pos:start="69:9" pos:end="70:16">
        <expr_stmt pos:start="69:9" pos:end="69:31"><expr pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:12">cout</name> <operator pos:start="69:14" pos:end="69:15">&lt;&lt;</operator> <call pos:start="69:17" pos:end="69:23"><name pos:start="69:17" pos:end="69:21"><name pos:start="69:17" pos:end="69:17">c</name><operator pos:start="69:18" pos:end="69:18">.</operator><name pos:start="69:19" pos:end="69:21">top</name></name><argument_list pos:start="69:22" pos:end="69:23">()</argument_list></call> <operator pos:start="69:25" pos:end="69:26">&lt;&lt;</operator> <literal type="string" pos:start="69:28" pos:end="69:30">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="70:9" pos:end="70:16"><expr pos:start="70:9" pos:end="70:15"><call pos:start="70:9" pos:end="70:15"><name pos:start="70:9" pos:end="70:13"><name pos:start="70:9" pos:end="70:9">c</name><operator pos:start="70:10" pos:end="70:10">.</operator><name pos:start="70:11" pos:end="70:13">pop</name></name><argument_list pos:start="70:14" pos:end="70:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="72:5" pos:end="72:17"><expr pos:start="72:5" pos:end="72:16"><name pos:start="72:5" pos:end="72:8">cout</name> <operator pos:start="72:10" pos:end="72:11">&lt;&lt;</operator> <name pos:start="72:13" pos:end="72:16">endl</name></expr>;</expr_stmt>
    
    <return pos:start="74:5" pos:end="74:13">return <expr pos:start="74:12" pos:end="74:12"><literal type="number" pos:start="74:12" pos:end="74:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
