<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/948/948.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:8"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:7"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:7">m</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:21"><decl pos:start="4:1" pos:end="4:20"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:20"><name pos:start="4:6" pos:end="4:8">vis</name><index pos:start="4:9" pos:end="4:14">[<expr pos:start="4:10" pos:end="4:13"><literal type="number" pos:start="4:10" pos:end="4:13">1005</literal></expr>]</index><index pos:start="4:15" pos:end="4:20">[<expr pos:start="4:16" pos:end="4:19"><literal type="number" pos:start="4:16" pos:end="4:19">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:22"><decl pos:start="5:1" pos:end="5:21"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">char</name></type> <name pos:start="5:6" pos:end="5:21"><name pos:start="5:6" pos:end="5:9">maze</name><index pos:start="5:10" pos:end="5:15">[<expr pos:start="5:11" pos:end="5:14"><literal type="number" pos:start="5:11" pos:end="5:14">1005</literal></expr>]</index><index pos:start="5:16" pos:end="5:21">[<expr pos:start="5:17" pos:end="5:20"><literal type="number" pos:start="5:17" pos:end="5:20">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:8"><decl pos:start="6:1" pos:end="6:7"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:7">ans</name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:42"><decl pos:start="7:1" pos:end="7:41"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:7">dir</name><index pos:start="7:8" pos:end="7:10">[<expr pos:start="7:9" pos:end="7:9"><literal type="number" pos:start="7:9" pos:end="7:9">4</literal></expr>]</index><index pos:start="7:11" pos:end="7:13">[<expr pos:start="7:12" pos:end="7:12"><literal type="number" pos:start="7:12" pos:end="7:12">2</literal></expr>]</index></name><init pos:start="7:14" pos:end="7:41">=<expr pos:start="7:15" pos:end="7:41"><block pos:start="7:15" pos:end="7:41">{<expr pos:start="7:16" pos:end="7:21"><block pos:start="7:16" pos:end="7:21">{<expr pos:start="7:17" pos:end="7:18"><operator pos:start="7:17" pos:end="7:17">-</operator><literal type="number" pos:start="7:18" pos:end="7:18">1</literal></expr>,<expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr>}</block></expr>,<expr pos:start="7:23" pos:end="7:27"><block pos:start="7:23" pos:end="7:27">{<expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">1</literal></expr>,<expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr>}</block></expr>,<expr pos:start="7:29" pos:end="7:34"><block pos:start="7:29" pos:end="7:34">{<expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">0</literal></expr>,<expr pos:start="7:32" pos:end="7:33"><operator pos:start="7:32" pos:end="7:32">-</operator><literal type="number" pos:start="7:33" pos:end="7:33">1</literal></expr>}</block></expr>,<expr pos:start="7:36" pos:end="7:40"><block pos:start="7:36" pos:end="7:40">{<expr pos:start="7:37" pos:end="7:37"><literal type="number" pos:start="7:37" pos:end="7:37">0</literal></expr>,<expr pos:start="7:39" pos:end="7:39"><literal type="number" pos:start="7:39" pos:end="7:39">1</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>
<function pos:start="8:1" pos:end="10:1"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">bool</name></type> <name pos:start="8:6" pos:end="8:7">in</name><parameter_list pos:start="8:8" pos:end="8:20">(<parameter pos:start="8:9" pos:end="8:13"><decl pos:start="8:9" pos:end="8:13"><type pos:start="8:9" pos:end="8:13"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:13">x</name></decl></parameter>,<parameter pos:start="8:15" pos:end="8:19"><decl pos:start="8:15" pos:end="8:19"><type pos:start="8:15" pos:end="8:19"><name pos:start="8:15" pos:end="8:17">int</name></type> <name pos:start="8:19" pos:end="8:19">y</name></decl></parameter>)</parameter_list><block pos:start="8:21" pos:end="10:1">{<block_content pos:start="9:3" pos:end="9:30">
  <return pos:start="9:3" pos:end="9:30">return <expr pos:start="9:10" pos:end="9:29"><name pos:start="9:10" pos:end="9:10">x</name><operator pos:start="9:11" pos:end="9:12">&gt;=</operator><literal type="number" pos:start="9:13" pos:end="9:13">0</literal><operator pos:start="9:14" pos:end="9:15">&amp;&amp;</operator><name pos:start="9:16" pos:end="9:16">x</name><operator pos:start="9:17" pos:end="9:17">&lt;</operator><name pos:start="9:18" pos:end="9:18">n</name><operator pos:start="9:19" pos:end="9:20">&amp;&amp;</operator><name pos:start="9:21" pos:end="9:21">y</name><operator pos:start="9:22" pos:end="9:23">&gt;=</operator><literal type="number" pos:start="9:24" pos:end="9:24">0</literal><operator pos:start="9:25" pos:end="9:26">&amp;&amp;</operator><name pos:start="9:27" pos:end="9:27">y</name><operator pos:start="9:28" pos:end="9:28">&lt;</operator><name pos:start="9:29" pos:end="9:29">m</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="11:1" pos:end="20:1"><type pos:start="11:1" pos:end="11:4"><name pos:start="11:1" pos:end="11:4">void</name></type> <name pos:start="11:6" pos:end="11:8">dfs</name><parameter_list pos:start="11:9" pos:end="11:21">(<parameter pos:start="11:10" pos:end="11:14"><decl pos:start="11:10" pos:end="11:14"><type pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:12">int</name></type> <name pos:start="11:14" pos:end="11:14">x</name></decl></parameter>,<parameter pos:start="11:16" pos:end="11:20"><decl pos:start="11:16" pos:end="11:20"><type pos:start="11:16" pos:end="11:20"><name pos:start="11:16" pos:end="11:18">int</name></type> <name pos:start="11:20" pos:end="11:20">y</name></decl></parameter>)</parameter_list><block pos:start="11:22" pos:end="20:1">{<block_content pos:start="12:3" pos:end="19:3">
  <expr_stmt pos:start="12:3" pos:end="12:17"><expr pos:start="12:3" pos:end="12:16"><name pos:start="12:3" pos:end="12:11"><name pos:start="12:3" pos:end="12:5">vis</name><index pos:start="12:6" pos:end="12:8">[<expr pos:start="12:7" pos:end="12:7"><name pos:start="12:7" pos:end="12:7">x</name></expr>]</index><index pos:start="12:9" pos:end="12:11">[<expr pos:start="12:10" pos:end="12:10"><name pos:start="12:10" pos:end="12:10">y</name></expr>]</index></name><operator pos:start="12:12" pos:end="12:12">=</operator><literal type="boolean" pos:start="12:13" pos:end="12:16">true</literal></expr>;</expr_stmt>
  <for pos:start="13:3" pos:end="19:3">for<control pos:start="13:6" pos:end="13:22">(<init pos:start="13:7" pos:end="13:14"><decl pos:start="13:7" pos:end="13:13"><type pos:start="13:7" pos:end="13:9"><name pos:start="13:7" pos:end="13:9">int</name></type> <name pos:start="13:11" pos:end="13:11">i</name><init pos:start="13:12" pos:end="13:13">=<expr pos:start="13:13" pos:end="13:13"><literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr></init></decl>;</init><condition pos:start="13:15" pos:end="13:18"><expr pos:start="13:15" pos:end="13:17"><name pos:start="13:15" pos:end="13:15">i</name><operator pos:start="13:16" pos:end="13:16">&lt;</operator><literal type="number" pos:start="13:17" pos:end="13:17">4</literal></expr>;</condition><incr pos:start="13:19" pos:end="13:21"><expr pos:start="13:19" pos:end="13:21"><name pos:start="13:19" pos:end="13:19">i</name><operator pos:start="13:20" pos:end="13:21">++</operator></expr></incr>)</control><block pos:start="13:23" pos:end="19:3">{<block_content pos:start="14:5" pos:end="18:5">
    <decl_stmt pos:start="14:5" pos:end="14:23"><decl pos:start="14:5" pos:end="14:22"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:10">tx</name><init pos:start="14:11" pos:end="14:22">=<expr pos:start="14:12" pos:end="14:22"><name pos:start="14:12" pos:end="14:12">x</name><operator pos:start="14:13" pos:end="14:13">+</operator><name pos:start="14:14" pos:end="14:22"><name pos:start="14:14" pos:end="14:16">dir</name><index pos:start="14:17" pos:end="14:19">[<expr pos:start="14:18" pos:end="14:18"><name pos:start="14:18" pos:end="14:18">i</name></expr>]</index><index pos:start="14:20" pos:end="14:22">[<expr pos:start="14:21" pos:end="14:21"><literal type="number" pos:start="14:21" pos:end="14:21">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">ty</name><init pos:start="15:11" pos:end="15:22">=<expr pos:start="15:12" pos:end="15:22"><name pos:start="15:12" pos:end="15:12">y</name><operator pos:start="15:13" pos:end="15:13">+</operator><name pos:start="15:14" pos:end="15:22"><name pos:start="15:14" pos:end="15:16">dir</name><index pos:start="15:17" pos:end="15:19">[<expr pos:start="15:18" pos:end="15:18"><name pos:start="15:18" pos:end="15:18">i</name></expr>]</index><index pos:start="15:20" pos:end="15:22">[<expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="16:5" pos:end="18:5"><if pos:start="16:5" pos:end="18:5">if<condition pos:start="16:7" pos:end="16:48">(<expr pos:start="16:8" pos:end="16:47"><call pos:start="16:8" pos:end="16:16"><name pos:start="16:8" pos:end="16:9">in</name><argument_list pos:start="16:10" pos:end="16:16">(<argument pos:start="16:11" pos:end="16:12"><expr pos:start="16:11" pos:end="16:12"><name pos:start="16:11" pos:end="16:12">tx</name></expr></argument>,<argument pos:start="16:14" pos:end="16:15"><expr pos:start="16:14" pos:end="16:15"><name pos:start="16:14" pos:end="16:15">ty</name></expr></argument>)</argument_list></call><operator pos:start="16:17" pos:end="16:18">&amp;&amp;</operator><operator pos:start="16:19" pos:end="16:19">!</operator><name pos:start="16:20" pos:end="16:28"><name pos:start="16:20" pos:end="16:22">vis</name><index pos:start="16:23" pos:end="16:25">[<expr pos:start="16:24" pos:end="16:24"><name pos:start="16:24" pos:end="16:24">i</name></expr>]</index><index pos:start="16:26" pos:end="16:28">[<expr pos:start="16:27" pos:end="16:27"><name pos:start="16:27" pos:end="16:27">j</name></expr>]</index></name><operator pos:start="16:29" pos:end="16:30">&amp;&amp;</operator><name pos:start="16:31" pos:end="16:42"><name pos:start="16:31" pos:end="16:34">maze</name><index pos:start="16:35" pos:end="16:38">[<expr pos:start="16:36" pos:end="16:37"><name pos:start="16:36" pos:end="16:37">tx</name></expr>]</index><index pos:start="16:39" pos:end="16:42">[<expr pos:start="16:40" pos:end="16:41"><name pos:start="16:40" pos:end="16:41">ty</name></expr>]</index></name><operator pos:start="16:43" pos:end="16:44">==</operator><literal type="char" pos:start="16:45" pos:end="16:47">'#'</literal></expr>)</condition><block pos:start="16:49" pos:end="18:5">{<block_content pos:start="17:7" pos:end="17:17">
      <expr_stmt pos:start="17:7" pos:end="17:17"><expr pos:start="17:7" pos:end="17:16"><call pos:start="17:7" pos:end="17:16"><name pos:start="17:7" pos:end="17:9">dfs</name><argument_list pos:start="17:10" pos:end="17:16">(<argument pos:start="17:11" pos:end="17:12"><expr pos:start="17:11" pos:end="17:12"><name pos:start="17:11" pos:end="17:12">tx</name></expr></argument>,<argument pos:start="17:14" pos:end="17:15"><expr pos:start="17:14" pos:end="17:15"><name pos:start="17:14" pos:end="17:15">ty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="21:1" pos:end="36:1"><type pos:start="21:1" pos:end="21:3"><name pos:start="21:1" pos:end="21:3">int</name></type> <name pos:start="21:5" pos:end="21:8">main</name><parameter_list pos:start="21:9" pos:end="21:10">()</parameter_list><block pos:start="21:11" pos:end="36:1">{<block_content pos:start="22:3" pos:end="35:11">
  <expr_stmt pos:start="22:3" pos:end="22:33"><expr pos:start="22:3" pos:end="22:32"><call pos:start="22:3" pos:end="22:32"><name pos:start="22:3" pos:end="22:9">freopen</name><argument_list pos:start="22:10" pos:end="22:32">(<argument pos:start="22:11" pos:end="22:21"><expr pos:start="22:11" pos:end="22:21"><literal type="string" pos:start="22:11" pos:end="22:21">"hiking.in"</literal></expr></argument>,<argument pos:start="22:23" pos:end="22:25"><expr pos:start="22:23" pos:end="22:25"><literal type="string" pos:start="22:23" pos:end="22:25">"r"</literal></expr></argument>,<argument pos:start="22:27" pos:end="22:31"><expr pos:start="22:27" pos:end="22:31"><name pos:start="22:27" pos:end="22:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><call pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:11">freopen</name><argument_list pos:start="23:12" pos:end="23:36">(<argument pos:start="23:13" pos:end="23:24"><expr pos:start="23:13" pos:end="23:24"><literal type="string" pos:start="23:13" pos:end="23:24">"hiking.out"</literal></expr></argument>,<argument pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><literal type="string" pos:start="23:26" pos:end="23:28">"w"</literal></expr></argument>,<argument pos:start="23:30" pos:end="23:35"><expr pos:start="23:30" pos:end="23:35"><name pos:start="23:30" pos:end="23:35">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt pos:start="24:1" pos:end="24:10"><expr pos:start="24:1" pos:end="24:9"><name pos:start="24:1" pos:end="24:3">cin</name><operator pos:start="24:4" pos:end="24:5">&gt;&gt;</operator><name pos:start="24:6" pos:end="24:6">n</name><operator pos:start="24:7" pos:end="24:8">&gt;&gt;</operator><name pos:start="24:9" pos:end="24:9">m</name></expr>;</expr_stmt>
  <for pos:start="25:3" pos:end="27:3">for<control pos:start="25:6" pos:end="25:22">(<init pos:start="25:7" pos:end="25:14"><decl pos:start="25:7" pos:end="25:13"><type pos:start="25:7" pos:end="25:9"><name pos:start="25:7" pos:end="25:9">int</name></type> <name pos:start="25:11" pos:end="25:11">i</name><init pos:start="25:12" pos:end="25:13">=<expr pos:start="25:13" pos:end="25:13"><literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr></init></decl>;</init><condition pos:start="25:15" pos:end="25:18"><expr pos:start="25:15" pos:end="25:17"><name pos:start="25:15" pos:end="25:15">i</name><operator pos:start="25:16" pos:end="25:16">&lt;</operator><name pos:start="25:17" pos:end="25:17">n</name></expr>;</condition><incr pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:19">i</name><operator pos:start="25:20" pos:end="25:21">++</operator></expr></incr>)</control><block pos:start="25:23" pos:end="27:3">{<block_content pos:start="26:5" pos:end="26:17">
    <expr_stmt pos:start="26:5" pos:end="26:17"><expr pos:start="26:5" pos:end="26:16"><name pos:start="26:5" pos:end="26:7">cin</name><operator pos:start="26:8" pos:end="26:9">&gt;&gt;</operator><name pos:start="26:10" pos:end="26:16"><name pos:start="26:10" pos:end="26:13">maze</name><index pos:start="26:14" pos:end="26:16">[<expr pos:start="26:15" pos:end="26:15"><name pos:start="26:15" pos:end="26:15">i</name></expr>]</index></name></expr>;</expr_stmt>
  </block_content>}</block></for>
  <for pos:start="28:3" pos:end="33:7">for<control pos:start="28:6" pos:end="28:22">(<init pos:start="28:7" pos:end="28:14"><decl pos:start="28:7" pos:end="28:13"><type pos:start="28:7" pos:end="28:9"><name pos:start="28:7" pos:end="28:9">int</name></type> <name pos:start="28:11" pos:end="28:11">i</name><init pos:start="28:12" pos:end="28:13">=<expr pos:start="28:13" pos:end="28:13"><literal type="number" pos:start="28:13" pos:end="28:13">0</literal></expr></init></decl>;</init><condition pos:start="28:15" pos:end="28:18"><expr pos:start="28:15" pos:end="28:17"><name pos:start="28:15" pos:end="28:15">i</name><operator pos:start="28:16" pos:end="28:16">&lt;</operator><name pos:start="28:17" pos:end="28:17">n</name></expr>;</condition><incr pos:start="28:19" pos:end="28:21"><expr pos:start="28:19" pos:end="28:21"><name pos:start="28:19" pos:end="28:19">i</name><operator pos:start="28:20" pos:end="28:21">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:5" pos:end="33:7"><block_content pos:start="29:5" pos:end="33:7">
    <for pos:start="29:5" pos:end="33:7">for<control pos:start="29:8" pos:end="29:24">(<init pos:start="29:9" pos:end="29:16"><decl pos:start="29:9" pos:end="29:15"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:13">j</name><init pos:start="29:14" pos:end="29:15">=<expr pos:start="29:15" pos:end="29:15"><literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr></init></decl>;</init><condition pos:start="29:17" pos:end="29:20"><expr pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:17">j</name><operator pos:start="29:18" pos:end="29:18">&lt;</operator><name pos:start="29:19" pos:end="29:19">m</name></expr>;</condition><incr pos:start="29:21" pos:end="29:23"><expr pos:start="29:21" pos:end="29:23"><name pos:start="29:21" pos:end="29:21">j</name><operator pos:start="29:22" pos:end="29:23">++</operator></expr></incr>)</control><block type="pseudo" pos:start="30:7" pos:end="33:7"><block_content pos:start="30:7" pos:end="33:7">
      <if_stmt pos:start="30:7" pos:end="33:7"><if pos:start="30:7" pos:end="33:7">if<condition pos:start="30:9" pos:end="30:36">(<expr pos:start="30:10" pos:end="30:35"><name pos:start="30:10" pos:end="30:19"><name pos:start="30:10" pos:end="30:13">maze</name><index pos:start="30:14" pos:end="30:16">[<expr pos:start="30:15" pos:end="30:15"><name pos:start="30:15" pos:end="30:15">i</name></expr>]</index><index pos:start="30:17" pos:end="30:19">[<expr pos:start="30:18" pos:end="30:18"><name pos:start="30:18" pos:end="30:18">j</name></expr>]</index></name><operator pos:start="30:20" pos:end="30:21">==</operator><literal type="char" pos:start="30:22" pos:end="30:24">'#'</literal><operator pos:start="30:25" pos:end="30:26">&amp;&amp;</operator><name pos:start="30:27" pos:end="30:35"><name pos:start="30:27" pos:end="30:29">vis</name><index pos:start="30:30" pos:end="30:32">[<expr pos:start="30:31" pos:end="30:31"><name pos:start="30:31" pos:end="30:31">i</name></expr>]</index><index pos:start="30:33" pos:end="30:35">[<expr pos:start="30:34" pos:end="30:34"><name pos:start="30:34" pos:end="30:34">j</name></expr>]</index></name></expr>)</condition><block pos:start="30:37" pos:end="33:7">{<block_content pos:start="31:9" pos:end="32:14">
        <expr_stmt pos:start="31:9" pos:end="31:17"><expr pos:start="31:9" pos:end="31:16"><call pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:11">dfs</name><argument_list pos:start="31:12" pos:end="31:16">(<argument pos:start="31:13" pos:end="31:13"><expr pos:start="31:13" pos:end="31:13"><name pos:start="31:13" pos:end="31:13">i</name></expr></argument>,<argument pos:start="31:15" pos:end="31:15"><expr pos:start="31:15" pos:end="31:15"><name pos:start="31:15" pos:end="31:15">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:14"><expr pos:start="32:9" pos:end="32:13"><name pos:start="32:9" pos:end="32:11">ans</name><operator pos:start="32:12" pos:end="32:13">++</operator></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt></block_content></block></for></block_content></block></for>
  <expr_stmt pos:start="34:3" pos:end="34:18"><expr pos:start="34:3" pos:end="34:17"><name pos:start="34:3" pos:end="34:6">cout</name><operator pos:start="34:7" pos:end="34:8">&lt;&lt;</operator><name pos:start="34:9" pos:end="34:11">ans</name><operator pos:start="34:12" pos:end="34:13">&lt;&lt;</operator><name pos:start="34:14" pos:end="34:17">endl</name></expr>;</expr_stmt>
  <return pos:start="35:3" pos:end="35:11">return <expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
