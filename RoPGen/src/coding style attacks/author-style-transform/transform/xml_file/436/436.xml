<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/436/436.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:16">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:16">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:15">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive><cpp:file pos:start="5:9" pos:end="5:15">&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include pos:start="6:1" pos:end="6:17">#<cpp:directive pos:start="6:2" pos:end="6:8">include</cpp:directive><cpp:file pos:start="6:9" pos:end="6:17">&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include pos:start="7:1" pos:end="7:13">#<cpp:directive pos:start="7:2" pos:end="7:8">include</cpp:directive><cpp:file pos:start="7:9" pos:end="7:13">&lt;map&gt;</cpp:file></cpp:include>
<cpp:include pos:start="8:1" pos:end="8:16">#<cpp:directive pos:start="8:2" pos:end="8:8">include</cpp:directive><cpp:file pos:start="8:9" pos:end="8:16">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:define pos:start="9:1" pos:end="9:29">#<cpp:directive pos:start="9:2" pos:end="9:7">define</cpp:directive> <cpp:macro pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">bug</name></cpp:macro> <cpp:value pos:start="9:13" pos:end="9:29">cout&lt;&lt;"bug"&lt;&lt;endl</cpp:value></cpp:define>
<cpp:define pos:start="10:1" pos:end="10:20">#<cpp:directive pos:start="10:2" pos:end="10:7">define</cpp:directive> <cpp:macro pos:start="10:9" pos:end="10:10"><name pos:start="10:9" pos:end="10:10">ll</name></cpp:macro> <cpp:value pos:start="10:12" pos:end="10:20">long long</cpp:value></cpp:define>
<cpp:define pos:start="11:1" pos:end="11:22">#<cpp:directive pos:start="11:2" pos:end="11:7">define</cpp:directive> <cpp:macro pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">inf</name></cpp:macro> <cpp:value pos:start="11:13" pos:end="11:22">0x3f3f3f3f</cpp:value></cpp:define>
<cpp:define pos:start="12:1" pos:end="12:22">#<cpp:directive pos:start="12:2" pos:end="12:7">define</cpp:directive> <cpp:macro pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">MOD</name></cpp:macro> <cpp:value pos:start="12:13" pos:end="12:22">1000000007</cpp:value></cpp:define>
<using pos:start="13:1" pos:end="13:20">using <namespace pos:start="13:7" pos:end="13:20">namespace <name pos:start="13:17" pos:end="13:19">std</name>;</namespace></using>
<decl_stmt pos:start="14:1" pos:end="14:8"><decl pos:start="14:1" pos:end="14:5"><type pos:start="14:1" pos:end="14:3"><name pos:start="14:1" pos:end="14:3">int</name></type> <name pos:start="14:5" pos:end="14:5">n</name></decl>,<decl pos:start="14:7" pos:end="14:7"><type ref="prev" pos:start="14:1" pos:end="14:3"/><name pos:start="14:7" pos:end="14:7">m</name></decl>;</decl_stmt>
<decl_stmt pos:start="15:1" pos:end="15:17"><decl pos:start="15:1" pos:end="15:16"><type pos:start="15:1" pos:end="15:4"><name pos:start="15:1" pos:end="15:4">char</name></type> <name pos:start="15:6" pos:end="15:16"><name pos:start="15:6" pos:end="15:6">a</name><index pos:start="15:7" pos:end="15:11">[<expr pos:start="15:8" pos:end="15:10"><literal type="number" pos:start="15:8" pos:end="15:10">105</literal></expr>]</index><index pos:start="15:12" pos:end="15:16">[<expr pos:start="15:13" pos:end="15:15"><literal type="number" pos:start="15:13" pos:end="15:15">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="16:1" pos:end="16:16"><decl pos:start="16:1" pos:end="16:15"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:15"><name pos:start="16:5" pos:end="16:5">b</name><index pos:start="16:6" pos:end="16:10">[<expr pos:start="16:7" pos:end="16:9"><literal type="number" pos:start="16:7" pos:end="16:9">105</literal></expr>]</index><index pos:start="16:11" pos:end="16:15">[<expr pos:start="16:12" pos:end="16:14"><literal type="number" pos:start="16:12" pos:end="16:14">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="17:1" pos:end="17:23"><decl pos:start="17:1" pos:end="17:22"><type pos:start="17:1" pos:end="17:11"><name pos:start="17:1" pos:end="17:11"><name pos:start="17:1" pos:end="17:6">vector</name><argument_list type="generic" pos:start="17:7" pos:end="17:11">&lt;<argument pos:start="17:8" pos:end="17:10"><expr pos:start="17:8" pos:end="17:10"><name pos:start="17:8" pos:end="17:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:15">ver</name><index pos:start="17:16" pos:end="17:22">[<expr pos:start="17:17" pos:end="17:21"><literal type="number" pos:start="17:17" pos:end="17:21">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="18:1" pos:end="18:24"><decl pos:start="18:1" pos:end="18:23"><type pos:start="18:1" pos:end="18:11"><name pos:start="18:1" pos:end="18:11"><name pos:start="18:1" pos:end="18:6">vector</name><argument_list type="generic" pos:start="18:7" pos:end="18:11">&lt;<argument pos:start="18:8" pos:end="18:10"><expr pos:start="18:8" pos:end="18:10"><name pos:start="18:8" pos:end="18:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="18:13" pos:end="18:23"><name pos:start="18:13" pos:end="18:16">ver1</name><index pos:start="18:17" pos:end="18:23">[<expr pos:start="18:18" pos:end="18:22"><literal type="number" pos:start="18:18" pos:end="18:22">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="19:1" pos:end="19:24"><decl pos:start="19:1" pos:end="19:23"><type pos:start="19:1" pos:end="19:11"><name pos:start="19:1" pos:end="19:11"><name pos:start="19:1" pos:end="19:6">vector</name><argument_list type="generic" pos:start="19:7" pos:end="19:11">&lt;<argument pos:start="19:8" pos:end="19:10"><expr pos:start="19:8" pos:end="19:10"><name pos:start="19:8" pos:end="19:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:16">ver2</name><index pos:start="19:17" pos:end="19:23">[<expr pos:start="19:18" pos:end="19:22"><literal type="number" pos:start="19:18" pos:end="19:22">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="20:1" pos:end="20:22"><decl pos:start="20:1" pos:end="20:12"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:12"><name pos:start="20:5" pos:end="20:5">x</name><index pos:start="20:6" pos:end="20:12">[<expr pos:start="20:7" pos:end="20:11"><literal type="number" pos:start="20:7" pos:end="20:11">10000</literal></expr>]</index></name></decl>,<decl pos:start="20:14" pos:end="20:21"><type ref="prev" pos:start="20:1" pos:end="20:3"/><name pos:start="20:14" pos:end="20:21"><name pos:start="20:14" pos:end="20:14">y</name><index pos:start="20:15" pos:end="20:21">[<expr pos:start="20:16" pos:end="20:20"><literal type="number" pos:start="20:16" pos:end="20:20">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="21:1" pos:end="21:10"><decl pos:start="21:1" pos:end="21:9"><type pos:start="21:1" pos:end="21:3"><name pos:start="21:1" pos:end="21:3">int</name></type> <name pos:start="21:5" pos:end="21:7">top</name><init pos:start="21:8" pos:end="21:9">=<expr pos:start="21:9" pos:end="21:9"><literal type="number" pos:start="21:9" pos:end="21:9">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="22:1" pos:end="22:26"><decl pos:start="22:1" pos:end="22:14"><type pos:start="22:1" pos:end="22:3"><name pos:start="22:1" pos:end="22:3">int</name></type> <name pos:start="22:5" pos:end="22:14"><name pos:start="22:5" pos:end="22:7">dfn</name><index pos:start="22:8" pos:end="22:14">[<expr pos:start="22:9" pos:end="22:13"><literal type="number" pos:start="22:9" pos:end="22:13">10000</literal></expr>]</index></name></decl>,<decl pos:start="22:16" pos:end="22:25"><type ref="prev" pos:start="22:1" pos:end="22:3"/><name pos:start="22:16" pos:end="22:25"><name pos:start="22:16" pos:end="22:18">low</name><index pos:start="22:19" pos:end="22:25">[<expr pos:start="22:20" pos:end="22:24"><literal type="number" pos:start="22:20" pos:end="22:24">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="23:1" pos:end="23:10"><decl pos:start="23:1" pos:end="23:9"><type pos:start="23:1" pos:end="23:3"><name pos:start="23:1" pos:end="23:3">int</name></type> <name pos:start="23:5" pos:end="23:7">tot</name><init pos:start="23:8" pos:end="23:9">=<expr pos:start="23:9" pos:end="23:9"><literal type="number" pos:start="23:9" pos:end="23:9">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="24:1" pos:end="24:16"><decl pos:start="24:1" pos:end="24:15"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:15"><name pos:start="24:5" pos:end="24:8">zhan</name><index pos:start="24:9" pos:end="24:15">[<expr pos:start="24:10" pos:end="24:14"><literal type="number" pos:start="24:10" pos:end="24:14">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="25:1" pos:end="25:14"><decl pos:start="25:1" pos:end="25:13"><type pos:start="25:1" pos:end="25:3"><name pos:start="25:1" pos:end="25:3">int</name></type> <name pos:start="25:5" pos:end="25:11">topzhan</name><init pos:start="25:12" pos:end="25:13">=<expr pos:start="25:13" pos:end="25:13"><literal type="number" pos:start="25:13" pos:end="25:13">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="26:1" pos:end="26:16"><decl pos:start="26:1" pos:end="26:15"><type pos:start="26:1" pos:end="26:3"><name pos:start="26:1" pos:end="26:3">int</name></type> <name pos:start="26:5" pos:end="26:15"><name pos:start="26:5" pos:end="26:8">flag</name><index pos:start="26:9" pos:end="26:15">[<expr pos:start="26:10" pos:end="26:14"><literal type="number" pos:start="26:10" pos:end="26:14">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="27:1" pos:end="27:10"><decl pos:start="27:1" pos:end="27:9"><type pos:start="27:1" pos:end="27:3"><name pos:start="27:1" pos:end="27:3">int</name></type> <name pos:start="27:5" pos:end="27:7">cnt</name><init pos:start="27:8" pos:end="27:9">=<expr pos:start="27:9" pos:end="27:9"><literal type="number" pos:start="27:9" pos:end="27:9">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="28:1" pos:end="28:16"><decl pos:start="28:1" pos:end="28:15"><type pos:start="28:1" pos:end="28:3"><name pos:start="28:1" pos:end="28:3">int</name></type> <name pos:start="28:5" pos:end="28:15"><name pos:start="28:5" pos:end="28:8">sum1</name><index pos:start="28:9" pos:end="28:15">[<expr pos:start="28:10" pos:end="28:14"><literal type="number" pos:start="28:10" pos:end="28:14">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="29:1" pos:end="29:16"><decl pos:start="29:1" pos:end="29:15"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:8">sum2</name><index pos:start="29:9" pos:end="29:15">[<expr pos:start="29:10" pos:end="29:14"><literal type="number" pos:start="29:10" pos:end="29:14">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="30:1" pos:end="30:13"><decl pos:start="30:1" pos:end="30:12"><type pos:start="30:1" pos:end="30:3"><name pos:start="30:1" pos:end="30:3">int</name></type> <name pos:start="30:5" pos:end="30:12"><name pos:start="30:5" pos:end="30:5">f</name><index pos:start="30:6" pos:end="30:12">[<expr pos:start="30:7" pos:end="30:11"><literal type="number" pos:start="30:7" pos:end="30:11">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="31:1" pos:end="31:12"><decl pos:start="31:1" pos:end="31:11"><type pos:start="31:1" pos:end="31:3"><name pos:start="31:1" pos:end="31:3">int</name></type> <name pos:start="31:5" pos:end="31:9">flag1</name><init pos:start="31:10" pos:end="31:11">=<expr pos:start="31:11" pos:end="31:11"><literal type="number" pos:start="31:11" pos:end="31:11">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="32:1" pos:end="62:1"><type pos:start="32:1" pos:end="32:4"><name pos:start="32:1" pos:end="32:4">void</name></type> <name pos:start="32:6" pos:end="32:11">tarjan</name><parameter_list pos:start="32:12" pos:end="32:18">(<parameter pos:start="32:13" pos:end="32:17"><decl pos:start="32:13" pos:end="32:17"><type pos:start="32:13" pos:end="32:15"><name pos:start="32:13" pos:end="32:15">int</name></type> <name pos:start="32:17" pos:end="32:17">u</name></decl></parameter>)</parameter_list><block pos:start="32:19" pos:end="62:1">{<block_content pos:start="33:5" pos:end="61:5">
    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:7">dfn</name><index pos:start="33:8" pos:end="33:10">[<expr pos:start="33:9" pos:end="33:9"><name pos:start="33:9" pos:end="33:9">u</name></expr>]</index></name><operator pos:start="33:11" pos:end="33:11">=</operator><name pos:start="33:12" pos:end="33:14">tot</name></expr><operator pos:start="33:15" pos:end="33:15">,</operator><expr pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:21"><name pos:start="33:16" pos:end="33:18">low</name><index pos:start="33:19" pos:end="33:21">[<expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">u</name></expr>]</index></name><operator pos:start="33:22" pos:end="33:22">=</operator><name pos:start="33:23" pos:end="33:25">tot</name></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:10"><expr pos:start="34:5" pos:end="34:9"><name pos:start="34:5" pos:end="34:7">tot</name><operator pos:start="34:8" pos:end="34:9">++</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:8">zhan</name><index pos:start="35:9" pos:end="35:19">[<expr pos:start="35:10" pos:end="35:18"><name pos:start="35:10" pos:end="35:16">topzhan</name><operator pos:start="35:17" pos:end="35:18">++</operator></expr>]</index></name><operator pos:start="35:20" pos:end="35:20">=</operator><name pos:start="35:21" pos:end="35:21">u</name></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:14"><expr pos:start="36:5" pos:end="36:13"><name pos:start="36:5" pos:end="36:11"><name pos:start="36:5" pos:end="36:8">flag</name><index pos:start="36:9" pos:end="36:11">[<expr pos:start="36:10" pos:end="36:10"><name pos:start="36:10" pos:end="36:10">u</name></expr>]</index></name><operator pos:start="36:12" pos:end="36:12">=</operator><literal type="number" pos:start="36:13" pos:end="36:13">1</literal></expr>;</expr_stmt>
    <for pos:start="37:5" pos:end="46:5">for<control pos:start="37:8" pos:end="37:36">(<init pos:start="37:9" pos:end="37:16"><decl pos:start="37:9" pos:end="37:15"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:13">i</name><init pos:start="37:14" pos:end="37:15">=<expr pos:start="37:15" pos:end="37:15"><literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr></init></decl>;</init><condition pos:start="37:17" pos:end="37:32"><expr pos:start="37:17" pos:end="37:31"><name pos:start="37:17" pos:end="37:17">i</name><operator pos:start="37:18" pos:end="37:18">&lt;</operator><name pos:start="37:19" pos:end="37:24"><name pos:start="37:19" pos:end="37:21">ver</name><index pos:start="37:22" pos:end="37:24">[<expr pos:start="37:23" pos:end="37:23"><name pos:start="37:23" pos:end="37:23">u</name></expr>]</index></name><operator pos:start="37:25" pos:end="37:25">.</operator><call pos:start="37:26" pos:end="37:31"><name pos:start="37:26" pos:end="37:29">size</name><argument_list pos:start="37:30" pos:end="37:31">()</argument_list></call></expr>;</condition><incr pos:start="37:33" pos:end="37:35"><expr pos:start="37:33" pos:end="37:35"><name pos:start="37:33" pos:end="37:33">i</name><operator pos:start="37:34" pos:end="37:35">++</operator></expr></incr>)</control><block pos:start="37:37" pos:end="46:5">{<block_content pos:start="38:9" pos:end="45:9">
        <decl_stmt pos:start="38:9" pos:end="38:24"><decl pos:start="38:9" pos:end="38:23"><type pos:start="38:9" pos:end="38:11"><name pos:start="38:9" pos:end="38:11">int</name></type> <name pos:start="38:13" pos:end="38:13">v</name><init pos:start="38:14" pos:end="38:23">=<expr pos:start="38:15" pos:end="38:23"><name pos:start="38:15" pos:end="38:23"><name pos:start="38:15" pos:end="38:17">ver</name><index pos:start="38:18" pos:end="38:20">[<expr pos:start="38:19" pos:end="38:19"><name pos:start="38:19" pos:end="38:19">u</name></expr>]</index><index pos:start="38:21" pos:end="38:23">[<expr pos:start="38:22" pos:end="38:22"><name pos:start="38:22" pos:end="38:22">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="42:9">if<condition pos:start="39:11" pos:end="39:21">(<expr pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:17"><name pos:start="39:12" pos:end="39:14">dfn</name><index pos:start="39:15" pos:end="39:17">[<expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">v</name></expr>]</index></name><operator pos:start="39:18" pos:end="39:19">==</operator><literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>)</condition><block pos:start="39:22" pos:end="42:9">{<block_content pos:start="40:13" pos:end="41:38">
            <expr_stmt pos:start="40:13" pos:end="40:22"><expr pos:start="40:13" pos:end="40:21"><call pos:start="40:13" pos:end="40:21"><name pos:start="40:13" pos:end="40:18">tarjan</name><argument_list pos:start="40:19" pos:end="40:21">(<argument pos:start="40:20" pos:end="40:20"><expr pos:start="40:20" pos:end="40:20"><name pos:start="40:20" pos:end="40:20">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="41:13" pos:end="41:38"><expr pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:15">low</name><index pos:start="41:16" pos:end="41:18">[<expr pos:start="41:17" pos:end="41:17"><name pos:start="41:17" pos:end="41:17">u</name></expr>]</index></name><operator pos:start="41:19" pos:end="41:19">=</operator><call pos:start="41:20" pos:end="41:37"><name pos:start="41:20" pos:end="41:22">min</name><argument_list pos:start="41:23" pos:end="41:37">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:26">low</name><index pos:start="41:27" pos:end="41:29">[<expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="41:31" pos:end="41:36"><expr pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:33">low</name><index pos:start="41:34" pos:end="41:36">[<expr pos:start="41:35" pos:end="41:35"><name pos:start="41:35" pos:end="41:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="43:9" pos:end="45:9">else if<condition pos:start="43:16" pos:end="43:27">(<expr pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:23"><name pos:start="43:17" pos:end="43:20">flag</name><index pos:start="43:21" pos:end="43:23">[<expr pos:start="43:22" pos:end="43:22"><name pos:start="43:22" pos:end="43:22">v</name></expr>]</index></name><operator pos:start="43:24" pos:end="43:25">==</operator><literal type="number" pos:start="43:26" pos:end="43:26">1</literal></expr>)</condition><block pos:start="43:28" pos:end="45:9">{<block_content pos:start="44:13" pos:end="44:38">
            <expr_stmt pos:start="44:13" pos:end="44:38"><expr pos:start="44:13" pos:end="44:37"><name pos:start="44:13" pos:end="44:18"><name pos:start="44:13" pos:end="44:15">low</name><index pos:start="44:16" pos:end="44:18">[<expr pos:start="44:17" pos:end="44:17"><name pos:start="44:17" pos:end="44:17">u</name></expr>]</index></name><operator pos:start="44:19" pos:end="44:19">=</operator><call pos:start="44:20" pos:end="44:37"><name pos:start="44:20" pos:end="44:22">min</name><argument_list pos:start="44:23" pos:end="44:37">(<argument pos:start="44:24" pos:end="44:29"><expr pos:start="44:24" pos:end="44:29"><name pos:start="44:24" pos:end="44:29"><name pos:start="44:24" pos:end="44:26">low</name><index pos:start="44:27" pos:end="44:29">[<expr pos:start="44:28" pos:end="44:28"><name pos:start="44:28" pos:end="44:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="44:31" pos:end="44:36"><expr pos:start="44:31" pos:end="44:36"><name pos:start="44:31" pos:end="44:36"><name pos:start="44:31" pos:end="44:33">dfn</name><index pos:start="44:34" pos:end="44:36">[<expr pos:start="44:35" pos:end="44:35"><name pos:start="44:35" pos:end="44:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="47:5" pos:end="61:5"><if pos:start="47:5" pos:end="61:5">if<condition pos:start="47:7" pos:end="47:22">(<expr pos:start="47:8" pos:end="47:21"><name pos:start="47:8" pos:end="47:13"><name pos:start="47:8" pos:end="47:10">low</name><index pos:start="47:11" pos:end="47:13">[<expr pos:start="47:12" pos:end="47:12"><name pos:start="47:12" pos:end="47:12">u</name></expr>]</index></name><operator pos:start="47:14" pos:end="47:15">==</operator><name pos:start="47:16" pos:end="47:21"><name pos:start="47:16" pos:end="47:18">dfn</name><index pos:start="47:19" pos:end="47:21">[<expr pos:start="47:20" pos:end="47:20"><name pos:start="47:20" pos:end="47:20">u</name></expr>]</index></name></expr>)</condition><block pos:start="47:23" pos:end="61:5">{<block_content pos:start="48:9" pos:end="60:9">
        <expr_stmt pos:start="48:9" pos:end="48:14"><expr pos:start="48:9" pos:end="48:13"><name pos:start="48:9" pos:end="48:11">cnt</name><operator pos:start="48:12" pos:end="48:13">++</operator></expr>;</expr_stmt>
        <if_stmt pos:start="49:9" pos:end="51:9"><if pos:start="49:9" pos:end="51:9">if<condition pos:start="49:11" pos:end="49:16">(<expr pos:start="49:12" pos:end="49:15"><name pos:start="49:12" pos:end="49:12">u</name><operator pos:start="49:13" pos:end="49:14">==</operator><literal type="number" pos:start="49:15" pos:end="49:15">1</literal></expr>)</condition><block pos:start="49:17" pos:end="51:9">{<block_content pos:start="50:13" pos:end="50:22">
            <expr_stmt pos:start="50:13" pos:end="50:22"><expr pos:start="50:13" pos:end="50:21"><name pos:start="50:13" pos:end="50:17">flag1</name><operator pos:start="50:18" pos:end="50:18">=</operator><name pos:start="50:19" pos:end="50:21">cnt</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <while pos:start="52:9" pos:end="60:9">while<condition pos:start="52:14" pos:end="52:16">(<expr pos:start="52:15" pos:end="52:15"><literal type="number" pos:start="52:15" pos:end="52:15">1</literal></expr>)</condition><block pos:start="52:17" pos:end="60:9">{<block_content pos:start="53:13" pos:end="59:13">
            <decl_stmt pos:start="53:13" pos:end="53:34"><decl pos:start="53:13" pos:end="53:33"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:17">x</name><init pos:start="53:18" pos:end="53:33">=<expr pos:start="53:19" pos:end="53:33"><name pos:start="53:19" pos:end="53:33"><name pos:start="53:19" pos:end="53:22">zhan</name><index pos:start="53:23" pos:end="53:33">[<expr pos:start="53:24" pos:end="53:32"><name pos:start="53:24" pos:end="53:30">topzhan</name><operator pos:start="53:31" pos:end="53:31">-</operator><literal type="number" pos:start="53:32" pos:end="53:32">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="54:13" pos:end="54:22"><expr pos:start="54:13" pos:end="54:21"><name pos:start="54:13" pos:end="54:19">topzhan</name><operator pos:start="54:20" pos:end="54:21">--</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="55:13" pos:end="55:22"><expr pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:16">flag</name><index pos:start="55:17" pos:end="55:19">[<expr pos:start="55:18" pos:end="55:18"><name pos:start="55:18" pos:end="55:18">x</name></expr>]</index></name><operator pos:start="55:20" pos:end="55:20">=</operator><literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="56:13" pos:end="56:24"><expr pos:start="56:13" pos:end="56:23"><name pos:start="56:13" pos:end="56:19"><name pos:start="56:13" pos:end="56:16">sum1</name><index pos:start="56:17" pos:end="56:19">[<expr pos:start="56:18" pos:end="56:18"><name pos:start="56:18" pos:end="56:18">x</name></expr>]</index></name><operator pos:start="56:20" pos:end="56:20">=</operator><name pos:start="56:21" pos:end="56:23">cnt</name></expr>;</expr_stmt>
            <if_stmt pos:start="57:13" pos:end="59:13"><if pos:start="57:13" pos:end="59:13">if<condition pos:start="57:15" pos:end="57:20">(<expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:16">x</name><operator pos:start="57:17" pos:end="57:18">==</operator><name pos:start="57:19" pos:end="57:19">u</name></expr>)</condition><block pos:start="57:21" pos:end="59:13">{<block_content pos:start="58:17" pos:end="58:22">
                <break pos:start="58:17" pos:end="58:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="63:1" pos:end="74:1"><type pos:start="63:1" pos:end="63:3"><name pos:start="63:1" pos:end="63:3">int</name></type> <name pos:start="63:5" pos:end="63:7">dfs</name><parameter_list pos:start="63:8" pos:end="63:14">(<parameter pos:start="63:9" pos:end="63:13"><decl pos:start="63:9" pos:end="63:13"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:13">u</name></decl></parameter>)</parameter_list><block pos:start="63:15" pos:end="74:1">{<block_content pos:start="67:5" pos:end="73:16">
    
    
    
    <decl_stmt pos:start="67:5" pos:end="67:21"><decl pos:start="67:5" pos:end="67:20"><type pos:start="67:5" pos:end="67:7"><name pos:start="67:5" pos:end="67:7">int</name></type> <name pos:start="67:9" pos:end="67:12">maxx</name><init pos:start="67:13" pos:end="67:20">=<expr pos:start="67:14" pos:end="67:20"><name pos:start="67:14" pos:end="67:20"><name pos:start="67:14" pos:end="67:17">sum2</name><index pos:start="67:18" pos:end="67:20">[<expr pos:start="67:19" pos:end="67:19"><name pos:start="67:19" pos:end="67:19">u</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    
    
    
    
    
    <return pos:start="73:5" pos:end="73:16">return <expr pos:start="73:12" pos:end="73:15"><name pos:start="73:12" pos:end="73:15">maxx</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="75:1" pos:end="174:1"><type pos:start="75:1" pos:end="75:3"><name pos:start="75:1" pos:end="75:3">int</name></type> <name pos:start="75:5" pos:end="75:8">main</name><parameter_list pos:start="75:9" pos:end="75:10">()</parameter_list><block pos:start="75:11" pos:end="174:1">{<block_content pos:start="76:5" pos:end="173:13">
    <expr_stmt pos:start="76:5" pos:end="76:37"><expr pos:start="76:5" pos:end="76:36"><call pos:start="76:5" pos:end="76:36"><name pos:start="76:5" pos:end="76:11">freopen</name><argument_list pos:start="76:12" pos:end="76:36">(<argument pos:start="76:13" pos:end="76:25"><expr pos:start="76:13" pos:end="76:25"><literal type="string" pos:start="76:13" pos:end="76:25">"treasure.in"</literal></expr></argument>,<argument pos:start="76:27" pos:end="76:29"><expr pos:start="76:27" pos:end="76:29"><literal type="string" pos:start="76:27" pos:end="76:29">"r"</literal></expr></argument>,<argument pos:start="76:31" pos:end="76:35"><expr pos:start="76:31" pos:end="76:35"><name pos:start="76:31" pos:end="76:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="77:5" pos:end="77:39"><expr pos:start="77:5" pos:end="77:38"><call pos:start="77:5" pos:end="77:38"><name pos:start="77:5" pos:end="77:11">freopen</name><argument_list pos:start="77:12" pos:end="77:38">(<argument pos:start="77:13" pos:end="77:26"><expr pos:start="77:13" pos:end="77:26"><literal type="string" pos:start="77:13" pos:end="77:26">"treasure.out"</literal></expr></argument>,<argument pos:start="77:28" pos:end="77:30"><expr pos:start="77:28" pos:end="77:30"><literal type="string" pos:start="77:28" pos:end="77:30">"w"</literal></expr></argument>,<argument pos:start="77:32" pos:end="77:37"><expr pos:start="77:32" pos:end="77:37"><name pos:start="77:32" pos:end="77:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="78:5" pos:end="78:15"><expr pos:start="78:5" pos:end="78:14"><call pos:start="78:5" pos:end="78:14"><name pos:start="78:5" pos:end="78:11"><name pos:start="78:5" pos:end="78:7">cin</name><operator pos:start="78:8" pos:end="78:8">.</operator><name pos:start="78:9" pos:end="78:11">tie</name></name><argument_list pos:start="78:12" pos:end="78:14">(<argument pos:start="78:13" pos:end="78:13"><expr pos:start="78:13" pos:end="78:13"><literal type="number" pos:start="78:13" pos:end="78:13">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="79:5" pos:end="79:16"><expr pos:start="79:5" pos:end="79:15"><call pos:start="79:5" pos:end="79:15"><name pos:start="79:5" pos:end="79:12"><name pos:start="79:5" pos:end="79:8">cout</name><operator pos:start="79:9" pos:end="79:9">.</operator><name pos:start="79:10" pos:end="79:12">tie</name></name><argument_list pos:start="79:13" pos:end="79:15">(<argument pos:start="79:14" pos:end="79:14"><expr pos:start="79:14" pos:end="79:14"><literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="80:5" pos:end="80:14"><expr pos:start="80:5" pos:end="80:13"><name pos:start="80:5" pos:end="80:7">cin</name><operator pos:start="80:8" pos:end="80:9">&gt;&gt;</operator><name pos:start="80:10" pos:end="80:10">n</name><operator pos:start="80:11" pos:end="80:12">&gt;&gt;</operator><name pos:start="80:13" pos:end="80:13">m</name></expr>;</expr_stmt>
    <decl_stmt pos:start="81:5" pos:end="81:14"><decl pos:start="81:5" pos:end="81:13"><type pos:start="81:5" pos:end="81:7"><name pos:start="81:5" pos:end="81:7">int</name></type> <name pos:start="81:9" pos:end="81:11">num</name><init pos:start="81:12" pos:end="81:13">=<expr pos:start="81:13" pos:end="81:13"><literal type="number" pos:start="81:13" pos:end="81:13">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="82:5" pos:end="89:5">for<control pos:start="82:8" pos:end="82:25">(<init pos:start="82:9" pos:end="82:16"><decl pos:start="82:9" pos:end="82:15"><type pos:start="82:9" pos:end="82:11"><name pos:start="82:9" pos:end="82:11">int</name></type> <name pos:start="82:13" pos:end="82:13">i</name><init pos:start="82:14" pos:end="82:15">=<expr pos:start="82:15" pos:end="82:15"><literal type="number" pos:start="82:15" pos:end="82:15">1</literal></expr></init></decl>;</init><condition pos:start="82:17" pos:end="82:21"><expr pos:start="82:17" pos:end="82:20"><name pos:start="82:17" pos:end="82:17">i</name><operator pos:start="82:18" pos:end="82:19">&lt;=</operator><name pos:start="82:20" pos:end="82:20">n</name></expr>;</condition><incr pos:start="82:22" pos:end="82:24"><expr pos:start="82:22" pos:end="82:24"><name pos:start="82:22" pos:end="82:22">i</name><operator pos:start="82:23" pos:end="82:24">++</operator></expr></incr>)</control><block pos:start="82:26" pos:end="89:5">{<block_content pos:start="83:9" pos:end="88:9">
        <for pos:start="83:9" pos:end="88:9">for<control pos:start="83:12" pos:end="83:29">(<init pos:start="83:13" pos:end="83:20"><decl pos:start="83:13" pos:end="83:19"><type pos:start="83:13" pos:end="83:15"><name pos:start="83:13" pos:end="83:15">int</name></type> <name pos:start="83:17" pos:end="83:17">j</name><init pos:start="83:18" pos:end="83:19">=<expr pos:start="83:19" pos:end="83:19"><literal type="number" pos:start="83:19" pos:end="83:19">1</literal></expr></init></decl>;</init><condition pos:start="83:21" pos:end="83:25"><expr pos:start="83:21" pos:end="83:24"><name pos:start="83:21" pos:end="83:21">j</name><operator pos:start="83:22" pos:end="83:23">&lt;=</operator><name pos:start="83:24" pos:end="83:24">m</name></expr>;</condition><incr pos:start="83:26" pos:end="83:28"><expr pos:start="83:26" pos:end="83:28"><name pos:start="83:26" pos:end="83:26">j</name><operator pos:start="83:27" pos:end="83:28">++</operator></expr></incr>)</control><block pos:start="83:30" pos:end="88:9">{<block_content pos:start="84:13" pos:end="87:13">
            <expr_stmt pos:start="84:13" pos:end="84:25"><expr pos:start="84:13" pos:end="84:24"><name pos:start="84:13" pos:end="84:15">cin</name><operator pos:start="84:16" pos:end="84:17">&gt;&gt;</operator><name pos:start="84:18" pos:end="84:24"><name pos:start="84:18" pos:end="84:18">a</name><index pos:start="84:19" pos:end="84:21">[<expr pos:start="84:20" pos:end="84:20"><name pos:start="84:20" pos:end="84:20">i</name></expr>]</index><index pos:start="84:22" pos:end="84:24">[<expr pos:start="84:23" pos:end="84:23"><name pos:start="84:23" pos:end="84:23">j</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="85:13" pos:end="87:13"><if pos:start="85:13" pos:end="87:13">if<condition pos:start="85:15" pos:end="85:28">(<expr pos:start="85:16" pos:end="85:27"><name pos:start="85:16" pos:end="85:22"><name pos:start="85:16" pos:end="85:16">a</name><index pos:start="85:17" pos:end="85:19">[<expr pos:start="85:18" pos:end="85:18"><name pos:start="85:18" pos:end="85:18">i</name></expr>]</index><index pos:start="85:20" pos:end="85:22">[<expr pos:start="85:21" pos:end="85:21"><name pos:start="85:21" pos:end="85:21">j</name></expr>]</index></name><operator pos:start="85:23" pos:end="85:24">==</operator><literal type="char" pos:start="85:25" pos:end="85:27">'*'</literal></expr>)</condition><block pos:start="85:29" pos:end="87:13">{<block_content pos:start="86:17" pos:end="86:22">
                <expr_stmt pos:start="86:17" pos:end="86:22"><expr pos:start="86:17" pos:end="86:21"><name pos:start="86:17" pos:end="86:19">num</name><operator pos:start="86:20" pos:end="86:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <decl_stmt pos:start="90:5" pos:end="90:14"><decl pos:start="90:5" pos:end="90:13"><type pos:start="90:5" pos:end="90:7"><name pos:start="90:5" pos:end="90:7">int</name></type> <name pos:start="90:9" pos:end="90:11">tot</name><init pos:start="90:12" pos:end="90:13">=<expr pos:start="90:13" pos:end="90:13"><literal type="number" pos:start="90:13" pos:end="90:13">1</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="91:5" pos:end="96:5">for<control pos:start="91:8" pos:end="91:25">(<init pos:start="91:9" pos:end="91:16"><decl pos:start="91:9" pos:end="91:15"><type pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:11">int</name></type> <name pos:start="91:13" pos:end="91:13">i</name><init pos:start="91:14" pos:end="91:15">=<expr pos:start="91:15" pos:end="91:15"><literal type="number" pos:start="91:15" pos:end="91:15">1</literal></expr></init></decl>;</init><condition pos:start="91:17" pos:end="91:21"><expr pos:start="91:17" pos:end="91:20"><name pos:start="91:17" pos:end="91:17">i</name><operator pos:start="91:18" pos:end="91:19">&lt;=</operator><name pos:start="91:20" pos:end="91:20">n</name></expr>;</condition><incr pos:start="91:22" pos:end="91:24"><expr pos:start="91:22" pos:end="91:24"><name pos:start="91:22" pos:end="91:22">i</name><operator pos:start="91:23" pos:end="91:24">++</operator></expr></incr>)</control><block pos:start="91:26" pos:end="96:5">{<block_content pos:start="92:9" pos:end="95:9">
        <for pos:start="92:9" pos:end="95:9">for<control pos:start="92:12" pos:end="92:29">(<init pos:start="92:13" pos:end="92:20"><decl pos:start="92:13" pos:end="92:19"><type pos:start="92:13" pos:end="92:15"><name pos:start="92:13" pos:end="92:15">int</name></type> <name pos:start="92:17" pos:end="92:17">j</name><init pos:start="92:18" pos:end="92:19">=<expr pos:start="92:19" pos:end="92:19"><literal type="number" pos:start="92:19" pos:end="92:19">1</literal></expr></init></decl>;</init><condition pos:start="92:21" pos:end="92:25"><expr pos:start="92:21" pos:end="92:24"><name pos:start="92:21" pos:end="92:21">j</name><operator pos:start="92:22" pos:end="92:23">&lt;=</operator><name pos:start="92:24" pos:end="92:24">m</name></expr>;</condition><incr pos:start="92:26" pos:end="92:28"><expr pos:start="92:26" pos:end="92:28"><name pos:start="92:26" pos:end="92:26">j</name><operator pos:start="92:27" pos:end="92:28">++</operator></expr></incr>)</control><block pos:start="92:30" pos:end="95:9">{<block_content pos:start="93:13" pos:end="94:18">
            <expr_stmt pos:start="93:13" pos:end="93:24"><expr pos:start="93:13" pos:end="93:23"><name pos:start="93:13" pos:end="93:19"><name pos:start="93:13" pos:end="93:13">b</name><index pos:start="93:14" pos:end="93:16">[<expr pos:start="93:15" pos:end="93:15"><name pos:start="93:15" pos:end="93:15">i</name></expr>]</index><index pos:start="93:17" pos:end="93:19">[<expr pos:start="93:18" pos:end="93:18"><name pos:start="93:18" pos:end="93:18">j</name></expr>]</index></name><operator pos:start="93:20" pos:end="93:20">=</operator><name pos:start="93:21" pos:end="93:23">tot</name></expr>;</expr_stmt>
            <expr_stmt pos:start="94:13" pos:end="94:18"><expr pos:start="94:13" pos:end="94:17"><name pos:start="94:13" pos:end="94:15">tot</name><operator pos:start="94:16" pos:end="94:17">++</operator></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <decl_stmt pos:start="97:5" pos:end="97:14"><decl pos:start="97:5" pos:end="97:10"><type pos:start="97:5" pos:end="97:7"><name pos:start="97:5" pos:end="97:7">int</name></type> <name pos:start="97:9" pos:end="97:10">t1</name></decl>,<decl pos:start="97:12" pos:end="97:13"><type ref="prev" pos:start="97:5" pos:end="97:7"/><name pos:start="97:12" pos:end="97:13">t2</name></decl>;</decl_stmt>
        
    <for pos:start="99:5" pos:end="105:5">for<control pos:start="99:8" pos:end="99:27">(<init pos:start="99:9" pos:end="99:16"><decl pos:start="99:9" pos:end="99:15"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:13">i</name><init pos:start="99:14" pos:end="99:15">=<expr pos:start="99:15" pos:end="99:15"><literal type="number" pos:start="99:15" pos:end="99:15">1</literal></expr></init></decl>;</init><condition pos:start="99:17" pos:end="99:23"><expr pos:start="99:17" pos:end="99:22"><name pos:start="99:17" pos:end="99:17">i</name><operator pos:start="99:18" pos:end="99:19">&lt;=</operator><name pos:start="99:20" pos:end="99:22">num</name></expr>;</condition><incr pos:start="99:24" pos:end="99:26"><expr pos:start="99:24" pos:end="99:26"><name pos:start="99:24" pos:end="99:24">i</name><operator pos:start="99:25" pos:end="99:26">++</operator></expr></incr>)</control><block pos:start="99:28" pos:end="105:5">{<block_content pos:start="100:9" pos:end="104:14">
        <expr_stmt pos:start="100:9" pos:end="100:20"><expr pos:start="100:9" pos:end="100:19"><name pos:start="100:9" pos:end="100:11">cin</name><operator pos:start="100:12" pos:end="100:13">&gt;&gt;</operator><name pos:start="100:14" pos:end="100:15">t1</name><operator pos:start="100:16" pos:end="100:17">&gt;&gt;</operator><name pos:start="100:18" pos:end="100:19">t2</name></expr>;</expr_stmt>
        <expr_stmt pos:start="101:9" pos:end="101:18"><expr pos:start="101:9" pos:end="101:12"><name pos:start="101:9" pos:end="101:10">t1</name><operator pos:start="101:11" pos:end="101:12">++</operator></expr><operator pos:start="101:13" pos:end="101:13">,</operator><expr pos:start="101:14" pos:end="101:17"><name pos:start="101:14" pos:end="101:15">t2</name><operator pos:start="101:16" pos:end="101:17">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="102:9" pos:end="102:18"><expr pos:start="102:9" pos:end="102:17"><name pos:start="102:9" pos:end="102:14"><name pos:start="102:9" pos:end="102:9">x</name><index pos:start="102:10" pos:end="102:14">[<expr pos:start="102:11" pos:end="102:13"><name pos:start="102:11" pos:end="102:13">top</name></expr>]</index></name><operator pos:start="102:15" pos:end="102:15">=</operator><name pos:start="102:16" pos:end="102:17">t1</name></expr>;</expr_stmt>
        <expr_stmt pos:start="103:9" pos:end="103:18"><expr pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:14"><name pos:start="103:9" pos:end="103:9">y</name><index pos:start="103:10" pos:end="103:14">[<expr pos:start="103:11" pos:end="103:13"><name pos:start="103:11" pos:end="103:13">top</name></expr>]</index></name><operator pos:start="103:15" pos:end="103:15">=</operator><name pos:start="103:16" pos:end="103:17">t2</name></expr>;</expr_stmt>
        <expr_stmt pos:start="104:9" pos:end="104:14"><expr pos:start="104:9" pos:end="104:13"><name pos:start="104:9" pos:end="104:11">top</name><operator pos:start="104:12" pos:end="104:13">++</operator></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="106:5" pos:end="106:10"><expr pos:start="106:5" pos:end="106:9"><name pos:start="106:5" pos:end="106:7">top</name><operator pos:start="106:8" pos:end="106:8">=</operator><literal type="number" pos:start="106:9" pos:end="106:9">1</literal></expr>;</expr_stmt>
    <for pos:start="107:5" pos:end="156:5">for<control pos:start="107:8" pos:end="107:25">(<init pos:start="107:9" pos:end="107:16"><decl pos:start="107:9" pos:end="107:15"><type pos:start="107:9" pos:end="107:11"><name pos:start="107:9" pos:end="107:11">int</name></type> <name pos:start="107:13" pos:end="107:13">i</name><init pos:start="107:14" pos:end="107:15">=<expr pos:start="107:15" pos:end="107:15"><literal type="number" pos:start="107:15" pos:end="107:15">1</literal></expr></init></decl>;</init><condition pos:start="107:17" pos:end="107:21"><expr pos:start="107:17" pos:end="107:20"><name pos:start="107:17" pos:end="107:17">i</name><operator pos:start="107:18" pos:end="107:19">&lt;=</operator><name pos:start="107:20" pos:end="107:20">n</name></expr>;</condition><incr pos:start="107:22" pos:end="107:24"><expr pos:start="107:22" pos:end="107:24"><name pos:start="107:22" pos:end="107:22">i</name><operator pos:start="107:23" pos:end="107:24">++</operator></expr></incr>)</control><block pos:start="107:26" pos:end="156:5">{<block_content pos:start="108:9" pos:end="155:9">
        <for pos:start="108:9" pos:end="155:9">for<control pos:start="108:12" pos:end="108:29">(<init pos:start="108:13" pos:end="108:20"><decl pos:start="108:13" pos:end="108:19"><type pos:start="108:13" pos:end="108:15"><name pos:start="108:13" pos:end="108:15">int</name></type> <name pos:start="108:17" pos:end="108:17">j</name><init pos:start="108:18" pos:end="108:19">=<expr pos:start="108:19" pos:end="108:19"><literal type="number" pos:start="108:19" pos:end="108:19">1</literal></expr></init></decl>;</init><condition pos:start="108:21" pos:end="108:25"><expr pos:start="108:21" pos:end="108:24"><name pos:start="108:21" pos:end="108:21">j</name><operator pos:start="108:22" pos:end="108:23">&lt;=</operator><name pos:start="108:24" pos:end="108:24">m</name></expr>;</condition><incr pos:start="108:26" pos:end="108:28"><expr pos:start="108:26" pos:end="108:28"><name pos:start="108:26" pos:end="108:26">j</name><operator pos:start="108:27" pos:end="108:28">++</operator></expr></incr>)</control><block pos:start="108:30" pos:end="155:9">{<block_content pos:start="109:13" pos:end="154:13">
            <decl_stmt pos:start="109:13" pos:end="109:26"><decl pos:start="109:13" pos:end="109:25"><type pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:15">int</name></type> <name pos:start="109:17" pos:end="109:17">t</name><init pos:start="109:18" pos:end="109:25">=<expr pos:start="109:19" pos:end="109:25"><name pos:start="109:19" pos:end="109:25"><name pos:start="109:19" pos:end="109:19">b</name><index pos:start="109:20" pos:end="109:22">[<expr pos:start="109:21" pos:end="109:21"><name pos:start="109:21" pos:end="109:21">i</name></expr>]</index><index pos:start="109:23" pos:end="109:25">[<expr pos:start="109:24" pos:end="109:24"><name pos:start="109:24" pos:end="109:24">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="110:13" pos:end="127:13"><if pos:start="110:13" pos:end="127:13">if<condition pos:start="110:15" pos:end="110:42">(<expr pos:start="110:16" pos:end="110:41"><name pos:start="110:16" pos:end="110:22"><name pos:start="110:16" pos:end="110:16">a</name><index pos:start="110:17" pos:end="110:19">[<expr pos:start="110:18" pos:end="110:18"><name pos:start="110:18" pos:end="110:18">i</name></expr>]</index><index pos:start="110:20" pos:end="110:22">[<expr pos:start="110:21" pos:end="110:21"><name pos:start="110:21" pos:end="110:21">j</name></expr>]</index></name><operator pos:start="110:23" pos:end="110:24">&lt;=</operator><literal type="char" pos:start="110:25" pos:end="110:27">'9'</literal><operator pos:start="110:28" pos:end="110:29">&amp;&amp;</operator><name pos:start="110:30" pos:end="110:36"><name pos:start="110:30" pos:end="110:30">a</name><index pos:start="110:31" pos:end="110:33">[<expr pos:start="110:32" pos:end="110:32"><name pos:start="110:32" pos:end="110:32">i</name></expr>]</index><index pos:start="110:34" pos:end="110:36">[<expr pos:start="110:35" pos:end="110:35"><name pos:start="110:35" pos:end="110:35">j</name></expr>]</index></name><operator pos:start="110:37" pos:end="110:38">&gt;=</operator><literal type="char" pos:start="110:39" pos:end="110:41">'1'</literal></expr>)</condition><block pos:start="110:43" pos:end="127:13">{<block_content pos:start="111:17" pos:end="126:17">
                <if_stmt pos:start="111:17" pos:end="118:17"><if pos:start="111:17" pos:end="118:17">if<condition pos:start="111:19" pos:end="111:24">(<expr pos:start="111:20" pos:end="111:23"><name pos:start="111:20" pos:end="111:20">i</name><operator pos:start="111:21" pos:end="111:22">!=</operator><name pos:start="111:23" pos:end="111:23">n</name></expr>)</condition><block pos:start="111:25" pos:end="118:17">{<block_content pos:start="112:21" pos:end="117:21">
                    <if_stmt pos:start="112:21" pos:end="117:21"><if pos:start="112:21" pos:end="117:21">if<condition pos:start="112:23" pos:end="112:38">(<expr pos:start="112:24" pos:end="112:37"><name pos:start="112:24" pos:end="112:32"><name pos:start="112:24" pos:end="112:24">a</name><index pos:start="112:25" pos:end="112:29">[<expr pos:start="112:26" pos:end="112:28"><name pos:start="112:26" pos:end="112:26">i</name><operator pos:start="112:27" pos:end="112:27">+</operator><literal type="number" pos:start="112:28" pos:end="112:28">1</literal></expr>]</index><index pos:start="112:30" pos:end="112:32">[<expr pos:start="112:31" pos:end="112:31"><name pos:start="112:31" pos:end="112:31">j</name></expr>]</index></name><operator pos:start="112:33" pos:end="112:34">!=</operator><literal type="char" pos:start="112:35" pos:end="112:37">'#'</literal></expr>)</condition><block pos:start="112:39" pos:end="117:21">{<block_content pos:start="113:25" pos:end="116:62">
                        <decl_stmt pos:start="113:25" pos:end="113:41"><decl pos:start="113:25" pos:end="113:40"><type pos:start="113:25" pos:end="113:27"><name pos:start="113:25" pos:end="113:27">int</name></type> <name pos:start="113:29" pos:end="113:30">tt</name><init pos:start="113:31" pos:end="113:40">=<expr pos:start="113:32" pos:end="113:40"><name pos:start="113:32" pos:end="113:40"><name pos:start="113:32" pos:end="113:32">b</name><index pos:start="113:33" pos:end="113:37">[<expr pos:start="113:34" pos:end="113:36"><name pos:start="113:34" pos:end="113:34">i</name><operator pos:start="113:35" pos:end="113:35">+</operator><literal type="number" pos:start="113:36" pos:end="113:36">1</literal></expr>]</index><index pos:start="113:38" pos:end="113:40">[<expr pos:start="113:39" pos:end="113:39"><name pos:start="113:39" pos:end="113:39">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="114:25" pos:end="114:45"><expr pos:start="114:25" pos:end="114:44"><name pos:start="114:25" pos:end="114:30"><name pos:start="114:25" pos:end="114:27">ver</name><index pos:start="114:28" pos:end="114:30">[<expr pos:start="114:29" pos:end="114:29"><name pos:start="114:29" pos:end="114:29">t</name></expr>]</index></name><operator pos:start="114:31" pos:end="114:31">.</operator><call pos:start="114:32" pos:end="114:44"><name pos:start="114:32" pos:end="114:40">push_back</name><argument_list pos:start="114:41" pos:end="114:44">(<argument pos:start="114:42" pos:end="114:43"><expr pos:start="114:42" pos:end="114:43"><name pos:start="114:42" pos:end="114:43">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if_stmt pos:start="115:25" pos:end="116:62"><if pos:start="115:25" pos:end="115:64">if<condition pos:start="115:27" pos:end="115:42">(<expr pos:start="115:28" pos:end="115:41"><name pos:start="115:28" pos:end="115:36"><name pos:start="115:28" pos:end="115:28">a</name><index pos:start="115:29" pos:end="115:33">[<expr pos:start="115:30" pos:end="115:32"><name pos:start="115:30" pos:end="115:30">i</name><operator pos:start="115:31" pos:end="115:31">+</operator><literal type="number" pos:start="115:32" pos:end="115:32">1</literal></expr>]</index><index pos:start="115:34" pos:end="115:36">[<expr pos:start="115:35" pos:end="115:35"><name pos:start="115:35" pos:end="115:35">j</name></expr>]</index></name><operator pos:start="115:37" pos:end="115:38">==</operator><literal type="char" pos:start="115:39" pos:end="115:41">'.'</literal></expr>)</condition><block type="pseudo" pos:start="115:44" pos:end="115:64"><block_content pos:start="115:44" pos:end="115:64"> <expr_stmt pos:start="115:44" pos:end="115:64"><expr pos:start="115:44" pos:end="115:63"><name pos:start="115:44" pos:end="115:50"><name pos:start="115:44" pos:end="115:47">ver1</name><index pos:start="115:48" pos:end="115:50">[<expr pos:start="115:49" pos:end="115:49"><name pos:start="115:49" pos:end="115:49">t</name></expr>]</index></name><operator pos:start="115:51" pos:end="115:51">.</operator><call pos:start="115:52" pos:end="115:63"><name pos:start="115:52" pos:end="115:60">push_back</name><argument_list pos:start="115:61" pos:end="115:63">(<argument pos:start="115:62" pos:end="115:62"><expr pos:start="115:62" pos:end="115:62"><literal type="number" pos:start="115:62" pos:end="115:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                        <else pos:start="116:25" pos:end="116:62">else<block type="pseudo" pos:start="116:30" pos:end="116:62"><block_content pos:start="116:30" pos:end="116:62"> <expr_stmt pos:start="116:30" pos:end="116:62"><expr pos:start="116:30" pos:end="116:61"><name pos:start="116:30" pos:end="116:36"><name pos:start="116:30" pos:end="116:33">ver1</name><index pos:start="116:34" pos:end="116:36">[<expr pos:start="116:35" pos:end="116:35"><name pos:start="116:35" pos:end="116:35">t</name></expr>]</index></name><operator pos:start="116:37" pos:end="116:37">.</operator><call pos:start="116:38" pos:end="116:61"><name pos:start="116:38" pos:end="116:46">push_back</name><argument_list pos:start="116:47" pos:end="116:61">(<argument pos:start="116:48" pos:end="116:60"><expr pos:start="116:48" pos:end="116:60"><name pos:start="116:48" pos:end="116:56"><name pos:start="116:48" pos:end="116:48">a</name><index pos:start="116:49" pos:end="116:53">[<expr pos:start="116:50" pos:end="116:52"><name pos:start="116:50" pos:end="116:50">i</name><operator pos:start="116:51" pos:end="116:51">+</operator><literal type="number" pos:start="116:52" pos:end="116:52">1</literal></expr>]</index><index pos:start="116:54" pos:end="116:56">[<expr pos:start="116:55" pos:end="116:55"><name pos:start="116:55" pos:end="116:55">j</name></expr>]</index></name><operator pos:start="116:57" pos:end="116:57">-</operator><literal type="char" pos:start="116:58" pos:end="116:60">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt pos:start="119:17" pos:end="126:17"><if pos:start="119:17" pos:end="126:17">if<condition pos:start="119:19" pos:end="119:24">(<expr pos:start="119:20" pos:end="119:23"><name pos:start="119:20" pos:end="119:20">j</name><operator pos:start="119:21" pos:end="119:22">!=</operator><name pos:start="119:23" pos:end="119:23">m</name></expr>)</condition><block pos:start="119:25" pos:end="126:17">{<block_content pos:start="120:21" pos:end="125:21">
                    <if_stmt pos:start="120:21" pos:end="125:21"><if pos:start="120:21" pos:end="125:21">if<condition pos:start="120:23" pos:end="120:38">(<expr pos:start="120:24" pos:end="120:37"><name pos:start="120:24" pos:end="120:32"><name pos:start="120:24" pos:end="120:24">a</name><index pos:start="120:25" pos:end="120:27">[<expr pos:start="120:26" pos:end="120:26"><name pos:start="120:26" pos:end="120:26">i</name></expr>]</index><index pos:start="120:28" pos:end="120:32">[<expr pos:start="120:29" pos:end="120:31"><name pos:start="120:29" pos:end="120:29">j</name><operator pos:start="120:30" pos:end="120:30">+</operator><literal type="number" pos:start="120:31" pos:end="120:31">1</literal></expr>]</index></name><operator pos:start="120:33" pos:end="120:34">!=</operator><literal type="char" pos:start="120:35" pos:end="120:37">'#'</literal></expr>)</condition><block pos:start="120:39" pos:end="125:21">{<block_content pos:start="121:25" pos:end="124:62">
                        <decl_stmt pos:start="121:25" pos:end="121:41"><decl pos:start="121:25" pos:end="121:40"><type pos:start="121:25" pos:end="121:27"><name pos:start="121:25" pos:end="121:27">int</name></type> <name pos:start="121:29" pos:end="121:30">tt</name><init pos:start="121:31" pos:end="121:40">=<expr pos:start="121:32" pos:end="121:40"><name pos:start="121:32" pos:end="121:40"><name pos:start="121:32" pos:end="121:32">b</name><index pos:start="121:33" pos:end="121:35">[<expr pos:start="121:34" pos:end="121:34"><name pos:start="121:34" pos:end="121:34">i</name></expr>]</index><index pos:start="121:36" pos:end="121:40">[<expr pos:start="121:37" pos:end="121:39"><name pos:start="121:37" pos:end="121:37">j</name><operator pos:start="121:38" pos:end="121:38">+</operator><literal type="number" pos:start="121:39" pos:end="121:39">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="122:25" pos:end="122:45"><expr pos:start="122:25" pos:end="122:44"><name pos:start="122:25" pos:end="122:30"><name pos:start="122:25" pos:end="122:27">ver</name><index pos:start="122:28" pos:end="122:30">[<expr pos:start="122:29" pos:end="122:29"><name pos:start="122:29" pos:end="122:29">t</name></expr>]</index></name><operator pos:start="122:31" pos:end="122:31">.</operator><call pos:start="122:32" pos:end="122:44"><name pos:start="122:32" pos:end="122:40">push_back</name><argument_list pos:start="122:41" pos:end="122:44">(<argument pos:start="122:42" pos:end="122:43"><expr pos:start="122:42" pos:end="122:43"><name pos:start="122:42" pos:end="122:43">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if_stmt pos:start="123:25" pos:end="124:62"><if pos:start="123:25" pos:end="123:64">if<condition pos:start="123:27" pos:end="123:42">(<expr pos:start="123:28" pos:end="123:41"><name pos:start="123:28" pos:end="123:36"><name pos:start="123:28" pos:end="123:28">a</name><index pos:start="123:29" pos:end="123:31">[<expr pos:start="123:30" pos:end="123:30"><name pos:start="123:30" pos:end="123:30">i</name></expr>]</index><index pos:start="123:32" pos:end="123:36">[<expr pos:start="123:33" pos:end="123:35"><name pos:start="123:33" pos:end="123:33">j</name><operator pos:start="123:34" pos:end="123:34">+</operator><literal type="number" pos:start="123:35" pos:end="123:35">1</literal></expr>]</index></name><operator pos:start="123:37" pos:end="123:38">==</operator><literal type="char" pos:start="123:39" pos:end="123:41">'.'</literal></expr>)</condition><block type="pseudo" pos:start="123:44" pos:end="123:64"><block_content pos:start="123:44" pos:end="123:64"> <expr_stmt pos:start="123:44" pos:end="123:64"><expr pos:start="123:44" pos:end="123:63"><name pos:start="123:44" pos:end="123:50"><name pos:start="123:44" pos:end="123:47">ver1</name><index pos:start="123:48" pos:end="123:50">[<expr pos:start="123:49" pos:end="123:49"><name pos:start="123:49" pos:end="123:49">t</name></expr>]</index></name><operator pos:start="123:51" pos:end="123:51">.</operator><call pos:start="123:52" pos:end="123:63"><name pos:start="123:52" pos:end="123:60">push_back</name><argument_list pos:start="123:61" pos:end="123:63">(<argument pos:start="123:62" pos:end="123:62"><expr pos:start="123:62" pos:end="123:62"><literal type="number" pos:start="123:62" pos:end="123:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                        <else pos:start="124:25" pos:end="124:62">else<block type="pseudo" pos:start="124:30" pos:end="124:62"><block_content pos:start="124:30" pos:end="124:62"> <expr_stmt pos:start="124:30" pos:end="124:62"><expr pos:start="124:30" pos:end="124:61"><name pos:start="124:30" pos:end="124:36"><name pos:start="124:30" pos:end="124:33">ver1</name><index pos:start="124:34" pos:end="124:36">[<expr pos:start="124:35" pos:end="124:35"><name pos:start="124:35" pos:end="124:35">t</name></expr>]</index></name><operator pos:start="124:37" pos:end="124:37">.</operator><call pos:start="124:38" pos:end="124:61"><name pos:start="124:38" pos:end="124:46">push_back</name><argument_list pos:start="124:47" pos:end="124:61">(<argument pos:start="124:48" pos:end="124:60"><expr pos:start="124:48" pos:end="124:60"><name pos:start="124:48" pos:end="124:56"><name pos:start="124:48" pos:end="124:48">a</name><index pos:start="124:49" pos:end="124:51">[<expr pos:start="124:50" pos:end="124:50"><name pos:start="124:50" pos:end="124:50">i</name></expr>]</index><index pos:start="124:52" pos:end="124:56">[<expr pos:start="124:53" pos:end="124:55"><name pos:start="124:53" pos:end="124:53">j</name><operator pos:start="124:54" pos:end="124:54">+</operator><literal type="number" pos:start="124:55" pos:end="124:55">1</literal></expr>]</index></name><operator pos:start="124:57" pos:end="124:57">-</operator><literal type="char" pos:start="124:58" pos:end="124:60">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="128:13" pos:end="154:13"><if pos:start="128:13" pos:end="154:13">if<condition pos:start="128:15" pos:end="128:28">(<expr pos:start="128:16" pos:end="128:27"><name pos:start="128:16" pos:end="128:22"><name pos:start="128:16" pos:end="128:16">a</name><index pos:start="128:17" pos:end="128:19">[<expr pos:start="128:18" pos:end="128:18"><name pos:start="128:18" pos:end="128:18">i</name></expr>]</index><index pos:start="128:20" pos:end="128:22">[<expr pos:start="128:21" pos:end="128:21"><name pos:start="128:21" pos:end="128:21">j</name></expr>]</index></name><operator pos:start="128:23" pos:end="128:24">==</operator><literal type="char" pos:start="128:25" pos:end="128:27">'*'</literal></expr>)</condition><block pos:start="128:29" pos:end="154:13">{<block_content pos:start="129:17" pos:end="153:17">
                <decl_stmt pos:start="129:17" pos:end="129:40"><decl pos:start="129:17" pos:end="129:29"><type pos:start="129:17" pos:end="129:19"><name pos:start="129:17" pos:end="129:19">int</name></type> <name pos:start="129:21" pos:end="129:22">xx</name><init pos:start="129:23" pos:end="129:29">=<expr pos:start="129:24" pos:end="129:29"><name pos:start="129:24" pos:end="129:29"><name pos:start="129:24" pos:end="129:24">x</name><index pos:start="129:25" pos:end="129:29">[<expr pos:start="129:26" pos:end="129:28"><name pos:start="129:26" pos:end="129:28">top</name></expr>]</index></name></expr></init></decl>,<decl pos:start="129:31" pos:end="129:39"><type ref="prev" pos:start="129:17" pos:end="129:19"/><name pos:start="129:31" pos:end="129:32">yy</name><init pos:start="129:33" pos:end="129:39">=<expr pos:start="129:34" pos:end="129:39"><name pos:start="129:34" pos:end="129:39"><name pos:start="129:34" pos:end="129:34">y</name><index pos:start="129:35" pos:end="129:39">[<expr pos:start="129:36" pos:end="129:38"><name pos:start="129:36" pos:end="129:38">top</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="130:17" pos:end="130:22"><expr pos:start="130:17" pos:end="130:21"><name pos:start="130:17" pos:end="130:19">top</name><operator pos:start="130:20" pos:end="130:21">++</operator></expr>;</expr_stmt>
                <if_stmt pos:start="131:17" pos:end="133:17"><if pos:start="131:17" pos:end="133:17">if<condition pos:start="131:19" pos:end="131:34">(<expr pos:start="131:20" pos:end="131:33"><name pos:start="131:20" pos:end="131:28"><name pos:start="131:20" pos:end="131:20">a</name><index pos:start="131:21" pos:end="131:24">[<expr pos:start="131:22" pos:end="131:23"><name pos:start="131:22" pos:end="131:23">xx</name></expr>]</index><index pos:start="131:25" pos:end="131:28">[<expr pos:start="131:26" pos:end="131:27"><name pos:start="131:26" pos:end="131:27">yy</name></expr>]</index></name><operator pos:start="131:29" pos:end="131:30">==</operator><literal type="char" pos:start="131:31" pos:end="131:33">'#'</literal></expr>)</condition><block pos:start="131:35" pos:end="133:17">{<block_content pos:start="132:21" pos:end="132:29">
                    <continue pos:start="132:21" pos:end="132:29">continue;</continue>
                </block_content>}</block></if></if_stmt>
                <decl_stmt pos:start="134:17" pos:end="134:33"><decl pos:start="134:17" pos:end="134:32"><type pos:start="134:17" pos:end="134:19"><name pos:start="134:17" pos:end="134:19">int</name></type> <name pos:start="134:21" pos:end="134:22">tt</name><init pos:start="134:23" pos:end="134:32">=<expr pos:start="134:24" pos:end="134:32"><name pos:start="134:24" pos:end="134:32"><name pos:start="134:24" pos:end="134:24">b</name><index pos:start="134:25" pos:end="134:28">[<expr pos:start="134:26" pos:end="134:27"><name pos:start="134:26" pos:end="134:27">xx</name></expr>]</index><index pos:start="134:29" pos:end="134:32">[<expr pos:start="134:30" pos:end="134:31"><name pos:start="134:30" pos:end="134:31">yy</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="135:17" pos:end="135:37"><expr pos:start="135:17" pos:end="135:36"><name pos:start="135:17" pos:end="135:22"><name pos:start="135:17" pos:end="135:19">ver</name><index pos:start="135:20" pos:end="135:22">[<expr pos:start="135:21" pos:end="135:21"><name pos:start="135:21" pos:end="135:21">t</name></expr>]</index></name><operator pos:start="135:23" pos:end="135:23">.</operator><call pos:start="135:24" pos:end="135:36"><name pos:start="135:24" pos:end="135:32">push_back</name><argument_list pos:start="135:33" pos:end="135:36">(<argument pos:start="135:34" pos:end="135:35"><expr pos:start="135:34" pos:end="135:35"><name pos:start="135:34" pos:end="135:35">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="136:17" pos:end="137:54"><if pos:start="136:17" pos:end="136:56">if<condition pos:start="136:19" pos:end="136:34">(<expr pos:start="136:20" pos:end="136:33"><name pos:start="136:20" pos:end="136:28"><name pos:start="136:20" pos:end="136:20">a</name><index pos:start="136:21" pos:end="136:24">[<expr pos:start="136:22" pos:end="136:23"><name pos:start="136:22" pos:end="136:23">xx</name></expr>]</index><index pos:start="136:25" pos:end="136:28">[<expr pos:start="136:26" pos:end="136:27"><name pos:start="136:26" pos:end="136:27">yy</name></expr>]</index></name><operator pos:start="136:29" pos:end="136:30">==</operator><literal type="char" pos:start="136:31" pos:end="136:33">'*'</literal></expr>)</condition><block type="pseudo" pos:start="136:36" pos:end="136:56"><block_content pos:start="136:36" pos:end="136:56"> <expr_stmt pos:start="136:36" pos:end="136:56"><expr pos:start="136:36" pos:end="136:55"><name pos:start="136:36" pos:end="136:42"><name pos:start="136:36" pos:end="136:39">ver1</name><index pos:start="136:40" pos:end="136:42">[<expr pos:start="136:41" pos:end="136:41"><name pos:start="136:41" pos:end="136:41">t</name></expr>]</index></name><operator pos:start="136:43" pos:end="136:43">.</operator><call pos:start="136:44" pos:end="136:55"><name pos:start="136:44" pos:end="136:52">push_back</name><argument_list pos:start="136:53" pos:end="136:55">(<argument pos:start="136:54" pos:end="136:54"><expr pos:start="136:54" pos:end="136:54"><literal type="number" pos:start="136:54" pos:end="136:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="137:17" pos:end="137:54">else<block type="pseudo" pos:start="137:22" pos:end="137:54"><block_content pos:start="137:22" pos:end="137:54"> <expr_stmt pos:start="137:22" pos:end="137:54"><expr pos:start="137:22" pos:end="137:53"><name pos:start="137:22" pos:end="137:28"><name pos:start="137:22" pos:end="137:25">ver1</name><index pos:start="137:26" pos:end="137:28">[<expr pos:start="137:27" pos:end="137:27"><name pos:start="137:27" pos:end="137:27">t</name></expr>]</index></name><operator pos:start="137:29" pos:end="137:29">.</operator><call pos:start="137:30" pos:end="137:53"><name pos:start="137:30" pos:end="137:38">push_back</name><argument_list pos:start="137:39" pos:end="137:53">(<argument pos:start="137:40" pos:end="137:52"><expr pos:start="137:40" pos:end="137:52"><name pos:start="137:40" pos:end="137:48"><name pos:start="137:40" pos:end="137:40">a</name><index pos:start="137:41" pos:end="137:44">[<expr pos:start="137:42" pos:end="137:43"><name pos:start="137:42" pos:end="137:43">xx</name></expr>]</index><index pos:start="137:45" pos:end="137:48">[<expr pos:start="137:46" pos:end="137:47"><name pos:start="137:46" pos:end="137:47">yy</name></expr>]</index></name><operator pos:start="137:49" pos:end="137:49">-</operator><literal type="char" pos:start="137:50" pos:end="137:52">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                <if_stmt pos:start="138:17" pos:end="145:17"><if pos:start="138:17" pos:end="145:17">if<condition pos:start="138:19" pos:end="138:24">(<expr pos:start="138:20" pos:end="138:23"><name pos:start="138:20" pos:end="138:20">i</name><operator pos:start="138:21" pos:end="138:22">!=</operator><name pos:start="138:23" pos:end="138:23">n</name></expr>)</condition><block pos:start="138:25" pos:end="145:17">{<block_content pos:start="139:21" pos:end="144:21">
                    <if_stmt pos:start="139:21" pos:end="144:21"><if pos:start="139:21" pos:end="144:21">if<condition pos:start="139:23" pos:end="139:38">(<expr pos:start="139:24" pos:end="139:37"><name pos:start="139:24" pos:end="139:32"><name pos:start="139:24" pos:end="139:24">a</name><index pos:start="139:25" pos:end="139:29">[<expr pos:start="139:26" pos:end="139:28"><name pos:start="139:26" pos:end="139:26">i</name><operator pos:start="139:27" pos:end="139:27">+</operator><literal type="number" pos:start="139:28" pos:end="139:28">1</literal></expr>]</index><index pos:start="139:30" pos:end="139:32">[<expr pos:start="139:31" pos:end="139:31"><name pos:start="139:31" pos:end="139:31">j</name></expr>]</index></name><operator pos:start="139:33" pos:end="139:34">!=</operator><literal type="char" pos:start="139:35" pos:end="139:37">'#'</literal></expr>)</condition><block pos:start="139:39" pos:end="144:21">{<block_content pos:start="140:25" pos:end="143:62">
                        <decl_stmt pos:start="140:25" pos:end="140:41"><decl pos:start="140:25" pos:end="140:40"><type pos:start="140:25" pos:end="140:27"><name pos:start="140:25" pos:end="140:27">int</name></type> <name pos:start="140:29" pos:end="140:30">tt</name><init pos:start="140:31" pos:end="140:40">=<expr pos:start="140:32" pos:end="140:40"><name pos:start="140:32" pos:end="140:40"><name pos:start="140:32" pos:end="140:32">b</name><index pos:start="140:33" pos:end="140:37">[<expr pos:start="140:34" pos:end="140:36"><name pos:start="140:34" pos:end="140:34">i</name><operator pos:start="140:35" pos:end="140:35">+</operator><literal type="number" pos:start="140:36" pos:end="140:36">1</literal></expr>]</index><index pos:start="140:38" pos:end="140:40">[<expr pos:start="140:39" pos:end="140:39"><name pos:start="140:39" pos:end="140:39">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="141:25" pos:end="141:45"><expr pos:start="141:25" pos:end="141:44"><name pos:start="141:25" pos:end="141:30"><name pos:start="141:25" pos:end="141:27">ver</name><index pos:start="141:28" pos:end="141:30">[<expr pos:start="141:29" pos:end="141:29"><name pos:start="141:29" pos:end="141:29">t</name></expr>]</index></name><operator pos:start="141:31" pos:end="141:31">.</operator><call pos:start="141:32" pos:end="141:44"><name pos:start="141:32" pos:end="141:40">push_back</name><argument_list pos:start="141:41" pos:end="141:44">(<argument pos:start="141:42" pos:end="141:43"><expr pos:start="141:42" pos:end="141:43"><name pos:start="141:42" pos:end="141:43">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if_stmt pos:start="142:25" pos:end="143:62"><if pos:start="142:25" pos:end="142:64">if<condition pos:start="142:27" pos:end="142:42">(<expr pos:start="142:28" pos:end="142:41"><name pos:start="142:28" pos:end="142:36"><name pos:start="142:28" pos:end="142:28">a</name><index pos:start="142:29" pos:end="142:33">[<expr pos:start="142:30" pos:end="142:32"><name pos:start="142:30" pos:end="142:30">i</name><operator pos:start="142:31" pos:end="142:31">+</operator><literal type="number" pos:start="142:32" pos:end="142:32">1</literal></expr>]</index><index pos:start="142:34" pos:end="142:36">[<expr pos:start="142:35" pos:end="142:35"><name pos:start="142:35" pos:end="142:35">j</name></expr>]</index></name><operator pos:start="142:37" pos:end="142:38">==</operator><literal type="char" pos:start="142:39" pos:end="142:41">'.'</literal></expr>)</condition><block type="pseudo" pos:start="142:44" pos:end="142:64"><block_content pos:start="142:44" pos:end="142:64"> <expr_stmt pos:start="142:44" pos:end="142:64"><expr pos:start="142:44" pos:end="142:63"><name pos:start="142:44" pos:end="142:50"><name pos:start="142:44" pos:end="142:47">ver1</name><index pos:start="142:48" pos:end="142:50">[<expr pos:start="142:49" pos:end="142:49"><name pos:start="142:49" pos:end="142:49">t</name></expr>]</index></name><operator pos:start="142:51" pos:end="142:51">.</operator><call pos:start="142:52" pos:end="142:63"><name pos:start="142:52" pos:end="142:60">push_back</name><argument_list pos:start="142:61" pos:end="142:63">(<argument pos:start="142:62" pos:end="142:62"><expr pos:start="142:62" pos:end="142:62"><literal type="number" pos:start="142:62" pos:end="142:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                        <else pos:start="143:25" pos:end="143:62">else<block type="pseudo" pos:start="143:30" pos:end="143:62"><block_content pos:start="143:30" pos:end="143:62"> <expr_stmt pos:start="143:30" pos:end="143:62"><expr pos:start="143:30" pos:end="143:61"><name pos:start="143:30" pos:end="143:36"><name pos:start="143:30" pos:end="143:33">ver1</name><index pos:start="143:34" pos:end="143:36">[<expr pos:start="143:35" pos:end="143:35"><name pos:start="143:35" pos:end="143:35">t</name></expr>]</index></name><operator pos:start="143:37" pos:end="143:37">.</operator><call pos:start="143:38" pos:end="143:61"><name pos:start="143:38" pos:end="143:46">push_back</name><argument_list pos:start="143:47" pos:end="143:61">(<argument pos:start="143:48" pos:end="143:60"><expr pos:start="143:48" pos:end="143:60"><name pos:start="143:48" pos:end="143:56"><name pos:start="143:48" pos:end="143:48">a</name><index pos:start="143:49" pos:end="143:53">[<expr pos:start="143:50" pos:end="143:52"><name pos:start="143:50" pos:end="143:50">i</name><operator pos:start="143:51" pos:end="143:51">+</operator><literal type="number" pos:start="143:52" pos:end="143:52">1</literal></expr>]</index><index pos:start="143:54" pos:end="143:56">[<expr pos:start="143:55" pos:end="143:55"><name pos:start="143:55" pos:end="143:55">j</name></expr>]</index></name><operator pos:start="143:57" pos:end="143:57">-</operator><literal type="char" pos:start="143:58" pos:end="143:60">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt pos:start="146:17" pos:end="153:17"><if pos:start="146:17" pos:end="153:17">if<condition pos:start="146:19" pos:end="146:24">(<expr pos:start="146:20" pos:end="146:23"><name pos:start="146:20" pos:end="146:20">j</name><operator pos:start="146:21" pos:end="146:22">!=</operator><name pos:start="146:23" pos:end="146:23">m</name></expr>)</condition><block pos:start="146:25" pos:end="153:17">{<block_content pos:start="147:21" pos:end="152:21">
                    <if_stmt pos:start="147:21" pos:end="152:21"><if pos:start="147:21" pos:end="152:21">if<condition pos:start="147:23" pos:end="147:38">(<expr pos:start="147:24" pos:end="147:37"><name pos:start="147:24" pos:end="147:32"><name pos:start="147:24" pos:end="147:24">a</name><index pos:start="147:25" pos:end="147:27">[<expr pos:start="147:26" pos:end="147:26"><name pos:start="147:26" pos:end="147:26">i</name></expr>]</index><index pos:start="147:28" pos:end="147:32">[<expr pos:start="147:29" pos:end="147:31"><name pos:start="147:29" pos:end="147:29">j</name><operator pos:start="147:30" pos:end="147:30">+</operator><literal type="number" pos:start="147:31" pos:end="147:31">1</literal></expr>]</index></name><operator pos:start="147:33" pos:end="147:34">!=</operator><literal type="char" pos:start="147:35" pos:end="147:37">'#'</literal></expr>)</condition><block pos:start="147:39" pos:end="152:21">{<block_content pos:start="148:25" pos:end="151:62">
                        <decl_stmt pos:start="148:25" pos:end="148:41"><decl pos:start="148:25" pos:end="148:40"><type pos:start="148:25" pos:end="148:27"><name pos:start="148:25" pos:end="148:27">int</name></type> <name pos:start="148:29" pos:end="148:30">tt</name><init pos:start="148:31" pos:end="148:40">=<expr pos:start="148:32" pos:end="148:40"><name pos:start="148:32" pos:end="148:40"><name pos:start="148:32" pos:end="148:32">b</name><index pos:start="148:33" pos:end="148:35">[<expr pos:start="148:34" pos:end="148:34"><name pos:start="148:34" pos:end="148:34">i</name></expr>]</index><index pos:start="148:36" pos:end="148:40">[<expr pos:start="148:37" pos:end="148:39"><name pos:start="148:37" pos:end="148:37">j</name><operator pos:start="148:38" pos:end="148:38">+</operator><literal type="number" pos:start="148:39" pos:end="148:39">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="149:25" pos:end="149:45"><expr pos:start="149:25" pos:end="149:44"><name pos:start="149:25" pos:end="149:30"><name pos:start="149:25" pos:end="149:27">ver</name><index pos:start="149:28" pos:end="149:30">[<expr pos:start="149:29" pos:end="149:29"><name pos:start="149:29" pos:end="149:29">t</name></expr>]</index></name><operator pos:start="149:31" pos:end="149:31">.</operator><call pos:start="149:32" pos:end="149:44"><name pos:start="149:32" pos:end="149:40">push_back</name><argument_list pos:start="149:41" pos:end="149:44">(<argument pos:start="149:42" pos:end="149:43"><expr pos:start="149:42" pos:end="149:43"><name pos:start="149:42" pos:end="149:43">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if_stmt pos:start="150:25" pos:end="151:62"><if pos:start="150:25" pos:end="150:64">if<condition pos:start="150:27" pos:end="150:42">(<expr pos:start="150:28" pos:end="150:41"><name pos:start="150:28" pos:end="150:36"><name pos:start="150:28" pos:end="150:28">a</name><index pos:start="150:29" pos:end="150:31">[<expr pos:start="150:30" pos:end="150:30"><name pos:start="150:30" pos:end="150:30">i</name></expr>]</index><index pos:start="150:32" pos:end="150:36">[<expr pos:start="150:33" pos:end="150:35"><name pos:start="150:33" pos:end="150:33">j</name><operator pos:start="150:34" pos:end="150:34">+</operator><literal type="number" pos:start="150:35" pos:end="150:35">1</literal></expr>]</index></name><operator pos:start="150:37" pos:end="150:38">==</operator><literal type="char" pos:start="150:39" pos:end="150:41">'.'</literal></expr>)</condition><block type="pseudo" pos:start="150:44" pos:end="150:64"><block_content pos:start="150:44" pos:end="150:64"> <expr_stmt pos:start="150:44" pos:end="150:64"><expr pos:start="150:44" pos:end="150:63"><name pos:start="150:44" pos:end="150:50"><name pos:start="150:44" pos:end="150:47">ver1</name><index pos:start="150:48" pos:end="150:50">[<expr pos:start="150:49" pos:end="150:49"><name pos:start="150:49" pos:end="150:49">t</name></expr>]</index></name><operator pos:start="150:51" pos:end="150:51">.</operator><call pos:start="150:52" pos:end="150:63"><name pos:start="150:52" pos:end="150:60">push_back</name><argument_list pos:start="150:61" pos:end="150:63">(<argument pos:start="150:62" pos:end="150:62"><expr pos:start="150:62" pos:end="150:62"><literal type="number" pos:start="150:62" pos:end="150:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                        <else pos:start="151:25" pos:end="151:62">else<block type="pseudo" pos:start="151:30" pos:end="151:62"><block_content pos:start="151:30" pos:end="151:62"> <expr_stmt pos:start="151:30" pos:end="151:62"><expr pos:start="151:30" pos:end="151:61"><name pos:start="151:30" pos:end="151:36"><name pos:start="151:30" pos:end="151:33">ver1</name><index pos:start="151:34" pos:end="151:36">[<expr pos:start="151:35" pos:end="151:35"><name pos:start="151:35" pos:end="151:35">t</name></expr>]</index></name><operator pos:start="151:37" pos:end="151:37">.</operator><call pos:start="151:38" pos:end="151:61"><name pos:start="151:38" pos:end="151:46">push_back</name><argument_list pos:start="151:47" pos:end="151:61">(<argument pos:start="151:48" pos:end="151:60"><expr pos:start="151:48" pos:end="151:60"><name pos:start="151:48" pos:end="151:56"><name pos:start="151:48" pos:end="151:48">a</name><index pos:start="151:49" pos:end="151:51">[<expr pos:start="151:50" pos:end="151:50"><name pos:start="151:50" pos:end="151:50">i</name></expr>]</index><index pos:start="151:52" pos:end="151:56">[<expr pos:start="151:53" pos:end="151:55"><name pos:start="151:53" pos:end="151:53">j</name><operator pos:start="151:54" pos:end="151:54">+</operator><literal type="number" pos:start="151:55" pos:end="151:55">1</literal></expr>]</index></name><operator pos:start="151:57" pos:end="151:57">-</operator><literal type="char" pos:start="151:58" pos:end="151:60">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="157:5" pos:end="157:14"><expr pos:start="157:5" pos:end="157:13"><call pos:start="157:5" pos:end="157:13"><name pos:start="157:5" pos:end="157:10">tarjan</name><argument_list pos:start="157:11" pos:end="157:13">(<argument pos:start="157:12" pos:end="157:12"><expr pos:start="157:12" pos:end="157:12"><literal type="number" pos:start="157:12" pos:end="157:12">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="158:5" pos:end="169:5">for<control pos:start="158:8" pos:end="158:31">(<init pos:start="158:9" pos:end="158:16"><decl pos:start="158:9" pos:end="158:15"><type pos:start="158:9" pos:end="158:11"><name pos:start="158:9" pos:end="158:11">int</name></type> <name pos:start="158:13" pos:end="158:13">i</name><init pos:start="158:14" pos:end="158:15">=<expr pos:start="158:15" pos:end="158:15"><literal type="number" pos:start="158:15" pos:end="158:15">1</literal></expr></init></decl>;</init><condition pos:start="158:17" pos:end="158:27"><expr pos:start="158:17" pos:end="158:26"><name pos:start="158:17" pos:end="158:17">i</name><operator pos:start="158:18" pos:end="158:19">&lt;=</operator><name pos:start="158:20" pos:end="158:26"><name pos:start="158:20" pos:end="158:20">b</name><index pos:start="158:21" pos:end="158:23">[<expr pos:start="158:22" pos:end="158:22"><name pos:start="158:22" pos:end="158:22">n</name></expr>]</index><index pos:start="158:24" pos:end="158:26">[<expr pos:start="158:25" pos:end="158:25"><name pos:start="158:25" pos:end="158:25">m</name></expr>]</index></name></expr>;</condition><incr pos:start="158:28" pos:end="158:30"><expr pos:start="158:28" pos:end="158:30"><name pos:start="158:28" pos:end="158:28">i</name><operator pos:start="158:29" pos:end="158:30">++</operator></expr></incr>)</control><block pos:start="158:32" pos:end="169:5">{<block_content pos:start="159:9" pos:end="168:9">
        <decl_stmt pos:start="159:9" pos:end="159:16"><decl pos:start="159:9" pos:end="159:15"><type pos:start="159:9" pos:end="159:11"><name pos:start="159:9" pos:end="159:11">int</name></type> <name pos:start="159:13" pos:end="159:13">u</name><init pos:start="159:14" pos:end="159:15">=<expr pos:start="159:15" pos:end="159:15"><name pos:start="159:15" pos:end="159:15">i</name></expr></init></decl>;</decl_stmt>
        <for pos:start="160:9" pos:end="168:9">for<control pos:start="160:12" pos:end="160:40">(<init pos:start="160:13" pos:end="160:20"><decl pos:start="160:13" pos:end="160:19"><type pos:start="160:13" pos:end="160:15"><name pos:start="160:13" pos:end="160:15">int</name></type> <name pos:start="160:17" pos:end="160:17">j</name><init pos:start="160:18" pos:end="160:19">=<expr pos:start="160:19" pos:end="160:19"><literal type="number" pos:start="160:19" pos:end="160:19">0</literal></expr></init></decl>;</init><condition pos:start="160:21" pos:end="160:36"><expr pos:start="160:21" pos:end="160:35"><name pos:start="160:21" pos:end="160:21">j</name><operator pos:start="160:22" pos:end="160:22">&lt;</operator><name pos:start="160:23" pos:end="160:28"><name pos:start="160:23" pos:end="160:25">ver</name><index pos:start="160:26" pos:end="160:28">[<expr pos:start="160:27" pos:end="160:27"><name pos:start="160:27" pos:end="160:27">u</name></expr>]</index></name><operator pos:start="160:29" pos:end="160:29">.</operator><call pos:start="160:30" pos:end="160:35"><name pos:start="160:30" pos:end="160:33">size</name><argument_list pos:start="160:34" pos:end="160:35">()</argument_list></call></expr>;</condition><incr pos:start="160:37" pos:end="160:39"><expr pos:start="160:37" pos:end="160:39"><name pos:start="160:37" pos:end="160:37">j</name><operator pos:start="160:38" pos:end="160:39">++</operator></expr></incr>)</control><block pos:start="160:41" pos:end="168:9">{<block_content pos:start="161:13" pos:end="167:13">
            <decl_stmt pos:start="161:13" pos:end="161:20"><decl pos:start="161:13" pos:end="161:19"><type pos:start="161:13" pos:end="161:15"><name pos:start="161:13" pos:end="161:15">int</name></type> <name pos:start="161:17" pos:end="161:17">v</name><init pos:start="161:18" pos:end="161:19">=<expr pos:start="161:19" pos:end="161:19"><name pos:start="161:19" pos:end="161:19">j</name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="162:13" pos:end="167:13"><if pos:start="162:13" pos:end="164:13">if<condition pos:start="162:15" pos:end="162:32">(<expr pos:start="162:16" pos:end="162:31"><name pos:start="162:16" pos:end="162:22"><name pos:start="162:16" pos:end="162:19">sum1</name><index pos:start="162:20" pos:end="162:22">[<expr pos:start="162:21" pos:end="162:21"><name pos:start="162:21" pos:end="162:21">u</name></expr>]</index></name><operator pos:start="162:23" pos:end="162:24">==</operator><name pos:start="162:25" pos:end="162:31"><name pos:start="162:25" pos:end="162:28">sum1</name><index pos:start="162:29" pos:end="162:31">[<expr pos:start="162:30" pos:end="162:30"><name pos:start="162:30" pos:end="162:30">v</name></expr>]</index></name></expr>)</condition><block pos:start="162:33" pos:end="164:13">{<block_content pos:start="163:17" pos:end="163:42">
                <expr_stmt pos:start="163:17" pos:end="163:42"><expr pos:start="163:17" pos:end="163:41"><name pos:start="163:17" pos:end="163:29"><name pos:start="163:17" pos:end="163:20">sum2</name><index pos:start="163:21" pos:end="163:29">[<expr pos:start="163:22" pos:end="163:28"><name pos:start="163:22" pos:end="163:28"><name pos:start="163:22" pos:end="163:25">sum1</name><index pos:start="163:26" pos:end="163:28">[<expr pos:start="163:27" pos:end="163:27"><name pos:start="163:27" pos:end="163:27">u</name></expr>]</index></name></expr>]</index></name><operator pos:start="163:30" pos:end="163:31">+=</operator><name pos:start="163:32" pos:end="163:41"><name pos:start="163:32" pos:end="163:35">ver1</name><index pos:start="163:36" pos:end="163:38">[<expr pos:start="163:37" pos:end="163:37"><name pos:start="163:37" pos:end="163:37">u</name></expr>]</index><index pos:start="163:39" pos:end="163:41">[<expr pos:start="163:40" pos:end="163:40"><name pos:start="163:40" pos:end="163:40">j</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="165:13" pos:end="167:13">else<block pos:start="165:17" pos:end="167:13">{<block_content pos:start="166:17" pos:end="166:49">
                <expr_stmt pos:start="166:17" pos:end="166:49"><expr pos:start="166:17" pos:end="166:48"><name pos:start="166:17" pos:end="166:29"><name pos:start="166:17" pos:end="166:20">ver2</name><index pos:start="166:21" pos:end="166:29">[<expr pos:start="166:22" pos:end="166:28"><name pos:start="166:22" pos:end="166:28"><name pos:start="166:22" pos:end="166:25">sum1</name><index pos:start="166:26" pos:end="166:28">[<expr pos:start="166:27" pos:end="166:27"><name pos:start="166:27" pos:end="166:27">u</name></expr>]</index></name></expr>]</index></name><operator pos:start="166:30" pos:end="166:30">.</operator><call pos:start="166:31" pos:end="166:48"><name pos:start="166:31" pos:end="166:39">push_back</name><argument_list pos:start="166:40" pos:end="166:48">(<argument pos:start="166:41" pos:end="166:47"><expr pos:start="166:41" pos:end="166:47"><name pos:start="166:41" pos:end="166:47"><name pos:start="166:41" pos:end="166:44">sum1</name><index pos:start="166:45" pos:end="166:47">[<expr pos:start="166:46" pos:end="166:46"><name pos:start="166:46" pos:end="166:46">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <decl_stmt pos:start="170:5" pos:end="170:23"><decl pos:start="170:5" pos:end="170:22"><type pos:start="170:5" pos:end="170:7"><name pos:start="170:5" pos:end="170:7">int</name></type> <name pos:start="170:9" pos:end="170:11">ans</name><init pos:start="170:12" pos:end="170:22">=<expr pos:start="170:13" pos:end="170:22"><call pos:start="170:13" pos:end="170:22"><name pos:start="170:13" pos:end="170:15">dfs</name><argument_list pos:start="170:16" pos:end="170:22">(<argument pos:start="170:17" pos:end="170:21"><expr pos:start="170:17" pos:end="170:21"><name pos:start="170:17" pos:end="170:21">flag1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="171:5" pos:end="171:23"><expr pos:start="171:5" pos:end="171:22"><name pos:start="171:5" pos:end="171:7">ans</name><operator pos:start="171:8" pos:end="171:9">+=</operator><operator pos:start="171:10" pos:end="171:10">(</operator><name pos:start="171:11" pos:end="171:17"><name pos:start="171:11" pos:end="171:11">a</name><index pos:start="171:12" pos:end="171:14">[<expr pos:start="171:13" pos:end="171:13"><literal type="number" pos:start="171:13" pos:end="171:13">1</literal></expr>]</index><index pos:start="171:15" pos:end="171:17">[<expr pos:start="171:16" pos:end="171:16"><literal type="number" pos:start="171:16" pos:end="171:16">1</literal></expr>]</index></name><operator pos:start="171:18" pos:end="171:18">-</operator><literal type="char" pos:start="171:19" pos:end="171:21">'0'</literal><operator pos:start="171:22" pos:end="171:22">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="172:5" pos:end="172:20"><expr pos:start="172:5" pos:end="172:19"><name pos:start="172:5" pos:end="172:8">cout</name><operator pos:start="172:9" pos:end="172:10">&lt;&lt;</operator><name pos:start="172:11" pos:end="172:13">ans</name><operator pos:start="172:14" pos:end="172:15">&lt;&lt;</operator><literal type="string" pos:start="172:16" pos:end="172:19">"\n"</literal></expr>;</expr_stmt>
    <return pos:start="173:5" pos:end="173:13">return <expr pos:start="173:12" pos:end="173:12"><literal type="number" pos:start="173:12" pos:end="173:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
