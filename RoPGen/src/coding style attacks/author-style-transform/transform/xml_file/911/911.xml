<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/911/911.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="36:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="36:1">{<block_content pos:start="5:5" pos:end="35:13">
    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:13">s1</name></decl>, <decl pos:start="5:16" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:10"/><name pos:start="5:16" pos:end="5:17">s2</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:20"><expr pos:start="6:5" pos:end="6:19"><name pos:start="6:5" pos:end="6:7">cin</name> <operator pos:start="6:9" pos:end="6:10">&gt;&gt;</operator> <name pos:start="6:12" pos:end="6:13">s1</name> <operator pos:start="6:15" pos:end="6:16">&gt;&gt;</operator> <name pos:start="6:18" pos:end="6:19">s2</name></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">cnt</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>, <decl pos:start="7:18" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:18">t</name> <init pos:start="7:20" pos:end="7:22">= <expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">1</literal></expr></init></decl>;</decl_stmt> 
    <for pos:start="8:5" pos:end="13:5">for <control pos:start="8:9" pos:end="8:44">(<init pos:start="8:10" pos:end="8:31"><decl pos:start="8:10" pos:end="8:30"><type pos:start="8:10" pos:end="8:12"><name pos:start="8:10" pos:end="8:12">int</name></type> <name pos:start="8:14" pos:end="8:14">i</name> <init pos:start="8:16" pos:end="8:30">= <expr pos:start="8:18" pos:end="8:30"><call pos:start="8:18" pos:end="8:26"><name pos:start="8:18" pos:end="8:24"><name pos:start="8:18" pos:end="8:19">s2</name><operator pos:start="8:20" pos:end="8:20">.</operator><name pos:start="8:21" pos:end="8:24">size</name></name><argument_list pos:start="8:25" pos:end="8:26">()</argument_list></call> <operator pos:start="8:28" pos:end="8:28">-</operator> <literal type="number" pos:start="8:30" pos:end="8:30">1</literal></expr></init></decl>;</init> <condition pos:start="8:33" pos:end="8:39"><expr pos:start="8:33" pos:end="8:38"><name pos:start="8:33" pos:end="8:33">i</name> <operator pos:start="8:35" pos:end="8:36">&gt;=</operator> <literal type="number" pos:start="8:38" pos:end="8:38">0</literal></expr>;</condition> <incr pos:start="8:41" pos:end="8:43"><expr pos:start="8:41" pos:end="8:43"><name pos:start="8:41" pos:end="8:41">i</name><operator pos:start="8:42" pos:end="8:43">--</operator></expr></incr>)</control> <block pos:start="8:46" pos:end="13:5">{<block_content pos:start="9:9" pos:end="12:12">
        <decl_stmt pos:start="9:9" pos:end="9:30"><decl pos:start="9:9" pos:end="9:29"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:15">num</name> <init pos:start="9:17" pos:end="9:29">= <expr pos:start="9:19" pos:end="9:29"><name pos:start="9:19" pos:end="9:23"><name pos:start="9:19" pos:end="9:20">s2</name><index pos:start="9:21" pos:end="9:23">[<expr pos:start="9:22" pos:end="9:22"><name pos:start="9:22" pos:end="9:22">i</name></expr>]</index></name> <operator pos:start="9:25" pos:end="9:25">-</operator> <literal type="char" pos:start="9:27" pos:end="9:29">'0'</literal></expr></init></decl>;</decl_stmt>
        
        <expr_stmt pos:start="11:9" pos:end="11:19"><expr pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:11">cnt</name><operator pos:start="11:12" pos:end="11:13">+=</operator><name pos:start="11:14" pos:end="11:16">num</name><operator pos:start="11:17" pos:end="11:17">*</operator><name pos:start="11:18" pos:end="11:18">t</name></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:12"><expr pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:9">t</name><operator pos:start="12:10" pos:end="12:11">++</operator></expr>;</expr_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="14:5" pos:end="14:15"><decl pos:start="14:5" pos:end="14:14"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:12">cnt1</name><init pos:start="14:13" pos:end="14:14">=<expr pos:start="14:14" pos:end="14:14"><literal type="number" pos:start="14:14" pos:end="14:14">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:10"><expr pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:5">t</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <literal type="number" pos:start="15:9" pos:end="15:9">1</literal></expr>;</expr_stmt> 
    <decl_stmt pos:start="16:5" pos:end="16:12"><decl pos:start="16:5" pos:end="16:11"><type pos:start="16:5" pos:end="16:7"><name pos:start="16:5" pos:end="16:7">int</name></type> <name pos:start="16:9" pos:end="16:11">tmp</name></decl>;</decl_stmt> 
    <for pos:start="17:5" pos:end="29:5">for <control pos:start="17:9" pos:end="17:44">(<init pos:start="17:10" pos:end="17:31"><decl pos:start="17:10" pos:end="17:30"><type pos:start="17:10" pos:end="17:12"><name pos:start="17:10" pos:end="17:12">int</name></type> <name pos:start="17:14" pos:end="17:14">i</name> <init pos:start="17:16" pos:end="17:30">= <expr pos:start="17:18" pos:end="17:30"><call pos:start="17:18" pos:end="17:26"><name pos:start="17:18" pos:end="17:24"><name pos:start="17:18" pos:end="17:19">s1</name><operator pos:start="17:20" pos:end="17:20">.</operator><name pos:start="17:21" pos:end="17:24">size</name></name><argument_list pos:start="17:25" pos:end="17:26">()</argument_list></call> <operator pos:start="17:28" pos:end="17:28">-</operator> <literal type="number" pos:start="17:30" pos:end="17:30">1</literal></expr></init></decl>;</init> <condition pos:start="17:33" pos:end="17:39"><expr pos:start="17:33" pos:end="17:38"><name pos:start="17:33" pos:end="17:33">i</name> <operator pos:start="17:35" pos:end="17:36">&gt;=</operator> <literal type="number" pos:start="17:38" pos:end="17:38">0</literal></expr>;</condition> <incr pos:start="17:41" pos:end="17:43"><expr pos:start="17:41" pos:end="17:43"><name pos:start="17:41" pos:end="17:41">i</name><operator pos:start="17:42" pos:end="17:43">--</operator></expr></incr>)</control> <block pos:start="17:46" pos:end="29:5">{<block_content pos:start="18:9" pos:end="28:12">
        <if_stmt pos:start="18:9" pos:end="27:9"><if pos:start="18:9" pos:end="24:9">if <condition pos:start="18:12" pos:end="18:25">(<expr pos:start="18:13" pos:end="18:24"><name pos:start="18:13" pos:end="18:17"><name pos:start="18:13" pos:end="18:14">s1</name><index pos:start="18:15" pos:end="18:17">[<expr pos:start="18:16" pos:end="18:16"><name pos:start="18:16" pos:end="18:16">i</name></expr>]</index></name> <operator pos:start="18:19" pos:end="18:20">!=</operator> <literal type="char" pos:start="18:22" pos:end="18:24">'?'</literal></expr>)</condition> <block pos:start="18:27" pos:end="24:9">{<block_content pos:start="19:13" pos:end="23:16">
            <decl_stmt pos:start="19:13" pos:end="19:34"><decl pos:start="19:13" pos:end="19:33"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:19">num</name> <init pos:start="19:21" pos:end="19:33">= <expr pos:start="19:23" pos:end="19:33"><name pos:start="19:23" pos:end="19:27"><name pos:start="19:23" pos:end="19:24">s1</name><index pos:start="19:25" pos:end="19:27">[<expr pos:start="19:26" pos:end="19:26"><name pos:start="19:26" pos:end="19:26">i</name></expr>]</index></name> <operator pos:start="19:29" pos:end="19:29">-</operator> <literal type="char" pos:start="19:31" pos:end="19:33">'0'</literal></expr></init></decl>;</decl_stmt>
            
            <expr_stmt pos:start="21:13" pos:end="21:24"><expr pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:16">cnt1</name><operator pos:start="21:17" pos:end="21:18">+=</operator><name pos:start="21:19" pos:end="21:21">num</name><operator pos:start="21:22" pos:end="21:22">*</operator><name pos:start="21:23" pos:end="21:23">t</name></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:22"><expr pos:start="22:13" pos:end="22:21"><name pos:start="22:13" pos:end="22:15">cnt</name><operator pos:start="22:16" pos:end="22:17">-=</operator><name pos:start="22:18" pos:end="22:21">cnt1</name></expr>;</expr_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:16"><expr pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:13">t</name><operator pos:start="23:14" pos:end="23:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="24:11" pos:end="27:9">else <block pos:start="24:16" pos:end="27:9">{<block_content pos:start="26:13" pos:end="26:18">
            
            <expr_stmt pos:start="26:13" pos:end="26:18"><expr pos:start="26:13" pos:end="26:17"><name pos:start="26:13" pos:end="26:15">tmp</name><operator pos:start="26:16" pos:end="26:16">=</operator><name pos:start="26:17" pos:end="26:17">t</name></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:12"><expr pos:start="28:9" pos:end="28:11"><name pos:start="28:9" pos:end="28:9">t</name><operator pos:start="28:10" pos:end="28:11">++</operator></expr>;</expr_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="30:5" pos:end="34:5"><if pos:start="30:5" pos:end="32:5">if <condition pos:start="30:8" pos:end="30:15">(<expr pos:start="30:9" pos:end="30:14"><name pos:start="30:9" pos:end="30:11">cnt</name><operator pos:start="30:12" pos:end="30:13">==</operator><literal type="number" pos:start="30:14" pos:end="30:14">0</literal></expr>)</condition> <block pos:start="30:17" pos:end="32:5">{<block_content pos:start="31:9" pos:end="31:34">
        <expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:12">cout</name> <operator pos:start="31:14" pos:end="31:15">&lt;&lt;</operator> <name pos:start="31:17" pos:end="31:19">cnt</name> <operator pos:start="31:21" pos:end="31:21">/</operator> <name pos:start="31:23" pos:end="31:25">tmp</name> <operator pos:start="31:27" pos:end="31:28">&lt;&lt;</operator> <name pos:start="31:30" pos:end="31:33">endl</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="32:7" pos:end="34:5">else <block pos:start="32:12" pos:end="34:5">{<block_content pos:start="33:9" pos:end="33:32">
        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:12">cout</name> <operator pos:start="33:14" pos:end="33:15">&lt;&lt;</operator> <literal type="string" pos:start="33:17" pos:end="33:23">"Lier!"</literal> <operator pos:start="33:25" pos:end="33:26">&lt;&lt;</operator> <name pos:start="33:28" pos:end="33:31">endl</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
