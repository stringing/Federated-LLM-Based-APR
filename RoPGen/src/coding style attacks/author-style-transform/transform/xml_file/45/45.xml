<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/45/45.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="25:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:7">shu</name><parameter_list pos:start="4:8" pos:end="4:21">(<parameter pos:start="4:9" pos:end="4:13"><decl pos:start="4:9" pos:end="4:13"><type pos:start="4:9" pos:end="4:13"><name pos:start="4:9" pos:end="4:11">int</name></type> <name pos:start="4:13" pos:end="4:13">a</name></decl></parameter>, <parameter pos:start="4:16" pos:end="4:20"><decl pos:start="4:16" pos:end="4:20"><type pos:start="4:16" pos:end="4:20"><name pos:start="4:16" pos:end="4:18">int</name></type> <name pos:start="4:20" pos:end="4:20">b</name></decl></parameter>)</parameter_list><block pos:start="4:22" pos:end="25:1">{<block_content pos:start="5:5" pos:end="24:5">
    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">suma</name> <init pos:start="5:14" pos:end="5:16">= <expr pos:start="5:16" pos:end="5:16"><literal type="number" pos:start="5:16" pos:end="5:16">0</literal></expr></init></decl>, <decl pos:start="5:19" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:22">sumb</name></decl>;</decl_stmt>
    <while pos:start="6:5" pos:end="9:5">while<condition pos:start="6:10" pos:end="6:17">(<expr pos:start="6:11" pos:end="6:16"><name pos:start="6:11" pos:end="6:11">a</name> <operator pos:start="6:13" pos:end="6:14">!=</operator> <literal type="number" pos:start="6:16" pos:end="6:16">0</literal></expr>)</condition><block pos:start="6:18" pos:end="9:5">{<block_content pos:start="7:9" pos:end="8:16">
        <expr_stmt pos:start="7:9" pos:end="7:23"><expr pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:12">suma</name> <operator pos:start="7:14" pos:end="7:15">+=</operator> <name pos:start="7:17" pos:end="7:17">a</name> <operator pos:start="7:19" pos:end="7:19">%</operator> <literal type="number" pos:start="7:21" pos:end="7:22">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:16"><expr pos:start="8:9" pos:end="8:15"><name pos:start="8:9" pos:end="8:9">a</name> <operator pos:start="8:11" pos:end="8:12">/=</operator> <literal type="number" pos:start="8:14" pos:end="8:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="10:5" pos:end="13:5">while<condition pos:start="10:10" pos:end="10:17">(<expr pos:start="10:11" pos:end="10:16"><name pos:start="10:11" pos:end="10:11">b</name> <operator pos:start="10:13" pos:end="10:14">!=</operator> <literal type="number" pos:start="10:16" pos:end="10:16">0</literal></expr>)</condition><block pos:start="10:18" pos:end="13:5">{<block_content pos:start="11:9" pos:end="12:16">
        <expr_stmt pos:start="11:9" pos:end="11:23"><expr pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:12">sumb</name> <operator pos:start="11:14" pos:end="11:15">+=</operator> <name pos:start="11:17" pos:end="11:17">b</name> <operator pos:start="11:19" pos:end="11:19">%</operator> <literal type="number" pos:start="11:21" pos:end="11:22">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:16"><expr pos:start="12:9" pos:end="12:15"><name pos:start="12:9" pos:end="12:9">b</name> <operator pos:start="12:11" pos:end="12:12">/=</operator> <literal type="number" pos:start="12:14" pos:end="12:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <if_stmt pos:start="14:5" pos:end="24:5"><if pos:start="14:5" pos:end="16:5">if<condition pos:start="14:7" pos:end="14:19">(<expr pos:start="14:8" pos:end="14:18"><name pos:start="14:8" pos:end="14:11">suma</name> <operator pos:start="14:13" pos:end="14:13">&gt;</operator> <name pos:start="14:15" pos:end="14:18">sumb</name></expr>)</condition><block pos:start="14:20" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:21">
        <return pos:start="15:9" pos:end="15:21">return <expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:16">a</name> <operator pos:start="15:18" pos:end="15:18">&gt;</operator> <name pos:start="15:20" pos:end="15:20">b</name></expr>;</return>
    </block_content>}</block></if> <if type="elseif" pos:start="16:7" pos:end="22:5">else if<condition pos:start="16:14" pos:end="16:27">(<expr pos:start="16:15" pos:end="16:26"><name pos:start="16:15" pos:end="16:18">suma</name> <operator pos:start="16:20" pos:end="16:21">==</operator> <name pos:start="16:23" pos:end="16:26">sumb</name></expr>)</condition><block pos:start="16:28" pos:end="22:5">{<block_content pos:start="17:9" pos:end="21:9">
        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="19:9">if<condition pos:start="17:11" pos:end="17:17">(<expr pos:start="17:12" pos:end="17:16"><name pos:start="17:12" pos:end="17:12">a</name> <operator pos:start="17:14" pos:end="17:14">&gt;</operator> <name pos:start="17:16" pos:end="17:16">b</name></expr>)</condition><block pos:start="17:18" pos:end="19:9">{<block_content pos:start="18:13" pos:end="18:25">
            <return pos:start="18:13" pos:end="18:25">return <expr pos:start="18:20" pos:end="18:24"><name pos:start="18:20" pos:end="18:20">a</name> <operator pos:start="18:22" pos:end="18:22">&gt;</operator> <name pos:start="18:24" pos:end="18:24">b</name></expr>;</return>
        </block_content>}</block></if> <else pos:start="19:11" pos:end="21:9">else <block pos:start="19:16" pos:end="21:9">{<block_content pos:start="20:13" pos:end="20:25">
            <return pos:start="20:13" pos:end="20:25">return <expr pos:start="20:20" pos:end="20:24"><name pos:start="20:20" pos:end="20:20">a</name> <operator pos:start="20:22" pos:end="20:22">&lt;</operator> <name pos:start="20:24" pos:end="20:24">b</name></expr>;</return>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></if> <else pos:start="22:7" pos:end="24:5">else <block pos:start="22:12" pos:end="24:5">{<block_content pos:start="23:9" pos:end="23:21">
        <return pos:start="23:9" pos:end="23:21">return <expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:16">a</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <name pos:start="23:20" pos:end="23:20">b</name></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="26:1" pos:end="41:1"><type pos:start="26:1" pos:end="26:3"><name pos:start="26:1" pos:end="26:3">int</name></type> <name pos:start="26:5" pos:end="26:8">main</name><parameter_list pos:start="26:9" pos:end="26:10">()</parameter_list><block pos:start="26:11" pos:end="41:1">{<block_content pos:start="27:5" pos:end="40:13">
    <decl_stmt pos:start="27:5" pos:end="27:13"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">n</name></decl>, <decl pos:start="27:12" pos:end="27:12"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:12" pos:end="27:12">x</name></decl>;</decl_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:13"><expr pos:start="28:5" pos:end="28:12"><name pos:start="28:5" pos:end="28:7">cin</name> <operator pos:start="28:9" pos:end="28:10">&gt;&gt;</operator> <name pos:start="28:12" pos:end="28:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="29:5" pos:end="29:17"><decl pos:start="29:5" pos:end="29:16"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:9">a</name><index pos:start="29:10" pos:end="29:16">[<expr pos:start="29:11" pos:end="29:15"><literal type="number" pos:start="29:11" pos:end="29:15">10000</literal></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:10"><expr pos:start="30:5" pos:end="30:9"><name pos:start="30:5" pos:end="30:5">x</name> <operator pos:start="30:7" pos:end="30:7">=</operator> <name pos:start="30:9" pos:end="30:9">n</name></expr>;</expr_stmt>
    <for pos:start="31:5" pos:end="33:5">for<control pos:start="31:8" pos:end="31:30">(<init pos:start="31:9" pos:end="31:18"><decl pos:start="31:9" pos:end="31:17"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name> <init pos:start="31:15" pos:end="31:17">= <expr pos:start="31:17" pos:end="31:17"><literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr></init></decl>;</init> <condition pos:start="31:20" pos:end="31:25"><expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:20">i</name> <operator pos:start="31:22" pos:end="31:22">&lt;</operator> <name pos:start="31:24" pos:end="31:24">n</name></expr>;</condition> <incr pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:27">i</name><operator pos:start="31:28" pos:end="31:29">++</operator></expr></incr>)</control><block pos:start="31:31" pos:end="33:5">{<block_content pos:start="32:9" pos:end="32:20">
        <expr_stmt pos:start="32:9" pos:end="32:20"><expr pos:start="32:9" pos:end="32:19"><name pos:start="32:9" pos:end="32:11">cin</name> <operator pos:start="32:13" pos:end="32:14">&gt;&gt;</operator> <name pos:start="32:16" pos:end="32:19"><name pos:start="32:16" pos:end="32:16">a</name><index pos:start="32:17" pos:end="32:19">[<expr pos:start="32:18" pos:end="32:18"><name pos:start="32:18" pos:end="32:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <while pos:start="34:5" pos:end="36:5">while<condition pos:start="34:10" pos:end="34:14">(<expr pos:start="34:11" pos:end="34:13"><name pos:start="34:11" pos:end="34:11">x</name><operator pos:start="34:12" pos:end="34:13">--</operator></expr>)</condition><block pos:start="34:15" pos:end="36:5">{<block_content pos:start="35:9" pos:end="35:28">
        <expr_stmt pos:start="35:9" pos:end="35:28"><expr pos:start="35:9" pos:end="35:27"><call pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:12">sort</name><argument_list pos:start="35:13" pos:end="35:27">(<argument pos:start="35:14" pos:end="35:14"><expr pos:start="35:14" pos:end="35:14"><name pos:start="35:14" pos:end="35:14">a</name></expr></argument>, <argument pos:start="35:17" pos:end="35:21"><expr pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:17">a</name> <operator pos:start="35:19" pos:end="35:19">+</operator> <name pos:start="35:21" pos:end="35:21">n</name></expr></argument>, <argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">shu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>  
    <for pos:start="37:5" pos:end="39:5">for<control pos:start="37:8" pos:end="37:30">(<init pos:start="37:9" pos:end="37:18"><decl pos:start="37:9" pos:end="37:17"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:13">i</name> <init pos:start="37:15" pos:end="37:17">= <expr pos:start="37:17" pos:end="37:17"><literal type="number" pos:start="37:17" pos:end="37:17">0</literal></expr></init></decl>;</init> <condition pos:start="37:20" pos:end="37:25"><expr pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:20">i</name> <operator pos:start="37:22" pos:end="37:22">&lt;</operator> <name pos:start="37:24" pos:end="37:24">n</name></expr>;</condition> <incr pos:start="37:27" pos:end="37:29"><expr pos:start="37:27" pos:end="37:29"><name pos:start="37:27" pos:end="37:27">i</name><operator pos:start="37:28" pos:end="37:29">++</operator></expr></incr>)</control><block pos:start="37:31" pos:end="39:5">{<block_content pos:start="38:9" pos:end="38:28">
        <expr_stmt pos:start="38:9" pos:end="38:28"><expr pos:start="38:9" pos:end="38:27"><name pos:start="38:9" pos:end="38:12">cout</name> <operator pos:start="38:14" pos:end="38:15">&lt;&lt;</operator> <name pos:start="38:17" pos:end="38:20"><name pos:start="38:17" pos:end="38:17">a</name><index pos:start="38:18" pos:end="38:20">[<expr pos:start="38:19" pos:end="38:19"><name pos:start="38:19" pos:end="38:19">i</name></expr>]</index></name> <operator pos:start="38:22" pos:end="38:23">&lt;&lt;</operator> <literal type="string" pos:start="38:25" pos:end="38:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="40:5" pos:end="40:13">return <expr pos:start="40:12" pos:end="40:12"><literal type="number" pos:start="40:12" pos:end="40:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
