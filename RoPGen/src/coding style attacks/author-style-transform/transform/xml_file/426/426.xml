<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/426/426.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:9"><decl pos:start="3:1" pos:end="3:8"><type pos:start="3:1" pos:end="3:6"><name pos:start="3:1" pos:end="3:6">string</name></type> <name pos:start="3:8" pos:end="3:8">o</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:16"><decl pos:start="4:1" pos:end="4:15"><type pos:start="4:1" pos:end="4:9"><name pos:start="4:1" pos:end="4:4">long</name> <name pos:start="4:6" pos:end="4:9">long</name></type> <name pos:start="4:11" pos:end="4:13">sum</name><init pos:start="4:14" pos:end="4:15">=<expr pos:start="4:15" pos:end="4:15"><literal type="number" pos:start="4:15" pos:end="4:15">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:16"><decl pos:start="5:1" pos:end="5:15"><type pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:6">vector</name><argument_list type="generic" pos:start="5:7" pos:end="5:11">&lt;<argument pos:start="5:8" pos:end="5:10"><expr pos:start="5:8" pos:end="5:10"><name pos:start="5:8" pos:end="5:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="5:13" pos:end="5:15">ret</name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:22"><decl pos:start="6:1" pos:end="6:21"><type pos:start="6:1" pos:end="6:18"><name pos:start="6:1" pos:end="6:18"><name pos:start="6:1" pos:end="6:3">map</name><argument_list type="generic" pos:start="6:4" pos:end="6:18">&lt;<argument pos:start="6:5" pos:end="6:10"><expr pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></expr></argument>,<argument pos:start="6:12" pos:end="6:17"><expr pos:start="6:12" pos:end="6:17"><name pos:start="6:12" pos:end="6:17">string</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:20" pos:end="6:21">mp</name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="19:1"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">char</name></type> <name pos:start="7:6" pos:end="7:12">getchar</name><parameter_list pos:start="7:13" pos:end="7:25">(<parameter pos:start="7:14" pos:end="7:24"><decl pos:start="7:14" pos:end="7:24"><type pos:start="7:14" pos:end="7:19"><name pos:start="7:14" pos:end="7:19">string</name></type> <name pos:start="7:21" pos:end="7:24">pass</name></decl></parameter>)</parameter_list>
<block pos:start="8:1" pos:end="19:1">{<block_content pos:start="9:5" pos:end="18:17">
    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">a</name><init pos:start="9:10" pos:end="9:11">=<expr pos:start="9:11" pos:end="9:11"><literal type="number" pos:start="9:11" pos:end="9:11">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="10:5" pos:end="13:5">for<control pos:start="10:8" pos:end="10:24">(<init pos:start="10:9" pos:end="10:16"><decl pos:start="10:9" pos:end="10:15"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">i</name><init pos:start="10:14" pos:end="10:15">=<expr pos:start="10:15" pos:end="10:15"><literal type="number" pos:start="10:15" pos:end="10:15">3</literal></expr></init></decl>;</init><condition pos:start="10:17" pos:end="10:20"><expr pos:start="10:17" pos:end="10:19"><name pos:start="10:17" pos:end="10:17">i</name><operator pos:start="10:18" pos:end="10:18">&lt;</operator><literal type="number" pos:start="10:19" pos:end="10:19">8</literal></expr>;</condition><incr pos:start="10:21" pos:end="10:23"><expr pos:start="10:21" pos:end="10:23"><operator pos:start="10:21" pos:end="10:22">++</operator><name pos:start="10:23" pos:end="10:23">i</name></expr></incr>)</control>
    <block pos:start="11:5" pos:end="13:5">{<block_content pos:start="12:9" pos:end="12:44">
        <expr_stmt pos:start="12:9" pos:end="12:44"><expr pos:start="12:9" pos:end="12:43"><name pos:start="12:9" pos:end="12:9">a</name><operator pos:start="12:10" pos:end="12:10">=</operator><name pos:start="12:11" pos:end="12:11">a</name><operator pos:start="12:12" pos:end="12:12">+</operator><operator pos:start="12:13" pos:end="12:13">(</operator><operator pos:start="12:14" pos:end="12:14">(</operator><name pos:start="12:15" pos:end="12:17">int</name><operator pos:start="12:18" pos:end="12:18">)</operator><operator pos:start="12:19" pos:end="12:19">(</operator><name pos:start="12:20" pos:end="12:26"><name pos:start="12:20" pos:end="12:23">pass</name><index pos:start="12:24" pos:end="12:26">[<expr pos:start="12:25" pos:end="12:25"><name pos:start="12:25" pos:end="12:25">i</name></expr>]</index></name><operator pos:start="12:27" pos:end="12:27">-</operator><literal type="char" pos:start="12:28" pos:end="12:30">'0'</literal><operator pos:start="12:31" pos:end="12:31">)</operator><operator pos:start="12:32" pos:end="12:32">)</operator><operator pos:start="12:33" pos:end="12:33">*</operator><call pos:start="12:34" pos:end="12:43"><name pos:start="12:34" pos:end="12:36">pow</name><argument_list pos:start="12:37" pos:end="12:43">(<argument pos:start="12:38" pos:end="12:38"><expr pos:start="12:38" pos:end="12:38"><literal type="number" pos:start="12:38" pos:end="12:38">2</literal></expr></argument>,<argument pos:start="12:40" pos:end="12:42"><expr pos:start="12:40" pos:end="12:42"><literal type="number" pos:start="12:40" pos:end="12:41">7</literal><operator pos:start="12:41" pos:end="12:41">-</operator><name pos:start="12:42" pos:end="12:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="14:5" pos:end="17:5"><if pos:start="14:5" pos:end="17:5">if<condition pos:start="14:7" pos:end="14:13">(<expr pos:start="14:8" pos:end="14:12"><name pos:start="14:8" pos:end="14:8">a</name><operator pos:start="14:9" pos:end="14:10">&gt;=</operator><literal type="number" pos:start="14:11" pos:end="14:12">26</literal></expr>)</condition>
    <block pos:start="15:5" pos:end="17:5">{<block_content pos:start="16:9" pos:end="16:19">
        <return pos:start="16:9" pos:end="16:19">return <expr pos:start="16:16" pos:end="16:18"><literal type="char" pos:start="16:16" pos:end="16:18">'e'</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="18:5" pos:end="18:17">return <expr pos:start="18:12" pos:end="18:16"><literal type="char" pos:start="18:12" pos:end="18:14">'A'</literal><operator pos:start="18:15" pos:end="18:15">+</operator><name pos:start="18:16" pos:end="18:16">a</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="20:1" pos:end="28:1"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:10">getint</name><parameter_list pos:start="20:11" pos:end="20:23">(<parameter pos:start="20:12" pos:end="20:22"><decl pos:start="20:12" pos:end="20:22"><type pos:start="20:12" pos:end="20:17"><name pos:start="20:12" pos:end="20:17">string</name></type> <name pos:start="20:19" pos:end="20:22">pass</name></decl></parameter>)</parameter_list>
<block pos:start="21:1" pos:end="28:1">{<block_content pos:start="22:5" pos:end="27:13">
    <decl_stmt pos:start="22:5" pos:end="22:12"><decl pos:start="22:5" pos:end="22:11"><type pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></type> <name pos:start="22:9" pos:end="22:9">a</name><init pos:start="22:10" pos:end="22:11">=<expr pos:start="22:11" pos:end="22:11"><literal type="number" pos:start="22:11" pos:end="22:11">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="23:5" pos:end="26:5">for<control pos:start="23:8" pos:end="23:24">(<init pos:start="23:9" pos:end="23:16"><decl pos:start="23:9" pos:end="23:15"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">i</name><init pos:start="23:14" pos:end="23:15">=<expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">1</literal></expr></init></decl>;</init><condition pos:start="23:17" pos:end="23:20"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:17">i</name><operator pos:start="23:18" pos:end="23:18">&lt;</operator><literal type="number" pos:start="23:19" pos:end="23:19">8</literal></expr>;</condition><incr pos:start="23:21" pos:end="23:23"><expr pos:start="23:21" pos:end="23:23"><operator pos:start="23:21" pos:end="23:22">++</operator><name pos:start="23:23" pos:end="23:23">i</name></expr></incr>)</control>
    <block pos:start="24:5" pos:end="26:5">{<block_content pos:start="25:9" pos:end="25:43">
        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:9">a</name><operator pos:start="25:10" pos:end="25:11">+=</operator><operator pos:start="25:12" pos:end="25:12">(</operator><operator pos:start="25:13" pos:end="25:13">(</operator><name pos:start="25:14" pos:end="25:16">int</name><operator pos:start="25:17" pos:end="25:17">)</operator><operator pos:start="25:18" pos:end="25:18">(</operator><name pos:start="25:19" pos:end="25:25"><name pos:start="25:19" pos:end="25:22">pass</name><index pos:start="25:23" pos:end="25:25">[<expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">i</name></expr>]</index></name><operator pos:start="25:26" pos:end="25:26">-</operator><literal type="char" pos:start="25:27" pos:end="25:29">'0'</literal><operator pos:start="25:30" pos:end="25:30">)</operator><operator pos:start="25:31" pos:end="25:31">)</operator><operator pos:start="25:32" pos:end="25:32">*</operator><call pos:start="25:33" pos:end="25:42"><name pos:start="25:33" pos:end="25:35">pow</name><argument_list pos:start="25:36" pos:end="25:42">(<argument pos:start="25:37" pos:end="25:37"><expr pos:start="25:37" pos:end="25:37"><literal type="number" pos:start="25:37" pos:end="25:37">2</literal></expr></argument>,<argument pos:start="25:39" pos:end="25:41"><expr pos:start="25:39" pos:end="25:41"><literal type="number" pos:start="25:39" pos:end="25:40">7</literal><operator pos:start="25:40" pos:end="25:40">-</operator><name pos:start="25:41" pos:end="25:41">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><name pos:start="27:12" pos:end="27:12">a</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="29:1" pos:end="57:1"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:9">fanyi</name><parameter_list pos:start="29:10" pos:end="29:19">(<parameter pos:start="29:11" pos:end="29:18"><decl pos:start="29:11" pos:end="29:18"><type pos:start="29:11" pos:end="29:16"><name pos:start="29:11" pos:end="29:16">string</name></type> <name pos:start="29:18" pos:end="29:18">s</name></decl></parameter>)</parameter_list>
<block pos:start="30:1" pos:end="57:1">{<block_content pos:start="31:5" pos:end="56:13">
    <for pos:start="31:5" pos:end="34:5">for<control pos:start="31:8" pos:end="31:24">(<init pos:start="31:9" pos:end="31:16"><decl pos:start="31:9" pos:end="31:15"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name><init pos:start="31:14" pos:end="31:15">=<expr pos:start="31:15" pos:end="31:15"><literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr></init></decl>;</init><condition pos:start="31:17" pos:end="31:20"><expr pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:17">i</name><operator pos:start="31:18" pos:end="31:18">&lt;</operator><literal type="number" pos:start="31:19" pos:end="31:19">8</literal></expr>;</condition><incr pos:start="31:21" pos:end="31:23"><expr pos:start="31:21" pos:end="31:23"><operator pos:start="31:21" pos:end="31:22">++</operator><name pos:start="31:23" pos:end="31:23">i</name></expr></incr>)</control>
    <block pos:start="32:5" pos:end="34:5">{<block_content pos:start="33:9" pos:end="33:45">
        <if_stmt pos:start="33:9" pos:end="33:45"><if pos:start="33:9" pos:end="33:45">if<condition pos:start="33:11" pos:end="33:32">(<expr pos:start="33:12" pos:end="33:31"><name pos:start="33:12" pos:end="33:15"><name pos:start="33:12" pos:end="33:12">s</name><index pos:start="33:13" pos:end="33:15">[<expr pos:start="33:14" pos:end="33:14"><name pos:start="33:14" pos:end="33:14">i</name></expr>]</index></name><operator pos:start="33:16" pos:end="33:17">!=</operator><literal type="char" pos:start="33:18" pos:end="33:20">'0'</literal><operator pos:start="33:21" pos:end="33:22">&amp;&amp;</operator><name pos:start="33:23" pos:end="33:26"><name pos:start="33:23" pos:end="33:23">s</name><index pos:start="33:24" pos:end="33:26">[<expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">i</name></expr>]</index></name><operator pos:start="33:27" pos:end="33:28">!=</operator><literal type="char" pos:start="33:29" pos:end="33:31">'1'</literal></expr>)</condition><block type="pseudo" pos:start="33:37" pos:end="33:45"><block_content pos:start="33:37" pos:end="33:45">    <return pos:start="33:37" pos:end="33:45">return <expr pos:start="33:44" pos:end="33:44"><literal type="number" pos:start="33:44" pos:end="33:44">1</literal></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="35:5" pos:end="40:5"><if pos:start="35:5" pos:end="40:5">if<condition pos:start="35:7" pos:end="35:17">(<expr pos:start="35:8" pos:end="35:16"><name pos:start="35:8" pos:end="35:11"><name pos:start="35:8" pos:end="35:8">s</name><index pos:start="35:9" pos:end="35:11">[<expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">0</literal></expr>]</index></name><operator pos:start="35:12" pos:end="35:13">==</operator><literal type="char" pos:start="35:14" pos:end="35:16">'0'</literal></expr>)</condition>
    <block pos:start="36:5" pos:end="40:5">{<block_content pos:start="37:9" pos:end="39:17">
        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:11">sum</name><operator pos:start="37:12" pos:end="37:13">+=</operator><call pos:start="37:14" pos:end="37:22"><name pos:start="37:14" pos:end="37:19">getint</name><argument_list pos:start="37:20" pos:end="37:22">(<argument pos:start="37:21" pos:end="37:21"><expr pos:start="37:21" pos:end="37:21"><name pos:start="37:21" pos:end="37:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="38:9" pos:end="38:15"><expr pos:start="38:9" pos:end="38:14"><name pos:start="38:9" pos:end="38:11">sum</name><operator pos:start="38:12" pos:end="38:13">/=</operator><literal type="number" pos:start="38:14" pos:end="38:14">2</literal></expr>;</expr_stmt>
        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">2</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if<condition pos:start="41:7" pos:end="41:39">(<expr pos:start="41:8" pos:end="41:38"><name pos:start="41:8" pos:end="41:11"><name pos:start="41:8" pos:end="41:8">s</name><index pos:start="41:9" pos:end="41:11">[<expr pos:start="41:10" pos:end="41:10"><literal type="number" pos:start="41:10" pos:end="41:10">0</literal></expr>]</index></name><operator pos:start="41:12" pos:end="41:13">==</operator><literal type="char" pos:start="41:14" pos:end="41:16">'1'</literal><operator pos:start="41:17" pos:end="41:18">&amp;&amp;</operator><name pos:start="41:19" pos:end="41:22"><name pos:start="41:19" pos:end="41:19">s</name><index pos:start="41:20" pos:end="41:22">[<expr pos:start="41:21" pos:end="41:21"><literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>]</index></name><operator pos:start="41:23" pos:end="41:24">==</operator><literal type="char" pos:start="41:25" pos:end="41:27">'1'</literal><operator pos:start="41:28" pos:end="41:29">&amp;&amp;</operator><name pos:start="41:30" pos:end="41:33"><name pos:start="41:30" pos:end="41:30">s</name><index pos:start="41:31" pos:end="41:33">[<expr pos:start="41:32" pos:end="41:32"><literal type="number" pos:start="41:32" pos:end="41:32">2</literal></expr>]</index></name><operator pos:start="41:34" pos:end="41:35">==</operator><literal type="char" pos:start="41:36" pos:end="41:38">'1'</literal></expr>)</condition>
    <block pos:start="42:5" pos:end="45:5">{<block_content pos:start="43:9" pos:end="44:17">
        <expr_stmt pos:start="43:9" pos:end="43:15"><expr pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:9">o</name><operator pos:start="43:10" pos:end="43:11">+=</operator><literal type="char" pos:start="43:12" pos:end="43:14">' '</literal></expr>;</expr_stmt>
        <return pos:start="44:9" pos:end="44:17">return <expr pos:start="44:16" pos:end="44:16"><literal type="number" pos:start="44:16" pos:end="44:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="46:5" pos:end="55:5"><if pos:start="46:5" pos:end="55:5">if<condition pos:start="46:7" pos:end="46:39">(<expr pos:start="46:8" pos:end="46:38"><name pos:start="46:8" pos:end="46:11"><name pos:start="46:8" pos:end="46:8">s</name><index pos:start="46:9" pos:end="46:11">[<expr pos:start="46:10" pos:end="46:10"><literal type="number" pos:start="46:10" pos:end="46:10">0</literal></expr>]</index></name><operator pos:start="46:12" pos:end="46:13">==</operator><literal type="char" pos:start="46:14" pos:end="46:16">'1'</literal><operator pos:start="46:17" pos:end="46:18">&amp;&amp;</operator><name pos:start="46:19" pos:end="46:22"><name pos:start="46:19" pos:end="46:19">s</name><index pos:start="46:20" pos:end="46:22">[<expr pos:start="46:21" pos:end="46:21"><literal type="number" pos:start="46:21" pos:end="46:21">1</literal></expr>]</index></name><operator pos:start="46:23" pos:end="46:24">==</operator><literal type="char" pos:start="46:25" pos:end="46:27">'0'</literal><operator pos:start="46:28" pos:end="46:29">&amp;&amp;</operator><name pos:start="46:30" pos:end="46:33"><name pos:start="46:30" pos:end="46:30">s</name><index pos:start="46:31" pos:end="46:33">[<expr pos:start="46:32" pos:end="46:32"><literal type="number" pos:start="46:32" pos:end="46:32">2</literal></expr>]</index></name><operator pos:start="46:34" pos:end="46:35">==</operator><literal type="char" pos:start="46:36" pos:end="46:38">'1'</literal></expr>)</condition>
    <block pos:start="47:5" pos:end="55:5">{<block_content pos:start="48:9" pos:end="54:17">
        <decl_stmt pos:start="48:9" pos:end="48:28"><decl pos:start="48:9" pos:end="48:27"><type pos:start="48:9" pos:end="48:12"><name pos:start="48:9" pos:end="48:12">char</name></type> <name pos:start="48:14" pos:end="48:16">cha</name><init pos:start="48:17" pos:end="48:27">=<expr pos:start="48:18" pos:end="48:27"><call pos:start="48:18" pos:end="48:27"><name pos:start="48:18" pos:end="48:24">getchar</name><argument_list pos:start="48:25" pos:end="48:27">(<argument pos:start="48:26" pos:end="48:26"><expr pos:start="48:26" pos:end="48:26"><name pos:start="48:26" pos:end="48:26">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="49:9" pos:end="52:9"><if pos:start="49:9" pos:end="52:9">if<condition pos:start="49:11" pos:end="49:20">(<expr pos:start="49:12" pos:end="49:19"><name pos:start="49:12" pos:end="49:14">cha</name><operator pos:start="49:15" pos:end="49:16">==</operator><literal type="char" pos:start="49:17" pos:end="49:19">'e'</literal></expr>)</condition>
        <block pos:start="50:9" pos:end="52:9">{<block_content pos:start="51:13" pos:end="51:21">
            <return pos:start="51:13" pos:end="51:21">return <expr pos:start="51:20" pos:end="51:20"><literal type="number" pos:start="51:20" pos:end="51:20">1</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="53:9" pos:end="53:15"><expr pos:start="53:9" pos:end="53:14"><name pos:start="53:9" pos:end="53:9">o</name><operator pos:start="53:10" pos:end="53:11">+=</operator><name pos:start="53:12" pos:end="53:14">cha</name></expr>;</expr_stmt>
        <return pos:start="54:9" pos:end="54:17">return <expr pos:start="54:16" pos:end="54:16"><literal type="number" pos:start="54:16" pos:end="54:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="56:5" pos:end="56:13">return <expr pos:start="56:12" pos:end="56:12"><literal type="number" pos:start="56:12" pos:end="56:12">1</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="58:1" pos:end="109:1"><type pos:start="58:1" pos:end="58:3"><name pos:start="58:1" pos:end="58:3">int</name></type> <name pos:start="58:5" pos:end="58:8">main</name><parameter_list pos:start="58:9" pos:end="58:10">()</parameter_list>
<block pos:start="59:1" pos:end="109:1">{<block_content pos:start="60:5" pos:end="108:5">
    <expr_stmt pos:start="60:5" pos:end="60:40"><expr pos:start="60:5" pos:end="60:39"><call pos:start="60:5" pos:end="60:39"><name pos:start="60:5" pos:end="60:11">freopen</name><argument_list pos:start="60:12" pos:end="60:39">(<argument pos:start="60:13" pos:end="60:28"><expr pos:start="60:13" pos:end="60:28"><literal type="string" pos:start="60:13" pos:end="60:28">"information.in"</literal></expr></argument>,<argument pos:start="60:30" pos:end="60:32"><expr pos:start="60:30" pos:end="60:32"><literal type="string" pos:start="60:30" pos:end="60:32">"r"</literal></expr></argument>,<argument pos:start="60:34" pos:end="60:38"><expr pos:start="60:34" pos:end="60:38"><name pos:start="60:34" pos:end="60:38">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="61:5" pos:end="61:42"><expr pos:start="61:5" pos:end="61:41"><call pos:start="61:5" pos:end="61:41"><name pos:start="61:5" pos:end="61:11">freopen</name><argument_list pos:start="61:12" pos:end="61:41">(<argument pos:start="61:13" pos:end="61:29"><expr pos:start="61:13" pos:end="61:29"><literal type="string" pos:start="61:13" pos:end="61:29">"information.out"</literal></expr></argument>,<argument pos:start="61:31" pos:end="61:33"><expr pos:start="61:31" pos:end="61:33"><literal type="string" pos:start="61:31" pos:end="61:33">"w"</literal></expr></argument>,<argument pos:start="61:35" pos:end="61:40"><expr pos:start="61:35" pos:end="61:40"><name pos:start="61:35" pos:end="61:40">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="62:5" pos:end="62:13"><decl pos:start="62:5" pos:end="62:12"><type pos:start="62:5" pos:end="62:10"><name pos:start="62:5" pos:end="62:10">string</name></type> <name pos:start="62:12" pos:end="62:12">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="63:5" pos:end="63:11"><expr pos:start="63:5" pos:end="63:10"><name pos:start="63:5" pos:end="63:7">cin</name><operator pos:start="63:8" pos:end="63:9">&gt;&gt;</operator><name pos:start="63:10" pos:end="63:10">s</name></expr>;</expr_stmt>
    <if_stmt pos:start="64:5" pos:end="68:5"><if pos:start="64:5" pos:end="68:5">if<condition pos:start="64:7" pos:end="64:21">(<expr pos:start="64:8" pos:end="64:20"><call pos:start="64:8" pos:end="64:15"><name pos:start="64:8" pos:end="64:13"><name pos:start="64:8" pos:end="64:8">s</name><operator pos:start="64:9" pos:end="64:9">.</operator><name pos:start="64:10" pos:end="64:13">size</name></name><argument_list pos:start="64:14" pos:end="64:15">()</argument_list></call><operator pos:start="64:16" pos:end="64:16">%</operator><literal type="number" pos:start="64:17" pos:end="64:17">8</literal><operator pos:start="64:18" pos:end="64:19">!=</operator><literal type="number" pos:start="64:20" pos:end="64:20">0</literal></expr>)</condition>
    <block pos:start="65:5" pos:end="68:5">{<block_content pos:start="66:9" pos:end="67:17">
        <expr_stmt pos:start="66:9" pos:end="66:22"><expr pos:start="66:9" pos:end="66:21"><name pos:start="66:9" pos:end="66:12">cout</name><operator pos:start="66:13" pos:end="66:14">&lt;&lt;</operator><literal type="string" pos:start="66:15" pos:end="66:21">"Error"</literal></expr>;</expr_stmt>
        <return pos:start="67:9" pos:end="67:17">return <expr pos:start="67:16" pos:end="67:16"><literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="69:5" pos:end="85:5">for<control pos:start="69:8" pos:end="69:32">(<init pos:start="69:9" pos:end="69:16"><decl pos:start="69:9" pos:end="69:15"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:13">i</name><init pos:start="69:14" pos:end="69:15">=<expr pos:start="69:15" pos:end="69:15"><literal type="number" pos:start="69:15" pos:end="69:15">0</literal></expr></init></decl>;</init><condition pos:start="69:17" pos:end="69:27"><expr pos:start="69:17" pos:end="69:26"><name pos:start="69:17" pos:end="69:17">i</name><operator pos:start="69:18" pos:end="69:18">&lt;</operator><call pos:start="69:19" pos:end="69:26"><name pos:start="69:19" pos:end="69:24"><name pos:start="69:19" pos:end="69:19">s</name><operator pos:start="69:20" pos:end="69:20">.</operator><name pos:start="69:21" pos:end="69:24">size</name></name><argument_list pos:start="69:25" pos:end="69:26">()</argument_list></call></expr>;</condition><incr pos:start="69:28" pos:end="69:31"><expr pos:start="69:28" pos:end="69:31"><name pos:start="69:28" pos:end="69:28">i</name><operator pos:start="69:29" pos:end="69:30">+=</operator><literal type="number" pos:start="69:31" pos:end="69:31">8</literal></expr></incr>)</control>
    <block pos:start="70:5" pos:end="85:5">{<block_content pos:start="71:9" pos:end="84:9">
        <decl_stmt pos:start="71:9" pos:end="71:22"><decl pos:start="71:9" pos:end="71:21"><type pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:14">string</name></type> <name pos:start="71:16" pos:end="71:18">str</name><init pos:start="71:19" pos:end="71:21">=<expr pos:start="71:20" pos:end="71:21"><literal type="string" pos:start="71:20" pos:end="71:21">""</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="72:9" pos:end="75:9">for<control pos:start="72:12" pos:end="72:28">(<init pos:start="72:13" pos:end="72:20"><decl pos:start="72:13" pos:end="72:19"><type pos:start="72:13" pos:end="72:15"><name pos:start="72:13" pos:end="72:15">int</name></type> <name pos:start="72:17" pos:end="72:17">j</name><init pos:start="72:18" pos:end="72:19">=<expr pos:start="72:19" pos:end="72:19"><literal type="number" pos:start="72:19" pos:end="72:19">0</literal></expr></init></decl>;</init><condition pos:start="72:21" pos:end="72:24"><expr pos:start="72:21" pos:end="72:23"><name pos:start="72:21" pos:end="72:21">j</name><operator pos:start="72:22" pos:end="72:22">&lt;</operator><literal type="number" pos:start="72:23" pos:end="72:23">8</literal></expr>;</condition><incr pos:start="72:25" pos:end="72:27"><expr pos:start="72:25" pos:end="72:27"><operator pos:start="72:25" pos:end="72:26">++</operator><name pos:start="72:27" pos:end="72:27">j</name></expr></incr>)</control>
        <block pos:start="73:9" pos:end="75:9">{<block_content pos:start="74:13" pos:end="74:34">
            <expr_stmt pos:start="74:13" pos:end="74:34"><expr pos:start="74:13" pos:end="74:33"><call pos:start="74:13" pos:end="74:33"><name pos:start="74:13" pos:end="74:25"><name pos:start="74:13" pos:end="74:15">str</name><operator pos:start="74:16" pos:end="74:16">.</operator><name pos:start="74:17" pos:end="74:25">push_back</name></name><argument_list pos:start="74:26" pos:end="74:33">(<argument pos:start="74:27" pos:end="74:32"><expr pos:start="74:27" pos:end="74:32"><name pos:start="74:27" pos:end="74:32"><name pos:start="74:27" pos:end="74:27">s</name><index pos:start="74:28" pos:end="74:32">[<expr pos:start="74:29" pos:end="74:31"><name pos:start="74:29" pos:end="74:29">i</name><operator pos:start="74:30" pos:end="74:30">+</operator><name pos:start="74:31" pos:end="74:31">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="76:9" pos:end="76:28"><decl pos:start="76:9" pos:end="76:27"><type pos:start="76:9" pos:end="76:11"><name pos:start="76:9" pos:end="76:11">int</name></type> <name pos:start="76:13" pos:end="76:16">retu</name><init pos:start="76:17" pos:end="76:27">=<expr pos:start="76:18" pos:end="76:27"><call pos:start="76:18" pos:end="76:27"><name pos:start="76:18" pos:end="76:22">fanyi</name><argument_list pos:start="76:23" pos:end="76:27">(<argument pos:start="76:24" pos:end="76:26"><expr pos:start="76:24" pos:end="76:26"><name pos:start="76:24" pos:end="76:26">str</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="77:9" pos:end="84:9"><if pos:start="77:9" pos:end="81:9">if<condition pos:start="77:11" pos:end="77:19">(<expr pos:start="77:12" pos:end="77:18"><name pos:start="77:12" pos:end="77:15">retu</name><operator pos:start="77:16" pos:end="77:17">==</operator><literal type="number" pos:start="77:18" pos:end="77:18">1</literal></expr>)</condition>
        <block pos:start="78:9" pos:end="81:9">{<block_content pos:start="79:13" pos:end="80:21">
            <expr_stmt pos:start="79:13" pos:end="79:26"><expr pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:16">cout</name><operator pos:start="79:17" pos:end="79:18">&lt;&lt;</operator><literal type="string" pos:start="79:19" pos:end="79:25">"Error"</literal></expr>;</expr_stmt>
            <return pos:start="80:13" pos:end="80:21">return <expr pos:start="80:20" pos:end="80:20"><literal type="number" pos:start="80:20" pos:end="80:20">0</literal></expr>;</return>
        </block_content>}</block></if><else pos:start="81:10" pos:end="84:9">else
        <block pos:start="82:9" pos:end="84:9">{<block_content pos:start="83:13" pos:end="83:32">
            <expr_stmt pos:start="83:13" pos:end="83:32"><expr pos:start="83:13" pos:end="83:31"><call pos:start="83:13" pos:end="83:31"><name pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:15">ret</name><operator pos:start="83:16" pos:end="83:16">.</operator><name pos:start="83:17" pos:end="83:25">push_back</name></name><argument_list pos:start="83:26" pos:end="83:31">(<argument pos:start="83:27" pos:end="83:30"><expr pos:start="83:27" pos:end="83:30"><name pos:start="83:27" pos:end="83:30">retu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="86:5" pos:end="86:18"><decl pos:start="86:5" pos:end="86:17"><type pos:start="86:5" pos:end="86:7"><name pos:start="86:5" pos:end="86:7">int</name></type> <name pos:start="86:9" pos:end="86:15">num_cnt</name><init pos:start="86:16" pos:end="86:17">=<expr pos:start="86:17" pos:end="86:17"><literal type="number" pos:start="86:17" pos:end="86:17">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="87:5" pos:end="98:5">for<control pos:start="87:8" pos:end="87:36">(<init pos:start="87:9" pos:end="87:16"><decl pos:start="87:9" pos:end="87:15"><type pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:11">int</name></type> <name pos:start="87:13" pos:end="87:13">i</name><init pos:start="87:14" pos:end="87:15">=<expr pos:start="87:15" pos:end="87:15"><literal type="number" pos:start="87:15" pos:end="87:15">0</literal></expr></init></decl>;</init><condition pos:start="87:17" pos:end="87:32"><expr pos:start="87:17" pos:end="87:31"><name pos:start="87:17" pos:end="87:17">i</name><operator pos:start="87:18" pos:end="87:19">&lt;=</operator><call pos:start="87:20" pos:end="87:29"><name pos:start="87:20" pos:end="87:27"><name pos:start="87:20" pos:end="87:22">ret</name><operator pos:start="87:23" pos:end="87:23">.</operator><name pos:start="87:24" pos:end="87:27">size</name></name><argument_list pos:start="87:28" pos:end="87:29">()</argument_list></call><operator pos:start="87:30" pos:end="87:30">-</operator><literal type="number" pos:start="87:31" pos:end="87:31">1</literal></expr>;</condition><incr pos:start="87:33" pos:end="87:35"><expr pos:start="87:33" pos:end="87:35"><operator pos:start="87:33" pos:end="87:34">++</operator><name pos:start="87:35" pos:end="87:35">i</name></expr></incr>)</control>
    <block pos:start="88:5" pos:end="98:5">{<block_content pos:start="89:9" pos:end="97:9">
        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if<condition pos:start="89:11" pos:end="89:47">(<expr pos:start="89:12" pos:end="89:46"><name pos:start="89:12" pos:end="89:17"><name pos:start="89:12" pos:end="89:14">ret</name><index pos:start="89:15" pos:end="89:17">[<expr pos:start="89:16" pos:end="89:16"><name pos:start="89:16" pos:end="89:16">i</name></expr>]</index></name><operator pos:start="89:18" pos:end="89:19">==</operator><literal type="number" pos:start="89:20" pos:end="89:20">2</literal><operator pos:start="89:21" pos:end="89:22">&amp;&amp;</operator><name pos:start="89:23" pos:end="89:30"><name pos:start="89:23" pos:end="89:25">ret</name><index pos:start="89:26" pos:end="89:30">[<expr pos:start="89:27" pos:end="89:29"><name pos:start="89:27" pos:end="89:27">i</name><operator pos:start="89:28" pos:end="89:28">-</operator><literal type="number" pos:start="89:29" pos:end="89:29">1</literal></expr>]</index></name><operator pos:start="89:31" pos:end="89:32">!=</operator><literal type="number" pos:start="89:33" pos:end="89:33">2</literal><operator pos:start="89:34" pos:end="89:35">&amp;&amp;</operator><name pos:start="89:36" pos:end="89:43"><name pos:start="89:36" pos:end="89:38">ret</name><index pos:start="89:39" pos:end="89:43">[<expr pos:start="89:40" pos:end="89:42"><name pos:start="89:40" pos:end="89:40">i</name><operator pos:start="89:41" pos:end="89:41">+</operator><literal type="number" pos:start="89:42" pos:end="89:42">1</literal></expr>]</index></name><operator pos:start="89:44" pos:end="89:45">!=</operator><literal type="number" pos:start="89:46" pos:end="89:46">2</literal></expr>)</condition>
        <block pos:start="90:9" pos:end="93:9">{<block_content pos:start="91:13" pos:end="92:21">
            <expr_stmt pos:start="91:13" pos:end="91:26"><expr pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:16">cout</name><operator pos:start="91:17" pos:end="91:18">&lt;&lt;</operator><literal type="string" pos:start="91:19" pos:end="91:25">"Error"</literal></expr>;</expr_stmt>
            <return pos:start="92:13" pos:end="92:21">return <expr pos:start="92:20" pos:end="92:20"><literal type="number" pos:start="92:20" pos:end="92:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="94:9" pos:end="97:9"><if pos:start="94:9" pos:end="97:9">if<condition pos:start="94:11" pos:end="94:21">(<expr pos:start="94:12" pos:end="94:20"><name pos:start="94:12" pos:end="94:17"><name pos:start="94:12" pos:end="94:14">ret</name><index pos:start="94:15" pos:end="94:17">[<expr pos:start="94:16" pos:end="94:16"><name pos:start="94:16" pos:end="94:16">i</name></expr>]</index></name><operator pos:start="94:18" pos:end="94:19">==</operator><literal type="number" pos:start="94:20" pos:end="94:20">2</literal></expr>)</condition>
        <block pos:start="95:9" pos:end="97:9">{<block_content pos:start="96:13" pos:end="96:22">
            <expr_stmt pos:start="96:13" pos:end="96:22"><expr pos:start="96:13" pos:end="96:21"><operator pos:start="96:13" pos:end="96:14">++</operator><name pos:start="96:15" pos:end="96:21">num_cnt</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="99:5" pos:end="103:5"><if pos:start="99:5" pos:end="103:5">if<condition pos:start="99:7" pos:end="99:20">(<expr pos:start="99:8" pos:end="99:19"><name pos:start="99:8" pos:end="99:14">num_cnt</name><operator pos:start="99:15" pos:end="99:15">%</operator><literal type="number" pos:start="99:16" pos:end="99:16">2</literal><operator pos:start="99:17" pos:end="99:18">==</operator><literal type="number" pos:start="99:19" pos:end="99:19">1</literal></expr>)</condition>
    <block pos:start="100:5" pos:end="103:5">{<block_content pos:start="101:9" pos:end="102:17">
        <expr_stmt pos:start="101:9" pos:end="101:22"><expr pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:12">cout</name><operator pos:start="101:13" pos:end="101:14">&lt;&lt;</operator><literal type="string" pos:start="101:15" pos:end="101:21">"Error"</literal></expr>;</expr_stmt>
        <return pos:start="102:9" pos:end="102:17">return <expr pos:start="102:16" pos:end="102:16"><literal type="number" pos:start="102:16" pos:end="102:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="104:5" pos:end="104:12"><expr pos:start="104:5" pos:end="104:11"><name pos:start="104:5" pos:end="104:8">cout</name><operator pos:start="104:9" pos:end="104:10">&lt;&lt;</operator><name pos:start="104:11" pos:end="104:11">o</name></expr>;</expr_stmt>
    <if_stmt pos:start="105:5" pos:end="108:5"><if pos:start="105:5" pos:end="108:5">if<condition pos:start="105:7" pos:end="105:14">(<expr pos:start="105:8" pos:end="105:13"><name pos:start="105:8" pos:end="105:10">sum</name><operator pos:start="105:11" pos:end="105:12">!=</operator><literal type="number" pos:start="105:13" pos:end="105:13">0</literal></expr>)</condition>
    <block pos:start="106:5" pos:end="108:5">{<block_content pos:start="107:9" pos:end="107:18">
        <expr_stmt pos:start="107:9" pos:end="107:18"><expr pos:start="107:9" pos:end="107:17"><name pos:start="107:9" pos:end="107:12">cout</name><operator pos:start="107:13" pos:end="107:14">&lt;&lt;</operator><name pos:start="107:15" pos:end="107:17">sum</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
</unit>
