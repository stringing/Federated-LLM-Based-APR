<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/564/564.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:20">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:16">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:16">&lt;queue&gt;</cpp:file></cpp:include>

<using pos:start="6:1" pos:end="6:20">using <namespace pos:start="6:7" pos:end="6:20">namespace <name pos:start="6:17" pos:end="6:19">std</name>;</namespace></using>

<function pos:start="8:1" pos:end="10:1"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">bool</name></type> <name pos:start="8:6" pos:end="8:8">cmp</name><parameter_list pos:start="8:9" pos:end="8:42">(<parameter pos:start="8:10" pos:end="8:24"><decl pos:start="8:10" pos:end="8:24"><type pos:start="8:10" pos:end="8:24"><name pos:start="8:10" pos:end="8:22"><name pos:start="8:10" pos:end="8:14">queue</name><argument_list type="generic" pos:start="8:15" pos:end="8:22">&lt;<argument pos:start="8:16" pos:end="8:21"><expr pos:start="8:16" pos:end="8:21"><name pos:start="8:16" pos:end="8:21">string</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="8:24" pos:end="8:24">a</name></decl></parameter>, <parameter pos:start="8:27" pos:end="8:41"><decl pos:start="8:27" pos:end="8:41"><type pos:start="8:27" pos:end="8:41"><name pos:start="8:27" pos:end="8:39"><name pos:start="8:27" pos:end="8:31">queue</name><argument_list type="generic" pos:start="8:32" pos:end="8:39">&lt;<argument pos:start="8:33" pos:end="8:38"><expr pos:start="8:33" pos:end="8:38"><name pos:start="8:33" pos:end="8:38">string</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="8:41" pos:end="8:41">b</name></decl></parameter>)</parameter_list> <block pos:start="8:44" pos:end="10:1">{<block_content pos:start="9:5" pos:end="9:17">
    <return pos:start="9:5" pos:end="9:17">return <expr pos:start="9:12" pos:end="9:16"><name pos:start="9:12" pos:end="9:12">a</name> <operator pos:start="9:14" pos:end="9:14">&lt;</operator> <name pos:start="9:16" pos:end="9:16">b</name></expr>;</return>
</block_content>}</block></function>

<function pos:start="12:1" pos:end="32:1"><type pos:start="12:1" pos:end="12:3"><name pos:start="12:1" pos:end="12:3">int</name></type> <name pos:start="12:5" pos:end="12:8">main</name><parameter_list pos:start="12:9" pos:end="12:10">()</parameter_list>
<block pos:start="13:1" pos:end="32:1">{<block_content pos:start="14:5" pos:end="31:13">
    <decl_stmt pos:start="14:5" pos:end="14:10"><decl pos:start="14:5" pos:end="14:9"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:13"><expr pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:7">cin</name> <operator pos:start="15:9" pos:end="15:10">&gt;&gt;</operator> <name pos:start="15:12" pos:end="15:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="16:5" pos:end="16:20"><decl pos:start="16:5" pos:end="16:19"><type pos:start="16:5" pos:end="16:17"><name pos:start="16:5" pos:end="16:17"><name pos:start="16:5" pos:end="16:9">queue</name><argument_list type="generic" pos:start="16:10" pos:end="16:17">&lt;<argument pos:start="16:11" pos:end="16:16"><expr pos:start="16:11" pos:end="16:16"><name pos:start="16:11" pos:end="16:16">string</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="16:19" pos:end="16:19">q</name></decl>;</decl_stmt>
    <for pos:start="17:5" pos:end="30:5">for <control pos:start="17:9" pos:end="17:32">(<init pos:start="17:10" pos:end="17:19"><decl pos:start="17:10" pos:end="17:18"><type pos:start="17:10" pos:end="17:12"><name pos:start="17:10" pos:end="17:12">int</name></type> <name pos:start="17:14" pos:end="17:14">i</name> <init pos:start="17:16" pos:end="17:18">= <expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">1</literal></expr></init></decl>;</init> <condition pos:start="17:21" pos:end="17:27"><expr pos:start="17:21" pos:end="17:26"><name pos:start="17:21" pos:end="17:21">i</name> <operator pos:start="17:23" pos:end="17:24">&lt;=</operator> <name pos:start="17:26" pos:end="17:26">n</name></expr>;</condition> <incr pos:start="17:29" pos:end="17:31"><expr pos:start="17:29" pos:end="17:31"><name pos:start="17:29" pos:end="17:29">i</name><operator pos:start="17:30" pos:end="17:31">++</operator></expr></incr>)</control> <block pos:start="17:34" pos:end="30:5">{<block_content pos:start="18:9" pos:end="29:9">
        <decl_stmt pos:start="18:9" pos:end="18:15"><decl pos:start="18:9" pos:end="18:14"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:14">op</name></decl>;</decl_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:18"><expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:11">cin</name> <operator pos:start="19:13" pos:end="19:14">&gt;&gt;</operator> <name pos:start="19:16" pos:end="19:17">op</name></expr>;</expr_stmt>
        <if_stmt pos:start="20:9" pos:end="24:9"><if pos:start="20:9" pos:end="24:9">if<condition pos:start="20:11" pos:end="20:19">(<expr pos:start="20:12" pos:end="20:18"><name pos:start="20:12" pos:end="20:13">op</name> <operator pos:start="20:15" pos:end="20:16">==</operator> <literal type="number" pos:start="20:18" pos:end="20:18">1</literal></expr>)</condition> <block pos:start="20:21" pos:end="24:9">{<block_content pos:start="21:13" pos:end="23:22">
            <decl_stmt pos:start="21:13" pos:end="21:21"><decl pos:start="21:13" pos:end="21:20"><type pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:18">string</name></type> <name pos:start="21:20" pos:end="21:20">s</name></decl>;</decl_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:21"><expr pos:start="22:13" pos:end="22:20"><name pos:start="22:13" pos:end="22:15">cin</name> <operator pos:start="22:17" pos:end="22:18">&gt;&gt;</operator> <name pos:start="22:20" pos:end="22:20">s</name></expr>;</expr_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:22"><expr pos:start="23:13" pos:end="23:21"><call pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:13">q</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:18">push</name></name><argument_list pos:start="23:19" pos:end="23:21">(<argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if<condition pos:start="25:11" pos:end="25:19">(<expr pos:start="25:12" pos:end="25:18"><name pos:start="25:12" pos:end="25:13">op</name> <operator pos:start="25:15" pos:end="25:16">==</operator> <literal type="number" pos:start="25:18" pos:end="25:18">2</literal></expr>)</condition> <block pos:start="25:21" pos:end="29:9">{<block_content pos:start="26:13" pos:end="28:20">
            <expr_stmt pos:start="26:13" pos:end="26:39"><expr pos:start="26:13" pos:end="26:38"><call pos:start="26:13" pos:end="26:38"><name pos:start="26:13" pos:end="26:16">sort</name><argument_list pos:start="26:17" pos:end="26:38">(<argument pos:start="26:18" pos:end="26:18"><expr pos:start="26:18" pos:end="26:18"><name pos:start="26:18" pos:end="26:18">q</name></expr></argument>, <argument pos:start="26:21" pos:end="26:32"><expr pos:start="26:21" pos:end="26:32"><name pos:start="26:21" pos:end="26:21">q</name> <operator pos:start="26:23" pos:end="26:23">+</operator> <call pos:start="26:25" pos:end="26:32"><name pos:start="26:25" pos:end="26:30"><name pos:start="26:25" pos:end="26:25">q</name><operator pos:start="26:26" pos:end="26:26">.</operator><name pos:start="26:27" pos:end="26:30">size</name></name><argument_list pos:start="26:31" pos:end="26:32">()</argument_list></call></expr></argument>, <argument pos:start="26:35" pos:end="26:37"><expr pos:start="26:35" pos:end="26:37"><name pos:start="26:35" pos:end="26:37">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="27:13" pos:end="27:38"><expr pos:start="27:13" pos:end="27:37"><name pos:start="27:13" pos:end="27:16">cout</name> <operator pos:start="27:18" pos:end="27:19">&lt;&lt;</operator> <call pos:start="27:21" pos:end="27:29"><name pos:start="27:21" pos:end="27:27"><name pos:start="27:21" pos:end="27:21">q</name><operator pos:start="27:22" pos:end="27:22">.</operator><name pos:start="27:23" pos:end="27:27">front</name></name><argument_list pos:start="27:28" pos:end="27:29">()</argument_list></call> <operator pos:start="27:31" pos:end="27:32">&lt;&lt;</operator> <name pos:start="27:34" pos:end="27:37">endl</name></expr>;</expr_stmt>
            <expr_stmt pos:start="28:13" pos:end="28:20"><expr pos:start="28:13" pos:end="28:19"><call pos:start="28:13" pos:end="28:19"><name pos:start="28:13" pos:end="28:17"><name pos:start="28:13" pos:end="28:13">q</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:17">pop</name></name><argument_list pos:start="28:18" pos:end="28:19">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
