<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/963/963.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:18">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:18">&lt;cstring&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<function pos:start="5:1" pos:end="29:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list> <block pos:start="5:12" pos:end="29:1">{<block_content pos:start="6:5" pos:end="28:13">
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:12">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:19"><expr pos:start="7:5" pos:end="7:18"><call pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:11">getline</name><argument_list pos:start="7:12" pos:end="7:18">(<argument pos:start="7:13" pos:end="7:15"><expr pos:start="7:13" pos:end="7:15"><name pos:start="7:13" pos:end="7:15">cin</name></expr></argument>,<argument pos:start="7:17" pos:end="7:17"><expr pos:start="7:17" pos:end="7:17"><name pos:start="7:17" pos:end="7:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:16"><decl pos:start="8:5" pos:end="8:15"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:11">max</name> <init pos:start="8:13" pos:end="8:15">= <expr pos:start="8:15" pos:end="8:15"><literal type="number" pos:start="8:15" pos:end="8:15">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">sum</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:13"><decl pos:start="10:5" pos:end="10:12"><type pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:10">string</name></type> <name pos:start="10:12" pos:end="10:12">a</name></decl>;</decl_stmt>
    <for pos:start="11:5" pos:end="26:5">for <control pos:start="11:9" pos:end="11:38">(<init pos:start="11:10" pos:end="11:19"><decl pos:start="11:10" pos:end="11:18"><type pos:start="11:10" pos:end="11:12"><name pos:start="11:10" pos:end="11:12">int</name></type> <name pos:start="11:14" pos:end="11:14">i</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</init> <condition pos:start="11:21" pos:end="11:33"><expr pos:start="11:21" pos:end="11:32"><name pos:start="11:21" pos:end="11:21">i</name> <operator pos:start="11:23" pos:end="11:23">&lt;</operator> <call pos:start="11:25" pos:end="11:32"><name pos:start="11:25" pos:end="11:30"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:26">.</operator><name pos:start="11:27" pos:end="11:30">size</name></name><argument_list pos:start="11:31" pos:end="11:32">()</argument_list></call></expr>;</condition> <incr pos:start="11:35" pos:end="11:37"><expr pos:start="11:35" pos:end="11:37"><name pos:start="11:35" pos:end="11:35">i</name><operator pos:start="11:36" pos:end="11:37">++</operator></expr></incr>)</control> <block pos:start="11:40" pos:end="26:5">{<block_content pos:start="12:9" pos:end="25:9">
        <if_stmt pos:start="12:9" pos:end="25:9"><if pos:start="12:9" pos:end="23:9">if <condition pos:start="12:12" pos:end="12:24">(<expr pos:start="12:13" pos:end="12:23"><name pos:start="12:13" pos:end="12:16"><name pos:start="12:13" pos:end="12:13">s</name><index pos:start="12:14" pos:end="12:16">[<expr pos:start="12:15" pos:end="12:15"><name pos:start="12:15" pos:end="12:15">i</name></expr>]</index></name> <operator pos:start="12:18" pos:end="12:19">==</operator> <literal type="char" pos:start="12:21" pos:end="12:23">' '</literal></expr>)</condition> <block pos:start="12:26" pos:end="23:9">{<block_content pos:start="13:13" pos:end="22:20">
            <if_stmt pos:start="13:13" pos:end="21:13"><if pos:start="13:13" pos:end="21:13">if <condition pos:start="13:16" pos:end="13:26">(<expr pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:19">sum</name> <operator pos:start="13:21" pos:end="13:21">&gt;</operator> <name pos:start="13:23" pos:end="13:25">max</name></expr>)</condition> <block pos:start="13:28" pos:end="21:13">{<block_content pos:start="14:17" pos:end="20:17">
                <expr_stmt pos:start="14:17" pos:end="14:26"><expr pos:start="14:17" pos:end="14:25"><name pos:start="14:17" pos:end="14:19">max</name> <operator pos:start="14:21" pos:end="14:21">=</operator> <name pos:start="14:23" pos:end="14:25">sum</name></expr>;</expr_stmt>
                <expr_stmt pos:start="15:17" pos:end="15:25"><expr pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:20">-=</operator> <name pos:start="15:22" pos:end="15:24">sum</name></expr>;</expr_stmt>
                <expr_stmt pos:start="16:17" pos:end="16:43"><expr pos:start="16:17" pos:end="16:42"><call pos:start="16:17" pos:end="16:42"><name pos:start="16:17" pos:end="16:25"><name pos:start="16:17" pos:end="16:17">a</name><operator pos:start="16:18" pos:end="16:18">.</operator><name pos:start="16:19" pos:end="16:25">replace</name></name><argument_list pos:start="16:26" pos:end="16:42">(<argument pos:start="16:27" pos:end="16:27"><expr pos:start="16:27" pos:end="16:27"><literal type="number" pos:start="16:27" pos:end="16:27">0</literal></expr></argument>, <argument pos:start="16:30" pos:end="16:37"><expr pos:start="16:30" pos:end="16:37"><call pos:start="16:30" pos:end="16:37"><name pos:start="16:30" pos:end="16:35"><name pos:start="16:30" pos:end="16:30">a</name><operator pos:start="16:31" pos:end="16:31">.</operator><name pos:start="16:32" pos:end="16:35">size</name></name><argument_list pos:start="16:36" pos:end="16:37">()</argument_list></call></expr></argument>, <argument pos:start="16:40" pos:end="16:41"><expr pos:start="16:40" pos:end="16:41"><literal type="string" pos:start="16:40" pos:end="16:41">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <while pos:start="17:17" pos:end="20:17">while <condition pos:start="17:23" pos:end="17:29">(<expr pos:start="17:24" pos:end="17:28"><name pos:start="17:24" pos:end="17:26">sum</name><operator pos:start="17:27" pos:end="17:28">--</operator></expr>)</condition> <block pos:start="17:31" pos:end="20:17">{<block_content pos:start="18:21" pos:end="19:24">
                    <expr_stmt pos:start="18:21" pos:end="18:30"><expr pos:start="18:21" pos:end="18:29"><name pos:start="18:21" pos:end="18:21">a</name> <operator pos:start="18:23" pos:end="18:24">+=</operator> <name pos:start="18:26" pos:end="18:29"><name pos:start="18:26" pos:end="18:26">s</name><index pos:start="18:27" pos:end="18:29">[<expr pos:start="18:28" pos:end="18:28"><name pos:start="18:28" pos:end="18:28">i</name></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="19:21" pos:end="19:24"><expr pos:start="19:21" pos:end="19:23"><name pos:start="19:21" pos:end="19:21">i</name><operator pos:start="19:22" pos:end="19:23">++</operator></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:20"><expr pos:start="22:13" pos:end="22:19"><name pos:start="22:13" pos:end="22:15">sum</name> <operator pos:start="22:17" pos:end="22:17">=</operator> <literal type="number" pos:start="22:19" pos:end="22:19">0</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="23:11" pos:end="25:9">else <block pos:start="23:16" pos:end="25:9">{<block_content pos:start="24:13" pos:end="24:19">
            <expr_stmt pos:start="24:13" pos:end="24:19"><expr pos:start="24:13" pos:end="24:18"><name pos:start="24:13" pos:end="24:15">sum</name> <operator pos:start="24:17" pos:end="24:18">++</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:8">cout</name> <operator pos:start="27:10" pos:end="27:11">&lt;&lt;</operator> <name pos:start="27:13" pos:end="27:13">a</name> <operator pos:start="27:15" pos:end="27:16">&lt;&lt;</operator> <name pos:start="27:18" pos:end="27:21">endl</name></expr>;</expr_stmt>
    <return pos:start="28:5" pos:end="28:13">return <expr pos:start="28:12" pos:end="28:12"><literal type="number" pos:start="28:12" pos:end="28:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
