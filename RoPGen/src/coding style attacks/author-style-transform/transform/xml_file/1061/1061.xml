<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1061/1061.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:9"><decl pos:start="3:1" pos:end="3:8"><type pos:start="3:1" pos:end="3:6"><name pos:start="3:1" pos:end="3:6">string</name></type> <name pos:start="3:8" pos:end="3:8">o</name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="12:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">char</name></type> <name pos:start="4:6" pos:end="4:12">getchar</name><parameter_list pos:start="4:13" pos:end="4:25">(<parameter pos:start="4:14" pos:end="4:24"><decl pos:start="4:14" pos:end="4:24"><type pos:start="4:14" pos:end="4:19"><name pos:start="4:14" pos:end="4:19">string</name></type> <name pos:start="4:21" pos:end="4:24">pass</name></decl></parameter>)</parameter_list>
<block pos:start="5:1" pos:end="12:1">{<block_content pos:start="6:5" pos:end="11:17">
    <decl_stmt pos:start="6:5" pos:end="6:10"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">a</name></decl>;</decl_stmt>
    <for pos:start="7:5" pos:end="10:5">for<control pos:start="7:8" pos:end="7:24">(<init pos:start="7:9" pos:end="7:16"><decl pos:start="7:9" pos:end="7:15"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">i</name><init pos:start="7:14" pos:end="7:15">=<expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">3</literal></expr></init></decl>;</init><condition pos:start="7:17" pos:end="7:20"><expr pos:start="7:17" pos:end="7:19"><name pos:start="7:17" pos:end="7:17">i</name><operator pos:start="7:18" pos:end="7:18">&lt;</operator><literal type="number" pos:start="7:19" pos:end="7:19">8</literal></expr>;</condition><incr pos:start="7:21" pos:end="7:23"><expr pos:start="7:21" pos:end="7:23"><operator pos:start="7:21" pos:end="7:22">++</operator><name pos:start="7:23" pos:end="7:23">i</name></expr></incr>)</control>
    <block pos:start="8:5" pos:end="10:5">{<block_content pos:start="9:9" pos:end="9:44">
        <expr_stmt pos:start="9:9" pos:end="9:44"><expr pos:start="9:9" pos:end="9:43"><name pos:start="9:9" pos:end="9:9">a</name><operator pos:start="9:10" pos:end="9:10">=</operator><name pos:start="9:11" pos:end="9:11">a</name><operator pos:start="9:12" pos:end="9:12">+</operator><operator pos:start="9:13" pos:end="9:13">(</operator><operator pos:start="9:14" pos:end="9:14">(</operator><name pos:start="9:15" pos:end="9:17">int</name><operator pos:start="9:18" pos:end="9:18">)</operator><operator pos:start="9:19" pos:end="9:19">(</operator><name pos:start="9:20" pos:end="9:26"><name pos:start="9:20" pos:end="9:23">pass</name><index pos:start="9:24" pos:end="9:26">[<expr pos:start="9:25" pos:end="9:25"><name pos:start="9:25" pos:end="9:25">i</name></expr>]</index></name><operator pos:start="9:27" pos:end="9:27">-</operator><literal type="char" pos:start="9:28" pos:end="9:30">'0'</literal><operator pos:start="9:31" pos:end="9:31">)</operator><operator pos:start="9:32" pos:end="9:32">)</operator><operator pos:start="9:33" pos:end="9:33">*</operator><call pos:start="9:34" pos:end="9:43"><name pos:start="9:34" pos:end="9:36">pow</name><argument_list pos:start="9:37" pos:end="9:43">(<argument pos:start="9:38" pos:end="9:38"><expr pos:start="9:38" pos:end="9:38"><literal type="number" pos:start="9:38" pos:end="9:38">2</literal></expr></argument>,<argument pos:start="9:40" pos:end="9:42"><expr pos:start="9:40" pos:end="9:42"><literal type="number" pos:start="9:40" pos:end="9:41">7</literal><operator pos:start="9:41" pos:end="9:41">-</operator><name pos:start="9:42" pos:end="9:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="11:5" pos:end="11:17">return <expr pos:start="11:12" pos:end="11:16"><literal type="char" pos:start="11:12" pos:end="11:14">'A'</literal><operator pos:start="11:15" pos:end="11:15">+</operator><name pos:start="11:16" pos:end="11:16">a</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="13:1" pos:end="27:1"><type pos:start="13:1" pos:end="13:4"><name pos:start="13:1" pos:end="13:4">bool</name></type> <name pos:start="13:6" pos:end="13:10">fanyi</name><parameter_list pos:start="13:11" pos:end="13:20">(<parameter pos:start="13:12" pos:end="13:19"><decl pos:start="13:12" pos:end="13:19"><type pos:start="13:12" pos:end="13:17"><name pos:start="13:12" pos:end="13:17">string</name></type> <name pos:start="13:19" pos:end="13:19">s</name></decl></parameter>)</parameter_list>
<block pos:start="14:1" pos:end="27:1">{<block_content pos:start="15:5" pos:end="26:13">
    <if_stmt pos:start="15:5" pos:end="15:29"><if pos:start="15:5" pos:end="15:29">if<condition pos:start="15:7" pos:end="15:17">(<expr pos:start="15:8" pos:end="15:16"><name pos:start="15:8" pos:end="15:11"><name pos:start="15:8" pos:end="15:8">s</name><index pos:start="15:9" pos:end="15:11">[<expr pos:start="15:10" pos:end="15:10"><literal type="number" pos:start="15:10" pos:end="15:10">0</literal></expr>]</index></name><operator pos:start="15:12" pos:end="15:13">==</operator><literal type="char" pos:start="15:14" pos:end="15:16">'0'</literal></expr>)</condition><block type="pseudo" pos:start="15:21" pos:end="15:29"><block_content pos:start="15:21" pos:end="15:29">   <return pos:start="15:21" pos:end="15:29">return <expr pos:start="15:28" pos:end="15:28"><literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="16:5" pos:end="20:5"><if pos:start="16:5" pos:end="20:5">if<condition pos:start="16:7" pos:end="16:39">(<expr pos:start="16:8" pos:end="16:38"><name pos:start="16:8" pos:end="16:11"><name pos:start="16:8" pos:end="16:8">s</name><index pos:start="16:9" pos:end="16:11">[<expr pos:start="16:10" pos:end="16:10"><literal type="number" pos:start="16:10" pos:end="16:10">0</literal></expr>]</index></name><operator pos:start="16:12" pos:end="16:13">==</operator><literal type="char" pos:start="16:14" pos:end="16:16">'1'</literal><operator pos:start="16:17" pos:end="16:18">&amp;&amp;</operator><name pos:start="16:19" pos:end="16:22"><name pos:start="16:19" pos:end="16:19">s</name><index pos:start="16:20" pos:end="16:22">[<expr pos:start="16:21" pos:end="16:21"><literal type="number" pos:start="16:21" pos:end="16:21">1</literal></expr>]</index></name><operator pos:start="16:23" pos:end="16:24">==</operator><literal type="char" pos:start="16:25" pos:end="16:27">'1'</literal><operator pos:start="16:28" pos:end="16:29">&amp;&amp;</operator><name pos:start="16:30" pos:end="16:33"><name pos:start="16:30" pos:end="16:30">s</name><index pos:start="16:31" pos:end="16:33">[<expr pos:start="16:32" pos:end="16:32"><literal type="number" pos:start="16:32" pos:end="16:32">2</literal></expr>]</index></name><operator pos:start="16:34" pos:end="16:35">==</operator><literal type="char" pos:start="16:36" pos:end="16:38">'1'</literal></expr>)</condition>
    <block pos:start="17:5" pos:end="20:5">{<block_content pos:start="18:9" pos:end="19:17">
        <expr_stmt pos:start="18:9" pos:end="18:15"><expr pos:start="18:9" pos:end="18:14"><name pos:start="18:9" pos:end="18:9">o</name><operator pos:start="18:10" pos:end="18:11">+=</operator><literal type="char" pos:start="18:12" pos:end="18:14">' '</literal></expr>;</expr_stmt>
        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if<condition pos:start="21:7" pos:end="21:39">(<expr pos:start="21:8" pos:end="21:38"><name pos:start="21:8" pos:end="21:11"><name pos:start="21:8" pos:end="21:8">s</name><index pos:start="21:9" pos:end="21:11">[<expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">0</literal></expr>]</index></name><operator pos:start="21:12" pos:end="21:13">==</operator><literal type="char" pos:start="21:14" pos:end="21:16">'1'</literal><operator pos:start="21:17" pos:end="21:18">&amp;&amp;</operator><name pos:start="21:19" pos:end="21:22"><name pos:start="21:19" pos:end="21:19">s</name><index pos:start="21:20" pos:end="21:22">[<expr pos:start="21:21" pos:end="21:21"><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>]</index></name><operator pos:start="21:23" pos:end="21:24">==</operator><literal type="char" pos:start="21:25" pos:end="21:27">'0'</literal><operator pos:start="21:28" pos:end="21:29">&amp;&amp;</operator><name pos:start="21:30" pos:end="21:33"><name pos:start="21:30" pos:end="21:30">s</name><index pos:start="21:31" pos:end="21:33">[<expr pos:start="21:32" pos:end="21:32"><literal type="number" pos:start="21:32" pos:end="21:32">2</literal></expr>]</index></name><operator pos:start="21:34" pos:end="21:35">==</operator><literal type="char" pos:start="21:36" pos:end="21:38">'1'</literal></expr>)</condition>
    <block pos:start="22:5" pos:end="25:5">{<block_content pos:start="23:9" pos:end="24:17">
        <expr_stmt pos:start="23:9" pos:end="23:22"><expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:9">o</name><operator pos:start="23:10" pos:end="23:11">+=</operator><call pos:start="23:12" pos:end="23:21"><name pos:start="23:12" pos:end="23:18">getchar</name><argument_list pos:start="23:19" pos:end="23:21">(<argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="24:9" pos:end="24:17">return <expr pos:start="24:16" pos:end="24:16"><literal type="number" pos:start="24:16" pos:end="24:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="26:5" pos:end="26:13">return <expr pos:start="26:12" pos:end="26:12"><literal type="number" pos:start="26:12" pos:end="26:12">1</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="28:1" pos:end="53:1"><type pos:start="28:1" pos:end="28:3"><name pos:start="28:1" pos:end="28:3">int</name></type> <name pos:start="28:5" pos:end="28:8">main</name><parameter_list pos:start="28:9" pos:end="28:10">()</parameter_list>
<block pos:start="29:1" pos:end="53:1">{<block_content pos:start="30:5" pos:end="52:12">
    <expr_stmt pos:start="30:5" pos:end="30:40"><expr pos:start="30:5" pos:end="30:39"><call pos:start="30:5" pos:end="30:39"><name pos:start="30:5" pos:end="30:11">freopen</name><argument_list pos:start="30:12" pos:end="30:39">(<argument pos:start="30:13" pos:end="30:28"><expr pos:start="30:13" pos:end="30:28"><literal type="string" pos:start="30:13" pos:end="30:28">"information.in"</literal></expr></argument>,<argument pos:start="30:30" pos:end="30:32"><expr pos:start="30:30" pos:end="30:32"><literal type="string" pos:start="30:30" pos:end="30:32">"r"</literal></expr></argument>,<argument pos:start="30:34" pos:end="30:38"><expr pos:start="30:34" pos:end="30:38"><name pos:start="30:34" pos:end="30:38">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><call pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:11">freopen</name><argument_list pos:start="31:12" pos:end="31:41">(<argument pos:start="31:13" pos:end="31:29"><expr pos:start="31:13" pos:end="31:29"><literal type="string" pos:start="31:13" pos:end="31:29">"information.out"</literal></expr></argument>,<argument pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><literal type="string" pos:start="31:31" pos:end="31:33">"w"</literal></expr></argument>,<argument pos:start="31:35" pos:end="31:40"><expr pos:start="31:35" pos:end="31:40"><name pos:start="31:35" pos:end="31:40">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="32:5" pos:end="32:13"><decl pos:start="32:5" pos:end="32:12"><type pos:start="32:5" pos:end="32:10"><name pos:start="32:5" pos:end="32:10">string</name></type> <name pos:start="32:12" pos:end="32:12">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:11"><expr pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:7">cin</name><operator pos:start="33:8" pos:end="33:9">&gt;&gt;</operator><name pos:start="33:10" pos:end="33:10">s</name></expr>;</expr_stmt>
    <if_stmt pos:start="34:5" pos:end="38:5"><if pos:start="34:5" pos:end="38:5">if<condition pos:start="34:7" pos:end="34:21">(<expr pos:start="34:8" pos:end="34:20"><call pos:start="34:8" pos:end="34:15"><name pos:start="34:8" pos:end="34:13"><name pos:start="34:8" pos:end="34:8">s</name><operator pos:start="34:9" pos:end="34:9">.</operator><name pos:start="34:10" pos:end="34:13">size</name></name><argument_list pos:start="34:14" pos:end="34:15">()</argument_list></call><operator pos:start="34:16" pos:end="34:16">%</operator><literal type="number" pos:start="34:17" pos:end="34:17">8</literal><operator pos:start="34:18" pos:end="34:19">!=</operator><literal type="number" pos:start="34:20" pos:end="34:20">0</literal></expr>)</condition>
    <block pos:start="35:5" pos:end="38:5">{<block_content pos:start="36:9" pos:end="37:17">
        <expr_stmt pos:start="36:9" pos:end="36:22"><expr pos:start="36:9" pos:end="36:21"><name pos:start="36:9" pos:end="36:12">cout</name><operator pos:start="36:13" pos:end="36:14">&lt;&lt;</operator><literal type="string" pos:start="36:15" pos:end="36:21">"Error"</literal></expr>;</expr_stmt>
        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="39:5" pos:end="51:5">for<control pos:start="39:8" pos:end="39:32">(<init pos:start="39:9" pos:end="39:16"><decl pos:start="39:9" pos:end="39:15"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:13">i</name><init pos:start="39:14" pos:end="39:15">=<expr pos:start="39:15" pos:end="39:15"><literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr></init></decl>;</init><condition pos:start="39:17" pos:end="39:27"><expr pos:start="39:17" pos:end="39:26"><name pos:start="39:17" pos:end="39:17">i</name><operator pos:start="39:18" pos:end="39:18">&lt;</operator><call pos:start="39:19" pos:end="39:26"><name pos:start="39:19" pos:end="39:24"><name pos:start="39:19" pos:end="39:19">s</name><operator pos:start="39:20" pos:end="39:20">.</operator><name pos:start="39:21" pos:end="39:24">size</name></name><argument_list pos:start="39:25" pos:end="39:26">()</argument_list></call></expr>;</condition><incr pos:start="39:28" pos:end="39:31"><expr pos:start="39:28" pos:end="39:31"><name pos:start="39:28" pos:end="39:28">i</name><operator pos:start="39:29" pos:end="39:30">+=</operator><literal type="number" pos:start="39:31" pos:end="39:31">8</literal></expr></incr>)</control>
    <block pos:start="40:5" pos:end="51:5">{<block_content pos:start="41:9" pos:end="50:9">
        <decl_stmt pos:start="41:9" pos:end="41:19"><decl pos:start="41:9" pos:end="41:18"><type pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:14">string</name></type> <name pos:start="41:16" pos:end="41:18">str</name></decl>;</decl_stmt>
        <for pos:start="42:9" pos:end="45:9">for<control pos:start="42:12" pos:end="42:28">(<init pos:start="42:13" pos:end="42:20"><decl pos:start="42:13" pos:end="42:19"><type pos:start="42:13" pos:end="42:15"><name pos:start="42:13" pos:end="42:15">int</name></type> <name pos:start="42:17" pos:end="42:17">j</name><init pos:start="42:18" pos:end="42:19">=<expr pos:start="42:19" pos:end="42:19"><literal type="number" pos:start="42:19" pos:end="42:19">0</literal></expr></init></decl>;</init><condition pos:start="42:21" pos:end="42:24"><expr pos:start="42:21" pos:end="42:23"><name pos:start="42:21" pos:end="42:21">j</name><operator pos:start="42:22" pos:end="42:22">&lt;</operator><literal type="number" pos:start="42:23" pos:end="42:23">8</literal></expr>;</condition><incr pos:start="42:25" pos:end="42:27"><expr pos:start="42:25" pos:end="42:27"><operator pos:start="42:25" pos:end="42:26">++</operator><name pos:start="42:27" pos:end="42:27">j</name></expr></incr>)</control>
        <block pos:start="43:9" pos:end="45:9">{<block_content pos:start="44:13" pos:end="44:34">
            <expr_stmt pos:start="44:13" pos:end="44:34"><expr pos:start="44:13" pos:end="44:33"><call pos:start="44:13" pos:end="44:33"><name pos:start="44:13" pos:end="44:25"><name pos:start="44:13" pos:end="44:15">str</name><operator pos:start="44:16" pos:end="44:16">.</operator><name pos:start="44:17" pos:end="44:25">push_back</name></name><argument_list pos:start="44:26" pos:end="44:33">(<argument pos:start="44:27" pos:end="44:32"><expr pos:start="44:27" pos:end="44:32"><name pos:start="44:27" pos:end="44:32"><name pos:start="44:27" pos:end="44:27">s</name><index pos:start="44:28" pos:end="44:32">[<expr pos:start="44:29" pos:end="44:31"><name pos:start="44:29" pos:end="44:29">i</name><operator pos:start="44:30" pos:end="44:30">+</operator><name pos:start="44:31" pos:end="44:31">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <if_stmt pos:start="46:9" pos:end="50:9"><if pos:start="46:9" pos:end="50:9">if<condition pos:start="46:11" pos:end="46:22">(<expr pos:start="46:12" pos:end="46:21"><call pos:start="46:12" pos:end="46:21"><name pos:start="46:12" pos:end="46:16">fanyi</name><argument_list pos:start="46:17" pos:end="46:21">(<argument pos:start="46:18" pos:end="46:20"><expr pos:start="46:18" pos:end="46:20"><name pos:start="46:18" pos:end="46:20">str</name></expr></argument>)</argument_list></call></expr>)</condition>
        <block pos:start="47:9" pos:end="50:9">{<block_content pos:start="48:13" pos:end="49:21">
            <expr_stmt pos:start="48:13" pos:end="48:26"><expr pos:start="48:13" pos:end="48:25"><name pos:start="48:13" pos:end="48:16">cout</name><operator pos:start="48:17" pos:end="48:18">&lt;&lt;</operator><literal type="string" pos:start="48:19" pos:end="48:25">"Error"</literal></expr>;</expr_stmt>
            <return pos:start="49:13" pos:end="49:21">return <expr pos:start="49:20" pos:end="49:20"><literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="52:5" pos:end="52:12"><expr pos:start="52:5" pos:end="52:11"><name pos:start="52:5" pos:end="52:8">cout</name><operator pos:start="52:9" pos:end="52:10">&lt;&lt;</operator><name pos:start="52:11" pos:end="52:11">o</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
