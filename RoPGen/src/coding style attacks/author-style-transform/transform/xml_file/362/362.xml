<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/362/362.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:21">using  <namespace pos:start="3:8" pos:end="3:21">namespace <name pos:start="3:18" pos:end="3:20">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="23:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="23:1">{<block_content pos:start="5:5" pos:end="22:13">
    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:12">a</name></decl> , <decl pos:start="5:16" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:10"/><name pos:start="5:16" pos:end="5:16">h</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:36"><decl pos:start="6:5" pos:end="6:16"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:13">index</name><init pos:start="6:14" pos:end="6:16">= <expr pos:start="6:16" pos:end="6:16"><literal type="number" pos:start="6:16" pos:end="6:16">0</literal></expr></init></decl> , <decl pos:start="6:20" pos:end="6:25"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:20" pos:end="6:22">num</name> <init pos:start="6:24" pos:end="6:25">=<expr pos:start="6:25" pos:end="6:25"><literal type="number" pos:start="6:25" pos:end="6:25">0</literal></expr></init></decl> , <decl pos:start="6:29" pos:end="6:34"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:29" pos:end="6:31">max</name> <init pos:start="6:33" pos:end="6:34">=<expr pos:start="6:34" pos:end="6:34"><literal type="number" pos:start="6:34" pos:end="6:34">0</literal></expr></init></decl> ;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:13"><expr pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">cin</name> <operator pos:start="7:9" pos:end="7:10">&gt;&gt;</operator> <name pos:start="7:12" pos:end="7:12">a</name></expr>;</expr_stmt>
    <for pos:start="8:5" pos:end="20:5">for<control pos:start="8:8" pos:end="8:36">(<init pos:start="8:9" pos:end="8:17"><decl pos:start="8:9" pos:end="8:16"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:13">i</name> <init pos:start="8:15" pos:end="8:16">=<expr pos:start="8:16" pos:end="8:16"><literal type="number" pos:start="8:16" pos:end="8:16">0</literal></expr></init></decl>;</init><condition pos:start="8:18" pos:end="8:31"><expr pos:start="8:18" pos:end="8:29"><name pos:start="8:18" pos:end="8:18">i</name> <operator pos:start="8:20" pos:end="8:20">&lt;</operator> <call pos:start="8:22" pos:end="8:29"><name pos:start="8:22" pos:end="8:27"><name pos:start="8:22" pos:end="8:22">a</name><operator pos:start="8:23" pos:end="8:23">.</operator><name pos:start="8:24" pos:end="8:27">size</name></name><argument_list pos:start="8:28" pos:end="8:29">()</argument_list></call></expr> ;</condition> <incr pos:start="8:33" pos:end="8:35"><expr pos:start="8:33" pos:end="8:35"><name pos:start="8:33" pos:end="8:33">i</name><operator pos:start="8:34" pos:end="8:35">++</operator></expr></incr>)</control><block pos:start="8:37" pos:end="20:5">{<block_content pos:start="9:9" pos:end="19:9">
        <if_stmt pos:start="9:9" pos:end="19:9"><if pos:start="9:9" pos:end="11:9">if<condition pos:start="9:11" pos:end="9:23">(<expr pos:start="9:12" pos:end="9:22"><name pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:12">a</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><name pos:start="9:14" pos:end="9:14">i</name></expr>]</index></name> <operator pos:start="9:17" pos:end="9:18">!=</operator> <literal type="char" pos:start="9:20" pos:end="9:22">' '</literal></expr>)</condition><block pos:start="9:24" pos:end="11:9">{<block_content pos:start="10:13" pos:end="10:18">
            <expr_stmt pos:start="10:13" pos:end="10:18"><expr pos:start="10:13" pos:end="10:17"><name pos:start="10:13" pos:end="10:15">num</name><operator pos:start="10:16" pos:end="10:17">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else pos:start="12:9" pos:end="19:9">else<block pos:start="12:13" pos:end="19:9">{<block_content pos:start="13:13" pos:end="18:20">
            <if_stmt pos:start="13:13" pos:end="16:13"><if pos:start="13:13" pos:end="16:13">if<condition pos:start="13:15" pos:end="13:25">(<expr pos:start="13:16" pos:end="13:24"><name pos:start="13:16" pos:end="13:18">max</name> <operator pos:start="13:20" pos:end="13:20">&lt;</operator> <name pos:start="13:22" pos:end="13:24">num</name></expr>)</condition><block pos:start="13:26" pos:end="16:13">{<block_content pos:start="14:17" pos:end="15:25">
                <expr_stmt pos:start="14:17" pos:end="14:26"><expr pos:start="14:17" pos:end="14:25"><name pos:start="14:17" pos:end="14:19">max</name> <operator pos:start="14:21" pos:end="14:21">=</operator> <name pos:start="14:23" pos:end="14:25">num</name></expr>;</expr_stmt>
                <expr_stmt pos:start="15:17" pos:end="15:25"><expr pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:17">h</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:24"><name pos:start="15:21" pos:end="15:21">a</name><index pos:start="15:22" pos:end="15:24">[<expr pos:start="15:23" pos:end="15:23"><name pos:start="15:23" pos:end="15:23">i</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:20"><expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:17">index</name><operator pos:start="17:18" pos:end="17:19">++</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:20"><expr pos:start="18:13" pos:end="18:19"><name pos:start="18:13" pos:end="18:15">num</name> <operator pos:start="18:17" pos:end="18:17">=</operator> <literal type="number" pos:start="18:19" pos:end="18:19">0</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:8">cout</name> <operator pos:start="21:10" pos:end="21:11">&lt;&lt;</operator> <name pos:start="21:13" pos:end="21:13">h</name> <operator pos:start="21:15" pos:end="21:16">&lt;&lt;</operator> <name pos:start="21:18" pos:end="21:21">endl</name></expr>;</expr_stmt>
    <return pos:start="22:5" pos:end="22:13">return <expr pos:start="22:12" pos:end="22:12"><literal type="number" pos:start="22:12" pos:end="22:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
