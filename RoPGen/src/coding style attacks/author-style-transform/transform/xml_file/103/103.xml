<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/103/103.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:10"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:7"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:7">m</name></decl>,<decl pos:start="3:9" pos:end="3:9"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:9" pos:end="3:9">k</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:10"><decl pos:start="4:1" pos:end="4:9"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:9"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:9">[<expr pos:start="4:7" pos:end="4:8"><literal type="number" pos:start="4:7" pos:end="4:8">30</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:22"><decl pos:start="5:1" pos:end="5:9"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:5">x</name><index pos:start="5:6" pos:end="5:9">[<expr pos:start="5:7" pos:end="5:8"><literal type="number" pos:start="5:7" pos:end="5:8">30</literal></expr>]</index></name></decl>,<decl pos:start="5:11" pos:end="5:15"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:11" pos:end="5:15"><name pos:start="5:11" pos:end="5:11">y</name><index pos:start="5:12" pos:end="5:15">[<expr pos:start="5:13" pos:end="5:14"><literal type="number" pos:start="5:13" pos:end="5:14">30</literal></expr>]</index></name></decl>,<decl pos:start="5:17" pos:end="5:21"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:17" pos:end="5:21"><name pos:start="5:17" pos:end="5:17">c</name><index pos:start="5:18" pos:end="5:21">[<expr pos:start="5:19" pos:end="5:20"><literal type="number" pos:start="5:19" pos:end="5:20">30</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:15"><decl pos:start="6:1" pos:end="6:14"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:14"><name pos:start="6:5" pos:end="6:6">cc</name><index pos:start="6:7" pos:end="6:10">[<expr pos:start="6:8" pos:end="6:9"><literal type="number" pos:start="6:8" pos:end="6:9">30</literal></expr>]</index><index pos:start="6:11" pos:end="6:14">[<expr pos:start="6:12" pos:end="6:13"><literal type="number" pos:start="6:12" pos:end="6:13">30</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:14"><decl pos:start="7:1" pos:end="7:13"><type pos:start="7:1" pos:end="7:9"><name pos:start="7:1" pos:end="7:4">long</name> <name pos:start="7:6" pos:end="7:9">long</name></type> <name pos:start="7:11" pos:end="7:13">ans</name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:17"><decl pos:start="8:1" pos:end="8:16"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:16"><name pos:start="8:5" pos:end="8:7">vis</name><index pos:start="8:8" pos:end="8:16">[<expr pos:start="8:9" pos:end="8:15"><literal type="number" pos:start="8:9" pos:end="8:15">1000000</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="9:1" pos:end="23:1"><type pos:start="9:1" pos:end="9:4"><name pos:start="9:1" pos:end="9:4">void</name></type> <name pos:start="9:6" pos:end="9:8">dfs</name><parameter_list pos:start="9:9" pos:end="9:46">(<parameter pos:start="9:10" pos:end="9:16"><decl pos:start="9:10" pos:end="9:16"><type pos:start="9:10" pos:end="9:16"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:16">num</name></decl></parameter>,<parameter pos:start="9:18" pos:end="9:24"><decl pos:start="9:18" pos:end="9:24"><type pos:start="9:18" pos:end="9:24"><name pos:start="9:18" pos:end="9:20">int</name></type> <name pos:start="9:22" pos:end="9:24">whi</name></decl></parameter>,<parameter pos:start="9:26" pos:end="9:33"><decl pos:start="9:26" pos:end="9:33"><type pos:start="9:26" pos:end="9:33"><name pos:start="9:26" pos:end="9:28">int</name></type> <name pos:start="9:30" pos:end="9:33">last</name></decl></parameter>,<parameter pos:start="9:35" pos:end="9:45"><decl pos:start="9:35" pos:end="9:45"><type pos:start="9:35" pos:end="9:45"><name pos:start="9:35" pos:end="9:38">long</name> <name pos:start="9:40" pos:end="9:43">long</name></type> <name pos:start="9:45" pos:end="9:45">C</name></decl></parameter>)</parameter_list>
<block pos:start="10:1" pos:end="23:1">{<block_content pos:start="11:5" pos:end="22:5">
    <if_stmt pos:start="11:5" pos:end="11:26"><if pos:start="11:5" pos:end="11:26">if<condition pos:start="11:7" pos:end="11:18">(<expr pos:start="11:8" pos:end="11:17"><name pos:start="11:8" pos:end="11:8">C</name><operator pos:start="11:9" pos:end="11:9">&lt;</operator><name pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:12">vis</name><index pos:start="11:13" pos:end="11:17">[<expr pos:start="11:14" pos:end="11:16"><name pos:start="11:14" pos:end="11:16">whi</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="11:20" pos:end="11:26"><block_content pos:start="11:20" pos:end="11:26"> <return pos:start="11:20" pos:end="11:26">return;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:15"><expr pos:start="12:5" pos:end="12:14"><name pos:start="12:5" pos:end="12:12"><name pos:start="12:5" pos:end="12:7">vis</name><index pos:start="12:8" pos:end="12:12">[<expr pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">whi</name></expr>]</index></name><operator pos:start="12:13" pos:end="12:13">=</operator><name pos:start="12:14" pos:end="12:14">C</name></expr>;</expr_stmt>
    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if<condition pos:start="13:7" pos:end="13:14">(<expr pos:start="13:8" pos:end="13:13"><name pos:start="13:8" pos:end="13:10">num</name><operator pos:start="13:11" pos:end="13:12">&gt;=</operator><name pos:start="13:13" pos:end="13:13">m</name></expr>)</condition>
    <block pos:start="14:5" pos:end="17:5">{<block_content pos:start="15:9" pos:end="16:15">
        <expr_stmt pos:start="15:9" pos:end="15:23"><expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:11">ans</name><operator pos:start="15:12" pos:end="15:12">=</operator><call pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:15">max</name><argument_list pos:start="15:16" pos:end="15:22">(<argument pos:start="15:17" pos:end="15:19"><expr pos:start="15:17" pos:end="15:19"><name pos:start="15:17" pos:end="15:19">ans</name></expr></argument>,<argument pos:start="15:21" pos:end="15:21"><expr pos:start="15:21" pos:end="15:21"><name pos:start="15:21" pos:end="15:21">C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="16:9" pos:end="16:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="18:5" pos:end="22:5">for<control pos:start="18:8" pos:end="18:25">(<init pos:start="18:9" pos:end="18:16"><decl pos:start="18:9" pos:end="18:15"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">i</name><init pos:start="18:14" pos:end="18:15">=<expr pos:start="18:15" pos:end="18:15"><literal type="number" pos:start="18:15" pos:end="18:15">1</literal></expr></init></decl>;</init><condition pos:start="18:17" pos:end="18:21"><expr pos:start="18:17" pos:end="18:20"><name pos:start="18:17" pos:end="18:17">i</name><operator pos:start="18:18" pos:end="18:19">&lt;=</operator><name pos:start="18:20" pos:end="18:20">n</name></expr>;</condition><incr pos:start="18:22" pos:end="18:24"><expr pos:start="18:22" pos:end="18:24"><name pos:start="18:22" pos:end="18:22">i</name><operator pos:start="18:23" pos:end="18:24">++</operator></expr></incr>)</control>
    <block pos:start="19:5" pos:end="22:5">{<block_content pos:start="20:9" pos:end="21:51">
        <if_stmt pos:start="20:9" pos:end="20:40"><if pos:start="20:9" pos:end="20:40">if<condition pos:start="20:11" pos:end="20:30">(<expr pos:start="20:12" pos:end="20:29"><name pos:start="20:12" pos:end="20:14">whi</name><operator pos:start="20:15" pos:end="20:15">&amp;</operator><operator pos:start="20:16" pos:end="20:16">(</operator><literal type="number" pos:start="20:17" pos:end="20:17">1</literal><operator pos:start="20:18" pos:end="20:19">&lt;&lt;</operator><name pos:start="20:20" pos:end="20:20">i</name><operator pos:start="20:21" pos:end="20:21">)</operator><operator pos:start="20:22" pos:end="20:23">==</operator><operator pos:start="20:24" pos:end="20:24">(</operator><literal type="number" pos:start="20:25" pos:end="20:25">1</literal><operator pos:start="20:26" pos:end="20:27">&lt;&lt;</operator><name pos:start="20:28" pos:end="20:28">i</name><operator pos:start="20:29" pos:end="20:29">)</operator></expr>)</condition><block type="pseudo" pos:start="20:32" pos:end="20:40"><block_content pos:start="20:32" pos:end="20:40"> <continue pos:start="20:32" pos:end="20:40">continue;</continue></block_content></block></if></if_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:51"><expr pos:start="21:9" pos:end="21:50"><call pos:start="21:9" pos:end="21:50"><name pos:start="21:9" pos:end="21:11">dfs</name><argument_list pos:start="21:12" pos:end="21:50">(<argument pos:start="21:13" pos:end="21:17"><expr pos:start="21:13" pos:end="21:17"><name pos:start="21:13" pos:end="21:15">num</name><operator pos:start="21:16" pos:end="21:16">+</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr></argument>,<argument pos:start="21:19" pos:end="21:28"><expr pos:start="21:19" pos:end="21:28"><name pos:start="21:19" pos:end="21:21">whi</name><operator pos:start="21:22" pos:end="21:22">|</operator><operator pos:start="21:23" pos:end="21:23">(</operator><literal type="number" pos:start="21:24" pos:end="21:24">1</literal><operator pos:start="21:25" pos:end="21:26">&lt;&lt;</operator><name pos:start="21:27" pos:end="21:27">i</name><operator pos:start="21:28" pos:end="21:28">)</operator></expr></argument>,<argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><name pos:start="21:30" pos:end="21:30">i</name></expr></argument>,<argument pos:start="21:32" pos:end="21:49"><expr pos:start="21:32" pos:end="21:49"><name pos:start="21:32" pos:end="21:32">C</name><operator pos:start="21:33" pos:end="21:33">+</operator><name pos:start="21:34" pos:end="21:37"><name pos:start="21:34" pos:end="21:34">a</name><index pos:start="21:35" pos:end="21:37">[<expr pos:start="21:36" pos:end="21:36"><name pos:start="21:36" pos:end="21:36">i</name></expr>]</index></name><operator pos:start="21:38" pos:end="21:38">+</operator><name pos:start="21:39" pos:end="21:49"><name pos:start="21:39" pos:end="21:40">cc</name><index pos:start="21:41" pos:end="21:46">[<expr pos:start="21:42" pos:end="21:45"><name pos:start="21:42" pos:end="21:45">last</name></expr>]</index><index pos:start="21:47" pos:end="21:49">[<expr pos:start="21:48" pos:end="21:48"><name pos:start="21:48" pos:end="21:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="24:1" pos:end="39:1"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:8">main</name><parameter_list pos:start="24:9" pos:end="24:10">()</parameter_list>
<block pos:start="25:1" pos:end="39:1">{<block_content pos:start="26:5" pos:end="38:13">
    <expr_stmt pos:start="26:5" pos:end="26:33"><expr pos:start="26:5" pos:end="26:32"><call pos:start="26:5" pos:end="26:32"><name pos:start="26:5" pos:end="26:11">freopen</name><argument_list pos:start="26:12" pos:end="26:32">(<argument pos:start="26:13" pos:end="26:21"><expr pos:start="26:13" pos:end="26:21"><literal type="string" pos:start="26:13" pos:end="26:21">"meal.in"</literal></expr></argument>,<argument pos:start="26:23" pos:end="26:25"><expr pos:start="26:23" pos:end="26:25"><literal type="string" pos:start="26:23" pos:end="26:25">"r"</literal></expr></argument>,<argument pos:start="26:27" pos:end="26:31"><expr pos:start="26:27" pos:end="26:31"><name pos:start="26:27" pos:end="26:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><call pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:11">freopen</name><argument_list pos:start="27:12" pos:end="27:34">(<argument pos:start="27:13" pos:end="27:22"><expr pos:start="27:13" pos:end="27:22"><literal type="string" pos:start="27:13" pos:end="27:22">"meal.out"</literal></expr></argument>,<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><literal type="string" pos:start="27:24" pos:end="27:26">"w"</literal></expr></argument>,<argument pos:start="27:28" pos:end="27:33"><expr pos:start="27:28" pos:end="27:33"><name pos:start="27:28" pos:end="27:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:30"><expr pos:start="28:5" pos:end="28:29"><call pos:start="28:5" pos:end="28:29"><name pos:start="28:5" pos:end="28:10">memset</name><argument_list pos:start="28:11" pos:end="28:29">(<argument pos:start="28:12" pos:end="28:14"><expr pos:start="28:12" pos:end="28:14"><name pos:start="28:12" pos:end="28:14">vis</name></expr></argument>,<argument pos:start="28:16" pos:end="28:16"><expr pos:start="28:16" pos:end="28:16"><literal type="number" pos:start="28:16" pos:end="28:16">0</literal></expr></argument>,<argument pos:start="28:18" pos:end="28:28"><expr pos:start="28:18" pos:end="28:28"><sizeof pos:start="28:18" pos:end="28:28">sizeof<argument_list pos:start="28:24" pos:end="28:28">(<argument pos:start="28:25" pos:end="28:27"><expr pos:start="28:25" pos:end="28:27"><name pos:start="28:25" pos:end="28:27">vis</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:17"><expr pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:7">cin</name><operator pos:start="29:8" pos:end="29:9">&gt;&gt;</operator><name pos:start="29:10" pos:end="29:10">n</name><operator pos:start="29:11" pos:end="29:12">&gt;&gt;</operator><name pos:start="29:13" pos:end="29:13">m</name><operator pos:start="29:14" pos:end="29:15">&gt;&gt;</operator><name pos:start="29:16" pos:end="29:16">k</name></expr>;</expr_stmt>
    <for pos:start="30:5" pos:end="30:36">for<control pos:start="30:8" pos:end="30:25">(<init pos:start="30:9" pos:end="30:16"><decl pos:start="30:9" pos:end="30:15"><type pos:start="30:9" pos:end="30:11"><name pos:start="30:9" pos:end="30:11">int</name></type> <name pos:start="30:13" pos:end="30:13">i</name><init pos:start="30:14" pos:end="30:15">=<expr pos:start="30:15" pos:end="30:15"><literal type="number" pos:start="30:15" pos:end="30:15">1</literal></expr></init></decl>;</init><condition pos:start="30:17" pos:end="30:21"><expr pos:start="30:17" pos:end="30:20"><name pos:start="30:17" pos:end="30:17">i</name><operator pos:start="30:18" pos:end="30:19">&lt;=</operator><name pos:start="30:20" pos:end="30:20">n</name></expr>;</condition><incr pos:start="30:22" pos:end="30:24"><expr pos:start="30:22" pos:end="30:24"><name pos:start="30:22" pos:end="30:22">i</name><operator pos:start="30:23" pos:end="30:24">++</operator></expr></incr>)</control><block type="pseudo" pos:start="30:27" pos:end="30:36"><block_content pos:start="30:27" pos:end="30:36"> <expr_stmt pos:start="30:27" pos:end="30:36"><expr pos:start="30:27" pos:end="30:35"><name pos:start="30:27" pos:end="30:29">cin</name><operator pos:start="30:30" pos:end="30:31">&gt;&gt;</operator><name pos:start="30:32" pos:end="30:35"><name pos:start="30:32" pos:end="30:32">a</name><index pos:start="30:33" pos:end="30:35">[<expr pos:start="30:34" pos:end="30:34"><name pos:start="30:34" pos:end="30:34">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <for pos:start="31:5" pos:end="35:5">for<control pos:start="31:8" pos:end="31:25">(<init pos:start="31:9" pos:end="31:16"><decl pos:start="31:9" pos:end="31:15"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name><init pos:start="31:14" pos:end="31:15">=<expr pos:start="31:15" pos:end="31:15"><literal type="number" pos:start="31:15" pos:end="31:15">1</literal></expr></init></decl>;</init><condition pos:start="31:17" pos:end="31:21"><expr pos:start="31:17" pos:end="31:20"><name pos:start="31:17" pos:end="31:17">i</name><operator pos:start="31:18" pos:end="31:19">&lt;=</operator><name pos:start="31:20" pos:end="31:20">k</name></expr>;</condition><incr pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:22">i</name><operator pos:start="31:23" pos:end="31:24">++</operator></expr></incr>)</control>
    <block pos:start="32:5" pos:end="35:5">{<block_content pos:start="33:9" pos:end="34:28">
        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:11">cin</name><operator pos:start="33:12" pos:end="33:13">&gt;&gt;</operator><name pos:start="33:14" pos:end="33:17"><name pos:start="33:14" pos:end="33:14">x</name><index pos:start="33:15" pos:end="33:17">[<expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">i</name></expr>]</index></name><operator pos:start="33:18" pos:end="33:19">&gt;&gt;</operator><name pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:20">y</name><index pos:start="33:21" pos:end="33:23">[<expr pos:start="33:22" pos:end="33:22"><name pos:start="33:22" pos:end="33:22">i</name></expr>]</index></name><operator pos:start="33:24" pos:end="33:25">&gt;&gt;</operator><name pos:start="33:26" pos:end="33:29"><name pos:start="33:26" pos:end="33:26">c</name><index pos:start="33:27" pos:end="33:29">[<expr pos:start="33:28" pos:end="33:28"><name pos:start="33:28" pos:end="33:28">i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:28"><expr pos:start="34:9" pos:end="34:27"><name pos:start="34:9" pos:end="34:22"><name pos:start="34:9" pos:end="34:10">cc</name><index pos:start="34:11" pos:end="34:16">[<expr pos:start="34:12" pos:end="34:15"><name pos:start="34:12" pos:end="34:15"><name pos:start="34:12" pos:end="34:12">x</name><index pos:start="34:13" pos:end="34:15">[<expr pos:start="34:14" pos:end="34:14"><name pos:start="34:14" pos:end="34:14">i</name></expr>]</index></name></expr>]</index><index pos:start="34:17" pos:end="34:22">[<expr pos:start="34:18" pos:end="34:21"><name pos:start="34:18" pos:end="34:21"><name pos:start="34:18" pos:end="34:18">y</name><index pos:start="34:19" pos:end="34:21">[<expr pos:start="34:20" pos:end="34:20"><name pos:start="34:20" pos:end="34:20">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="34:23" pos:end="34:23">=</operator><name pos:start="34:24" pos:end="34:27"><name pos:start="34:24" pos:end="34:24">c</name><index pos:start="34:25" pos:end="34:27">[<expr pos:start="34:26" pos:end="34:26"><name pos:start="34:26" pos:end="34:26">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="36:5" pos:end="36:17"><expr pos:start="36:5" pos:end="36:16"><call pos:start="36:5" pos:end="36:16"><name pos:start="36:5" pos:end="36:7">dfs</name><argument_list pos:start="36:8" pos:end="36:16">(<argument pos:start="36:9" pos:end="36:9"><expr pos:start="36:9" pos:end="36:9"><literal type="number" pos:start="36:9" pos:end="36:9">0</literal></expr></argument>,<argument pos:start="36:11" pos:end="36:11"><expr pos:start="36:11" pos:end="36:11"><literal type="number" pos:start="36:11" pos:end="36:11">0</literal></expr></argument>,<argument pos:start="36:13" pos:end="36:13"><expr pos:start="36:13" pos:end="36:13"><literal type="number" pos:start="36:13" pos:end="36:13">0</literal></expr></argument>,<argument pos:start="36:15" pos:end="36:15"><expr pos:start="36:15" pos:end="36:15"><literal type="number" pos:start="36:15" pos:end="36:15">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:14"><expr pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:8">cout</name><operator pos:start="37:9" pos:end="37:10">&lt;&lt;</operator><name pos:start="37:11" pos:end="37:13">ans</name></expr>;</expr_stmt>
    <return pos:start="38:5" pos:end="38:13">return <expr pos:start="38:12" pos:end="38:12"><literal type="number" pos:start="38:12" pos:end="38:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
