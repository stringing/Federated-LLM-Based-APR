<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/852/852.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="21:2"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="21:2">{<block_content pos:start="4:5" pos:end="20:9">
    <expr_stmt pos:start="4:5" pos:end="4:35"><expr pos:start="4:5" pos:end="4:34"><call pos:start="4:5" pos:end="4:34"><name pos:start="4:5" pos:end="4:11">freopen</name><argument_list pos:start="4:12" pos:end="4:34">(<argument pos:start="4:13" pos:end="4:23"><expr pos:start="4:13" pos:end="4:23"><literal type="string" pos:start="4:13" pos:end="4:23">"square.in"</literal></expr></argument>,<argument pos:start="4:25" pos:end="4:27"><expr pos:start="4:25" pos:end="4:27"><literal type="string" pos:start="4:25" pos:end="4:27">"r"</literal></expr></argument>,<argument pos:start="4:29" pos:end="4:33"><expr pos:start="4:29" pos:end="4:33"><name pos:start="4:29" pos:end="4:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:37"><expr pos:start="5:5" pos:end="5:36"><call pos:start="5:5" pos:end="5:36"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:36">(<argument pos:start="5:13" pos:end="5:24"><expr pos:start="5:13" pos:end="5:24"><literal type="string" pos:start="5:13" pos:end="5:24">"square.out"</literal></expr></argument>,<argument pos:start="5:26" pos:end="5:28"><expr pos:start="5:26" pos:end="5:28"><literal type="string" pos:start="5:26" pos:end="5:28">"w"</literal></expr></argument>,<argument pos:start="5:30" pos:end="5:35"><expr pos:start="5:30" pos:end="5:35"><name pos:start="5:30" pos:end="5:35">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:16"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">x</name></decl>,<decl pos:start="6:11" pos:end="6:11"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:11" pos:end="6:11">y</name></decl>,<decl pos:start="6:13" pos:end="6:13"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:13" pos:end="6:13">z</name></decl>,<decl pos:start="6:15" pos:end="6:15"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:15" pos:end="6:15">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:11"><expr pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:7">cin</name><operator pos:start="7:8" pos:end="7:9">&gt;&gt;</operator><name pos:start="7:10" pos:end="7:10">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:16"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">a</name></decl>,<decl pos:start="8:11" pos:end="8:11"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:11" pos:end="8:11">b</name></decl>,<decl pos:start="8:13" pos:end="8:13"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:13" pos:end="8:13">c</name></decl>,<decl pos:start="8:15" pos:end="8:15"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:15" pos:end="8:15">d</name></decl>;</decl_stmt>
    <for pos:start="9:5" pos:end="20:9">for<control pos:start="9:8" pos:end="9:22">(<init pos:start="9:9" pos:end="9:12"><expr pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:9">x</name><operator pos:start="9:10" pos:end="9:10">=</operator><literal type="number" pos:start="9:11" pos:end="9:11">0</literal></expr>;</init><condition pos:start="9:13" pos:end="9:18"><expr pos:start="9:13" pos:end="9:17"><name pos:start="9:13" pos:end="9:13">x</name><operator pos:start="9:14" pos:end="9:14">*</operator><name pos:start="9:15" pos:end="9:15">x</name><operator pos:start="9:16" pos:end="9:16">&lt;</operator><name pos:start="9:17" pos:end="9:17">n</name></expr>;</condition><incr pos:start="9:19" pos:end="9:21"><expr pos:start="9:19" pos:end="9:21"><name pos:start="9:19" pos:end="9:19">x</name><operator pos:start="9:20" pos:end="9:21">++</operator></expr></incr>)</control><block pos:start="9:23" pos:end="20:9">{<block_content pos:start="10:9" pos:end="19:13">
        <for pos:start="10:9" pos:end="19:13">for<control pos:start="10:12" pos:end="10:30">(<init pos:start="10:13" pos:end="10:16"><expr pos:start="10:13" pos:end="10:15"><name pos:start="10:13" pos:end="10:13">y</name><operator pos:start="10:14" pos:end="10:14">=</operator><name pos:start="10:15" pos:end="10:15">x</name></expr>;</init><condition pos:start="10:17" pos:end="10:26"><expr pos:start="10:17" pos:end="10:25"><name pos:start="10:17" pos:end="10:17">x</name><operator pos:start="10:18" pos:end="10:18">*</operator><name pos:start="10:19" pos:end="10:19">x</name><operator pos:start="10:20" pos:end="10:20">+</operator><name pos:start="10:21" pos:end="10:21">y</name><operator pos:start="10:22" pos:end="10:22">*</operator><name pos:start="10:23" pos:end="10:23">y</name><operator pos:start="10:24" pos:end="10:24">&lt;</operator><name pos:start="10:25" pos:end="10:25">n</name></expr>;</condition><incr pos:start="10:27" pos:end="10:29"><expr pos:start="10:27" pos:end="10:29"><name pos:start="10:27" pos:end="10:27">y</name><operator pos:start="10:28" pos:end="10:29">++</operator></expr></incr>)</control><block pos:start="10:31" pos:end="19:13">{<block_content pos:start="11:13" pos:end="18:17">
            <for pos:start="11:13" pos:end="18:17">for<control pos:start="11:16" pos:end="11:39">(<init pos:start="11:17" pos:end="11:20"><expr pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:17">z</name><operator pos:start="11:18" pos:end="11:18">=</operator><name pos:start="11:19" pos:end="11:19">y</name></expr>;</init><condition pos:start="11:21" pos:end="11:35"><expr pos:start="11:21" pos:end="11:34"><name pos:start="11:21" pos:end="11:21">x</name><operator pos:start="11:22" pos:end="11:22">*</operator><name pos:start="11:23" pos:end="11:23">x</name><operator pos:start="11:24" pos:end="11:24">+</operator><name pos:start="11:25" pos:end="11:25">y</name><operator pos:start="11:26" pos:end="11:26">*</operator><name pos:start="11:27" pos:end="11:27">y</name><operator pos:start="11:28" pos:end="11:28">+</operator><name pos:start="11:29" pos:end="11:29">z</name><operator pos:start="11:30" pos:end="11:30">*</operator><name pos:start="11:31" pos:end="11:31">z</name><operator pos:start="11:32" pos:end="11:33">&lt;=</operator><name pos:start="11:34" pos:end="11:34">n</name></expr>;</condition><incr pos:start="11:36" pos:end="11:38"><expr pos:start="11:36" pos:end="11:38"><name pos:start="11:36" pos:end="11:36">z</name><operator pos:start="11:37" pos:end="11:38">++</operator></expr></incr>)</control><block pos:start="11:40" pos:end="18:17">{<block_content pos:start="12:17" pos:end="17:17">
                <decl_stmt pos:start="12:17" pos:end="12:48"><decl pos:start="12:17" pos:end="12:47"><type pos:start="12:17" pos:end="12:22"><name pos:start="12:17" pos:end="12:22">double</name></type> <name pos:start="12:24" pos:end="12:27">tmp1</name><init pos:start="12:28" pos:end="12:47">=<expr pos:start="12:29" pos:end="12:47"><call pos:start="12:29" pos:end="12:47"><name pos:start="12:29" pos:end="12:32">sqrt</name><argument_list pos:start="12:33" pos:end="12:47">(<argument pos:start="12:34" pos:end="12:46"><expr pos:start="12:34" pos:end="12:46"><name pos:start="12:34" pos:end="12:34">n</name><operator pos:start="12:35" pos:end="12:35">-</operator><name pos:start="12:36" pos:end="12:36">x</name><operator pos:start="12:37" pos:end="12:37">*</operator><name pos:start="12:38" pos:end="12:38">x</name><operator pos:start="12:39" pos:end="12:39">-</operator><name pos:start="12:40" pos:end="12:40">y</name><operator pos:start="12:41" pos:end="12:41">*</operator><name pos:start="12:42" pos:end="12:42">y</name><operator pos:start="12:43" pos:end="12:43">-</operator><name pos:start="12:44" pos:end="12:44">z</name><operator pos:start="12:45" pos:end="12:45">*</operator><name pos:start="12:46" pos:end="12:46">z</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="13:17" pos:end="13:39"><decl pos:start="13:17" pos:end="13:38"><type pos:start="13:17" pos:end="13:19"><name pos:start="13:17" pos:end="13:19">int</name></type> <name pos:start="13:21" pos:end="13:24">tmp2</name><init pos:start="13:25" pos:end="13:38">=<expr pos:start="13:26" pos:end="13:38"><name pos:start="13:26" pos:end="13:26">n</name><operator pos:start="13:27" pos:end="13:27">-</operator><name pos:start="13:28" pos:end="13:28">x</name><operator pos:start="13:29" pos:end="13:29">*</operator><name pos:start="13:30" pos:end="13:30">x</name><operator pos:start="13:31" pos:end="13:31">-</operator><name pos:start="13:32" pos:end="13:32">y</name><operator pos:start="13:33" pos:end="13:33">*</operator><name pos:start="13:34" pos:end="13:34">y</name><operator pos:start="13:35" pos:end="13:35">-</operator><name pos:start="13:36" pos:end="13:36">z</name><operator pos:start="13:37" pos:end="13:37">*</operator><name pos:start="13:38" pos:end="13:38">z</name></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="14:17" pos:end="17:17"><if pos:start="14:17" pos:end="17:17">if<condition pos:start="14:19" pos:end="14:35">(<expr pos:start="14:20" pos:end="14:34"><name pos:start="14:20" pos:end="14:23">tmp1</name><operator pos:start="14:24" pos:end="14:24">*</operator><name pos:start="14:25" pos:end="14:28">tmp1</name><operator pos:start="14:29" pos:end="14:30">==</operator><name pos:start="14:31" pos:end="14:34">tmp2</name></expr>)</condition><block pos:start="14:36" pos:end="17:17">{<block_content pos:start="15:21" pos:end="16:29">
                    <expr_stmt pos:start="15:21" pos:end="15:70"><expr pos:start="15:21" pos:end="15:69"><name pos:start="15:21" pos:end="15:24">cout</name><operator pos:start="15:25" pos:end="15:26">&lt;&lt;</operator><name pos:start="15:27" pos:end="15:27">x</name><operator pos:start="15:28" pos:end="15:29">&lt;&lt;</operator><literal type="string" pos:start="15:30" pos:end="15:32">" "</literal><operator pos:start="15:33" pos:end="15:34">&lt;&lt;</operator><name pos:start="15:35" pos:end="15:35">y</name><operator pos:start="15:36" pos:end="15:37">&lt;&lt;</operator><literal type="string" pos:start="15:38" pos:end="15:40">" "</literal><operator pos:start="15:41" pos:end="15:42">&lt;&lt;</operator><name pos:start="15:43" pos:end="15:43">z</name><operator pos:start="15:44" pos:end="15:45">&lt;&lt;</operator><literal type="string" pos:start="15:46" pos:end="15:48">" "</literal><operator pos:start="15:49" pos:end="15:50">&lt;&lt;</operator><call pos:start="15:51" pos:end="15:69"><name pos:start="15:51" pos:end="15:54">sqrt</name><argument_list pos:start="15:55" pos:end="15:69">(<argument pos:start="15:56" pos:end="15:68"><expr pos:start="15:56" pos:end="15:68"><name pos:start="15:56" pos:end="15:56">n</name><operator pos:start="15:57" pos:end="15:57">-</operator><name pos:start="15:58" pos:end="15:58">x</name><operator pos:start="15:59" pos:end="15:59">*</operator><name pos:start="15:60" pos:end="15:60">x</name><operator pos:start="15:61" pos:end="15:61">-</operator><name pos:start="15:62" pos:end="15:62">y</name><operator pos:start="15:63" pos:end="15:63">*</operator><name pos:start="15:64" pos:end="15:64">y</name><operator pos:start="15:65" pos:end="15:65">-</operator><name pos:start="15:66" pos:end="15:66">z</name><operator pos:start="15:67" pos:end="15:67">*</operator><name pos:start="15:68" pos:end="15:68">z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return pos:start="16:21" pos:end="16:29">return <expr pos:start="16:28" pos:end="16:28"><literal type="number" pos:start="16:28" pos:end="16:28">0</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>
                </block_content>}</block></for>
            </block_content>}</block></for>
        </block_content>}</block></for>
 </block_content>}</block></function>
</unit>
