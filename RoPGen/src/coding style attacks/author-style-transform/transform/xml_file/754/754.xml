<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/754/754.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:20">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:14"><decl pos:start="5:1" pos:end="5:13"><type pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:6">vector</name><argument_list type="generic" pos:start="5:7" pos:end="5:11">&lt;<argument pos:start="5:8" pos:end="5:10"><expr pos:start="5:8" pos:end="5:10"><name pos:start="5:8" pos:end="5:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="5:13" pos:end="5:13">v</name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="35:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list> <block pos:start="6:12" pos:end="35:1">{<block_content pos:start="7:5" pos:end="34:13">
    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">string</name></type> <name pos:start="7:12" pos:end="7:12">s</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:21"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">t</name></decl>,<decl pos:start="8:11" pos:end="8:14"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:11" pos:end="8:14">allt</name></decl>,<decl pos:start="8:16" pos:end="8:20"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:16" pos:end="8:18">sum</name><init pos:start="8:19" pos:end="8:20">=<expr pos:start="8:20" pos:end="8:20"><literal type="number" pos:start="8:20" pos:end="8:20">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:14"><expr pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:7">cin</name><operator pos:start="9:8" pos:end="9:9">&gt;&gt;</operator><name pos:start="9:10" pos:end="9:13">allt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:13"><expr pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:8">allt</name><operator pos:start="10:9" pos:end="10:10">*=</operator><literal type="number" pos:start="10:11" pos:end="10:12">60</literal></expr>;</expr_stmt>
    <while pos:start="11:5" pos:end="32:5">while<condition pos:start="11:10" pos:end="11:17">(<expr pos:start="11:11" pos:end="11:16"><name pos:start="11:11" pos:end="11:13">cin</name><operator pos:start="11:14" pos:end="11:15">&gt;&gt;</operator><name pos:start="11:16" pos:end="11:16">s</name></expr>)</condition> <block pos:start="11:19" pos:end="32:5">{<block_content pos:start="12:9" pos:end="31:9">
        <if_stmt pos:start="12:9" pos:end="31:9"><if pos:start="12:9" pos:end="15:9">if<condition pos:start="12:11" pos:end="12:30">(<expr pos:start="12:12" pos:end="12:29"><name pos:start="12:12" pos:end="12:12">s</name><operator pos:start="12:13" pos:end="12:14">==</operator><literal type="string" pos:start="12:15" pos:end="12:29">"tintgtingting"</literal></expr>)</condition><block pos:start="12:31" pos:end="15:9">{<block_content pos:start="13:13" pos:end="14:30">
            <expr_stmt pos:start="13:13" pos:end="13:25"><expr pos:start="13:13" pos:end="13:24"><call pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:22"><name pos:start="13:13" pos:end="13:13">v</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:22">pop_back</name></name><argument_list pos:start="13:23" pos:end="13:24">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:30"><expr pos:start="14:13" pos:end="14:29"><name pos:start="14:13" pos:end="14:15">sum</name><operator pos:start="14:16" pos:end="14:16">=</operator><name pos:start="14:17" pos:end="14:29"><name pos:start="14:17" pos:end="14:17">v</name><index pos:start="14:18" pos:end="14:29">[<expr pos:start="14:19" pos:end="14:28"><call pos:start="14:19" pos:end="14:26"><name pos:start="14:19" pos:end="14:24"><name pos:start="14:19" pos:end="14:19">v</name><operator pos:start="14:20" pos:end="14:20">.</operator><name pos:start="14:21" pos:end="14:24">size</name></name><argument_list pos:start="14:25" pos:end="14:26">()</argument_list></call><operator pos:start="14:27" pos:end="14:27">-</operator><literal type="number" pos:start="14:28" pos:end="14:28">1</literal></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="15:10" pos:end="23:9">else if<condition pos:start="15:17" pos:end="15:33">(<expr pos:start="15:18" pos:end="15:32"><name pos:start="15:18" pos:end="15:18">s</name><operator pos:start="15:19" pos:end="15:20">==</operator><literal type="string" pos:start="15:21" pos:end="15:32">"kaomianjin"</literal></expr>)</condition><block pos:start="15:34" pos:end="23:9">{<block_content pos:start="16:13" pos:end="22:21">
            <expr_stmt pos:start="16:13" pos:end="16:19"><expr pos:start="16:13" pos:end="16:18"><name pos:start="16:13" pos:end="16:15">cin</name><operator pos:start="16:16" pos:end="16:17">&gt;&gt;</operator><name pos:start="16:18" pos:end="16:18">t</name></expr>;</expr_stmt>
            <if_stmt pos:start="17:13" pos:end="20:13"><if pos:start="17:13" pos:end="20:13">if<condition pos:start="17:15" pos:end="17:43">(<expr pos:start="17:16" pos:end="17:42"><name pos:start="17:16" pos:end="17:18">cin</name><operator pos:start="17:19" pos:end="17:20">&gt;&gt;</operator><name pos:start="17:21" pos:end="17:21">s</name> <operator pos:start="17:23" pos:end="17:24">&amp;&amp;</operator> <name pos:start="17:26" pos:end="17:26">s</name><operator pos:start="17:27" pos:end="17:28">==</operator><literal type="string" pos:start="17:29" pos:end="17:42">"tingtingting"</literal></expr>)</condition><block pos:start="17:44" pos:end="20:13">{<block_content pos:start="18:17" pos:end="19:25">
                <expr_stmt pos:start="18:17" pos:end="18:38"><expr pos:start="18:17" pos:end="18:37"><name pos:start="18:17" pos:end="18:20">cout</name><operator pos:start="18:21" pos:end="18:22">&lt;&lt;</operator><literal type="string" pos:start="18:23" pos:end="18:31">"Hahaha."</literal><operator pos:start="18:32" pos:end="18:33">&lt;&lt;</operator><name pos:start="18:34" pos:end="18:37">endl</name></expr>;</expr_stmt>
                <return pos:start="19:17" pos:end="19:25">return <expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:43"><expr pos:start="21:13" pos:end="21:42"><name pos:start="21:13" pos:end="21:16">cout</name><operator pos:start="21:17" pos:end="21:18">&lt;&lt;</operator><literal type="string" pos:start="21:19" pos:end="21:36">"Congratulations!"</literal><operator pos:start="21:37" pos:end="21:38">&lt;&lt;</operator><name pos:start="21:39" pos:end="21:42">endl</name></expr>;</expr_stmt>
            <return pos:start="22:13" pos:end="22:21">return <expr pos:start="22:20" pos:end="22:20"><literal type="number" pos:start="22:20" pos:end="22:20">0</literal></expr>;</return>
        </block_content>}</block></if>
        <else pos:start="24:9" pos:end="31:9">else<block pos:start="24:13" pos:end="31:9">{<block_content pos:start="25:13" pos:end="30:29">
            <expr_stmt pos:start="25:13" pos:end="25:19"><expr pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:15">cin</name><operator pos:start="25:16" pos:end="25:17">&gt;&gt;</operator><name pos:start="25:18" pos:end="25:18">t</name></expr>;</expr_stmt>
            <expr_stmt pos:start="26:13" pos:end="26:19"><expr pos:start="26:13" pos:end="26:18"><name pos:start="26:13" pos:end="26:15">sum</name><operator pos:start="26:16" pos:end="26:17">+=</operator><name pos:start="26:18" pos:end="26:18">t</name></expr>;</expr_stmt>
            <if_stmt pos:start="27:13" pos:end="29:13"><if pos:start="27:13" pos:end="29:13">if<condition pos:start="27:15" pos:end="27:25">(<expr pos:start="27:16" pos:end="27:24"><name pos:start="27:16" pos:end="27:18">sum</name><operator pos:start="27:19" pos:end="27:20">&gt;=</operator><name pos:start="27:21" pos:end="27:24">allt</name></expr>)</condition><block pos:start="27:26" pos:end="29:13">{<block_content pos:start="28:17" pos:end="28:22">
                <break pos:start="28:17" pos:end="28:22">break;</break>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="30:13" pos:end="30:29"><expr pos:start="30:13" pos:end="30:28"><call pos:start="30:13" pos:end="30:28"><name pos:start="30:13" pos:end="30:23"><name pos:start="30:13" pos:end="30:13">v</name><operator pos:start="30:14" pos:end="30:14">.</operator><name pos:start="30:15" pos:end="30:23">push_back</name></name><argument_list pos:start="30:24" pos:end="30:28">(<argument pos:start="30:25" pos:end="30:27"><expr pos:start="30:25" pos:end="30:27"><name pos:start="30:25" pos:end="30:27">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:8">cout</name><operator pos:start="33:9" pos:end="33:10">&lt;&lt;</operator><literal type="string" pos:start="33:11" pos:end="33:26">"Unfortunately."</literal><operator pos:start="33:27" pos:end="33:28">&lt;&lt;</operator><name pos:start="33:29" pos:end="33:32">endl</name></expr>;</expr_stmt>
    <return pos:start="34:5" pos:end="34:13">return <expr pos:start="34:12" pos:end="34:12"><literal type="number" pos:start="34:12" pos:end="34:12">0</literal></expr>;</return>
</block_content>}</block></function>



</unit>
