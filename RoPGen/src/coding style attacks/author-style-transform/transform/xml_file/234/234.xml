<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/234/234.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="38:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list>
<block pos:start="4:1" pos:end="38:1">{<block_content pos:start="5:5" pos:end="37:13">
    <expr_stmt pos:start="5:5" pos:end="5:30"><expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:29">(<argument pos:start="5:13" pos:end="5:18"><expr pos:start="5:13" pos:end="5:18"><literal type="string" pos:start="5:13" pos:end="5:18">"p.in"</literal></expr></argument>,<argument pos:start="5:20" pos:end="5:22"><expr pos:start="5:20" pos:end="5:22"><literal type="string" pos:start="5:20" pos:end="5:22">"r"</literal></expr></argument>,<argument pos:start="5:24" pos:end="5:28"><expr pos:start="5:24" pos:end="5:28"><name pos:start="5:24" pos:end="5:28">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:32"><expr pos:start="6:5" pos:end="6:31"><call pos:start="6:5" pos:end="6:31"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:31">(<argument pos:start="6:13" pos:end="6:19"><expr pos:start="6:13" pos:end="6:19"><literal type="string" pos:start="6:13" pos:end="6:19">"p.out"</literal></expr></argument>,<argument pos:start="6:21" pos:end="6:23"><expr pos:start="6:21" pos:end="6:23"><literal type="string" pos:start="6:21" pos:end="6:23">"w"</literal></expr></argument>,<argument pos:start="6:25" pos:end="6:30"><expr pos:start="6:25" pos:end="6:30"><name pos:start="6:25" pos:end="6:30">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">t</name></decl>,<decl pos:start="7:11" pos:end="7:11"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:11">n</name></decl>,<decl pos:start="7:13" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:13">x</name></decl>,<decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">y</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:11"><expr pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:10">t</name></expr>;</expr_stmt>
    <while pos:start="9:5" pos:end="36:5">while<condition pos:start="9:10" pos:end="9:14">(<expr pos:start="9:11" pos:end="9:13"><name pos:start="9:11" pos:end="9:11">t</name><operator pos:start="9:12" pos:end="9:13">--</operator></expr>)</condition>
    <block pos:start="10:5" pos:end="36:5">{<block_content pos:start="11:9" pos:end="35:20">
        <decl_stmt pos:start="11:9" pos:end="11:18"><decl pos:start="11:9" pos:end="11:17"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">ans</name><init pos:start="11:16" pos:end="11:17">=<expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="12:9" pos:end="12:28"><decl pos:start="12:9" pos:end="12:27"><type pos:start="12:9" pos:end="12:19"><name pos:start="12:9" pos:end="12:19"><name pos:start="12:9" pos:end="12:14">vector</name><argument_list type="generic" pos:start="12:15" pos:end="12:19">&lt;<argument pos:start="12:16" pos:end="12:18"><expr pos:start="12:16" pos:end="12:18"><name pos:start="12:16" pos:end="12:18">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="12:21" pos:end="12:27"><name pos:start="12:21" pos:end="12:21">G</name><index pos:start="12:22" pos:end="12:27">[<expr pos:start="12:23" pos:end="12:26"><literal type="number" pos:start="12:23" pos:end="12:26">1005</literal></expr>]</index></name></decl>;</decl_stmt>        
        <expr_stmt pos:start="13:9" pos:end="13:15"><expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:11">cin</name><operator pos:start="13:12" pos:end="13:13">&gt;&gt;</operator><name pos:start="13:14" pos:end="13:14">n</name></expr>;</expr_stmt>
        <for pos:start="14:9" pos:end="18:9">for<control pos:start="14:12" pos:end="14:29">(<init pos:start="14:13" pos:end="14:20"><decl pos:start="14:13" pos:end="14:19"><type pos:start="14:13" pos:end="14:15"><name pos:start="14:13" pos:end="14:15">int</name></type> <name pos:start="14:17" pos:end="14:17">i</name><init pos:start="14:18" pos:end="14:19">=<expr pos:start="14:19" pos:end="14:19"><literal type="number" pos:start="14:19" pos:end="14:19">1</literal></expr></init></decl>;</init><condition pos:start="14:21" pos:end="14:25"><expr pos:start="14:21" pos:end="14:24"><name pos:start="14:21" pos:end="14:21">i</name><operator pos:start="14:22" pos:end="14:23">&lt;=</operator><name pos:start="14:24" pos:end="14:24">n</name></expr>;</condition><incr pos:start="14:26" pos:end="14:28"><expr pos:start="14:26" pos:end="14:28"><name pos:start="14:26" pos:end="14:26">i</name><operator pos:start="14:27" pos:end="14:28">++</operator></expr></incr>)</control>
        <block pos:start="15:9" pos:end="18:9">{<block_content pos:start="16:13" pos:end="17:30">
            <expr_stmt pos:start="16:13" pos:end="16:22"><expr pos:start="16:13" pos:end="16:21"><name pos:start="16:13" pos:end="16:15">cin</name><operator pos:start="16:16" pos:end="16:17">&gt;&gt;</operator><name pos:start="16:18" pos:end="16:18">x</name><operator pos:start="16:19" pos:end="16:20">&gt;&gt;</operator><name pos:start="16:21" pos:end="16:21">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:30"><expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:13">G</name><index pos:start="17:14" pos:end="17:16">[<expr pos:start="17:15" pos:end="17:15"><name pos:start="17:15" pos:end="17:15">x</name></expr>]</index></name><operator pos:start="17:17" pos:end="17:17">.</operator><call pos:start="17:18" pos:end="17:29"><name pos:start="17:18" pos:end="17:26">push_back</name><argument_list pos:start="17:27" pos:end="17:29">(<argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="19:9" pos:end="34:9">for<control pos:start="19:12" pos:end="19:29">(<init pos:start="19:13" pos:end="19:20"><decl pos:start="19:13" pos:end="19:19"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:17">i</name><init pos:start="19:18" pos:end="19:19">=<expr pos:start="19:19" pos:end="19:19"><literal type="number" pos:start="19:19" pos:end="19:19">1</literal></expr></init></decl>;</init><condition pos:start="19:21" pos:end="19:25"><expr pos:start="19:21" pos:end="19:24"><name pos:start="19:21" pos:end="19:21">i</name><operator pos:start="19:22" pos:end="19:23">&lt;=</operator><name pos:start="19:24" pos:end="19:24">n</name></expr>;</condition><incr pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:26">i</name><operator pos:start="19:27" pos:end="19:28">++</operator></expr></incr>)</control>
        <block pos:start="20:9" pos:end="34:9">{<block_content pos:start="21:13" pos:end="33:13">
            <decl_stmt pos:start="21:13" pos:end="21:34"><decl pos:start="21:13" pos:end="21:29"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:17">h</name><init pos:start="21:18" pos:end="21:29">=<expr pos:start="21:19" pos:end="21:29"><name pos:start="21:19" pos:end="21:22"><name pos:start="21:19" pos:end="21:19">G</name><index pos:start="21:20" pos:end="21:22">[<expr pos:start="21:21" pos:end="21:21"><name pos:start="21:21" pos:end="21:21">i</name></expr>]</index></name><operator pos:start="21:23" pos:end="21:23">.</operator><call pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:27">size</name><argument_list pos:start="21:28" pos:end="21:29">()</argument_list></call></expr></init></decl>,<decl pos:start="21:31" pos:end="21:33"><type ref="prev" pos:start="21:13" pos:end="21:15"/><name pos:start="21:31" pos:end="21:31">k</name><init pos:start="21:32" pos:end="21:33">=<expr pos:start="21:33" pos:end="21:33"><literal type="number" pos:start="21:33" pos:end="21:33">1</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="22:13" pos:end="28:13">for<control pos:start="22:16" pos:end="22:42">(<init pos:start="22:17" pos:end="22:24"><decl pos:start="22:17" pos:end="22:23"><type pos:start="22:17" pos:end="22:19"><name pos:start="22:17" pos:end="22:19">int</name></type> <name pos:start="22:21" pos:end="22:21">j</name><init pos:start="22:22" pos:end="22:23">=<expr pos:start="22:23" pos:end="22:23"><literal type="number" pos:start="22:23" pos:end="22:23">0</literal></expr></init></decl>;</init><condition pos:start="22:25" pos:end="22:38"><expr pos:start="22:25" pos:end="22:37"><name pos:start="22:25" pos:end="22:25">j</name><operator pos:start="22:26" pos:end="22:26">&lt;</operator><name pos:start="22:27" pos:end="22:30"><name pos:start="22:27" pos:end="22:27">G</name><index pos:start="22:28" pos:end="22:30">[<expr pos:start="22:29" pos:end="22:29"><name pos:start="22:29" pos:end="22:29">i</name></expr>]</index></name><operator pos:start="22:31" pos:end="22:31">.</operator><call pos:start="22:32" pos:end="22:37"><name pos:start="22:32" pos:end="22:35">size</name><argument_list pos:start="22:36" pos:end="22:37">()</argument_list></call></expr>;</condition><incr pos:start="22:39" pos:end="22:41"><expr pos:start="22:39" pos:end="22:41"><name pos:start="22:39" pos:end="22:39">j</name><operator pos:start="22:40" pos:end="22:41">++</operator></expr></incr>)</control>
            <block pos:start="23:13" pos:end="28:13">{<block_content pos:start="24:17" pos:end="27:17">
                <if_stmt pos:start="24:17" pos:end="27:17"><if pos:start="24:17" pos:end="27:17">if<condition pos:start="24:19" pos:end="24:39">(<expr pos:start="24:20" pos:end="24:38"><name pos:start="24:20" pos:end="24:20">h</name><operator pos:start="24:21" pos:end="24:21">&lt;</operator><name pos:start="24:22" pos:end="24:31"><name pos:start="24:22" pos:end="24:22">G</name><index pos:start="24:23" pos:end="24:31">[<expr pos:start="24:24" pos:end="24:30"><name pos:start="24:24" pos:end="24:30"><name pos:start="24:24" pos:end="24:24">G</name><index pos:start="24:25" pos:end="24:27">[<expr pos:start="24:26" pos:end="24:26"><name pos:start="24:26" pos:end="24:26">i</name></expr>]</index><index pos:start="24:28" pos:end="24:30">[<expr pos:start="24:29" pos:end="24:29"><name pos:start="24:29" pos:end="24:29">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="24:32" pos:end="24:32">.</operator><call pos:start="24:33" pos:end="24:38"><name pos:start="24:33" pos:end="24:36">size</name><argument_list pos:start="24:37" pos:end="24:38">()</argument_list></call></expr>)</condition>
                <block pos:start="25:17" pos:end="27:17">{<block_content pos:start="26:21" pos:end="26:24">
                    <expr_stmt pos:start="26:21" pos:end="26:24"><expr pos:start="26:21" pos:end="26:23"><name pos:start="26:21" pos:end="26:21">k</name><operator pos:start="26:22" pos:end="26:22">=</operator><literal type="number" pos:start="26:23" pos:end="26:23">0</literal></expr>;</expr_stmt>   
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="29:13" pos:end="33:13"><if pos:start="29:13" pos:end="33:13">if<condition pos:start="29:15" pos:end="29:17">(<expr pos:start="29:16" pos:end="29:16"><name pos:start="29:16" pos:end="29:16">k</name></expr>)</condition> 
            <block pos:start="30:13" pos:end="33:13">{<block_content pos:start="32:17" pos:end="32:22">
                
                <expr_stmt pos:start="32:17" pos:end="32:22"><expr pos:start="32:17" pos:end="32:21"><name pos:start="32:17" pos:end="32:19">ans</name><operator pos:start="32:20" pos:end="32:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="35:9" pos:end="35:20"><expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:12">cout</name><operator pos:start="35:13" pos:end="35:14">&lt;&lt;</operator><name pos:start="35:15" pos:end="35:17">ans</name><operator pos:start="35:18" pos:end="35:18">-</operator><literal type="number" pos:start="35:19" pos:end="35:19">1</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>
</block_content>}</block></function> 

</unit>
