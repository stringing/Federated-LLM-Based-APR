<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/460/460.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:17">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:17">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:17">&lt;vector&gt;</cpp:file></cpp:include>
<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<decl_stmt pos:start="6:1" pos:end="6:15"><decl pos:start="6:1" pos:end="6:14"><type pos:start="6:1" pos:end="6:12"><name pos:start="6:1" pos:end="6:12"><name pos:start="6:1" pos:end="6:6">vector</name> <argument_list type="generic" pos:start="6:8" pos:end="6:12">&lt;<argument pos:start="6:9" pos:end="6:11"><expr pos:start="6:9" pos:end="6:11"><name pos:start="6:9" pos:end="6:11">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:14" pos:end="6:14">a</name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="35:1"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:8">main</name><parameter_list pos:start="7:9" pos:end="7:10">()</parameter_list> <block pos:start="7:12" pos:end="35:1">{<block_content pos:start="8:5" pos:end="34:13">
    <decl_stmt pos:start="8:5" pos:end="8:25"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">s</name></decl>, <decl pos:start="8:12" pos:end="8:12"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:12" pos:end="8:12">x</name></decl>, <decl pos:start="8:15" pos:end="8:15"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:15" pos:end="8:15">n</name></decl>, <decl pos:start="8:18" pos:end="8:24"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:18" pos:end="8:20">sum</name> <init pos:start="8:22" pos:end="8:24">= <expr pos:start="8:24" pos:end="8:24"><literal type="number" pos:start="8:24" pos:end="8:24">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">string</name></type> <name pos:start="9:12" pos:end="9:12">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:13"><expr pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:7">cin</name> <operator pos:start="10:9" pos:end="10:10">&gt;&gt;</operator> <name pos:start="10:12" pos:end="10:12">x</name></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:12"><expr pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:5">x</name> <operator pos:start="11:7" pos:end="11:8">*=</operator> <literal type="number" pos:start="11:10" pos:end="11:11">60</literal></expr>;</expr_stmt>
    <while pos:start="12:5" pos:end="32:5">while <condition pos:start="12:11" pos:end="12:20">(<expr pos:start="12:12" pos:end="12:19"><name pos:start="12:12" pos:end="12:14">cin</name> <operator pos:start="12:16" pos:end="12:17">&gt;&gt;</operator> <name pos:start="12:19" pos:end="12:19">s</name></expr>)</condition> <block pos:start="12:22" pos:end="32:5">{<block_content pos:start="13:9" pos:end="31:9">
        <if_stmt pos:start="13:9" pos:end="31:9"><if pos:start="13:9" pos:end="16:9">if <condition pos:start="13:12" pos:end="13:32">(<expr pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:13">s</name> <operator pos:start="13:15" pos:end="13:16">==</operator> <literal type="string" pos:start="13:18" pos:end="13:31">"tingtingting"</literal></expr>)</condition> <block pos:start="13:34" pos:end="16:9">{<block_content pos:start="14:13" pos:end="15:34">
            <expr_stmt pos:start="14:13" pos:end="14:25"><expr pos:start="14:13" pos:end="14:24"><call pos:start="14:13" pos:end="14:24"><name pos:start="14:13" pos:end="14:22"><name pos:start="14:13" pos:end="14:13">a</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:22">pop_back</name></name><argument_list pos:start="14:23" pos:end="14:24">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:34"><expr pos:start="15:13" pos:end="15:33"><name pos:start="15:13" pos:end="15:15">sum</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:33"><name pos:start="15:19" pos:end="15:19">a</name><index pos:start="15:20" pos:end="15:33">[<expr pos:start="15:21" pos:end="15:32"><call pos:start="15:21" pos:end="15:28"><name pos:start="15:21" pos:end="15:26"><name pos:start="15:21" pos:end="15:21">a</name><operator pos:start="15:22" pos:end="15:22">.</operator><name pos:start="15:23" pos:end="15:26">size</name></name><argument_list pos:start="15:27" pos:end="15:28">()</argument_list></call> <operator pos:start="15:30" pos:end="15:30">-</operator> <literal type="number" pos:start="15:32" pos:end="15:32">1</literal></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="16:11" pos:end="24:9">else if <condition pos:start="16:19" pos:end="16:36">(<expr pos:start="16:20" pos:end="16:35"><name pos:start="16:20" pos:end="16:20">s</name> <operator pos:start="16:22" pos:end="16:22">=</operator> <literal type="string" pos:start="16:24" pos:end="16:35">"kaomianjin"</literal></expr>)</condition> <block pos:start="16:38" pos:end="24:9">{<block_content pos:start="17:13" pos:end="23:21">
            <expr_stmt pos:start="17:13" pos:end="17:21"><expr pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:15">cin</name> <operator pos:start="17:17" pos:end="17:18">&gt;&gt;</operator> <name pos:start="17:20" pos:end="17:20">t</name></expr>;</expr_stmt>
            <if_stmt pos:start="18:13" pos:end="21:13"><if pos:start="18:13" pos:end="21:13">if <condition pos:start="18:16" pos:end="18:48">(<expr pos:start="18:17" pos:end="18:47"><name pos:start="18:17" pos:end="18:19">cin</name> <operator pos:start="18:21" pos:end="18:22">&gt;&gt;</operator> <name pos:start="18:24" pos:end="18:24">t</name> <operator pos:start="18:26" pos:end="18:27">&amp;&amp;</operator> <name pos:start="18:29" pos:end="18:29">t</name> <operator pos:start="18:31" pos:end="18:32">==</operator> <literal type="string" pos:start="18:34" pos:end="18:47">"tingtingting"</literal></expr>)</condition> <block pos:start="18:50" pos:end="21:13">{<block_content pos:start="19:17" pos:end="20:25">
                <expr_stmt pos:start="19:17" pos:end="19:41"><expr pos:start="19:17" pos:end="19:40"><name pos:start="19:17" pos:end="19:20">cout</name> <operator pos:start="19:22" pos:end="19:23">&lt;&lt;</operator> <literal type="string" pos:start="19:25" pos:end="19:32">"Hahaha"</literal> <operator pos:start="19:34" pos:end="19:35">&lt;&lt;</operator> <name pos:start="19:37" pos:end="19:40">endl</name></expr>;</expr_stmt>
                <return pos:start="20:17" pos:end="20:25">return <expr pos:start="20:24" pos:end="20:24"><literal type="number" pos:start="20:24" pos:end="20:24">0</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:47"><expr pos:start="22:13" pos:end="22:46"><name pos:start="22:13" pos:end="22:16">cout</name> <operator pos:start="22:18" pos:end="22:19">&lt;&lt;</operator> <literal type="string" pos:start="22:21" pos:end="22:38">"Congratulations!"</literal> <operator pos:start="22:40" pos:end="22:41">&lt;&lt;</operator> <name pos:start="22:43" pos:end="22:46">endl</name></expr>;</expr_stmt>
            <return pos:start="23:13" pos:end="23:21">return <expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>;</return>
        </block_content>}</block></if> <else pos:start="24:11" pos:end="31:9">else <block pos:start="24:16" pos:end="31:9">{<block_content pos:start="25:13" pos:end="30:29">
            <expr_stmt pos:start="25:13" pos:end="25:21"><expr pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:15">cin</name> <operator pos:start="25:17" pos:end="25:18">&gt;&gt;</operator> <name pos:start="25:20" pos:end="25:20">n</name></expr>;</expr_stmt>
            <expr_stmt pos:start="26:13" pos:end="26:21"><expr pos:start="26:13" pos:end="26:20"><name pos:start="26:13" pos:end="26:15">sum</name> <operator pos:start="26:17" pos:end="26:18">+=</operator> <name pos:start="26:20" pos:end="26:20">n</name></expr>;</expr_stmt>
            <if_stmt pos:start="27:13" pos:end="29:13"><if pos:start="27:13" pos:end="29:13">if <condition pos:start="27:16" pos:end="27:25">(<expr pos:start="27:17" pos:end="27:24"><name pos:start="27:17" pos:end="27:19">sum</name> <operator pos:start="27:21" pos:end="27:22">&gt;=</operator> <name pos:start="27:24" pos:end="27:24">x</name></expr>)</condition> <block pos:start="27:27" pos:end="29:13">{<block_content pos:start="28:17" pos:end="28:22">
                <break pos:start="28:17" pos:end="28:22">break;</break>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="30:13" pos:end="30:29"><expr pos:start="30:13" pos:end="30:28"><call pos:start="30:13" pos:end="30:28"><name pos:start="30:13" pos:end="30:23"><name pos:start="30:13" pos:end="30:13">a</name><operator pos:start="30:14" pos:end="30:14">.</operator><name pos:start="30:15" pos:end="30:23">push_back</name></name><argument_list pos:start="30:24" pos:end="30:28">(<argument pos:start="30:25" pos:end="30:27"><expr pos:start="30:25" pos:end="30:27"><name pos:start="30:25" pos:end="30:27">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:8">cout</name> <operator pos:start="33:10" pos:end="33:11">&lt;&lt;</operator> <literal type="string" pos:start="33:13" pos:end="33:30">"Congratulations!"</literal> <operator pos:start="33:32" pos:end="33:33">&lt;&lt;</operator> <name pos:start="33:35" pos:end="33:38">endl</name></expr>;</expr_stmt>
    <return pos:start="34:5" pos:end="34:13">return <expr pos:start="34:12" pos:end="34:12"><literal type="number" pos:start="34:12" pos:end="34:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
