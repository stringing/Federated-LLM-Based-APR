<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/827/827.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="13:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">cnt</name><parameter_list pos:start="3:8" pos:end="3:17">(<parameter pos:start="3:9" pos:end="3:16"><decl pos:start="3:9" pos:end="3:16"><type pos:start="3:9" pos:end="3:14"><name pos:start="3:9" pos:end="3:14">string</name></type> <name pos:start="3:16" pos:end="3:16">s</name></decl></parameter>)</parameter_list><block pos:start="3:18" pos:end="13:1">{<block_content pos:start="4:5" pos:end="12:13">
    <if_stmt pos:start="4:5" pos:end="7:5"><if pos:start="4:5" pos:end="7:5">if<condition pos:start="4:7" pos:end="4:49">(<expr pos:start="4:8" pos:end="4:48"><name pos:start="4:8" pos:end="4:11"><name pos:start="4:8" pos:end="4:8">s</name><index pos:start="4:9" pos:end="4:11">[<expr pos:start="4:10" pos:end="4:10"><literal type="number" pos:start="4:10" pos:end="4:10">0</literal></expr>]</index></name> <operator pos:start="4:13" pos:end="4:14">==</operator> <literal type="char" pos:start="4:16" pos:end="4:18">'1'</literal> <operator pos:start="4:20" pos:end="4:21">&amp;&amp;</operator> <name pos:start="4:23" pos:end="4:26"><name pos:start="4:23" pos:end="4:23">s</name><index pos:start="4:24" pos:end="4:26">[<expr pos:start="4:25" pos:end="4:25"><literal type="number" pos:start="4:25" pos:end="4:25">1</literal></expr>]</index></name> <operator pos:start="4:28" pos:end="4:29">==</operator> <literal type="char" pos:start="4:31" pos:end="4:33">'1'</literal> <operator pos:start="4:35" pos:end="4:36">&amp;&amp;</operator> <name pos:start="4:38" pos:end="4:41"><name pos:start="4:38" pos:end="4:38">s</name><index pos:start="4:39" pos:end="4:41">[<expr pos:start="4:40" pos:end="4:40"><literal type="number" pos:start="4:40" pos:end="4:40">2</literal></expr>]</index></name> <operator pos:start="4:43" pos:end="4:44">==</operator> <literal type="char" pos:start="4:46" pos:end="4:48">'0'</literal></expr>)</condition><block pos:start="4:50" pos:end="7:5">{<block_content pos:start="5:9" pos:end="6:17">
        <expr_stmt pos:start="5:9" pos:end="5:24"><expr pos:start="5:9" pos:end="5:23"><name pos:start="5:9" pos:end="5:12">cout</name> <operator pos:start="5:14" pos:end="5:15">&lt;&lt;</operator> <literal type="string" pos:start="5:17" pos:end="5:23">"Error"</literal></expr>;</expr_stmt>
        <return pos:start="6:9" pos:end="6:17">return <expr pos:start="6:16" pos:end="6:16"><literal type="number" pos:start="6:16" pos:end="6:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="8:5" pos:end="11:5"><if pos:start="8:5" pos:end="11:5">if<condition pos:start="8:7" pos:end="8:49">(<expr pos:start="8:8" pos:end="8:48"><name pos:start="8:8" pos:end="8:11"><name pos:start="8:8" pos:end="8:8">s</name><index pos:start="8:9" pos:end="8:11">[<expr pos:start="8:10" pos:end="8:10"><literal type="number" pos:start="8:10" pos:end="8:10">0</literal></expr>]</index></name> <operator pos:start="8:13" pos:end="8:14">==</operator> <literal type="char" pos:start="8:16" pos:end="8:18">'1'</literal> <operator pos:start="8:20" pos:end="8:21">&amp;&amp;</operator> <name pos:start="8:23" pos:end="8:26"><name pos:start="8:23" pos:end="8:23">s</name><index pos:start="8:24" pos:end="8:26">[<expr pos:start="8:25" pos:end="8:25"><literal type="number" pos:start="8:25" pos:end="8:25">1</literal></expr>]</index></name> <operator pos:start="8:28" pos:end="8:29">==</operator> <literal type="char" pos:start="8:31" pos:end="8:33">'0'</literal> <operator pos:start="8:35" pos:end="8:36">&amp;&amp;</operator> <name pos:start="8:38" pos:end="8:41"><name pos:start="8:38" pos:end="8:38">s</name><index pos:start="8:39" pos:end="8:41">[<expr pos:start="8:40" pos:end="8:40"><literal type="number" pos:start="8:40" pos:end="8:40">2</literal></expr>]</index></name> <operator pos:start="8:43" pos:end="8:44">==</operator> <literal type="char" pos:start="8:46" pos:end="8:48">'0'</literal></expr>)</condition><block pos:start="8:50" pos:end="11:5">{<block_content pos:start="9:9" pos:end="10:17">
        <expr_stmt pos:start="9:9" pos:end="9:24"><expr pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:12">cout</name> <operator pos:start="9:14" pos:end="9:15">&lt;&lt;</operator> <literal type="string" pos:start="9:17" pos:end="9:23">"Error"</literal></expr>;</expr_stmt>
        <return pos:start="10:9" pos:end="10:17">return <expr pos:start="10:16" pos:end="10:16"><literal type="number" pos:start="10:16" pos:end="10:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="12:5" pos:end="12:13">return <expr pos:start="12:12" pos:end="12:12"><literal type="number" pos:start="12:12" pos:end="12:12">1</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="14:1" pos:end="36:1"><type pos:start="14:1" pos:end="14:3"><name pos:start="14:1" pos:end="14:3">int</name></type> <name pos:start="14:5" pos:end="14:8">main</name> <parameter_list pos:start="14:10" pos:end="14:11">()</parameter_list><block pos:start="14:12" pos:end="36:1">{<block_content pos:start="15:5" pos:end="35:13">
    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><call pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:11">freopen</name><argument_list pos:start="15:12" pos:end="15:39">(<argument pos:start="15:13" pos:end="15:28"><expr pos:start="15:13" pos:end="15:28"><literal type="string" pos:start="15:13" pos:end="15:28">"information.in"</literal></expr></argument>,<argument pos:start="15:30" pos:end="15:32"><expr pos:start="15:30" pos:end="15:32"><literal type="string" pos:start="15:30" pos:end="15:32">"r"</literal></expr></argument>,<argument pos:start="15:34" pos:end="15:38"><expr pos:start="15:34" pos:end="15:38"><name pos:start="15:34" pos:end="15:38">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:42"><expr pos:start="16:5" pos:end="16:41"><call pos:start="16:5" pos:end="16:41"><name pos:start="16:5" pos:end="16:11">freopen</name><argument_list pos:start="16:12" pos:end="16:41">(<argument pos:start="16:13" pos:end="16:29"><expr pos:start="16:13" pos:end="16:29"><literal type="string" pos:start="16:13" pos:end="16:29">"information.out"</literal></expr></argument>,<argument pos:start="16:31" pos:end="16:33"><expr pos:start="16:31" pos:end="16:33"><literal type="string" pos:start="16:31" pos:end="16:33">"w"</literal></expr></argument>,<argument pos:start="16:35" pos:end="16:40"><expr pos:start="16:35" pos:end="16:40"><name pos:start="16:35" pos:end="16:40">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="17:5" pos:end="17:13"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">string</name></type> <name pos:start="17:12" pos:end="17:12">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:13"><expr pos:start="18:5" pos:end="18:12"><name pos:start="18:5" pos:end="18:7">cin</name> <operator pos:start="18:9" pos:end="18:10">&gt;&gt;</operator> <name pos:start="18:12" pos:end="18:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">a</name> <init pos:start="19:11" pos:end="19:20">= <expr pos:start="19:13" pos:end="19:20"><call pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:13">n</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:18">size</name></name><argument_list pos:start="19:19" pos:end="19:20">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="20:5" pos:end="20:14"><decl pos:start="20:5" pos:end="20:13"><type pos:start="20:5" pos:end="20:8"><name pos:start="20:5" pos:end="20:8">char</name></type> <name pos:start="20:10" pos:end="20:13"><name pos:start="20:10" pos:end="20:10">c</name><index pos:start="20:11" pos:end="20:13">[<expr pos:start="20:12" pos:end="20:12"><name pos:start="20:12" pos:end="20:12">a</name></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">string</name></type> <name pos:start="21:12" pos:end="21:12">x</name> <init pos:start="21:14" pos:end="21:17">= <expr pos:start="21:16" pos:end="21:17"><literal type="string" pos:start="21:16" pos:end="21:17">""</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="22:5" pos:end="33:5">for<control pos:start="22:8" pos:end="22:31">(<init pos:start="22:9" pos:end="22:18"><decl pos:start="22:9" pos:end="22:17"><type pos:start="22:9" pos:end="22:11"><name pos:start="22:9" pos:end="22:11">int</name></type> <name pos:start="22:13" pos:end="22:13">i</name> <init pos:start="22:15" pos:end="22:17">= <expr pos:start="22:17" pos:end="22:17"><literal type="number" pos:start="22:17" pos:end="22:17">1</literal></expr></init></decl>;</init> <condition pos:start="22:20" pos:end="22:26"><expr pos:start="22:20" pos:end="22:25"><name pos:start="22:20" pos:end="22:20">i</name> <operator pos:start="22:22" pos:end="22:23">&lt;=</operator> <name pos:start="22:25" pos:end="22:25">a</name></expr>;</condition> <incr pos:start="22:28" pos:end="22:30"><expr pos:start="22:28" pos:end="22:30"><name pos:start="22:28" pos:end="22:28">i</name><operator pos:start="22:29" pos:end="22:30">++</operator></expr></incr>)</control> <block pos:start="22:33" pos:end="33:5">{<block_content pos:start="23:9" pos:end="32:9">
        <if_stmt pos:start="23:9" pos:end="26:9"><if pos:start="23:9" pos:end="26:9">if<condition pos:start="23:11" pos:end="23:22">(<expr pos:start="23:12" pos:end="23:21"><name pos:start="23:12" pos:end="23:12">a</name> <operator pos:start="23:14" pos:end="23:14">%</operator> <literal type="number" pos:start="23:16" pos:end="23:16">8</literal> <operator pos:start="23:18" pos:end="23:19">!=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal></expr>)</condition><block pos:start="23:23" pos:end="26:9">{<block_content pos:start="24:13" pos:end="25:21">
            <expr_stmt pos:start="24:13" pos:end="24:28"><expr pos:start="24:13" pos:end="24:27"><name pos:start="24:13" pos:end="24:16">cout</name> <operator pos:start="24:18" pos:end="24:19">&lt;&lt;</operator> <literal type="string" pos:start="24:21" pos:end="24:27">"Error"</literal></expr>;</expr_stmt>
            <return pos:start="25:13" pos:end="25:21">return <expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="27:9" pos:end="27:20"><expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:12"><name pos:start="27:9" pos:end="27:9">c</name><index pos:start="27:10" pos:end="27:12">[<expr pos:start="27:11" pos:end="27:11"><name pos:start="27:11" pos:end="27:11">i</name></expr>]</index></name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:16">n</name><index pos:start="27:17" pos:end="27:19">[<expr pos:start="27:18" pos:end="27:18"><name pos:start="27:18" pos:end="27:18">i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:18"><expr pos:start="28:9" pos:end="28:17"><name pos:start="28:9" pos:end="28:9">x</name> <operator pos:start="28:11" pos:end="28:12">+=</operator> <name pos:start="28:14" pos:end="28:17"><name pos:start="28:14" pos:end="28:14">c</name><index pos:start="28:15" pos:end="28:17">[<expr pos:start="28:16" pos:end="28:16"><name pos:start="28:16" pos:end="28:16">i</name></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="29:9" pos:end="32:9"><if pos:start="29:9" pos:end="32:9">if<condition pos:start="29:11" pos:end="29:22">(<expr pos:start="29:12" pos:end="29:21"><name pos:start="29:12" pos:end="29:12">i</name> <operator pos:start="29:14" pos:end="29:14">%</operator> <literal type="number" pos:start="29:16" pos:end="29:16">8</literal> <operator pos:start="29:18" pos:end="29:19">==</operator> <literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr>)</condition> <block pos:start="29:24" pos:end="32:9">{<block_content pos:start="30:13" pos:end="31:30">
            <if_stmt pos:start="30:13" pos:end="31:30"><if pos:start="30:13" pos:end="31:30">if<condition pos:start="30:15" pos:end="30:25">(<expr pos:start="30:16" pos:end="30:24"><name pos:start="30:16" pos:end="30:19"><name pos:start="30:16" pos:end="30:16">n</name><index pos:start="30:17" pos:end="30:19">[<expr pos:start="30:18" pos:end="30:18"><literal type="number" pos:start="30:18" pos:end="30:18">0</literal></expr>]</index></name> <operator pos:start="30:21" pos:end="30:22">==</operator> <literal type="number" pos:start="30:24" pos:end="30:24">0</literal></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:30"><block_content pos:start="31:17" pos:end="31:30">
                <expr_stmt pos:start="31:17" pos:end="31:30"><expr pos:start="31:17" pos:end="31:29"><call pos:start="31:17" pos:end="31:29"><name pos:start="31:17" pos:end="31:20">stoi</name><argument_list pos:start="31:21" pos:end="31:29">(<argument pos:start="31:22" pos:end="31:22"><expr pos:start="31:22" pos:end="31:22"><name pos:start="31:22" pos:end="31:22">x</name></expr></argument>, <argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr></argument>, <argument pos:start="31:28" pos:end="31:28"><expr pos:start="31:28" pos:end="31:28"><literal type="number" pos:start="31:28" pos:end="31:28">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="34:5" pos:end="34:14"><expr pos:start="34:5" pos:end="34:13"><name pos:start="34:5" pos:end="34:8">cout</name> <operator pos:start="34:10" pos:end="34:11">&lt;&lt;</operator> <name pos:start="34:13" pos:end="34:13">x</name></expr>;</expr_stmt>
    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
