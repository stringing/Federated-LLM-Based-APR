<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/177/177.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="31:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list> <block pos:start="3:12" pos:end="31:1">{<block_content pos:start="4:5" pos:end="30:13">
    <expr_stmt pos:start="4:5" pos:end="4:34"><expr pos:start="4:5" pos:end="4:33"><call pos:start="4:5" pos:end="4:33"><name pos:start="4:5" pos:end="4:11">freopen</name><argument_list pos:start="4:12" pos:end="4:33">(<argument pos:start="4:13" pos:end="4:20"><expr pos:start="4:13" pos:end="4:20"><literal type="string" pos:start="4:13" pos:end="4:20">"zip.in"</literal></expr></argument>, <argument pos:start="4:23" pos:end="4:25"><expr pos:start="4:23" pos:end="4:25"><literal type="string" pos:start="4:23" pos:end="4:25">"r"</literal></expr></argument>, <argument pos:start="4:28" pos:end="4:32"><expr pos:start="4:28" pos:end="4:32"><name pos:start="4:28" pos:end="4:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:36"><expr pos:start="5:5" pos:end="5:35"><call pos:start="5:5" pos:end="5:35"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:35">(<argument pos:start="5:13" pos:end="5:21"><expr pos:start="5:13" pos:end="5:21"><literal type="string" pos:start="5:13" pos:end="5:21">"zip.out"</literal></expr></argument>, <argument pos:start="5:24" pos:end="5:26"><expr pos:start="5:24" pos:end="5:26"><literal type="string" pos:start="5:24" pos:end="5:26">"w"</literal></expr></argument>, <argument pos:start="5:29" pos:end="5:34"><expr pos:start="5:29" pos:end="5:34"><name pos:start="5:29" pos:end="5:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:21"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:17"><name pos:start="6:12" pos:end="6:12">m</name><index pos:start="6:13" pos:end="6:17">[<expr pos:start="6:14" pos:end="6:16"><literal type="number" pos:start="6:14" pos:end="6:16">205</literal></expr>]</index></name></decl>, <decl pos:start="6:20" pos:end="6:20"><type ref="prev" pos:start="6:5" pos:end="6:10"/><name pos:start="6:20" pos:end="6:20">k</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">no</name> <init pos:start="7:12" pos:end="7:14">= <expr pos:start="7:14" pos:end="7:14"><literal type="number" pos:start="7:14" pos:end="7:14">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:17"><decl pos:start="8:5" pos:end="8:16"><type pos:start="8:5" pos:end="8:8"><name pos:start="8:5" pos:end="8:8">char</name></type> <name pos:start="8:10" pos:end="8:10">p</name> <init pos:start="8:12" pos:end="8:16">= <expr pos:start="8:14" pos:end="8:16"><literal type="char" pos:start="8:14" pos:end="8:16">'0'</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:16"><expr pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:7">cin</name> <operator pos:start="9:9" pos:end="9:10">&gt;&gt;</operator> <name pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:12">m</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:14"><expr pos:start="10:5" pos:end="10:13"><name pos:start="10:5" pos:end="10:5">k</name> <operator pos:start="10:7" pos:end="10:8">+=</operator> <name pos:start="10:10" pos:end="10:13"><name pos:start="10:10" pos:end="10:10">m</name><index pos:start="10:11" pos:end="10:13">[<expr pos:start="10:12" pos:end="10:12"><literal type="number" pos:start="10:12" pos:end="10:12">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <for pos:start="11:5" pos:end="14:5">for<control pos:start="11:8" pos:end="11:38">(<init pos:start="11:9" pos:end="11:18"><decl pos:start="11:9" pos:end="11:17"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr></init></decl>;</init><condition pos:start="11:19" pos:end="11:34"><expr pos:start="11:19" pos:end="11:33"><name pos:start="11:19" pos:end="11:19">i</name> <operator pos:start="11:21" pos:end="11:21">&lt;</operator> <name pos:start="11:23" pos:end="11:26"><name pos:start="11:23" pos:end="11:23">m</name><index pos:start="11:24" pos:end="11:26">[<expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr>]</index></name><operator pos:start="11:27" pos:end="11:27">.</operator><call pos:start="11:28" pos:end="11:33"><name pos:start="11:28" pos:end="11:31">size</name><argument_list pos:start="11:32" pos:end="11:33">()</argument_list></call></expr>;</condition><incr pos:start="11:35" pos:end="11:37"><expr pos:start="11:35" pos:end="11:37"><name pos:start="11:35" pos:end="11:35">i</name><operator pos:start="11:36" pos:end="11:37">++</operator></expr></incr>)</control><block pos:start="11:39" pos:end="14:5">{<block_content pos:start="12:9" pos:end="13:18">
        <expr_stmt pos:start="12:9" pos:end="12:20"><expr pos:start="12:9" pos:end="12:19"><name pos:start="12:9" pos:end="12:11">cin</name> <operator pos:start="12:13" pos:end="12:14">&gt;&gt;</operator> <name pos:start="12:16" pos:end="12:19"><name pos:start="12:16" pos:end="12:16">m</name><index pos:start="12:17" pos:end="12:19">[<expr pos:start="12:18" pos:end="12:18"><name pos:start="12:18" pos:end="12:18">i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:18"><expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:9">k</name> <operator pos:start="13:11" pos:end="13:12">+=</operator> <name pos:start="13:14" pos:end="13:17"><name pos:start="13:14" pos:end="13:14">m</name><index pos:start="13:15" pos:end="13:17">[<expr pos:start="13:16" pos:end="13:16"><name pos:start="13:16" pos:end="13:16">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:8">cout</name> <operator pos:start="15:10" pos:end="15:11">&lt;&lt;</operator> <name pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:13">m</name><index pos:start="15:14" pos:end="15:16">[<expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>]</index></name><operator pos:start="15:17" pos:end="15:17">.</operator><call pos:start="15:18" pos:end="15:23"><name pos:start="15:18" pos:end="15:21">size</name><argument_list pos:start="15:22" pos:end="15:23">()</argument_list></call> <operator pos:start="15:25" pos:end="15:26">&lt;&lt;</operator> <literal type="string" pos:start="15:28" pos:end="15:30">" "</literal></expr>;</expr_stmt>
    <for pos:start="16:5" pos:end="28:5">for<control pos:start="16:8" pos:end="16:35">(<init pos:start="16:9" pos:end="16:18"><decl pos:start="16:9" pos:end="16:17"><type pos:start="16:9" pos:end="16:11"><name pos:start="16:9" pos:end="16:11">int</name></type> <name pos:start="16:13" pos:end="16:13">i</name> <init pos:start="16:15" pos:end="16:17">= <expr pos:start="16:17" pos:end="16:17"><literal type="number" pos:start="16:17" pos:end="16:17">0</literal></expr></init></decl>;</init><condition pos:start="16:19" pos:end="16:31"><expr pos:start="16:19" pos:end="16:30"><name pos:start="16:19" pos:end="16:19">i</name> <operator pos:start="16:21" pos:end="16:21">&lt;</operator> <call pos:start="16:23" pos:end="16:30"><name pos:start="16:23" pos:end="16:28"><name pos:start="16:23" pos:end="16:23">k</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:28">size</name></name><argument_list pos:start="16:29" pos:end="16:30">()</argument_list></call></expr>;</condition><incr pos:start="16:32" pos:end="16:34"><expr pos:start="16:32" pos:end="16:34"><name pos:start="16:32" pos:end="16:32">i</name><operator pos:start="16:33" pos:end="16:34">++</operator></expr></incr>)</control><block pos:start="16:36" pos:end="28:5">{<block_content pos:start="17:9" pos:end="27:9">
        <if_stmt pos:start="17:9" pos:end="27:9"><if pos:start="17:9" pos:end="19:9">if<condition pos:start="17:11" pos:end="17:21">(<expr pos:start="17:12" pos:end="17:20"><name pos:start="17:12" pos:end="17:15"><name pos:start="17:12" pos:end="17:12">k</name><index pos:start="17:13" pos:end="17:15">[<expr pos:start="17:14" pos:end="17:14"><name pos:start="17:14" pos:end="17:14">i</name></expr>]</index></name> <operator pos:start="17:17" pos:end="17:18">==</operator> <name pos:start="17:20" pos:end="17:20">p</name></expr>)</condition><block pos:start="17:22" pos:end="19:9">{<block_content pos:start="18:13" pos:end="18:17">
            <expr_stmt pos:start="18:13" pos:end="18:17"><expr pos:start="18:13" pos:end="18:16"><name pos:start="18:13" pos:end="18:14">no</name><operator pos:start="18:15" pos:end="18:16">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="19:11" pos:end="27:9">else <block pos:start="19:16" pos:end="27:9">{<block_content pos:start="20:13" pos:end="26:19">
            <expr_stmt pos:start="20:13" pos:end="20:30"><expr pos:start="20:13" pos:end="20:29"><name pos:start="20:13" pos:end="20:16">cout</name> <operator pos:start="20:18" pos:end="20:19">&lt;&lt;</operator> <name pos:start="20:21" pos:end="20:22">no</name> <operator pos:start="20:24" pos:end="20:25">&lt;&lt;</operator> <literal type="string" pos:start="20:27" pos:end="20:29">" "</literal></expr>;</expr_stmt>
            <if_stmt pos:start="21:13" pos:end="25:13"><if pos:start="21:13" pos:end="23:13">if<condition pos:start="21:15" pos:end="21:24">(<expr pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:16">p</name> <operator pos:start="21:18" pos:end="21:19">==</operator> <literal type="char" pos:start="21:21" pos:end="21:23">'0'</literal></expr>)</condition><block pos:start="21:25" pos:end="23:13">{<block_content pos:start="22:17" pos:end="22:24">
                <expr_stmt pos:start="22:17" pos:end="22:24"><expr pos:start="22:17" pos:end="22:23"><name pos:start="22:17" pos:end="22:17">p</name> <operator pos:start="22:19" pos:end="22:19">=</operator> <literal type="char" pos:start="22:21" pos:end="22:23">'1'</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="23:15" pos:end="25:13">else <block pos:start="23:20" pos:end="25:13">{<block_content pos:start="24:17" pos:end="24:24">
                <expr_stmt pos:start="24:17" pos:end="24:24"><expr pos:start="24:17" pos:end="24:23"><name pos:start="24:17" pos:end="24:17">p</name> <operator pos:start="24:19" pos:end="24:19">=</operator> <literal type="char" pos:start="24:21" pos:end="24:23">'0'</literal></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
            <expr_stmt pos:start="26:13" pos:end="26:19"><expr pos:start="26:13" pos:end="26:18"><name pos:start="26:13" pos:end="26:14">no</name> <operator pos:start="26:16" pos:end="26:16">=</operator> <literal type="number" pos:start="26:18" pos:end="26:18">1</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="29:5" pos:end="29:15"><expr pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:8">cout</name> <operator pos:start="29:10" pos:end="29:11">&lt;&lt;</operator> <name pos:start="29:13" pos:end="29:14">no</name></expr>;</expr_stmt>
    <return pos:start="30:5" pos:end="30:13">return <expr pos:start="30:12" pos:end="30:12"><literal type="number" pos:start="30:12" pos:end="30:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
