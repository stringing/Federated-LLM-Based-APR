<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/751/751.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;vector&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>

<function pos:start="5:1" pos:end="27:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list> <block pos:start="5:12" pos:end="27:1">{<block_content pos:start="6:5" pos:end="26:13">
    <decl_stmt pos:start="6:5" pos:end="6:24"><decl pos:start="6:5" pos:end="6:23"><type pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:10">vector</name><argument_list type="generic" pos:start="6:11" pos:end="6:18">&lt;<argument pos:start="6:12" pos:end="6:17"><expr pos:start="6:12" pos:end="6:17"><name pos:start="6:12" pos:end="6:17">string</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:20" pos:end="6:23">name</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:10">vector</name><argument_list type="generic" pos:start="7:11" pos:end="7:15">&lt;<argument pos:start="7:12" pos:end="7:14"><expr pos:start="7:12" pos:end="7:14"><name pos:start="7:12" pos:end="7:14">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="7:17" pos:end="7:19">min</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:18"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">t</name></decl>,<decl pos:start="8:11" pos:end="8:17"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:11" pos:end="8:13">tot</name> <init pos:start="8:15" pos:end="8:17">= <expr pos:start="8:17" pos:end="8:17"><literal type="number" pos:start="8:17" pos:end="8:17">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:13"><expr pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:7">cin</name> <operator pos:start="9:9" pos:end="9:10">&gt;&gt;</operator> <name pos:start="9:12" pos:end="9:12">t</name></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:12"><expr pos:start="10:5" pos:end="10:11"><name pos:start="10:5" pos:end="10:5">t</name> <operator pos:start="10:7" pos:end="10:8">*=</operator> <literal type="number" pos:start="10:10" pos:end="10:11">60</literal></expr>;</expr_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">string</name></type> <name pos:start="11:12" pos:end="11:12">x</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:14"><decl pos:start="12:5" pos:end="12:13"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:9">i</name> <init pos:start="12:11" pos:end="12:13">= <expr pos:start="12:13" pos:end="12:13"><literal type="number" pos:start="12:13" pos:end="12:13">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="13:5" pos:end="18:5">while<condition pos:start="13:10" pos:end="13:19">(<expr pos:start="13:11" pos:end="13:18"><name pos:start="13:11" pos:end="13:13">cin</name> <operator pos:start="13:15" pos:end="13:16">&gt;&gt;</operator> <name pos:start="13:18" pos:end="13:18">x</name></expr>)</condition> <block pos:start="13:21" pos:end="18:5">{<block_content pos:start="14:9" pos:end="17:27">
        <expr_stmt pos:start="14:9" pos:end="14:26"><expr pos:start="14:9" pos:end="14:25"><call pos:start="14:9" pos:end="14:25"><name pos:start="14:9" pos:end="14:22"><name pos:start="14:9" pos:end="14:12">name</name><operator pos:start="14:13" pos:end="14:13">.</operator><name pos:start="14:14" pos:end="14:22">push_back</name></name><argument_list pos:start="14:23" pos:end="14:25">(<argument pos:start="14:24" pos:end="14:24"><expr pos:start="14:24" pos:end="14:24"><name pos:start="14:24" pos:end="14:24">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    
        <decl_stmt pos:start="15:9" pos:end="15:17"><decl pos:start="15:9" pos:end="15:16"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:16">time</name></decl>;</decl_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:20"><expr pos:start="16:9" pos:end="16:19"><name pos:start="16:9" pos:end="16:11">cin</name> <operator pos:start="16:13" pos:end="16:14">&gt;&gt;</operator> <name pos:start="16:16" pos:end="16:19">time</name></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><call pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:11">min</name><operator pos:start="17:12" pos:end="17:12">.</operator><name pos:start="17:13" pos:end="17:21">push_back</name></name><argument_list pos:start="17:22" pos:end="17:26">(<argument pos:start="17:23" pos:end="17:25"><expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:25">min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <for pos:start="19:5" pos:end="25:5">for<control pos:start="19:8" pos:end="19:38">(<init pos:start="19:9" pos:end="19:18"><decl pos:start="19:9" pos:end="19:17"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">j</name> <init pos:start="19:15" pos:end="19:17">= <expr pos:start="19:17" pos:end="19:17"><literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr></init></decl>;</init><condition pos:start="19:19" pos:end="19:34"><expr pos:start="19:19" pos:end="19:33"><name pos:start="19:19" pos:end="19:19">j</name> <operator pos:start="19:21" pos:end="19:21">&lt;</operator> <call pos:start="19:23" pos:end="19:33"><name pos:start="19:23" pos:end="19:31"><name pos:start="19:23" pos:end="19:26">name</name><operator pos:start="19:27" pos:end="19:27">.</operator><name pos:start="19:28" pos:end="19:31">size</name></name><argument_list pos:start="19:32" pos:end="19:33">()</argument_list></call></expr>;</condition><incr pos:start="19:35" pos:end="19:37"><expr pos:start="19:35" pos:end="19:37"><name pos:start="19:35" pos:end="19:35">j</name><operator pos:start="19:36" pos:end="19:37">++</operator></expr></incr>)</control> <block pos:start="19:40" pos:end="25:5">{<block_content pos:start="20:9" pos:end="24:9">
        <if_stmt pos:start="20:9" pos:end="24:9"><if pos:start="20:9" pos:end="24:9">if<condition pos:start="20:11" pos:end="20:29">(<expr pos:start="20:12" pos:end="20:28"><name pos:start="20:12" pos:end="20:12">x</name> <operator pos:start="20:14" pos:end="20:15">==</operator> <literal type="string" pos:start="20:17" pos:end="20:28">"kaomianjin"</literal></expr>)</condition> <block pos:start="20:31" pos:end="24:9">{<block_content pos:start="21:13" pos:end="23:42">
            <if_stmt pos:start="21:13" pos:end="23:42"><if pos:start="21:13" pos:end="21:62">if<condition pos:start="21:15" pos:end="21:43">(<expr pos:start="21:16" pos:end="21:42"><name pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:19">name</name><index pos:start="21:20" pos:end="21:24">[<expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:21">i</name><operator pos:start="21:22" pos:end="21:22">+</operator><literal type="number" pos:start="21:23" pos:end="21:23">1</literal></expr>]</index></name> <operator pos:start="21:26" pos:end="21:27">==</operator> <literal type="string" pos:start="21:29" pos:end="21:42">"tingtingting"</literal></expr>)</condition><block type="pseudo" pos:start="21:45" pos:end="21:62"><block_content pos:start="21:45" pos:end="21:62"> <expr_stmt pos:start="21:45" pos:end="21:62"><expr pos:start="21:45" pos:end="21:61"><name pos:start="21:45" pos:end="21:48">cout</name> <operator pos:start="21:50" pos:end="21:51">&lt;&lt;</operator> <literal type="string" pos:start="21:53" pos:end="21:61">"hahaha."</literal></expr>;</expr_stmt></block_content></block></if>
            <if type="elseif" pos:start="22:13" pos:end="22:57">else if<condition pos:start="22:20" pos:end="22:29">(<expr pos:start="22:21" pos:end="22:28"><name pos:start="22:21" pos:end="22:23">tot</name> <operator pos:start="22:25" pos:end="22:26">&lt;=</operator> <name pos:start="22:28" pos:end="22:28">t</name></expr>)</condition><block type="pseudo" pos:start="22:31" pos:end="22:57"><block_content pos:start="22:31" pos:end="22:57"> <expr_stmt pos:start="22:31" pos:end="22:57"><expr pos:start="22:31" pos:end="22:56"><name pos:start="22:31" pos:end="22:34">cout</name> <operator pos:start="22:36" pos:end="22:37">&lt;&lt;</operator> <literal type="string" pos:start="22:39" pos:end="22:56">"Congratulations!"</literal></expr>;</expr_stmt></block_content></block></if>            
            <else pos:start="23:13" pos:end="23:42">else<block type="pseudo" pos:start="23:18" pos:end="23:42"><block_content pos:start="23:18" pos:end="23:42"> <expr_stmt pos:start="23:18" pos:end="23:42"><expr pos:start="23:18" pos:end="23:41"><name pos:start="23:18" pos:end="23:21">cout</name> <operator pos:start="23:23" pos:end="23:24">&lt;&lt;</operator> <literal type="string" pos:start="23:26" pos:end="23:41">"Unfortunately."</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>           
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="26:5" pos:end="26:13">return <expr pos:start="26:12" pos:end="26:12"><literal type="number" pos:start="26:12" pos:end="26:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
