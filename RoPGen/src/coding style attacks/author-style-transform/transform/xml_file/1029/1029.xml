<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1029/1029.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:16"><decl pos:start="3:1" pos:end="3:9"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:9"><name pos:start="3:5" pos:end="3:5">m</name><index pos:start="3:6" pos:end="3:9">[<expr pos:start="3:7" pos:end="3:8"><literal type="number" pos:start="3:7" pos:end="3:8">35</literal></expr>]</index></name></decl>,<decl pos:start="3:11" pos:end="3:15"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:11" pos:end="3:15"><name pos:start="3:11" pos:end="3:11">b</name><index pos:start="3:12" pos:end="3:15">[<expr pos:start="3:13" pos:end="3:14"><literal type="number" pos:start="3:13" pos:end="3:14">35</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:28"><decl pos:start="4:1" pos:end="4:15"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:15"><name pos:start="4:5" pos:end="4:9">treel</name><index pos:start="4:10" pos:end="4:15">[<expr pos:start="4:11" pos:end="4:14"><literal type="number" pos:start="4:11" pos:end="4:14">1005</literal></expr>]</index></name></decl>,<decl pos:start="4:17" pos:end="4:27"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:17" pos:end="4:27"><name pos:start="4:17" pos:end="4:21">treer</name><index pos:start="4:22" pos:end="4:27">[<expr pos:start="4:23" pos:end="4:26"><literal type="number" pos:start="4:23" pos:end="4:26">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:15"><decl pos:start="5:1" pos:end="5:14"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:8">tree</name><index pos:start="5:9" pos:end="5:14">[<expr pos:start="5:10" pos:end="5:13"><literal type="number" pos:start="5:10" pos:end="5:13">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:6"><decl pos:start="6:1" pos:end="6:5"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:5">n</name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="15:1"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:7">dfs</name><parameter_list pos:start="7:8" pos:end="7:36">(<parameter pos:start="7:9" pos:end="7:14"><decl pos:start="7:9" pos:end="7:14"><type pos:start="7:9" pos:end="7:14"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:14">lm</name></decl></parameter>,<parameter pos:start="7:16" pos:end="7:21"><decl pos:start="7:16" pos:end="7:21"><type pos:start="7:16" pos:end="7:21"><name pos:start="7:16" pos:end="7:18">int</name></type> <name pos:start="7:20" pos:end="7:21">rm</name></decl></parameter>,<parameter pos:start="7:23" pos:end="7:28"><decl pos:start="7:23" pos:end="7:28"><type pos:start="7:23" pos:end="7:28"><name pos:start="7:23" pos:end="7:25">int</name></type> <name pos:start="7:27" pos:end="7:28">lb</name></decl></parameter>,<parameter pos:start="7:30" pos:end="7:35"><decl pos:start="7:30" pos:end="7:35"><type pos:start="7:30" pos:end="7:35"><name pos:start="7:30" pos:end="7:32">int</name></type> <name pos:start="7:34" pos:end="7:35">rb</name></decl></parameter>)</parameter_list><block pos:start="7:37" pos:end="15:1">{<block_content pos:start="8:5" pos:end="14:14">
    <if_stmt pos:start="8:5" pos:end="8:23"><if pos:start="8:5" pos:end="8:23">if<condition pos:start="8:7" pos:end="8:13">(<expr pos:start="8:8" pos:end="8:12"><name pos:start="8:8" pos:end="8:9">lm</name><operator pos:start="8:10" pos:end="8:10">&gt;</operator><name pos:start="8:11" pos:end="8:12">rm</name></expr>)</condition><block type="pseudo" pos:start="8:15" pos:end="8:23"><block_content pos:start="8:15" pos:end="8:23"> <return pos:start="8:15" pos:end="8:23">return <expr pos:start="8:22" pos:end="8:22"><literal type="number" pos:start="8:22" pos:end="8:22">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rt</name><init pos:start="9:11" pos:end="9:16">=<expr pos:start="9:12" pos:end="9:16"><name pos:start="9:12" pos:end="9:16"><name pos:start="9:12" pos:end="9:12">b</name><index pos:start="9:13" pos:end="9:16">[<expr pos:start="9:14" pos:end="9:15"><name pos:start="9:14" pos:end="9:15">rb</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:19"><decl pos:start="10:5" pos:end="10:18"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">p</name><init pos:start="10:10" pos:end="10:18">=<expr pos:start="10:11" pos:end="10:18"><name pos:start="10:11" pos:end="10:18"><name pos:start="10:11" pos:end="10:14">tree</name><index pos:start="10:15" pos:end="10:18">[<expr pos:start="10:16" pos:end="10:17"><name pos:start="10:16" pos:end="10:17">rt</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">len_l</name><init pos:start="11:14" pos:end="11:18">=<expr pos:start="11:15" pos:end="11:18"><name pos:start="11:15" pos:end="11:15">p</name><operator pos:start="11:16" pos:end="11:16">-</operator><name pos:start="11:17" pos:end="11:18">lm</name></expr></init></decl>,<decl pos:start="11:20" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:24">len_r</name><init pos:start="11:25" pos:end="11:29">=<expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:27">rm</name><operator pos:start="11:28" pos:end="11:28">-</operator><name pos:start="11:29" pos:end="11:29">p</name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:40"><expr pos:start="12:5" pos:end="12:39"><name pos:start="12:5" pos:end="12:13"><name pos:start="12:5" pos:end="12:9">treel</name><index pos:start="12:10" pos:end="12:13">[<expr pos:start="12:11" pos:end="12:12"><name pos:start="12:11" pos:end="12:12">rt</name></expr>]</index></name><operator pos:start="12:14" pos:end="12:14">=</operator><call pos:start="12:15" pos:end="12:39"><name pos:start="12:15" pos:end="12:17">dfs</name><argument_list pos:start="12:18" pos:end="12:39">(<argument pos:start="12:19" pos:end="12:20"><expr pos:start="12:19" pos:end="12:20"><name pos:start="12:19" pos:end="12:20">lm</name></expr></argument>,<argument pos:start="12:22" pos:end="12:24"><expr pos:start="12:22" pos:end="12:24"><name pos:start="12:22" pos:end="12:22">p</name><operator pos:start="12:23" pos:end="12:23">-</operator><literal type="number" pos:start="12:24" pos:end="12:24">1</literal></expr></argument>,<argument pos:start="12:26" pos:end="12:27"><expr pos:start="12:26" pos:end="12:27"><name pos:start="12:26" pos:end="12:27">lb</name></expr></argument>,<argument pos:start="12:29" pos:end="12:38"><expr pos:start="12:29" pos:end="12:38"><name pos:start="12:29" pos:end="12:30">lb</name><operator pos:start="12:31" pos:end="12:31">+</operator><name pos:start="12:32" pos:end="12:36">len_l</name><operator pos:start="12:37" pos:end="12:37">-</operator><literal type="number" pos:start="12:38" pos:end="12:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:9">treer</name><index pos:start="13:10" pos:end="13:13">[<expr pos:start="13:11" pos:end="13:12"><name pos:start="13:11" pos:end="13:12">rt</name></expr>]</index></name><operator pos:start="13:14" pos:end="13:14">=</operator><call pos:start="13:15" pos:end="13:39"><name pos:start="13:15" pos:end="13:17">dfs</name><argument_list pos:start="13:18" pos:end="13:39">(<argument pos:start="13:19" pos:end="13:21"><expr pos:start="13:19" pos:end="13:21"><name pos:start="13:19" pos:end="13:19">p</name><operator pos:start="13:20" pos:end="13:20">+</operator><literal type="number" pos:start="13:21" pos:end="13:21">1</literal></expr></argument>,<argument pos:start="13:23" pos:end="13:24"><expr pos:start="13:23" pos:end="13:24"><name pos:start="13:23" pos:end="13:24">rb</name></expr></argument>,<argument pos:start="13:26" pos:end="13:33"><expr pos:start="13:26" pos:end="13:33"><name pos:start="13:26" pos:end="13:27">rb</name><operator pos:start="13:28" pos:end="13:28">-</operator><name pos:start="13:29" pos:end="13:33">len_r</name></expr></argument>,<argument pos:start="13:35" pos:end="13:38"><expr pos:start="13:35" pos:end="13:38"><name pos:start="13:35" pos:end="13:36">rb</name><operator pos:start="13:37" pos:end="13:37">-</operator><literal type="number" pos:start="13:38" pos:end="13:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="14:5" pos:end="14:14">return <expr pos:start="14:12" pos:end="14:13"><name pos:start="14:12" pos:end="14:13">rt</name></expr>;</return>
</block_content>}</block></function> 
<function pos:start="16:1" pos:end="34:1"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:8">main</name><parameter_list pos:start="16:9" pos:end="16:10">()</parameter_list><block pos:start="16:11" pos:end="34:1">{<block_content pos:start="17:5" pos:end="33:13">
    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><call pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:11">freopen</name><argument_list pos:start="17:12" pos:end="17:32">(<argument pos:start="17:13" pos:end="17:21"><expr pos:start="17:13" pos:end="17:21"><literal type="string" pos:start="17:13" pos:end="17:21">"sort.in"</literal></expr></argument>,<argument pos:start="17:23" pos:end="17:25"><expr pos:start="17:23" pos:end="17:25"><literal type="string" pos:start="17:23" pos:end="17:25">"r"</literal></expr></argument>,<argument pos:start="17:27" pos:end="17:31"><expr pos:start="17:27" pos:end="17:31"><name pos:start="17:27" pos:end="17:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:35"><expr pos:start="18:5" pos:end="18:34"><call pos:start="18:5" pos:end="18:34"><name pos:start="18:5" pos:end="18:11">freopen</name><argument_list pos:start="18:12" pos:end="18:34">(<argument pos:start="18:13" pos:end="18:22"><expr pos:start="18:13" pos:end="18:22"><literal type="string" pos:start="18:13" pos:end="18:22">"sort.out"</literal></expr></argument>,<argument pos:start="18:24" pos:end="18:26"><expr pos:start="18:24" pos:end="18:26"><literal type="string" pos:start="18:24" pos:end="18:26">"w"</literal></expr></argument>,<argument pos:start="18:28" pos:end="18:33"><expr pos:start="18:28" pos:end="18:33"><name pos:start="18:28" pos:end="18:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:13"><expr pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:7">cin</name> <operator pos:start="19:9" pos:end="19:10">&gt;&gt;</operator> <name pos:start="19:12" pos:end="19:12">n</name></expr>;</expr_stmt>
    <for pos:start="20:5" pos:end="22:5">for<control pos:start="20:8" pos:end="20:25">(<init pos:start="20:9" pos:end="20:16"><decl pos:start="20:9" pos:end="20:15"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:13">i</name><init pos:start="20:14" pos:end="20:15">=<expr pos:start="20:15" pos:end="20:15"><literal type="number" pos:start="20:15" pos:end="20:15">1</literal></expr></init></decl>;</init><condition pos:start="20:17" pos:end="20:21"><expr pos:start="20:17" pos:end="20:20"><name pos:start="20:17" pos:end="20:17">i</name><operator pos:start="20:18" pos:end="20:19">&lt;=</operator><name pos:start="20:20" pos:end="20:20">n</name></expr>;</condition><incr pos:start="20:22" pos:end="20:24"><expr pos:start="20:22" pos:end="20:24"><name pos:start="20:22" pos:end="20:22">i</name><operator pos:start="20:23" pos:end="20:24">++</operator></expr></incr>)</control><block pos:start="20:26" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:20">
        <expr_stmt pos:start="21:9" pos:end="21:20"><expr pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:11">cin</name> <operator pos:start="21:13" pos:end="21:14">&gt;&gt;</operator> <name pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:16">b</name><index pos:start="21:17" pos:end="21:19">[<expr pos:start="21:18" pos:end="21:18"><name pos:start="21:18" pos:end="21:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="23:5" pos:end="25:5">for<control pos:start="23:8" pos:end="23:25">(<init pos:start="23:9" pos:end="23:16"><decl pos:start="23:9" pos:end="23:15"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">i</name><init pos:start="23:14" pos:end="23:15">=<expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">1</literal></expr></init></decl>;</init><condition pos:start="23:17" pos:end="23:21"><expr pos:start="23:17" pos:end="23:20"><name pos:start="23:17" pos:end="23:17">i</name><operator pos:start="23:18" pos:end="23:19">&lt;=</operator><name pos:start="23:20" pos:end="23:20">n</name></expr>;</condition><incr pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:22">i</name><operator pos:start="23:23" pos:end="23:24">++</operator></expr></incr>)</control><block pos:start="23:26" pos:end="25:5">{<block_content pos:start="24:9" pos:end="24:20">
        <expr_stmt pos:start="24:9" pos:end="24:20"><expr pos:start="24:9" pos:end="24:19"><name pos:start="24:9" pos:end="24:11">cin</name> <operator pos:start="24:13" pos:end="24:14">&gt;&gt;</operator> <name pos:start="24:16" pos:end="24:19"><name pos:start="24:16" pos:end="24:16">m</name><index pos:start="24:17" pos:end="24:19">[<expr pos:start="24:18" pos:end="24:18"><name pos:start="24:18" pos:end="24:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="26:5" pos:end="28:5">for<control pos:start="26:8" pos:end="26:25">(<init pos:start="26:9" pos:end="26:16"><decl pos:start="26:9" pos:end="26:15"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:13">i</name><init pos:start="26:14" pos:end="26:15">=<expr pos:start="26:15" pos:end="26:15"><literal type="number" pos:start="26:15" pos:end="26:15">1</literal></expr></init></decl>;</init><condition pos:start="26:17" pos:end="26:21"><expr pos:start="26:17" pos:end="26:20"><name pos:start="26:17" pos:end="26:17">i</name><operator pos:start="26:18" pos:end="26:19">&lt;=</operator><name pos:start="26:20" pos:end="26:20">n</name></expr>;</condition><incr pos:start="26:22" pos:end="26:24"><expr pos:start="26:22" pos:end="26:24"><name pos:start="26:22" pos:end="26:22">i</name><operator pos:start="26:23" pos:end="26:24">++</operator></expr></incr>)</control><block pos:start="26:26" pos:end="28:5">{<block_content pos:start="27:9" pos:end="27:21">
        <expr_stmt pos:start="27:9" pos:end="27:21"><expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:12">tree</name><index pos:start="27:13" pos:end="27:18">[<expr pos:start="27:14" pos:end="27:17"><name pos:start="27:14" pos:end="27:17"><name pos:start="27:14" pos:end="27:14">m</name><index pos:start="27:15" pos:end="27:17">[<expr pos:start="27:16" pos:end="27:16"><name pos:start="27:16" pos:end="27:16">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="27:19" pos:end="27:19">=</operator><name pos:start="27:20" pos:end="27:20">i</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="29:5" pos:end="29:17"><expr pos:start="29:5" pos:end="29:16"><call pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:7">dfs</name><argument_list pos:start="29:8" pos:end="29:16">(<argument pos:start="29:9" pos:end="29:9"><expr pos:start="29:9" pos:end="29:9"><literal type="number" pos:start="29:9" pos:end="29:9">1</literal></expr></argument>,<argument pos:start="29:11" pos:end="29:11"><expr pos:start="29:11" pos:end="29:11"><name pos:start="29:11" pos:end="29:11">n</name></expr></argument>,<argument pos:start="29:13" pos:end="29:13"><expr pos:start="29:13" pos:end="29:13"><literal type="number" pos:start="29:13" pos:end="29:13">1</literal></expr></argument>,<argument pos:start="29:15" pos:end="29:15"><expr pos:start="29:15" pos:end="29:15"><name pos:start="29:15" pos:end="29:15">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="30:5" pos:end="32:5">for<control pos:start="30:8" pos:end="30:28">(<init pos:start="30:9" pos:end="30:16"><decl pos:start="30:9" pos:end="30:15"><type pos:start="30:9" pos:end="30:11"><name pos:start="30:9" pos:end="30:11">int</name></type> <name pos:start="30:13" pos:end="30:13">i</name><init pos:start="30:14" pos:end="30:15">=<expr pos:start="30:15" pos:end="30:15"><literal type="number" pos:start="30:15" pos:end="30:15">1</literal></expr></init></decl>;</init><condition pos:start="30:17" pos:end="30:24"><expr pos:start="30:17" pos:end="30:23"><name pos:start="30:17" pos:end="30:17">i</name><operator pos:start="30:18" pos:end="30:19">&lt;=</operator><literal type="number" pos:start="30:20" pos:end="30:23">1000</literal></expr>;</condition><incr pos:start="30:25" pos:end="30:27"><expr pos:start="30:25" pos:end="30:27"><name pos:start="30:25" pos:end="30:25">i</name><operator pos:start="30:26" pos:end="30:27">++</operator></expr></incr>)</control><block pos:start="30:29" pos:end="32:5">{<block_content pos:start="31:9" pos:end="31:64">
        <if_stmt pos:start="31:9" pos:end="31:64"><if pos:start="31:9" pos:end="31:64">if<condition pos:start="31:11" pos:end="31:19">(<expr pos:start="31:12" pos:end="31:18"><name pos:start="31:12" pos:end="31:18"><name pos:start="31:12" pos:end="31:15">tree</name><index pos:start="31:16" pos:end="31:18">[<expr pos:start="31:17" pos:end="31:17"><name pos:start="31:17" pos:end="31:17">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="31:21" pos:end="31:64"><block_content pos:start="31:21" pos:end="31:64"> <expr_stmt pos:start="31:21" pos:end="31:64"><expr pos:start="31:21" pos:end="31:63"><name pos:start="31:21" pos:end="31:24">cout</name> <operator pos:start="31:26" pos:end="31:27">&lt;&lt;</operator> <name pos:start="31:29" pos:end="31:36"><name pos:start="31:29" pos:end="31:33">treel</name><index pos:start="31:34" pos:end="31:36">[<expr pos:start="31:35" pos:end="31:35"><name pos:start="31:35" pos:end="31:35">i</name></expr>]</index></name> <operator pos:start="31:38" pos:end="31:39">&lt;&lt;</operator> <literal type="char" pos:start="31:41" pos:end="31:43">' '</literal> <operator pos:start="31:45" pos:end="31:46">&lt;&lt;</operator> <name pos:start="31:48" pos:end="31:55"><name pos:start="31:48" pos:end="31:52">treer</name><index pos:start="31:53" pos:end="31:55">[<expr pos:start="31:54" pos:end="31:54"><name pos:start="31:54" pos:end="31:54">i</name></expr>]</index></name> <operator pos:start="31:57" pos:end="31:58">&lt;&lt;</operator> <name pos:start="31:60" pos:end="31:63">endl</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>
</block_content>}</block></function> 
</unit>
