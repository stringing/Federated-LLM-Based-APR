<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/975/975.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define pos:start="2:1" pos:end="2:15">#<cpp:directive pos:start="2:2" pos:end="2:7">define</cpp:directive> <cpp:macro pos:start="2:9" pos:end="2:9"><name pos:start="2:9" pos:end="2:9">x</name></cpp:macro> <cpp:value pos:start="2:11" pos:end="2:15">first</cpp:value></cpp:define>
<cpp:define pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:7">define</cpp:directive> <cpp:macro pos:start="3:9" pos:end="3:9"><name pos:start="3:9" pos:end="3:9">y</name></cpp:macro> <cpp:value pos:start="3:11" pos:end="3:16">second</cpp:value></cpp:define>
<cpp:define pos:start="4:1" pos:end="4:51">#<cpp:directive pos:start="4:2" pos:end="4:7">define</cpp:directive> <cpp:macro pos:start="4:9" pos:end="4:11"><name pos:start="4:9" pos:end="4:11">IOS</name></cpp:macro> <cpp:value pos:start="4:13" pos:end="4:51">ios::sync_with_stdio(false);cin.tie(0);</cpp:value></cpp:define>
<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<typedef pos:start="6:1" pos:end="6:31">typedef <type pos:start="6:9" pos:end="6:26"><name pos:start="6:9" pos:end="6:16">unsigned</name> <name pos:start="6:18" pos:end="6:21">long</name> <name pos:start="6:23" pos:end="6:26">long</name></type> <name pos:start="6:28" pos:end="6:30">ULL</name>;</typedef>
<typedef pos:start="7:1" pos:end="7:26">typedef <type pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:12">pair</name><argument_list type="generic" pos:start="7:13" pos:end="7:21">&lt;<argument pos:start="7:14" pos:end="7:16"><expr pos:start="7:14" pos:end="7:16"><name pos:start="7:14" pos:end="7:16">int</name></expr></argument>,<argument pos:start="7:18" pos:end="7:20"><expr pos:start="7:18" pos:end="7:20"><name pos:start="7:18" pos:end="7:20">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="7:23" pos:end="7:25">PII</name>;</typedef>
<typedef pos:start="8:1" pos:end="8:28">typedef <type pos:start="8:9" pos:end="8:23"><name pos:start="8:9" pos:end="8:23"><name pos:start="8:9" pos:end="8:12">pair</name><argument_list type="generic" pos:start="8:13" pos:end="8:23">&lt;<argument pos:start="8:14" pos:end="8:17"><expr pos:start="8:14" pos:end="8:17"><name pos:start="8:14" pos:end="8:17">long</name></expr></argument>,<argument pos:start="8:19" pos:end="8:22"><expr pos:start="8:19" pos:end="8:22"><name pos:start="8:19" pos:end="8:22">long</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="8:25" pos:end="8:27">PLL</name>;</typedef>
<typedef pos:start="9:1" pos:end="9:28">typedef <type pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:12">pair</name><argument_list type="generic" pos:start="9:13" pos:end="9:23">&lt;<argument pos:start="9:14" pos:end="9:17"><expr pos:start="9:14" pos:end="9:17"><name pos:start="9:14" pos:end="9:17">char</name></expr></argument>,<argument pos:start="9:19" pos:end="9:22"><expr pos:start="9:19" pos:end="9:22"><name pos:start="9:19" pos:end="9:22">char</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="9:25" pos:end="9:27">PCC</name>;</typedef>
<typedef pos:start="10:1" pos:end="10:21">typedef <type pos:start="10:9" pos:end="10:17"><name pos:start="10:9" pos:end="10:12">long</name> <name pos:start="10:14" pos:end="10:17">long</name></type> <name pos:start="10:19" pos:end="10:20">LL</name>;</typedef>
<decl_stmt pos:start="11:1" pos:end="11:21"><decl pos:start="11:1" pos:end="11:20"><type pos:start="11:1" pos:end="11:9"><specifier pos:start="11:1" pos:end="11:5">const</specifier> <name pos:start="11:7" pos:end="11:9">int</name></type> <name pos:start="11:11" pos:end="11:11">N</name><init pos:start="11:12" pos:end="11:20">=<expr pos:start="11:13" pos:end="11:20"><literal type="number" pos:start="11:13" pos:end="11:13">2</literal><operator pos:start="11:14" pos:end="11:14">*</operator><literal type="number" pos:start="11:15" pos:end="11:18">1e5</literal><operator pos:start="11:18" pos:end="11:18">+</operator><literal type="number" pos:start="11:19" pos:end="11:20">10</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="12:1" pos:end="12:16"><decl pos:start="12:1" pos:end="12:15"><type pos:start="12:1" pos:end="12:9"><specifier pos:start="12:1" pos:end="12:5">const</specifier> <name pos:start="12:7" pos:end="12:9">int</name></type> <name pos:start="12:11" pos:end="12:11">M</name><init pos:start="12:12" pos:end="12:15">=<expr pos:start="12:13" pos:end="12:15"><literal type="number" pos:start="12:13" pos:end="12:15">150</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="13:1" pos:end="13:25"><decl pos:start="13:1" pos:end="13:24"><type pos:start="13:1" pos:end="13:9"><specifier pos:start="13:1" pos:end="13:5">const</specifier> <name pos:start="13:7" pos:end="13:9">int</name></type> <name pos:start="13:11" pos:end="13:13">INF</name><init pos:start="13:14" pos:end="13:24">=<expr pos:start="13:15" pos:end="13:24"><literal type="number" pos:start="13:15" pos:end="13:24">0x3f3f3f3f</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="14:1" pos:end="14:24"><decl pos:start="14:1" pos:end="14:23"><type pos:start="14:1" pos:end="14:9"><specifier pos:start="14:1" pos:end="14:5">const</specifier> <name pos:start="14:7" pos:end="14:9">int</name></type> <name pos:start="14:11" pos:end="14:13">MOD</name><init pos:start="14:14" pos:end="14:23">=<expr pos:start="14:15" pos:end="14:23"><literal type="number" pos:start="14:15" pos:end="14:23">998244353</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="15:1" pos:end="15:22"><decl pos:start="15:1" pos:end="15:9"><type pos:start="15:1" pos:end="15:3"><name pos:start="15:1" pos:end="15:3">int</name></type> <name pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:5">h</name><index pos:start="15:6" pos:end="15:9">[<expr pos:start="15:7" pos:end="15:8"><literal type="number" pos:start="15:7" pos:end="15:8">25</literal></expr>]</index></name></decl>,<decl pos:start="15:11" pos:end="15:11"><type ref="prev" pos:start="15:1" pos:end="15:3"/><name pos:start="15:11" pos:end="15:11">n</name></decl>,<decl pos:start="15:13" pos:end="15:13"><type ref="prev" pos:start="15:1" pos:end="15:3"/><name pos:start="15:13" pos:end="15:13">b</name></decl>,<decl pos:start="15:15" pos:end="15:21"><type ref="prev" pos:start="15:1" pos:end="15:3"/><name pos:start="15:15" pos:end="15:21"><name pos:start="15:15" pos:end="15:17">sum</name><index pos:start="15:18" pos:end="15:21">[<expr pos:start="15:19" pos:end="15:20"><literal type="number" pos:start="15:19" pos:end="15:20">25</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="16:1" pos:end="16:12"><decl pos:start="16:1" pos:end="16:11"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:7">ans</name><init pos:start="16:8" pos:end="16:11">=<expr pos:start="16:9" pos:end="16:11"><name pos:start="16:9" pos:end="16:11">INF</name></expr></init></decl>;</decl_stmt>
<function pos:start="17:1" pos:end="22:1"><type pos:start="17:1" pos:end="17:4"><name pos:start="17:1" pos:end="17:4">void</name></type> <name pos:start="17:6" pos:end="17:8">dfs</name><parameter_list pos:start="17:9" pos:end="17:23">(<parameter pos:start="17:10" pos:end="17:14"><decl pos:start="17:10" pos:end="17:14"><type pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:12">int</name></type> <name pos:start="17:14" pos:end="17:14">u</name></decl></parameter>,<parameter pos:start="17:16" pos:end="17:22"><decl pos:start="17:16" pos:end="17:22"><type pos:start="17:16" pos:end="17:22"><name pos:start="17:16" pos:end="17:18">int</name></type> <name pos:start="17:20" pos:end="17:22">num</name></decl></parameter>)</parameter_list><block pos:start="17:24" pos:end="22:1">{<block_content pos:start="18:5" pos:end="21:22">
    <if_stmt pos:start="18:5" pos:end="18:32"><if pos:start="18:5" pos:end="18:32">if<condition pos:start="18:7" pos:end="18:14">(<expr pos:start="18:8" pos:end="18:13"><name pos:start="18:8" pos:end="18:10">num</name><operator pos:start="18:11" pos:end="18:12">&gt;=</operator><name pos:start="18:13" pos:end="18:13">b</name></expr>)</condition><block type="pseudo" pos:start="18:16" pos:end="18:32"><block_content pos:start="18:16" pos:end="18:32"> <expr_stmt pos:start="18:16" pos:end="18:32"><expr pos:start="18:16" pos:end="18:31"><name pos:start="18:16" pos:end="18:18">ans</name><operator pos:start="18:19" pos:end="18:19">=</operator><call pos:start="18:20" pos:end="18:31"><name pos:start="18:20" pos:end="18:22">min</name><argument_list pos:start="18:23" pos:end="18:31">(<argument pos:start="18:24" pos:end="18:26"><expr pos:start="18:24" pos:end="18:26"><name pos:start="18:24" pos:end="18:26">ans</name></expr></argument>,<argument pos:start="18:28" pos:end="18:30"><expr pos:start="18:28" pos:end="18:30"><name pos:start="18:28" pos:end="18:30">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="19:5" pos:end="19:22"><if pos:start="19:5" pos:end="19:22">if<condition pos:start="19:7" pos:end="19:14">(<expr pos:start="19:8" pos:end="19:13"><name pos:start="19:8" pos:end="19:8">u</name><operator pos:start="19:9" pos:end="19:10">==</operator><name pos:start="19:11" pos:end="19:11">n</name><operator pos:start="19:12" pos:end="19:12">+</operator><literal type="number" pos:start="19:13" pos:end="19:13">1</literal></expr>)</condition><block type="pseudo" pos:start="19:16" pos:end="19:22"><block_content pos:start="19:16" pos:end="19:22"> <return pos:start="19:16" pos:end="19:22">return;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:17"><expr pos:start="20:5" pos:end="20:16"><call pos:start="20:5" pos:end="20:16"><name pos:start="20:5" pos:end="20:7">dfs</name><argument_list pos:start="20:8" pos:end="20:16">(<argument pos:start="20:9" pos:end="20:11"><expr pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:9">u</name><operator pos:start="20:10" pos:end="20:10">+</operator><literal type="number" pos:start="20:11" pos:end="20:11">1</literal></expr></argument>,<argument pos:start="20:13" pos:end="20:15"><expr pos:start="20:13" pos:end="20:15"><name pos:start="20:13" pos:end="20:15">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><call pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:7">dfs</name><argument_list pos:start="21:8" pos:end="21:21">(<argument pos:start="21:9" pos:end="21:11"><expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:9">u</name><operator pos:start="21:10" pos:end="21:10">+</operator><literal type="number" pos:start="21:11" pos:end="21:11">1</literal></expr></argument>,<argument pos:start="21:13" pos:end="21:20"><expr pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:15">num</name><operator pos:start="21:16" pos:end="21:16">+</operator><name pos:start="21:17" pos:end="21:20"><name pos:start="21:17" pos:end="21:17">h</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><name pos:start="21:19" pos:end="21:19">u</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="23:1" pos:end="28:1"><type pos:start="23:1" pos:end="23:4"><name pos:start="23:1" pos:end="23:4">void</name></type> <name pos:start="23:6" pos:end="23:10">solve</name><parameter_list pos:start="23:11" pos:end="23:12">()</parameter_list><block pos:start="23:13" pos:end="28:1">{<block_content pos:start="24:5" pos:end="27:22">
    <expr_stmt pos:start="24:5" pos:end="24:14"><expr pos:start="24:5" pos:end="24:13"><name pos:start="24:5" pos:end="24:7">cin</name><operator pos:start="24:8" pos:end="24:9">&gt;&gt;</operator><name pos:start="24:10" pos:end="24:10">n</name><operator pos:start="24:11" pos:end="24:12">&gt;&gt;</operator><name pos:start="24:13" pos:end="24:13">b</name></expr>;</expr_stmt>
    <for pos:start="25:5" pos:end="25:36">for<control pos:start="25:8" pos:end="25:25">(<init pos:start="25:9" pos:end="25:16"><decl pos:start="25:9" pos:end="25:15"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">i</name><init pos:start="25:14" pos:end="25:15">=<expr pos:start="25:15" pos:end="25:15"><literal type="number" pos:start="25:15" pos:end="25:15">1</literal></expr></init></decl>;</init><condition pos:start="25:17" pos:end="25:21"><expr pos:start="25:17" pos:end="25:20"><name pos:start="25:17" pos:end="25:17">i</name><operator pos:start="25:18" pos:end="25:19">&lt;=</operator><name pos:start="25:20" pos:end="25:20">n</name></expr>;</condition><incr pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:22">i</name><operator pos:start="25:23" pos:end="25:24">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:27" pos:end="25:36"><block_content pos:start="25:27" pos:end="25:36"> <expr_stmt pos:start="25:27" pos:end="25:36"><expr pos:start="25:27" pos:end="25:35"><name pos:start="25:27" pos:end="25:29">cin</name><operator pos:start="25:30" pos:end="25:31">&gt;&gt;</operator><name pos:start="25:32" pos:end="25:35"><name pos:start="25:32" pos:end="25:32">h</name><index pos:start="25:33" pos:end="25:35">[<expr pos:start="25:34" pos:end="25:34"><name pos:start="25:34" pos:end="25:34">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="26:5" pos:end="26:13"><expr pos:start="26:5" pos:end="26:12"><call pos:start="26:5" pos:end="26:12"><name pos:start="26:5" pos:end="26:7">dfs</name><argument_list pos:start="26:8" pos:end="26:12">(<argument pos:start="26:9" pos:end="26:9"><expr pos:start="26:9" pos:end="26:9"><literal type="number" pos:start="26:9" pos:end="26:9">1</literal></expr></argument>,<argument pos:start="26:11" pos:end="26:11"><expr pos:start="26:11" pos:end="26:11"><literal type="number" pos:start="26:11" pos:end="26:11">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:8">cout</name><operator pos:start="27:9" pos:end="27:10">&lt;&lt;</operator><name pos:start="27:11" pos:end="27:13">ans</name><operator pos:start="27:14" pos:end="27:14">-</operator><name pos:start="27:15" pos:end="27:15">b</name><operator pos:start="27:16" pos:end="27:17">&lt;&lt;</operator><name pos:start="27:18" pos:end="27:21">endl</name></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="29:1" pos:end="35:1"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:8">main</name><parameter_list pos:start="29:9" pos:end="29:10">()</parameter_list><block pos:start="29:11" pos:end="35:1">{<block_content pos:start="30:9" pos:end="34:13">
        <expr_stmt pos:start="30:9" pos:end="30:38"><expr pos:start="30:9" pos:end="30:37"><call pos:start="30:9" pos:end="30:37"><name pos:start="30:9" pos:end="30:15">freopen</name><argument_list pos:start="30:16" pos:end="30:37">(<argument pos:start="30:17" pos:end="30:26"><expr pos:start="30:17" pos:end="30:26"><literal type="string" pos:start="30:17" pos:end="30:26">"shelf.in"</literal></expr></argument>,<argument pos:start="30:28" pos:end="30:30"><expr pos:start="30:28" pos:end="30:30"><literal type="string" pos:start="30:28" pos:end="30:30">"r"</literal></expr></argument>,<argument pos:start="30:32" pos:end="30:36"><expr pos:start="30:32" pos:end="30:36"><name pos:start="30:32" pos:end="30:36">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="31:9" pos:end="31:40"><expr pos:start="31:9" pos:end="31:39"><call pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:15">freopen</name><argument_list pos:start="31:16" pos:end="31:39">(<argument pos:start="31:17" pos:end="31:27"><expr pos:start="31:17" pos:end="31:27"><literal type="string" pos:start="31:17" pos:end="31:27">"shelf.out"</literal></expr></argument>,<argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><literal type="string" pos:start="31:29" pos:end="31:31">"W"</literal></expr></argument>,<argument pos:start="31:33" pos:end="31:38"><expr pos:start="31:33" pos:end="31:38"><name pos:start="31:33" pos:end="31:38">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:8"><expr pos:start="32:5" pos:end="32:7"><name pos:start="32:5" pos:end="32:7">IOS</name></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:12"><expr pos:start="33:5" pos:end="33:11"><call pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:9">solve</name><argument_list pos:start="33:10" pos:end="33:11">()</argument_list></call></expr>;</expr_stmt>
    <return pos:start="34:5" pos:end="34:13">return <expr pos:start="34:12" pos:end="34:12"><literal type="number" pos:start="34:12" pos:end="34:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
