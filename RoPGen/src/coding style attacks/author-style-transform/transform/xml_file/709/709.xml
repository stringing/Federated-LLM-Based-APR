<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/709/709.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:26"><decl pos:start="3:1" pos:end="3:9"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:9"><name pos:start="3:5" pos:end="3:5">a</name><index pos:start="3:6" pos:end="3:9">[<expr pos:start="3:7" pos:end="3:8"><literal type="number" pos:start="3:7" pos:end="3:8">20</literal></expr>]</index></name></decl>,<decl pos:start="3:11" pos:end="3:11"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:11" pos:end="3:11">x</name></decl>,<decl pos:start="3:13" pos:end="3:13"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:13" pos:end="3:13">y</name></decl>,<decl pos:start="3:15" pos:end="3:15"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:15" pos:end="3:15">C</name></decl>,<decl pos:start="3:17" pos:end="3:25"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:17" pos:end="3:25"><name pos:start="3:17" pos:end="3:17">c</name><index pos:start="3:18" pos:end="3:21">[<expr pos:start="3:19" pos:end="3:20"><literal type="number" pos:start="3:19" pos:end="3:20">25</literal></expr>]</index><index pos:start="3:22" pos:end="3:25">[<expr pos:start="3:23" pos:end="3:24"><literal type="number" pos:start="3:23" pos:end="3:24">25</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:28"><decl pos:start="4:1" pos:end="4:23"><type pos:start="4:1" pos:end="4:9"><name pos:start="4:1" pos:end="4:4">long</name> <name pos:start="4:6" pos:end="4:9">long</name></type> <name pos:start="4:11" pos:end="4:23"><name pos:start="4:11" pos:end="4:12">dp</name><index pos:start="4:13" pos:end="4:19">[<expr pos:start="4:14" pos:end="4:18"><literal type="number" pos:start="4:14" pos:end="4:14">1</literal><operator pos:start="4:15" pos:end="4:16">&lt;&lt;</operator><literal type="number" pos:start="4:17" pos:end="4:18">18</literal></expr>]</index><index pos:start="4:20" pos:end="4:23">[<expr pos:start="4:21" pos:end="4:22"><literal type="number" pos:start="4:21" pos:end="4:22">20</literal></expr>]</index></name></decl>,<decl pos:start="4:25" pos:end="4:27"><type ref="prev" pos:start="4:1" pos:end="4:9"/><name pos:start="4:25" pos:end="4:27">ans</name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="60:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list>
<block pos:start="6:1" pos:end="60:1">{<block_content pos:start="7:5" pos:end="59:13">
    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>,<decl pos:start="7:11" pos:end="7:11"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:11">m</name></decl>,<decl pos:start="7:13" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:13">k</name></decl>,<decl pos:start="7:15" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:17">cnt</name></decl>,<decl pos:start="7:19" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:21">now</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:33"><expr pos:start="8:5" pos:end="8:32"><call pos:start="8:5" pos:end="8:32"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:32">(<argument pos:start="8:13" pos:end="8:21"><expr pos:start="8:13" pos:end="8:21"><literal type="string" pos:start="8:13" pos:end="8:21">"meal.in"</literal></expr></argument>,<argument pos:start="8:23" pos:end="8:25"><expr pos:start="8:23" pos:end="8:25"><literal type="string" pos:start="8:23" pos:end="8:25">"r"</literal></expr></argument>,<argument pos:start="8:27" pos:end="8:31"><expr pos:start="8:27" pos:end="8:31"><name pos:start="8:27" pos:end="8:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:35"><expr pos:start="9:5" pos:end="9:34"><call pos:start="9:5" pos:end="9:34"><name pos:start="9:5" pos:end="9:11">freopen</name><argument_list pos:start="9:12" pos:end="9:34">(<argument pos:start="9:13" pos:end="9:22"><expr pos:start="9:13" pos:end="9:22"><literal type="string" pos:start="9:13" pos:end="9:22">"meal.out"</literal></expr></argument>,<argument pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><literal type="string" pos:start="9:24" pos:end="9:26">"w"</literal></expr></argument>,<argument pos:start="9:28" pos:end="9:33"><expr pos:start="9:28" pos:end="9:33"><name pos:start="9:28" pos:end="9:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:29"><expr pos:start="10:5" pos:end="10:28"><call pos:start="10:5" pos:end="10:28"><name pos:start="10:5" pos:end="10:9">scanf</name><argument_list pos:start="10:10" pos:end="10:28">(<argument pos:start="10:11" pos:end="10:18"><expr pos:start="10:11" pos:end="10:18"><literal type="string" pos:start="10:11" pos:end="10:18">"%d%d%d"</literal></expr></argument>,<argument pos:start="10:20" pos:end="10:21"><expr pos:start="10:20" pos:end="10:21"><operator pos:start="10:20" pos:end="10:20">&amp;</operator><name pos:start="10:21" pos:end="10:21">n</name></expr></argument>,<argument pos:start="10:23" pos:end="10:24"><expr pos:start="10:23" pos:end="10:24"><operator pos:start="10:23" pos:end="10:23">&amp;</operator><name pos:start="10:24" pos:end="10:24">m</name></expr></argument>,<argument pos:start="10:26" pos:end="10:27"><expr pos:start="10:26" pos:end="10:27"><operator pos:start="10:26" pos:end="10:26">&amp;</operator><name pos:start="10:27" pos:end="10:27">k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="11:5" pos:end="11:42">for<control pos:start="11:8" pos:end="11:24">(<init pos:start="11:9" pos:end="11:16"><decl pos:start="11:9" pos:end="11:15"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name><init pos:start="11:14" pos:end="11:15">=<expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</init><condition pos:start="11:17" pos:end="11:20"><expr pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:17">i</name><operator pos:start="11:18" pos:end="11:18">&lt;</operator><name pos:start="11:19" pos:end="11:19">n</name></expr>;</condition><incr pos:start="11:21" pos:end="11:23"><expr pos:start="11:21" pos:end="11:23"><name pos:start="11:21" pos:end="11:21">i</name><operator pos:start="11:22" pos:end="11:23">++</operator></expr></incr>)</control><block type="pseudo" pos:start="11:25" pos:end="11:42"><block_content pos:start="11:25" pos:end="11:42"><expr_stmt pos:start="11:25" pos:end="11:42"><expr pos:start="11:25" pos:end="11:41"><call pos:start="11:25" pos:end="11:41"><name pos:start="11:25" pos:end="11:29">scanf</name><argument_list pos:start="11:30" pos:end="11:41">(<argument pos:start="11:31" pos:end="11:34"><expr pos:start="11:31" pos:end="11:34"><literal type="string" pos:start="11:31" pos:end="11:34">"%d"</literal></expr></argument>,<argument pos:start="11:36" pos:end="11:40"><expr pos:start="11:36" pos:end="11:40"><operator pos:start="11:36" pos:end="11:36">&amp;</operator><name pos:start="11:37" pos:end="11:40"><name pos:start="11:37" pos:end="11:37">a</name><index pos:start="11:38" pos:end="11:40">[<expr pos:start="11:39" pos:end="11:39"><name pos:start="11:39" pos:end="11:39">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <for pos:start="12:5" pos:end="16:5">for<control pos:start="12:8" pos:end="12:24">(<init pos:start="12:9" pos:end="12:16"><decl pos:start="12:9" pos:end="12:15"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">i</name><init pos:start="12:14" pos:end="12:15">=<expr pos:start="12:15" pos:end="12:15"><literal type="number" pos:start="12:15" pos:end="12:15">0</literal></expr></init></decl>;</init><condition pos:start="12:17" pos:end="12:20"><expr pos:start="12:17" pos:end="12:19"><name pos:start="12:17" pos:end="12:17">i</name><operator pos:start="12:18" pos:end="12:18">&lt;</operator><name pos:start="12:19" pos:end="12:19">k</name></expr>;</condition><incr pos:start="12:21" pos:end="12:23"><expr pos:start="12:21" pos:end="12:23"><name pos:start="12:21" pos:end="12:21">i</name><operator pos:start="12:22" pos:end="12:23">++</operator></expr></incr>)</control>
    <block pos:start="13:5" pos:end="16:5">{<block_content pos:start="14:9" pos:end="15:26">
        <expr_stmt pos:start="14:9" pos:end="14:33"><expr pos:start="14:9" pos:end="14:32"><call pos:start="14:9" pos:end="14:32"><name pos:start="14:9" pos:end="14:13">scanf</name><argument_list pos:start="14:14" pos:end="14:32">(<argument pos:start="14:15" pos:end="14:22"><expr pos:start="14:15" pos:end="14:22"><literal type="string" pos:start="14:15" pos:end="14:22">"%d%d%d"</literal></expr></argument>,<argument pos:start="14:24" pos:end="14:25"><expr pos:start="14:24" pos:end="14:25"><operator pos:start="14:24" pos:end="14:24">&amp;</operator><name pos:start="14:25" pos:end="14:25">x</name></expr></argument>,<argument pos:start="14:27" pos:end="14:28"><expr pos:start="14:27" pos:end="14:28"><operator pos:start="14:27" pos:end="14:27">&amp;</operator><name pos:start="14:28" pos:end="14:28">y</name></expr></argument>,<argument pos:start="14:30" pos:end="14:31"><expr pos:start="14:30" pos:end="14:31"><operator pos:start="14:30" pos:end="14:30">&amp;</operator><name pos:start="14:31" pos:end="14:31">C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:12"><expr pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:9">x</name><operator pos:start="15:10" pos:end="15:11">--</operator></expr>;</expr_stmt><expr_stmt pos:start="15:13" pos:end="15:16"><expr pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:13">y</name><operator pos:start="15:14" pos:end="15:15">--</operator></expr>;</expr_stmt><expr_stmt pos:start="15:17" pos:end="15:26"><expr pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:23"><name pos:start="15:17" pos:end="15:17">c</name><index pos:start="15:18" pos:end="15:20">[<expr pos:start="15:19" pos:end="15:19"><name pos:start="15:19" pos:end="15:19">x</name></expr>]</index><index pos:start="15:21" pos:end="15:23">[<expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">y</name></expr>]</index></name><operator pos:start="15:24" pos:end="15:24">=</operator><name pos:start="15:25" pos:end="15:25">C</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="17:5" pos:end="20:5">for<control pos:start="17:8" pos:end="17:24">(<init pos:start="17:9" pos:end="17:16"><decl pos:start="17:9" pos:end="17:15"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">i</name><init pos:start="17:14" pos:end="17:15">=<expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></init></decl>;</init><condition pos:start="17:17" pos:end="17:20"><expr pos:start="17:17" pos:end="17:19"><name pos:start="17:17" pos:end="17:17">i</name><operator pos:start="17:18" pos:end="17:18">&lt;</operator><name pos:start="17:19" pos:end="17:19">n</name></expr>;</condition><incr pos:start="17:21" pos:end="17:23"><expr pos:start="17:21" pos:end="17:23"><name pos:start="17:21" pos:end="17:21">i</name><operator pos:start="17:22" pos:end="17:23">++</operator></expr></incr>)</control>
    <block pos:start="18:5" pos:end="20:5">{<block_content pos:start="19:9" pos:end="19:24">
        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:9">c</name><index pos:start="19:10" pos:end="19:15">[<expr pos:start="19:11" pos:end="19:14"><literal type="number" pos:start="19:11" pos:end="19:11">1</literal><operator pos:start="19:12" pos:end="19:13">&lt;&lt;</operator><name pos:start="19:14" pos:end="19:14">i</name></expr>]</index><index pos:start="19:16" pos:end="19:18">[<expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">i</name></expr>]</index></name><operator pos:start="19:19" pos:end="19:19">=</operator><name pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:20">a</name><index pos:start="19:21" pos:end="19:23">[<expr pos:start="19:22" pos:end="19:22"><name pos:start="19:22" pos:end="19:22">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="21:5" pos:end="36:5">for<control pos:start="21:8" pos:end="21:31">(<init pos:start="21:9" pos:end="21:16"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">i</name><init pos:start="21:14" pos:end="21:15">=<expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">1</literal></expr></init></decl>;</init><condition pos:start="21:17" pos:end="21:27"><expr pos:start="21:17" pos:end="21:26"><name pos:start="21:17" pos:end="21:17">i</name><operator pos:start="21:18" pos:end="21:18">&lt;</operator><operator pos:start="21:19" pos:end="21:19">(</operator><literal type="number" pos:start="21:20" pos:end="21:20">1</literal><operator pos:start="21:21" pos:end="21:22">&lt;&lt;</operator><name pos:start="21:23" pos:end="21:23">n</name><operator pos:start="21:24" pos:end="21:24">)</operator><operator pos:start="21:25" pos:end="21:25">-</operator><literal type="number" pos:start="21:26" pos:end="21:26">1</literal></expr>;</condition><incr pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:28">i</name><operator pos:start="21:29" pos:end="21:30">++</operator></expr></incr>)</control>
    <block pos:start="22:5" pos:end="36:5">{<block_content pos:start="23:9" pos:end="35:9">
        <for pos:start="23:9" pos:end="35:9">for<control pos:start="23:12" pos:end="23:28">(<init pos:start="23:13" pos:end="23:20"><decl pos:start="23:13" pos:end="23:19"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:17">j</name><init pos:start="23:18" pos:end="23:19">=<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr></init></decl>;</init><condition pos:start="23:21" pos:end="23:24"><expr pos:start="23:21" pos:end="23:23"><name pos:start="23:21" pos:end="23:21">j</name><operator pos:start="23:22" pos:end="23:22">&lt;</operator><name pos:start="23:23" pos:end="23:23">n</name></expr>;</condition><incr pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:25">j</name><operator pos:start="23:26" pos:end="23:27">++</operator></expr></incr>)</control>
        <block pos:start="24:9" pos:end="35:9">{<block_content pos:start="25:13" pos:end="34:13">
            <if_stmt pos:start="25:13" pos:end="34:13"><if pos:start="25:13" pos:end="34:13">if<condition pos:start="25:15" pos:end="25:27">(<expr pos:start="25:16" pos:end="25:26"><operator pos:start="25:16" pos:end="25:16">!</operator><operator pos:start="25:17" pos:end="25:17">(</operator><literal type="number" pos:start="25:18" pos:end="25:18">1</literal><operator pos:start="25:19" pos:end="25:19">&amp;</operator><operator pos:start="25:20" pos:end="25:20">(</operator><name pos:start="25:21" pos:end="25:21">i</name><operator pos:start="25:22" pos:end="25:23">&gt;&gt;</operator><name pos:start="25:24" pos:end="25:24">j</name><operator pos:start="25:25" pos:end="25:25">)</operator><operator pos:start="25:26" pos:end="25:26">)</operator></expr>)</condition>
            <block pos:start="26:13" pos:end="34:13">{<block_content pos:start="27:17" pos:end="33:17">
                <for pos:start="27:17" pos:end="33:17">for<control pos:start="27:20" pos:end="27:36">(<init pos:start="27:21" pos:end="27:28"><decl pos:start="27:21" pos:end="27:27"><type pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:23">int</name></type> <name pos:start="27:25" pos:end="27:25">k</name><init pos:start="27:26" pos:end="27:27">=<expr pos:start="27:27" pos:end="27:27"><literal type="number" pos:start="27:27" pos:end="27:27">0</literal></expr></init></decl>;</init><condition pos:start="27:29" pos:end="27:32"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:29">k</name><operator pos:start="27:30" pos:end="27:30">&lt;</operator><name pos:start="27:31" pos:end="27:31">n</name></expr>;</condition><incr pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:33">k</name><operator pos:start="27:34" pos:end="27:35">++</operator></expr></incr>)</control>
                <block pos:start="28:17" pos:end="33:17">{<block_content pos:start="29:21" pos:end="32:21">
                    <if_stmt pos:start="29:21" pos:end="32:21"><if pos:start="29:21" pos:end="32:21">if<condition pos:start="29:23" pos:end="29:32">(<expr pos:start="29:24" pos:end="29:31"><operator pos:start="29:24" pos:end="29:24">(</operator><name pos:start="29:25" pos:end="29:25">i</name><operator pos:start="29:26" pos:end="29:27">&gt;&gt;</operator><name pos:start="29:28" pos:end="29:28">k</name><operator pos:start="29:29" pos:end="29:29">)</operator><operator pos:start="29:30" pos:end="29:30">&amp;</operator><literal type="number" pos:start="29:31" pos:end="29:31">1</literal></expr>)</condition>
                    <block pos:start="30:21" pos:end="32:21">{<block_content pos:start="31:25" pos:end="31:83">
                        <expr_stmt pos:start="31:25" pos:end="31:83"><expr pos:start="31:25" pos:end="31:82"><name pos:start="31:25" pos:end="31:39"><name pos:start="31:25" pos:end="31:26">dp</name><index pos:start="31:27" pos:end="31:36">[<expr pos:start="31:28" pos:end="31:35"><name pos:start="31:28" pos:end="31:28">i</name><operator pos:start="31:29" pos:end="31:29">|</operator><operator pos:start="31:30" pos:end="31:30">(</operator><literal type="number" pos:start="31:31" pos:end="31:31">1</literal><operator pos:start="31:32" pos:end="31:33">&lt;&lt;</operator><name pos:start="31:34" pos:end="31:34">j</name><operator pos:start="31:35" pos:end="31:35">)</operator></expr>]</index><index pos:start="31:37" pos:end="31:39">[<expr pos:start="31:38" pos:end="31:38"><name pos:start="31:38" pos:end="31:38">j</name></expr>]</index></name><operator pos:start="31:40" pos:end="31:40">=</operator><call pos:start="31:41" pos:end="31:82"><name pos:start="31:41" pos:end="31:43">max</name><argument_list pos:start="31:44" pos:end="31:82">(<argument pos:start="31:45" pos:end="31:59"><expr pos:start="31:45" pos:end="31:59"><name pos:start="31:45" pos:end="31:59"><name pos:start="31:45" pos:end="31:46">dp</name><index pos:start="31:47" pos:end="31:56">[<expr pos:start="31:48" pos:end="31:55"><name pos:start="31:48" pos:end="31:48">i</name><operator pos:start="31:49" pos:end="31:49">|</operator><operator pos:start="31:50" pos:end="31:50">(</operator><literal type="number" pos:start="31:51" pos:end="31:51">1</literal><operator pos:start="31:52" pos:end="31:53">&lt;&lt;</operator><name pos:start="31:54" pos:end="31:54">j</name><operator pos:start="31:55" pos:end="31:55">)</operator></expr>]</index><index pos:start="31:57" pos:end="31:59">[<expr pos:start="31:58" pos:end="31:58"><name pos:start="31:58" pos:end="31:58">j</name></expr>]</index></name></expr></argument>,<argument pos:start="31:61" pos:end="31:81"><expr pos:start="31:61" pos:end="31:81"><name pos:start="31:61" pos:end="31:68"><name pos:start="31:61" pos:end="31:62">dp</name><index pos:start="31:63" pos:end="31:65">[<expr pos:start="31:64" pos:end="31:64"><name pos:start="31:64" pos:end="31:64">i</name></expr>]</index><index pos:start="31:66" pos:end="31:68">[<expr pos:start="31:67" pos:end="31:67"><name pos:start="31:67" pos:end="31:67">k</name></expr>]</index></name><operator pos:start="31:69" pos:end="31:69">+</operator><name pos:start="31:70" pos:end="31:73"><name pos:start="31:70" pos:end="31:70">a</name><index pos:start="31:71" pos:end="31:73">[<expr pos:start="31:72" pos:end="31:72"><name pos:start="31:72" pos:end="31:72">j</name></expr>]</index></name><operator pos:start="31:74" pos:end="31:74">+</operator><name pos:start="31:75" pos:end="31:81"><name pos:start="31:75" pos:end="31:75">c</name><index pos:start="31:76" pos:end="31:78">[<expr pos:start="31:77" pos:end="31:77"><name pos:start="31:77" pos:end="31:77">k</name></expr>]</index><index pos:start="31:79" pos:end="31:81">[<expr pos:start="31:80" pos:end="31:80"><name pos:start="31:80" pos:end="31:80">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></for>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="37:5" pos:end="37:10"><expr pos:start="37:5" pos:end="37:9"><name pos:start="37:5" pos:end="37:7">ans</name><operator pos:start="37:8" pos:end="37:8">=</operator><literal type="number" pos:start="37:9" pos:end="37:9">0</literal></expr>;</expr_stmt>
    <for pos:start="38:5" pos:end="57:5">for<control pos:start="38:8" pos:end="38:29">(<init pos:start="38:9" pos:end="38:16"><decl pos:start="38:9" pos:end="38:15"><type pos:start="38:9" pos:end="38:11"><name pos:start="38:9" pos:end="38:11">int</name></type> <name pos:start="38:13" pos:end="38:13">i</name><init pos:start="38:14" pos:end="38:15">=<expr pos:start="38:15" pos:end="38:15"><literal type="number" pos:start="38:15" pos:end="38:15">0</literal></expr></init></decl>;</init><condition pos:start="38:17" pos:end="38:25"><expr pos:start="38:17" pos:end="38:24"><name pos:start="38:17" pos:end="38:17">i</name><operator pos:start="38:18" pos:end="38:18">&lt;</operator><operator pos:start="38:19" pos:end="38:19">(</operator><literal type="number" pos:start="38:20" pos:end="38:20">1</literal><operator pos:start="38:21" pos:end="38:22">&lt;&lt;</operator><name pos:start="38:23" pos:end="38:23">n</name><operator pos:start="38:24" pos:end="38:24">)</operator></expr>;</condition><incr pos:start="38:26" pos:end="38:28"><expr pos:start="38:26" pos:end="38:28"><name pos:start="38:26" pos:end="38:26">i</name><operator pos:start="38:27" pos:end="38:28">++</operator></expr></incr>)</control>
    <block pos:start="39:5" pos:end="57:5">{<block_content pos:start="40:9" pos:end="56:9">
        <expr_stmt pos:start="40:9" pos:end="40:14"><expr pos:start="40:9" pos:end="40:13"><name pos:start="40:9" pos:end="40:11">cnt</name><operator pos:start="40:12" pos:end="40:12">=</operator><literal type="number" pos:start="40:13" pos:end="40:13">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="41:9" pos:end="41:14"><expr pos:start="41:9" pos:end="41:13"><name pos:start="41:9" pos:end="41:11">now</name><operator pos:start="41:12" pos:end="41:12">=</operator><name pos:start="41:13" pos:end="41:13">i</name></expr>;</expr_stmt>
        <while pos:start="42:9" pos:end="49:9">while<condition pos:start="42:14" pos:end="42:18">(<expr pos:start="42:15" pos:end="42:17"><name pos:start="42:15" pos:end="42:17">now</name></expr>)</condition>
        <block pos:start="43:9" pos:end="49:9">{<block_content pos:start="44:13" pos:end="48:20">
            <if_stmt pos:start="44:13" pos:end="47:13"><if pos:start="44:13" pos:end="47:13">if<condition pos:start="44:15" pos:end="44:21">(<expr pos:start="44:16" pos:end="44:20"><name pos:start="44:16" pos:end="44:18">now</name><operator pos:start="44:19" pos:end="44:19">&amp;</operator><literal type="number" pos:start="44:20" pos:end="44:20">1</literal></expr>)</condition>
            <block pos:start="45:13" pos:end="47:13">{<block_content pos:start="46:17" pos:end="46:22">
                <expr_stmt pos:start="46:17" pos:end="46:22"><expr pos:start="46:17" pos:end="46:21"><name pos:start="46:17" pos:end="46:19">cnt</name><operator pos:start="46:20" pos:end="46:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="48:13" pos:end="48:20"><expr pos:start="48:13" pos:end="48:19"><name pos:start="48:13" pos:end="48:15">now</name><operator pos:start="48:16" pos:end="48:18">&gt;&gt;=</operator><literal type="number" pos:start="48:19" pos:end="48:19">1</literal></expr>;</expr_stmt>
        </block_content>}</block></while>
        <if_stmt pos:start="50:9" pos:end="56:9"><if pos:start="50:9" pos:end="56:9">if<condition pos:start="50:11" pos:end="50:18">(<expr pos:start="50:12" pos:end="50:17"><name pos:start="50:12" pos:end="50:14">cnt</name><operator pos:start="50:15" pos:end="50:16">==</operator><name pos:start="50:17" pos:end="50:17">m</name></expr>)</condition>
        <block pos:start="51:9" pos:end="56:9">{<block_content pos:start="52:13" pos:end="55:13">
            <for pos:start="52:13" pos:end="55:13">for<control pos:start="52:16" pos:end="52:32">(<init pos:start="52:17" pos:end="52:24"><decl pos:start="52:17" pos:end="52:23"><type pos:start="52:17" pos:end="52:19"><name pos:start="52:17" pos:end="52:19">int</name></type> <name pos:start="52:21" pos:end="52:21">j</name><init pos:start="52:22" pos:end="52:23">=<expr pos:start="52:23" pos:end="52:23"><literal type="number" pos:start="52:23" pos:end="52:23">0</literal></expr></init></decl>;</init><condition pos:start="52:25" pos:end="52:28"><expr pos:start="52:25" pos:end="52:27"><name pos:start="52:25" pos:end="52:25">j</name><operator pos:start="52:26" pos:end="52:26">&lt;</operator><name pos:start="52:27" pos:end="52:27">n</name></expr>;</condition><incr pos:start="52:29" pos:end="52:31"><expr pos:start="52:29" pos:end="52:31"><name pos:start="52:29" pos:end="52:29">j</name><operator pos:start="52:30" pos:end="52:31">++</operator></expr></incr>)</control>
            <block pos:start="53:13" pos:end="55:13">{<block_content pos:start="54:17" pos:end="54:38">
                <expr_stmt pos:start="54:17" pos:end="54:38"><expr pos:start="54:17" pos:end="54:37"><name pos:start="54:17" pos:end="54:19">ans</name><operator pos:start="54:20" pos:end="54:20">=</operator><call pos:start="54:21" pos:end="54:37"><name pos:start="54:21" pos:end="54:23">max</name><argument_list pos:start="54:24" pos:end="54:37">(<argument pos:start="54:25" pos:end="54:27"><expr pos:start="54:25" pos:end="54:27"><name pos:start="54:25" pos:end="54:27">ans</name></expr></argument>,<argument pos:start="54:29" pos:end="54:36"><expr pos:start="54:29" pos:end="54:36"><name pos:start="54:29" pos:end="54:36"><name pos:start="54:29" pos:end="54:30">dp</name><index pos:start="54:31" pos:end="54:33">[<expr pos:start="54:32" pos:end="54:32"><name pos:start="54:32" pos:end="54:32">i</name></expr>]</index><index pos:start="54:34" pos:end="54:36">[<expr pos:start="54:35" pos:end="54:35"><name pos:start="54:35" pos:end="54:35">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="58:5" pos:end="58:27"><expr pos:start="58:5" pos:end="58:26"><call pos:start="58:5" pos:end="58:26"><name pos:start="58:5" pos:end="58:10">printf</name><argument_list pos:start="58:11" pos:end="58:26">(<argument pos:start="58:12" pos:end="58:19"><expr pos:start="58:12" pos:end="58:19"><literal type="string" pos:start="58:12" pos:end="58:19">"%lld\n"</literal></expr></argument>,<argument pos:start="58:21" pos:end="58:25"><expr pos:start="58:21" pos:end="58:25"><name pos:start="58:21" pos:end="58:23">ans</name><operator pos:start="58:24" pos:end="58:24">+</operator><literal type="number" pos:start="58:25" pos:end="58:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
