<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/356/356.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="33:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="33:1">{<block_content pos:start="4:5" pos:end="32:13">
    <expr_stmt pos:start="4:5" pos:end="4:35"><expr pos:start="4:5" pos:end="4:34"><call pos:start="4:5" pos:end="4:34"><name pos:start="4:5" pos:end="4:11">freopen</name><argument_list pos:start="4:12" pos:end="4:34">(<argument pos:start="4:13" pos:end="4:21"><expr pos:start="4:13" pos:end="4:21"><literal type="string" pos:start="4:13" pos:end="4:21">"pair.in"</literal></expr></argument>, <argument pos:start="4:24" pos:end="4:26"><expr pos:start="4:24" pos:end="4:26"><literal type="string" pos:start="4:24" pos:end="4:26">"r"</literal></expr></argument>, <argument pos:start="4:29" pos:end="4:33"><expr pos:start="4:29" pos:end="4:33"><name pos:start="4:29" pos:end="4:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:37"><expr pos:start="5:5" pos:end="5:36"><call pos:start="5:5" pos:end="5:36"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:36">(<argument pos:start="5:13" pos:end="5:22"><expr pos:start="5:13" pos:end="5:22"><literal type="string" pos:start="5:13" pos:end="5:22">"pair.out"</literal></expr></argument>, <argument pos:start="5:25" pos:end="5:27"><expr pos:start="5:25" pos:end="5:27"><literal type="string" pos:start="5:25" pos:end="5:27">"w"</literal></expr></argument>, <argument pos:start="5:30" pos:end="5:35"><expr pos:start="5:30" pos:end="5:35"><name pos:start="5:30" pos:end="5:35">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:10"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:11"><expr pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:7">cin</name><operator pos:start="7:8" pos:end="7:9">&gt;&gt;</operator><name pos:start="7:10" pos:end="7:10">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:19"><decl pos:start="8:5" pos:end="8:18"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:18"><name pos:start="8:9" pos:end="8:9">a</name><index pos:start="8:10" pos:end="8:18">[<expr pos:start="8:11" pos:end="8:17"><literal type="number" pos:start="8:11" pos:end="8:17">1000001</literal></expr>]</index></name></decl>;</decl_stmt>
    <for pos:start="9:5" pos:end="14:5">for<control pos:start="9:8" pos:end="9:24">(<init pos:start="9:9" pos:end="9:16"><decl pos:start="9:9" pos:end="9:15"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">i</name><init pos:start="9:14" pos:end="9:15">=<expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</init><condition pos:start="9:17" pos:end="9:20"><expr pos:start="9:17" pos:end="9:19"><name pos:start="9:17" pos:end="9:17">i</name><operator pos:start="9:18" pos:end="9:18">&lt;</operator><name pos:start="9:19" pos:end="9:19">n</name></expr>;</condition><incr pos:start="9:21" pos:end="9:23"><expr pos:start="9:21" pos:end="9:23"><name pos:start="9:21" pos:end="9:21">i</name><operator pos:start="9:22" pos:end="9:23">++</operator></expr></incr>)</control><block pos:start="9:25" pos:end="14:5">{<block_content pos:start="10:9" pos:end="13:9">
        <expr_stmt pos:start="10:9" pos:end="10:18"><expr pos:start="10:9" pos:end="10:17"><name pos:start="10:9" pos:end="10:11">cin</name><operator pos:start="10:12" pos:end="10:13">&gt;&gt;</operator><name pos:start="10:14" pos:end="10:17"><name pos:start="10:14" pos:end="10:14">a</name><index pos:start="10:15" pos:end="10:17">[<expr pos:start="10:16" pos:end="10:16"><name pos:start="10:16" pos:end="10:16">i</name></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="11:9" pos:end="13:9"><if pos:start="11:9" pos:end="13:9">if<condition pos:start="11:11" pos:end="11:19">(<expr pos:start="11:12" pos:end="11:18"><name pos:start="11:12" pos:end="11:15"><name pos:start="11:12" pos:end="11:12">a</name><index pos:start="11:13" pos:end="11:15">[<expr pos:start="11:14" pos:end="11:14"><name pos:start="11:14" pos:end="11:14">i</name></expr>]</index></name><operator pos:start="11:16" pos:end="11:17">==</operator><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>)</condition><block pos:start="11:20" pos:end="13:9">{<block_content pos:start="12:13" pos:end="12:20">
            <expr_stmt pos:start="12:13" pos:end="12:20"><expr pos:start="12:13" pos:end="12:19"><name pos:start="12:13" pos:end="12:16"><name pos:start="12:13" pos:end="12:13">a</name><index pos:start="12:14" pos:end="12:16">[<expr pos:start="12:15" pos:end="12:15"><name pos:start="12:15" pos:end="12:15">i</name></expr>]</index></name><operator pos:start="12:17" pos:end="12:17">=</operator><operator pos:start="12:18" pos:end="12:18">-</operator><literal type="number" pos:start="12:19" pos:end="12:19">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:11">sum</name><index pos:start="15:12" pos:end="15:20">[<expr pos:start="15:13" pos:end="15:19"><literal type="number" pos:start="15:13" pos:end="15:19">1000001</literal></expr>]</index></name><init pos:start="15:21" pos:end="15:23">=<expr pos:start="15:22" pos:end="15:23"><block pos:start="15:22" pos:end="15:23">{}</block></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:16"><expr pos:start="16:5" pos:end="16:15"><name pos:start="16:5" pos:end="16:10"><name pos:start="16:5" pos:end="16:7">sum</name><index pos:start="16:8" pos:end="16:10">[<expr pos:start="16:9" pos:end="16:9"><literal type="number" pos:start="16:9" pos:end="16:9">0</literal></expr>]</index></name><operator pos:start="16:11" pos:end="16:11">=</operator><name pos:start="16:12" pos:end="16:15"><name pos:start="16:12" pos:end="16:12">a</name><index pos:start="16:13" pos:end="16:15">[<expr pos:start="16:14" pos:end="16:14"><literal type="number" pos:start="16:14" pos:end="16:14">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <for pos:start="17:5" pos:end="19:5">for<control pos:start="17:8" pos:end="17:24">(<init pos:start="17:9" pos:end="17:16"><decl pos:start="17:9" pos:end="17:15"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">i</name><init pos:start="17:14" pos:end="17:15">=<expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">1</literal></expr></init></decl>;</init><condition pos:start="17:17" pos:end="17:20"><expr pos:start="17:17" pos:end="17:19"><name pos:start="17:17" pos:end="17:17">i</name><operator pos:start="17:18" pos:end="17:18">&lt;</operator><name pos:start="17:19" pos:end="17:19">n</name></expr>;</condition><incr pos:start="17:21" pos:end="17:23"><expr pos:start="17:21" pos:end="17:23"><name pos:start="17:21" pos:end="17:21">i</name><operator pos:start="17:22" pos:end="17:23">++</operator></expr></incr>)</control><block pos:start="17:25" pos:end="19:5">{<block_content pos:start="18:9" pos:end="18:29">
        <expr_stmt pos:start="18:9" pos:end="18:29"><expr pos:start="18:9" pos:end="18:28"><name pos:start="18:9" pos:end="18:14"><name pos:start="18:9" pos:end="18:11">sum</name><index pos:start="18:12" pos:end="18:14">[<expr pos:start="18:13" pos:end="18:13"><name pos:start="18:13" pos:end="18:13">i</name></expr>]</index></name><operator pos:start="18:15" pos:end="18:15">=</operator><name pos:start="18:16" pos:end="18:23"><name pos:start="18:16" pos:end="18:18">sum</name><index pos:start="18:19" pos:end="18:23">[<expr pos:start="18:20" pos:end="18:22"><name pos:start="18:20" pos:end="18:20">i</name><operator pos:start="18:21" pos:end="18:21">-</operator><literal type="number" pos:start="18:22" pos:end="18:22">1</literal></expr>]</index></name><operator pos:start="18:24" pos:end="18:24">+</operator><name pos:start="18:25" pos:end="18:28"><name pos:start="18:25" pos:end="18:25">a</name><index pos:start="18:26" pos:end="18:28">[<expr pos:start="18:27" pos:end="18:27"><name pos:start="18:27" pos:end="18:27">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="20:5" pos:end="20:14"><decl pos:start="20:5" pos:end="20:13"><type pos:start="20:5" pos:end="20:7"><name pos:start="20:5" pos:end="20:7">int</name></type> <name pos:start="20:9" pos:end="20:11">cnt</name><init pos:start="20:12" pos:end="20:13">=<expr pos:start="20:13" pos:end="20:13"><literal type="number" pos:start="20:13" pos:end="20:13">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="21:5" pos:end="30:5">for<control pos:start="21:8" pos:end="21:24">(<init pos:start="21:9" pos:end="21:16"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">i</name><init pos:start="21:14" pos:end="21:15">=<expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr></init></decl>;</init><condition pos:start="21:17" pos:end="21:20"><expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:17">i</name><operator pos:start="21:18" pos:end="21:18">&lt;</operator><name pos:start="21:19" pos:end="21:19">n</name></expr>;</condition><incr pos:start="21:21" pos:end="21:23"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:21">i</name><operator pos:start="21:22" pos:end="21:23">++</operator></expr></incr>)</control><block pos:start="21:25" pos:end="30:5">{<block_content pos:start="23:9" pos:end="29:9">
        
        <for pos:start="23:9" pos:end="29:9">for<control pos:start="23:12" pos:end="23:30">(<init pos:start="23:13" pos:end="23:22"><decl pos:start="23:13" pos:end="23:21"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:17">j</name><init pos:start="23:18" pos:end="23:21">=<expr pos:start="23:19" pos:end="23:21"><name pos:start="23:19" pos:end="23:19">i</name><operator pos:start="23:20" pos:end="23:20">+</operator><literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr></init></decl>;</init><condition pos:start="23:23" pos:end="23:26"><expr pos:start="23:23" pos:end="23:25"><name pos:start="23:23" pos:end="23:23">j</name><operator pos:start="23:24" pos:end="23:24">&lt;</operator><name pos:start="23:25" pos:end="23:25">n</name></expr>;</condition><incr pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><name pos:start="23:27" pos:end="23:27">j</name><operator pos:start="23:28" pos:end="23:29">++</operator></expr></incr>)</control><block pos:start="23:31" pos:end="29:9">{<block_content pos:start="24:13" pos:end="28:13">
            <if_stmt pos:start="24:13" pos:end="28:13"><if pos:start="24:13" pos:end="28:13">if<condition pos:start="24:15" pos:end="24:32">(<expr pos:start="24:16" pos:end="24:31"><name pos:start="24:16" pos:end="24:21"><name pos:start="24:16" pos:end="24:18">sum</name><index pos:start="24:19" pos:end="24:21">[<expr pos:start="24:20" pos:end="24:20"><name pos:start="24:20" pos:end="24:20">j</name></expr>]</index></name><operator pos:start="24:22" pos:end="24:22">-</operator><name pos:start="24:23" pos:end="24:28"><name pos:start="24:23" pos:end="24:25">sum</name><index pos:start="24:26" pos:end="24:28">[<expr pos:start="24:27" pos:end="24:27"><name pos:start="24:27" pos:end="24:27">i</name></expr>]</index></name><operator pos:start="24:29" pos:end="24:30">==</operator><literal type="number" pos:start="24:31" pos:end="24:31">0</literal></expr>)</condition><block pos:start="24:33" pos:end="28:13">{<block_content pos:start="25:17" pos:end="27:17">
                <if_stmt pos:start="25:17" pos:end="27:17"><if pos:start="25:17" pos:end="27:17">if<condition pos:start="25:19" pos:end="25:27">(<expr pos:start="25:20" pos:end="25:26"><name pos:start="25:20" pos:end="25:22">cnt</name><operator pos:start="25:23" pos:end="25:23">&lt;</operator><name pos:start="25:24" pos:end="25:24">j</name><operator pos:start="25:25" pos:end="25:25">-</operator><name pos:start="25:26" pos:end="25:26">i</name></expr>)</condition><block pos:start="25:28" pos:end="27:17">{<block_content pos:start="26:21" pos:end="26:28">
                    <expr_stmt pos:start="26:21" pos:end="26:28"><expr pos:start="26:21" pos:end="26:27"><name pos:start="26:21" pos:end="26:23">cnt</name><operator pos:start="26:24" pos:end="26:24">=</operator><name pos:start="26:25" pos:end="26:25">j</name><operator pos:start="26:26" pos:end="26:26">-</operator><name pos:start="26:27" pos:end="26:27">i</name></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="31:5" pos:end="31:14"><expr pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:8">cout</name><operator pos:start="31:9" pos:end="31:10">&lt;&lt;</operator><name pos:start="31:11" pos:end="31:13">cnt</name></expr>;</expr_stmt>
    <return pos:start="32:5" pos:end="32:13">return <expr pos:start="32:12" pos:end="32:12"><literal type="number" pos:start="32:12" pos:end="32:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
