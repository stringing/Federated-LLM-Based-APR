<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/16/16.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;cstdio&gt;</cpp:file></cpp:include>

<using pos:start="5:1" pos:end="5:20">using <namespace pos:start="5:7" pos:end="5:20">namespace <name pos:start="5:17" pos:end="5:19">std</name>;</namespace></using>
<decl_stmt pos:start="6:1" pos:end="6:22"><decl pos:start="6:1" pos:end="6:21"><type pos:start="6:1" pos:end="6:9"><specifier pos:start="6:1" pos:end="6:5">const</specifier> <name pos:start="6:7" pos:end="6:9">int</name></type> <name pos:start="6:11" pos:end="6:14">maxn</name> <init pos:start="6:16" pos:end="6:21">= <expr pos:start="6:18" pos:end="6:21"><literal type="number" pos:start="6:18" pos:end="6:21">1005</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:25"><decl pos:start="7:1" pos:end="7:24"><type pos:start="7:1" pos:end="7:11"><name pos:start="7:1" pos:end="7:11"><name pos:start="7:1" pos:end="7:6">vector</name><argument_list type="generic" pos:start="7:7" pos:end="7:11">&lt;<argument pos:start="7:8" pos:end="7:10"><expr pos:start="7:8" pos:end="7:10"><name pos:start="7:8" pos:end="7:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="7:13" pos:end="7:24"><name pos:start="7:13" pos:end="7:13">G</name><index pos:start="7:14" pos:end="7:18">[<expr pos:start="7:15" pos:end="7:17"><literal type="number" pos:start="7:15" pos:end="7:17">105</literal></expr>]</index><index pos:start="7:19" pos:end="7:24">[<expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:17"><decl pos:start="8:1" pos:end="8:16"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:16"><name pos:start="8:5" pos:end="8:5">F</name><index pos:start="8:6" pos:end="8:10">[<expr pos:start="8:7" pos:end="8:9"><literal type="number" pos:start="8:7" pos:end="8:9">105</literal></expr>]</index><index pos:start="8:11" pos:end="8:16">[<expr pos:start="8:12" pos:end="8:15"><literal type="number" pos:start="8:12" pos:end="8:15">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="9:1" pos:end="39:1"><type pos:start="9:1" pos:end="9:3"><name pos:start="9:1" pos:end="9:3">int</name></type> <name pos:start="9:5" pos:end="9:8">main</name><parameter_list pos:start="9:9" pos:end="9:10">()</parameter_list> <block pos:start="9:12" pos:end="39:1">{<block_content pos:start="10:5" pos:end="38:13">
    <expr_stmt pos:start="10:5" pos:end="10:30"><expr pos:start="10:5" pos:end="10:29"><call pos:start="10:5" pos:end="10:29"><name pos:start="10:5" pos:end="10:11">freopen</name><argument_list pos:start="10:12" pos:end="10:29">(<argument pos:start="10:13" pos:end="10:18"><expr pos:start="10:13" pos:end="10:18"><literal type="string" pos:start="10:13" pos:end="10:18">"p.in"</literal></expr></argument>,<argument pos:start="10:20" pos:end="10:22"><expr pos:start="10:20" pos:end="10:22"><literal type="string" pos:start="10:20" pos:end="10:22">"r"</literal></expr></argument>,<argument pos:start="10:24" pos:end="10:28"><expr pos:start="10:24" pos:end="10:28"><name pos:start="10:24" pos:end="10:28">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><call pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:11">freopen</name><argument_list pos:start="11:12" pos:end="11:31">(<argument pos:start="11:13" pos:end="11:19"><expr pos:start="11:13" pos:end="11:19"><literal type="string" pos:start="11:13" pos:end="11:19">"p.out"</literal></expr></argument>,<argument pos:start="11:21" pos:end="11:23"><expr pos:start="11:21" pos:end="11:23"><literal type="string" pos:start="11:21" pos:end="11:23">"w"</literal></expr></argument>,<argument pos:start="11:25" pos:end="11:30"><expr pos:start="11:25" pos:end="11:30"><name pos:start="11:25" pos:end="11:30">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:23"><decl pos:start="12:5" pos:end="12:9"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:9">n</name></decl>,<decl pos:start="12:11" pos:end="12:11"><type ref="prev" pos:start="12:5" pos:end="12:7"/><name pos:start="12:11" pos:end="12:11">m</name></decl>,<decl pos:start="12:13" pos:end="12:17"><type ref="prev" pos:start="12:5" pos:end="12:7"/><name pos:start="12:13" pos:end="12:15">ans</name><init pos:start="12:16" pos:end="12:17">=<expr pos:start="12:17" pos:end="12:17"><literal type="number" pos:start="12:17" pos:end="12:17">0</literal></expr></init></decl>,<decl pos:start="12:19" pos:end="12:22"><type ref="prev" pos:start="12:5" pos:end="12:7"/><name pos:start="12:19" pos:end="12:20">ii</name><init pos:start="12:21" pos:end="12:22">=<expr pos:start="12:22" pos:end="12:22"><literal type="number" pos:start="12:22" pos:end="12:22">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:11"><expr pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:7">cin</name><operator pos:start="13:8" pos:end="13:9">&gt;&gt;</operator><name pos:start="13:10" pos:end="13:10">n</name></expr>;</expr_stmt>
    <while pos:start="14:5" pos:end="36:5">while<condition pos:start="14:10" pos:end="14:14">(<expr pos:start="14:11" pos:end="14:13"><name pos:start="14:11" pos:end="14:11">n</name><operator pos:start="14:12" pos:end="14:13">--</operator></expr>)</condition><block pos:start="14:15" pos:end="36:5">{<block_content pos:start="15:9" pos:end="35:13">
        <expr_stmt pos:start="15:9" pos:end="15:15"><expr pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:11">cin</name><operator pos:start="15:12" pos:end="15:13">&gt;&gt;</operator><name pos:start="15:14" pos:end="15:14">m</name></expr>;</expr_stmt>
        <for pos:start="16:9" pos:end="21:9">for<control pos:start="16:12" pos:end="16:30">(<init pos:start="16:13" pos:end="16:20"><decl pos:start="16:13" pos:end="16:19"><type pos:start="16:13" pos:end="16:15"><name pos:start="16:13" pos:end="16:15">int</name></type> <name pos:start="16:17" pos:end="16:17">i</name><init pos:start="16:18" pos:end="16:19">=<expr pos:start="16:19" pos:end="16:19"><literal type="number" pos:start="16:19" pos:end="16:19">0</literal></expr></init></decl>;</init><condition pos:start="16:21" pos:end="16:26"><expr pos:start="16:21" pos:end="16:25"><name pos:start="16:21" pos:end="16:21">i</name><operator pos:start="16:22" pos:end="16:22">&lt;</operator><name pos:start="16:23" pos:end="16:23">m</name><operator pos:start="16:24" pos:end="16:24">-</operator><literal type="number" pos:start="16:25" pos:end="16:25">1</literal></expr>;</condition><incr pos:start="16:27" pos:end="16:29"><expr pos:start="16:27" pos:end="16:29"><name pos:start="16:27" pos:end="16:27">i</name><operator pos:start="16:28" pos:end="16:29">++</operator></expr></incr>)</control><block pos:start="16:31" pos:end="21:9">{<block_content pos:start="17:13" pos:end="20:23">
            <decl_stmt pos:start="17:13" pos:end="17:20"><decl pos:start="17:13" pos:end="17:17"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:17">x</name></decl>,<decl pos:start="17:19" pos:end="17:19"><type ref="prev" pos:start="17:13" pos:end="17:15"/><name pos:start="17:19" pos:end="17:19">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:22"><expr pos:start="18:13" pos:end="18:21"><name pos:start="18:13" pos:end="18:15">cin</name><operator pos:start="18:16" pos:end="18:17">&gt;&gt;</operator><name pos:start="18:18" pos:end="18:18">x</name><operator pos:start="18:19" pos:end="18:20">&gt;&gt;</operator><name pos:start="18:21" pos:end="18:21">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:34"><expr pos:start="19:13" pos:end="19:33"><name pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:13">G</name><index pos:start="19:14" pos:end="19:17">[<expr pos:start="19:15" pos:end="19:16"><name pos:start="19:15" pos:end="19:16">ii</name></expr>]</index><index pos:start="19:18" pos:end="19:20">[<expr pos:start="19:19" pos:end="19:19"><name pos:start="19:19" pos:end="19:19">x</name></expr>]</index></name><operator pos:start="19:21" pos:end="19:21">.</operator><call pos:start="19:22" pos:end="19:33"><name pos:start="19:22" pos:end="19:30">push_back</name><argument_list pos:start="19:31" pos:end="19:33">(<argument pos:start="19:32" pos:end="19:32"><expr pos:start="19:32" pos:end="19:32"><name pos:start="19:32" pos:end="19:32">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:23"><expr pos:start="20:13" pos:end="20:22"><name pos:start="20:13" pos:end="20:20"><name pos:start="20:13" pos:end="20:13">F</name><index pos:start="20:14" pos:end="20:17">[<expr pos:start="20:15" pos:end="20:16"><name pos:start="20:15" pos:end="20:16">ii</name></expr>]</index><index pos:start="20:18" pos:end="20:20">[<expr pos:start="20:19" pos:end="20:19"><name pos:start="20:19" pos:end="20:19">y</name></expr>]</index></name><operator pos:start="20:21" pos:end="20:21">=</operator><name pos:start="20:22" pos:end="20:22">x</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="22:9" pos:end="34:9">for<control pos:start="22:12" pos:end="22:28">(<init pos:start="22:13" pos:end="22:20"><decl pos:start="22:13" pos:end="22:19"><type pos:start="22:13" pos:end="22:15"><name pos:start="22:13" pos:end="22:15">int</name></type> <name pos:start="22:17" pos:end="22:17">i</name><init pos:start="22:18" pos:end="22:19">=<expr pos:start="22:19" pos:end="22:19"><literal type="number" pos:start="22:19" pos:end="22:19">0</literal></expr></init></decl>;</init><condition pos:start="22:21" pos:end="22:24"><expr pos:start="22:21" pos:end="22:23"><name pos:start="22:21" pos:end="22:21">i</name><operator pos:start="22:22" pos:end="22:22">&lt;</operator><name pos:start="22:23" pos:end="22:23">m</name></expr>;</condition><incr pos:start="22:25" pos:end="22:27"><expr pos:start="22:25" pos:end="22:27"><name pos:start="22:25" pos:end="22:25">i</name><operator pos:start="22:26" pos:end="22:27">++</operator></expr></incr>)</control><block pos:start="22:29" pos:end="34:9">{<block_content pos:start="23:13" pos:end="33:13">
            <decl_stmt pos:start="23:13" pos:end="23:27"><decl pos:start="23:13" pos:end="23:26"><type pos:start="23:13" pos:end="23:16"><name pos:start="23:13" pos:end="23:16">bool</name></type> <name pos:start="23:18" pos:end="23:21">flag</name><init pos:start="23:22" pos:end="23:26">=<expr pos:start="23:23" pos:end="23:26"><literal type="boolean" pos:start="23:23" pos:end="23:26">true</literal></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="24:13" pos:end="30:14"><if pos:start="24:13" pos:end="30:14">if<condition pos:start="24:15" pos:end="24:61">(<expr pos:start="24:16" pos:end="24:60"><name pos:start="24:16" pos:end="24:16">i</name><operator pos:start="24:17" pos:end="24:18">!=</operator><literal type="number" pos:start="24:19" pos:end="24:19">0</literal><operator pos:start="24:20" pos:end="24:21">&amp;&amp;</operator><name pos:start="24:22" pos:end="24:29"><name pos:start="24:22" pos:end="24:22">G</name><index pos:start="24:23" pos:end="24:26">[<expr pos:start="24:24" pos:end="24:25"><name pos:start="24:24" pos:end="24:25">ii</name></expr>]</index><index pos:start="24:27" pos:end="24:29">[<expr pos:start="24:28" pos:end="24:28"><name pos:start="24:28" pos:end="24:28">i</name></expr>]</index></name><operator pos:start="24:30" pos:end="24:30">.</operator><call pos:start="24:31" pos:end="24:36"><name pos:start="24:31" pos:end="24:34">size</name><argument_list pos:start="24:35" pos:end="24:36">()</argument_list></call><operator pos:start="24:37" pos:end="24:38">&gt;=</operator><name pos:start="24:39" pos:end="24:53"><name pos:start="24:39" pos:end="24:39">G</name><index pos:start="24:40" pos:end="24:43">[<expr pos:start="24:41" pos:end="24:42"><name pos:start="24:41" pos:end="24:42">ii</name></expr>]</index><index pos:start="24:44" pos:end="24:53">[<expr pos:start="24:45" pos:end="24:52"><name pos:start="24:45" pos:end="24:52"><name pos:start="24:45" pos:end="24:45">F</name><index pos:start="24:46" pos:end="24:49">[<expr pos:start="24:47" pos:end="24:48"><name pos:start="24:47" pos:end="24:48">ii</name></expr>]</index><index pos:start="24:50" pos:end="24:52">[<expr pos:start="24:51" pos:end="24:51"><name pos:start="24:51" pos:end="24:51">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="24:54" pos:end="24:54">.</operator><call pos:start="24:55" pos:end="24:60"><name pos:start="24:55" pos:end="24:58">size</name><argument_list pos:start="24:59" pos:end="24:60">()</argument_list></call></expr>)</condition><block pos:start="24:62" pos:end="30:14">{<block_content pos:start="25:18" pos:end="29:18">
                 <for pos:start="25:18" pos:end="29:18">for<control pos:start="25:21" pos:end="25:51">(<init pos:start="25:22" pos:end="25:29"><decl pos:start="25:22" pos:end="25:28"><type pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">int</name></type> <name pos:start="25:26" pos:end="25:26">j</name><init pos:start="25:27" pos:end="25:28">=<expr pos:start="25:28" pos:end="25:28"><literal type="number" pos:start="25:28" pos:end="25:28">0</literal></expr></init></decl>;</init><condition pos:start="25:30" pos:end="25:47"><expr pos:start="25:30" pos:end="25:46"><name pos:start="25:30" pos:end="25:30">j</name><operator pos:start="25:31" pos:end="25:31">&lt;</operator><name pos:start="25:32" pos:end="25:39"><name pos:start="25:32" pos:end="25:32">G</name><index pos:start="25:33" pos:end="25:36">[<expr pos:start="25:34" pos:end="25:35"><name pos:start="25:34" pos:end="25:35">ii</name></expr>]</index><index pos:start="25:37" pos:end="25:39">[<expr pos:start="25:38" pos:end="25:38"><name pos:start="25:38" pos:end="25:38">i</name></expr>]</index></name><operator pos:start="25:40" pos:end="25:40">.</operator><call pos:start="25:41" pos:end="25:46"><name pos:start="25:41" pos:end="25:44">size</name><argument_list pos:start="25:45" pos:end="25:46">()</argument_list></call></expr>;</condition><incr pos:start="25:48" pos:end="25:50"><expr pos:start="25:48" pos:end="25:50"><name pos:start="25:48" pos:end="25:48">j</name><operator pos:start="25:49" pos:end="25:50">++</operator></expr></incr>)</control><block pos:start="25:52" pos:end="29:18">{<block_content pos:start="26:22" pos:end="28:22">
                     <if_stmt pos:start="26:22" pos:end="28:22"><if pos:start="26:22" pos:end="28:22">if<condition pos:start="26:24" pos:end="26:66">(<expr pos:start="26:25" pos:end="26:65"><name pos:start="26:25" pos:end="26:42"><name pos:start="26:25" pos:end="26:25">G</name><index pos:start="26:26" pos:end="26:29">[<expr pos:start="26:27" pos:end="26:28"><name pos:start="26:27" pos:end="26:28">ii</name></expr>]</index><index pos:start="26:30" pos:end="26:42">[<expr pos:start="26:31" pos:end="26:41"><name pos:start="26:31" pos:end="26:41"><name pos:start="26:31" pos:end="26:31">G</name><index pos:start="26:32" pos:end="26:35">[<expr pos:start="26:33" pos:end="26:34"><name pos:start="26:33" pos:end="26:34">ii</name></expr>]</index><index pos:start="26:36" pos:end="26:38">[<expr pos:start="26:37" pos:end="26:37"><name pos:start="26:37" pos:end="26:37">i</name></expr>]</index><index pos:start="26:39" pos:end="26:41">[<expr pos:start="26:40" pos:end="26:40"><name pos:start="26:40" pos:end="26:40">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="26:43" pos:end="26:43">.</operator><call pos:start="26:44" pos:end="26:49"><name pos:start="26:44" pos:end="26:47">size</name><argument_list pos:start="26:48" pos:end="26:49">()</argument_list></call><operator pos:start="26:50" pos:end="26:50">&gt;</operator><name pos:start="26:51" pos:end="26:58"><name pos:start="26:51" pos:end="26:51">G</name><index pos:start="26:52" pos:end="26:55">[<expr pos:start="26:53" pos:end="26:54"><name pos:start="26:53" pos:end="26:54">ii</name></expr>]</index><index pos:start="26:56" pos:end="26:58">[<expr pos:start="26:57" pos:end="26:57"><name pos:start="26:57" pos:end="26:57">i</name></expr>]</index></name><operator pos:start="26:59" pos:end="26:59">.</operator><call pos:start="26:60" pos:end="26:65"><name pos:start="26:60" pos:end="26:63">size</name><argument_list pos:start="26:64" pos:end="26:65">()</argument_list></call></expr>)</condition><block pos:start="26:67" pos:end="28:22">{<block_content pos:start="27:26" pos:end="27:36">
                         <expr_stmt pos:start="27:26" pos:end="27:36"><expr pos:start="27:26" pos:end="27:35"><name pos:start="27:26" pos:end="27:29">flag</name><operator pos:start="27:30" pos:end="27:30">=</operator><literal type="boolean" pos:start="27:31" pos:end="27:35">false</literal></expr>;</expr_stmt>
                     </block_content>}</block></if></if_stmt>
                 </block_content>}</block></for>
             </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="31:13" pos:end="33:13"><if pos:start="31:13" pos:end="33:13">if<condition pos:start="31:15" pos:end="31:20">(<expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">flag</name></expr>)</condition><block pos:start="31:21" pos:end="33:13">{<block_content pos:start="32:17" pos:end="32:22">
                <expr_stmt pos:start="32:17" pos:end="32:22"><expr pos:start="32:17" pos:end="32:21"><name pos:start="32:17" pos:end="32:19">ans</name><operator pos:start="32:20" pos:end="32:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="35:9" pos:end="35:13"><expr pos:start="35:9" pos:end="35:12"><name pos:start="35:9" pos:end="35:10">ii</name><operator pos:start="35:11" pos:end="35:12">++</operator></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="37:5" pos:end="37:20"><expr pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:8">cout</name><operator pos:start="37:9" pos:end="37:10">&lt;&lt;</operator><name pos:start="37:11" pos:end="37:13">ans</name><operator pos:start="37:14" pos:end="37:15">&lt;&lt;</operator><name pos:start="37:16" pos:end="37:19">endl</name></expr>;</expr_stmt>
    <return pos:start="38:5" pos:end="38:13">return <expr pos:start="38:12" pos:end="38:12"><literal type="number" pos:start="38:12" pos:end="38:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
