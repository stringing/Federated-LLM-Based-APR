<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/835/835.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="19:1"><type pos:start="3:1" pos:end="3:4"><name pos:start="3:1" pos:end="3:4">void</name></type> <name pos:start="3:6" pos:end="3:6">f</name><parameter_list pos:start="3:7" pos:end="3:19">(<parameter pos:start="3:8" pos:end="3:18"><decl pos:start="3:8" pos:end="3:18"><type pos:start="3:8" pos:end="3:16"><name pos:start="3:8" pos:end="3:11">long</name> <name pos:start="3:13" pos:end="3:16">long</name></type> <name pos:start="3:18" pos:end="3:18">n</name></decl></parameter>)</parameter_list> <block pos:start="3:21" pos:end="19:1">{<block_content pos:start="4:5" pos:end="18:5">
    <if_stmt pos:start="4:5" pos:end="10:5"><if pos:start="4:5" pos:end="6:5">if<condition pos:start="4:7" pos:end="4:15">(<expr pos:start="4:8" pos:end="4:14"><name pos:start="4:8" pos:end="4:8">n</name> <operator pos:start="4:10" pos:end="4:11">==</operator> <literal type="number" pos:start="4:13" pos:end="4:14">12</literal></expr>)</condition> <block pos:start="4:17" pos:end="6:5">{<block_content pos:start="5:9" pos:end="5:31">
        <expr_stmt pos:start="5:9" pos:end="5:31"><expr pos:start="5:9" pos:end="5:30"><name pos:start="5:9" pos:end="5:12">cout</name> <operator pos:start="5:14" pos:end="5:15">&lt;&lt;</operator> <literal type="string" pos:start="5:17" pos:end="5:30">"12, 6, 3, 12"</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="6:7" pos:end="8:5">else if<condition pos:start="6:14" pos:end="6:21">(<expr pos:start="6:15" pos:end="6:20"><name pos:start="6:15" pos:end="6:15">n</name> <operator pos:start="6:17" pos:end="6:18">==</operator> <literal type="number" pos:start="6:20" pos:end="6:20">6</literal></expr>)</condition> <block pos:start="6:23" pos:end="8:5">{<block_content pos:start="7:9" pos:end="7:30">
        <expr_stmt pos:start="7:9" pos:end="7:30"><expr pos:start="7:9" pos:end="7:29"><name pos:start="7:9" pos:end="7:12">cout</name> <operator pos:start="7:14" pos:end="7:15">&lt;&lt;</operator> <literal type="string" pos:start="7:17" pos:end="7:29">"6, 3, 12, 6"</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="8:7" pos:end="10:5">else if<condition pos:start="8:14" pos:end="8:21">(<expr pos:start="8:15" pos:end="8:20"><name pos:start="8:15" pos:end="8:15">n</name> <operator pos:start="8:17" pos:end="8:18">==</operator> <literal type="number" pos:start="8:20" pos:end="8:20">3</literal></expr>)</condition> <block pos:start="8:23" pos:end="10:5">{<block_content pos:start="9:9" pos:end="9:30">
        <expr_stmt pos:start="9:9" pos:end="9:30"><expr pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:12">cout</name> <operator pos:start="9:14" pos:end="9:15">&lt;&lt;</operator> <literal type="string" pos:start="9:17" pos:end="9:29">"3, 12, 6, 3"</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:8">cout</name> <operator pos:start="11:10" pos:end="11:11">&lt;&lt;</operator> <name pos:start="11:13" pos:end="11:13">n</name> <operator pos:start="11:15" pos:end="11:16">&lt;&lt;</operator> <literal type="string" pos:start="11:18" pos:end="11:21">", "</literal></expr>;</expr_stmt>
    <if_stmt pos:start="12:5" pos:end="18:5"><if pos:start="12:5" pos:end="15:5">if<condition pos:start="12:7" pos:end="12:18">(<expr pos:start="12:8" pos:end="12:17"><name pos:start="12:8" pos:end="12:8">n</name> <operator pos:start="12:10" pos:end="12:10">%</operator> <literal type="number" pos:start="12:12" pos:end="12:12">2</literal> <operator pos:start="12:14" pos:end="12:15">==</operator> <literal type="number" pos:start="12:17" pos:end="12:17">0</literal></expr>)</condition> <block pos:start="12:20" pos:end="15:5">{<block_content pos:start="13:9" pos:end="14:15">
        <expr_stmt pos:start="13:9" pos:end="13:22"><expr pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:12">cout</name> <operator pos:start="13:14" pos:end="13:15">&lt;&lt;</operator> <name pos:start="13:17" pos:end="13:17">n</name> <operator pos:start="13:19" pos:end="13:19">/</operator> <literal type="number" pos:start="13:21" pos:end="13:21">2</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:15"><expr pos:start="14:9" pos:end="14:14"><call pos:start="14:9" pos:end="14:14"><name pos:start="14:9" pos:end="14:9">f</name><argument_list pos:start="14:10" pos:end="14:14">(<argument pos:start="14:11" pos:end="14:13"><expr pos:start="14:11" pos:end="14:13"><name pos:start="14:11" pos:end="14:11">n</name><operator pos:start="14:12" pos:end="14:12">/</operator><literal type="number" pos:start="14:13" pos:end="14:13">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="18:5">else if<condition pos:start="15:14" pos:end="15:25">(<expr pos:start="15:15" pos:end="15:24"><name pos:start="15:15" pos:end="15:15">n</name> <operator pos:start="15:17" pos:end="15:17">%</operator> <literal type="number" pos:start="15:19" pos:end="15:19">2</literal> <operator pos:start="15:21" pos:end="15:22">==</operator> <literal type="number" pos:start="15:24" pos:end="15:24">1</literal></expr>)</condition> <block pos:start="15:27" pos:end="18:5">{<block_content pos:start="16:9" pos:end="17:17">
        <expr_stmt pos:start="16:9" pos:end="16:24"><expr pos:start="16:9" pos:end="16:23"><name pos:start="16:9" pos:end="16:12">cout</name> <operator pos:start="16:14" pos:end="16:15">&lt;&lt;</operator> <name pos:start="16:17" pos:end="16:17">n</name><operator pos:start="16:18" pos:end="16:18">*</operator><literal type="number" pos:start="16:19" pos:end="16:21">3</literal> <operator pos:start="16:21" pos:end="16:21">+</operator> <literal type="number" pos:start="16:23" pos:end="16:23">6</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:17"><expr pos:start="17:9" pos:end="17:16"><call pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:9">f</name><argument_list pos:start="17:10" pos:end="17:16">(<argument pos:start="17:11" pos:end="17:15"><expr pos:start="17:11" pos:end="17:15"><name pos:start="17:11" pos:end="17:11">n</name><operator pos:start="17:12" pos:end="17:12">*</operator><literal type="number" pos:start="17:13" pos:end="17:14">3</literal><operator pos:start="17:14" pos:end="17:14">+</operator><literal type="number" pos:start="17:15" pos:end="17:15">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="20:1" pos:end="25:1"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:8">main</name><parameter_list pos:start="20:9" pos:end="20:10">()</parameter_list> <block pos:start="20:12" pos:end="25:1">{<block_content pos:start="21:5" pos:end="24:9">
    <decl_stmt pos:start="21:5" pos:end="21:10"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:13"><expr pos:start="22:5" pos:end="22:12"><name pos:start="22:5" pos:end="22:7">cin</name> <operator pos:start="22:9" pos:end="22:10">&gt;&gt;</operator> <name pos:start="22:12" pos:end="22:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:14"><expr pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:8">cout</name> <operator pos:start="23:10" pos:end="23:11">&lt;&lt;</operator> <name pos:start="23:13" pos:end="23:13">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:9"><expr pos:start="24:5" pos:end="24:8"><call pos:start="24:5" pos:end="24:8"><name pos:start="24:5" pos:end="24:5">f</name><argument_list pos:start="24:6" pos:end="24:8">(<argument pos:start="24:7" pos:end="24:7"><expr pos:start="24:7" pos:end="24:7"><name pos:start="24:7" pos:end="24:7">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
