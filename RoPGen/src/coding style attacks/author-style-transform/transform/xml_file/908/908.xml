<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/908/908.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:18">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:18">&lt;cstring&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:9"><decl pos:start="4:1" pos:end="4:8"><type pos:start="4:1" pos:end="4:6"><name pos:start="4:1" pos:end="4:6">string</name></type> <name pos:start="4:8" pos:end="4:8">s</name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="14:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:7">t2t</name><parameter_list pos:start="5:8" pos:end="5:23">(<parameter pos:start="5:9" pos:end="5:14"><decl pos:start="5:9" pos:end="5:14"><type pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:14">a1</name></decl></parameter>, <parameter pos:start="5:17" pos:end="5:22"><decl pos:start="5:17" pos:end="5:22"><type pos:start="5:17" pos:end="5:22"><name pos:start="5:17" pos:end="5:19">int</name></type> <name pos:start="5:21" pos:end="5:22">a2</name></decl></parameter>)</parameter_list>
<block pos:start="6:1" pos:end="14:1">{<block_content pos:start="7:5" pos:end="13:15">
    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">cnt</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">1</literal></expr></init></decl>, <decl pos:start="7:18" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:20">sum</name> <init pos:start="7:22" pos:end="7:24">= <expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="8:5" pos:end="12:5">for <control pos:start="8:9" pos:end="8:34">(<init pos:start="8:10" pos:end="8:20"><decl pos:start="8:10" pos:end="8:19"><type pos:start="8:10" pos:end="8:12"><name pos:start="8:10" pos:end="8:12">int</name></type> <name pos:start="8:14" pos:end="8:14">k</name> <init pos:start="8:16" pos:end="8:19">= <expr pos:start="8:18" pos:end="8:19"><name pos:start="8:18" pos:end="8:19">a2</name></expr></init></decl>;</init> <condition pos:start="8:22" pos:end="8:29"><expr pos:start="8:22" pos:end="8:28"><name pos:start="8:22" pos:end="8:22">k</name> <operator pos:start="8:24" pos:end="8:25">&gt;=</operator> <name pos:start="8:27" pos:end="8:28">a1</name></expr>;</condition> <incr pos:start="8:31" pos:end="8:33"><expr pos:start="8:31" pos:end="8:33"><name pos:start="8:31" pos:end="8:31">k</name><operator pos:start="8:32" pos:end="8:33">--</operator></expr></incr>)</control>
    <block pos:start="9:5" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:17">
        <expr_stmt pos:start="10:9" pos:end="10:26"><expr pos:start="10:9" pos:end="10:25"><name pos:start="10:9" pos:end="10:11">sum</name> <operator pos:start="10:13" pos:end="10:14">+=</operator> <name pos:start="10:16" pos:end="10:18">cnt</name> <operator pos:start="10:20" pos:end="10:20">*</operator> <name pos:start="10:22" pos:end="10:25"><name pos:start="10:22" pos:end="10:22">s</name><index pos:start="10:23" pos:end="10:25">[<expr pos:start="10:24" pos:end="10:24"><name pos:start="10:24" pos:end="10:24">k</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:17"><expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:11">cnt</name> <operator pos:start="11:13" pos:end="11:14">*=</operator> <literal type="number" pos:start="11:16" pos:end="11:16">2</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="13:5" pos:end="13:15">return <expr pos:start="13:12" pos:end="13:14"><name pos:start="13:12" pos:end="13:14">sum</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="15:1" pos:end="24:1"><type pos:start="15:1" pos:end="15:6"><name pos:start="15:1" pos:end="15:6">string</name></type> <name pos:start="15:8" pos:end="15:10">t2s</name><parameter_list pos:start="15:11" pos:end="15:17">(<parameter pos:start="15:12" pos:end="15:16"><decl pos:start="15:12" pos:end="15:16"><type pos:start="15:12" pos:end="15:14"><name pos:start="15:12" pos:end="15:14">int</name></type> <name pos:start="15:16" pos:end="15:16">x</name></decl></parameter>)</parameter_list>
<block pos:start="16:1" pos:end="24:1">{<block_content pos:start="17:5" pos:end="23:15">
    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">string</name></type> <name pos:start="17:12" pos:end="17:14">abc</name> <init pos:start="17:16" pos:end="17:19">= <expr pos:start="17:18" pos:end="17:19"><literal type="string" pos:start="17:18" pos:end="17:19">""</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="18:5" pos:end="22:5">while <condition pos:start="18:11" pos:end="18:17">(<expr pos:start="18:12" pos:end="18:16"><name pos:start="18:12" pos:end="18:12">x</name> <operator pos:start="18:14" pos:end="18:14">&gt;</operator> <literal type="number" pos:start="18:16" pos:end="18:16">0</literal></expr>)</condition>
    <block pos:start="19:5" pos:end="22:5">{<block_content pos:start="20:9" pos:end="21:16">
        <expr_stmt pos:start="20:9" pos:end="20:41"><expr pos:start="20:9" pos:end="20:40"><name pos:start="20:9" pos:end="20:11">abc</name> <operator pos:start="20:13" pos:end="20:13">=</operator> <operator pos:start="20:15" pos:end="20:15">(</operator><name pos:start="20:16" pos:end="20:19">char</name><operator pos:start="20:20" pos:end="20:20">)</operator><operator pos:start="20:21" pos:end="20:21">(</operator><name pos:start="20:22" pos:end="20:22">x</name> <operator pos:start="20:24" pos:end="20:24">%</operator> <literal type="number" pos:start="20:26" pos:end="20:29">10</literal> <operator pos:start="20:29" pos:end="20:29">+</operator> <literal type="char" pos:start="20:31" pos:end="20:33">'0'</literal><operator pos:start="20:34" pos:end="20:34">)</operator> <operator pos:start="20:36" pos:end="20:36">+</operator> <name pos:start="20:38" pos:end="20:40">abc</name></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:9">x</name> <operator pos:start="21:11" pos:end="21:12">/=</operator> <literal type="number" pos:start="21:14" pos:end="21:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="23:5" pos:end="23:15">return <expr pos:start="23:12" pos:end="23:14"><name pos:start="23:12" pos:end="23:14">abc</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="25:1" pos:end="109:1"><type pos:start="25:1" pos:end="25:3"><name pos:start="25:1" pos:end="25:3">int</name></type> <name pos:start="25:5" pos:end="25:8">main</name><parameter_list pos:start="25:9" pos:end="25:10">()</parameter_list>
<block pos:start="26:1" pos:end="109:1">{<block_content pos:start="27:5" pos:end="108:13">
    <expr_stmt pos:start="27:5" pos:end="27:42"><expr pos:start="27:5" pos:end="27:41"><call pos:start="27:5" pos:end="27:41"><name pos:start="27:5" pos:end="27:11">freopen</name><argument_list pos:start="27:12" pos:end="27:41">(<argument pos:start="27:13" pos:end="27:28"><expr pos:start="27:13" pos:end="27:28"><literal type="string" pos:start="27:13" pos:end="27:28">"information.in"</literal></expr></argument>, <argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><literal type="string" pos:start="27:31" pos:end="27:33">"r"</literal></expr></argument>, <argument pos:start="27:36" pos:end="27:40"><expr pos:start="27:36" pos:end="27:40"><name pos:start="27:36" pos:end="27:40">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:44"><expr pos:start="28:5" pos:end="28:43"><call pos:start="28:5" pos:end="28:43"><name pos:start="28:5" pos:end="28:11">freopen</name><argument_list pos:start="28:12" pos:end="28:43">(<argument pos:start="28:13" pos:end="28:29"><expr pos:start="28:13" pos:end="28:29"><literal type="string" pos:start="28:13" pos:end="28:29">"information.out"</literal></expr></argument>, <argument pos:start="28:32" pos:end="28:34"><expr pos:start="28:32" pos:end="28:34"><literal type="string" pos:start="28:32" pos:end="28:34">"w"</literal></expr></argument>, <argument pos:start="28:37" pos:end="28:42"><expr pos:start="28:37" pos:end="28:42"><name pos:start="28:37" pos:end="28:42">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:13"><expr pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:7">cin</name> <operator pos:start="29:9" pos:end="29:10">&gt;&gt;</operator> <name pos:start="29:12" pos:end="29:12">s</name></expr>;</expr_stmt>
    <decl_stmt pos:start="30:5" pos:end="30:20"><decl pos:start="30:5" pos:end="30:19"><type pos:start="30:5" pos:end="30:10"><name pos:start="30:5" pos:end="30:10">string</name></type> <name pos:start="30:12" pos:end="30:14">ans</name> <init pos:start="30:16" pos:end="30:19">= <expr pos:start="30:18" pos:end="30:19"><literal type="string" pos:start="30:18" pos:end="30:19">""</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="31:5" pos:end="31:18"><decl pos:start="31:5" pos:end="31:17"><type pos:start="31:5" pos:end="31:8"><name pos:start="31:5" pos:end="31:8">bool</name></type> <name pos:start="31:10" pos:end="31:13">flag</name> <init pos:start="31:15" pos:end="31:17">= <expr pos:start="31:17" pos:end="31:17"><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="32:5" pos:end="103:5">for <control pos:start="32:9" pos:end="32:45">(<init pos:start="32:10" pos:end="32:19"><decl pos:start="32:10" pos:end="32:18"><type pos:start="32:10" pos:end="32:12"><name pos:start="32:10" pos:end="32:12">int</name></type> <name pos:start="32:14" pos:end="32:14">i</name> <init pos:start="32:16" pos:end="32:18">= <expr pos:start="32:18" pos:end="32:18"><literal type="number" pos:start="32:18" pos:end="32:18">0</literal></expr></init></decl>;</init> <condition pos:start="32:21" pos:end="32:40"><expr pos:start="32:21" pos:end="32:39"><name pos:start="32:21" pos:end="32:21">i</name> <operator pos:start="32:23" pos:end="32:24">&lt;=</operator> <call pos:start="32:26" pos:end="32:35"><name pos:start="32:26" pos:end="32:33"><name pos:start="32:26" pos:end="32:26">s</name><operator pos:start="32:27" pos:end="32:27">.</operator><name pos:start="32:28" pos:end="32:33">length</name></name><argument_list pos:start="32:34" pos:end="32:35">()</argument_list></call> <operator pos:start="32:37" pos:end="32:37">-</operator> <literal type="number" pos:start="32:39" pos:end="32:39">1</literal></expr>;</condition> <incr pos:start="32:42" pos:end="32:44"><expr pos:start="32:42" pos:end="32:44"><name pos:start="32:42" pos:end="32:42">i</name><operator pos:start="32:43" pos:end="32:44">++</operator></expr></incr>)</control>
    <block pos:start="33:5" pos:end="103:5">{<block_content pos:start="34:9" pos:end="102:9">
        <if_stmt pos:start="34:9" pos:end="39:9"><if pos:start="34:9" pos:end="39:9">if <condition pos:start="34:12" pos:end="34:32">(<expr pos:start="34:13" pos:end="34:31"><call pos:start="34:13" pos:end="34:22"><name pos:start="34:13" pos:end="34:20"><name pos:start="34:13" pos:end="34:13">s</name><operator pos:start="34:14" pos:end="34:14">.</operator><name pos:start="34:15" pos:end="34:20">length</name></name><argument_list pos:start="34:21" pos:end="34:22">()</argument_list></call> <operator pos:start="34:24" pos:end="34:24">%</operator> <literal type="number" pos:start="34:26" pos:end="34:26">8</literal> <operator pos:start="34:28" pos:end="34:29">!=</operator> <literal type="number" pos:start="34:31" pos:end="34:31">0</literal></expr>)</condition>
        <block pos:start="35:9" pos:end="39:9">{<block_content pos:start="36:13" pos:end="38:18">
            <expr_stmt pos:start="36:13" pos:end="36:28"><expr pos:start="36:13" pos:end="36:27"><name pos:start="36:13" pos:end="36:16">cout</name> <operator pos:start="36:18" pos:end="36:19">&lt;&lt;</operator> <literal type="string" pos:start="36:21" pos:end="36:27">"Error"</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="37:13" pos:end="37:21"><expr pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:16">flag</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</expr_stmt>
            <break pos:start="38:13" pos:end="38:18">break;</break>
        </block_content>}</block></if></if_stmt>
        <for pos:start="40:9" pos:end="48:9">for <control pos:start="40:13" pos:end="40:49">(<init pos:start="40:14" pos:end="40:23"><decl pos:start="40:14" pos:end="40:22"><type pos:start="40:14" pos:end="40:16"><name pos:start="40:14" pos:end="40:16">int</name></type> <name pos:start="40:18" pos:end="40:18">j</name> <init pos:start="40:20" pos:end="40:22">= <expr pos:start="40:22" pos:end="40:22"><literal type="number" pos:start="40:22" pos:end="40:22">0</literal></expr></init></decl>;</init> <condition pos:start="40:25" pos:end="40:44"><expr pos:start="40:25" pos:end="40:43"><name pos:start="40:25" pos:end="40:25">j</name> <operator pos:start="40:27" pos:end="40:28">&lt;=</operator> <call pos:start="40:30" pos:end="40:39"><name pos:start="40:30" pos:end="40:37"><name pos:start="40:30" pos:end="40:30">s</name><operator pos:start="40:31" pos:end="40:31">.</operator><name pos:start="40:32" pos:end="40:37">length</name></name><argument_list pos:start="40:38" pos:end="40:39">()</argument_list></call> <operator pos:start="40:41" pos:end="40:41">-</operator> <literal type="number" pos:start="40:43" pos:end="40:43">1</literal></expr>;</condition> <incr pos:start="40:46" pos:end="40:48"><expr pos:start="40:46" pos:end="40:48"><name pos:start="40:46" pos:end="40:46">j</name><operator pos:start="40:47" pos:end="40:48">++</operator></expr></incr>)</control>
        <block pos:start="41:9" pos:end="48:9">{<block_content pos:start="42:13" pos:end="47:13">
            <if_stmt pos:start="42:13" pos:end="47:13"><if pos:start="42:13" pos:end="47:13">if <condition pos:start="42:16" pos:end="42:43">(<expr pos:start="42:17" pos:end="42:42"><name pos:start="42:17" pos:end="42:20"><name pos:start="42:17" pos:end="42:17">s</name><index pos:start="42:18" pos:end="42:20">[<expr pos:start="42:19" pos:end="42:19"><name pos:start="42:19" pos:end="42:19">j</name></expr>]</index></name> <operator pos:start="42:22" pos:end="42:23">!=</operator> <literal type="char" pos:start="42:25" pos:end="42:27">'1'</literal> <operator pos:start="42:29" pos:end="42:30">&amp;&amp;</operator> <name pos:start="42:32" pos:end="42:35"><name pos:start="42:32" pos:end="42:32">s</name><index pos:start="42:33" pos:end="42:35">[<expr pos:start="42:34" pos:end="42:34"><name pos:start="42:34" pos:end="42:34">j</name></expr>]</index></name> <operator pos:start="42:37" pos:end="42:38">!=</operator> <literal type="char" pos:start="42:40" pos:end="42:42">'0'</literal></expr>)</condition>
            <block pos:start="43:13" pos:end="47:13">{<block_content pos:start="44:17" pos:end="46:22">
                <expr_stmt pos:start="44:17" pos:end="44:32"><expr pos:start="44:17" pos:end="44:31"><name pos:start="44:17" pos:end="44:20">cout</name> <operator pos:start="44:22" pos:end="44:23">&lt;&lt;</operator> <literal type="string" pos:start="44:25" pos:end="44:31">"Error"</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="45:17" pos:end="45:25"><expr pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:20">flag</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr>;</expr_stmt>
                <break pos:start="46:17" pos:end="46:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <if_stmt pos:start="49:9" pos:end="52:9"><if pos:start="49:9" pos:end="52:9">if <condition pos:start="49:12" pos:end="49:22">(<expr pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:16">flag</name> <operator pos:start="49:18" pos:end="49:19">==</operator> <literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr>)</condition>
        <block pos:start="50:9" pos:end="52:9">{<block_content pos:start="51:13" pos:end="51:18">
            <break pos:start="51:13" pos:end="51:18">break;</break>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="53:9" pos:end="80:9"><if pos:start="53:9" pos:end="80:9">if <condition pos:start="53:12" pos:end="53:24">(<expr pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:16"><name pos:start="53:13" pos:end="53:13">s</name><index pos:start="53:14" pos:end="53:16">[<expr pos:start="53:15" pos:end="53:15"><name pos:start="53:15" pos:end="53:15">i</name></expr>]</index></name> <operator pos:start="53:18" pos:end="53:19">==</operator> <literal type="char" pos:start="53:21" pos:end="53:23">'1'</literal></expr>)</condition>
        <block pos:start="54:9" pos:end="80:9">{<block_content pos:start="55:13" pos:end="79:13">
            <if_stmt pos:start="55:13" pos:end="79:13"><if pos:start="55:13" pos:end="59:13">if <condition pos:start="55:16" pos:end="55:51">(<expr pos:start="55:17" pos:end="55:50"><name pos:start="55:17" pos:end="55:24"><name pos:start="55:17" pos:end="55:17">s</name><index pos:start="55:18" pos:end="55:24">[<expr pos:start="55:19" pos:end="55:23"><name pos:start="55:19" pos:end="55:19">i</name> <operator pos:start="55:21" pos:end="55:21">+</operator> <literal type="number" pos:start="55:23" pos:end="55:23">1</literal></expr>]</index></name> <operator pos:start="55:26" pos:end="55:27">==</operator> <literal type="char" pos:start="55:29" pos:end="55:31">'1'</literal> <operator pos:start="55:33" pos:end="55:34">&amp;&amp;</operator> <name pos:start="55:36" pos:end="55:43"><name pos:start="55:36" pos:end="55:36">s</name><index pos:start="55:37" pos:end="55:43">[<expr pos:start="55:38" pos:end="55:42"><name pos:start="55:38" pos:end="55:38">i</name> <operator pos:start="55:40" pos:end="55:40">+</operator> <literal type="number" pos:start="55:42" pos:end="55:42">2</literal></expr>]</index></name> <operator pos:start="55:45" pos:end="55:46">==</operator> <literal type="char" pos:start="55:48" pos:end="55:50">'1'</literal></expr>)</condition>
            <block pos:start="56:13" pos:end="59:13">{<block_content pos:start="57:17" pos:end="58:23">
                <expr_stmt pos:start="57:17" pos:end="57:32"><expr pos:start="57:17" pos:end="57:31"><name pos:start="57:17" pos:end="57:19">ans</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:25">ans</name> <operator pos:start="57:27" pos:end="57:27">+</operator> <literal type="char" pos:start="57:29" pos:end="57:31">' '</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="58:17" pos:end="58:23"><expr pos:start="58:17" pos:end="58:22"><name pos:start="58:17" pos:end="58:17">i</name> <operator pos:start="58:19" pos:end="58:20">+=</operator> <literal type="number" pos:start="58:22" pos:end="58:22">7</literal></expr>;</expr_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="60:13" pos:end="73:13">else if <condition pos:start="60:21" pos:end="60:56">(<expr pos:start="60:22" pos:end="60:55"><name pos:start="60:22" pos:end="60:29"><name pos:start="60:22" pos:end="60:22">s</name><index pos:start="60:23" pos:end="60:29">[<expr pos:start="60:24" pos:end="60:28"><name pos:start="60:24" pos:end="60:24">i</name> <operator pos:start="60:26" pos:end="60:26">+</operator> <literal type="number" pos:start="60:28" pos:end="60:28">1</literal></expr>]</index></name> <operator pos:start="60:31" pos:end="60:32">==</operator> <literal type="char" pos:start="60:34" pos:end="60:36">'0'</literal> <operator pos:start="60:38" pos:end="60:39">&amp;&amp;</operator> <name pos:start="60:41" pos:end="60:48"><name pos:start="60:41" pos:end="60:41">s</name><index pos:start="60:42" pos:end="60:48">[<expr pos:start="60:43" pos:end="60:47"><name pos:start="60:43" pos:end="60:43">i</name> <operator pos:start="60:45" pos:end="60:45">+</operator> <literal type="number" pos:start="60:47" pos:end="60:47">2</literal></expr>]</index></name> <operator pos:start="60:50" pos:end="60:51">==</operator> <literal type="char" pos:start="60:53" pos:end="60:55">'1'</literal></expr>)</condition>
            <block pos:start="61:13" pos:end="73:13">{<block_content pos:start="62:17" pos:end="72:17">
                <if_stmt pos:start="62:17" pos:end="72:17"><if pos:start="62:17" pos:end="66:17">if <condition pos:start="62:20" pos:end="62:44">(<expr pos:start="62:21" pos:end="62:43"><call pos:start="62:21" pos:end="62:37"><name pos:start="62:21" pos:end="62:23">t2t</name><argument_list pos:start="62:24" pos:end="62:37">(<argument pos:start="62:25" pos:end="62:29"><expr pos:start="62:25" pos:end="62:29"><name pos:start="62:25" pos:end="62:25">i</name> <operator pos:start="62:27" pos:end="62:27">+</operator> <literal type="number" pos:start="62:29" pos:end="62:29">3</literal></expr></argument>, <argument pos:start="62:32" pos:end="62:36"><expr pos:start="62:32" pos:end="62:36"><name pos:start="62:32" pos:end="62:32">i</name> <operator pos:start="62:34" pos:end="62:34">+</operator> <literal type="number" pos:start="62:36" pos:end="62:36">7</literal></expr></argument>)</argument_list></call> <operator pos:start="62:39" pos:end="62:40">&lt;=</operator> <literal type="number" pos:start="62:42" pos:end="62:43">25</literal></expr>)</condition>
                <block pos:start="63:17" pos:end="66:17">{<block_content pos:start="64:21" pos:end="65:27">
                    <expr_stmt pos:start="64:21" pos:end="64:64"><expr pos:start="64:21" pos:end="64:63"><name pos:start="64:21" pos:end="64:23">ans</name> <operator pos:start="64:25" pos:end="64:25">=</operator> <name pos:start="64:27" pos:end="64:29">ans</name> <operator pos:start="64:31" pos:end="64:31">+</operator> <operator pos:start="64:33" pos:end="64:33">(</operator><name pos:start="64:34" pos:end="64:37">char</name><operator pos:start="64:38" pos:end="64:38">)</operator><operator pos:start="64:39" pos:end="64:39">(</operator><literal type="char" pos:start="64:40" pos:end="64:42">'A'</literal> <operator pos:start="64:44" pos:end="64:44">+</operator> <call pos:start="64:46" pos:end="64:62"><name pos:start="64:46" pos:end="64:48">t2t</name><argument_list pos:start="64:49" pos:end="64:62">(<argument pos:start="64:50" pos:end="64:54"><expr pos:start="64:50" pos:end="64:54"><name pos:start="64:50" pos:end="64:50">i</name> <operator pos:start="64:52" pos:end="64:52">+</operator> <literal type="number" pos:start="64:54" pos:end="64:54">3</literal></expr></argument>, <argument pos:start="64:57" pos:end="64:61"><expr pos:start="64:57" pos:end="64:61"><name pos:start="64:57" pos:end="64:57">i</name> <operator pos:start="64:59" pos:end="64:59">+</operator> <literal type="number" pos:start="64:61" pos:end="64:61">7</literal></expr></argument>)</argument_list></call><operator pos:start="64:63" pos:end="64:63">)</operator></expr>;</expr_stmt>
                    <expr_stmt pos:start="65:21" pos:end="65:27"><expr pos:start="65:21" pos:end="65:26"><name pos:start="65:21" pos:end="65:21">i</name> <operator pos:start="65:23" pos:end="65:24">+=</operator> <literal type="number" pos:start="65:26" pos:end="65:26">7</literal></expr>;</expr_stmt>
                </block_content>}</block></if>
                <else pos:start="67:17" pos:end="72:17">else
                <block pos:start="68:17" pos:end="72:17">{<block_content pos:start="69:21" pos:end="71:26">
                    <expr_stmt pos:start="69:21" pos:end="69:36"><expr pos:start="69:21" pos:end="69:35"><name pos:start="69:21" pos:end="69:24">cout</name> <operator pos:start="69:26" pos:end="69:27">&lt;&lt;</operator> <literal type="string" pos:start="69:29" pos:end="69:35">"Error"</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="70:21" pos:end="70:29"><expr pos:start="70:21" pos:end="70:28"><name pos:start="70:21" pos:end="70:24">flag</name> <operator pos:start="70:26" pos:end="70:26">=</operator> <literal type="number" pos:start="70:28" pos:end="70:28">0</literal></expr>;</expr_stmt>
                    <break pos:start="71:21" pos:end="71:26">break;</break>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></if>
            <else pos:start="74:13" pos:end="79:13">else
            <block pos:start="75:13" pos:end="79:13">{<block_content pos:start="76:17" pos:end="78:22">
                <expr_stmt pos:start="76:17" pos:end="76:32"><expr pos:start="76:17" pos:end="76:31"><name pos:start="76:17" pos:end="76:20">cout</name> <operator pos:start="76:22" pos:end="76:23">&lt;&lt;</operator> <literal type="string" pos:start="76:25" pos:end="76:31">"Error"</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="77:17" pos:end="77:25"><expr pos:start="77:17" pos:end="77:24"><name pos:start="77:17" pos:end="77:20">flag</name> <operator pos:start="77:22" pos:end="77:22">=</operator> <literal type="number" pos:start="77:24" pos:end="77:24">0</literal></expr>;</expr_stmt>
                <break pos:start="78:17" pos:end="78:22">break;</break>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="81:9" pos:end="84:9"><if pos:start="81:9" pos:end="84:9">if <condition pos:start="81:12" pos:end="81:22">(<expr pos:start="81:13" pos:end="81:21"><name pos:start="81:13" pos:end="81:16">flag</name> <operator pos:start="81:18" pos:end="81:19">==</operator> <literal type="number" pos:start="81:21" pos:end="81:21">0</literal></expr>)</condition>
        <block pos:start="82:9" pos:end="84:9">{<block_content pos:start="83:13" pos:end="83:18">
            <break pos:start="83:13" pos:end="83:18">break;</break>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="85:9" pos:end="98:9"><if pos:start="85:9" pos:end="98:9">if <condition pos:start="85:12" pos:end="85:24">(<expr pos:start="85:13" pos:end="85:23"><name pos:start="85:13" pos:end="85:16"><name pos:start="85:13" pos:end="85:13">s</name><index pos:start="85:14" pos:end="85:16">[<expr pos:start="85:15" pos:end="85:15"><name pos:start="85:15" pos:end="85:15">i</name></expr>]</index></name> <operator pos:start="85:18" pos:end="85:19">==</operator> <literal type="char" pos:start="85:21" pos:end="85:23">'0'</literal></expr>)</condition>
        <block pos:start="86:9" pos:end="98:9">{<block_content pos:start="87:13" pos:end="97:13">
            <if_stmt pos:start="87:13" pos:end="97:13"><if pos:start="87:13" pos:end="91:13">if <condition pos:start="87:16" pos:end="87:32">(<expr pos:start="87:17" pos:end="87:31"><name pos:start="87:17" pos:end="87:24"><name pos:start="87:17" pos:end="87:17">s</name><index pos:start="87:18" pos:end="87:24">[<expr pos:start="87:19" pos:end="87:23"><name pos:start="87:19" pos:end="87:19">i</name> <operator pos:start="87:21" pos:end="87:21">+</operator> <literal type="number" pos:start="87:23" pos:end="87:23">8</literal></expr>]</index></name> <operator pos:start="87:26" pos:end="87:27">==</operator> <literal type="char" pos:start="87:29" pos:end="87:31">'0'</literal></expr>)</condition>
            <block pos:start="88:13" pos:end="91:13">{<block_content pos:start="89:17" pos:end="90:24">
                <expr_stmt pos:start="89:17" pos:end="89:80"><expr pos:start="89:17" pos:end="89:79"><name pos:start="89:17" pos:end="89:19">ans</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:25">ans</name> <operator pos:start="89:27" pos:end="89:27">+</operator> <call pos:start="89:29" pos:end="89:79"><name pos:start="89:29" pos:end="89:31">t2s</name><argument_list pos:start="89:32" pos:end="89:79">(<argument pos:start="89:33" pos:end="89:78"><expr pos:start="89:33" pos:end="89:78"><call pos:start="89:33" pos:end="89:49"><name pos:start="89:33" pos:end="89:35">t2t</name><argument_list pos:start="89:36" pos:end="89:49">(<argument pos:start="89:37" pos:end="89:41"><expr pos:start="89:37" pos:end="89:41"><name pos:start="89:37" pos:end="89:37">i</name> <operator pos:start="89:39" pos:end="89:39">+</operator> <literal type="number" pos:start="89:41" pos:end="89:41">1</literal></expr></argument>, <argument pos:start="89:44" pos:end="89:48"><expr pos:start="89:44" pos:end="89:48"><name pos:start="89:44" pos:end="89:44">i</name> <operator pos:start="89:46" pos:end="89:46">+</operator> <literal type="number" pos:start="89:48" pos:end="89:48">7</literal></expr></argument>)</argument_list></call> <operator pos:start="89:51" pos:end="89:51">/</operator> <literal type="number" pos:start="89:53" pos:end="89:55">2</literal> <operator pos:start="89:55" pos:end="89:55">+</operator> <call pos:start="89:57" pos:end="89:74"><name pos:start="89:57" pos:end="89:59">t2t</name><argument_list pos:start="89:60" pos:end="89:74">(<argument pos:start="89:61" pos:end="89:65"><expr pos:start="89:61" pos:end="89:65"><name pos:start="89:61" pos:end="89:61">i</name> <operator pos:start="89:63" pos:end="89:63">+</operator> <literal type="number" pos:start="89:65" pos:end="89:65">9</literal></expr></argument>, <argument pos:start="89:68" pos:end="89:73"><expr pos:start="89:68" pos:end="89:73"><name pos:start="89:68" pos:end="89:68">i</name> <operator pos:start="89:70" pos:end="89:70">+</operator> <literal type="number" pos:start="89:72" pos:end="89:73">15</literal></expr></argument>)</argument_list></call> <operator pos:start="89:76" pos:end="89:76">/</operator> <literal type="number" pos:start="89:78" pos:end="89:78">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="90:17" pos:end="90:24"><expr pos:start="90:17" pos:end="90:23"><name pos:start="90:17" pos:end="90:17">i</name> <operator pos:start="90:19" pos:end="90:20">+=</operator> <literal type="number" pos:start="90:22" pos:end="90:23">15</literal></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="92:13" pos:end="97:13">else
            <block pos:start="93:13" pos:end="97:13">{<block_content pos:start="94:17" pos:end="96:22">
                <expr_stmt pos:start="94:17" pos:end="94:32"><expr pos:start="94:17" pos:end="94:31"><name pos:start="94:17" pos:end="94:20">cout</name> <operator pos:start="94:22" pos:end="94:23">&lt;&lt;</operator> <literal type="string" pos:start="94:25" pos:end="94:31">"Error"</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="95:17" pos:end="95:25"><expr pos:start="95:17" pos:end="95:24"><name pos:start="95:17" pos:end="95:20">flag</name> <operator pos:start="95:22" pos:end="95:22">=</operator> <literal type="number" pos:start="95:24" pos:end="95:24">0</literal></expr>;</expr_stmt>
                <break pos:start="96:17" pos:end="96:22">break;</break>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="99:9" pos:end="102:9"><if pos:start="99:9" pos:end="102:9">if <condition pos:start="99:12" pos:end="99:22">(<expr pos:start="99:13" pos:end="99:21"><name pos:start="99:13" pos:end="99:16">flag</name> <operator pos:start="99:18" pos:end="99:19">==</operator> <literal type="number" pos:start="99:21" pos:end="99:21">0</literal></expr>)</condition>
        <block pos:start="100:9" pos:end="102:9">{<block_content pos:start="101:13" pos:end="101:18">
            <break pos:start="101:13" pos:end="101:18">break;</break>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="104:5" pos:end="107:5"><if pos:start="104:5" pos:end="107:5">if <condition pos:start="104:8" pos:end="104:18">(<expr pos:start="104:9" pos:end="104:17"><name pos:start="104:9" pos:end="104:12">flag</name> <operator pos:start="104:14" pos:end="104:15">==</operator> <literal type="number" pos:start="104:17" pos:end="104:17">1</literal></expr>)</condition>
    <block pos:start="105:5" pos:end="107:5">{<block_content pos:start="106:9" pos:end="106:20">
        <expr_stmt pos:start="106:9" pos:end="106:20"><expr pos:start="106:9" pos:end="106:19"><name pos:start="106:9" pos:end="106:12">cout</name> <operator pos:start="106:14" pos:end="106:15">&lt;&lt;</operator> <name pos:start="106:17" pos:end="106:19">ans</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return pos:start="108:5" pos:end="108:13">return <expr pos:start="108:12" pos:end="108:12"><literal type="number" pos:start="108:12" pos:end="108:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
