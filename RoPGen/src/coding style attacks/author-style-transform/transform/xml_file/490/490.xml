<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/490/490.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;vector&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="37:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="37:1">{<block_content pos:start="5:5" pos:end="36:13">
    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:14">trl</name><init pos:start="5:15" pos:end="5:31">=<expr pos:start="5:16" pos:end="5:31"><literal type="string" pos:start="5:16" pos:end="5:31">"Unfortunately."</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:10"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">x</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:10">vector</name><argument_list type="generic" pos:start="7:11" pos:end="7:18">&lt;<argument pos:start="7:12" pos:end="7:17"><expr pos:start="7:12" pos:end="7:17"><name pos:start="7:12" pos:end="7:17">string</name></expr></argument>&gt;</argument_list></name></type><name pos:start="7:19" pos:end="7:19">s</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:20"><decl pos:start="8:5" pos:end="8:19"><type pos:start="8:5" pos:end="8:15"><name pos:start="8:5" pos:end="8:15"><name pos:start="8:5" pos:end="8:10">vector</name><argument_list type="generic" pos:start="8:11" pos:end="8:15">&lt;<argument pos:start="8:12" pos:end="8:14"><expr pos:start="8:12" pos:end="8:14"><name pos:start="8:12" pos:end="8:14">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="8:16" pos:end="8:19">time</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name><init pos:start="9:10" pos:end="9:11">=<expr pos:start="9:11" pos:end="9:11"><literal type="number" pos:start="9:11" pos:end="9:11">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:14"><decl pos:start="10:5" pos:end="10:13"><type pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:10">string</name></type> <name pos:start="10:12" pos:end="10:13">s1</name></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:11"><expr pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:7">cin</name><operator pos:start="11:8" pos:end="11:9">&gt;&gt;</operator><name pos:start="11:10" pos:end="11:10">x</name></expr>;</expr_stmt>
    <while pos:start="12:5" pos:end="20:5">while<condition pos:start="12:10" pos:end="12:18">(<expr pos:start="12:11" pos:end="12:17"><name pos:start="12:11" pos:end="12:13">cin</name><operator pos:start="12:14" pos:end="12:15">&gt;&gt;</operator><name pos:start="12:16" pos:end="12:17">s1</name></expr>)</condition><block pos:start="12:19" pos:end="20:5">{<block_content pos:start="13:9" pos:end="19:12">
        <expr_stmt pos:start="13:9" pos:end="13:24"><expr pos:start="13:9" pos:end="13:23"><call pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:10">.</operator><name pos:start="13:11" pos:end="13:19">push_back</name></name><argument_list pos:start="13:20" pos:end="13:23">(<argument pos:start="13:21" pos:end="13:22"><expr pos:start="13:21" pos:end="13:22"><name pos:start="13:21" pos:end="13:22">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="14:9" pos:end="18:9"><if pos:start="14:9" pos:end="18:9">if<condition pos:start="14:11" pos:end="14:30">(<expr pos:start="14:12" pos:end="14:29"><name pos:start="14:12" pos:end="14:13">s1</name><operator pos:start="14:14" pos:end="14:15">!=</operator><literal type="string" pos:start="14:16" pos:end="14:29">"tingtingitng"</literal></expr>)</condition><block pos:start="14:31" pos:end="18:9">{<block_content pos:start="15:13" pos:end="17:30">
            <decl_stmt pos:start="15:13" pos:end="15:18"><decl pos:start="15:13" pos:end="15:17"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:17">a</name></decl>;</decl_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:19"><expr pos:start="16:13" pos:end="16:18"><name pos:start="16:13" pos:end="16:15">cin</name><operator pos:start="16:16" pos:end="16:17">&gt;&gt;</operator><name pos:start="16:18" pos:end="16:18">a</name></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:30"><expr pos:start="17:13" pos:end="17:29"><call pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:16">time</name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:26">push_back</name></name><argument_list pos:start="17:27" pos:end="17:29">(<argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:12"><expr pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:9">i</name><operator pos:start="19:10" pos:end="19:11">++</operator></expr>;</expr_stmt>
    </block_content>}</block></while><expr_stmt pos:start="20:6" pos:end="20:9"><expr pos:start="20:6" pos:end="20:8"><name pos:start="20:6" pos:end="20:6">i</name><operator pos:start="20:7" pos:end="20:7">=</operator><literal type="number" pos:start="20:8" pos:end="20:8">0</literal></expr>;</expr_stmt>
    <while pos:start="21:5" pos:end="35:5">while<condition pos:start="21:10" pos:end="21:14">(<expr pos:start="21:11" pos:end="21:13"><name pos:start="21:11" pos:end="21:11">x</name><operator pos:start="21:12" pos:end="21:12">&gt;</operator><literal type="number" pos:start="21:13" pos:end="21:13">0</literal></expr>)</condition><block pos:start="21:15" pos:end="35:5">{<block_content pos:start="22:9" pos:end="34:12">
        <if_stmt pos:start="22:9" pos:end="33:9"><if pos:start="22:9" pos:end="28:9">if<condition pos:start="22:11" pos:end="22:38">(<expr pos:start="22:12" pos:end="22:37"><name pos:start="22:12" pos:end="22:12">i</name><operator pos:start="22:13" pos:end="22:14">!=</operator><literal type="number" pos:start="22:15" pos:end="22:15">0</literal><operator pos:start="22:16" pos:end="22:17">&amp;&amp;</operator><name pos:start="22:18" pos:end="22:21"><name pos:start="22:18" pos:end="22:18">s</name><index pos:start="22:19" pos:end="22:21">[<expr pos:start="22:20" pos:end="22:20"><name pos:start="22:20" pos:end="22:20">i</name></expr>]</index></name><operator pos:start="22:22" pos:end="22:23">==</operator><literal type="string" pos:start="22:24" pos:end="22:37">"tingtingting"</literal></expr>)</condition><block pos:start="22:39" pos:end="28:9">{<block_content pos:start="23:13" pos:end="27:13">
            <expr_stmt pos:start="23:13" pos:end="23:25"><expr pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:13">x</name><operator pos:start="23:14" pos:end="23:15">-=</operator><name pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:19">time</name><index pos:start="23:20" pos:end="23:24">[<expr pos:start="23:21" pos:end="23:23"><name pos:start="23:21" pos:end="23:21">i</name><operator pos:start="23:22" pos:end="23:22">-</operator><literal type="number" pos:start="23:23" pos:end="23:23">1</literal></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="24:13" pos:end="27:13"><if pos:start="24:13" pos:end="27:13">if<condition pos:start="24:15" pos:end="24:34">(<expr pos:start="24:16" pos:end="24:33"><name pos:start="24:16" pos:end="24:19"><name pos:start="24:16" pos:end="24:16">s</name><index pos:start="24:17" pos:end="24:19">[<expr pos:start="24:18" pos:end="24:18"><name pos:start="24:18" pos:end="24:18">i</name></expr>]</index></name><operator pos:start="24:20" pos:end="24:21">==</operator><literal type="string" pos:start="24:22" pos:end="24:33">"kaomianjin"</literal></expr>)</condition><block pos:start="24:35" pos:end="27:13">{<block_content pos:start="25:17" pos:end="26:22">
                <expr_stmt pos:start="25:17" pos:end="25:30"><expr pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:19">trl</name><operator pos:start="25:20" pos:end="25:20">=</operator><literal type="string" pos:start="25:21" pos:end="25:29">"Hahaha."</literal></expr>;</expr_stmt>
                <break pos:start="26:17" pos:end="26:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="28:10" pos:end="33:9">else if<condition pos:start="28:17" pos:end="28:58">(<expr pos:start="28:18" pos:end="28:57"><name pos:start="28:18" pos:end="28:18">i</name><operator pos:start="28:19" pos:end="28:20">!=</operator><name pos:start="28:21" pos:end="28:24"><name pos:start="28:21" pos:end="28:21">s</name><index pos:start="28:22" pos:end="28:24">[<expr pos:start="28:23" pos:end="28:23"><name pos:start="28:23" pos:end="28:23">i</name></expr>]</index></name><operator pos:start="28:25" pos:end="28:25">.</operator><call pos:start="28:26" pos:end="28:31"><name pos:start="28:26" pos:end="28:29">size</name><argument_list pos:start="28:30" pos:end="28:31">()</argument_list></call><operator pos:start="28:32" pos:end="28:32">-</operator><literal type="number" pos:start="28:33" pos:end="28:33">1</literal><operator pos:start="28:34" pos:end="28:35">&amp;&amp;</operator><name pos:start="28:36" pos:end="28:41"><name pos:start="28:36" pos:end="28:36">s</name><index pos:start="28:37" pos:end="28:41">[<expr pos:start="28:38" pos:end="28:40"><name pos:start="28:38" pos:end="28:38">i</name><operator pos:start="28:39" pos:end="28:39">+</operator><literal type="number" pos:start="28:40" pos:end="28:40">1</literal></expr>]</index></name><operator pos:start="28:42" pos:end="28:43">!=</operator><literal type="string" pos:start="28:44" pos:end="28:57">"tingtingting"</literal></expr>)</condition><block pos:start="28:59" pos:end="33:9">{<block_content pos:start="29:13" pos:end="32:13">
            <if_stmt pos:start="29:13" pos:end="32:13"><if pos:start="29:13" pos:end="32:13">if<condition pos:start="29:15" pos:end="29:34">(<expr pos:start="29:16" pos:end="29:33"><name pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:16">s</name><index pos:start="29:17" pos:end="29:19">[<expr pos:start="29:18" pos:end="29:18"><name pos:start="29:18" pos:end="29:18">i</name></expr>]</index></name><operator pos:start="29:20" pos:end="29:21">==</operator><literal type="string" pos:start="29:22" pos:end="29:33">"kaomianjin"</literal></expr>)</condition><block pos:start="29:35" pos:end="32:13">{<block_content pos:start="30:17" pos:end="31:22">
                <expr_stmt pos:start="30:17" pos:end="30:39"><expr pos:start="30:17" pos:end="30:38"><name pos:start="30:17" pos:end="30:19">trl</name><operator pos:start="30:20" pos:end="30:20">=</operator><literal type="string" pos:start="30:21" pos:end="30:38">"Congratulations!"</literal></expr>;</expr_stmt>
                <break pos:start="31:17" pos:end="31:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:12"><expr pos:start="34:9" pos:end="34:11"><name pos:start="34:9" pos:end="34:9">i</name><operator pos:start="34:10" pos:end="34:11">++</operator></expr>;</expr_stmt>
    </block_content>}</block></while><expr_stmt pos:start="35:6" pos:end="35:21"><expr pos:start="35:6" pos:end="35:20"><name pos:start="35:6" pos:end="35:9">cout</name><operator pos:start="35:10" pos:end="35:11">&lt;&lt;</operator><name pos:start="35:12" pos:end="35:14">trl</name><operator pos:start="35:15" pos:end="35:16">&lt;&lt;</operator><name pos:start="35:17" pos:end="35:20">endl</name></expr>;</expr_stmt>
    <return pos:start="36:5" pos:end="36:13">return <expr pos:start="36:12" pos:end="36:12"><literal type="number" pos:start="36:12" pos:end="36:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
