<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/439/439.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:17">&lt;vector&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:20"><decl pos:start="5:1" pos:end="5:19"><type pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:6">vector</name><argument_list type="generic" pos:start="5:7" pos:end="5:11">&lt;<argument pos:start="5:8" pos:end="5:10"><expr pos:start="5:8" pos:end="5:10"><name pos:start="5:8" pos:end="5:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="5:13" pos:end="5:19"><name pos:start="5:13" pos:end="5:13">G</name><index pos:start="5:14" pos:end="5:19">[<expr pos:start="5:15" pos:end="5:18"><literal type="number" pos:start="5:15" pos:end="5:18">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="40:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list><block pos:start="6:11" pos:end="40:1">{<block_content pos:start="7:5" pos:end="39:13">
    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><call pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:31">(<argument pos:start="7:13" pos:end="7:18"><expr pos:start="7:13" pos:end="7:18"><literal type="string" pos:start="7:13" pos:end="7:18">"p.in"</literal></expr></argument>, <argument pos:start="7:21" pos:end="7:23"><expr pos:start="7:21" pos:end="7:23"><literal type="string" pos:start="7:21" pos:end="7:23">"r"</literal></expr></argument>, <argument pos:start="7:26" pos:end="7:30"><expr pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:34"><expr pos:start="8:5" pos:end="8:33"><call pos:start="8:5" pos:end="8:33"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:33">(<argument pos:start="8:13" pos:end="8:19"><expr pos:start="8:13" pos:end="8:19"><literal type="string" pos:start="8:13" pos:end="8:19">"p.out"</literal></expr></argument>, <argument pos:start="8:22" pos:end="8:24"><expr pos:start="8:22" pos:end="8:24"><literal type="string" pos:start="8:22" pos:end="8:24">"w"</literal></expr></argument>, <argument pos:start="8:27" pos:end="8:32"><expr pos:start="8:27" pos:end="8:32"><name pos:start="8:27" pos:end="8:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:13"><expr pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:7">cin</name> <operator pos:start="10:9" pos:end="10:10">&gt;&gt;</operator> <name pos:start="10:12" pos:end="10:12">t</name></expr>;</expr_stmt>
    <for pos:start="11:5" pos:end="38:5">for<control pos:start="11:8" pos:end="11:30">(<init pos:start="11:9" pos:end="11:18"><decl pos:start="11:9" pos:end="11:17"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>;</init> <condition pos:start="11:20" pos:end="11:25"><expr pos:start="11:20" pos:end="11:24"><name pos:start="11:20" pos:end="11:20">i</name> <operator pos:start="11:22" pos:end="11:22">&lt;</operator> <name pos:start="11:24" pos:end="11:24">t</name></expr>;</condition> <incr pos:start="11:27" pos:end="11:29"><expr pos:start="11:27" pos:end="11:29"><name pos:start="11:27" pos:end="11:27">i</name><operator pos:start="11:28" pos:end="11:29">++</operator></expr></incr>)</control><block pos:start="11:31" pos:end="38:5">{<block_content pos:start="12:9" pos:end="37:28">
        <decl_stmt pos:start="12:9" pos:end="12:14"><decl pos:start="12:9" pos:end="12:13"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">n</name></decl>;</decl_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:17"><expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:11">cin</name> <operator pos:start="13:13" pos:end="13:14">&gt;&gt;</operator> <name pos:start="13:16" pos:end="13:16">n</name></expr>;</expr_stmt>
        <for pos:start="14:9" pos:end="19:9">for<control pos:start="14:12" pos:end="14:38">(<init pos:start="14:13" pos:end="14:22"><decl pos:start="14:13" pos:end="14:21"><type pos:start="14:13" pos:end="14:15"><name pos:start="14:13" pos:end="14:15">int</name></type> <name pos:start="14:17" pos:end="14:17">j</name> <init pos:start="14:19" pos:end="14:21">= <expr pos:start="14:21" pos:end="14:21"><literal type="number" pos:start="14:21" pos:end="14:21">0</literal></expr></init></decl>;</init> <condition pos:start="14:24" pos:end="14:33"><expr pos:start="14:24" pos:end="14:32"><name pos:start="14:24" pos:end="14:24">j</name> <operator pos:start="14:26" pos:end="14:26">&lt;</operator> <name pos:start="14:28" pos:end="14:28">n</name> <operator pos:start="14:30" pos:end="14:30">-</operator> <literal type="number" pos:start="14:32" pos:end="14:32">1</literal></expr>;</condition> <incr pos:start="14:35" pos:end="14:37"><expr pos:start="14:35" pos:end="14:37"><name pos:start="14:35" pos:end="14:35">j</name><operator pos:start="14:36" pos:end="14:37">++</operator></expr></incr>)</control><block pos:start="14:39" pos:end="19:9">{<block_content pos:start="15:13" pos:end="18:30">
            <decl_stmt pos:start="15:13" pos:end="15:21"><decl pos:start="15:13" pos:end="15:17"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:17">x</name></decl>, <decl pos:start="15:20" pos:end="15:20"><type ref="prev" pos:start="15:13" pos:end="15:15"/><name pos:start="15:20" pos:end="15:20">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:26"><expr pos:start="16:13" pos:end="16:25"><name pos:start="16:13" pos:end="16:15">cin</name> <operator pos:start="16:17" pos:end="16:18">&gt;&gt;</operator> <name pos:start="16:20" pos:end="16:20">x</name> <operator pos:start="16:22" pos:end="16:23">&gt;&gt;</operator> <name pos:start="16:25" pos:end="16:25">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:30"><expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:13">G</name><index pos:start="17:14" pos:end="17:16">[<expr pos:start="17:15" pos:end="17:15"><name pos:start="17:15" pos:end="17:15">x</name></expr>]</index></name><operator pos:start="17:17" pos:end="17:17">.</operator><call pos:start="17:18" pos:end="17:29"><name pos:start="17:18" pos:end="17:26">push_back</name><argument_list pos:start="17:27" pos:end="17:29">(<argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:30"><expr pos:start="18:13" pos:end="18:29"><name pos:start="18:13" pos:end="18:16"><name pos:start="18:13" pos:end="18:13">G</name><index pos:start="18:14" pos:end="18:16">[<expr pos:start="18:15" pos:end="18:15"><name pos:start="18:15" pos:end="18:15">y</name></expr>]</index></name><operator pos:start="18:17" pos:end="18:17">.</operator><call pos:start="18:18" pos:end="18:29"><name pos:start="18:18" pos:end="18:26">push_back</name><argument_list pos:start="18:27" pos:end="18:29">(<argument pos:start="18:28" pos:end="18:28"><expr pos:start="18:28" pos:end="18:28"><name pos:start="18:28" pos:end="18:28">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="20:9" pos:end="20:20"><decl pos:start="20:9" pos:end="20:19"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:15">ans</name> <init pos:start="20:17" pos:end="20:19">= <expr pos:start="20:19" pos:end="20:19"><literal type="number" pos:start="20:19" pos:end="20:19">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="21:9" pos:end="36:9">for<control pos:start="21:12" pos:end="21:35">(<init pos:start="21:13" pos:end="21:22"><decl pos:start="21:13" pos:end="21:21"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:17">j</name> <init pos:start="21:19" pos:end="21:21">= <expr pos:start="21:21" pos:end="21:21"><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr></init></decl>;</init> <condition pos:start="21:24" pos:end="21:30"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:24">j</name> <operator pos:start="21:26" pos:end="21:27">&lt;=</operator> <name pos:start="21:29" pos:end="21:29">n</name></expr>;</condition> <incr pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:32">j</name><operator pos:start="21:33" pos:end="21:34">++</operator></expr></incr>)</control><block pos:start="21:36" pos:end="36:9">{<block_content pos:start="22:13" pos:end="35:13">
            <decl_stmt pos:start="22:13" pos:end="22:29"><decl pos:start="22:13" pos:end="22:28"><type pos:start="22:13" pos:end="22:16"><name pos:start="22:13" pos:end="22:16">bool</name></type> <name pos:start="22:18" pos:end="22:21">flag</name> <init pos:start="22:23" pos:end="22:28">= <expr pos:start="22:25" pos:end="22:28"><literal type="boolean" pos:start="22:25" pos:end="22:28">true</literal></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="23:13" pos:end="25:13"><if pos:start="23:13" pos:end="25:13">if<condition pos:start="23:15" pos:end="23:32">(<expr pos:start="23:16" pos:end="23:31"><name pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:16">G</name><index pos:start="23:17" pos:end="23:19">[<expr pos:start="23:18" pos:end="23:18"><name pos:start="23:18" pos:end="23:18">j</name></expr>]</index></name><operator pos:start="23:20" pos:end="23:20">.</operator><call pos:start="23:21" pos:end="23:26"><name pos:start="23:21" pos:end="23:24">size</name><argument_list pos:start="23:25" pos:end="23:26">()</argument_list></call> <operator pos:start="23:28" pos:end="23:29">==</operator> <literal type="number" pos:start="23:31" pos:end="23:31">0</literal></expr>)</condition><block pos:start="23:33" pos:end="25:13">{<block_content pos:start="24:17" pos:end="24:25">
                <continue pos:start="24:17" pos:end="24:25">continue;</continue>
            </block_content>}</block></if></if_stmt>
            <for pos:start="26:13" pos:end="32:13">for<control pos:start="26:16" pos:end="26:48">(<init pos:start="26:17" pos:end="26:26"><decl pos:start="26:17" pos:end="26:25"><type pos:start="26:17" pos:end="26:19"><name pos:start="26:17" pos:end="26:19">int</name></type> <name pos:start="26:21" pos:end="26:21">k</name> <init pos:start="26:23" pos:end="26:25">= <expr pos:start="26:25" pos:end="26:25"><literal type="number" pos:start="26:25" pos:end="26:25">0</literal></expr></init></decl>;</init> <condition pos:start="26:28" pos:end="26:43"><expr pos:start="26:28" pos:end="26:42"><name pos:start="26:28" pos:end="26:28">k</name> <operator pos:start="26:30" pos:end="26:30">&lt;</operator> <name pos:start="26:32" pos:end="26:35"><name pos:start="26:32" pos:end="26:32">G</name><index pos:start="26:33" pos:end="26:35">[<expr pos:start="26:34" pos:end="26:34"><name pos:start="26:34" pos:end="26:34">j</name></expr>]</index></name><operator pos:start="26:36" pos:end="26:36">.</operator><call pos:start="26:37" pos:end="26:42"><name pos:start="26:37" pos:end="26:40">size</name><argument_list pos:start="26:41" pos:end="26:42">()</argument_list></call></expr>;</condition> <incr pos:start="26:45" pos:end="26:47"><expr pos:start="26:45" pos:end="26:47"><name pos:start="26:45" pos:end="26:45">k</name><operator pos:start="26:46" pos:end="26:47">++</operator></expr></incr>)</control><block pos:start="26:49" pos:end="32:13">{<block_content pos:start="27:17" pos:end="31:17">
                <decl_stmt pos:start="27:17" pos:end="27:32"><decl pos:start="27:17" pos:end="27:31"><type pos:start="27:17" pos:end="27:19"><name pos:start="27:17" pos:end="27:19">int</name></type> <name pos:start="27:21" pos:end="27:21">t</name> <init pos:start="27:23" pos:end="27:31">= <expr pos:start="27:25" pos:end="27:31"><name pos:start="27:25" pos:end="27:31"><name pos:start="27:25" pos:end="27:25">G</name><index pos:start="27:26" pos:end="27:28">[<expr pos:start="27:27" pos:end="27:27"><name pos:start="27:27" pos:end="27:27">j</name></expr>]</index><index pos:start="27:29" pos:end="27:31">[<expr pos:start="27:30" pos:end="27:30"><name pos:start="27:30" pos:end="27:30">k</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="28:17" pos:end="31:17"><if pos:start="28:17" pos:end="31:17">if<condition pos:start="28:19" pos:end="28:45">(<expr pos:start="28:20" pos:end="28:44"><name pos:start="28:20" pos:end="28:23"><name pos:start="28:20" pos:end="28:20">G</name><index pos:start="28:21" pos:end="28:23">[<expr pos:start="28:22" pos:end="28:22"><name pos:start="28:22" pos:end="28:22">j</name></expr>]</index></name><operator pos:start="28:24" pos:end="28:24">.</operator><call pos:start="28:25" pos:end="28:30"><name pos:start="28:25" pos:end="28:28">size</name><argument_list pos:start="28:29" pos:end="28:30">()</argument_list></call> <operator pos:start="28:32" pos:end="28:32">&lt;</operator> <name pos:start="28:34" pos:end="28:37"><name pos:start="28:34" pos:end="28:34">G</name><index pos:start="28:35" pos:end="28:37">[<expr pos:start="28:36" pos:end="28:36"><name pos:start="28:36" pos:end="28:36">t</name></expr>]</index></name><operator pos:start="28:38" pos:end="28:38">.</operator><call pos:start="28:39" pos:end="28:44"><name pos:start="28:39" pos:end="28:42">size</name><argument_list pos:start="28:43" pos:end="28:44">()</argument_list></call></expr>)</condition><block pos:start="28:46" pos:end="31:17">{<block_content pos:start="29:21" pos:end="30:26">
                    <expr_stmt pos:start="29:21" pos:end="29:33"><expr pos:start="29:21" pos:end="29:32"><name pos:start="29:21" pos:end="29:24">flag</name> <operator pos:start="29:26" pos:end="29:26">=</operator> <literal type="boolean" pos:start="29:28" pos:end="29:32">false</literal></expr>;</expr_stmt>
                    <break pos:start="30:21" pos:end="30:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="33:13" pos:end="35:13"><if pos:start="33:13" pos:end="35:13">if<condition pos:start="33:15" pos:end="33:28">(<expr pos:start="33:16" pos:end="33:27"><name pos:start="33:16" pos:end="33:19">flag</name> <operator pos:start="33:21" pos:end="33:22">==</operator> <literal type="boolean" pos:start="33:24" pos:end="33:27">true</literal></expr>)</condition><block pos:start="33:29" pos:end="35:13">{<block_content pos:start="34:17" pos:end="34:22">
                <expr_stmt pos:start="34:17" pos:end="34:22"><expr pos:start="34:17" pos:end="34:21"><name pos:start="34:17" pos:end="34:19">ans</name><operator pos:start="34:20" pos:end="34:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="37:9" pos:end="37:28"><expr pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:12">cout</name> <operator pos:start="37:14" pos:end="37:15">&lt;&lt;</operator> <name pos:start="37:17" pos:end="37:19">ans</name> <operator pos:start="37:21" pos:end="37:22">&lt;&lt;</operator> <name pos:start="37:24" pos:end="37:27">endl</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
