<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/456/456.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;vector&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:30"><decl pos:start="4:1" pos:end="4:19"><type pos:start="4:1" pos:end="4:6"><name pos:start="4:1" pos:end="4:6">double</name></type> <name pos:start="4:8" pos:end="4:19"><name pos:start="4:8" pos:end="4:13">summer</name><index pos:start="4:14" pos:end="4:19">[<expr pos:start="4:15" pos:end="4:18"><literal type="number" pos:start="4:15" pos:end="4:18">1005</literal></expr>]</index></name></decl>,<decl pos:start="4:21" pos:end="4:29"><type ref="prev" pos:start="4:1" pos:end="4:6"/><name pos:start="4:21" pos:end="4:29"><name pos:start="4:21" pos:end="4:23">num</name><index pos:start="4:24" pos:end="4:29">[<expr pos:start="4:25" pos:end="4:28"><literal type="number" pos:start="4:25" pos:end="4:28">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<struct pos:start="5:1" pos:end="10:2">struct <name pos:start="5:8" pos:end="5:11">limk</name>
<block pos:start="6:1" pos:end="10:1">{<public type="default" pos:start="7:5" pos:end="9:12">
    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">kind</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:13"><decl pos:start="8:5" pos:end="8:12"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:12">unit</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">day</name></decl>;</decl_stmt>
</public>}</block>;</struct>
<decl_stmt pos:start="11:1" pos:end="11:16"><decl pos:start="11:1" pos:end="11:15"><type pos:start="11:1" pos:end="11:13"><name pos:start="11:1" pos:end="11:13"><name pos:start="11:1" pos:end="11:6">vector</name> <argument_list type="generic" pos:start="11:8" pos:end="11:13">&lt;<argument pos:start="11:9" pos:end="11:12"><expr pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:12">limk</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="11:15" pos:end="11:15">v</name></decl>;</decl_stmt>
<function pos:start="12:1" pos:end="34:1"><type pos:start="12:1" pos:end="12:4"><name pos:start="12:1" pos:end="12:4">bool</name></type> <name pos:start="12:6" pos:end="12:8">cmp</name><parameter_list pos:start="12:9" pos:end="12:23">(<parameter pos:start="12:10" pos:end="12:15"><decl pos:start="12:10" pos:end="12:15"><type pos:start="12:10" pos:end="12:15"><name pos:start="12:10" pos:end="12:13">limk</name></type> <name pos:start="12:15" pos:end="12:15">a</name></decl></parameter>,<parameter pos:start="12:17" pos:end="12:22"><decl pos:start="12:17" pos:end="12:22"><type pos:start="12:17" pos:end="12:22"><name pos:start="12:17" pos:end="12:20">limk</name></type> <name pos:start="12:22" pos:end="12:22">b</name></decl></parameter>)</parameter_list>
<block pos:start="13:1" pos:end="34:1">{<block_content pos:start="14:5" pos:end="33:5">
    <if_stmt pos:start="14:5" pos:end="33:5"><if pos:start="14:5" pos:end="22:5">if<condition pos:start="14:7" pos:end="14:22">(<expr pos:start="14:8" pos:end="14:21"><name pos:start="14:8" pos:end="14:13"><name pos:start="14:8" pos:end="14:8">a</name><operator pos:start="14:9" pos:end="14:9">.</operator><name pos:start="14:10" pos:end="14:13">kind</name></name><operator pos:start="14:14" pos:end="14:15">!=</operator><name pos:start="14:16" pos:end="14:21"><name pos:start="14:16" pos:end="14:16">b</name><operator pos:start="14:17" pos:end="14:17">.</operator><name pos:start="14:18" pos:end="14:21">kind</name></name></expr>)</condition>
    <block pos:start="15:5" pos:end="22:5">{<block_content pos:start="16:9" pos:end="21:9">
        <decl_stmt pos:start="16:9" pos:end="16:44"><decl pos:start="16:9" pos:end="16:43"><type pos:start="16:9" pos:end="16:14"><name pos:start="16:9" pos:end="16:14">double</name></type> <name pos:start="16:16" pos:end="16:16">x</name><init pos:start="16:17" pos:end="16:43">=<expr pos:start="16:18" pos:end="16:43"><name pos:start="16:18" pos:end="16:31"><name pos:start="16:18" pos:end="16:23">summer</name><index pos:start="16:24" pos:end="16:31">[<expr pos:start="16:25" pos:end="16:30"><name pos:start="16:25" pos:end="16:30"><name pos:start="16:25" pos:end="16:25">a</name><operator pos:start="16:26" pos:end="16:26">.</operator><name pos:start="16:27" pos:end="16:30">kind</name></name></expr>]</index></name><operator pos:start="16:32" pos:end="16:32">/</operator><name pos:start="16:33" pos:end="16:43"><name pos:start="16:33" pos:end="16:35">num</name><index pos:start="16:36" pos:end="16:43">[<expr pos:start="16:37" pos:end="16:42"><name pos:start="16:37" pos:end="16:42"><name pos:start="16:37" pos:end="16:37">a</name><operator pos:start="16:38" pos:end="16:38">.</operator><name pos:start="16:39" pos:end="16:42">kind</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="17:9" pos:end="17:44"><decl pos:start="17:9" pos:end="17:43"><type pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">double</name></type> <name pos:start="17:16" pos:end="17:16">y</name><init pos:start="17:17" pos:end="17:43">=<expr pos:start="17:18" pos:end="17:43"><name pos:start="17:18" pos:end="17:31"><name pos:start="17:18" pos:end="17:23">summer</name><index pos:start="17:24" pos:end="17:31">[<expr pos:start="17:25" pos:end="17:30"><name pos:start="17:25" pos:end="17:30"><name pos:start="17:25" pos:end="17:25">b</name><operator pos:start="17:26" pos:end="17:26">.</operator><name pos:start="17:27" pos:end="17:30">kind</name></name></expr>]</index></name><operator pos:start="17:32" pos:end="17:32">/</operator><name pos:start="17:33" pos:end="17:43"><name pos:start="17:33" pos:end="17:35">num</name><index pos:start="17:36" pos:end="17:43">[<expr pos:start="17:37" pos:end="17:42"><name pos:start="17:37" pos:end="17:42"><name pos:start="17:37" pos:end="17:37">b</name><operator pos:start="17:38" pos:end="17:38">.</operator><name pos:start="17:39" pos:end="17:42">kind</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="18:9" pos:end="21:9"><if pos:start="18:9" pos:end="21:9">if<condition pos:start="18:11" pos:end="18:16">(<expr pos:start="18:12" pos:end="18:15"><name pos:start="18:12" pos:end="18:12">x</name><operator pos:start="18:13" pos:end="18:14">!=</operator><name pos:start="18:15" pos:end="18:15">y</name></expr>)</condition>
        <block pos:start="19:9" pos:end="21:9">{<block_content pos:start="20:13" pos:end="20:23">
            <return pos:start="20:13" pos:end="20:23">return <expr pos:start="20:20" pos:end="20:22"><name pos:start="20:20" pos:end="20:20">x</name><operator pos:start="20:21" pos:end="20:21">&gt;</operator><name pos:start="20:22" pos:end="20:22">y</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if>
    <else pos:start="23:5" pos:end="33:5">else
    <block pos:start="24:5" pos:end="33:5">{<block_content pos:start="25:9" pos:end="32:9">
        <if_stmt pos:start="25:9" pos:end="32:9"><if pos:start="25:9" pos:end="28:9">if<condition pos:start="25:11" pos:end="25:26">(<expr pos:start="25:12" pos:end="25:25"><name pos:start="25:12" pos:end="25:17"><name pos:start="25:12" pos:end="25:12">a</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:17">unit</name></name><operator pos:start="25:18" pos:end="25:19">!=</operator><name pos:start="25:20" pos:end="25:25"><name pos:start="25:20" pos:end="25:20">b</name><operator pos:start="25:21" pos:end="25:21">.</operator><name pos:start="25:22" pos:end="25:25">unit</name></name></expr>)</condition>
        <block pos:start="26:9" pos:end="28:9">{<block_content pos:start="27:13" pos:end="27:33">
            <return pos:start="27:13" pos:end="27:33">return <expr pos:start="27:20" pos:end="27:32"><name pos:start="27:20" pos:end="27:25"><name pos:start="27:20" pos:end="27:20">a</name><operator pos:start="27:21" pos:end="27:21">.</operator><name pos:start="27:22" pos:end="27:25">unit</name></name><operator pos:start="27:26" pos:end="27:26">&gt;</operator><name pos:start="27:27" pos:end="27:32"><name pos:start="27:27" pos:end="27:27">b</name><operator pos:start="27:28" pos:end="27:28">.</operator><name pos:start="27:29" pos:end="27:32">unit</name></name></expr>;</return>
        </block_content>}</block></if>
        <else pos:start="29:9" pos:end="32:9">else
        <block pos:start="30:9" pos:end="32:9">{<block_content pos:start="31:13" pos:end="31:31">
            <return pos:start="31:13" pos:end="31:31">return <expr pos:start="31:20" pos:end="31:30"><name pos:start="31:20" pos:end="31:30"><name pos:start="31:20" pos:end="31:20">a</name><operator pos:start="31:21" pos:end="31:21">.</operator><name pos:start="31:22" pos:end="31:24">day</name></name><operator pos:start="31:25" pos:end="31:25">&lt;</operator><name pos:start="31:26" pos:end="31:30"><name pos:start="31:26" pos:end="31:26">b</name><operator pos:start="31:27" pos:end="31:27">.</operator><name pos:start="31:28" pos:end="31:30">day</name></name></expr>;</return>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="35:1" pos:end="61:1"><type pos:start="35:1" pos:end="35:3"><name pos:start="35:1" pos:end="35:3">int</name></type> <name pos:start="35:5" pos:end="35:8">main</name><parameter_list pos:start="35:9" pos:end="35:10">()</parameter_list>
<block pos:start="36:1" pos:end="61:1">{<block_content pos:start="37:5" pos:end="60:13">
    <decl_stmt pos:start="37:5" pos:end="37:14"><decl pos:start="37:5" pos:end="37:9"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:9">n</name></decl>,<decl pos:start="37:11" pos:end="37:13"><type ref="prev" pos:start="37:5" pos:end="37:7"/><name pos:start="37:11" pos:end="37:11">k</name><init pos:start="37:12" pos:end="37:13">=<expr pos:start="37:13" pos:end="37:13"><literal type="number" pos:start="37:13" pos:end="37:13">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:11"><expr pos:start="38:5" pos:end="38:10"><name pos:start="38:5" pos:end="38:7">cin</name><operator pos:start="38:8" pos:end="38:9">&gt;&gt;</operator><name pos:start="38:10" pos:end="38:10">n</name></expr>;</expr_stmt>
    <for pos:start="39:5" pos:end="52:5">for<control pos:start="39:8" pos:end="39:24">(<init pos:start="39:9" pos:end="39:16"><decl pos:start="39:9" pos:end="39:15"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:13">i</name><init pos:start="39:14" pos:end="39:15">=<expr pos:start="39:15" pos:end="39:15"><literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr></init></decl>;</init><condition pos:start="39:17" pos:end="39:20"><expr pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:17">i</name><operator pos:start="39:18" pos:end="39:18">&lt;</operator><name pos:start="39:19" pos:end="39:19">n</name></expr>;</condition><incr pos:start="39:21" pos:end="39:23"><expr pos:start="39:21" pos:end="39:23"><name pos:start="39:21" pos:end="39:21">i</name><operator pos:start="39:22" pos:end="39:23">++</operator></expr></incr>)</control>
    <block pos:start="40:5" pos:end="52:5">{<block_content pos:start="41:9" pos:end="51:9">
        <decl_stmt pos:start="41:9" pos:end="41:15"><decl pos:start="41:9" pos:end="41:14"><type pos:start="41:9" pos:end="41:12"><name pos:start="41:9" pos:end="41:12">limk</name></type> <name pos:start="41:14" pos:end="41:14">a</name></decl>;</decl_stmt>
        <decl_stmt pos:start="42:9" pos:end="42:14"><decl pos:start="42:9" pos:end="42:13"><type pos:start="42:9" pos:end="42:11"><name pos:start="42:9" pos:end="42:11">int</name></type> <name pos:start="42:13" pos:end="42:13">g</name></decl>;</decl_stmt>
        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:11">cin</name><operator pos:start="43:12" pos:end="43:13">&gt;&gt;</operator><name pos:start="43:14" pos:end="43:19"><name pos:start="43:14" pos:end="43:14">a</name><operator pos:start="43:15" pos:end="43:15">.</operator><name pos:start="43:16" pos:end="43:19">kind</name></name><operator pos:start="43:20" pos:end="43:21">&gt;&gt;</operator><name pos:start="43:22" pos:end="43:27"><name pos:start="43:22" pos:end="43:22">a</name><operator pos:start="43:23" pos:end="43:23">.</operator><name pos:start="43:24" pos:end="43:27">unit</name></name><operator pos:start="43:28" pos:end="43:29">&gt;&gt;</operator><name pos:start="43:30" pos:end="43:30">g</name></expr>;</expr_stmt>
        <expr_stmt pos:start="44:9" pos:end="44:33"><expr pos:start="44:9" pos:end="44:32"><name pos:start="44:9" pos:end="44:22"><name pos:start="44:9" pos:end="44:14">summer</name><index pos:start="44:15" pos:end="44:22">[<expr pos:start="44:16" pos:end="44:21"><name pos:start="44:16" pos:end="44:21"><name pos:start="44:16" pos:end="44:16">a</name><operator pos:start="44:17" pos:end="44:17">.</operator><name pos:start="44:18" pos:end="44:21">kind</name></name></expr>]</index></name><operator pos:start="44:23" pos:end="44:24">+=</operator><name pos:start="44:25" pos:end="44:30"><name pos:start="44:25" pos:end="44:25">a</name><operator pos:start="44:26" pos:end="44:26">.</operator><name pos:start="44:27" pos:end="44:30">unit</name></name><operator pos:start="44:31" pos:end="44:31">*</operator><name pos:start="44:32" pos:end="44:32">g</name></expr>;</expr_stmt>
        <expr_stmt pos:start="45:9" pos:end="45:23"><expr pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:11">num</name><index pos:start="45:12" pos:end="45:19">[<expr pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:13">a</name><operator pos:start="45:14" pos:end="45:14">.</operator><name pos:start="45:15" pos:end="45:18">kind</name></name></expr>]</index></name><operator pos:start="45:20" pos:end="45:21">+=</operator><name pos:start="45:22" pos:end="45:22">g</name></expr>;</expr_stmt>
        <for pos:start="46:9" pos:end="51:9">for<control pos:start="46:12" pos:end="46:29">(<init pos:start="46:13" pos:end="46:20"><decl pos:start="46:13" pos:end="46:19"><type pos:start="46:13" pos:end="46:15"><name pos:start="46:13" pos:end="46:15">int</name></type> <name pos:start="46:17" pos:end="46:17">i</name><init pos:start="46:18" pos:end="46:19">=<expr pos:start="46:19" pos:end="46:19"><literal type="number" pos:start="46:19" pos:end="46:19">1</literal></expr></init></decl>;</init><condition pos:start="46:21" pos:end="46:25"><expr pos:start="46:21" pos:end="46:24"><name pos:start="46:21" pos:end="46:21">i</name><operator pos:start="46:22" pos:end="46:23">&lt;=</operator><name pos:start="46:24" pos:end="46:24">g</name></expr>;</condition><incr pos:start="46:26" pos:end="46:28"><expr pos:start="46:26" pos:end="46:28"><name pos:start="46:26" pos:end="46:26">i</name><operator pos:start="46:27" pos:end="46:28">++</operator></expr></incr>)</control>
        <block pos:start="47:9" pos:end="51:9">{<block_content pos:start="48:13" pos:end="50:16">
            <expr_stmt pos:start="48:13" pos:end="48:20"><expr pos:start="48:13" pos:end="48:19"><name pos:start="48:13" pos:end="48:17"><name pos:start="48:13" pos:end="48:13">a</name><operator pos:start="48:14" pos:end="48:14">.</operator><name pos:start="48:15" pos:end="48:17">day</name></name><operator pos:start="48:18" pos:end="48:18">=</operator><name pos:start="48:19" pos:end="48:19">k</name></expr>;</expr_stmt>
            <expr_stmt pos:start="49:13" pos:end="49:27"><expr pos:start="49:13" pos:end="49:26"><call pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:23"><name pos:start="49:13" pos:end="49:13">v</name><operator pos:start="49:14" pos:end="49:14">.</operator><name pos:start="49:15" pos:end="49:23">push_back</name></name><argument_list pos:start="49:24" pos:end="49:26">(<argument pos:start="49:25" pos:end="49:25"><expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="50:13" pos:end="50:16"><expr pos:start="50:13" pos:end="50:15"><name pos:start="50:13" pos:end="50:13">k</name><operator pos:start="50:14" pos:end="50:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><call pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:8">sort</name><argument_list pos:start="53:9" pos:end="53:31">(<argument pos:start="53:10" pos:end="53:18"><expr pos:start="53:10" pos:end="53:18"><call pos:start="53:10" pos:end="53:18"><name pos:start="53:10" pos:end="53:16"><name pos:start="53:10" pos:end="53:10">v</name><operator pos:start="53:11" pos:end="53:11">.</operator><name pos:start="53:12" pos:end="53:16">begin</name></name><argument_list pos:start="53:17" pos:end="53:18">()</argument_list></call></expr></argument>,<argument pos:start="53:20" pos:end="53:26"><expr pos:start="53:20" pos:end="53:26"><call pos:start="53:20" pos:end="53:26"><name pos:start="53:20" pos:end="53:24"><name pos:start="53:20" pos:end="53:20">v</name><operator pos:start="53:21" pos:end="53:21">.</operator><name pos:start="53:22" pos:end="53:24">end</name></name><argument_list pos:start="53:25" pos:end="53:26">()</argument_list></call></expr></argument>,<argument pos:start="53:28" pos:end="53:30"><expr pos:start="53:28" pos:end="53:30"><name pos:start="53:28" pos:end="53:30">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="54:5" pos:end="54:20"><decl pos:start="54:5" pos:end="54:19"><type pos:start="54:5" pos:end="54:13"><name pos:start="54:5" pos:end="54:8">long</name> <name pos:start="54:10" pos:end="54:13">long</name></type> <name pos:start="54:15" pos:end="54:17">ans</name><init pos:start="54:18" pos:end="54:19">=<expr pos:start="54:19" pos:end="54:19"><literal type="number" pos:start="54:19" pos:end="54:19">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="55:5" pos:end="58:5">for<control pos:start="55:8" pos:end="55:34">(<init pos:start="55:9" pos:end="55:16"><decl pos:start="55:9" pos:end="55:15"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:13">i</name><init pos:start="55:14" pos:end="55:15">=<expr pos:start="55:15" pos:end="55:15"><literal type="number" pos:start="55:15" pos:end="55:15">0</literal></expr></init></decl>;</init><condition pos:start="55:17" pos:end="55:30"><expr pos:start="55:17" pos:end="55:29"><name pos:start="55:17" pos:end="55:17">i</name><operator pos:start="55:18" pos:end="55:19">&lt;=</operator><call pos:start="55:20" pos:end="55:27"><name pos:start="55:20" pos:end="55:25"><name pos:start="55:20" pos:end="55:20">v</name><operator pos:start="55:21" pos:end="55:21">.</operator><name pos:start="55:22" pos:end="55:25">size</name></name><argument_list pos:start="55:26" pos:end="55:27">()</argument_list></call><operator pos:start="55:28" pos:end="55:28">-</operator><literal type="number" pos:start="55:29" pos:end="55:29">1</literal></expr>;</condition><incr pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><name pos:start="55:31" pos:end="55:31">i</name><operator pos:start="55:32" pos:end="55:33">++</operator></expr></incr>)</control>
    <block pos:start="56:5" pos:end="58:5">{<block_content pos:start="57:9" pos:end="57:29">
        <expr_stmt pos:start="57:9" pos:end="57:29"><expr pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:11">ans</name><operator pos:start="57:12" pos:end="57:13">+=</operator><call pos:start="57:14" pos:end="57:28"><name pos:start="57:14" pos:end="57:16">abs</name><argument_list pos:start="57:17" pos:end="57:28">(<argument pos:start="57:18" pos:end="57:27"><expr pos:start="57:18" pos:end="57:27"><name pos:start="57:18" pos:end="57:21"><name pos:start="57:18" pos:end="57:18">v</name><index pos:start="57:19" pos:end="57:21">[<expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">i</name></expr>]</index></name><operator pos:start="57:22" pos:end="57:22">.</operator><name pos:start="57:23" pos:end="57:25">day</name><operator pos:start="57:26" pos:end="57:26">-</operator><name pos:start="57:27" pos:end="57:27">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="59:5" pos:end="59:20"><expr pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:8">cout</name><operator pos:start="59:9" pos:end="59:10">&lt;&lt;</operator><name pos:start="59:11" pos:end="59:13">ans</name><operator pos:start="59:14" pos:end="59:15">&lt;&lt;</operator><name pos:start="59:16" pos:end="59:19">endl</name></expr>;</expr_stmt>
    <return pos:start="60:5" pos:end="60:13">return <expr pos:start="60:12" pos:end="60:12"><literal type="number" pos:start="60:12" pos:end="60:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
