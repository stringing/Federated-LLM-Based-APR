<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1198/1198.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="39:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name> <parameter_list pos:start="4:10" pos:end="4:11">()</parameter_list> <block pos:start="4:13" pos:end="39:1">{<block_content pos:start="5:5" pos:end="38:13">
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:13"><expr pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:7">cin</name> <operator pos:start="6:9" pos:end="6:10">&gt;&gt;</operator> <name pos:start="6:12" pos:end="6:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">string</name></type> <name pos:start="7:12" pos:end="7:17"><name pos:start="7:12" pos:end="7:12">q</name><index pos:start="7:13" pos:end="7:17">[<expr pos:start="7:14" pos:end="7:16"><literal type="number" pos:start="7:14" pos:end="7:16">105</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:21"><decl pos:start="8:5" pos:end="8:13"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">l</name> <init pos:start="8:11" pos:end="8:13">= <expr pos:start="8:13" pos:end="8:13"><literal type="number" pos:start="8:13" pos:end="8:13">0</literal></expr></init></decl>, <decl pos:start="8:16" pos:end="8:20"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:16" pos:end="8:16">r</name> <init pos:start="8:18" pos:end="8:20">= <expr pos:start="8:20" pos:end="8:20"><literal type="number" pos:start="8:20" pos:end="8:20">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">flag</name> <init pos:start="9:14" pos:end="9:16">= <expr pos:start="9:16" pos:end="9:16"><literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="10:5" pos:end="37:5">while<condition pos:start="10:10" pos:end="10:14">(<expr pos:start="10:11" pos:end="10:13"><name pos:start="10:11" pos:end="10:11">n</name><operator pos:start="10:12" pos:end="10:13">--</operator></expr>)</condition><block pos:start="10:15" pos:end="37:5">{<block_content pos:start="11:9" pos:end="36:9">
        <decl_stmt pos:start="11:9" pos:end="11:14"><decl pos:start="11:9" pos:end="11:13"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">k</name></decl>;</decl_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:17"><expr pos:start="12:9" pos:end="12:16"><name pos:start="12:9" pos:end="12:11">cin</name> <operator pos:start="12:13" pos:end="12:14">&gt;&gt;</operator> <name pos:start="12:16" pos:end="12:16">k</name></expr>;</expr_stmt>
        <if_stmt pos:start="13:9" pos:end="36:9"><if pos:start="13:9" pos:end="30:9">if<condition pos:start="13:11" pos:end="13:18">(<expr pos:start="13:12" pos:end="13:17"><name pos:start="13:12" pos:end="13:12">k</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>)</condition><block pos:start="13:19" pos:end="30:9">{<block_content pos:start="14:13" pos:end="29:16">
            <decl_stmt pos:start="14:13" pos:end="14:24"><decl pos:start="14:13" pos:end="14:23"><type pos:start="14:13" pos:end="14:18"><name pos:start="14:13" pos:end="14:18">string</name></type> <name pos:start="14:20" pos:end="14:23">name</name></decl>;</decl_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:24"><expr pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:15">cin</name> <operator pos:start="15:17" pos:end="15:18">&gt;&gt;</operator> <name pos:start="15:20" pos:end="15:23">name</name></expr>;</expr_stmt>
            <for pos:start="16:13" pos:end="25:13">for<control pos:start="16:16" pos:end="16:38">(<init pos:start="16:17" pos:end="16:26"><decl pos:start="16:17" pos:end="16:25"><type pos:start="16:17" pos:end="16:19"><name pos:start="16:17" pos:end="16:19">int</name></type> <name pos:start="16:21" pos:end="16:21">i</name> <init pos:start="16:23" pos:end="16:25">= <expr pos:start="16:25" pos:end="16:25"><name pos:start="16:25" pos:end="16:25">l</name></expr></init></decl>;</init> <condition pos:start="16:28" pos:end="16:33"><expr pos:start="16:28" pos:end="16:32"><name pos:start="16:28" pos:end="16:28">i</name> <operator pos:start="16:30" pos:end="16:30">&lt;</operator> <name pos:start="16:32" pos:end="16:32">r</name></expr>;</condition> <incr pos:start="16:35" pos:end="16:37"><expr pos:start="16:35" pos:end="16:37"><name pos:start="16:35" pos:end="16:35">i</name><operator pos:start="16:36" pos:end="16:37">++</operator></expr></incr>)</control><block pos:start="16:39" pos:end="25:13">{<block_content pos:start="17:17" pos:end="24:17">
                <if_stmt pos:start="17:17" pos:end="24:17"><if pos:start="17:17" pos:end="24:17">if<condition pos:start="17:19" pos:end="17:38">(<expr pos:start="17:20" pos:end="17:37"><name pos:start="17:20" pos:end="17:26"><name pos:start="17:20" pos:end="17:20">q</name><index pos:start="17:21" pos:end="17:23">[<expr pos:start="17:22" pos:end="17:22"><name pos:start="17:22" pos:end="17:22">i</name></expr>]</index><index pos:start="17:24" pos:end="17:26">[<expr pos:start="17:25" pos:end="17:25"><literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr>]</index></name> <operator pos:start="17:28" pos:end="17:29">==</operator> <name pos:start="17:31" pos:end="17:37"><name pos:start="17:31" pos:end="17:34">name</name><index pos:start="17:35" pos:end="17:37">[<expr pos:start="17:36" pos:end="17:36"><literal type="number" pos:start="17:36" pos:end="17:36">0</literal></expr>]</index></name></expr>)</condition><block pos:start="17:39" pos:end="24:17">{<block_content pos:start="18:21" pos:end="23:26">
                    <for pos:start="18:21" pos:end="20:21">for<control pos:start="18:24" pos:end="18:50">(<init pos:start="18:25" pos:end="18:34"><decl pos:start="18:25" pos:end="18:33"><type pos:start="18:25" pos:end="18:27"><name pos:start="18:25" pos:end="18:27">int</name></type> <name pos:start="18:29" pos:end="18:29">j</name> <init pos:start="18:31" pos:end="18:33">= <expr pos:start="18:33" pos:end="18:33"><name pos:start="18:33" pos:end="18:33">r</name></expr></init></decl>;</init> <condition pos:start="18:36" pos:end="18:45"><expr pos:start="18:36" pos:end="18:44"><name pos:start="18:36" pos:end="18:36">j</name> <operator pos:start="18:38" pos:end="18:38">&gt;</operator> <name pos:start="18:40" pos:end="18:40">i</name> <operator pos:start="18:42" pos:end="18:42">+</operator> <literal type="number" pos:start="18:44" pos:end="18:44">1</literal></expr>;</condition> <incr pos:start="18:47" pos:end="18:49"><expr pos:start="18:47" pos:end="18:49"><name pos:start="18:47" pos:end="18:47">j</name><operator pos:start="18:48" pos:end="18:49">++</operator></expr></incr>)</control><block pos:start="18:51" pos:end="20:21">{<block_content pos:start="19:25" pos:end="19:40">
                        <expr_stmt pos:start="19:25" pos:end="19:40"><expr pos:start="19:25" pos:end="19:39"><name pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:25">q</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><name pos:start="19:27" pos:end="19:27">j</name></expr>]</index></name> <operator pos:start="19:30" pos:end="19:30">=</operator> <name pos:start="19:32" pos:end="19:39"><name pos:start="19:32" pos:end="19:32">q</name><index pos:start="19:33" pos:end="19:39">[<expr pos:start="19:34" pos:end="19:38"><name pos:start="19:34" pos:end="19:34">j</name> <operator pos:start="19:36" pos:end="19:36">-</operator> <literal type="number" pos:start="19:38" pos:end="19:38">1</literal></expr>]</index></name></expr>;</expr_stmt>
                    </block_content>}</block></for>
                    <expr_stmt pos:start="21:21" pos:end="21:36"><expr pos:start="21:21" pos:end="21:35"><name pos:start="21:21" pos:end="21:28"><name pos:start="21:21" pos:end="21:21">q</name><index pos:start="21:22" pos:end="21:28">[<expr pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:23">i</name> <operator pos:start="21:25" pos:end="21:25">+</operator> <literal type="number" pos:start="21:27" pos:end="21:27">1</literal></expr>]</index></name> <operator pos:start="21:30" pos:end="21:30">=</operator> <name pos:start="21:32" pos:end="21:35">name</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="22:21" pos:end="22:29"><expr pos:start="22:21" pos:end="22:28"><name pos:start="22:21" pos:end="22:24">flag</name> <operator pos:start="22:26" pos:end="22:26">=</operator> <literal type="number" pos:start="22:28" pos:end="22:28">1</literal></expr>;</expr_stmt>
                    <break pos:start="23:21" pos:end="23:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="26:13" pos:end="28:13"><if pos:start="26:13" pos:end="28:13">if<condition pos:start="26:15" pos:end="26:21">(<expr pos:start="26:16" pos:end="26:20"><operator pos:start="26:16" pos:end="26:16">!</operator><name pos:start="26:17" pos:end="26:20">flag</name></expr>)</condition><block pos:start="26:22" pos:end="28:13">{<block_content pos:start="27:17" pos:end="27:28">
                <expr_stmt pos:start="27:17" pos:end="27:28"><expr pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:20"><name pos:start="27:17" pos:end="27:17">q</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><name pos:start="27:19" pos:end="27:19">r</name></expr>]</index></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:27">name</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="29:13" pos:end="29:16"><expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:13">r</name><operator pos:start="29:14" pos:end="29:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="30:10" pos:end="36:9">else<block pos:start="30:14" pos:end="36:9">{<block_content pos:start="31:13" pos:end="34:13">
            <expr_stmt pos:start="31:13" pos:end="31:38"><expr pos:start="31:13" pos:end="31:37"><name pos:start="31:13" pos:end="31:16">cout</name> <operator pos:start="31:18" pos:end="31:19">&lt;&lt;</operator> <call pos:start="31:21" pos:end="31:29"><name pos:start="31:21" pos:end="31:27"><name pos:start="31:21" pos:end="31:21">q</name><operator pos:start="31:22" pos:end="31:22">.</operator><name pos:start="31:23" pos:end="31:27">front</name></name><argument_list pos:start="31:28" pos:end="31:29">()</argument_list></call> <operator pos:start="31:31" pos:end="31:32">&lt;&lt;</operator> <name pos:start="31:34" pos:end="31:37">endl</name></expr>;</expr_stmt>
            <if_stmt pos:start="32:13" pos:end="34:13"><if pos:start="32:13" pos:end="34:13">if<condition pos:start="32:15" pos:end="32:32">(<expr pos:start="32:16" pos:end="32:31"><call pos:start="32:16" pos:end="32:22"><name pos:start="32:16" pos:end="32:20">front</name><argument_list pos:start="32:21" pos:end="32:22">()</argument_list></call> <operator pos:start="32:24" pos:end="32:24">&lt;</operator> <call pos:start="32:26" pos:end="32:31"><name pos:start="32:26" pos:end="32:29">rear</name><argument_list pos:start="32:30" pos:end="32:31">()</argument_list></call></expr>)</condition><block pos:start="32:33" pos:end="34:13">{<block_content pos:start="33:17" pos:end="33:24">
                <expr_stmt pos:start="33:17" pos:end="33:24"><expr pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:21">front</name><operator pos:start="33:22" pos:end="33:23">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <return pos:start="38:5" pos:end="38:13">return <expr pos:start="38:12" pos:end="38:12"><literal type="number" pos:start="38:12" pos:end="38:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
