<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/414/414.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<function pos:start="5:1" pos:end="11:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:7">sum</name><parameter_list pos:start="5:8" pos:end="5:17">(<parameter pos:start="5:9" pos:end="5:16"><decl pos:start="5:9" pos:end="5:16"><type pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:14">string</name></type> <name pos:start="5:16" pos:end="5:16">a</name></decl></parameter>)</parameter_list> <block pos:start="5:19" pos:end="11:1">{<block_content pos:start="6:5" pos:end="10:15">
    <decl_stmt pos:start="6:5" pos:end="6:16"><decl pos:start="6:5" pos:end="6:15"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">sum</name> <init pos:start="6:13" pos:end="6:15">= <expr pos:start="6:15" pos:end="6:15"><literal type="number" pos:start="6:15" pos:end="6:15">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="7:5" pos:end="9:5">for <control pos:start="7:9" pos:end="7:37">(<init pos:start="7:10" pos:end="7:19"><decl pos:start="7:10" pos:end="7:18"><type pos:start="7:10" pos:end="7:12"><name pos:start="7:10" pos:end="7:12">int</name></type> <name pos:start="7:14" pos:end="7:14">i</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</init> <condition pos:start="7:21" pos:end="7:33"><expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">i</name> <operator pos:start="7:23" pos:end="7:23">&lt;</operator> <call pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:25">a</name><operator pos:start="7:26" pos:end="7:26">.</operator><name pos:start="7:27" pos:end="7:30">size</name></name><argument_list pos:start="7:31" pos:end="7:32">()</argument_list></call></expr>;</condition><incr pos:start="7:34" pos:end="7:36"><expr pos:start="7:34" pos:end="7:36"><name pos:start="7:34" pos:end="7:34">i</name><operator pos:start="7:35" pos:end="7:36">++</operator></expr></incr>)</control> <block pos:start="7:39" pos:end="9:5">{<block_content pos:start="8:9" pos:end="8:25">
        <expr_stmt pos:start="8:9" pos:end="8:25"><expr pos:start="8:9" pos:end="8:24"><name pos:start="8:9" pos:end="8:11">sum</name> <operator pos:start="8:13" pos:end="8:14">+=</operator> <operator pos:start="8:16" pos:end="8:16">(</operator><name pos:start="8:17" pos:end="8:19">int</name><operator pos:start="8:20" pos:end="8:20">)</operator><name pos:start="8:21" pos:end="8:24"><name pos:start="8:21" pos:end="8:21">a</name><index pos:start="8:22" pos:end="8:24">[<expr pos:start="8:23" pos:end="8:23"><name pos:start="8:23" pos:end="8:23">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="10:5" pos:end="10:15">return <expr pos:start="10:12" pos:end="10:14"><name pos:start="10:12" pos:end="10:14">sum</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="12:1" pos:end="17:1"><type pos:start="12:1" pos:end="12:4"><name pos:start="12:1" pos:end="12:4">bool</name></type> <name pos:start="12:6" pos:end="12:8">cmp</name><parameter_list pos:start="12:9" pos:end="12:28">(<parameter pos:start="12:10" pos:end="12:17"><decl pos:start="12:10" pos:end="12:17"><type pos:start="12:10" pos:end="12:17"><name pos:start="12:10" pos:end="12:15">string</name></type> <name pos:start="12:17" pos:end="12:17">x</name></decl></parameter>, <parameter pos:start="12:20" pos:end="12:27"><decl pos:start="12:20" pos:end="12:27"><type pos:start="12:20" pos:end="12:27"><name pos:start="12:20" pos:end="12:25">string</name></type> <name pos:start="12:27" pos:end="12:27">y</name></decl></parameter>)</parameter_list><block pos:start="12:29" pos:end="17:1">{<block_content pos:start="13:5" pos:end="16:17">
    <if_stmt pos:start="13:5" pos:end="15:5"><if pos:start="13:5" pos:end="15:5">if<condition pos:start="13:7" pos:end="13:24">(<expr pos:start="13:8" pos:end="13:23"><call pos:start="13:8" pos:end="13:13"><name pos:start="13:8" pos:end="13:10">sum</name><argument_list pos:start="13:11" pos:end="13:13">(<argument pos:start="13:12" pos:end="13:12"><expr pos:start="13:12" pos:end="13:12"><name pos:start="13:12" pos:end="13:12">x</name></expr></argument>)</argument_list></call> <operator pos:start="13:15" pos:end="13:16">!=</operator> <call pos:start="13:18" pos:end="13:23"><name pos:start="13:18" pos:end="13:20">sum</name><argument_list pos:start="13:21" pos:end="13:23">(<argument pos:start="13:22" pos:end="13:22"><expr pos:start="13:22" pos:end="13:22"><name pos:start="13:22" pos:end="13:22">y</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="13:25" pos:end="15:5">{<block_content pos:start="14:9" pos:end="14:31">
        <return pos:start="14:9" pos:end="14:31">return <expr pos:start="14:16" pos:end="14:30"><call pos:start="14:16" pos:end="14:21"><name pos:start="14:16" pos:end="14:18">sum</name><argument_list pos:start="14:19" pos:end="14:21">(<argument pos:start="14:20" pos:end="14:20"><expr pos:start="14:20" pos:end="14:20"><name pos:start="14:20" pos:end="14:20">x</name></expr></argument>)</argument_list></call> <operator pos:start="14:23" pos:end="14:23">&lt;</operator> <call pos:start="14:25" pos:end="14:30"><name pos:start="14:25" pos:end="14:27">sum</name><argument_list pos:start="14:28" pos:end="14:30">(<argument pos:start="14:29" pos:end="14:29"><expr pos:start="14:29" pos:end="14:29"><name pos:start="14:29" pos:end="14:29">y</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="16:5" pos:end="16:17">return <expr pos:start="16:12" pos:end="16:16"><name pos:start="16:12" pos:end="16:12">x</name> <operator pos:start="16:14" pos:end="16:14">&lt;</operator> <name pos:start="16:16" pos:end="16:16">y</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="18:1" pos:end="29:5"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:8">main</name><parameter_list pos:start="18:9" pos:end="18:10">()</parameter_list><block pos:start="18:11" pos:end="29:5">{<block_content pos:start="19:5" pos:end="28:9">
    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:13"><expr pos:start="20:5" pos:end="20:12"><name pos:start="20:5" pos:end="20:7">cin</name> <operator pos:start="20:9" pos:end="20:10">&gt;&gt;</operator> <name pos:start="20:12" pos:end="20:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">string</name></type> <name pos:start="21:12" pos:end="21:15"><name pos:start="21:12" pos:end="21:12">a</name><index pos:start="21:13" pos:end="21:15">[<expr pos:start="21:14" pos:end="21:14"><name pos:start="21:14" pos:end="21:14">n</name></expr>]</index></name></decl>;</decl_stmt>
    <for pos:start="22:5" pos:end="24:5">for<control pos:start="22:8" pos:end="22:30">(<init pos:start="22:9" pos:end="22:18"><decl pos:start="22:9" pos:end="22:17"><type pos:start="22:9" pos:end="22:11"><name pos:start="22:9" pos:end="22:11">int</name></type> <name pos:start="22:13" pos:end="22:13">i</name> <init pos:start="22:15" pos:end="22:17">= <expr pos:start="22:17" pos:end="22:17"><literal type="number" pos:start="22:17" pos:end="22:17">0</literal></expr></init></decl>;</init> <condition pos:start="22:20" pos:end="22:25"><expr pos:start="22:20" pos:end="22:24"><name pos:start="22:20" pos:end="22:20">i</name> <operator pos:start="22:22" pos:end="22:22">&lt;</operator> <name pos:start="22:24" pos:end="22:24">n</name></expr>;</condition> <incr pos:start="22:27" pos:end="22:29"><expr pos:start="22:27" pos:end="22:29"><name pos:start="22:27" pos:end="22:27">i</name><operator pos:start="22:28" pos:end="22:29">++</operator></expr></incr>)</control><block pos:start="22:31" pos:end="24:5">{<block_content pos:start="23:9" pos:end="23:20">
        <expr_stmt pos:start="23:9" pos:end="23:20"><expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:11">cin</name> <operator pos:start="23:13" pos:end="23:14">&gt;&gt;</operator> <name pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:16">a</name><index pos:start="23:17" pos:end="23:19">[<expr pos:start="23:18" pos:end="23:18"><name pos:start="23:18" pos:end="23:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><call pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:8">sort</name><argument_list pos:start="25:9" pos:end="25:23">(<argument pos:start="25:10" pos:end="25:10"><expr pos:start="25:10" pos:end="25:10"><name pos:start="25:10" pos:end="25:10">a</name></expr></argument>, <argument pos:start="25:13" pos:end="25:17"><expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:13">a</name> <operator pos:start="25:15" pos:end="25:15">+</operator> <name pos:start="25:17" pos:end="25:17">n</name></expr></argument>, <argument pos:start="25:20" pos:end="25:22"><expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="26:5" pos:end="28:9">for<control pos:start="26:8" pos:end="26:30">(<init pos:start="26:9" pos:end="26:18"><decl pos:start="26:9" pos:end="26:17"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:13">i</name> <init pos:start="26:15" pos:end="26:17">= <expr pos:start="26:17" pos:end="26:17"><literal type="number" pos:start="26:17" pos:end="26:17">0</literal></expr></init></decl>;</init> <condition pos:start="26:20" pos:end="26:25"><expr pos:start="26:20" pos:end="26:24"><name pos:start="26:20" pos:end="26:20">i</name> <operator pos:start="26:22" pos:end="26:22">&lt;</operator> <name pos:start="26:24" pos:end="26:24">n</name></expr>;</condition> <incr pos:start="26:27" pos:end="26:29"><expr pos:start="26:27" pos:end="26:29"><name pos:start="26:27" pos:end="26:27">i</name><operator pos:start="26:28" pos:end="26:29">++</operator></expr></incr>)</control><block pos:start="26:31" pos:end="28:9">{<block_content pos:start="27:9" pos:end="27:21">
        <expr_stmt pos:start="27:9" pos:end="27:21"><expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:12">cout</name> <operator pos:start="27:14" pos:end="27:15">&gt;&gt;</operator> <name pos:start="27:17" pos:end="27:20"><name pos:start="27:17" pos:end="27:17">a</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><name pos:start="27:19" pos:end="27:19">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></function>
    <return pos:start="30:5" pos:end="30:13">return <expr pos:start="30:12" pos:end="30:12"><literal type="number" pos:start="30:12" pos:end="30:12">0</literal></expr>;</return>
}
</unit>
