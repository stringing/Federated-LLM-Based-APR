<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/366/366.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:16"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:7"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:7">k</name></decl>,<decl pos:start="3:9" pos:end="3:15"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:9" pos:end="3:15"><name pos:start="3:9" pos:end="3:11">cow</name><index pos:start="3:12" pos:end="3:15">[<expr pos:start="3:13" pos:end="3:14"><literal type="number" pos:start="3:13" pos:end="3:14">30</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:13"><decl pos:start="4:1" pos:end="4:12"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:12"><name pos:start="4:6" pos:end="4:8">vis</name><index pos:start="4:9" pos:end="4:12">[<expr pos:start="4:10" pos:end="4:11"><literal type="number" pos:start="4:10" pos:end="4:11">30</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:20"><decl pos:start="5:1" pos:end="5:19"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">minn</name> <init pos:start="5:10" pos:end="5:19">= <expr pos:start="5:12" pos:end="5:19"><literal type="number" pos:start="5:12" pos:end="5:19">99999999</literal></expr></init></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="15:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">void</name></type> <name pos:start="6:6" pos:end="6:8">dfs</name><parameter_list pos:start="6:9" pos:end="6:23">(<parameter pos:start="6:10" pos:end="6:16"><decl pos:start="6:10" pos:end="6:16"><type pos:start="6:10" pos:end="6:16"><name pos:start="6:10" pos:end="6:12">int</name></type> <name pos:start="6:14" pos:end="6:16">sum</name></decl></parameter>,<parameter pos:start="6:18" pos:end="6:22"><decl pos:start="6:18" pos:end="6:22"><type pos:start="6:18" pos:end="6:22"><name pos:start="6:18" pos:end="6:20">int</name></type> <name pos:start="6:22" pos:end="6:22">u</name></decl></parameter>)</parameter_list><block pos:start="6:24" pos:end="15:1">{<block_content pos:start="7:5" pos:end="14:11">
    <if_stmt pos:start="7:5" pos:end="7:24"><if pos:start="7:5" pos:end="7:24">if<condition pos:start="7:7" pos:end="7:16">(<expr pos:start="7:8" pos:end="7:15"><name pos:start="7:8" pos:end="7:8">u</name> <operator pos:start="7:10" pos:end="7:11">==</operator> <name pos:start="7:13" pos:end="7:13">n</name><operator pos:start="7:14" pos:end="7:14">-</operator><literal type="number" pos:start="7:15" pos:end="7:15">1</literal></expr>)</condition><block type="pseudo" pos:start="7:18" pos:end="7:24"><block_content pos:start="7:18" pos:end="7:24"> <return pos:start="7:18" pos:end="7:24">return;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="8:5" pos:end="11:5"><if pos:start="8:5" pos:end="11:5">if<condition pos:start="8:7" pos:end="8:20">(<expr pos:start="8:8" pos:end="8:19"><name pos:start="8:8" pos:end="8:10">sum</name> <operator pos:start="8:12" pos:end="8:12">-</operator> <name pos:start="8:14" pos:end="8:14">k</name> <operator pos:start="8:16" pos:end="8:17">&gt;=</operator> <literal type="number" pos:start="8:19" pos:end="8:19">0</literal></expr>)</condition><block pos:start="8:21" pos:end="11:5">{<block_content pos:start="9:9" pos:end="10:15">
        <expr_stmt pos:start="9:9" pos:end="9:31"><expr pos:start="9:9" pos:end="9:30"><name pos:start="9:9" pos:end="9:12">minn</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <call pos:start="9:16" pos:end="9:30"><name pos:start="9:16" pos:end="9:18">min</name><argument_list pos:start="9:19" pos:end="9:30">(<argument pos:start="9:20" pos:end="9:23"><expr pos:start="9:20" pos:end="9:23"><name pos:start="9:20" pos:end="9:23">minn</name></expr></argument>,<argument pos:start="9:25" pos:end="9:29"><expr pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:27">sum</name><operator pos:start="9:28" pos:end="9:28">-</operator><name pos:start="9:29" pos:end="9:29">k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="10:9" pos:end="10:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:17"><expr pos:start="12:5" pos:end="12:16"><call pos:start="12:5" pos:end="12:16"><name pos:start="12:5" pos:end="12:7">dfs</name><argument_list pos:start="12:8" pos:end="12:16">(<argument pos:start="12:9" pos:end="12:11"><expr pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">sum</name></expr></argument>,<argument pos:start="12:13" pos:end="12:15"><expr pos:start="12:13" pos:end="12:15"><name pos:start="12:13" pos:end="12:13">u</name><operator pos:start="12:14" pos:end="12:14">+</operator><literal type="number" pos:start="12:15" pos:end="12:15">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:24"><expr pos:start="13:5" pos:end="13:23"><call pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:7">dfs</name><argument_list pos:start="13:8" pos:end="13:23">(<argument pos:start="13:9" pos:end="13:18"><expr pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:11">sum</name><operator pos:start="13:12" pos:end="13:12">+</operator><name pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:15">cow</name><index pos:start="13:16" pos:end="13:18">[<expr pos:start="13:17" pos:end="13:17"><name pos:start="13:17" pos:end="13:17">u</name></expr>]</index></name></expr></argument>,<argument pos:start="13:20" pos:end="13:22"><expr pos:start="13:20" pos:end="13:22"><name pos:start="13:20" pos:end="13:20">u</name><operator pos:start="13:21" pos:end="13:21">+</operator><literal type="number" pos:start="13:22" pos:end="13:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="14:5" pos:end="14:11">return;</return>
</block_content>}</block></function>
<function pos:start="16:1" pos:end="26:1"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:8">main</name><parameter_list pos:start="16:9" pos:end="16:10">()</parameter_list><block pos:start="16:11" pos:end="26:1">{<block_content pos:start="17:5" pos:end="25:13">
    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><call pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:11">freopen</name><argument_list pos:start="17:12" pos:end="17:33">(<argument pos:start="17:13" pos:end="17:22"><expr pos:start="17:13" pos:end="17:22"><literal type="string" pos:start="17:13" pos:end="17:22">"shelf.in"</literal></expr></argument>,<argument pos:start="17:24" pos:end="17:26"><expr pos:start="17:24" pos:end="17:26"><literal type="string" pos:start="17:24" pos:end="17:26">"r"</literal></expr></argument>,<argument pos:start="17:28" pos:end="17:32"><expr pos:start="17:28" pos:end="17:32"><name pos:start="17:28" pos:end="17:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:36"><expr pos:start="18:5" pos:end="18:35"><call pos:start="18:5" pos:end="18:35"><name pos:start="18:5" pos:end="18:11">freopen</name><argument_list pos:start="18:12" pos:end="18:35">(<argument pos:start="18:13" pos:end="18:23"><expr pos:start="18:13" pos:end="18:23"><literal type="string" pos:start="18:13" pos:end="18:23">"shelf.out"</literal></expr></argument>,<argument pos:start="18:25" pos:end="18:27"><expr pos:start="18:25" pos:end="18:27"><literal type="string" pos:start="18:25" pos:end="18:27">"w"</literal></expr></argument>,<argument pos:start="18:29" pos:end="18:34"><expr pos:start="18:29" pos:end="18:34"><name pos:start="18:29" pos:end="18:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:18"><expr pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:7">cin</name> <operator pos:start="19:9" pos:end="19:10">&gt;&gt;</operator> <name pos:start="19:12" pos:end="19:12">n</name> <operator pos:start="19:14" pos:end="19:15">&gt;&gt;</operator> <name pos:start="19:17" pos:end="19:17">k</name></expr>;</expr_stmt>
    <for pos:start="20:5" pos:end="22:5">for<control pos:start="20:8" pos:end="20:24">(<init pos:start="20:9" pos:end="20:16"><decl pos:start="20:9" pos:end="20:15"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:13">i</name><init pos:start="20:14" pos:end="20:15">=<expr pos:start="20:15" pos:end="20:15"><literal type="number" pos:start="20:15" pos:end="20:15">0</literal></expr></init></decl>;</init><condition pos:start="20:17" pos:end="20:20"><expr pos:start="20:17" pos:end="20:19"><name pos:start="20:17" pos:end="20:17">i</name><operator pos:start="20:18" pos:end="20:18">&lt;</operator><name pos:start="20:19" pos:end="20:19">n</name></expr>;</condition><incr pos:start="20:21" pos:end="20:23"><expr pos:start="20:21" pos:end="20:23"><name pos:start="20:21" pos:end="20:21">i</name><operator pos:start="20:22" pos:end="20:23">++</operator></expr></incr>)</control><block pos:start="20:25" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:22">
        <expr_stmt pos:start="21:9" pos:end="21:22"><expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:11">cin</name> <operator pos:start="21:13" pos:end="21:14">&gt;&gt;</operator> <name pos:start="21:16" pos:end="21:21"><name pos:start="21:16" pos:end="21:18">cow</name><index pos:start="21:19" pos:end="21:21">[<expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for> 
    <expr_stmt pos:start="23:5" pos:end="23:13"><expr pos:start="23:5" pos:end="23:12"><call pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:7">dfs</name><argument_list pos:start="23:8" pos:end="23:12">(<argument pos:start="23:9" pos:end="23:9"><expr pos:start="23:9" pos:end="23:9"><literal type="number" pos:start="23:9" pos:end="23:9">0</literal></expr></argument>,<argument pos:start="23:11" pos:end="23:11"><expr pos:start="23:11" pos:end="23:11"><literal type="number" pos:start="23:11" pos:end="23:11">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:17"><expr pos:start="24:5" pos:end="24:16"><name pos:start="24:5" pos:end="24:8">cout</name> <operator pos:start="24:10" pos:end="24:11">&lt;&lt;</operator> <name pos:start="24:13" pos:end="24:16">minn</name></expr>;</expr_stmt>
    <return pos:start="25:5" pos:end="25:13">return <expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
