<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1052/1052.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:17">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:17">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="21:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="21:1">{<block_content pos:start="5:5" pos:end="20:13">
    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:12">s</name></decl>, <decl pos:start="5:15" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:10"/><name pos:start="5:15" pos:end="5:17">max</name> <init pos:start="5:19" pos:end="5:22">= <expr pos:start="5:21" pos:end="5:22"><literal type="string" pos:start="5:21" pos:end="5:22">""</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:20"><expr pos:start="6:5" pos:end="6:19"><call pos:start="6:5" pos:end="6:19"><name pos:start="6:5" pos:end="6:11">getline</name><argument_list pos:start="6:12" pos:end="6:19">(<argument pos:start="6:13" pos:end="6:15"><expr pos:start="6:13" pos:end="6:15"><name pos:start="6:13" pos:end="6:15">cin</name></expr></argument>, <argument pos:start="6:18" pos:end="6:18"><expr pos:start="6:18" pos:end="6:18"><name pos:start="6:18" pos:end="6:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="8:5" pos:end="8:18"><decl pos:start="8:5" pos:end="8:17"><type pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:10">string</name></type> <name pos:start="8:12" pos:end="8:12">a</name> <init pos:start="8:14" pos:end="8:17">= <expr pos:start="8:16" pos:end="8:17"><literal type="string" pos:start="8:16" pos:end="8:17">""</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="9:5" pos:end="18:5">for <control pos:start="9:9" pos:end="9:38">(<init pos:start="9:10" pos:end="9:19"><decl pos:start="9:10" pos:end="9:18"><type pos:start="9:10" pos:end="9:12"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:14">i</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</init> <condition pos:start="9:21" pos:end="9:33"><expr pos:start="9:21" pos:end="9:32"><name pos:start="9:21" pos:end="9:21">i</name> <operator pos:start="9:23" pos:end="9:23">&lt;</operator> <call pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:30"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:26">.</operator><name pos:start="9:27" pos:end="9:30">size</name></name><argument_list pos:start="9:31" pos:end="9:32">()</argument_list></call></expr>;</condition> <incr pos:start="9:35" pos:end="9:37"><expr pos:start="9:35" pos:end="9:37"><name pos:start="9:35" pos:end="9:35">i</name><operator pos:start="9:36" pos:end="9:37">++</operator></expr></incr>)</control> <block pos:start="9:40" pos:end="18:5">{<block_content pos:start="10:9" pos:end="17:9">
        <if_stmt pos:start="10:9" pos:end="17:9"><if pos:start="10:9" pos:end="12:9">if <condition pos:start="10:12" pos:end="10:24">(<expr pos:start="10:13" pos:end="10:23"><name pos:start="10:13" pos:end="10:16"><name pos:start="10:13" pos:end="10:13">s</name><index pos:start="10:14" pos:end="10:16">[<expr pos:start="10:15" pos:end="10:15"><name pos:start="10:15" pos:end="10:15">i</name></expr>]</index></name> <operator pos:start="10:18" pos:end="10:19">!=</operator> <literal type="char" pos:start="10:21" pos:end="10:23">' '</literal></expr>)</condition> <block pos:start="10:26" pos:end="12:9">{<block_content pos:start="11:13" pos:end="11:22">
            <expr_stmt pos:start="11:13" pos:end="11:22"><expr pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:13">a</name> <operator pos:start="11:15" pos:end="11:16">+=</operator> <name pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:18">s</name><index pos:start="11:19" pos:end="11:21">[<expr pos:start="11:20" pos:end="11:20"><name pos:start="11:20" pos:end="11:20">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="12:11" pos:end="17:9">else <block pos:start="12:16" pos:end="17:9">{<block_content pos:start="13:13" pos:end="16:19">
            <if_stmt pos:start="13:13" pos:end="15:13"><if pos:start="13:13" pos:end="15:13">if <condition pos:start="13:16" pos:end="13:38">(<expr pos:start="13:17" pos:end="13:37"><call pos:start="13:17" pos:end="13:24"><name pos:start="13:17" pos:end="13:22"><name pos:start="13:17" pos:end="13:17">a</name><operator pos:start="13:18" pos:end="13:18">.</operator><name pos:start="13:19" pos:end="13:22">size</name></name><argument_list pos:start="13:23" pos:end="13:24">()</argument_list></call> <operator pos:start="13:26" pos:end="13:26">&gt;</operator> <call pos:start="13:28" pos:end="13:37"><name pos:start="13:28" pos:end="13:35"><name pos:start="13:28" pos:end="13:30">max</name><operator pos:start="13:31" pos:end="13:31">.</operator><name pos:start="13:32" pos:end="13:35">size</name></name><argument_list pos:start="13:36" pos:end="13:37">()</argument_list></call></expr>)</condition> <block pos:start="13:40" pos:end="15:13">{<block_content pos:start="14:17" pos:end="14:24">
                <expr_stmt pos:start="14:17" pos:end="14:24"><expr pos:start="14:17" pos:end="14:23"><name pos:start="14:17" pos:end="14:19">max</name> <operator pos:start="14:21" pos:end="14:21">=</operator> <name pos:start="14:23" pos:end="14:23">a</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:19"><expr pos:start="16:13" pos:end="16:18"><name pos:start="16:13" pos:end="16:13">a</name> <operator pos:start="16:15" pos:end="16:15">=</operator> <literal type="string" pos:start="16:17" pos:end="16:18">""</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:8">cout</name> <operator pos:start="19:10" pos:end="19:11">&lt;&lt;</operator> <name pos:start="19:13" pos:end="19:15">max</name> <operator pos:start="19:17" pos:end="19:18">&lt;&lt;</operator> <name pos:start="19:20" pos:end="19:23">endl</name></expr>;</expr_stmt>
    <return pos:start="20:5" pos:end="20:13">return <expr pos:start="20:12" pos:end="20:12"><literal type="number" pos:start="20:12" pos:end="20:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
