<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1159/1159.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:35"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:11"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:11"><name pos:start="3:7" pos:end="3:7">a</name><index pos:start="3:8" pos:end="3:11">[<expr pos:start="3:9" pos:end="3:10"><literal type="number" pos:start="3:9" pos:end="3:10">13</literal></expr>]</index></name></decl>,<decl pos:start="3:13" pos:end="3:17"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:13" pos:end="3:17"><name pos:start="3:13" pos:end="3:13">b</name><index pos:start="3:14" pos:end="3:17">[<expr pos:start="3:15" pos:end="3:16"><literal type="number" pos:start="3:15" pos:end="3:16">13</literal></expr>]</index></name></decl>,<decl pos:start="3:19" pos:end="3:34"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:19" pos:end="3:21">ans</name> <init pos:start="3:23" pos:end="3:34">= <expr pos:start="3:25" pos:end="3:34"><literal type="number" pos:start="3:25" pos:end="3:34">0x3f3f3f3f</literal></expr></init></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="13:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">void</name></type> <name pos:start="4:6" pos:end="4:8">dfs</name><parameter_list pos:start="4:9" pos:end="4:42">(<parameter pos:start="4:10" pos:end="4:14"><decl pos:start="4:10" pos:end="4:14"><type pos:start="4:10" pos:end="4:14"><name pos:start="4:10" pos:end="4:12">int</name></type> <name pos:start="4:14" pos:end="4:14">u</name></decl></parameter>, <parameter pos:start="4:17" pos:end="4:23"><decl pos:start="4:17" pos:end="4:23"><type pos:start="4:17" pos:end="4:23"><name pos:start="4:17" pos:end="4:19">int</name></type> <name pos:start="4:21" pos:end="4:23">cnt</name></decl></parameter>, <parameter pos:start="4:26" pos:end="4:32"><decl pos:start="4:26" pos:end="4:32"><type pos:start="4:26" pos:end="4:32"><name pos:start="4:26" pos:end="4:28">int</name></type> <name pos:start="4:30" pos:end="4:32">sum</name></decl></parameter>, <parameter pos:start="4:35" pos:end="4:41"><decl pos:start="4:35" pos:end="4:41"><type pos:start="4:35" pos:end="4:41"><name pos:start="4:35" pos:end="4:37">int</name></type> <name pos:start="4:39" pos:end="4:41">mul</name></decl></parameter>)</parameter_list> <block pos:start="4:44" pos:end="13:1">{<block_content pos:start="5:5" pos:end="12:30">
    <if_stmt pos:start="5:5" pos:end="10:5"><if pos:start="5:5" pos:end="10:5">if <condition pos:start="5:8" pos:end="5:15">(<expr pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:9">u</name> <operator pos:start="5:11" pos:end="5:12">==</operator> <name pos:start="5:14" pos:end="5:14">n</name></expr>)</condition> <block pos:start="5:17" pos:end="10:5">{<block_content pos:start="6:9" pos:end="9:15">
        <if_stmt pos:start="6:9" pos:end="8:9"><if pos:start="6:9" pos:end="8:9">if <condition pos:start="6:12" pos:end="6:55">(<expr pos:start="6:13" pos:end="6:54"><name pos:start="6:13" pos:end="6:15">cnt</name> <operator pos:start="6:17" pos:end="6:18">&amp;&amp;</operator> <operator pos:start="6:20" pos:end="6:20">(</operator><name pos:start="6:21" pos:end="6:23">ans</name> <operator pos:start="6:25" pos:end="6:26">==</operator> <operator pos:start="6:28" pos:end="6:28">-</operator><literal type="number" pos:start="6:29" pos:end="6:29">1</literal> <operator pos:start="6:31" pos:end="6:32">||</operator> <call pos:start="6:34" pos:end="6:47"><name pos:start="6:34" pos:end="6:36">abs</name><argument_list pos:start="6:37" pos:end="6:47">(<argument pos:start="6:38" pos:end="6:46"><expr pos:start="6:38" pos:end="6:46"><name pos:start="6:38" pos:end="6:40">sum</name> <operator pos:start="6:42" pos:end="6:42">-</operator> <name pos:start="6:44" pos:end="6:46">mul</name></expr></argument>)</argument_list></call> <operator pos:start="6:49" pos:end="6:49">&lt;</operator> <name pos:start="6:51" pos:end="6:53">ans</name><operator pos:start="6:54" pos:end="6:54">)</operator></expr>)</condition> <block pos:start="6:57" pos:end="8:9">{<block_content pos:start="7:13" pos:end="7:33">
            <expr_stmt pos:start="7:13" pos:end="7:33"><expr pos:start="7:13" pos:end="7:32"><name pos:start="7:13" pos:end="7:15">ans</name> <operator pos:start="7:17" pos:end="7:17">=</operator> <call pos:start="7:19" pos:end="7:32"><name pos:start="7:19" pos:end="7:21">abs</name><argument_list pos:start="7:22" pos:end="7:32">(<argument pos:start="7:23" pos:end="7:31"><expr pos:start="7:23" pos:end="7:31"><name pos:start="7:23" pos:end="7:25">sum</name> <operator pos:start="7:27" pos:end="7:27">-</operator> <name pos:start="7:29" pos:end="7:31">mul</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return pos:start="9:9" pos:end="9:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:48"><expr pos:start="11:5" pos:end="11:47"><call pos:start="11:5" pos:end="11:47"><name pos:start="11:5" pos:end="11:7">dfs</name><argument_list pos:start="11:8" pos:end="11:47">(<argument pos:start="11:9" pos:end="11:13"><expr pos:start="11:9" pos:end="11:13"><name pos:start="11:9" pos:end="11:9">u</name> <operator pos:start="11:11" pos:end="11:11">+</operator> <literal type="number" pos:start="11:13" pos:end="11:13">1</literal></expr></argument>, <argument pos:start="11:16" pos:end="11:22"><expr pos:start="11:16" pos:end="11:22"><name pos:start="11:16" pos:end="11:18">cnt</name> <operator pos:start="11:20" pos:end="11:20">+</operator> <literal type="number" pos:start="11:22" pos:end="11:22">1</literal></expr></argument>, <argument pos:start="11:25" pos:end="11:34"><expr pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:27">sum</name> <operator pos:start="11:29" pos:end="11:29">+</operator> <name pos:start="11:31" pos:end="11:34"><name pos:start="11:31" pos:end="11:31">b</name><index pos:start="11:32" pos:end="11:34">[<expr pos:start="11:33" pos:end="11:33"><name pos:start="11:33" pos:end="11:33">u</name></expr>]</index></name></expr></argument>, <argument pos:start="11:37" pos:end="11:46"><expr pos:start="11:37" pos:end="11:46"><name pos:start="11:37" pos:end="11:39">mul</name> <operator pos:start="11:41" pos:end="11:41">*</operator> <name pos:start="11:43" pos:end="11:46"><name pos:start="11:43" pos:end="11:43">a</name><index pos:start="11:44" pos:end="11:46">[<expr pos:start="11:45" pos:end="11:45"><name pos:start="11:45" pos:end="11:45">u</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:30"><expr pos:start="12:5" pos:end="12:29"><call pos:start="12:5" pos:end="12:29"><name pos:start="12:5" pos:end="12:7">dfs</name><argument_list pos:start="12:8" pos:end="12:29">(<argument pos:start="12:9" pos:end="12:13"><expr pos:start="12:9" pos:end="12:13"><name pos:start="12:9" pos:end="12:9">u</name> <operator pos:start="12:11" pos:end="12:11">+</operator> <literal type="number" pos:start="12:13" pos:end="12:13">1</literal></expr></argument>, <argument pos:start="12:16" pos:end="12:18"><expr pos:start="12:16" pos:end="12:18"><name pos:start="12:16" pos:end="12:18">cnt</name></expr></argument>, <argument pos:start="12:21" pos:end="12:23"><expr pos:start="12:21" pos:end="12:23"><name pos:start="12:21" pos:end="12:23">sum</name></expr></argument>, <argument pos:start="12:26" pos:end="12:28"><expr pos:start="12:26" pos:end="12:28"><name pos:start="12:26" pos:end="12:28">mul</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="14:1" pos:end="24:1"><type pos:start="14:1" pos:end="14:3"><name pos:start="14:1" pos:end="14:3">int</name></type> <name pos:start="14:5" pos:end="14:8">main</name><parameter_list pos:start="14:9" pos:end="14:10">()</parameter_list> <block pos:start="14:12" pos:end="24:1">{<block_content pos:start="15:5" pos:end="23:13">
    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><call pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:11">freopen</name><argument_list pos:start="15:12" pos:end="15:33">(<argument pos:start="15:13" pos:end="15:22"><expr pos:start="15:13" pos:end="15:22"><literal type="string" pos:start="15:13" pos:end="15:22">"stone.in"</literal></expr></argument>,<argument pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><literal type="string" pos:start="15:24" pos:end="15:26">"r"</literal></expr></argument>,<argument pos:start="15:28" pos:end="15:32"><expr pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:36"><expr pos:start="16:5" pos:end="16:35"><call pos:start="16:5" pos:end="16:35"><name pos:start="16:5" pos:end="16:11">freopen</name><argument_list pos:start="16:12" pos:end="16:35">(<argument pos:start="16:13" pos:end="16:23"><expr pos:start="16:13" pos:end="16:23"><literal type="string" pos:start="16:13" pos:end="16:23">"stone.out"</literal></expr></argument>,<argument pos:start="16:25" pos:end="16:27"><expr pos:start="16:25" pos:end="16:27"><literal type="string" pos:start="16:25" pos:end="16:27">"w"</literal></expr></argument>,<argument pos:start="16:29" pos:end="16:34"><expr pos:start="16:29" pos:end="16:34"><name pos:start="16:29" pos:end="16:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:13"><expr pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:7">cin</name> <operator pos:start="17:9" pos:end="17:10">&gt;&gt;</operator> <name pos:start="17:12" pos:end="17:12">n</name></expr>;</expr_stmt>
    <for pos:start="18:5" pos:end="20:5">for<control pos:start="18:8" pos:end="18:28">(<init pos:start="18:9" pos:end="18:18"><decl pos:start="18:9" pos:end="18:17"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">i</name> <init pos:start="18:15" pos:end="18:17">= <expr pos:start="18:17" pos:end="18:17"><literal type="number" pos:start="18:17" pos:end="18:17">0</literal></expr></init></decl>;</init><condition pos:start="18:19" pos:end="18:24"><expr pos:start="18:19" pos:end="18:23"><name pos:start="18:19" pos:end="18:19">i</name> <operator pos:start="18:21" pos:end="18:21">&lt;</operator> <name pos:start="18:23" pos:end="18:23">n</name></expr>;</condition><incr pos:start="18:25" pos:end="18:27"><expr pos:start="18:25" pos:end="18:27"><name pos:start="18:25" pos:end="18:25">i</name><operator pos:start="18:26" pos:end="18:27">++</operator></expr></incr>)</control> <block pos:start="18:30" pos:end="20:5">{<block_content pos:start="19:9" pos:end="19:28">
        <expr_stmt pos:start="19:9" pos:end="19:28"><expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:11">cin</name> <operator pos:start="19:13" pos:end="19:14">&gt;&gt;</operator> <name pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:16">a</name><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><name pos:start="19:18" pos:end="19:18">i</name></expr>]</index></name> <operator pos:start="19:21" pos:end="19:22">&gt;&gt;</operator> <name pos:start="19:24" pos:end="19:27"><name pos:start="19:24" pos:end="19:24">b</name><index pos:start="19:25" pos:end="19:27">[<expr pos:start="19:26" pos:end="19:26"><name pos:start="19:26" pos:end="19:26">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><call pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:7">dfs</name><argument_list pos:start="21:8" pos:end="21:16">(<argument pos:start="21:9" pos:end="21:9"><expr pos:start="21:9" pos:end="21:9"><literal type="number" pos:start="21:9" pos:end="21:9">0</literal></expr></argument>,<argument pos:start="21:11" pos:end="21:11"><expr pos:start="21:11" pos:end="21:11"><literal type="number" pos:start="21:11" pos:end="21:11">1</literal></expr></argument>,<argument pos:start="21:13" pos:end="21:13"><expr pos:start="21:13" pos:end="21:13"><literal type="number" pos:start="21:13" pos:end="21:13">0</literal></expr></argument>,<argument pos:start="21:15" pos:end="21:15"><expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:24"><expr pos:start="22:5" pos:end="22:23"><name pos:start="22:5" pos:end="22:8">cout</name> <operator pos:start="22:10" pos:end="22:11">&lt;&lt;</operator> <name pos:start="22:13" pos:end="22:15">ans</name> <operator pos:start="22:17" pos:end="22:18">&lt;&lt;</operator> <name pos:start="22:20" pos:end="22:23">endl</name></expr>;</expr_stmt>
    <return pos:start="23:5" pos:end="23:13">return <expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
