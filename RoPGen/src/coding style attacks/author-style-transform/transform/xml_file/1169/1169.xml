<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1169/1169.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="19:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:8">cmp</name> <parameter_list pos:start="4:10" pos:end="4:23">(<parameter pos:start="4:11" pos:end="4:15"><decl pos:start="4:11" pos:end="4:15"><type pos:start="4:11" pos:end="4:15"><name pos:start="4:11" pos:end="4:13">int</name></type> <name pos:start="4:15" pos:end="4:15">x</name></decl></parameter>, <parameter pos:start="4:18" pos:end="4:22"><decl pos:start="4:18" pos:end="4:22"><type pos:start="4:18" pos:end="4:22"><name pos:start="4:18" pos:end="4:20">int</name></type> <name pos:start="4:22" pos:end="4:22">y</name></decl></parameter>)</parameter_list><block pos:start="4:24" pos:end="19:1">{<block_content pos:start="5:5" pos:end="18:17">
    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">a</name> <init pos:start="5:11" pos:end="5:13">= <expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:14"><decl pos:start="6:5" pos:end="6:13"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">b</name> <init pos:start="6:11" pos:end="6:13">= <expr pos:start="6:13" pos:end="6:13"><literal type="number" pos:start="6:13" pos:end="6:13">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="7:5" pos:end="10:5">while<condition pos:start="7:10" pos:end="7:12">(<expr pos:start="7:11" pos:end="7:11"><name pos:start="7:11" pos:end="7:11">x</name></expr>)</condition><block pos:start="7:13" pos:end="10:5">{<block_content pos:start="8:9" pos:end="9:16">
        <expr_stmt pos:start="8:9" pos:end="8:20"><expr pos:start="8:9" pos:end="8:19"><name pos:start="8:9" pos:end="8:9">a</name> <operator pos:start="8:11" pos:end="8:12">+=</operator> <name pos:start="8:14" pos:end="8:14">x</name> <operator pos:start="8:16" pos:end="8:16">%</operator> <literal type="number" pos:start="8:18" pos:end="8:19">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:16"><expr pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:9">x</name> <operator pos:start="9:11" pos:end="9:12">/=</operator> <literal type="number" pos:start="9:14" pos:end="9:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="11:5" pos:end="14:5">while<condition pos:start="11:10" pos:end="11:12">(<expr pos:start="11:11" pos:end="11:11"><name pos:start="11:11" pos:end="11:11">y</name></expr>)</condition><block pos:start="11:13" pos:end="14:5">{<block_content pos:start="12:9" pos:end="13:16">
        <expr_stmt pos:start="12:9" pos:end="12:20"><expr pos:start="12:9" pos:end="12:19"><name pos:start="12:9" pos:end="12:9">b</name> <operator pos:start="12:11" pos:end="12:12">+=</operator> <name pos:start="12:14" pos:end="12:14">y</name> <operator pos:start="12:16" pos:end="12:16">%</operator> <literal type="number" pos:start="12:18" pos:end="12:19">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:16"><expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:9">y</name> <operator pos:start="13:11" pos:end="13:12">/=</operator> <literal type="number" pos:start="13:14" pos:end="13:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <if_stmt pos:start="15:5" pos:end="17:5"><if pos:start="15:5" pos:end="17:5">if <condition pos:start="15:8" pos:end="15:15">(<expr pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:9">a</name> <operator pos:start="15:11" pos:end="15:12">==</operator> <name pos:start="15:14" pos:end="15:14">b</name></expr>)</condition><block pos:start="15:16" pos:end="17:5">{<block_content pos:start="16:9" pos:end="16:21">
        <return pos:start="16:9" pos:end="16:21">return <expr pos:start="16:16" pos:end="16:20"><name pos:start="16:16" pos:end="16:16">x</name> <operator pos:start="16:18" pos:end="16:18">&lt;</operator> <name pos:start="16:20" pos:end="16:20">y</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="18:5" pos:end="18:17">return <expr pos:start="18:12" pos:end="18:16"><name pos:start="18:12" pos:end="18:12">a</name> <operator pos:start="18:14" pos:end="18:14">&lt;</operator> <name pos:start="18:16" pos:end="18:16">b</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="20:1" pos:end="31:1"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:8">main</name> <parameter_list pos:start="20:10" pos:end="20:11">()</parameter_list><block pos:start="20:12" pos:end="31:1">{<block_content pos:start="21:5" pos:end="30:5">
    <decl_stmt pos:start="21:5" pos:end="21:10"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:13"><expr pos:start="22:5" pos:end="22:12"><name pos:start="22:5" pos:end="22:7">cin</name> <operator pos:start="22:9" pos:end="22:10">&gt;&gt;</operator> <name pos:start="22:12" pos:end="22:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="23:5" pos:end="23:15"><decl pos:start="23:5" pos:end="23:14"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:9">a</name><index pos:start="23:10" pos:end="23:14">[<expr pos:start="23:11" pos:end="23:13"><literal type="number" pos:start="23:11" pos:end="23:13">102</literal></expr>]</index></name></decl>;</decl_stmt>
    <for pos:start="24:5" pos:end="26:5">for <control pos:start="24:9" pos:end="24:31">(<init pos:start="24:10" pos:end="24:19"><decl pos:start="24:10" pos:end="24:18"><type pos:start="24:10" pos:end="24:12"><name pos:start="24:10" pos:end="24:12">int</name></type> <name pos:start="24:14" pos:end="24:14">i</name> <init pos:start="24:16" pos:end="24:18">= <expr pos:start="24:18" pos:end="24:18"><literal type="number" pos:start="24:18" pos:end="24:18">0</literal></expr></init></decl>;</init> <condition pos:start="24:21" pos:end="24:26"><expr pos:start="24:21" pos:end="24:25"><name pos:start="24:21" pos:end="24:21">i</name> <operator pos:start="24:23" pos:end="24:23">&lt;</operator> <name pos:start="24:25" pos:end="24:25">n</name></expr>;</condition> <incr pos:start="24:28" pos:end="24:30"><expr pos:start="24:28" pos:end="24:30"><name pos:start="24:28" pos:end="24:28">i</name><operator pos:start="24:29" pos:end="24:30">++</operator></expr></incr>)</control><block pos:start="24:32" pos:end="26:5">{<block_content pos:start="25:9" pos:end="25:20">
        <expr_stmt pos:start="25:9" pos:end="25:20"><expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:11">cin</name> <operator pos:start="25:13" pos:end="25:14">&gt;&gt;</operator> <name pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:16">a</name><index pos:start="25:17" pos:end="25:19">[<expr pos:start="25:18" pos:end="25:18"><name pos:start="25:18" pos:end="25:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><call pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:8">sort</name><argument_list pos:start="27:9" pos:end="27:23">(<argument pos:start="27:10" pos:end="27:10"><expr pos:start="27:10" pos:end="27:10"><name pos:start="27:10" pos:end="27:10">a</name></expr></argument>, <argument pos:start="27:13" pos:end="27:17"><expr pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:13">a</name> <operator pos:start="27:15" pos:end="27:15">+</operator> <name pos:start="27:17" pos:end="27:17">n</name></expr></argument>, <argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="28:5" pos:end="30:5">for <control pos:start="28:9" pos:end="28:31">(<init pos:start="28:10" pos:end="28:19"><decl pos:start="28:10" pos:end="28:18"><type pos:start="28:10" pos:end="28:12"><name pos:start="28:10" pos:end="28:12">int</name></type> <name pos:start="28:14" pos:end="28:14">i</name> <init pos:start="28:16" pos:end="28:18">= <expr pos:start="28:18" pos:end="28:18"><literal type="number" pos:start="28:18" pos:end="28:18">0</literal></expr></init></decl>;</init> <condition pos:start="28:21" pos:end="28:26"><expr pos:start="28:21" pos:end="28:25"><name pos:start="28:21" pos:end="28:21">i</name> <operator pos:start="28:23" pos:end="28:23">&lt;</operator> <name pos:start="28:25" pos:end="28:25">n</name></expr>;</condition> <incr pos:start="28:28" pos:end="28:30"><expr pos:start="28:28" pos:end="28:30"><name pos:start="28:28" pos:end="28:28">i</name><operator pos:start="28:29" pos:end="28:30">++</operator></expr></incr>)</control><block pos:start="28:32" pos:end="30:5">{<block_content pos:start="29:9" pos:end="29:28">
        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:12">cout</name> <operator pos:start="29:14" pos:end="29:15">&lt;&lt;</operator> <name pos:start="29:17" pos:end="29:20"><name pos:start="29:17" pos:end="29:17">a</name><index pos:start="29:18" pos:end="29:20">[<expr pos:start="29:19" pos:end="29:19"><name pos:start="29:19" pos:end="29:19">i</name></expr>]</index></name> <operator pos:start="29:22" pos:end="29:23">&lt;&lt;</operator> <literal type="string" pos:start="29:25" pos:end="29:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
</unit>
