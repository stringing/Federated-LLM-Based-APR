<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1185/1185.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:6"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">x</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:14"><decl pos:start="4:1" pos:end="4:13"><type pos:start="4:1" pos:end="4:11"><name pos:start="4:1" pos:end="4:11"><name pos:start="4:1" pos:end="4:6">vector</name><argument_list type="generic" pos:start="4:7" pos:end="4:11">&lt;<argument pos:start="4:8" pos:end="4:10"><expr pos:start="4:8" pos:end="4:10"><name pos:start="4:8" pos:end="4:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="4:13" pos:end="4:13">a</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:17"><decl pos:start="5:1" pos:end="5:16"><type pos:start="5:1" pos:end="5:14"><name pos:start="5:1" pos:end="5:14"><name pos:start="5:1" pos:end="5:6">vector</name><argument_list type="generic" pos:start="5:7" pos:end="5:14">&lt;<argument pos:start="5:8" pos:end="5:13"><expr pos:start="5:8" pos:end="5:13"><name pos:start="5:8" pos:end="5:13">string</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="5:16" pos:end="5:16">s</name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="36:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list><block pos:start="6:11" pos:end="36:1">{<block_content pos:start="7:5" pos:end="35:5">
    <expr_stmt pos:start="7:5" pos:end="7:13"><expr pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">cin</name> <operator pos:start="7:9" pos:end="7:10">&gt;&gt;</operator> <name pos:start="7:12" pos:end="7:12">x</name></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:10"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">y</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">string</name></type> <name pos:start="9:12" pos:end="9:12">c</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:14"><decl pos:start="10:5" pos:end="10:13"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">i</name> <init pos:start="10:11" pos:end="10:13">= <expr pos:start="10:13" pos:end="10:13"><literal type="number" pos:start="10:13" pos:end="10:13">1</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="11:5" pos:end="19:5">while<condition pos:start="11:10" pos:end="11:19">(<expr pos:start="11:11" pos:end="11:18"><name pos:start="11:11" pos:end="11:13">cin</name> <operator pos:start="11:15" pos:end="11:16">&gt;&gt;</operator> <name pos:start="11:18" pos:end="11:18">c</name></expr>)</condition><block pos:start="11:20" pos:end="19:5">{<block_content pos:start="12:9" pos:end="18:9">
        <expr_stmt pos:start="12:9" pos:end="12:23"><expr pos:start="12:9" pos:end="12:22"><call pos:start="12:9" pos:end="12:22"><name pos:start="12:9" pos:end="12:19"><name pos:start="12:9" pos:end="12:9">s</name><operator pos:start="12:10" pos:end="12:10">.</operator><name pos:start="12:11" pos:end="12:19">push_back</name></name><argument_list pos:start="12:20" pos:end="12:22">(<argument pos:start="12:21" pos:end="12:21"><expr pos:start="12:21" pos:end="12:21"><name pos:start="12:21" pos:end="12:21">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="13:9" pos:end="18:9"><if pos:start="13:9" pos:end="16:9">if<condition pos:start="13:11" pos:end="13:34">(<expr pos:start="13:12" pos:end="13:33"><name pos:start="13:12" pos:end="13:15"><name pos:start="13:12" pos:end="13:12">s</name><index pos:start="13:13" pos:end="13:15">[<expr pos:start="13:14" pos:end="13:14"><name pos:start="13:14" pos:end="13:14">i</name></expr>]</index></name> <operator pos:start="13:17" pos:end="13:18">!=</operator> <literal type="string" pos:start="13:20" pos:end="13:33">"tingtingting"</literal></expr>)</condition><block pos:start="13:35" pos:end="16:9">{<block_content pos:start="14:13" pos:end="15:27">
            <expr_stmt pos:start="14:13" pos:end="14:21"><expr pos:start="14:13" pos:end="14:20"><name pos:start="14:13" pos:end="14:15">cin</name> <operator pos:start="14:17" pos:end="14:18">&gt;&gt;</operator> <name pos:start="14:20" pos:end="14:20">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:27"><expr pos:start="15:13" pos:end="15:26"><call pos:start="15:13" pos:end="15:26"><name pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:13">a</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">push_back</name></name><argument_list pos:start="15:24" pos:end="15:26">(<argument pos:start="15:25" pos:end="15:25"><expr pos:start="15:25" pos:end="15:25"><name pos:start="15:25" pos:end="15:25">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="16:10" pos:end="18:9">else<block pos:start="16:14" pos:end="18:9">{<block_content pos:start="17:13" pos:end="17:27">
            <expr_stmt pos:start="17:13" pos:end="17:27"><expr pos:start="17:13" pos:end="17:26"><call pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:13">a</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">push_back</name></name><argument_list pos:start="17:24" pos:end="17:26">(<argument pos:start="17:25" pos:end="17:25"><expr pos:start="17:25" pos:end="17:25"><literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <for pos:start="20:5" pos:end="35:5">for <control pos:start="20:9" pos:end="20:36">(<init pos:start="20:10" pos:end="20:19"><decl pos:start="20:10" pos:end="20:18"><type pos:start="20:10" pos:end="20:12"><name pos:start="20:10" pos:end="20:12">int</name></type> <name pos:start="20:14" pos:end="20:14">i</name> <init pos:start="20:16" pos:end="20:18">= <expr pos:start="20:18" pos:end="20:18"><literal type="number" pos:start="20:18" pos:end="20:18">0</literal></expr></init></decl>;</init><condition pos:start="20:20" pos:end="20:32"><expr pos:start="20:20" pos:end="20:31"><name pos:start="20:20" pos:end="20:20">i</name> <operator pos:start="20:22" pos:end="20:22">&lt;</operator> <call pos:start="20:24" pos:end="20:31"><name pos:start="20:24" pos:end="20:29"><name pos:start="20:24" pos:end="20:24">a</name><operator pos:start="20:25" pos:end="20:25">.</operator><name pos:start="20:26" pos:end="20:29">size</name></name><argument_list pos:start="20:30" pos:end="20:31">()</argument_list></call></expr>;</condition><incr pos:start="20:33" pos:end="20:35"><expr pos:start="20:33" pos:end="20:35"><name pos:start="20:33" pos:end="20:33">i</name><operator pos:start="20:34" pos:end="20:35">++</operator></expr></incr>)</control><block pos:start="20:37" pos:end="35:5">{<block_content pos:start="21:9" pos:end="34:9">
        <if_stmt pos:start="21:9" pos:end="34:9"><if pos:start="21:9" pos:end="27:9">if<condition pos:start="21:11" pos:end="21:32">(<expr pos:start="21:12" pos:end="21:31"><name pos:start="21:12" pos:end="21:15"><name pos:start="21:12" pos:end="21:12">s</name><index pos:start="21:13" pos:end="21:15">[<expr pos:start="21:14" pos:end="21:14"><name pos:start="21:14" pos:end="21:14">i</name></expr>]</index></name> <operator pos:start="21:17" pos:end="21:18">!=</operator> <literal type="string" pos:start="21:20" pos:end="21:31">"kaomianjin"</literal></expr>)</condition><block pos:start="21:33" pos:end="27:9">{<block_content pos:start="22:13" pos:end="26:13">
            <expr_stmt pos:start="22:13" pos:end="22:22"><expr pos:start="22:13" pos:end="22:21"><name pos:start="22:13" pos:end="22:13">x</name> <operator pos:start="22:15" pos:end="22:16">-=</operator> <name pos:start="22:18" pos:end="22:21"><name pos:start="22:18" pos:end="22:18">a</name><index pos:start="22:19" pos:end="22:21">[<expr pos:start="22:20" pos:end="22:20"><name pos:start="22:20" pos:end="22:20">i</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="23:13" pos:end="26:13"><if pos:start="23:13" pos:end="26:13">if<condition pos:start="23:15" pos:end="23:21">(<expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:16">x</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>)</condition><block pos:start="23:22" pos:end="26:13">{<block_content pos:start="24:17" pos:end="25:25">
                <expr_stmt pos:start="24:17" pos:end="24:40"><expr pos:start="24:17" pos:end="24:39"><name pos:start="24:17" pos:end="24:20">cout</name> <operator pos:start="24:22" pos:end="24:23">&lt;&lt;</operator> <literal type="string" pos:start="24:25" pos:end="24:39">"Unfortunately"</literal></expr>;</expr_stmt>
                <return pos:start="25:17" pos:end="25:25">return <expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if> <else pos:start="27:11" pos:end="34:9">else <block pos:start="27:16" pos:end="34:9">{<block_content pos:start="28:13" pos:end="33:13">
            <if_stmt pos:start="28:13" pos:end="33:13"><if pos:start="28:13" pos:end="31:13">if<condition pos:start="28:15" pos:end="28:30">(<expr pos:start="28:16" pos:end="28:29"><name pos:start="28:16" pos:end="28:16">x</name> <operator pos:start="28:18" pos:end="28:19">-=</operator> <name pos:start="28:21" pos:end="28:24"><name pos:start="28:21" pos:end="28:21">a</name><index pos:start="28:22" pos:end="28:24">[<expr pos:start="28:23" pos:end="28:23"><name pos:start="28:23" pos:end="28:23">i</name></expr>]</index></name> <operator pos:start="28:26" pos:end="28:27">&gt;=</operator> <literal type="number" pos:start="28:29" pos:end="28:29">0</literal></expr>)</condition><block pos:start="28:31" pos:end="31:13">{<block_content pos:start="29:17" pos:end="30:25">
                <expr_stmt pos:start="29:17" pos:end="29:42"><expr pos:start="29:17" pos:end="29:41"><name pos:start="29:17" pos:end="29:20">cout</name> <operator pos:start="29:22" pos:end="29:23">&lt;&lt;</operator> <literal type="string" pos:start="29:25" pos:end="29:41">"Congratulations"</literal></expr>;</expr_stmt>
                <return pos:start="30:17" pos:end="30:25">return <expr pos:start="30:24" pos:end="30:24"><literal type="number" pos:start="30:24" pos:end="30:24">0</literal></expr>;</return>
            </block_content>}</block></if> <else pos:start="31:15" pos:end="33:13">else <block pos:start="31:20" pos:end="33:13">{<block_content pos:start="32:17" pos:end="32:33">
                <expr_stmt pos:start="32:17" pos:end="32:33"><expr pos:start="32:17" pos:end="32:32"><name pos:start="32:17" pos:end="32:20">cout</name> <operator pos:start="32:22" pos:end="32:23">&lt;&lt;</operator> <literal type="string" pos:start="32:25" pos:end="32:32">"Hahaha"</literal></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
</unit>
