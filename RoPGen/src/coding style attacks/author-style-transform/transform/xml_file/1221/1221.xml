<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1221/1221.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="13:1"><type pos:start="3:1" pos:end="3:4"><name pos:start="3:1" pos:end="3:4">bool</name></type> <name pos:start="3:6" pos:end="3:8">cmp</name><parameter_list pos:start="3:9" pos:end="3:21">(<parameter pos:start="3:10" pos:end="3:14"><decl pos:start="3:10" pos:end="3:14"><type pos:start="3:10" pos:end="3:14"><name pos:start="3:10" pos:end="3:12">int</name></type> <name pos:start="3:14" pos:end="3:14">x</name></decl></parameter>,<parameter pos:start="3:16" pos:end="3:20"><decl pos:start="3:16" pos:end="3:20"><type pos:start="3:16" pos:end="3:20"><name pos:start="3:16" pos:end="3:18">int</name></type> <name pos:start="3:20" pos:end="3:20">y</name></decl></parameter>)</parameter_list><block pos:start="3:22" pos:end="13:1">{<block_content pos:start="4:5" pos:end="12:20">
    <decl_stmt pos:start="4:5" pos:end="4:24"><decl pos:start="4:5" pos:end="4:11"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">s</name><init pos:start="4:10" pos:end="4:11">=<expr pos:start="4:11" pos:end="4:11"><literal type="number" pos:start="4:11" pos:end="4:11">0</literal></expr></init></decl>,<decl pos:start="4:13" pos:end="4:15"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:13" pos:end="4:13">u</name><init pos:start="4:14" pos:end="4:15">=<expr pos:start="4:15" pos:end="4:15"><literal type="number" pos:start="4:15" pos:end="4:15">0</literal></expr></init></decl>,<decl pos:start="4:17" pos:end="4:19"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:17" pos:end="4:17">a</name><init pos:start="4:18" pos:end="4:19">=<expr pos:start="4:19" pos:end="4:19"><name pos:start="4:19" pos:end="4:19">x</name></expr></init></decl>,<decl pos:start="4:21" pos:end="4:23"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:21" pos:end="4:21">b</name><init pos:start="4:22" pos:end="4:23">=<expr pos:start="4:23" pos:end="4:23"><name pos:start="4:23" pos:end="4:23">y</name></expr></init></decl>;</decl_stmt>
    <while pos:start="5:5" pos:end="8:5">while<condition pos:start="5:10" pos:end="5:14">(<expr pos:start="5:11" pos:end="5:13"><name pos:start="5:11" pos:end="5:11">a</name><operator pos:start="5:12" pos:end="5:12">&gt;</operator><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr>)</condition><block pos:start="5:15" pos:end="8:5">{<block_content pos:start="6:9" pos:end="7:14">
        <expr_stmt pos:start="6:9" pos:end="6:12"><expr pos:start="6:9" pos:end="6:11"><name pos:start="6:9" pos:end="6:9">s</name><operator pos:start="6:10" pos:end="6:11">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="7:9" pos:end="7:14"><expr pos:start="7:9" pos:end="7:13"><name pos:start="7:9" pos:end="7:9">a</name><operator pos:start="7:10" pos:end="7:11">/=</operator><literal type="number" pos:start="7:12" pos:end="7:13">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while><while pos:start="8:6" pos:end="11:5">while<condition pos:start="8:11" pos:end="8:15">(<expr pos:start="8:12" pos:end="8:14"><name pos:start="8:12" pos:end="8:12">b</name><operator pos:start="8:13" pos:end="8:13">&gt;</operator><literal type="number" pos:start="8:14" pos:end="8:14">0</literal></expr>)</condition><block pos:start="8:16" pos:end="11:5">{<block_content pos:start="9:9" pos:end="10:14">
        <expr_stmt pos:start="9:9" pos:end="9:12"><expr pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:9">u</name><operator pos:start="9:10" pos:end="9:11">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:14"><expr pos:start="10:9" pos:end="10:13"><name pos:start="10:9" pos:end="10:9">b</name><operator pos:start="10:10" pos:end="10:11">/=</operator><literal type="number" pos:start="10:12" pos:end="10:13">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while><if_stmt pos:start="11:6" pos:end="12:20"><if pos:start="11:6" pos:end="11:25">if<condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">!=</operator><name pos:start="11:12" pos:end="11:12">u</name></expr>)</condition><block type="pseudo" pos:start="11:15" pos:end="11:25"><block_content pos:start="11:15" pos:end="11:25"> <return pos:start="11:15" pos:end="11:25">return <expr pos:start="11:22" pos:end="11:24"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:23">&lt;</operator><name pos:start="11:24" pos:end="11:24">u</name></expr>;</return></block_content></block></if>
    <else pos:start="12:5" pos:end="12:20">else<block type="pseudo" pos:start="12:10" pos:end="12:20"><block_content pos:start="12:10" pos:end="12:20"> <return pos:start="12:10" pos:end="12:20">return <expr pos:start="12:17" pos:end="12:19"><name pos:start="12:17" pos:end="12:17">x</name><operator pos:start="12:18" pos:end="12:18">&lt;</operator><name pos:start="12:19" pos:end="12:19">y</name></expr>;</return></block_content></block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="14:1" pos:end="24:1"><type pos:start="14:1" pos:end="14:3"><name pos:start="14:1" pos:end="14:3">int</name></type> <name pos:start="14:5" pos:end="14:8">main</name><parameter_list pos:start="14:9" pos:end="14:10">()</parameter_list><block pos:start="14:11" pos:end="24:1">{<block_content pos:start="15:5" pos:end="23:5">
    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:11"><expr pos:start="16:5" pos:end="16:10"><name pos:start="16:5" pos:end="16:7">cin</name><operator pos:start="16:8" pos:end="16:9">&gt;&gt;</operator><name pos:start="16:10" pos:end="16:10">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:9">a</name><index pos:start="17:10" pos:end="17:15">[<expr pos:start="17:11" pos:end="17:14"><name pos:start="17:11" pos:end="17:11">n</name><operator pos:start="17:12" pos:end="17:12">+</operator><literal type="number" pos:start="17:13" pos:end="17:14">10</literal></expr>]</index></name></decl>;</decl_stmt>
    <for pos:start="18:5" pos:end="20:5">for<control pos:start="18:8" pos:end="18:25">(<init pos:start="18:9" pos:end="18:16"><decl pos:start="18:9" pos:end="18:15"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">i</name><init pos:start="18:14" pos:end="18:15">=<expr pos:start="18:15" pos:end="18:15"><literal type="number" pos:start="18:15" pos:end="18:15">1</literal></expr></init></decl>;</init><condition pos:start="18:17" pos:end="18:21"><expr pos:start="18:17" pos:end="18:20"><name pos:start="18:17" pos:end="18:17">i</name><operator pos:start="18:18" pos:end="18:19">&lt;=</operator><name pos:start="18:20" pos:end="18:20">n</name></expr>;</condition><incr pos:start="18:22" pos:end="18:24"><expr pos:start="18:22" pos:end="18:24"><name pos:start="18:22" pos:end="18:22">i</name><operator pos:start="18:23" pos:end="18:24">++</operator></expr></incr>)</control><block pos:start="18:26" pos:end="20:5">{<block_content pos:start="19:9" pos:end="19:18">
        <expr_stmt pos:start="19:9" pos:end="19:18"><expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:11">cin</name><operator pos:start="19:12" pos:end="19:13">&gt;&gt;</operator><name pos:start="19:14" pos:end="19:17"><name pos:start="19:14" pos:end="19:14">a</name><index pos:start="19:15" pos:end="19:17">[<expr pos:start="19:16" pos:end="19:16"><name pos:start="19:16" pos:end="19:16">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for><expr_stmt pos:start="20:6" pos:end="20:21"><expr pos:start="20:6" pos:end="20:20"><call pos:start="20:6" pos:end="20:20"><name pos:start="20:6" pos:end="20:9">sort</name><argument_list pos:start="20:10" pos:end="20:20">(<argument pos:start="20:11" pos:end="20:11"><expr pos:start="20:11" pos:end="20:11"><name pos:start="20:11" pos:end="20:11">a</name></expr></argument>,<argument pos:start="20:13" pos:end="20:15"><expr pos:start="20:13" pos:end="20:15"><name pos:start="20:13" pos:end="20:13">a</name><operator pos:start="20:14" pos:end="20:14">+</operator><name pos:start="20:15" pos:end="20:15">n</name></expr></argument>,<argument pos:start="20:17" pos:end="20:19"><expr pos:start="20:17" pos:end="20:19"><name pos:start="20:17" pos:end="20:19">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="21:5" pos:end="23:5">for<control pos:start="21:8" pos:end="21:25">(<init pos:start="21:9" pos:end="21:16"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">i</name><init pos:start="21:14" pos:end="21:15">=<expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">1</literal></expr></init></decl>;</init><condition pos:start="21:17" pos:end="21:21"><expr pos:start="21:17" pos:end="21:20"><name pos:start="21:17" pos:end="21:17">i</name><operator pos:start="21:18" pos:end="21:19">&lt;=</operator><name pos:start="21:20" pos:end="21:20">n</name></expr>;</condition><incr pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:22">i</name><operator pos:start="21:23" pos:end="21:24">++</operator></expr></incr>)</control><block pos:start="21:26" pos:end="23:5">{<block_content pos:start="22:9" pos:end="22:24">
        <expr_stmt pos:start="22:9" pos:end="22:24"><expr pos:start="22:9" pos:end="22:23"><name pos:start="22:9" pos:end="22:12">cout</name><operator pos:start="22:13" pos:end="22:14">&lt;&lt;</operator><name pos:start="22:15" pos:end="22:18"><name pos:start="22:15" pos:end="22:15">a</name><index pos:start="22:16" pos:end="22:18">[<expr pos:start="22:17" pos:end="22:17"><name pos:start="22:17" pos:end="22:17">i</name></expr>]</index></name><operator pos:start="22:19" pos:end="22:20">&lt;&lt;</operator><literal type="char" pos:start="22:21" pos:end="22:23">' '</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function> 
</unit>
