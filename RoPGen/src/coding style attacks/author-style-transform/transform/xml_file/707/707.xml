<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/707/707.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:10"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:7"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:7">m</name></decl>,<decl pos:start="3:9" pos:end="3:9"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:9" pos:end="3:9">k</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:35"><decl pos:start="4:1" pos:end="4:9"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:9"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:9">[<expr pos:start="4:7" pos:end="4:8"><literal type="number" pos:start="4:7" pos:end="4:8">50</literal></expr>]</index></name></decl>,<decl pos:start="4:11" pos:end="4:19"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:11" pos:end="4:19"><name pos:start="4:11" pos:end="4:11">c</name><index pos:start="4:12" pos:end="4:15">[<expr pos:start="4:13" pos:end="4:14"><literal type="number" pos:start="4:13" pos:end="4:14">50</literal></expr>]</index><index pos:start="4:16" pos:end="4:19">[<expr pos:start="4:17" pos:end="4:18"><literal type="number" pos:start="4:17" pos:end="4:18">50</literal></expr>]</index></name></decl>,<decl pos:start="4:21" pos:end="4:34"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:21" pos:end="4:34"><name pos:start="4:21" pos:end="4:22">dp</name><index pos:start="4:23" pos:end="4:30">[<expr pos:start="4:24" pos:end="4:29"><literal type="number" pos:start="4:24" pos:end="4:29">300010</literal></expr>]</index><index pos:start="4:31" pos:end="4:34">[<expr pos:start="4:32" pos:end="4:33"><literal type="number" pos:start="4:32" pos:end="4:33">20</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="10:1"><template pos:start="5:1" pos:end="5:20">template<parameter_list pos:start="5:9" pos:end="5:20">&lt;<parameter pos:start="5:10" pos:end="5:19"><type pos:start="5:10" pos:end="5:17"><name pos:start="5:10" pos:end="5:17">typename</name></type> <name pos:start="5:19" pos:end="5:19">T</name></parameter>&gt;</parameter_list></template><type pos:start="5:21" pos:end="5:24"><name pos:start="5:21" pos:end="5:24">void</name></type> <name pos:start="5:26" pos:end="5:29">read</name><parameter_list pos:start="5:30" pos:end="5:35">(<parameter pos:start="5:31" pos:end="5:34"><decl pos:start="5:31" pos:end="5:34"><type pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:31">T</name> <modifier pos:start="5:33" pos:end="5:33">&amp;</modifier></type><name pos:start="5:34" pos:end="5:34">x</name></decl></parameter>)</parameter_list><block pos:start="5:36" pos:end="10:1">{<block_content pos:start="6:5" pos:end="9:9">
    <expr_stmt pos:start="6:5" pos:end="6:8"><expr pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:5">x</name><operator pos:start="6:6" pos:end="6:6">=</operator><literal type="number" pos:start="6:7" pos:end="6:7">0</literal></expr>;</expr_stmt> <decl_stmt pos:start="6:10" pos:end="6:15"><decl pos:start="6:10" pos:end="6:14"><type pos:start="6:10" pos:end="6:10"><name pos:start="6:10" pos:end="6:10">T</name></type> <name pos:start="6:12" pos:end="6:12">f</name><init pos:start="6:13" pos:end="6:14">=<expr pos:start="6:14" pos:end="6:14"><literal type="number" pos:start="6:14" pos:end="6:14">1</literal></expr></init></decl>;</decl_stmt><decl_stmt pos:start="6:16" pos:end="6:33"><decl pos:start="6:16" pos:end="6:32"><type pos:start="6:16" pos:end="6:19"><name pos:start="6:16" pos:end="6:19">char</name></type> <name pos:start="6:21" pos:end="6:22">ch</name><init pos:start="6:23" pos:end="6:32">=<expr pos:start="6:24" pos:end="6:32"><call pos:start="6:24" pos:end="6:32"><name pos:start="6:24" pos:end="6:30">getchar</name><argument_list pos:start="6:31" pos:end="6:32">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <while pos:start="7:5" pos:end="7:57">while<condition pos:start="7:10" pos:end="7:25">(<expr pos:start="7:11" pos:end="7:24"><name pos:start="7:11" pos:end="7:21"><name pos:start="7:11" pos:end="7:12">ch</name><argument_list type="generic" pos:start="7:13" pos:end="7:21">&lt;<argument pos:start="7:14" pos:end="7:20"><expr pos:start="7:14" pos:end="7:20"><literal type="char" pos:start="7:14" pos:end="7:16">'0'</literal><operator pos:start="7:17" pos:end="7:18">||</operator><name pos:start="7:19" pos:end="7:20">ch</name></expr></argument>&gt;</argument_list></name><literal type="char" pos:start="7:22" pos:end="7:24">'9'</literal></expr>)</condition><block pos:start="7:26" pos:end="7:57">{<block_content pos:start="7:27" pos:end="7:56"><if_stmt pos:start="7:27" pos:end="7:43"><if pos:start="7:27" pos:end="7:43">if<condition pos:start="7:29" pos:end="7:37">(<expr pos:start="7:30" pos:end="7:36"><name pos:start="7:30" pos:end="7:31">ch</name><operator pos:start="7:32" pos:end="7:33">==</operator><literal type="char" pos:start="7:34" pos:end="7:36">'-'</literal></expr>)</condition><block type="pseudo" pos:start="7:39" pos:end="7:43"><block_content pos:start="7:39" pos:end="7:43"> <expr_stmt pos:start="7:39" pos:end="7:43"><expr pos:start="7:39" pos:end="7:42"><name pos:start="7:39" pos:end="7:39">f</name><operator pos:start="7:40" pos:end="7:40">=</operator><operator pos:start="7:41" pos:end="7:41">-</operator><literal type="number" pos:start="7:42" pos:end="7:42">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt><expr_stmt pos:start="7:44" pos:end="7:56"><expr pos:start="7:44" pos:end="7:55"><name pos:start="7:44" pos:end="7:45">ch</name><operator pos:start="7:46" pos:end="7:46">=</operator><call pos:start="7:47" pos:end="7:55"><name pos:start="7:47" pos:end="7:53">getchar</name><argument_list pos:start="7:54" pos:end="7:55">()</argument_list></call></expr>;</expr_stmt></block_content>}</block></while>
    <while pos:start="8:5" pos:end="8:65">while<condition pos:start="8:10" pos:end="8:27">(<expr pos:start="8:11" pos:end="8:26"><name pos:start="8:11" pos:end="8:12">ch</name><operator pos:start="8:13" pos:end="8:14">&gt;=</operator><literal type="char" pos:start="8:15" pos:end="8:17">'0'</literal><operator pos:start="8:18" pos:end="8:19">&amp;&amp;</operator><name pos:start="8:20" pos:end="8:21">ch</name><operator pos:start="8:22" pos:end="8:23">&lt;=</operator><literal type="char" pos:start="8:24" pos:end="8:26">'9'</literal></expr>)</condition><block pos:start="8:28" pos:end="8:65">{<block_content pos:start="8:29" pos:end="8:64"><expr_stmt pos:start="8:29" pos:end="8:51"><expr pos:start="8:29" pos:end="8:50"><name pos:start="8:29" pos:end="8:29">x</name><operator pos:start="8:30" pos:end="8:30">=</operator><operator pos:start="8:31" pos:end="8:31">(</operator><name pos:start="8:32" pos:end="8:32">x</name><operator pos:start="8:33" pos:end="8:34">&lt;&lt;</operator><literal type="number" pos:start="8:35" pos:end="8:35">1</literal><operator pos:start="8:36" pos:end="8:36">)</operator><operator pos:start="8:37" pos:end="8:37">+</operator><operator pos:start="8:38" pos:end="8:38">(</operator><name pos:start="8:39" pos:end="8:39">x</name><operator pos:start="8:40" pos:end="8:41">&lt;&lt;</operator><literal type="number" pos:start="8:42" pos:end="8:42">3</literal><operator pos:start="8:43" pos:end="8:43">)</operator><operator pos:start="8:44" pos:end="8:44">+</operator><name pos:start="8:45" pos:end="8:46">ch</name><operator pos:start="8:47" pos:end="8:47">-</operator><literal type="char" pos:start="8:48" pos:end="8:50">'0'</literal></expr>;</expr_stmt><expr_stmt pos:start="8:52" pos:end="8:64"><expr pos:start="8:52" pos:end="8:63"><name pos:start="8:52" pos:end="8:53">ch</name><operator pos:start="8:54" pos:end="8:54">=</operator><call pos:start="8:55" pos:end="8:63"><name pos:start="8:55" pos:end="8:61">getchar</name><argument_list pos:start="8:62" pos:end="8:63">()</argument_list></call></expr>;</expr_stmt></block_content>}</block></while>
    <expr_stmt pos:start="9:5" pos:end="9:9"><expr pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:5">x</name><operator pos:start="9:6" pos:end="9:7">*=</operator><name pos:start="9:8" pos:end="9:8">f</name></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="11:1" pos:end="19:1"><type pos:start="11:1" pos:end="11:3"><name pos:start="11:1" pos:end="11:3">int</name></type> <name pos:start="11:5" pos:end="11:7">num</name><parameter_list pos:start="11:8" pos:end="11:14">(<parameter pos:start="11:9" pos:end="11:13"><decl pos:start="11:9" pos:end="11:13"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">x</name></decl></parameter>)</parameter_list><block pos:start="11:15" pos:end="19:1">{<block_content pos:start="12:5" pos:end="18:16">
    <decl_stmt pos:start="12:5" pos:end="12:15"><decl pos:start="12:5" pos:end="12:14"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:12">anss</name><init pos:start="12:13" pos:end="12:14">=<expr pos:start="12:14" pos:end="12:14"><literal type="number" pos:start="12:14" pos:end="12:14">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="13:5" pos:end="17:5">while<condition pos:start="13:10" pos:end="13:14">(<expr pos:start="13:11" pos:end="13:13"><name pos:start="13:11" pos:end="13:11">x</name><operator pos:start="13:12" pos:end="13:12">&gt;</operator><literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr>)</condition><block pos:start="13:15" pos:end="17:5">{<block_content pos:start="14:9" pos:end="16:13">
        <if_stmt pos:start="14:9" pos:end="15:23"><if pos:start="14:9" pos:end="15:23">if<condition pos:start="14:11" pos:end="14:18">(<expr pos:start="14:12" pos:end="14:17"><name pos:start="14:12" pos:end="14:12">x</name><operator pos:start="14:13" pos:end="14:13">%</operator><literal type="number" pos:start="14:14" pos:end="14:14">2</literal><operator pos:start="14:15" pos:end="14:16">==</operator><literal type="number" pos:start="14:17" pos:end="14:17">1</literal></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:23"><block_content pos:start="15:13" pos:end="15:23">
            <expr_stmt pos:start="15:13" pos:end="15:23"><expr pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:16">anss</name><operator pos:start="15:17" pos:end="15:18">++</operator></expr><operator pos:start="15:19" pos:end="15:19">,</operator><expr pos:start="15:20" pos:end="15:22"><name pos:start="15:20" pos:end="15:20">x</name><operator pos:start="15:21" pos:end="15:22">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:13"><expr pos:start="16:9" pos:end="16:12"><name pos:start="16:9" pos:end="16:9">x</name><operator pos:start="16:10" pos:end="16:11">/=</operator><literal type="number" pos:start="16:12" pos:end="16:12">2</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="18:5" pos:end="18:16">return <expr pos:start="18:12" pos:end="18:15"><name pos:start="18:12" pos:end="18:15">anss</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="20:1" pos:end="45:1"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:8">main</name><parameter_list pos:start="20:9" pos:end="20:10">()</parameter_list><block pos:start="20:11" pos:end="45:1">{<block_content pos:start="21:5" pos:end="44:13">
    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:11">freopen</name><argument_list pos:start="21:12" pos:end="21:32">(<argument pos:start="21:13" pos:end="21:21"><expr pos:start="21:13" pos:end="21:21"><literal type="string" pos:start="21:13" pos:end="21:21">"meal.in"</literal></expr></argument>,<argument pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><literal type="string" pos:start="21:23" pos:end="21:25">"r"</literal></expr></argument>,<argument pos:start="21:27" pos:end="21:31"><expr pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:35"><expr pos:start="22:5" pos:end="22:34"><call pos:start="22:5" pos:end="22:34"><name pos:start="22:5" pos:end="22:11">freopen</name><argument_list pos:start="22:12" pos:end="22:34">(<argument pos:start="22:13" pos:end="22:22"><expr pos:start="22:13" pos:end="22:22"><literal type="string" pos:start="22:13" pos:end="22:22">"meal.out"</literal></expr></argument>,<argument pos:start="22:24" pos:end="22:26"><expr pos:start="22:24" pos:end="22:26"><literal type="string" pos:start="22:24" pos:end="22:26">"w"</literal></expr></argument>,<argument pos:start="22:28" pos:end="22:33"><expr pos:start="22:28" pos:end="22:33"><name pos:start="22:28" pos:end="22:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:11"><call pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:8">read</name><argument_list pos:start="23:9" pos:end="23:11">(<argument pos:start="23:10" pos:end="23:10"><expr pos:start="23:10" pos:end="23:10"><name pos:start="23:10" pos:end="23:10">n</name></expr></argument>)</argument_list></call></expr><operator pos:start="23:12" pos:end="23:12">,</operator><expr pos:start="23:13" pos:end="23:19"><call pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:16">read</name><argument_list pos:start="23:17" pos:end="23:19">(<argument pos:start="23:18" pos:end="23:18"><expr pos:start="23:18" pos:end="23:18"><name pos:start="23:18" pos:end="23:18">m</name></expr></argument>)</argument_list></call></expr><operator pos:start="23:20" pos:end="23:20">,</operator><expr pos:start="23:21" pos:end="23:27"><call pos:start="23:21" pos:end="23:27"><name pos:start="23:21" pos:end="23:24">read</name><argument_list pos:start="23:25" pos:end="23:27">(<argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><name pos:start="23:26" pos:end="23:26">k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="24:5" pos:end="25:19">for<control pos:start="24:8" pos:end="24:35">(<init pos:start="24:9" pos:end="24:25"><decl pos:start="24:9" pos:end="24:24"><type pos:start="24:9" pos:end="24:20"><specifier pos:start="24:9" pos:end="24:16">register</specifier> <name pos:start="24:18" pos:end="24:20">int</name></type> <name pos:start="24:22" pos:end="24:22">i</name><init pos:start="24:23" pos:end="24:24">=<expr pos:start="24:24" pos:end="24:24"><literal type="number" pos:start="24:24" pos:end="24:24">0</literal></expr></init></decl>;</init> <condition pos:start="24:27" pos:end="24:30"><expr pos:start="24:27" pos:end="24:29"><name pos:start="24:27" pos:end="24:27">i</name><operator pos:start="24:28" pos:end="24:28">&lt;</operator><name pos:start="24:29" pos:end="24:29">n</name></expr>;</condition> <incr pos:start="24:32" pos:end="24:34"><expr pos:start="24:32" pos:end="24:34"><name pos:start="24:32" pos:end="24:32">i</name><operator pos:start="24:33" pos:end="24:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:9" pos:end="25:19"><block_content pos:start="25:9" pos:end="25:19">
        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><call pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:12">read</name><argument_list pos:start="25:13" pos:end="25:18">(<argument pos:start="25:14" pos:end="25:17"><expr pos:start="25:14" pos:end="25:17"><name pos:start="25:14" pos:end="25:17"><name pos:start="25:14" pos:end="25:14">a</name><index pos:start="25:15" pos:end="25:17">[<expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <for pos:start="26:5" pos:end="29:5">for<control pos:start="26:8" pos:end="26:42">(<init pos:start="26:9" pos:end="26:32"><decl pos:start="26:9" pos:end="26:24"><type pos:start="26:9" pos:end="26:20"><specifier pos:start="26:9" pos:end="26:16">register</specifier> <name pos:start="26:18" pos:end="26:20">int</name></type> <name pos:start="26:22" pos:end="26:22">i</name><init pos:start="26:23" pos:end="26:24">=<expr pos:start="26:24" pos:end="26:24"><literal type="number" pos:start="26:24" pos:end="26:24">0</literal></expr></init></decl>,<decl pos:start="26:26" pos:end="26:26"><type ref="prev" pos:start="26:9" pos:end="26:20"/><name pos:start="26:26" pos:end="26:26">x</name></decl>,<decl pos:start="26:28" pos:end="26:28"><type ref="prev" pos:start="26:9" pos:end="26:20"/><name pos:start="26:28" pos:end="26:28">y</name></decl>,<decl pos:start="26:30" pos:end="26:31"><type ref="prev" pos:start="26:9" pos:end="26:20"/><name pos:start="26:30" pos:end="26:31">ci</name></decl>;</init> <condition pos:start="26:34" pos:end="26:37"><expr pos:start="26:34" pos:end="26:36"><name pos:start="26:34" pos:end="26:34">i</name><operator pos:start="26:35" pos:end="26:35">&lt;</operator><name pos:start="26:36" pos:end="26:36">k</name></expr>;</condition> <incr pos:start="26:39" pos:end="26:41"><expr pos:start="26:39" pos:end="26:41"><name pos:start="26:39" pos:end="26:39">i</name><operator pos:start="26:40" pos:end="26:41">++</operator></expr></incr>)</control><block pos:start="26:43" pos:end="29:5">{<block_content pos:start="27:9" pos:end="28:23">
        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:15"><call pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:12">read</name><argument_list pos:start="27:13" pos:end="27:15">(<argument pos:start="27:14" pos:end="27:14"><expr pos:start="27:14" pos:end="27:14"><name pos:start="27:14" pos:end="27:14">x</name></expr></argument>)</argument_list></call></expr><operator pos:start="27:16" pos:end="27:16">,</operator><expr pos:start="27:17" pos:end="27:23"><call pos:start="27:17" pos:end="27:23"><name pos:start="27:17" pos:end="27:20">read</name><argument_list pos:start="27:21" pos:end="27:23">(<argument pos:start="27:22" pos:end="27:22"><expr pos:start="27:22" pos:end="27:22"><name pos:start="27:22" pos:end="27:22">y</name></expr></argument>)</argument_list></call></expr><operator pos:start="27:24" pos:end="27:24">,</operator><expr pos:start="27:25" pos:end="27:32"><call pos:start="27:25" pos:end="27:32"><name pos:start="27:25" pos:end="27:28">read</name><argument_list pos:start="27:29" pos:end="27:32">(<argument pos:start="27:30" pos:end="27:31"><expr pos:start="27:30" pos:end="27:31"><name pos:start="27:30" pos:end="27:31">ci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:23"><expr pos:start="28:9" pos:end="28:22"><name pos:start="28:9" pos:end="28:19"><name pos:start="28:9" pos:end="28:9">c</name><index pos:start="28:10" pos:end="28:14">[<expr pos:start="28:11" pos:end="28:13"><name pos:start="28:11" pos:end="28:11">x</name><operator pos:start="28:12" pos:end="28:12">-</operator><literal type="number" pos:start="28:13" pos:end="28:13">1</literal></expr>]</index><index pos:start="28:15" pos:end="28:19">[<expr pos:start="28:16" pos:end="28:18"><name pos:start="28:16" pos:end="28:16">y</name><operator pos:start="28:17" pos:end="28:17">-</operator><literal type="number" pos:start="28:18" pos:end="28:18">1</literal></expr>]</index></name><operator pos:start="28:20" pos:end="28:20">=</operator><name pos:start="28:21" pos:end="28:22">ci</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="30:5" pos:end="31:25">for<control pos:start="30:8" pos:end="30:35">(<init pos:start="30:9" pos:end="30:25"><decl pos:start="30:9" pos:end="30:24"><type pos:start="30:9" pos:end="30:20"><specifier pos:start="30:9" pos:end="30:16">register</specifier> <name pos:start="30:18" pos:end="30:20">int</name></type> <name pos:start="30:22" pos:end="30:22">i</name><init pos:start="30:23" pos:end="30:24">=<expr pos:start="30:24" pos:end="30:24"><literal type="number" pos:start="30:24" pos:end="30:24">0</literal></expr></init></decl>;</init> <condition pos:start="30:27" pos:end="30:30"><expr pos:start="30:27" pos:end="30:29"><name pos:start="30:27" pos:end="30:27">i</name><operator pos:start="30:28" pos:end="30:28">&lt;</operator><name pos:start="30:29" pos:end="30:29">n</name></expr>;</condition> <incr pos:start="30:32" pos:end="30:34"><expr pos:start="30:32" pos:end="30:34"><name pos:start="30:32" pos:end="30:32">i</name><operator pos:start="30:33" pos:end="30:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:9" pos:end="31:25"><block_content pos:start="31:9" pos:end="31:25">
        <expr_stmt pos:start="31:9" pos:end="31:25"><expr pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:10">dp</name><index pos:start="31:11" pos:end="31:16">[<expr pos:start="31:12" pos:end="31:15"><literal type="number" pos:start="31:12" pos:end="31:12">1</literal><operator pos:start="31:13" pos:end="31:14">&lt;&lt;</operator><name pos:start="31:15" pos:end="31:15">i</name></expr>]</index><index pos:start="31:17" pos:end="31:19">[<expr pos:start="31:18" pos:end="31:18"><name pos:start="31:18" pos:end="31:18">i</name></expr>]</index></name><operator pos:start="31:20" pos:end="31:20">=</operator><name pos:start="31:21" pos:end="31:24"><name pos:start="31:21" pos:end="31:21">a</name><index pos:start="31:22" pos:end="31:24">[<expr pos:start="31:23" pos:end="31:23"><name pos:start="31:23" pos:end="31:23">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <for pos:start="32:5" pos:end="37:83">for<control pos:start="32:8" pos:end="32:40">(<init pos:start="32:9" pos:end="32:25"><decl pos:start="32:9" pos:end="32:24"><type pos:start="32:9" pos:end="32:20"><specifier pos:start="32:9" pos:end="32:16">register</specifier> <name pos:start="32:18" pos:end="32:20">int</name></type> <name pos:start="32:22" pos:end="32:22">i</name><init pos:start="32:23" pos:end="32:24">=<expr pos:start="32:24" pos:end="32:24"><literal type="number" pos:start="32:24" pos:end="32:24">0</literal></expr></init></decl>;</init> <condition pos:start="32:27" pos:end="32:35"><expr pos:start="32:27" pos:end="32:34"><name pos:start="32:27" pos:end="32:27">i</name><operator pos:start="32:28" pos:end="32:28">&lt;</operator><operator pos:start="32:29" pos:end="32:29">(</operator><literal type="number" pos:start="32:30" pos:end="32:30">1</literal><operator pos:start="32:31" pos:end="32:32">&lt;&lt;</operator><name pos:start="32:33" pos:end="32:33">n</name><operator pos:start="32:34" pos:end="32:34">)</operator></expr>;</condition> <incr pos:start="32:37" pos:end="32:39"><expr pos:start="32:37" pos:end="32:39"><name pos:start="32:37" pos:end="32:37">i</name><operator pos:start="32:38" pos:end="32:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:9" pos:end="37:83"><block_content pos:start="33:9" pos:end="37:83">
        <for pos:start="33:9" pos:end="37:83">for<control pos:start="33:12" pos:end="33:39">(<init pos:start="33:13" pos:end="33:29"><decl pos:start="33:13" pos:end="33:28"><type pos:start="33:13" pos:end="33:24"><specifier pos:start="33:13" pos:end="33:20">register</specifier> <name pos:start="33:22" pos:end="33:24">int</name></type> <name pos:start="33:26" pos:end="33:26">j</name><init pos:start="33:27" pos:end="33:28">=<expr pos:start="33:28" pos:end="33:28"><literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr></init></decl>;</init> <condition pos:start="33:31" pos:end="33:34"><expr pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:31">j</name><operator pos:start="33:32" pos:end="33:32">&lt;</operator><name pos:start="33:33" pos:end="33:33">n</name></expr>;</condition> <incr pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><name pos:start="33:36" pos:end="33:36">j</name><operator pos:start="33:37" pos:end="33:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="34:13" pos:end="37:83"><block_content pos:start="34:13" pos:end="37:83">
            <if_stmt pos:start="34:13" pos:end="37:83"><if pos:start="34:13" pos:end="37:83">if<condition pos:start="34:15" pos:end="34:27">(<expr pos:start="34:16" pos:end="34:26"><operator pos:start="34:16" pos:end="34:16">!</operator><operator pos:start="34:17" pos:end="34:17">(</operator><operator pos:start="34:18" pos:end="34:18">(</operator><name pos:start="34:19" pos:end="34:19">i</name><operator pos:start="34:20" pos:end="34:21">&gt;&gt;</operator><name pos:start="34:22" pos:end="34:22">j</name><operator pos:start="34:23" pos:end="34:23">)</operator><operator pos:start="34:24" pos:end="34:24">&amp;</operator><literal type="number" pos:start="34:25" pos:end="34:25">1</literal><operator pos:start="34:26" pos:end="34:26">)</operator></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="37:83"><block_content pos:start="35:17" pos:end="37:83">
                <for pos:start="35:17" pos:end="37:83">for<control pos:start="35:20" pos:end="35:47">(<init pos:start="35:21" pos:end="35:37"><decl pos:start="35:21" pos:end="35:36"><type pos:start="35:21" pos:end="35:32"><specifier pos:start="35:21" pos:end="35:28">register</specifier> <name pos:start="35:30" pos:end="35:32">int</name></type> <name pos:start="35:34" pos:end="35:34">k</name><init pos:start="35:35" pos:end="35:36">=<expr pos:start="35:36" pos:end="35:36"><literal type="number" pos:start="35:36" pos:end="35:36">0</literal></expr></init></decl>;</init> <condition pos:start="35:39" pos:end="35:42"><expr pos:start="35:39" pos:end="35:41"><name pos:start="35:39" pos:end="35:39">k</name><operator pos:start="35:40" pos:end="35:40">&lt;</operator><name pos:start="35:41" pos:end="35:41">n</name></expr>;</condition> <incr pos:start="35:44" pos:end="35:46"><expr pos:start="35:44" pos:end="35:46"><name pos:start="35:44" pos:end="35:44">k</name><operator pos:start="35:45" pos:end="35:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="36:21" pos:end="37:83"><block_content pos:start="36:21" pos:end="37:83">
                    <if_stmt pos:start="36:21" pos:end="37:83"><if pos:start="36:21" pos:end="37:83">if<condition pos:start="36:23" pos:end="36:32">(<expr pos:start="36:24" pos:end="36:31"><operator pos:start="36:24" pos:end="36:24">(</operator><name pos:start="36:25" pos:end="36:25">i</name><operator pos:start="36:26" pos:end="36:27">&gt;&gt;</operator><name pos:start="36:28" pos:end="36:28">k</name><operator pos:start="36:29" pos:end="36:29">)</operator><operator pos:start="36:30" pos:end="36:30">&amp;</operator><literal type="number" pos:start="36:31" pos:end="36:31">1</literal></expr>)</condition><block type="pseudo" pos:start="37:25" pos:end="37:83"><block_content pos:start="37:25" pos:end="37:83">
                        <expr_stmt pos:start="37:25" pos:end="37:83"><expr pos:start="37:25" pos:end="37:82"><name pos:start="37:25" pos:end="37:39"><name pos:start="37:25" pos:end="37:26">dp</name><index pos:start="37:27" pos:end="37:36">[<expr pos:start="37:28" pos:end="37:35"><name pos:start="37:28" pos:end="37:28">i</name><operator pos:start="37:29" pos:end="37:29">|</operator><operator pos:start="37:30" pos:end="37:30">(</operator><literal type="number" pos:start="37:31" pos:end="37:31">1</literal><operator pos:start="37:32" pos:end="37:33">&lt;&lt;</operator><name pos:start="37:34" pos:end="37:34">j</name><operator pos:start="37:35" pos:end="37:35">)</operator></expr>]</index><index pos:start="37:37" pos:end="37:39">[<expr pos:start="37:38" pos:end="37:38"><name pos:start="37:38" pos:end="37:38">j</name></expr>]</index></name><operator pos:start="37:40" pos:end="37:40">=</operator><call pos:start="37:41" pos:end="37:82"><name pos:start="37:41" pos:end="37:43">max</name><argument_list pos:start="37:44" pos:end="37:82">(<argument pos:start="37:45" pos:end="37:59"><expr pos:start="37:45" pos:end="37:59"><name pos:start="37:45" pos:end="37:59"><name pos:start="37:45" pos:end="37:46">dp</name><index pos:start="37:47" pos:end="37:56">[<expr pos:start="37:48" pos:end="37:55"><name pos:start="37:48" pos:end="37:48">i</name><operator pos:start="37:49" pos:end="37:49">|</operator><operator pos:start="37:50" pos:end="37:50">(</operator><literal type="number" pos:start="37:51" pos:end="37:51">1</literal><operator pos:start="37:52" pos:end="37:53">&lt;&lt;</operator><name pos:start="37:54" pos:end="37:54">j</name><operator pos:start="37:55" pos:end="37:55">)</operator></expr>]</index><index pos:start="37:57" pos:end="37:59">[<expr pos:start="37:58" pos:end="37:58"><name pos:start="37:58" pos:end="37:58">j</name></expr>]</index></name></expr></argument>,<argument pos:start="37:61" pos:end="37:81"><expr pos:start="37:61" pos:end="37:81"><name pos:start="37:61" pos:end="37:68"><name pos:start="37:61" pos:end="37:62">dp</name><index pos:start="37:63" pos:end="37:65">[<expr pos:start="37:64" pos:end="37:64"><name pos:start="37:64" pos:end="37:64">i</name></expr>]</index><index pos:start="37:66" pos:end="37:68">[<expr pos:start="37:67" pos:end="37:67"><name pos:start="37:67" pos:end="37:67">k</name></expr>]</index></name><operator pos:start="37:69" pos:end="37:69">+</operator><name pos:start="37:70" pos:end="37:76"><name pos:start="37:70" pos:end="37:70">c</name><index pos:start="37:71" pos:end="37:73">[<expr pos:start="37:72" pos:end="37:72"><name pos:start="37:72" pos:end="37:72">k</name></expr>]</index><index pos:start="37:74" pos:end="37:76">[<expr pos:start="37:75" pos:end="37:75"><name pos:start="37:75" pos:end="37:75">j</name></expr>]</index></name><operator pos:start="37:77" pos:end="37:77">+</operator><name pos:start="37:78" pos:end="37:81"><name pos:start="37:78" pos:end="37:78">a</name><index pos:start="37:79" pos:end="37:81">[<expr pos:start="37:80" pos:end="37:80"><name pos:start="37:80" pos:end="37:80">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for>
    <decl_stmt pos:start="38:5" pos:end="38:14"><decl pos:start="38:5" pos:end="38:13"><type pos:start="38:5" pos:end="38:7"><name pos:start="38:5" pos:end="38:7">int</name></type> <name pos:start="38:9" pos:end="38:11">ans</name><init pos:start="38:12" pos:end="38:13">=<expr pos:start="38:13" pos:end="38:13"><literal type="number" pos:start="38:13" pos:end="38:13">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="39:5" pos:end="42:38">for<control pos:start="39:8" pos:end="39:40">(<init pos:start="39:9" pos:end="39:25"><decl pos:start="39:9" pos:end="39:24"><type pos:start="39:9" pos:end="39:20"><specifier pos:start="39:9" pos:end="39:16">register</specifier> <name pos:start="39:18" pos:end="39:20">int</name></type> <name pos:start="39:22" pos:end="39:22">i</name><init pos:start="39:23" pos:end="39:24">=<expr pos:start="39:24" pos:end="39:24"><literal type="number" pos:start="39:24" pos:end="39:24">1</literal></expr></init></decl>;</init> <condition pos:start="39:27" pos:end="39:35"><expr pos:start="39:27" pos:end="39:34"><name pos:start="39:27" pos:end="39:27">i</name><operator pos:start="39:28" pos:end="39:28">&lt;</operator><operator pos:start="39:29" pos:end="39:29">(</operator><literal type="number" pos:start="39:30" pos:end="39:30">1</literal><operator pos:start="39:31" pos:end="39:32">&lt;&lt;</operator><name pos:start="39:33" pos:end="39:33">n</name><operator pos:start="39:34" pos:end="39:34">)</operator></expr>;</condition> <incr pos:start="39:37" pos:end="39:39"><expr pos:start="39:37" pos:end="39:39"><name pos:start="39:37" pos:end="39:37">i</name><operator pos:start="39:38" pos:end="39:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="40:9" pos:end="42:38"><block_content pos:start="40:9" pos:end="42:38">
        <if_stmt pos:start="40:9" pos:end="42:38"><if pos:start="40:9" pos:end="42:38">if<condition pos:start="40:11" pos:end="40:21">(<expr pos:start="40:12" pos:end="40:20"><call pos:start="40:12" pos:end="40:17"><name pos:start="40:12" pos:end="40:14">num</name><argument_list pos:start="40:15" pos:end="40:17">(<argument pos:start="40:16" pos:end="40:16"><expr pos:start="40:16" pos:end="40:16"><name pos:start="40:16" pos:end="40:16">i</name></expr></argument>)</argument_list></call><operator pos:start="40:18" pos:end="40:19">==</operator><name pos:start="40:20" pos:end="40:20">m</name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="42:38"><block_content pos:start="41:13" pos:end="42:38">
            <for pos:start="41:13" pos:end="42:38">for<control pos:start="41:16" pos:end="41:43">(<init pos:start="41:17" pos:end="41:33"><decl pos:start="41:17" pos:end="41:32"><type pos:start="41:17" pos:end="41:28"><specifier pos:start="41:17" pos:end="41:24">register</specifier> <name pos:start="41:26" pos:end="41:28">int</name></type> <name pos:start="41:30" pos:end="41:30">j</name><init pos:start="41:31" pos:end="41:32">=<expr pos:start="41:32" pos:end="41:32"><literal type="number" pos:start="41:32" pos:end="41:32">0</literal></expr></init></decl>;</init> <condition pos:start="41:35" pos:end="41:38"><expr pos:start="41:35" pos:end="41:37"><name pos:start="41:35" pos:end="41:35">j</name><operator pos:start="41:36" pos:end="41:36">&lt;</operator><name pos:start="41:37" pos:end="41:37">n</name></expr>;</condition> <incr pos:start="41:40" pos:end="41:42"><expr pos:start="41:40" pos:end="41:42"><name pos:start="41:40" pos:end="41:40">j</name><operator pos:start="41:41" pos:end="41:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="42:17" pos:end="42:38"><block_content pos:start="42:17" pos:end="42:38">
                <expr_stmt pos:start="42:17" pos:end="42:38"><expr pos:start="42:17" pos:end="42:37"><name pos:start="42:17" pos:end="42:19">ans</name><operator pos:start="42:20" pos:end="42:20">=</operator><call pos:start="42:21" pos:end="42:37"><name pos:start="42:21" pos:end="42:23">max</name><argument_list pos:start="42:24" pos:end="42:37">(<argument pos:start="42:25" pos:end="42:27"><expr pos:start="42:25" pos:end="42:27"><name pos:start="42:25" pos:end="42:27">ans</name></expr></argument>,<argument pos:start="42:29" pos:end="42:36"><expr pos:start="42:29" pos:end="42:36"><name pos:start="42:29" pos:end="42:36"><name pos:start="42:29" pos:end="42:30">dp</name><index pos:start="42:31" pos:end="42:33">[<expr pos:start="42:32" pos:end="42:32"><name pos:start="42:32" pos:end="42:32">i</name></expr>]</index><index pos:start="42:34" pos:end="42:36">[<expr pos:start="42:35" pos:end="42:35"><name pos:start="42:35" pos:end="42:35">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for>
    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><call pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:10">printf</name><argument_list pos:start="43:11" pos:end="43:20">(<argument pos:start="43:12" pos:end="43:15"><expr pos:start="43:12" pos:end="43:15"><literal type="string" pos:start="43:12" pos:end="43:15">"%d"</literal></expr></argument>,<argument pos:start="43:17" pos:end="43:19"><expr pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="44:5" pos:end="44:13">return <expr pos:start="44:12" pos:end="44:12"><literal type="number" pos:start="44:12" pos:end="44:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
