<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/70/70.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="21:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="21:1">{<block_content pos:start="5:5" pos:end="20:13">
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:12">s</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:28"><decl pos:start="6:5" pos:end="6:15"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">num</name> <init pos:start="6:13" pos:end="6:15">= <expr pos:start="6:15" pos:end="6:15"><literal type="number" pos:start="6:15" pos:end="6:15">0</literal></expr></init></decl>, <decl pos:start="6:18" pos:end="6:22"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:18" pos:end="6:22">index</name></decl>, <decl pos:start="6:25" pos:end="6:27"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:25" pos:end="6:27">max</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:20"><expr pos:start="7:5" pos:end="7:19"><call pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:11">getline</name><argument_list pos:start="7:12" pos:end="7:19">(<argument pos:start="7:13" pos:end="7:15"><expr pos:start="7:13" pos:end="7:15"><name pos:start="7:13" pos:end="7:15">cin</name></expr></argument>, <argument pos:start="7:18" pos:end="7:18"><expr pos:start="7:18" pos:end="7:18"><name pos:start="7:18" pos:end="7:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="8:5" pos:end="18:5">for <control pos:start="8:9" pos:end="8:39">(<init pos:start="8:10" pos:end="8:19"><decl pos:start="8:10" pos:end="8:18"><type pos:start="8:10" pos:end="8:12"><name pos:start="8:10" pos:end="8:12">int</name></type> <name pos:start="8:14" pos:end="8:14">i</name> <init pos:start="8:16" pos:end="8:18">= <expr pos:start="8:18" pos:end="8:18"><literal type="number" pos:start="8:18" pos:end="8:18">0</literal></expr></init></decl>;</init> <condition pos:start="8:21" pos:end="8:34"><expr pos:start="8:21" pos:end="8:33"><name pos:start="8:21" pos:end="8:21">i</name> <operator pos:start="8:23" pos:end="8:24">&lt;=</operator> <call pos:start="8:26" pos:end="8:33"><name pos:start="8:26" pos:end="8:31"><name pos:start="8:26" pos:end="8:26">s</name><operator pos:start="8:27" pos:end="8:27">.</operator><name pos:start="8:28" pos:end="8:31">size</name></name><argument_list pos:start="8:32" pos:end="8:33">()</argument_list></call></expr>;</condition> <incr pos:start="8:36" pos:end="8:38"><expr pos:start="8:36" pos:end="8:38"><name pos:start="8:36" pos:end="8:36">i</name><operator pos:start="8:37" pos:end="8:38">++</operator></expr></incr>)</control> <block pos:start="8:41" pos:end="18:5">{<block_content pos:start="9:9" pos:end="17:9">
        <expr_stmt pos:start="9:9" pos:end="9:14"><expr pos:start="9:9" pos:end="9:13"><name pos:start="9:9" pos:end="9:11">num</name><operator pos:start="9:12" pos:end="9:13">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:18"><expr pos:start="10:9" pos:end="10:17"><name pos:start="10:9" pos:end="10:11">max</name> <operator pos:start="10:13" pos:end="10:13">=</operator> <name pos:start="10:15" pos:end="10:17">num</name></expr>;</expr_stmt>
        <if_stmt pos:start="11:9" pos:end="14:9"><if pos:start="11:9" pos:end="14:9">if <condition pos:start="11:12" pos:end="11:24">(<expr pos:start="11:13" pos:end="11:23"><name pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:13">s</name><index pos:start="11:14" pos:end="11:16">[<expr pos:start="11:15" pos:end="11:15"><name pos:start="11:15" pos:end="11:15">i</name></expr>]</index></name> <operator pos:start="11:18" pos:end="11:19">==</operator> <literal type="char" pos:start="11:21" pos:end="11:23">' '</literal></expr>)</condition> <block pos:start="11:26" pos:end="14:9">{<block_content pos:start="12:13" pos:end="13:29">
            <expr_stmt pos:start="12:13" pos:end="12:20"><expr pos:start="12:13" pos:end="12:19"><name pos:start="12:13" pos:end="12:15">num</name> <operator pos:start="12:17" pos:end="12:17">=</operator> <literal type="number" pos:start="12:19" pos:end="12:19">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:29"><expr pos:start="13:13" pos:end="13:28"><name pos:start="13:13" pos:end="13:17">index</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:21">s</name><index pos:start="13:22" pos:end="13:24">[<expr pos:start="13:23" pos:end="13:23"><name pos:start="13:23" pos:end="13:23">i</name></expr>]</index></name> <operator pos:start="13:26" pos:end="13:26">+</operator> <literal type="number" pos:start="13:28" pos:end="13:28">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="15:9" pos:end="17:9"><if pos:start="15:9" pos:end="17:9">if <condition pos:start="15:12" pos:end="15:22">(<expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:15">num</name> <operator pos:start="15:17" pos:end="15:17">&gt;</operator> <name pos:start="15:19" pos:end="15:21">max</name></expr>)</condition> <block pos:start="15:24" pos:end="17:9">{<block_content pos:start="16:13" pos:end="16:24">
            <expr_stmt pos:start="16:13" pos:end="16:24"><expr pos:start="16:13" pos:end="16:23"><name pos:start="16:13" pos:end="16:16">cout</name> <operator pos:start="16:18" pos:end="16:19">&lt;&lt;</operator> <name pos:start="16:21" pos:end="16:23">max</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt> 
    </block_content>}</block></for>

    <return pos:start="20:5" pos:end="20:13">return <expr pos:start="20:12" pos:end="20:12"><literal type="number" pos:start="20:12" pos:end="20:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
