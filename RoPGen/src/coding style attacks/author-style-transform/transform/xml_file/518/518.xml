<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/518/518.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="60:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="60:1">{<block_content pos:start="4:5" pos:end="59:14">
    <expr_stmt pos:start="4:5" pos:end="4:40"><expr pos:start="4:5" pos:end="4:39"><call pos:start="4:5" pos:end="4:39"><name pos:start="4:5" pos:end="4:11">freopen</name><argument_list pos:start="4:12" pos:end="4:39">(<argument pos:start="4:13" pos:end="4:28"><expr pos:start="4:13" pos:end="4:28"><literal type="string" pos:start="4:13" pos:end="4:28">"information.in"</literal></expr></argument>,<argument pos:start="4:30" pos:end="4:32"><expr pos:start="4:30" pos:end="4:32"><literal type="string" pos:start="4:30" pos:end="4:32">"r"</literal></expr></argument>,<argument pos:start="4:34" pos:end="4:38"><expr pos:start="4:34" pos:end="4:38"><name pos:start="4:34" pos:end="4:38">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:42"><expr pos:start="5:5" pos:end="5:41"><call pos:start="5:5" pos:end="5:41"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:41">(<argument pos:start="5:13" pos:end="5:29"><expr pos:start="5:13" pos:end="5:29"><literal type="string" pos:start="5:13" pos:end="5:29">"information.out"</literal></expr></argument>,<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><literal type="string" pos:start="5:31" pos:end="5:33">"w"</literal></expr></argument>,<argument pos:start="5:35" pos:end="5:40"><expr pos:start="5:35" pos:end="5:40"><name pos:start="5:35" pos:end="5:40">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:122"><decl pos:start="6:5" pos:end="6:121"><type pos:start="6:5" pos:end="6:8"><name pos:start="6:5" pos:end="6:8">char</name></type> <name pos:start="6:10" pos:end="6:15"><name pos:start="6:10" pos:end="6:11">sz</name><index pos:start="6:12" pos:end="6:15">[<expr pos:start="6:13" pos:end="6:14"><literal type="number" pos:start="6:13" pos:end="6:14">26</literal></expr>]</index></name><init pos:start="6:16" pos:end="6:121">=<expr pos:start="6:17" pos:end="6:121"><block pos:start="6:17" pos:end="6:121">{<expr pos:start="6:18" pos:end="6:20"><literal type="char" pos:start="6:18" pos:end="6:20">'A'</literal></expr>,<expr pos:start="6:22" pos:end="6:24"><literal type="char" pos:start="6:22" pos:end="6:24">'B'</literal></expr>,<expr pos:start="6:26" pos:end="6:28"><literal type="char" pos:start="6:26" pos:end="6:28">'C'</literal></expr>,<expr pos:start="6:30" pos:end="6:32"><literal type="char" pos:start="6:30" pos:end="6:32">'D'</literal></expr>,<expr pos:start="6:34" pos:end="6:36"><literal type="char" pos:start="6:34" pos:end="6:36">'E'</literal></expr>,<expr pos:start="6:38" pos:end="6:40"><literal type="char" pos:start="6:38" pos:end="6:40">'F'</literal></expr>,<expr pos:start="6:42" pos:end="6:44"><literal type="char" pos:start="6:42" pos:end="6:44">'G'</literal></expr>,<expr pos:start="6:46" pos:end="6:48"><literal type="char" pos:start="6:46" pos:end="6:48">'H'</literal></expr>,<expr pos:start="6:50" pos:end="6:52"><literal type="char" pos:start="6:50" pos:end="6:52">'I'</literal></expr>,<expr pos:start="6:54" pos:end="6:56"><literal type="char" pos:start="6:54" pos:end="6:56">'J'</literal></expr>,<expr pos:start="6:58" pos:end="6:60"><literal type="char" pos:start="6:58" pos:end="6:60">'K'</literal></expr>,<expr pos:start="6:62" pos:end="6:64"><literal type="char" pos:start="6:62" pos:end="6:64">'L'</literal></expr>,<expr pos:start="6:66" pos:end="6:68"><literal type="char" pos:start="6:66" pos:end="6:68">'M'</literal></expr>,<expr pos:start="6:70" pos:end="6:72"><literal type="char" pos:start="6:70" pos:end="6:72">'N'</literal></expr>,<expr pos:start="6:74" pos:end="6:76"><literal type="char" pos:start="6:74" pos:end="6:76">'O'</literal></expr>,<expr pos:start="6:78" pos:end="6:80"><literal type="char" pos:start="6:78" pos:end="6:80">'P'</literal></expr>,<expr pos:start="6:82" pos:end="6:84"><literal type="char" pos:start="6:82" pos:end="6:84">'Q'</literal></expr>,<expr pos:start="6:86" pos:end="6:88"><literal type="char" pos:start="6:86" pos:end="6:88">'R'</literal></expr>,<expr pos:start="6:90" pos:end="6:92"><literal type="char" pos:start="6:90" pos:end="6:92">'S'</literal></expr>,<expr pos:start="6:94" pos:end="6:96"><literal type="char" pos:start="6:94" pos:end="6:96">'T'</literal></expr>,<expr pos:start="6:98" pos:end="6:100"><literal type="char" pos:start="6:98" pos:end="6:100">'U'</literal></expr>,<expr pos:start="6:102" pos:end="6:104"><literal type="char" pos:start="6:102" pos:end="6:104">'V'</literal></expr>,<expr pos:start="6:106" pos:end="6:108"><literal type="char" pos:start="6:106" pos:end="6:108">'W'</literal></expr>,<expr pos:start="6:110" pos:end="6:112"><literal type="char" pos:start="6:110" pos:end="6:112">'X'</literal></expr>,<expr pos:start="6:114" pos:end="6:116"><literal type="char" pos:start="6:114" pos:end="6:116">'Y'</literal></expr>,<expr pos:start="6:118" pos:end="6:120"><literal type="char" pos:start="6:118" pos:end="6:120">'Z'</literal></expr>}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">string</name></type> <name pos:start="7:12" pos:end="7:12">s</name></decl>,<decl pos:start="7:14" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:14" pos:end="7:16">ASD</name><init pos:start="7:17" pos:end="7:19">=<expr pos:start="7:18" pos:end="7:19"><literal type="string" pos:start="7:18" pos:end="7:19">""</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:11"><expr pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:10">s</name></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:9">stack</name><argument_list type="generic" pos:start="9:10" pos:end="9:14">&lt;<argument pos:start="9:11" pos:end="9:13"><expr pos:start="9:11" pos:end="9:13"><name pos:start="9:11" pos:end="9:13">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="9:15" pos:end="9:15">a</name></decl>;</decl_stmt>
    <if_stmt pos:start="10:5" pos:end="13:5"><if pos:start="10:5" pos:end="13:5">if<condition pos:start="10:7" pos:end="10:21">(<expr pos:start="10:8" pos:end="10:20"><call pos:start="10:8" pos:end="10:15"><name pos:start="10:8" pos:end="10:13"><name pos:start="10:8" pos:end="10:8">s</name><operator pos:start="10:9" pos:end="10:9">.</operator><name pos:start="10:10" pos:end="10:13">size</name></name><argument_list pos:start="10:14" pos:end="10:15">()</argument_list></call><operator pos:start="10:16" pos:end="10:16">%</operator><literal type="number" pos:start="10:17" pos:end="10:17">8</literal><operator pos:start="10:18" pos:end="10:19">!=</operator><literal type="number" pos:start="10:20" pos:end="10:20">0</literal></expr>)</condition><block pos:start="10:22" pos:end="13:5">{<block_content pos:start="11:9" pos:end="12:17">
        <expr_stmt pos:start="11:9" pos:end="11:28"><expr pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:12">cout</name><operator pos:start="11:13" pos:end="11:14">&lt;&lt;</operator><literal type="string" pos:start="11:15" pos:end="11:21">"Error"</literal><operator pos:start="11:22" pos:end="11:23">&lt;&lt;</operator><name pos:start="11:24" pos:end="11:27">endl</name></expr>;</expr_stmt>
        <return pos:start="12:9" pos:end="12:17">return <expr pos:start="12:16" pos:end="12:16"><literal type="number" pos:start="12:16" pos:end="12:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="14:5" pos:end="54:5">for<control pos:start="14:8" pos:end="14:32">(<init pos:start="14:9" pos:end="14:16"><decl pos:start="14:9" pos:end="14:15"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:13">i</name><init pos:start="14:14" pos:end="14:15">=<expr pos:start="14:15" pos:end="14:15"><literal type="number" pos:start="14:15" pos:end="14:15">0</literal></expr></init></decl>;</init><condition pos:start="14:17" pos:end="14:27"><expr pos:start="14:17" pos:end="14:26"><name pos:start="14:17" pos:end="14:17">i</name><operator pos:start="14:18" pos:end="14:18">&lt;</operator><call pos:start="14:19" pos:end="14:26"><name pos:start="14:19" pos:end="14:24"><name pos:start="14:19" pos:end="14:19">s</name><operator pos:start="14:20" pos:end="14:20">.</operator><name pos:start="14:21" pos:end="14:24">size</name></name><argument_list pos:start="14:25" pos:end="14:26">()</argument_list></call></expr>;</condition><incr pos:start="14:28" pos:end="14:31"><expr pos:start="14:28" pos:end="14:31"><name pos:start="14:28" pos:end="14:28">i</name><operator pos:start="14:29" pos:end="14:30">+=</operator><literal type="number" pos:start="14:31" pos:end="14:31">8</literal></expr></incr>)</control><block pos:start="14:33" pos:end="54:5">{<block_content pos:start="15:9" pos:end="53:9">
        <decl_stmt pos:start="15:9" pos:end="15:20"><decl pos:start="15:9" pos:end="15:19"><type pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:14">string</name></type> <name pos:start="15:16" pos:end="15:16">S</name><init pos:start="15:17" pos:end="15:19">=<expr pos:start="15:18" pos:end="15:19"><literal type="string" pos:start="15:18" pos:end="15:19">""</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="16:9" pos:end="16:14"><decl pos:start="16:9" pos:end="16:13"><type pos:start="16:9" pos:end="16:11"><name pos:start="16:9" pos:end="16:11">int</name></type> <name pos:start="16:13" pos:end="16:13">j</name></decl>;</decl_stmt>
        <for pos:start="17:9" pos:end="19:9">for<control pos:start="17:12" pos:end="17:38">(<init pos:start="17:13" pos:end="17:16"><expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:13">j</name><operator pos:start="17:14" pos:end="17:14">=</operator><name pos:start="17:15" pos:end="17:15">i</name></expr>;</init><condition pos:start="17:17" pos:end="17:34"><expr pos:start="17:17" pos:end="17:33"><name pos:start="17:17" pos:end="17:17">j</name><operator pos:start="17:18" pos:end="17:19">&lt;=</operator><name pos:start="17:20" pos:end="17:20">i</name><operator pos:start="17:21" pos:end="17:21">+</operator><literal type="number" pos:start="17:22" pos:end="17:22">2</literal><operator pos:start="17:23" pos:end="17:24">&amp;&amp;</operator><name pos:start="17:25" pos:end="17:28"><name pos:start="17:25" pos:end="17:25">S</name><index pos:start="17:26" pos:end="17:28">[<expr pos:start="17:27" pos:end="17:27"><literal type="number" pos:start="17:27" pos:end="17:27">0</literal></expr>]</index></name><operator pos:start="17:29" pos:end="17:30">!=</operator><literal type="char" pos:start="17:31" pos:end="17:33">'0'</literal></expr>;</condition><incr pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:35">j</name><operator pos:start="17:36" pos:end="17:37">++</operator></expr></incr>)</control><block pos:start="17:39" pos:end="19:9">{<block_content pos:start="18:13" pos:end="18:20">
            <expr_stmt pos:start="18:13" pos:end="18:20"><expr pos:start="18:13" pos:end="18:19"><name pos:start="18:13" pos:end="18:13">S</name><operator pos:start="18:14" pos:end="18:15">+=</operator><name pos:start="18:16" pos:end="18:19"><name pos:start="18:16" pos:end="18:16">s</name><index pos:start="18:17" pos:end="18:19">[<expr pos:start="18:18" pos:end="18:18"><name pos:start="18:18" pos:end="18:18">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <if_stmt pos:start="20:9" pos:end="53:9"><if pos:start="20:9" pos:end="32:9">if<condition pos:start="20:11" pos:end="20:20">(<expr pos:start="20:12" pos:end="20:19"><name pos:start="20:12" pos:end="20:12">S</name><operator pos:start="20:13" pos:end="20:14">==</operator><literal type="string" pos:start="20:15" pos:end="20:19">"101"</literal></expr>)</condition><block pos:start="20:21" pos:end="32:9">{<block_content pos:start="21:13" pos:end="31:13">
            <decl_stmt pos:start="21:13" pos:end="21:22"><decl pos:start="21:13" pos:end="21:21"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:19">ans</name><init pos:start="21:20" pos:end="21:21">=<expr pos:start="21:21" pos:end="21:21"><literal type="number" pos:start="21:21" pos:end="21:21">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="22:13" pos:end="24:13">for<control pos:start="22:16" pos:end="22:45">(<init pos:start="22:17" pos:end="22:30"><decl pos:start="22:17" pos:end="22:23"><type pos:start="22:17" pos:end="22:19"><name pos:start="22:17" pos:end="22:19">int</name></type> <name pos:start="22:21" pos:end="22:21">o</name><init pos:start="22:22" pos:end="22:23">=<expr pos:start="22:23" pos:end="22:23"><literal type="number" pos:start="22:23" pos:end="22:23">0</literal></expr></init></decl>,<decl pos:start="22:25" pos:end="22:29"><type ref="prev" pos:start="22:17" pos:end="22:19"/><name pos:start="22:25" pos:end="22:25">j</name><init pos:start="22:26" pos:end="22:29">=<expr pos:start="22:27" pos:end="22:29"><name pos:start="22:27" pos:end="22:27">i</name><operator pos:start="22:28" pos:end="22:28">+</operator><literal type="number" pos:start="22:29" pos:end="22:29">7</literal></expr></init></decl>;</init><condition pos:start="22:31" pos:end="22:37"><expr pos:start="22:31" pos:end="22:36"><name pos:start="22:31" pos:end="22:31">j</name><operator pos:start="22:32" pos:end="22:33">&gt;=</operator><name pos:start="22:34" pos:end="22:34">i</name><operator pos:start="22:35" pos:end="22:35">+</operator><literal type="number" pos:start="22:36" pos:end="22:36">3</literal></expr>;</condition><incr pos:start="22:38" pos:end="22:44"><expr pos:start="22:38" pos:end="22:40"><name pos:start="22:38" pos:end="22:38">j</name><operator pos:start="22:39" pos:end="22:40">--</operator></expr><operator pos:start="22:41" pos:end="22:41">,</operator><expr pos:start="22:42" pos:end="22:44"><name pos:start="22:42" pos:end="22:42">o</name><operator pos:start="22:43" pos:end="22:44">++</operator></expr></incr>)</control><block pos:start="22:46" pos:end="24:13">{<block_content pos:start="23:17" pos:end="23:44">
                <expr_stmt pos:start="23:17" pos:end="23:44"><expr pos:start="23:17" pos:end="23:43"><name pos:start="23:17" pos:end="23:19">ans</name><operator pos:start="23:20" pos:end="23:21">+=</operator><call pos:start="23:22" pos:end="23:29"><name pos:start="23:22" pos:end="23:24">pow</name><argument_list pos:start="23:25" pos:end="23:29">(<argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><literal type="number" pos:start="23:26" pos:end="23:26">2</literal></expr></argument>,<argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">o</name></expr></argument>)</argument_list></call><operator pos:start="23:30" pos:end="23:30">*</operator><call pos:start="23:31" pos:end="23:43"><name pos:start="23:31" pos:end="23:33">int</name><argument_list pos:start="23:34" pos:end="23:43">(<argument pos:start="23:35" pos:end="23:42"><expr pos:start="23:35" pos:end="23:42"><name pos:start="23:35" pos:end="23:38"><name pos:start="23:35" pos:end="23:35">s</name><index pos:start="23:36" pos:end="23:38">[<expr pos:start="23:37" pos:end="23:37"><name pos:start="23:37" pos:end="23:37">j</name></expr>]</index></name><operator pos:start="23:39" pos:end="23:39">-</operator><literal type="char" pos:start="23:40" pos:end="23:42">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="25:13" pos:end="31:13"><if pos:start="25:13" pos:end="28:13">if<condition pos:start="25:15" pos:end="25:22">(<expr pos:start="25:16" pos:end="25:21"><name pos:start="25:16" pos:end="25:18">ans</name><operator pos:start="25:19" pos:end="25:19">&gt;</operator><literal type="number" pos:start="25:20" pos:end="25:21">25</literal></expr>)</condition><block pos:start="25:23" pos:end="28:13">{<block_content pos:start="26:17" pos:end="27:25">
                <expr_stmt pos:start="26:17" pos:end="26:36"><expr pos:start="26:17" pos:end="26:35"><name pos:start="26:17" pos:end="26:20">cout</name><operator pos:start="26:21" pos:end="26:22">&lt;&lt;</operator><literal type="string" pos:start="26:23" pos:end="26:29">"Error"</literal><operator pos:start="26:30" pos:end="26:31">&lt;&lt;</operator><name pos:start="26:32" pos:end="26:35">endl</name></expr>;</expr_stmt>
                <return pos:start="27:17" pos:end="27:25">return <expr pos:start="27:24" pos:end="27:24"><literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>;</return>
            </block_content>}</block></if>
            <else pos:start="29:13" pos:end="31:13">else<block pos:start="29:17" pos:end="31:13">{<block_content pos:start="30:17" pos:end="30:29">
                <expr_stmt pos:start="30:17" pos:end="30:29"><expr pos:start="30:17" pos:end="30:28"><name pos:start="30:17" pos:end="30:19">ASD</name><operator pos:start="30:20" pos:end="30:21">+=</operator><name pos:start="30:22" pos:end="30:28"><name pos:start="30:22" pos:end="30:23">sz</name><index pos:start="30:24" pos:end="30:28">[<expr pos:start="30:25" pos:end="30:27"><name pos:start="30:25" pos:end="30:27">ans</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="33:9" pos:end="35:9">else if<condition pos:start="33:16" pos:end="33:25">(<expr pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:17">S</name><operator pos:start="33:18" pos:end="33:19">==</operator><literal type="string" pos:start="33:20" pos:end="33:24">"111"</literal></expr>)</condition><block pos:start="33:26" pos:end="35:9">{<block_content pos:start="34:13" pos:end="34:21">
            <expr_stmt pos:start="34:13" pos:end="34:21"><expr pos:start="34:13" pos:end="34:20"><name pos:start="34:13" pos:end="34:15">ASD</name><operator pos:start="34:16" pos:end="34:17">+=</operator><literal type="char" pos:start="34:18" pos:end="34:20">' '</literal></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="36:9" pos:end="49:9">else if<condition pos:start="36:16" pos:end="36:26">(<expr pos:start="36:17" pos:end="36:25"><name pos:start="36:17" pos:end="36:20"><name pos:start="36:17" pos:end="36:17">S</name><index pos:start="36:18" pos:end="36:20">[<expr pos:start="36:19" pos:end="36:19"><literal type="number" pos:start="36:19" pos:end="36:19">0</literal></expr>]</index></name><operator pos:start="36:21" pos:end="36:22">==</operator><literal type="char" pos:start="36:23" pos:end="36:25">'0'</literal></expr>)</condition><block pos:start="36:27" pos:end="49:9">{<block_content pos:start="37:13" pos:end="48:13">
            <decl_stmt pos:start="37:13" pos:end="37:22"><decl pos:start="37:13" pos:end="37:21"><type pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">int</name></type> <name pos:start="37:17" pos:end="37:19">ans</name><init pos:start="37:20" pos:end="37:21">=<expr pos:start="37:21" pos:end="37:21"><literal type="number" pos:start="37:21" pos:end="37:21">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="38:13" pos:end="40:13">for<control pos:start="38:16" pos:end="38:45">(<init pos:start="38:17" pos:end="38:30"><decl pos:start="38:17" pos:end="38:23"><type pos:start="38:17" pos:end="38:19"><name pos:start="38:17" pos:end="38:19">int</name></type> <name pos:start="38:21" pos:end="38:21">o</name><init pos:start="38:22" pos:end="38:23">=<expr pos:start="38:23" pos:end="38:23"><literal type="number" pos:start="38:23" pos:end="38:23">0</literal></expr></init></decl>,<decl pos:start="38:25" pos:end="38:29"><type ref="prev" pos:start="38:17" pos:end="38:19"/><name pos:start="38:25" pos:end="38:25">j</name><init pos:start="38:26" pos:end="38:29">=<expr pos:start="38:27" pos:end="38:29"><name pos:start="38:27" pos:end="38:27">i</name><operator pos:start="38:28" pos:end="38:28">+</operator><literal type="number" pos:start="38:29" pos:end="38:29">7</literal></expr></init></decl>;</init><condition pos:start="38:31" pos:end="38:37"><expr pos:start="38:31" pos:end="38:36"><name pos:start="38:31" pos:end="38:31">j</name><operator pos:start="38:32" pos:end="38:33">&gt;=</operator><name pos:start="38:34" pos:end="38:34">i</name><operator pos:start="38:35" pos:end="38:35">+</operator><literal type="number" pos:start="38:36" pos:end="38:36">1</literal></expr>;</condition><incr pos:start="38:38" pos:end="38:44"><expr pos:start="38:38" pos:end="38:40"><name pos:start="38:38" pos:end="38:38">j</name><operator pos:start="38:39" pos:end="38:40">--</operator></expr><operator pos:start="38:41" pos:end="38:41">,</operator><expr pos:start="38:42" pos:end="38:44"><name pos:start="38:42" pos:end="38:42">o</name><operator pos:start="38:43" pos:end="38:44">++</operator></expr></incr>)</control><block pos:start="38:46" pos:end="40:13">{<block_content pos:start="39:17" pos:end="39:44">
                <expr_stmt pos:start="39:17" pos:end="39:44"><expr pos:start="39:17" pos:end="39:43"><name pos:start="39:17" pos:end="39:19">ans</name><operator pos:start="39:20" pos:end="39:21">+=</operator><call pos:start="39:22" pos:end="39:29"><name pos:start="39:22" pos:end="39:24">pow</name><argument_list pos:start="39:25" pos:end="39:29">(<argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">2</literal></expr></argument>,<argument pos:start="39:28" pos:end="39:28"><expr pos:start="39:28" pos:end="39:28"><name pos:start="39:28" pos:end="39:28">o</name></expr></argument>)</argument_list></call><operator pos:start="39:30" pos:end="39:30">*</operator><call pos:start="39:31" pos:end="39:43"><name pos:start="39:31" pos:end="39:33">int</name><argument_list pos:start="39:34" pos:end="39:43">(<argument pos:start="39:35" pos:end="39:42"><expr pos:start="39:35" pos:end="39:42"><name pos:start="39:35" pos:end="39:38"><name pos:start="39:35" pos:end="39:35">s</name><index pos:start="39:36" pos:end="39:38">[<expr pos:start="39:37" pos:end="39:37"><name pos:start="39:37" pos:end="39:37">i</name></expr>]</index></name><operator pos:start="39:39" pos:end="39:39">-</operator><literal type="char" pos:start="39:40" pos:end="39:42">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="41:13" pos:end="48:13"><if pos:start="41:13" pos:end="45:13">if<condition pos:start="41:15" pos:end="41:24">(<expr pos:start="41:16" pos:end="41:23"><call pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:21"><name pos:start="41:16" pos:end="41:16">a</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:21">size</name></name><argument_list pos:start="41:22" pos:end="41:23">()</argument_list></call></expr>)</condition><block pos:start="41:25" pos:end="45:13">{<block_content pos:start="42:17" pos:end="44:24">
                <decl_stmt pos:start="42:17" pos:end="42:38"><decl pos:start="42:17" pos:end="42:37"><type pos:start="42:17" pos:end="42:19"><name pos:start="42:17" pos:end="42:19">int</name></type> <name pos:start="42:21" pos:end="42:21">x</name><init pos:start="42:22" pos:end="42:37">=<expr pos:start="42:23" pos:end="42:37"><operator pos:start="42:23" pos:end="42:23">(</operator><call pos:start="42:24" pos:end="42:30"><name pos:start="42:24" pos:end="42:28"><name pos:start="42:24" pos:end="42:24">a</name><operator pos:start="42:25" pos:end="42:25">.</operator><name pos:start="42:26" pos:end="42:28">top</name></name><argument_list pos:start="42:29" pos:end="42:30">()</argument_list></call><operator pos:start="42:31" pos:end="42:31">+</operator><name pos:start="42:32" pos:end="42:34">ans</name><operator pos:start="42:35" pos:end="42:35">)</operator><operator pos:start="42:36" pos:end="42:36">/</operator><literal type="number" pos:start="42:37" pos:end="42:37">2</literal></expr></init></decl>;</decl_stmt> 
                <expr_stmt pos:start="43:17" pos:end="43:33"><expr pos:start="43:17" pos:end="43:32"><name pos:start="43:17" pos:end="43:19">ASD</name><operator pos:start="43:20" pos:end="43:21">+=</operator><call pos:start="43:22" pos:end="43:32"><name pos:start="43:22" pos:end="43:25">char</name><argument_list pos:start="43:26" pos:end="43:32">(<argument pos:start="43:27" pos:end="43:31"><expr pos:start="43:27" pos:end="43:31"><name pos:start="43:27" pos:end="43:27">x</name><operator pos:start="43:28" pos:end="43:28">+</operator><literal type="char" pos:start="43:29" pos:end="43:31">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="44:17" pos:end="44:24"><expr pos:start="44:17" pos:end="44:23"><call pos:start="44:17" pos:end="44:23"><name pos:start="44:17" pos:end="44:21"><name pos:start="44:17" pos:end="44:17">a</name><operator pos:start="44:18" pos:end="44:18">.</operator><name pos:start="44:19" pos:end="44:21">pop</name></name><argument_list pos:start="44:22" pos:end="44:23">()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="46:13" pos:end="48:13">else<block pos:start="46:17" pos:end="48:13">{<block_content pos:start="47:17" pos:end="47:28">
                <expr_stmt pos:start="47:17" pos:end="47:28"><expr pos:start="47:17" pos:end="47:27"><call pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:17">a</name><operator pos:start="47:18" pos:end="47:18">.</operator><name pos:start="47:19" pos:end="47:22">push</name></name><argument_list pos:start="47:23" pos:end="47:27">(<argument pos:start="47:24" pos:end="47:26"><expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:26">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if>
        <else pos:start="50:9" pos:end="53:9">else<block pos:start="50:13" pos:end="53:9">{<block_content pos:start="51:13" pos:end="52:21">
            <expr_stmt pos:start="51:13" pos:end="51:32"><expr pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:16">cout</name><operator pos:start="51:17" pos:end="51:18">&lt;&lt;</operator><literal type="string" pos:start="51:19" pos:end="51:25">"Error"</literal><operator pos:start="51:26" pos:end="51:27">&lt;&lt;</operator><name pos:start="51:28" pos:end="51:31">endl</name></expr>;</expr_stmt>
            <return pos:start="52:13" pos:end="52:21">return <expr pos:start="52:20" pos:end="52:20"><literal type="number" pos:start="52:20" pos:end="52:20">0</literal></expr>;</return>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="55:5" pos:end="58:5"><if pos:start="55:5" pos:end="58:5">if<condition pos:start="55:7" pos:end="55:16">(<expr pos:start="55:8" pos:end="55:15"><call pos:start="55:8" pos:end="55:15"><name pos:start="55:8" pos:end="55:13"><name pos:start="55:8" pos:end="55:8">a</name><operator pos:start="55:9" pos:end="55:9">.</operator><name pos:start="55:10" pos:end="55:13">size</name></name><argument_list pos:start="55:14" pos:end="55:15">()</argument_list></call></expr>)</condition><block pos:start="55:17" pos:end="58:5">{<block_content pos:start="56:9" pos:end="57:17">
        <expr_stmt pos:start="56:9" pos:end="56:28"><expr pos:start="56:9" pos:end="56:27"><name pos:start="56:9" pos:end="56:12">cout</name><operator pos:start="56:13" pos:end="56:14">&lt;&lt;</operator><literal type="string" pos:start="56:15" pos:end="56:21">"Error"</literal><operator pos:start="56:22" pos:end="56:23">&lt;&lt;</operator><name pos:start="56:24" pos:end="56:27">endl</name></expr>;</expr_stmt>
        <return pos:start="57:9" pos:end="57:17">return <expr pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="59:5" pos:end="59:14"><expr pos:start="59:5" pos:end="59:13"><name pos:start="59:5" pos:end="59:8">cout</name><operator pos:start="59:9" pos:end="59:10">&lt;&lt;</operator><name pos:start="59:11" pos:end="59:13">ASD</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
