<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/631/631.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:10"><decl pos:start="4:1" pos:end="4:7"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:7">ans</name></decl>,<decl pos:start="4:9" pos:end="4:9"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:9" pos:end="4:9">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:39"><decl pos:start="5:1" pos:end="5:12"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:12"><name pos:start="5:6" pos:end="5:8">row</name><index pos:start="5:9" pos:end="5:12">[<expr pos:start="5:10" pos:end="5:11"><literal type="number" pos:start="5:10" pos:end="5:11">10</literal></expr>]</index></name></decl>,<decl pos:start="5:14" pos:end="5:19"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:14" pos:end="5:19"><name pos:start="5:14" pos:end="5:15">x1</name><index pos:start="5:16" pos:end="5:19">[<expr pos:start="5:17" pos:end="5:18"><literal type="number" pos:start="5:17" pos:end="5:18">20</literal></expr>]</index></name></decl>,<decl pos:start="5:21" pos:end="5:26"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:21" pos:end="5:26"><name pos:start="5:21" pos:end="5:22">x2</name><index pos:start="5:23" pos:end="5:26">[<expr pos:start="5:24" pos:end="5:25"><literal type="number" pos:start="5:24" pos:end="5:25">20</literal></expr>]</index></name></decl>,<decl pos:start="5:28" pos:end="5:38"><type ref="prev" pos:start="5:1" pos:end="5:4"/><name pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:30">vis</name><index pos:start="5:31" pos:end="5:34">[<expr pos:start="5:32" pos:end="5:33"><literal type="number" pos:start="5:32" pos:end="5:33">20</literal></expr>]</index><index pos:start="5:35" pos:end="5:38">[<expr pos:start="5:36" pos:end="5:37"><literal type="number" pos:start="5:36" pos:end="5:37">20</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="8:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">bool</name></type> <name pos:start="6:6" pos:end="6:10">check</name><parameter_list pos:start="6:11" pos:end="6:23">(<parameter pos:start="6:12" pos:end="6:16"><decl pos:start="6:12" pos:end="6:16"><type pos:start="6:12" pos:end="6:16"><name pos:start="6:12" pos:end="6:14">int</name></type> <name pos:start="6:16" pos:end="6:16">i</name></decl></parameter>,<parameter pos:start="6:18" pos:end="6:22"><decl pos:start="6:18" pos:end="6:22"><type pos:start="6:18" pos:end="6:22"><name pos:start="6:18" pos:end="6:20">int</name></type> <name pos:start="6:22" pos:end="6:22">c</name></decl></parameter>)</parameter_list><block pos:start="6:24" pos:end="8:1">{<block_content pos:start="7:5" pos:end="7:65">
    <return pos:start="7:5" pos:end="7:65">return <expr pos:start="7:12" pos:end="7:64"><operator pos:start="7:12" pos:end="7:12">!</operator><name pos:start="7:13" pos:end="7:18"><name pos:start="7:13" pos:end="7:15">row</name><index pos:start="7:16" pos:end="7:18">[<expr pos:start="7:17" pos:end="7:17"><name pos:start="7:17" pos:end="7:17">i</name></expr>]</index></name> <operator pos:start="7:20" pos:end="7:21">&amp;&amp;</operator> <operator pos:start="7:23" pos:end="7:23">!</operator><name pos:start="7:24" pos:end="7:30"><name pos:start="7:24" pos:end="7:25">x1</name><index pos:start="7:26" pos:end="7:30">[<expr pos:start="7:27" pos:end="7:29"><name pos:start="7:27" pos:end="7:27">i</name><operator pos:start="7:28" pos:end="7:28">+</operator><name pos:start="7:29" pos:end="7:29">c</name></expr>]</index></name> <operator pos:start="7:32" pos:end="7:33">&amp;&amp;</operator> <operator pos:start="7:35" pos:end="7:35">!</operator><name pos:start="7:36" pos:end="7:44"><name pos:start="7:36" pos:end="7:37">x2</name><index pos:start="7:38" pos:end="7:44">[<expr pos:start="7:39" pos:end="7:43"><name pos:start="7:39" pos:end="7:39">i</name><operator pos:start="7:40" pos:end="7:40">-</operator><name pos:start="7:41" pos:end="7:41">c</name><operator pos:start="7:42" pos:end="7:42">+</operator><name pos:start="7:43" pos:end="7:43">n</name></expr>]</index></name> <operator pos:start="7:46" pos:end="7:47">&amp;&amp;</operator> <name pos:start="7:49" pos:end="7:57"><name pos:start="7:49" pos:end="7:51">vis</name><index pos:start="7:52" pos:end="7:54">[<expr pos:start="7:53" pos:end="7:53"><name pos:start="7:53" pos:end="7:53">i</name></expr>]</index><index pos:start="7:55" pos:end="7:57">[<expr pos:start="7:56" pos:end="7:56"><name pos:start="7:56" pos:end="7:56">c</name></expr>]</index></name><operator pos:start="7:58" pos:end="7:59">==</operator><literal type="boolean" pos:start="7:60" pos:end="7:64">false</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="9:1" pos:end="28:1"><type pos:start="9:1" pos:end="9:4"><name pos:start="9:1" pos:end="9:4">void</name></type> <name pos:start="9:6" pos:end="9:8">dfs</name><parameter_list pos:start="9:9" pos:end="9:24">(<parameter pos:start="9:10" pos:end="9:14"><decl pos:start="9:10" pos:end="9:14"><type pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:14">c</name></decl></parameter>,<parameter pos:start="9:16" pos:end="9:23"><decl pos:start="9:16" pos:end="9:23"><type pos:start="9:16" pos:end="9:23"><name pos:start="9:16" pos:end="9:18">int</name></type> <name pos:start="9:20" pos:end="9:23">time</name></decl></parameter>)</parameter_list><block pos:start="9:25" pos:end="28:1">{<block_content pos:start="10:5" pos:end="27:5">
    <if_stmt pos:start="10:5" pos:end="18:5"><if pos:start="10:5" pos:end="18:5">if<condition pos:start="10:7" pos:end="10:12">(<expr pos:start="10:8" pos:end="10:11"><name pos:start="10:8" pos:end="10:8">c</name><operator pos:start="10:9" pos:end="10:10">==</operator><name pos:start="10:11" pos:end="10:11">n</name></expr>)</condition><block pos:start="10:13" pos:end="18:5">{<block_content pos:start="11:9" pos:end="17:15">
        <if_stmt pos:start="11:9" pos:end="13:9"><if pos:start="11:9" pos:end="13:9">if<condition pos:start="11:11" pos:end="11:19">(<expr pos:start="11:12" pos:end="11:18"><name pos:start="11:12" pos:end="11:15">time</name><operator pos:start="11:16" pos:end="11:17">==</operator><literal type="number" pos:start="11:18" pos:end="11:18">1</literal></expr>)</condition><block pos:start="11:20" pos:end="13:9">{<block_content pos:start="12:13" pos:end="12:21">
            <expr_stmt pos:start="12:13" pos:end="12:21"><expr pos:start="12:13" pos:end="12:20"><call pos:start="12:13" pos:end="12:20"><name pos:start="12:13" pos:end="12:15">dfs</name><argument_list pos:start="12:16" pos:end="12:20">(<argument pos:start="12:17" pos:end="12:17"><expr pos:start="12:17" pos:end="12:17"><literal type="number" pos:start="12:17" pos:end="12:17">0</literal></expr></argument>,<argument pos:start="12:19" pos:end="12:19"><expr pos:start="12:19" pos:end="12:19"><literal type="number" pos:start="12:19" pos:end="12:19">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="14:9" pos:end="16:9"><if pos:start="14:9" pos:end="16:9">if<condition pos:start="14:11" pos:end="14:19">(<expr pos:start="14:12" pos:end="14:18"><name pos:start="14:12" pos:end="14:15">time</name><operator pos:start="14:16" pos:end="14:17">==</operator><literal type="number" pos:start="14:18" pos:end="14:18">2</literal></expr>)</condition><block pos:start="14:20" pos:end="16:9">{<block_content pos:start="15:13" pos:end="15:18">
            <expr_stmt pos:start="15:13" pos:end="15:18"><expr pos:start="15:13" pos:end="15:17"><name pos:start="15:13" pos:end="15:15">ans</name><operator pos:start="15:16" pos:end="15:17">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return pos:start="17:9" pos:end="17:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="19:5" pos:end="27:5">for<control pos:start="19:8" pos:end="19:26">(<init pos:start="19:9" pos:end="19:16"><decl pos:start="19:9" pos:end="19:15"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">i</name><init pos:start="19:14" pos:end="19:15">=<expr pos:start="19:15" pos:end="19:15"><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr></init></decl>;</init> <condition pos:start="19:18" pos:end="19:21"><expr pos:start="19:18" pos:end="19:20"><name pos:start="19:18" pos:end="19:18">i</name><operator pos:start="19:19" pos:end="19:19">&lt;</operator><name pos:start="19:20" pos:end="19:20">n</name></expr>;</condition> <incr pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:23">i</name><operator pos:start="19:24" pos:end="19:25">++</operator></expr></incr>)</control><block pos:start="19:27" pos:end="27:5">{<block_content pos:start="20:9" pos:end="26:9">
        <if_stmt pos:start="20:9" pos:end="26:9"><if pos:start="20:9" pos:end="26:9">if<condition pos:start="20:11" pos:end="20:22">(<expr pos:start="20:12" pos:end="20:21"><call pos:start="20:12" pos:end="20:21"><name pos:start="20:12" pos:end="20:16">check</name><argument_list pos:start="20:17" pos:end="20:21">(<argument pos:start="20:18" pos:end="20:18"><expr pos:start="20:18" pos:end="20:18"><name pos:start="20:18" pos:end="20:18">i</name></expr></argument>,<argument pos:start="20:20" pos:end="20:20"><expr pos:start="20:20" pos:end="20:20"><name pos:start="20:20" pos:end="20:20">c</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="20:23" pos:end="26:9">{<block_content pos:start="21:13" pos:end="25:43">
            <expr_stmt pos:start="21:13" pos:end="21:42"><expr pos:start="21:13" pos:end="21:41"><name pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:15">row</name><index pos:start="21:16" pos:end="21:18">[<expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">i</name></expr>]</index></name><operator pos:start="21:19" pos:end="21:19">=</operator><name pos:start="21:20" pos:end="21:26"><name pos:start="21:20" pos:end="21:21">x1</name><index pos:start="21:22" pos:end="21:26">[<expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:23">i</name><operator pos:start="21:24" pos:end="21:24">+</operator><name pos:start="21:25" pos:end="21:25">c</name></expr>]</index></name><operator pos:start="21:27" pos:end="21:27">=</operator><name pos:start="21:28" pos:end="21:36"><name pos:start="21:28" pos:end="21:29">x2</name><index pos:start="21:30" pos:end="21:36">[<expr pos:start="21:31" pos:end="21:35"><name pos:start="21:31" pos:end="21:31">i</name><operator pos:start="21:32" pos:end="21:32">-</operator><name pos:start="21:33" pos:end="21:33">c</name><operator pos:start="21:34" pos:end="21:34">+</operator><name pos:start="21:35" pos:end="21:35">n</name></expr>]</index></name><operator pos:start="21:37" pos:end="21:37">=</operator><literal type="boolean" pos:start="21:38" pos:end="21:41">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:27"><expr pos:start="22:13" pos:end="22:26"><name pos:start="22:13" pos:end="22:21"><name pos:start="22:13" pos:end="22:15">vis</name><index pos:start="22:16" pos:end="22:18">[<expr pos:start="22:17" pos:end="22:17"><name pos:start="22:17" pos:end="22:17">i</name></expr>]</index><index pos:start="22:19" pos:end="22:21">[<expr pos:start="22:20" pos:end="22:20"><name pos:start="22:20" pos:end="22:20">c</name></expr>]</index></name><operator pos:start="22:22" pos:end="22:22">=</operator><literal type="boolean" pos:start="22:23" pos:end="22:26">true</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:26"><expr pos:start="23:13" pos:end="23:25"><call pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:15">dfs</name><argument_list pos:start="23:16" pos:end="23:25">(<argument pos:start="23:17" pos:end="23:19"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:17">c</name><operator pos:start="23:18" pos:end="23:18">+</operator><literal type="number" pos:start="23:19" pos:end="23:19">1</literal></expr></argument>,<argument pos:start="23:21" pos:end="23:24"><expr pos:start="23:21" pos:end="23:24"><name pos:start="23:21" pos:end="23:24">time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="24:13" pos:end="24:28"><expr pos:start="24:13" pos:end="24:27"><name pos:start="24:13" pos:end="24:21"><name pos:start="24:13" pos:end="24:15">vis</name><index pos:start="24:16" pos:end="24:18">[<expr pos:start="24:17" pos:end="24:17"><name pos:start="24:17" pos:end="24:17">i</name></expr>]</index><index pos:start="24:19" pos:end="24:21">[<expr pos:start="24:20" pos:end="24:20"><name pos:start="24:20" pos:end="24:20">c</name></expr>]</index></name><operator pos:start="24:22" pos:end="24:22">=</operator><literal type="boolean" pos:start="24:23" pos:end="24:27">false</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="25:13" pos:end="25:43"><expr pos:start="25:13" pos:end="25:42"><name pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:15">row</name><index pos:start="25:16" pos:end="25:18">[<expr pos:start="25:17" pos:end="25:17"><name pos:start="25:17" pos:end="25:17">i</name></expr>]</index></name><operator pos:start="25:19" pos:end="25:19">=</operator><name pos:start="25:20" pos:end="25:26"><name pos:start="25:20" pos:end="25:21">x1</name><index pos:start="25:22" pos:end="25:26">[<expr pos:start="25:23" pos:end="25:25"><name pos:start="25:23" pos:end="25:23">i</name><operator pos:start="25:24" pos:end="25:24">+</operator><name pos:start="25:25" pos:end="25:25">c</name></expr>]</index></name><operator pos:start="25:27" pos:end="25:27">=</operator><name pos:start="25:28" pos:end="25:36"><name pos:start="25:28" pos:end="25:29">x2</name><index pos:start="25:30" pos:end="25:36">[<expr pos:start="25:31" pos:end="25:35"><name pos:start="25:31" pos:end="25:31">i</name><operator pos:start="25:32" pos:end="25:32">-</operator><name pos:start="25:33" pos:end="25:33">c</name><operator pos:start="25:34" pos:end="25:34">+</operator><name pos:start="25:35" pos:end="25:35">n</name></expr>]</index></name><operator pos:start="25:37" pos:end="25:37">=</operator><literal type="boolean" pos:start="25:38" pos:end="25:42">false</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="29:1" pos:end="45:1"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:8">main</name><parameter_list pos:start="29:9" pos:end="29:10">()</parameter_list><block pos:start="29:11" pos:end="45:1">{<block_content pos:start="30:5" pos:end="44:13">
    <expr_stmt pos:start="30:5" pos:end="30:34"><expr pos:start="30:5" pos:end="30:33"><call pos:start="30:5" pos:end="30:33"><name pos:start="30:5" pos:end="30:11">freopen</name><argument_list pos:start="30:12" pos:end="30:33">(<argument pos:start="30:13" pos:end="30:22"><expr pos:start="30:13" pos:end="30:22"><literal type="string" pos:start="30:13" pos:end="30:22">"queen.in"</literal></expr></argument>,<argument pos:start="30:24" pos:end="30:26"><expr pos:start="30:24" pos:end="30:26"><literal type="string" pos:start="30:24" pos:end="30:26">"r"</literal></expr></argument>,<argument pos:start="30:28" pos:end="30:32"><expr pos:start="30:28" pos:end="30:32"><name pos:start="30:28" pos:end="30:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><call pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:11">freopen</name><argument_list pos:start="31:12" pos:end="31:35">(<argument pos:start="31:13" pos:end="31:23"><expr pos:start="31:13" pos:end="31:23"><literal type="string" pos:start="31:13" pos:end="31:23">"queen.out"</literal></expr></argument>,<argument pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><literal type="string" pos:start="31:25" pos:end="31:27">"w"</literal></expr></argument>,<argument pos:start="31:29" pos:end="31:34"><expr pos:start="31:29" pos:end="31:34"><name pos:start="31:29" pos:end="31:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:19"><expr pos:start="32:5" pos:end="32:18"><call pos:start="32:5" pos:end="32:18"><name pos:start="32:5" pos:end="32:9">scanf</name><argument_list pos:start="32:10" pos:end="32:18">(<argument pos:start="32:11" pos:end="32:14"><expr pos:start="32:11" pos:end="32:14"><literal type="string" pos:start="32:11" pos:end="32:14">"%d"</literal></expr></argument>,<argument pos:start="32:16" pos:end="32:17"><expr pos:start="32:16" pos:end="32:17"><operator pos:start="32:16" pos:end="32:16">&amp;</operator><name pos:start="32:17" pos:end="32:17">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="33:5" pos:end="33:10"><decl pos:start="33:5" pos:end="33:9"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:9">a</name></decl>;</decl_stmt>
    <for pos:start="34:5" pos:end="41:5">for<control pos:start="34:8" pos:end="34:26">(<init pos:start="34:9" pos:end="34:16"><decl pos:start="34:9" pos:end="34:15"><type pos:start="34:9" pos:end="34:11"><name pos:start="34:9" pos:end="34:11">int</name></type> <name pos:start="34:13" pos:end="34:13">i</name><init pos:start="34:14" pos:end="34:15">=<expr pos:start="34:15" pos:end="34:15"><literal type="number" pos:start="34:15" pos:end="34:15">0</literal></expr></init></decl>;</init> <condition pos:start="34:18" pos:end="34:21"><expr pos:start="34:18" pos:end="34:20"><name pos:start="34:18" pos:end="34:18">i</name><operator pos:start="34:19" pos:end="34:19">&lt;</operator><name pos:start="34:20" pos:end="34:20">n</name></expr>;</condition> <incr pos:start="34:23" pos:end="34:25"><expr pos:start="34:23" pos:end="34:25"><name pos:start="34:23" pos:end="34:23">i</name><operator pos:start="34:24" pos:end="34:25">++</operator></expr></incr>)</control><block pos:start="34:27" pos:end="41:5">{<block_content pos:start="35:9" pos:end="40:9">
        <for pos:start="35:9" pos:end="40:9">for<control pos:start="35:12" pos:end="35:30">(<init pos:start="35:13" pos:end="35:20"><decl pos:start="35:13" pos:end="35:19"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:17">j</name><init pos:start="35:18" pos:end="35:19">=<expr pos:start="35:19" pos:end="35:19"><literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr></init></decl>;</init> <condition pos:start="35:22" pos:end="35:25"><expr pos:start="35:22" pos:end="35:24"><name pos:start="35:22" pos:end="35:22">j</name><operator pos:start="35:23" pos:end="35:23">&lt;</operator><name pos:start="35:24" pos:end="35:24">n</name></expr>;</condition> <incr pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:27">j</name><operator pos:start="35:28" pos:end="35:29">++</operator></expr></incr>)</control><block pos:start="35:31" pos:end="40:9">{<block_content pos:start="36:13" pos:end="39:13">
            <expr_stmt pos:start="36:13" pos:end="36:27"><expr pos:start="36:13" pos:end="36:26"><call pos:start="36:13" pos:end="36:26"><name pos:start="36:13" pos:end="36:17">scanf</name><argument_list pos:start="36:18" pos:end="36:26">(<argument pos:start="36:19" pos:end="36:22"><expr pos:start="36:19" pos:end="36:22"><literal type="string" pos:start="36:19" pos:end="36:22">"%d"</literal></expr></argument>,<argument pos:start="36:24" pos:end="36:25"><expr pos:start="36:24" pos:end="36:25"><operator pos:start="36:24" pos:end="36:24">&amp;</operator><name pos:start="36:25" pos:end="36:25">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="37:13" pos:end="39:13"><if pos:start="37:13" pos:end="39:13">if<condition pos:start="37:15" pos:end="37:20">(<expr pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:16">a</name><operator pos:start="37:17" pos:end="37:18">==</operator><literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition><block pos:start="37:21" pos:end="39:13">{<block_content pos:start="38:17" pos:end="38:31">
                <expr_stmt pos:start="38:17" pos:end="38:31"><expr pos:start="38:17" pos:end="38:30"><name pos:start="38:17" pos:end="38:25"><name pos:start="38:17" pos:end="38:19">vis</name><index pos:start="38:20" pos:end="38:22">[<expr pos:start="38:21" pos:end="38:21"><name pos:start="38:21" pos:end="38:21">i</name></expr>]</index><index pos:start="38:23" pos:end="38:25">[<expr pos:start="38:24" pos:end="38:24"><name pos:start="38:24" pos:end="38:24">j</name></expr>]</index></name><operator pos:start="38:26" pos:end="38:26">=</operator><literal type="boolean" pos:start="38:27" pos:end="38:30">true</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="42:5" pos:end="42:13"><expr pos:start="42:5" pos:end="42:12"><call pos:start="42:5" pos:end="42:12"><name pos:start="42:5" pos:end="42:7">dfs</name><argument_list pos:start="42:8" pos:end="42:12">(<argument pos:start="42:9" pos:end="42:9"><expr pos:start="42:9" pos:end="42:9"><literal type="number" pos:start="42:9" pos:end="42:9">0</literal></expr></argument>,<argument pos:start="42:11" pos:end="42:11"><expr pos:start="42:11" pos:end="42:11"><literal type="number" pos:start="42:11" pos:end="42:11">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><call pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:10">printf</name><argument_list pos:start="43:11" pos:end="43:20">(<argument pos:start="43:12" pos:end="43:15"><expr pos:start="43:12" pos:end="43:15"><literal type="string" pos:start="43:12" pos:end="43:15">"%d"</literal></expr></argument>,<argument pos:start="43:17" pos:end="43:19"><expr pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="44:5" pos:end="44:13">return <expr pos:start="44:12" pos:end="44:12"><literal type="number" pos:start="44:12" pos:end="44:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
