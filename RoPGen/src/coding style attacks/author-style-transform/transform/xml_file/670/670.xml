<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/670/670.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:17">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:17">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:17">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:17">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive> <cpp:file pos:start="5:10" pos:end="5:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<using pos:start="6:1" pos:end="6:20">using <namespace pos:start="6:7" pos:end="6:20">namespace <name pos:start="6:17" pos:end="6:19">std</name>;</namespace></using>
<decl_stmt pos:start="7:1" pos:end="7:14"><decl pos:start="7:1" pos:end="7:13"><type pos:start="7:1" pos:end="7:11"><name pos:start="7:1" pos:end="7:11"><name pos:start="7:1" pos:end="7:6">vector</name><argument_list type="generic" pos:start="7:7" pos:end="7:11">&lt;<argument pos:start="7:8" pos:end="7:10"><expr pos:start="7:8" pos:end="7:10"><name pos:start="7:8" pos:end="7:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="7:13" pos:end="7:13">v</name></decl>;</decl_stmt>
<function pos:start="8:1" pos:end="27:5"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:8">main</name><parameter_list pos:start="8:9" pos:end="8:10">()</parameter_list><block pos:start="8:11" pos:end="27:5">{<block_content pos:start="9:5" pos:end="26:9">
    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">string</name></type> <name pos:start="9:12" pos:end="9:12">s</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:20"><decl pos:start="10:5" pos:end="10:9"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">t</name></decl>,<decl pos:start="10:11" pos:end="10:11"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:11" pos:end="10:11">x</name></decl>,<decl pos:start="10:13" pos:end="10:19"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:13" pos:end="10:15">sum</name> <init pos:start="10:17" pos:end="10:19">= <expr pos:start="10:19" pos:end="10:19"><literal type="number" pos:start="10:19" pos:end="10:19">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:13"><expr pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:7">cin</name> <operator pos:start="11:9" pos:end="11:10">&gt;&gt;</operator> <name pos:start="11:12" pos:end="11:12">x</name></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:10"><expr pos:start="12:5" pos:end="12:9"><name pos:start="12:5" pos:end="12:5">x</name><operator pos:start="12:6" pos:end="12:7">*=</operator><literal type="number" pos:start="12:8" pos:end="12:9">60</literal></expr>;</expr_stmt>
    <while pos:start="13:5" pos:end="20:9">while <condition pos:start="13:11" pos:end="13:20">(<expr pos:start="13:12" pos:end="13:19"><name pos:start="13:12" pos:end="13:14">cin</name> <operator pos:start="13:16" pos:end="13:17">&gt;&gt;</operator> <name pos:start="13:19" pos:end="13:19">s</name></expr>)</condition><block pos:start="13:21" pos:end="20:9">{<block_content pos:start="14:9" pos:end="19:21">
        <if_stmt pos:start="14:9" pos:end="17:1"><if pos:start="14:9" pos:end="17:1">if<condition pos:start="14:11" pos:end="14:31">(<expr pos:start="14:12" pos:end="14:30"><name pos:start="14:12" pos:end="14:12">s</name> <operator pos:start="14:14" pos:end="14:15">==</operator> <literal type="string" pos:start="14:17" pos:end="14:30">"tingtingting"</literal></expr>)</condition><block pos:start="14:32" pos:end="17:1">{<block_content pos:start="15:13" pos:end="16:34">
            <expr_stmt pos:start="15:13" pos:end="15:25"><expr pos:start="15:13" pos:end="15:24"><call pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:13">v</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:22">pop_back</name></name><argument_list pos:start="15:23" pos:end="15:24">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:34"><expr pos:start="16:13" pos:end="16:33"><name pos:start="16:13" pos:end="16:15">sum</name> <operator pos:start="16:17" pos:end="16:17">=</operator> <name pos:start="16:19" pos:end="16:33"><name pos:start="16:19" pos:end="16:19">v</name><index pos:start="16:20" pos:end="16:33">[<expr pos:start="16:21" pos:end="16:32"><call pos:start="16:21" pos:end="16:28"><name pos:start="16:21" pos:end="16:26"><name pos:start="16:21" pos:end="16:21">v</name><operator pos:start="16:22" pos:end="16:22">.</operator><name pos:start="16:23" pos:end="16:26">size</name></name><argument_list pos:start="16:27" pos:end="16:28">()</argument_list></call> <operator pos:start="16:30" pos:end="16:30">-</operator> <literal type="number" pos:start="16:32" pos:end="16:32">1</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="18:9" pos:end="18:43"><expr pos:start="18:9" pos:end="18:42"><name pos:start="18:9" pos:end="18:12">cout</name> <operator pos:start="18:14" pos:end="18:15">&lt;&lt;</operator> <literal type="string" pos:start="18:17" pos:end="18:34">"Congratulations!"</literal> <operator pos:start="18:36" pos:end="18:37">&lt;&lt;</operator> <name pos:start="18:39" pos:end="18:42">endl</name></expr>;</expr_stmt>
            <return pos:start="19:13" pos:end="19:21">return <expr pos:start="19:20" pos:end="19:20"><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>;</return>
        </block_content>}</block></while>
        <if_stmt pos:start="21:9" pos:end="26:9"><else pos:start="21:9" pos:end="26:9">else <block pos:start="21:14" pos:end="26:9">{<block_content pos:start="22:13" pos:end="25:29">
            <expr_stmt pos:start="22:13" pos:end="22:21"><expr pos:start="22:13" pos:end="22:20"><name pos:start="22:13" pos:end="22:15">cin</name> <operator pos:start="22:17" pos:end="22:18">&gt;&gt;</operator> <name pos:start="22:20" pos:end="22:20">t</name></expr>;</expr_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:21"><expr pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:15">sum</name> <operator pos:start="23:17" pos:end="23:18">+=</operator> <name pos:start="23:20" pos:end="23:20">t</name></expr>;</expr_stmt>
            <if_stmt pos:start="24:13" pos:end="24:30"><if pos:start="24:13" pos:end="24:30">if<condition pos:start="24:15" pos:end="24:24">(<expr pos:start="24:16" pos:end="24:23"><name pos:start="24:16" pos:end="24:18">sum</name> <operator pos:start="24:20" pos:end="24:21">&gt;=</operator> <name pos:start="24:23" pos:end="24:23">x</name></expr>)</condition><block type="pseudo" pos:start="24:25" pos:end="24:30"><block_content pos:start="24:25" pos:end="24:30"><break pos:start="24:25" pos:end="24:30">break;</break></block_content></block></if></if_stmt>
            <expr_stmt pos:start="25:13" pos:end="25:29"><expr pos:start="25:13" pos:end="25:28"><call pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:13">v</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:23">push_back</name></name><argument_list pos:start="25:24" pos:end="25:28">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>
    <expr_stmt pos:start="28:5" pos:end="28:37"><expr pos:start="28:5" pos:end="28:36"><name pos:start="28:5" pos:end="28:8">cout</name> <operator pos:start="28:10" pos:end="28:11">&lt;&lt;</operator> <literal type="string" pos:start="28:13" pos:end="28:28">"Unfortunately."</literal> <operator pos:start="28:30" pos:end="28:31">&lt;&lt;</operator> <name pos:start="28:33" pos:end="28:36">endl</name></expr>;</expr_stmt>
    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>
}
       
</unit>
