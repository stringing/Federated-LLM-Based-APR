<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/15/15.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<decl_stmt pos:start="2:1" pos:end="2:21"><decl pos:start="2:1" pos:end="2:20"><type pos:start="2:1" pos:end="2:9"><specifier pos:start="2:1" pos:end="2:5">const</specifier> <name pos:start="2:7" pos:end="2:9">int</name></type> <name pos:start="2:11" pos:end="2:14">MAXN</name><init pos:start="2:15" pos:end="2:20">=<expr pos:start="2:16" pos:end="2:20"><literal type="number" pos:start="2:16" pos:end="2:19">2e5</literal><operator pos:start="2:19" pos:end="2:19">+</operator><literal type="number" pos:start="2:20" pos:end="2:20">5</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="3:1" pos:end="3:6"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:13"><decl pos:start="4:1" pos:end="4:12"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">char</name></type> <name pos:start="4:6" pos:end="4:12"><name pos:start="4:6" pos:end="4:6">s</name><index pos:start="4:7" pos:end="4:12">[<expr pos:start="4:8" pos:end="4:11"><name pos:start="4:8" pos:end="4:11">MAXN</name></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="24:1"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:10">judge</name><parameter_list pos:start="5:11" pos:end="5:12">()</parameter_list><block pos:start="5:13" pos:end="24:1">{<block_content pos:start="6:3" pos:end="23:13">
  <if_stmt pos:start="6:3" pos:end="6:25"><if pos:start="6:3" pos:end="6:25">if<condition pos:start="6:5" pos:end="6:12">(<expr pos:start="6:6" pos:end="6:11"><name pos:start="6:6" pos:end="6:6">n</name><operator pos:start="6:7" pos:end="6:7">%</operator><literal type="number" pos:start="6:8" pos:end="6:8">8</literal><operator pos:start="6:9" pos:end="6:10">!=</operator><literal type="number" pos:start="6:11" pos:end="6:11">0</literal></expr>)</condition><block type="pseudo" pos:start="6:13" pos:end="6:25"><block_content pos:start="6:13" pos:end="6:25"><return pos:start="6:13" pos:end="6:25">return <expr pos:start="6:20" pos:end="6:24"><literal type="boolean" pos:start="6:20" pos:end="6:24">false</literal></expr>;</return></block_content></block></if></if_stmt>
  <for pos:start="7:3" pos:end="11:3">for<control pos:start="7:6" pos:end="7:23">(<init pos:start="7:7" pos:end="7:14"><decl pos:start="7:7" pos:end="7:13"><type pos:start="7:7" pos:end="7:9"><name pos:start="7:7" pos:end="7:9">int</name></type> <name pos:start="7:11" pos:end="7:11">i</name><init pos:start="7:12" pos:end="7:13">=<expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">1</literal></expr></init></decl>;</init><condition pos:start="7:15" pos:end="7:19"><expr pos:start="7:15" pos:end="7:18"><name pos:start="7:15" pos:end="7:15">i</name><operator pos:start="7:16" pos:end="7:17">&lt;=</operator><name pos:start="7:18" pos:end="7:18">n</name></expr>;</condition><incr pos:start="7:20" pos:end="7:22"><expr pos:start="7:20" pos:end="7:22"><operator pos:start="7:20" pos:end="7:21">++</operator><name pos:start="7:22" pos:end="7:22">i</name></expr></incr>)</control><block pos:start="7:24" pos:end="11:3">{<block_content pos:start="8:5" pos:end="10:5">
    <if_stmt pos:start="8:5" pos:end="10:5"><if pos:start="8:5" pos:end="10:5">if<condition pos:start="8:7" pos:end="8:28">(<expr pos:start="8:8" pos:end="8:27"><name pos:start="8:8" pos:end="8:11"><name pos:start="8:8" pos:end="8:8">s</name><index pos:start="8:9" pos:end="8:11">[<expr pos:start="8:10" pos:end="8:10"><name pos:start="8:10" pos:end="8:10">i</name></expr>]</index></name><operator pos:start="8:12" pos:end="8:13">!=</operator><literal type="char" pos:start="8:14" pos:end="8:16">'0'</literal><operator pos:start="8:17" pos:end="8:18">&amp;&amp;</operator><name pos:start="8:19" pos:end="8:22"><name pos:start="8:19" pos:end="8:19">s</name><index pos:start="8:20" pos:end="8:22">[<expr pos:start="8:21" pos:end="8:21"><name pos:start="8:21" pos:end="8:21">i</name></expr>]</index></name><operator pos:start="8:23" pos:end="8:24">!=</operator><literal type="char" pos:start="8:25" pos:end="8:27">'1'</literal></expr>)</condition><block pos:start="8:29" pos:end="10:5">{<block_content pos:start="9:7" pos:end="9:19">
      <return pos:start="9:7" pos:end="9:19">return <expr pos:start="9:14" pos:end="9:18"><literal type="boolean" pos:start="9:14" pos:end="9:18">false</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></for>
  <for pos:start="12:3" pos:end="23:1">for<control pos:start="12:6" pos:end="12:24">(<init pos:start="12:7" pos:end="12:14"><decl pos:start="12:7" pos:end="12:13"><type pos:start="12:7" pos:end="12:9"><name pos:start="12:7" pos:end="12:9">int</name></type> <name pos:start="12:11" pos:end="12:11">i</name><init pos:start="12:12" pos:end="12:13">=<expr pos:start="12:13" pos:end="12:13"><literal type="number" pos:start="12:13" pos:end="12:13">1</literal></expr></init></decl>;</init><condition pos:start="12:15" pos:end="12:19"><expr pos:start="12:15" pos:end="12:18"><name pos:start="12:15" pos:end="12:15">i</name><operator pos:start="12:16" pos:end="12:17">&lt;=</operator><name pos:start="12:18" pos:end="12:18">n</name></expr>;</condition><incr pos:start="12:20" pos:end="12:23"><expr pos:start="12:20" pos:end="12:23"><name pos:start="12:20" pos:end="12:20">i</name><operator pos:start="12:21" pos:end="12:22">+=</operator><literal type="number" pos:start="12:23" pos:end="12:23">8</literal></expr></incr>)</control><block pos:start="12:25" pos:end="23:1">{<block_content pos:start="12:27" pos:end="22:1"> <if_stmt pos:start="12:27" pos:end="12:91"><if pos:start="12:27" pos:end="12:91">if<condition pos:start="12:29" pos:end="12:78">(<expr pos:start="12:30" pos:end="12:77"><call pos:start="12:30" pos:end="12:49"><name pos:start="12:30" pos:end="12:36">strncmp</name><argument_list pos:start="12:37" pos:end="12:49">(<argument pos:start="12:38" pos:end="12:40"><expr pos:start="12:38" pos:end="12:40"><name pos:start="12:38" pos:end="12:38">s</name><operator pos:start="12:39" pos:end="12:39">+</operator><name pos:start="12:40" pos:end="12:40">i</name></expr></argument>,<argument pos:start="12:42" pos:end="12:46"><expr pos:start="12:42" pos:end="12:46"><literal type="string" pos:start="12:42" pos:end="12:46">"100"</literal></expr></argument>,<argument pos:start="12:48" pos:end="12:48"><expr pos:start="12:48" pos:end="12:48"><literal type="number" pos:start="12:48" pos:end="12:48">3</literal></expr></argument>)</argument_list></call><operator pos:start="12:50" pos:end="12:51">==</operator><literal type="number" pos:start="12:52" pos:end="12:52">0</literal><operator pos:start="12:53" pos:end="12:54">||</operator><call pos:start="12:55" pos:end="12:74"><name pos:start="12:55" pos:end="12:61">strncmp</name><argument_list pos:start="12:62" pos:end="12:74">(<argument pos:start="12:63" pos:end="12:65"><expr pos:start="12:63" pos:end="12:65"><name pos:start="12:63" pos:end="12:63">s</name><operator pos:start="12:64" pos:end="12:64">+</operator><name pos:start="12:65" pos:end="12:65">i</name></expr></argument>,<argument pos:start="12:67" pos:end="12:71"><expr pos:start="12:67" pos:end="12:71"><literal type="string" pos:start="12:67" pos:end="12:71">"110"</literal></expr></argument>,<argument pos:start="12:73" pos:end="12:73"><expr pos:start="12:73" pos:end="12:73"><literal type="number" pos:start="12:73" pos:end="12:73">3</literal></expr></argument>)</argument_list></call><operator pos:start="12:75" pos:end="12:76">==</operator><literal type="number" pos:start="12:77" pos:end="12:77">0</literal></expr>)</condition><block type="pseudo" pos:start="12:79" pos:end="12:91"><block_content pos:start="12:79" pos:end="12:91"><return pos:start="12:79" pos:end="12:91">return <expr pos:start="12:86" pos:end="12:90"><literal type="boolean" pos:start="12:86" pos:end="12:90">false</literal></expr>;</return></block_content></block></if></if_stmt>
                         <if_stmt pos:start="13:26" pos:end="16:25"><if pos:start="13:26" pos:end="16:25">if<condition pos:start="13:28" pos:end="13:38">(<expr pos:start="13:29" pos:end="13:37"><name pos:start="13:29" pos:end="13:32"><name pos:start="13:29" pos:end="13:29">s</name><index pos:start="13:30" pos:end="13:32">[<expr pos:start="13:31" pos:end="13:31"><name pos:start="13:31" pos:end="13:31">i</name></expr>]</index></name><operator pos:start="13:33" pos:end="13:34">==</operator><literal type="char" pos:start="13:35" pos:end="13:37">'0'</literal></expr>)</condition><block pos:start="13:39" pos:end="16:25">{<block_content pos:start="14:1" pos:end="15:27">
<if_stmt pos:start="14:1" pos:end="14:36"><if pos:start="14:1" pos:end="14:36">if<condition pos:start="14:3" pos:end="14:22">(<expr pos:start="14:4" pos:end="14:21"><name pos:start="14:4" pos:end="14:4">i</name><operator pos:start="14:5" pos:end="14:5">+</operator><literal type="number" pos:start="14:6" pos:end="14:6">8</literal><operator pos:start="14:7" pos:end="14:7">&gt;</operator><name pos:start="14:8" pos:end="14:8">n</name><operator pos:start="14:9" pos:end="14:10">||</operator><name pos:start="14:11" pos:end="14:16"><name pos:start="14:11" pos:end="14:11">s</name><index pos:start="14:12" pos:end="14:16">[<expr pos:start="14:13" pos:end="14:15"><name pos:start="14:13" pos:end="14:13">i</name><operator pos:start="14:14" pos:end="14:14">+</operator><literal type="number" pos:start="14:15" pos:end="14:15">8</literal></expr>]</index></name><operator pos:start="14:17" pos:end="14:18">!=</operator><literal type="char" pos:start="14:19" pos:end="14:21">'0'</literal></expr>)</condition><block type="pseudo" pos:start="14:24" pos:end="14:36"><block_content pos:start="14:24" pos:end="14:36"> <return pos:start="14:24" pos:end="14:36">return <expr pos:start="14:31" pos:end="14:35"><literal type="boolean" pos:start="14:31" pos:end="14:35">false</literal></expr>;</return></block_content></block></if></if_stmt>
                      <expr_stmt pos:start="15:23" pos:end="15:27"><expr pos:start="15:23" pos:end="15:26"><name pos:start="15:23" pos:end="15:23">i</name><operator pos:start="15:24" pos:end="15:25">+=</operator><literal type="number" pos:start="15:26" pos:end="15:26">8</literal></expr>;</expr_stmt>
                        </block_content>}</block></if></if_stmt>
<if_stmt pos:start="17:1" pos:end="22:1"><if pos:start="17:1" pos:end="22:1">if<condition pos:start="17:3" pos:end="17:27">(<expr pos:start="17:4" pos:end="17:26"><call pos:start="17:4" pos:end="17:23"><name pos:start="17:4" pos:end="17:10">strncmp</name><argument_list pos:start="17:11" pos:end="17:23">(<argument pos:start="17:12" pos:end="17:14"><expr pos:start="17:12" pos:end="17:14"><name pos:start="17:12" pos:end="17:12">s</name><operator pos:start="17:13" pos:end="17:13">+</operator><name pos:start="17:14" pos:end="17:14">i</name></expr></argument>,<argument pos:start="17:16" pos:end="17:20"><expr pos:start="17:16" pos:end="17:20"><literal type="string" pos:start="17:16" pos:end="17:20">"101"</literal></expr></argument>,<argument pos:start="17:22" pos:end="17:22"><expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">3</literal></expr></argument>)</argument_list></call><operator pos:start="17:24" pos:end="17:25">==</operator><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>)</condition><block pos:start="17:28" pos:end="22:1">{<block_content pos:start="18:3" pos:end="21:27">
  <decl_stmt pos:start="18:3" pos:end="18:12"><decl pos:start="18:3" pos:end="18:11"><type pos:start="18:3" pos:end="18:5"><name pos:start="18:3" pos:end="18:5">int</name></type> <name pos:start="18:7" pos:end="18:9">tmp</name><init pos:start="18:10" pos:end="18:11">=<expr pos:start="18:11" pos:end="18:11"><literal type="number" pos:start="18:11" pos:end="18:11">0</literal></expr></init></decl>;</decl_stmt>
  <for pos:start="19:3" pos:end="21:3">for<control pos:start="19:6" pos:end="19:26">(<init pos:start="19:7" pos:end="19:16"><decl pos:start="19:7" pos:end="19:15"><type pos:start="19:7" pos:end="19:9"><name pos:start="19:7" pos:end="19:9">int</name></type> <name pos:start="19:11" pos:end="19:11">j</name><init pos:start="19:12" pos:end="19:15">=<expr pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:13">i</name><operator pos:start="19:14" pos:end="19:14">+</operator><literal type="number" pos:start="19:15" pos:end="19:15">3</literal></expr></init></decl>;</init><condition pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:21"><name pos:start="19:17" pos:end="19:17">j</name><operator pos:start="19:18" pos:end="19:18">&lt;</operator><name pos:start="19:19" pos:end="19:19">i</name><operator pos:start="19:20" pos:end="19:20">+</operator><literal type="number" pos:start="19:21" pos:end="19:21">8</literal></expr>;</condition><incr pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><operator pos:start="19:23" pos:end="19:24">++</operator><name pos:start="19:25" pos:end="19:25">j</name></expr></incr>)</control><block pos:start="19:27" pos:end="21:3">{<block_content pos:start="20:5" pos:end="20:25">
    <expr_stmt pos:start="20:5" pos:end="20:25"><expr pos:start="20:5" pos:end="20:24"><name pos:start="20:5" pos:end="20:7">tmp</name><operator pos:start="20:8" pos:end="20:8">=</operator><name pos:start="20:9" pos:end="20:11">tmp</name><operator pos:start="20:12" pos:end="20:12">*</operator><literal type="number" pos:start="20:13" pos:end="20:14">2</literal><operator pos:start="20:14" pos:end="20:14">+</operator><operator pos:start="20:15" pos:end="20:15">(</operator><name pos:start="20:16" pos:end="20:19"><name pos:start="20:16" pos:end="20:16">s</name><index pos:start="20:17" pos:end="20:19">[<expr pos:start="20:18" pos:end="20:18"><name pos:start="20:18" pos:end="20:18">j</name></expr>]</index></name><operator pos:start="20:20" pos:end="20:20">-</operator><literal type="char" pos:start="20:21" pos:end="20:23">'0'</literal><operator pos:start="20:24" pos:end="20:24">)</operator></expr>;</expr_stmt>
  </block_content>}</block></for><if_stmt pos:start="21:4" pos:end="21:27"><if pos:start="21:4" pos:end="21:27">if<condition pos:start="21:6" pos:end="21:14">(<expr pos:start="21:7" pos:end="21:13"><name pos:start="21:7" pos:end="21:9">tmp</name><operator pos:start="21:10" pos:end="21:11">&gt;=</operator><literal type="number" pos:start="21:12" pos:end="21:13">26</literal></expr>)</condition><block type="pseudo" pos:start="21:15" pos:end="21:27"><block_content pos:start="21:15" pos:end="21:27"><return pos:start="21:15" pos:end="21:27">return <expr pos:start="21:22" pos:end="21:26"><literal type="boolean" pos:start="21:22" pos:end="21:26">false</literal></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for><return pos:start="23:2" pos:end="23:13">return <expr pos:start="23:9" pos:end="23:12"><literal type="boolean" pos:start="23:9" pos:end="23:12">true</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="25:1" pos:end="53:1"><type pos:start="25:1" pos:end="25:3"><name pos:start="25:1" pos:end="25:3">int</name></type> <name pos:start="25:5" pos:end="25:8">main</name><parameter_list pos:start="25:9" pos:end="25:10">()</parameter_list><block pos:start="25:11" pos:end="53:1">{<block_content pos:start="26:3" pos:end="52:12">
  <expr_stmt pos:start="26:3" pos:end="26:38"><expr pos:start="26:3" pos:end="26:37"><call pos:start="26:3" pos:end="26:37"><name pos:start="26:3" pos:end="26:9">freopen</name><argument_list pos:start="26:10" pos:end="26:37">(<argument pos:start="26:11" pos:end="26:26"><expr pos:start="26:11" pos:end="26:26"><literal type="string" pos:start="26:11" pos:end="26:26">"information.in"</literal></expr></argument>,<argument pos:start="26:28" pos:end="26:30"><expr pos:start="26:28" pos:end="26:30"><literal type="string" pos:start="26:28" pos:end="26:30">"r"</literal></expr></argument>,<argument pos:start="26:32" pos:end="26:36"><expr pos:start="26:32" pos:end="26:36"><name pos:start="26:32" pos:end="26:36">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt pos:start="27:3" pos:end="27:40"><expr pos:start="27:3" pos:end="27:39"><call pos:start="27:3" pos:end="27:39"><name pos:start="27:3" pos:end="27:9">freopen</name><argument_list pos:start="27:10" pos:end="27:39">(<argument pos:start="27:11" pos:end="27:27"><expr pos:start="27:11" pos:end="27:27"><literal type="string" pos:start="27:11" pos:end="27:27">"information.out"</literal></expr></argument>,<argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><literal type="string" pos:start="27:29" pos:end="27:31">"w"</literal></expr></argument>,<argument pos:start="27:33" pos:end="27:38"><expr pos:start="27:33" pos:end="27:38"><name pos:start="27:33" pos:end="27:38">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt pos:start="28:3" pos:end="28:18"><expr pos:start="28:3" pos:end="28:17"><call pos:start="28:3" pos:end="28:17"><name pos:start="28:3" pos:end="28:7">scanf</name><argument_list pos:start="28:8" pos:end="28:17">(<argument pos:start="28:9" pos:end="28:12"><expr pos:start="28:9" pos:end="28:12"><literal type="string" pos:start="28:9" pos:end="28:12">"%s"</literal></expr></argument>,<argument pos:start="28:14" pos:end="28:16"><expr pos:start="28:14" pos:end="28:16"><name pos:start="28:14" pos:end="28:14">s</name><operator pos:start="28:15" pos:end="28:15">+</operator><literal type="number" pos:start="28:16" pos:end="28:16">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt pos:start="29:3" pos:end="29:16"><expr pos:start="29:3" pos:end="29:15"><name pos:start="29:3" pos:end="29:3">n</name><operator pos:start="29:4" pos:end="29:4">=</operator><call pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:10">strlen</name><argument_list pos:start="29:11" pos:end="29:15">(<argument pos:start="29:12" pos:end="29:14"><expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:12">s</name><operator pos:start="29:13" pos:end="29:13">+</operator><literal type="number" pos:start="29:14" pos:end="29:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt pos:start="30:3" pos:end="52:3"><if pos:start="30:3" pos:end="32:3">if<condition pos:start="30:5" pos:end="30:14">(<expr pos:start="30:6" pos:end="30:13"><operator pos:start="30:6" pos:end="30:6">!</operator><call pos:start="30:7" pos:end="30:13"><name pos:start="30:7" pos:end="30:11">judge</name><argument_list pos:start="30:12" pos:end="30:13">()</argument_list></call></expr>)</condition><block pos:start="30:15" pos:end="32:3">{<block_content pos:start="31:5" pos:end="31:22">
    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><call pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:10">printf</name><argument_list pos:start="31:11" pos:end="31:21">(<argument pos:start="31:12" pos:end="31:20"><expr pos:start="31:12" pos:end="31:20"><literal type="string" pos:start="31:12" pos:end="31:20">"Error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if><else pos:start="32:4" pos:end="52:3">else<block pos:start="32:8" pos:end="52:3">{<block_content pos:start="33:5" pos:end="51:5">
    <for pos:start="33:5" pos:end="51:5">for<control pos:start="33:8" pos:end="33:26">(<init pos:start="33:9" pos:end="33:16"><decl pos:start="33:9" pos:end="33:15"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:13">i</name><init pos:start="33:14" pos:end="33:15">=<expr pos:start="33:15" pos:end="33:15"><literal type="number" pos:start="33:15" pos:end="33:15">1</literal></expr></init></decl>;</init><condition pos:start="33:17" pos:end="33:21"><expr pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:17">i</name><operator pos:start="33:18" pos:end="33:19">&lt;=</operator><name pos:start="33:20" pos:end="33:20">n</name></expr>;</condition><incr pos:start="33:22" pos:end="33:25"><expr pos:start="33:22" pos:end="33:25"><name pos:start="33:22" pos:end="33:22">i</name><operator pos:start="33:23" pos:end="33:24">+=</operator><literal type="number" pos:start="33:25" pos:end="33:25">8</literal></expr></incr>)</control><block pos:start="33:27" pos:end="51:5">{<block_content pos:start="34:7" pos:end="50:7">
      <if_stmt pos:start="34:7" pos:end="50:7"><if pos:start="34:7" pos:end="40:7">if<condition pos:start="34:9" pos:end="34:33">(<expr pos:start="34:10" pos:end="34:32"><call pos:start="34:10" pos:end="34:29"><name pos:start="34:10" pos:end="34:16">strncmp</name><argument_list pos:start="34:17" pos:end="34:29">(<argument pos:start="34:18" pos:end="34:20"><expr pos:start="34:18" pos:end="34:20"><name pos:start="34:18" pos:end="34:18">s</name><operator pos:start="34:19" pos:end="34:19">+</operator><name pos:start="34:20" pos:end="34:20">i</name></expr></argument>,<argument pos:start="34:22" pos:end="34:26"><expr pos:start="34:22" pos:end="34:26"><literal type="string" pos:start="34:22" pos:end="34:26">"101"</literal></expr></argument>,<argument pos:start="34:28" pos:end="34:28"><expr pos:start="34:28" pos:end="34:28"><literal type="number" pos:start="34:28" pos:end="34:28">3</literal></expr></argument>)</argument_list></call><operator pos:start="34:30" pos:end="34:31">==</operator><literal type="number" pos:start="34:32" pos:end="34:32">0</literal></expr>)</condition><block pos:start="34:34" pos:end="40:7">{<block_content pos:start="35:9" pos:end="39:20">
        <decl_stmt pos:start="35:9" pos:end="35:18"><decl pos:start="35:9" pos:end="35:17"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:15">tmp</name><init pos:start="35:16" pos:end="35:17">=<expr pos:start="35:17" pos:end="35:17"><literal type="number" pos:start="35:17" pos:end="35:17">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="36:9" pos:end="38:9">for<control pos:start="36:12" pos:end="36:32">(<init pos:start="36:13" pos:end="36:22"><decl pos:start="36:13" pos:end="36:21"><type pos:start="36:13" pos:end="36:15"><name pos:start="36:13" pos:end="36:15">int</name></type> <name pos:start="36:17" pos:end="36:17">j</name><init pos:start="36:18" pos:end="36:21">=<expr pos:start="36:19" pos:end="36:21"><name pos:start="36:19" pos:end="36:19">i</name><operator pos:start="36:20" pos:end="36:20">+</operator><literal type="number" pos:start="36:21" pos:end="36:21">3</literal></expr></init></decl>;</init><condition pos:start="36:23" pos:end="36:28"><expr pos:start="36:23" pos:end="36:27"><name pos:start="36:23" pos:end="36:23">j</name><operator pos:start="36:24" pos:end="36:24">&lt;</operator><name pos:start="36:25" pos:end="36:25">i</name><operator pos:start="36:26" pos:end="36:26">+</operator><literal type="number" pos:start="36:27" pos:end="36:27">8</literal></expr>;</condition><incr pos:start="36:29" pos:end="36:31"><expr pos:start="36:29" pos:end="36:31"><operator pos:start="36:29" pos:end="36:30">++</operator><name pos:start="36:31" pos:end="36:31">j</name></expr></incr>)</control><block pos:start="36:33" pos:end="38:9">{<block_content pos:start="37:11" pos:end="37:31">
          <expr_stmt pos:start="37:11" pos:end="37:31"><expr pos:start="37:11" pos:end="37:30"><name pos:start="37:11" pos:end="37:13">tmp</name><operator pos:start="37:14" pos:end="37:14">=</operator><name pos:start="37:15" pos:end="37:17">tmp</name><operator pos:start="37:18" pos:end="37:18">*</operator><literal type="number" pos:start="37:19" pos:end="37:20">2</literal><operator pos:start="37:20" pos:end="37:20">+</operator><operator pos:start="37:21" pos:end="37:21">(</operator><name pos:start="37:22" pos:end="37:25"><name pos:start="37:22" pos:end="37:22">s</name><index pos:start="37:23" pos:end="37:25">[<expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">j</name></expr>]</index></name><operator pos:start="37:26" pos:end="37:26">-</operator><literal type="char" pos:start="37:27" pos:end="37:29">'0'</literal><operator pos:start="37:30" pos:end="37:30">)</operator></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="39:9" pos:end="39:20"><expr pos:start="39:9" pos:end="39:19"><call pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:14">printf</name><argument_list pos:start="39:15" pos:end="39:19">(<argument pos:start="39:16" pos:end="39:18"><expr pos:start="39:16" pos:end="39:18"><literal type="string" pos:start="39:16" pos:end="39:18">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if><if type="elseif" pos:start="40:8" pos:end="42:7">else if<condition pos:start="40:15" pos:end="40:39">(<expr pos:start="40:16" pos:end="40:38"><call pos:start="40:16" pos:end="40:35"><name pos:start="40:16" pos:end="40:22">strncmp</name><argument_list pos:start="40:23" pos:end="40:35">(<argument pos:start="40:24" pos:end="40:26"><expr pos:start="40:24" pos:end="40:26"><name pos:start="40:24" pos:end="40:24">s</name><operator pos:start="40:25" pos:end="40:25">+</operator><name pos:start="40:26" pos:end="40:26">i</name></expr></argument>,<argument pos:start="40:28" pos:end="40:32"><expr pos:start="40:28" pos:end="40:32"><literal type="string" pos:start="40:28" pos:end="40:32">"111"</literal></expr></argument>,<argument pos:start="40:34" pos:end="40:34"><expr pos:start="40:34" pos:end="40:34"><literal type="number" pos:start="40:34" pos:end="40:34">3</literal></expr></argument>)</argument_list></call><operator pos:start="40:36" pos:end="40:37">==</operator><literal type="number" pos:start="40:38" pos:end="40:38">0</literal></expr>)</condition><block pos:start="40:40" pos:end="42:7">{<block_content pos:start="41:9" pos:end="41:20">
        <expr_stmt pos:start="41:9" pos:end="41:20"><expr pos:start="41:9" pos:end="41:19"><call pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:14">printf</name><argument_list pos:start="41:15" pos:end="41:19">(<argument pos:start="41:16" pos:end="41:18"><expr pos:start="41:16" pos:end="41:18"><literal type="string" pos:start="41:16" pos:end="41:18">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if><else pos:start="42:8" pos:end="50:7">else<block pos:start="42:12" pos:end="50:7">{<block_content pos:start="43:9" pos:end="49:42">
        <decl_stmt pos:start="43:9" pos:end="43:26"><decl pos:start="43:9" pos:end="43:18"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:16">tmp1</name><init pos:start="43:17" pos:end="43:18">=<expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr></init></decl>,<decl pos:start="43:20" pos:end="43:25"><type ref="prev" pos:start="43:9" pos:end="43:11"/><name pos:start="43:20" pos:end="43:23">tmp2</name><init pos:start="43:24" pos:end="43:25">=<expr pos:start="43:25" pos:end="43:25"><literal type="number" pos:start="43:25" pos:end="43:25">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="44:9" pos:end="46:9">for<control pos:start="44:12" pos:end="44:32">(<init pos:start="44:13" pos:end="44:22"><decl pos:start="44:13" pos:end="44:21"><type pos:start="44:13" pos:end="44:15"><name pos:start="44:13" pos:end="44:15">int</name></type> <name pos:start="44:17" pos:end="44:17">j</name><init pos:start="44:18" pos:end="44:21">=<expr pos:start="44:19" pos:end="44:21"><name pos:start="44:19" pos:end="44:19">i</name><operator pos:start="44:20" pos:end="44:20">+</operator><literal type="number" pos:start="44:21" pos:end="44:21">1</literal></expr></init></decl>;</init><condition pos:start="44:23" pos:end="44:28"><expr pos:start="44:23" pos:end="44:27"><name pos:start="44:23" pos:end="44:23">j</name><operator pos:start="44:24" pos:end="44:24">&lt;</operator><name pos:start="44:25" pos:end="44:25">i</name><operator pos:start="44:26" pos:end="44:26">+</operator><literal type="number" pos:start="44:27" pos:end="44:27">8</literal></expr>;</condition><incr pos:start="44:29" pos:end="44:31"><expr pos:start="44:29" pos:end="44:31"><operator pos:start="44:29" pos:end="44:30">++</operator><name pos:start="44:31" pos:end="44:31">j</name></expr></incr>)</control><block pos:start="44:33" pos:end="46:9">{<block_content pos:start="45:11" pos:end="45:33">
          <expr_stmt pos:start="45:11" pos:end="45:33"><expr pos:start="45:11" pos:end="45:32"><name pos:start="45:11" pos:end="45:14">tmp1</name><operator pos:start="45:15" pos:end="45:15">=</operator><name pos:start="45:16" pos:end="45:19">tmp1</name><operator pos:start="45:20" pos:end="45:20">*</operator><literal type="number" pos:start="45:21" pos:end="45:22">2</literal><operator pos:start="45:22" pos:end="45:22">+</operator><operator pos:start="45:23" pos:end="45:23">(</operator><name pos:start="45:24" pos:end="45:27"><name pos:start="45:24" pos:end="45:24">s</name><index pos:start="45:25" pos:end="45:27">[<expr pos:start="45:26" pos:end="45:26"><name pos:start="45:26" pos:end="45:26">j</name></expr>]</index></name><operator pos:start="45:28" pos:end="45:28">-</operator><literal type="char" pos:start="45:29" pos:end="45:31">'0'</literal><operator pos:start="45:32" pos:end="45:32">)</operator></expr>;</expr_stmt>
        </block_content>}</block></for><expr_stmt pos:start="46:10" pos:end="46:14"><expr pos:start="46:10" pos:end="46:13"><name pos:start="46:10" pos:end="46:10">i</name><operator pos:start="46:11" pos:end="46:12">+=</operator><literal type="number" pos:start="46:13" pos:end="46:13">8</literal></expr>;</expr_stmt>
        <for pos:start="47:9" pos:end="49:9">for<control pos:start="47:12" pos:end="47:32">(<init pos:start="47:13" pos:end="47:22"><decl pos:start="47:13" pos:end="47:21"><type pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:15">int</name></type> <name pos:start="47:17" pos:end="47:17">j</name><init pos:start="47:18" pos:end="47:21">=<expr pos:start="47:19" pos:end="47:21"><name pos:start="47:19" pos:end="47:19">i</name><operator pos:start="47:20" pos:end="47:20">+</operator><literal type="number" pos:start="47:21" pos:end="47:21">1</literal></expr></init></decl>;</init><condition pos:start="47:23" pos:end="47:28"><expr pos:start="47:23" pos:end="47:27"><name pos:start="47:23" pos:end="47:23">j</name><operator pos:start="47:24" pos:end="47:24">&lt;</operator><name pos:start="47:25" pos:end="47:25">i</name><operator pos:start="47:26" pos:end="47:26">+</operator><literal type="number" pos:start="47:27" pos:end="47:27">8</literal></expr>;</condition><incr pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><operator pos:start="47:29" pos:end="47:30">++</operator><name pos:start="47:31" pos:end="47:31">j</name></expr></incr>)</control><block pos:start="47:33" pos:end="49:9">{<block_content pos:start="48:11" pos:end="48:33">
          <expr_stmt pos:start="48:11" pos:end="48:33"><expr pos:start="48:11" pos:end="48:32"><name pos:start="48:11" pos:end="48:14">tmp2</name><operator pos:start="48:15" pos:end="48:15">=</operator><name pos:start="48:16" pos:end="48:19">tmp2</name><operator pos:start="48:20" pos:end="48:20">*</operator><literal type="number" pos:start="48:21" pos:end="48:22">7</literal><operator pos:start="48:22" pos:end="48:22">+</operator><operator pos:start="48:23" pos:end="48:23">(</operator><name pos:start="48:24" pos:end="48:27"><name pos:start="48:24" pos:end="48:24">s</name><index pos:start="48:25" pos:end="48:27">[<expr pos:start="48:26" pos:end="48:26"><name pos:start="48:26" pos:end="48:26">j</name></expr>]</index></name><operator pos:start="48:28" pos:end="48:28">-</operator><literal type="char" pos:start="48:29" pos:end="48:31">'0'</literal><operator pos:start="48:32" pos:end="48:32">)</operator></expr>;</expr_stmt>
        </block_content>}</block></for><expr_stmt pos:start="49:10" pos:end="49:42"><expr pos:start="49:10" pos:end="49:41"><call pos:start="49:10" pos:end="49:41"><name pos:start="49:10" pos:end="49:15">printf</name><argument_list pos:start="49:16" pos:end="49:41">(<argument pos:start="49:17" pos:end="49:20"><expr pos:start="49:17" pos:end="49:20"><literal type="string" pos:start="49:17" pos:end="49:20">"%d"</literal></expr></argument>,<argument pos:start="49:22" pos:end="49:40"><expr pos:start="49:22" pos:end="49:40"><operator pos:start="49:22" pos:end="49:22">(</operator><name pos:start="49:23" pos:end="49:26">tmp1</name><operator pos:start="49:27" pos:end="49:28">&gt;&gt;</operator><literal type="number" pos:start="49:29" pos:end="49:29">1</literal><operator pos:start="49:30" pos:end="49:30">)</operator><operator pos:start="49:31" pos:end="49:31">+</operator><operator pos:start="49:32" pos:end="49:32">(</operator><name pos:start="49:33" pos:end="49:36">tmp2</name><operator pos:start="49:37" pos:end="49:38">&gt;&gt;</operator><literal type="number" pos:start="49:39" pos:end="49:39">1</literal><operator pos:start="49:40" pos:end="49:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
  </block_content>}</block></else></if_stmt><return pos:start="52:4" pos:end="52:12">return <expr pos:start="52:11" pos:end="52:11"><literal type="number" pos:start="52:11" pos:end="52:11">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
