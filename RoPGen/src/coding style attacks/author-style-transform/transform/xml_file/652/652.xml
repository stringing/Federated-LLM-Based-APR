<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/652/652.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:19">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:17">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:17">&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:16">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive><cpp:file pos:start="5:9" pos:end="5:16">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="6:1" pos:end="6:15">#<cpp:directive pos:start="6:2" pos:end="6:8">include</cpp:directive><cpp:file pos:start="6:9" pos:end="6:15">&lt;cmath&gt;</cpp:file></cpp:include>
<using pos:start="7:1" pos:end="7:20">using <namespace pos:start="7:7" pos:end="7:20">namespace <name pos:start="7:17" pos:end="7:19">std</name>;</namespace></using>
<decl_stmt pos:start="8:1" pos:end="8:19"><decl pos:start="8:1" pos:end="8:18"><type pos:start="8:1" pos:end="8:9"><name pos:start="8:1" pos:end="8:3">int</name> <specifier pos:start="8:5" pos:end="8:9">const</specifier></type> <name pos:start="8:11" pos:end="8:11">N</name><init pos:start="8:12" pos:end="8:18">=<expr pos:start="8:13" pos:end="8:18"><literal type="number" pos:start="8:13" pos:end="8:16">1e6</literal><operator pos:start="8:16" pos:end="8:16">+</operator><literal type="number" pos:start="8:17" pos:end="8:18">10</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="9:1" pos:end="9:9"><decl pos:start="9:1" pos:end="9:8"><type pos:start="9:1" pos:end="9:3"><name pos:start="9:1" pos:end="9:3">int</name></type> <name pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:5">a</name><index pos:start="9:6" pos:end="9:8">[<expr pos:start="9:7" pos:end="9:7"><name pos:start="9:7" pos:end="9:7">N</name></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="10:1" pos:end="38:1"><type pos:start="10:1" pos:end="10:3"><name pos:start="10:1" pos:end="10:3">int</name></type> <name pos:start="10:5" pos:end="10:8">main</name><parameter_list pos:start="10:9" pos:end="10:10">()</parameter_list>
<block pos:start="11:1" pos:end="38:1">{<block_content pos:start="12:5" pos:end="37:13">
    <expr_stmt pos:start="12:5" pos:end="12:33"><expr pos:start="12:5" pos:end="12:32"><call pos:start="12:5" pos:end="12:32"><name pos:start="12:5" pos:end="12:11">freopen</name><argument_list pos:start="12:12" pos:end="12:32">(<argument pos:start="12:13" pos:end="12:21"><expr pos:start="12:13" pos:end="12:21"><literal type="string" pos:start="12:13" pos:end="12:21">"ball.in"</literal></expr></argument>,<argument pos:start="12:23" pos:end="12:25"><expr pos:start="12:23" pos:end="12:25"><literal type="string" pos:start="12:23" pos:end="12:25">"r"</literal></expr></argument>,<argument pos:start="12:27" pos:end="12:31"><expr pos:start="12:27" pos:end="12:31"><name pos:start="12:27" pos:end="12:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><call pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:11">freopen</name><argument_list pos:start="13:12" pos:end="13:34">(<argument pos:start="13:13" pos:end="13:22"><expr pos:start="13:13" pos:end="13:22"><literal type="string" pos:start="13:13" pos:end="13:22">"ball.out"</literal></expr></argument>,<argument pos:start="13:24" pos:end="13:26"><expr pos:start="13:24" pos:end="13:26"><literal type="string" pos:start="13:24" pos:end="13:26">"w"</literal></expr></argument>,<argument pos:start="13:28" pos:end="13:33"><expr pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:12"><decl pos:start="14:5" pos:end="14:9"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:9">m</name></decl>,<decl pos:start="14:11" pos:end="14:11"><type ref="prev" pos:start="14:5" pos:end="14:7"/><name pos:start="14:11" pos:end="14:11">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><call pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:9">scanf</name><argument_list pos:start="15:10" pos:end="15:23">(<argument pos:start="15:11" pos:end="15:16"><expr pos:start="15:11" pos:end="15:16"><literal type="string" pos:start="15:11" pos:end="15:16">"%d%d"</literal></expr></argument>,<argument pos:start="15:18" pos:end="15:19"><expr pos:start="15:18" pos:end="15:19"><operator pos:start="15:18" pos:end="15:18">&amp;</operator><name pos:start="15:19" pos:end="15:19">m</name></expr></argument>,<argument pos:start="15:21" pos:end="15:22"><expr pos:start="15:21" pos:end="15:22"><operator pos:start="15:21" pos:end="15:21">&amp;</operator><name pos:start="15:22" pos:end="15:22">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="16:5" pos:end="19:5">for<control pos:start="16:8" pos:end="16:25">(<init pos:start="16:9" pos:end="16:16"><decl pos:start="16:9" pos:end="16:15"><type pos:start="16:9" pos:end="16:11"><name pos:start="16:9" pos:end="16:11">int</name></type> <name pos:start="16:13" pos:end="16:13">i</name><init pos:start="16:14" pos:end="16:15">=<expr pos:start="16:15" pos:end="16:15"><literal type="number" pos:start="16:15" pos:end="16:15">1</literal></expr></init></decl>;</init><condition pos:start="16:17" pos:end="16:21"><expr pos:start="16:17" pos:end="16:20"><name pos:start="16:17" pos:end="16:17">i</name><operator pos:start="16:18" pos:end="16:19">&lt;=</operator><name pos:start="16:20" pos:end="16:20">m</name></expr>;</condition><incr pos:start="16:22" pos:end="16:24"><expr pos:start="16:22" pos:end="16:24"><name pos:start="16:22" pos:end="16:22">i</name><operator pos:start="16:23" pos:end="16:24">++</operator></expr></incr>)</control>
    <block pos:start="17:5" pos:end="19:5">{<block_content pos:start="18:9" pos:end="18:26">
        <expr_stmt pos:start="18:9" pos:end="18:26"><expr pos:start="18:9" pos:end="18:25"><call pos:start="18:9" pos:end="18:25"><name pos:start="18:9" pos:end="18:13">scanf</name><argument_list pos:start="18:14" pos:end="18:25">(<argument pos:start="18:15" pos:end="18:18"><expr pos:start="18:15" pos:end="18:18"><literal type="string" pos:start="18:15" pos:end="18:18">"%d"</literal></expr></argument>,<argument pos:start="18:20" pos:end="18:24"><expr pos:start="18:20" pos:end="18:24"><operator pos:start="18:20" pos:end="18:20">&amp;</operator><name pos:start="18:21" pos:end="18:24"><name pos:start="18:21" pos:end="18:21">a</name><index pos:start="18:22" pos:end="18:24">[<expr pos:start="18:23" pos:end="18:23"><name pos:start="18:23" pos:end="18:23">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="20:5" pos:end="20:20"><expr pos:start="20:5" pos:end="20:19"><call pos:start="20:5" pos:end="20:19"><name pos:start="20:5" pos:end="20:8">sort</name><argument_list pos:start="20:9" pos:end="20:19">(<argument pos:start="20:10" pos:end="20:12"><expr pos:start="20:10" pos:end="20:12"><name pos:start="20:10" pos:end="20:10">a</name><operator pos:start="20:11" pos:end="20:11">+</operator><literal type="number" pos:start="20:12" pos:end="20:12">1</literal></expr></argument>,<argument pos:start="20:14" pos:end="20:18"><expr pos:start="20:14" pos:end="20:18"><name pos:start="20:14" pos:end="20:14">a</name><operator pos:start="20:15" pos:end="20:15">+</operator><literal type="number" pos:start="20:16" pos:end="20:17">1</literal><operator pos:start="20:17" pos:end="20:17">+</operator><name pos:start="20:18" pos:end="20:18">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">string</name></type> <name pos:start="21:12" pos:end="21:12">Y</name><init pos:start="21:13" pos:end="21:18">=<expr pos:start="21:14" pos:end="21:18"><literal type="string" pos:start="21:14" pos:end="21:18">"YES"</literal></expr></init></decl>,<decl pos:start="21:20" pos:end="21:25"><type ref="prev" pos:start="21:5" pos:end="21:10"/><name pos:start="21:20" pos:end="21:20">N</name><init pos:start="21:21" pos:end="21:25">=<expr pos:start="21:22" pos:end="21:25"><literal type="string" pos:start="21:22" pos:end="21:25">"NO"</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="22:5" pos:end="34:5">while<condition pos:start="22:10" pos:end="22:14">(<expr pos:start="22:11" pos:end="22:13"><name pos:start="22:11" pos:end="22:11">n</name><operator pos:start="22:12" pos:end="22:13">--</operator></expr>)</condition>
    <block pos:start="23:5" pos:end="34:5">{<block_content pos:start="24:9" pos:end="33:9">
        <decl_stmt pos:start="24:9" pos:end="24:14"><decl pos:start="24:9" pos:end="24:13"><type pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:11">int</name></type> <name pos:start="24:13" pos:end="24:13">x</name></decl>;</decl_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><call pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:13">scanf</name><argument_list pos:start="25:14" pos:end="25:22">(<argument pos:start="25:15" pos:end="25:18"><expr pos:start="25:15" pos:end="25:18"><literal type="string" pos:start="25:15" pos:end="25:18">"%d"</literal></expr></argument>,<argument pos:start="25:20" pos:end="25:21"><expr pos:start="25:20" pos:end="25:21"><operator pos:start="25:20" pos:end="25:20">&amp;</operator><name pos:start="25:21" pos:end="25:21">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="26:9" pos:end="33:9"><if pos:start="26:9" pos:end="29:9">if<condition pos:start="26:11" pos:end="26:38">(<expr pos:start="26:12" pos:end="26:37"><call pos:start="26:12" pos:end="26:37"><name pos:start="26:12" pos:end="26:24">binary_search</name><argument_list pos:start="26:25" pos:end="26:37">(<argument pos:start="26:26" pos:end="26:28"><expr pos:start="26:26" pos:end="26:28"><name pos:start="26:26" pos:end="26:26">a</name><operator pos:start="26:27" pos:end="26:27">+</operator><literal type="number" pos:start="26:28" pos:end="26:28">1</literal></expr></argument>,<argument pos:start="26:30" pos:end="26:34"><expr pos:start="26:30" pos:end="26:34"><name pos:start="26:30" pos:end="26:30">a</name><operator pos:start="26:31" pos:end="26:31">+</operator><literal type="number" pos:start="26:32" pos:end="26:33">1</literal><operator pos:start="26:33" pos:end="26:33">+</operator><name pos:start="26:34" pos:end="26:34">n</name></expr></argument>,<argument pos:start="26:36" pos:end="26:36"><expr pos:start="26:36" pos:end="26:36"><name pos:start="26:36" pos:end="26:36">x</name></expr></argument>)</argument_list></call></expr>)</condition>
        <block pos:start="27:9" pos:end="29:9">{<block_content pos:start="28:13" pos:end="28:29">
            <expr_stmt pos:start="28:13" pos:end="28:29"><expr pos:start="28:13" pos:end="28:28"><call pos:start="28:13" pos:end="28:28"><name pos:start="28:13" pos:end="28:18">printf</name><argument_list pos:start="28:19" pos:end="28:28">(<argument pos:start="28:20" pos:end="28:25"><expr pos:start="28:20" pos:end="28:25"><literal type="string" pos:start="28:20" pos:end="28:25">"%s\n"</literal></expr></argument>,<argument pos:start="28:27" pos:end="28:27"><expr pos:start="28:27" pos:end="28:27"><name pos:start="28:27" pos:end="28:27">Y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else pos:start="30:9" pos:end="33:9">else
        <block pos:start="31:9" pos:end="33:9">{<block_content pos:start="32:13" pos:end="32:29">
            <expr_stmt pos:start="32:13" pos:end="32:29"><expr pos:start="32:13" pos:end="32:28"><call pos:start="32:13" pos:end="32:28"><name pos:start="32:13" pos:end="32:18">printf</name><argument_list pos:start="32:19" pos:end="32:28">(<argument pos:start="32:20" pos:end="32:25"><expr pos:start="32:20" pos:end="32:25"><literal type="string" pos:start="32:20" pos:end="32:25">"%s\n"</literal></expr></argument>,<argument pos:start="32:27" pos:end="32:27"><expr pos:start="32:27" pos:end="32:27"><name pos:start="32:27" pos:end="32:27">N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="35:5" pos:end="35:18"><expr pos:start="35:5" pos:end="35:17"><call pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:10">fclose</name><argument_list pos:start="35:11" pos:end="35:17">(<argument pos:start="35:12" pos:end="35:16"><expr pos:start="35:12" pos:end="35:16"><name pos:start="35:12" pos:end="35:16">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:19"><expr pos:start="36:5" pos:end="36:18"><call pos:start="36:5" pos:end="36:18"><name pos:start="36:5" pos:end="36:10">fclose</name><argument_list pos:start="36:11" pos:end="36:18">(<argument pos:start="36:12" pos:end="36:17"><expr pos:start="36:12" pos:end="36:17"><name pos:start="36:12" pos:end="36:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>
</block_content>}</block></function>


</unit>
