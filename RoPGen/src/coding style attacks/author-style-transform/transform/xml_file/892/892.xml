<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/892/892.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="35:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="35:1">{<block_content pos:start="5:5" pos:end="34:13">
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:13"><expr pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:7">cin</name> <operator pos:start="6:9" pos:end="6:10">&gt;&gt;</operator> <name pos:start="6:12" pos:end="6:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">string</name></type> <name pos:start="7:12" pos:end="7:17"><name pos:start="7:12" pos:end="7:12">q</name><index pos:start="7:13" pos:end="7:17">[<expr pos:start="7:14" pos:end="7:16"><literal type="number" pos:start="7:14" pos:end="7:16">105</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:21"><decl pos:start="8:5" pos:end="8:13"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">l</name> <init pos:start="8:11" pos:end="8:13">= <expr pos:start="8:13" pos:end="8:13"><literal type="number" pos:start="8:13" pos:end="8:13">0</literal></expr></init></decl>, <decl pos:start="8:16" pos:end="8:20"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:16" pos:end="8:16">r</name> <init pos:start="8:18" pos:end="8:20">= <expr pos:start="8:20" pos:end="8:20"><literal type="number" pos:start="8:20" pos:end="8:20">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="9:5" pos:end="33:5">while <condition pos:start="9:11" pos:end="9:15">(<expr pos:start="9:12" pos:end="9:14"><name pos:start="9:12" pos:end="9:12">n</name><operator pos:start="9:13" pos:end="9:14">--</operator></expr>)</condition> <block pos:start="9:17" pos:end="33:5">{<block_content pos:start="10:9" pos:end="32:9">
        <decl_stmt pos:start="10:9" pos:end="10:14"><decl pos:start="10:9" pos:end="10:13"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">k</name></decl>;</decl_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:17"><expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:11">cin</name> <operator pos:start="11:13" pos:end="11:14">&gt;&gt;</operator> <name pos:start="11:16" pos:end="11:16">k</name></expr>;</expr_stmt>
        <if_stmt pos:start="12:9" pos:end="32:9"><if pos:start="12:9" pos:end="30:9">if <condition pos:start="12:12" pos:end="12:19">(<expr pos:start="12:13" pos:end="12:18"><name pos:start="12:13" pos:end="12:13">k</name> <operator pos:start="12:15" pos:end="12:16">==</operator> <literal type="number" pos:start="12:18" pos:end="12:18">1</literal></expr>)</condition> <block pos:start="12:21" pos:end="30:9">{<block_content pos:start="13:13" pos:end="29:16">
            <decl_stmt pos:start="13:13" pos:end="13:24"><decl pos:start="13:13" pos:end="13:23"><type pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:18">string</name></type> <name pos:start="13:20" pos:end="13:23">name</name></decl>;</decl_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:24"><expr pos:start="14:13" pos:end="14:23"><name pos:start="14:13" pos:end="14:15">cin</name> <operator pos:start="14:17" pos:end="14:18">&gt;&gt;</operator> <name pos:start="14:20" pos:end="14:23">name</name></expr>;</expr_stmt>
            <decl_stmt pos:start="15:13" pos:end="15:26"><decl pos:start="15:13" pos:end="15:25"><type pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:16">bool</name></type> <name pos:start="15:18" pos:end="15:21">flag</name> <init pos:start="15:23" pos:end="15:25">= <expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="16:13" pos:end="25:13">for <control pos:start="16:17" pos:end="16:39">(<init pos:start="16:18" pos:end="16:27"><decl pos:start="16:18" pos:end="16:26"><type pos:start="16:18" pos:end="16:20"><name pos:start="16:18" pos:end="16:20">int</name></type> <name pos:start="16:22" pos:end="16:22">i</name> <init pos:start="16:24" pos:end="16:26">= <expr pos:start="16:26" pos:end="16:26"><name pos:start="16:26" pos:end="16:26">l</name></expr></init></decl>;</init> <condition pos:start="16:29" pos:end="16:34"><expr pos:start="16:29" pos:end="16:33"><name pos:start="16:29" pos:end="16:29">i</name> <operator pos:start="16:31" pos:end="16:31">&lt;</operator> <name pos:start="16:33" pos:end="16:33">r</name></expr>;</condition> <incr pos:start="16:36" pos:end="16:38"><expr pos:start="16:36" pos:end="16:38"><name pos:start="16:36" pos:end="16:36">i</name><operator pos:start="16:37" pos:end="16:38">++</operator></expr></incr>)</control> <block pos:start="16:41" pos:end="25:13">{<block_content pos:start="17:17" pos:end="24:17">
                <if_stmt pos:start="17:17" pos:end="24:17"><if pos:start="17:17" pos:end="24:17">if <condition pos:start="17:20" pos:end="17:33">(<expr pos:start="17:21" pos:end="17:32"><name pos:start="17:21" pos:end="17:24"><name pos:start="17:21" pos:end="17:21">q</name><index pos:start="17:22" pos:end="17:24">[<expr pos:start="17:23" pos:end="17:23"><name pos:start="17:23" pos:end="17:23">i</name></expr>]</index></name> <operator pos:start="17:26" pos:end="17:27">==</operator> <name pos:start="17:29" pos:end="17:32">name</name></expr>)</condition> <block pos:start="17:35" pos:end="24:17">{<block_content pos:start="18:21" pos:end="23:26">
                    <for pos:start="18:21" pos:end="20:21">for <control pos:start="18:25" pos:end="18:51">(<init pos:start="18:26" pos:end="18:35"><decl pos:start="18:26" pos:end="18:34"><type pos:start="18:26" pos:end="18:28"><name pos:start="18:26" pos:end="18:28">int</name></type> <name pos:start="18:30" pos:end="18:30">j</name> <init pos:start="18:32" pos:end="18:34">= <expr pos:start="18:34" pos:end="18:34"><name pos:start="18:34" pos:end="18:34">r</name></expr></init></decl>;</init> <condition pos:start="18:37" pos:end="18:46"><expr pos:start="18:37" pos:end="18:45"><name pos:start="18:37" pos:end="18:37">j</name> <operator pos:start="18:39" pos:end="18:39">&gt;</operator> <name pos:start="18:41" pos:end="18:41">i</name> <operator pos:start="18:43" pos:end="18:43">+</operator> <literal type="number" pos:start="18:45" pos:end="18:45">1</literal></expr>;</condition> <incr pos:start="18:48" pos:end="18:50"><expr pos:start="18:48" pos:end="18:50"><name pos:start="18:48" pos:end="18:48">j</name><operator pos:start="18:49" pos:end="18:50">--</operator></expr></incr>)</control> <block pos:start="18:53" pos:end="20:21">{<block_content pos:start="19:25" pos:end="19:40">
                        <expr_stmt pos:start="19:25" pos:end="19:40"><expr pos:start="19:25" pos:end="19:39"><name pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:25">q</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><name pos:start="19:27" pos:end="19:27">j</name></expr>]</index></name> <operator pos:start="19:30" pos:end="19:30">=</operator> <name pos:start="19:32" pos:end="19:39"><name pos:start="19:32" pos:end="19:32">q</name><index pos:start="19:33" pos:end="19:39">[<expr pos:start="19:34" pos:end="19:38"><name pos:start="19:34" pos:end="19:34">j</name> <operator pos:start="19:36" pos:end="19:36">-</operator> <literal type="number" pos:start="19:38" pos:end="19:38">1</literal></expr>]</index></name></expr>;</expr_stmt>
                    </block_content>}</block></for>
                    <expr_stmt pos:start="21:21" pos:end="21:36"><expr pos:start="21:21" pos:end="21:35"><name pos:start="21:21" pos:end="21:28"><name pos:start="21:21" pos:end="21:21">q</name><index pos:start="21:22" pos:end="21:28">[<expr pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:23">i</name> <operator pos:start="21:25" pos:end="21:25">+</operator> <literal type="number" pos:start="21:27" pos:end="21:27">1</literal></expr>]</index></name> <operator pos:start="21:30" pos:end="21:30">=</operator> <name pos:start="21:32" pos:end="21:35">name</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="22:21" pos:end="22:29"><expr pos:start="22:21" pos:end="22:28"><name pos:start="22:21" pos:end="22:24">flag</name> <operator pos:start="22:26" pos:end="22:26">=</operator> <literal type="number" pos:start="22:28" pos:end="22:28">1</literal></expr>;</expr_stmt>
                    <break pos:start="23:21" pos:end="23:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="26:13" pos:end="28:13"><if pos:start="26:13" pos:end="28:13">if <condition pos:start="26:16" pos:end="26:22">(<expr pos:start="26:17" pos:end="26:21"><operator pos:start="26:17" pos:end="26:17">!</operator><name pos:start="26:18" pos:end="26:21">flag</name></expr>)</condition> <block pos:start="26:24" pos:end="28:13">{<block_content pos:start="27:17" pos:end="27:28">
                <expr_stmt pos:start="27:17" pos:end="27:28"><expr pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:20"><name pos:start="27:17" pos:end="27:17">q</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><name pos:start="27:19" pos:end="27:19">r</name></expr>]</index></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:27">name</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="29:13" pos:end="29:16"><expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:13">r</name><operator pos:start="29:14" pos:end="29:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="30:11" pos:end="32:9">else <block pos:start="30:16" pos:end="32:9">{<block_content pos:start="31:13" pos:end="31:20">
            <expr_stmt pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:19"><call pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:17"><name pos:start="31:13" pos:end="31:13">q</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:17">pop</name></name><argument_list pos:start="31:18" pos:end="31:19">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <return pos:start="34:5" pos:end="34:13">return <expr pos:start="34:12" pos:end="34:12"><literal type="number" pos:start="34:12" pos:end="34:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
