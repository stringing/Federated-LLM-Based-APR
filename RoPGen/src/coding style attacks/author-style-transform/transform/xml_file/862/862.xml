<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/862/862.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:12"><decl pos:start="3:1" pos:end="3:11"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">tag</name> <init pos:start="3:9" pos:end="3:11">= <expr pos:start="3:11" pos:end="3:11"><literal type="number" pos:start="3:11" pos:end="3:11">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:14"><decl pos:start="4:1" pos:end="4:13"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:13"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:13">[<expr pos:start="4:7" pos:end="4:12"><literal type="number" pos:start="4:7" pos:end="4:12">999999</literal></expr>]</index></name></decl>;</decl_stmt>

<function pos:start="6:1" pos:end="13:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">find</name><parameter_list pos:start="6:9" pos:end="6:15">(<parameter pos:start="6:10" pos:end="6:14"><decl pos:start="6:10" pos:end="6:14"><type pos:start="6:10" pos:end="6:12"><name pos:start="6:10" pos:end="6:12">int</name></type> <name pos:start="6:14" pos:end="6:14">x</name></decl></parameter>)</parameter_list> <block pos:start="6:17" pos:end="13:1">{<block_content pos:start="7:5" pos:end="12:13">
    <for pos:start="7:5" pos:end="11:5">for <control pos:start="7:9" pos:end="7:38">(<init pos:start="7:10" pos:end="7:19"><decl pos:start="7:10" pos:end="7:18"><type pos:start="7:10" pos:end="7:12"><name pos:start="7:10" pos:end="7:12">int</name></type> <name pos:start="7:14" pos:end="7:14">i</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">1</literal></expr></init></decl>;</init> <condition pos:start="7:21" pos:end="7:33"><expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">i</name> <operator pos:start="7:23" pos:end="7:24">&lt;=</operator> <name pos:start="7:26" pos:end="7:28">tag</name> <operator pos:start="7:30" pos:end="7:30">-</operator> <literal type="number" pos:start="7:32" pos:end="7:32">1</literal></expr>;</condition> <incr pos:start="7:35" pos:end="7:37"><expr pos:start="7:35" pos:end="7:37"><name pos:start="7:35" pos:end="7:35">i</name><operator pos:start="7:36" pos:end="7:37">++</operator></expr></incr>)</control> <block pos:start="7:40" pos:end="11:5">{<block_content pos:start="8:9" pos:end="10:9">
        <if_stmt pos:start="8:9" pos:end="10:9"><if pos:start="8:9" pos:end="10:9">if <condition pos:start="8:12" pos:end="8:22">(<expr pos:start="8:13" pos:end="8:21"><name pos:start="8:13" pos:end="8:16"><name pos:start="8:13" pos:end="8:13">a</name><index pos:start="8:14" pos:end="8:16">[<expr pos:start="8:15" pos:end="8:15"><name pos:start="8:15" pos:end="8:15">i</name></expr>]</index></name> <operator pos:start="8:18" pos:end="8:19">==</operator> <name pos:start="8:21" pos:end="8:21">x</name></expr>)</condition> <block pos:start="8:24" pos:end="10:9">{<block_content pos:start="9:13" pos:end="9:21">
            <return pos:start="9:13" pos:end="9:21">return <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">1</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="12:5" pos:end="12:13">return <expr pos:start="12:12" pos:end="12:12"><literal type="number" pos:start="12:12" pos:end="12:12">0</literal></expr>;</return>
</block_content>}</block></function>

<function pos:start="15:1" pos:end="28:1"><type pos:start="15:1" pos:end="15:3"><name pos:start="15:1" pos:end="15:3">int</name></type> <name pos:start="15:5" pos:end="15:7">fly</name><parameter_list pos:start="15:8" pos:end="15:14">(<parameter pos:start="15:9" pos:end="15:13"><decl pos:start="15:9" pos:end="15:13"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">y</name></decl></parameter>)</parameter_list> <block pos:start="15:16" pos:end="28:1">{<block_content pos:start="16:5" pos:end="27:5">
    <if_stmt pos:start="16:5" pos:end="19:5"><if pos:start="16:5" pos:end="19:5">if <condition pos:start="16:8" pos:end="16:16">(<expr pos:start="16:9" pos:end="16:15"><call pos:start="16:9" pos:end="16:15"><name pos:start="16:9" pos:end="16:12">find</name><argument_list pos:start="16:13" pos:end="16:15">(<argument pos:start="16:14" pos:end="16:14"><expr pos:start="16:14" pos:end="16:14"><name pos:start="16:14" pos:end="16:14">y</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="16:18" pos:end="19:5">{<block_content pos:start="17:9" pos:end="18:17">
        <expr_stmt pos:start="17:9" pos:end="17:18"><expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:12">cout</name> <operator pos:start="17:14" pos:end="17:15">&lt;&lt;</operator> <name pos:start="17:17" pos:end="17:17">y</name></expr>;</expr_stmt>
        <return pos:start="18:9" pos:end="18:17">return <expr pos:start="18:16" pos:end="18:16"><literal type="number" pos:start="18:16" pos:end="18:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:15"><expr pos:start="20:5" pos:end="20:14"><name pos:start="20:5" pos:end="20:10"><name pos:start="20:5" pos:end="20:5">a</name><index pos:start="20:6" pos:end="20:10">[<expr pos:start="20:7" pos:end="20:9"><name pos:start="20:7" pos:end="20:9">tag</name></expr>]</index></name> <operator pos:start="20:12" pos:end="20:12">=</operator> <name pos:start="20:14" pos:end="20:14">y</name></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:10"><expr pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:7">tag</name><operator pos:start="21:8" pos:end="21:9">++</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:21"><expr pos:start="22:5" pos:end="22:20"><name pos:start="22:5" pos:end="22:8">cout</name> <operator pos:start="22:10" pos:end="22:11">&lt;&lt;</operator> <name pos:start="22:13" pos:end="22:13">y</name> <operator pos:start="22:15" pos:end="22:16">&lt;&lt;</operator> <literal type="string" pos:start="22:18" pos:end="22:20">" "</literal></expr>;</expr_stmt>
    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="25:5">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:9">y</name> <operator pos:start="23:11" pos:end="23:11">%</operator> <literal type="number" pos:start="23:13" pos:end="23:13">2</literal> <operator pos:start="23:15" pos:end="23:16">==</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>)</condition> <block pos:start="23:21" pos:end="25:5">{<block_content pos:start="24:9" pos:end="24:19">
        <expr_stmt pos:start="24:9" pos:end="24:19"><expr pos:start="24:9" pos:end="24:18"><call pos:start="24:9" pos:end="24:18"><name pos:start="24:9" pos:end="24:11">fly</name><argument_list pos:start="24:12" pos:end="24:18">(<argument pos:start="24:13" pos:end="24:17"><expr pos:start="24:13" pos:end="24:17"><name pos:start="24:13" pos:end="24:13">y</name> <operator pos:start="24:15" pos:end="24:15">/</operator> <literal type="number" pos:start="24:17" pos:end="24:17">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="25:7" pos:end="27:5">else <block pos:start="25:12" pos:end="27:5">{<block_content pos:start="26:9" pos:end="26:29">
        <expr_stmt pos:start="26:9" pos:end="26:29"><expr pos:start="26:9" pos:end="26:28"><call pos:start="26:9" pos:end="26:28"><name pos:start="26:9" pos:end="26:11">fly</name><argument_list pos:start="26:12" pos:end="26:28">(<argument pos:start="26:13" pos:end="26:27"><expr pos:start="26:13" pos:end="26:27"><operator pos:start="26:13" pos:end="26:13">(</operator><name pos:start="26:14" pos:end="26:14">y</name> <operator pos:start="26:16" pos:end="26:16">-</operator> <literal type="number" pos:start="26:18" pos:end="26:18">1</literal><operator pos:start="26:19" pos:end="26:19">)</operator> <operator pos:start="26:21" pos:end="26:21">*</operator> <literal type="number" pos:start="26:23" pos:end="26:25">3</literal> <operator pos:start="26:25" pos:end="26:25">+</operator> <literal type="number" pos:start="26:27" pos:end="26:27">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function pos:start="30:1" pos:end="35:1"><type pos:start="30:1" pos:end="30:3"><name pos:start="30:1" pos:end="30:3">int</name></type> <name pos:start="30:5" pos:end="30:8">main</name><parameter_list pos:start="30:9" pos:end="30:10">()</parameter_list> <block pos:start="30:12" pos:end="35:1">{<block_content pos:start="31:5" pos:end="34:13">
    <decl_stmt pos:start="31:5" pos:end="31:10"><decl pos:start="31:5" pos:end="31:9"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:13"><expr pos:start="32:5" pos:end="32:12"><name pos:start="32:5" pos:end="32:7">cin</name> <operator pos:start="32:9" pos:end="32:10">&gt;&gt;</operator> <name pos:start="32:12" pos:end="32:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:11"><expr pos:start="33:5" pos:end="33:10"><call pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:7">fly</name><argument_list pos:start="33:8" pos:end="33:10">(<argument pos:start="33:9" pos:end="33:9"><expr pos:start="33:9" pos:end="33:9"><name pos:start="33:9" pos:end="33:9">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="34:5" pos:end="34:13">return <expr pos:start="34:12" pos:end="34:12"><literal type="number" pos:start="34:12" pos:end="34:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
