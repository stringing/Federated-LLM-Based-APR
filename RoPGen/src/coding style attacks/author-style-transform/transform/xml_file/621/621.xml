<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/621/621.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:25"><decl pos:start="3:1" pos:end="3:24"><type pos:start="3:1" pos:end="3:9"><specifier pos:start="3:1" pos:end="3:5">const</specifier> <name pos:start="3:7" pos:end="3:9">int</name></type> <name pos:start="3:11" pos:end="3:14">MAXN</name> <init pos:start="3:16" pos:end="3:24">= <expr pos:start="3:18" pos:end="3:24"><literal type="number" pos:start="3:18" pos:end="3:22">1e5</literal> <operator pos:start="3:22" pos:end="3:22">+</operator> <literal type="number" pos:start="3:24" pos:end="3:24">5</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:17"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">n</name></decl>, <decl pos:start="4:8" pos:end="4:10"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:8" pos:end="4:10">cnt</name></decl>, <decl pos:start="4:13" pos:end="4:16"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:13" pos:end="4:16">flag</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:19"><decl pos:start="5:1" pos:end="5:13"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:7">ans</name><index pos:start="5:8" pos:end="5:13">[<expr pos:start="5:9" pos:end="5:12"><name pos:start="5:9" pos:end="5:12">MAXN</name></expr>]</index></name></decl>, <decl pos:start="5:16" pos:end="5:18"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:16" pos:end="5:18">tot</name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:22"><decl pos:start="6:1" pos:end="6:21"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">char</name></type> <name pos:start="6:6" pos:end="6:21"><name pos:start="6:6" pos:end="6:9">mapx</name><index pos:start="6:10" pos:end="6:15">[<expr pos:start="6:11" pos:end="6:14"><literal type="number" pos:start="6:11" pos:end="6:14">1005</literal></expr>]</index><index pos:start="6:16" pos:end="6:21">[<expr pos:start="6:17" pos:end="6:20"><literal type="number" pos:start="6:17" pos:end="6:20">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="30:1"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:8">main</name><parameter_list pos:start="7:9" pos:end="7:10">()</parameter_list><block pos:start="7:11" pos:end="30:1">{<block_content pos:start="8:5" pos:end="29:13">
    <expr_stmt pos:start="8:5" pos:end="8:32"><expr pos:start="8:5" pos:end="8:31"><call pos:start="8:5" pos:end="8:31"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:31">(<argument pos:start="8:13" pos:end="8:20"><expr pos:start="8:13" pos:end="8:20"><literal type="string" pos:start="8:13" pos:end="8:20">"zip.in"</literal></expr></argument>,<argument pos:start="8:22" pos:end="8:24"><expr pos:start="8:22" pos:end="8:24"><literal type="string" pos:start="8:22" pos:end="8:24">"r"</literal></expr></argument>,<argument pos:start="8:26" pos:end="8:30"><expr pos:start="8:26" pos:end="8:30"><name pos:start="8:26" pos:end="8:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><call pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:11">freopen</name><argument_list pos:start="9:12" pos:end="9:33">(<argument pos:start="9:13" pos:end="9:21"><expr pos:start="9:13" pos:end="9:21"><literal type="string" pos:start="9:13" pos:end="9:21">"zip.out"</literal></expr></argument>,<argument pos:start="9:23" pos:end="9:25"><expr pos:start="9:23" pos:end="9:25"><literal type="string" pos:start="9:23" pos:end="9:25">"w"</literal></expr></argument>,<argument pos:start="9:27" pos:end="9:32"><expr pos:start="9:27" pos:end="9:32"><name pos:start="9:27" pos:end="9:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:29"><expr pos:start="10:5" pos:end="10:28"><call pos:start="10:5" pos:end="10:28"><name pos:start="10:5" pos:end="10:9">scanf</name><argument_list pos:start="10:10" pos:end="10:28">(<argument pos:start="10:11" pos:end="10:14"><expr pos:start="10:11" pos:end="10:14"><literal type="string" pos:start="10:11" pos:end="10:14">"%s"</literal></expr></argument>, <argument pos:start="10:17" pos:end="10:27"><expr pos:start="10:17" pos:end="10:27"><name pos:start="10:17" pos:end="10:23"><name pos:start="10:17" pos:end="10:20">mapx</name><index pos:start="10:21" pos:end="10:23">[<expr pos:start="10:22" pos:end="10:22"><literal type="number" pos:start="10:22" pos:end="10:22">1</literal></expr>]</index></name> <operator pos:start="10:25" pos:end="10:25">+</operator> <literal type="number" pos:start="10:27" pos:end="10:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:28"><expr pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:5">n</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <call pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:14">strlen</name><argument_list pos:start="11:15" pos:end="11:27">(<argument pos:start="11:16" pos:end="11:26"><expr pos:start="11:16" pos:end="11:26"><name pos:start="11:16" pos:end="11:22"><name pos:start="11:16" pos:end="11:19">mapx</name><index pos:start="11:20" pos:end="11:22">[<expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">1</literal></expr>]</index></name> <operator pos:start="11:24" pos:end="11:24">+</operator> <literal type="number" pos:start="11:26" pos:end="11:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="12:5" pos:end="13:33">for<control pos:start="12:8" pos:end="12:31">(<init pos:start="12:9" pos:end="12:18"><decl pos:start="12:9" pos:end="12:17"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">i</name> <init pos:start="12:15" pos:end="12:17">= <expr pos:start="12:17" pos:end="12:17"><literal type="number" pos:start="12:17" pos:end="12:17">2</literal></expr></init></decl>;</init> <condition pos:start="12:20" pos:end="12:26"><expr pos:start="12:20" pos:end="12:25"><name pos:start="12:20" pos:end="12:20">i</name> <operator pos:start="12:22" pos:end="12:23">&lt;=</operator> <name pos:start="12:25" pos:end="12:25">n</name></expr>;</condition> <incr pos:start="12:28" pos:end="12:30"><expr pos:start="12:28" pos:end="12:30"><name pos:start="12:28" pos:end="12:28">i</name><operator pos:start="12:29" pos:end="12:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="13:9" pos:end="13:33"><block_content pos:start="13:9" pos:end="13:33">
        <expr_stmt pos:start="13:9" pos:end="13:33"><expr pos:start="13:9" pos:end="13:32"><call pos:start="13:9" pos:end="13:32"><name pos:start="13:9" pos:end="13:13">scanf</name><argument_list pos:start="13:14" pos:end="13:32">(<argument pos:start="13:15" pos:end="13:18"><expr pos:start="13:15" pos:end="13:18"><literal type="string" pos:start="13:15" pos:end="13:18">"%s"</literal></expr></argument>, <argument pos:start="13:21" pos:end="13:31"><expr pos:start="13:21" pos:end="13:31"><name pos:start="13:21" pos:end="13:27"><name pos:start="13:21" pos:end="13:24">mapx</name><index pos:start="13:25" pos:end="13:27">[<expr pos:start="13:26" pos:end="13:26"><name pos:start="13:26" pos:end="13:26">i</name></expr>]</index></name> <operator pos:start="13:29" pos:end="13:29">+</operator> <literal type="number" pos:start="13:31" pos:end="13:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="14:5" pos:end="14:13"><expr pos:start="14:5" pos:end="14:12"><name pos:start="14:5" pos:end="14:8">flag</name> <operator pos:start="14:10" pos:end="14:10">=</operator> <literal type="number" pos:start="14:12" pos:end="14:12">0</literal></expr>;</expr_stmt>
    <for pos:start="15:5" pos:end="24:5">for<control pos:start="15:8" pos:end="15:31">(<init pos:start="15:9" pos:end="15:18"><decl pos:start="15:9" pos:end="15:17"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">i</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr></init></decl>;</init> <condition pos:start="15:20" pos:end="15:26"><expr pos:start="15:20" pos:end="15:25"><name pos:start="15:20" pos:end="15:20">i</name> <operator pos:start="15:22" pos:end="15:23">&lt;=</operator> <name pos:start="15:25" pos:end="15:25">n</name></expr>;</condition> <incr pos:start="15:28" pos:end="15:30"><expr pos:start="15:28" pos:end="15:30"><name pos:start="15:28" pos:end="15:28">i</name><operator pos:start="15:29" pos:end="15:30">++</operator></expr></incr>)</control><block pos:start="15:32" pos:end="24:5">{<block_content pos:start="16:9" pos:end="23:9">
        <for pos:start="16:9" pos:end="23:9">for<control pos:start="16:12" pos:end="16:35">(<init pos:start="16:13" pos:end="16:22"><decl pos:start="16:13" pos:end="16:21"><type pos:start="16:13" pos:end="16:15"><name pos:start="16:13" pos:end="16:15">int</name></type> <name pos:start="16:17" pos:end="16:17">j</name> <init pos:start="16:19" pos:end="16:21">= <expr pos:start="16:21" pos:end="16:21"><literal type="number" pos:start="16:21" pos:end="16:21">1</literal></expr></init></decl>;</init> <condition pos:start="16:24" pos:end="16:30"><expr pos:start="16:24" pos:end="16:29"><name pos:start="16:24" pos:end="16:24">j</name> <operator pos:start="16:26" pos:end="16:27">&lt;=</operator> <name pos:start="16:29" pos:end="16:29">n</name></expr>;</condition> <incr pos:start="16:32" pos:end="16:34"><expr pos:start="16:32" pos:end="16:34"><name pos:start="16:32" pos:end="16:32">j</name><operator pos:start="16:33" pos:end="16:34">++</operator></expr></incr>)</control><block pos:start="16:36" pos:end="23:9">{<block_content pos:start="17:13" pos:end="22:13">
            <if_stmt pos:start="17:13" pos:end="22:13"><if pos:start="17:13" pos:end="17:47">if<condition pos:start="17:15" pos:end="17:40">(<expr pos:start="17:16" pos:end="17:39"><name pos:start="17:16" pos:end="17:25"><name pos:start="17:16" pos:end="17:19">mapx</name><index pos:start="17:20" pos:end="17:22">[<expr pos:start="17:21" pos:end="17:21"><name pos:start="17:21" pos:end="17:21">i</name></expr>]</index><index pos:start="17:23" pos:end="17:25">[<expr pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">j</name></expr>]</index></name> <operator pos:start="17:27" pos:end="17:27">-</operator> <literal type="char" pos:start="17:29" pos:end="17:31">'0'</literal> <operator pos:start="17:33" pos:end="17:34">==</operator> <name pos:start="17:36" pos:end="17:39">flag</name></expr>)</condition><block type="pseudo" pos:start="17:42" pos:end="17:47"><block_content pos:start="17:42" pos:end="17:47"> <expr_stmt pos:start="17:42" pos:end="17:47"><expr pos:start="17:42" pos:end="17:46"><name pos:start="17:42" pos:end="17:44">cnt</name><operator pos:start="17:45" pos:end="17:46">++</operator></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="18:13" pos:end="22:13">else<block pos:start="18:17" pos:end="22:13">{<block_content pos:start="19:17" pos:end="21:24">
                <expr_stmt pos:start="19:17" pos:end="19:33"><expr pos:start="19:17" pos:end="19:32"><name pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:19">ans</name><index pos:start="19:20" pos:end="19:26">[<expr pos:start="19:21" pos:end="19:25"><operator pos:start="19:21" pos:end="19:22">++</operator><name pos:start="19:23" pos:end="19:25">tot</name></expr>]</index></name> <operator pos:start="19:28" pos:end="19:28">=</operator> <name pos:start="19:30" pos:end="19:32">cnt</name></expr>;</expr_stmt>
                <expr_stmt pos:start="20:17" pos:end="20:26"><expr pos:start="20:17" pos:end="20:25"><name pos:start="20:17" pos:end="20:20">flag</name> <operator pos:start="20:22" pos:end="20:23">^=</operator> <literal type="number" pos:start="20:25" pos:end="20:25">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="21:17" pos:end="21:24"><expr pos:start="21:17" pos:end="21:23"><name pos:start="21:17" pos:end="21:19">cnt</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <literal type="number" pos:start="21:23" pos:end="21:23">1</literal></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:7">ans</name><index pos:start="25:8" pos:end="25:14">[<expr pos:start="25:9" pos:end="25:13"><operator pos:start="25:9" pos:end="25:10">++</operator><name pos:start="25:11" pos:end="25:13">tot</name></expr>]</index></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:20">cnt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:21"><expr pos:start="26:5" pos:end="26:20"><call pos:start="26:5" pos:end="26:20"><name pos:start="26:5" pos:end="26:10">printf</name><argument_list pos:start="26:11" pos:end="26:20">(<argument pos:start="26:12" pos:end="26:16"><expr pos:start="26:12" pos:end="26:16"><literal type="string" pos:start="26:12" pos:end="26:16">"%d "</literal></expr></argument>,<argument pos:start="26:18" pos:end="26:19"><expr pos:start="26:18" pos:end="26:19"><operator pos:start="26:18" pos:end="26:18">&amp;</operator><name pos:start="26:19" pos:end="26:19">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="27:5" pos:end="28:30">for<control pos:start="27:8" pos:end="27:33">(<init pos:start="27:9" pos:end="27:18"><decl pos:start="27:9" pos:end="27:17"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">i</name> <init pos:start="27:15" pos:end="27:17">= <expr pos:start="27:17" pos:end="27:17"><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr></init></decl>;</init> <condition pos:start="27:20" pos:end="27:28"><expr pos:start="27:20" pos:end="27:27"><name pos:start="27:20" pos:end="27:20">i</name> <operator pos:start="27:22" pos:end="27:23">&lt;=</operator> <name pos:start="27:25" pos:end="27:27">tot</name></expr>;</condition> <incr pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><operator pos:start="27:30" pos:end="27:31">++</operator><name pos:start="27:32" pos:end="27:32">i</name></expr></incr>)</control><block type="pseudo" pos:start="28:9" pos:end="28:30"><block_content pos:start="28:9" pos:end="28:30">
        <expr_stmt pos:start="28:9" pos:end="28:30"><expr pos:start="28:9" pos:end="28:29"><call pos:start="28:9" pos:end="28:29"><name pos:start="28:9" pos:end="28:14">printf</name><argument_list pos:start="28:15" pos:end="28:29">(<argument pos:start="28:16" pos:end="28:20"><expr pos:start="28:16" pos:end="28:20"><literal type="string" pos:start="28:16" pos:end="28:20">"%d "</literal></expr></argument>, <argument pos:start="28:23" pos:end="28:28"><expr pos:start="28:23" pos:end="28:28"><name pos:start="28:23" pos:end="28:28"><name pos:start="28:23" pos:end="28:25">ans</name><index pos:start="28:26" pos:end="28:28">[<expr pos:start="28:27" pos:end="28:27"><name pos:start="28:27" pos:end="28:27">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
