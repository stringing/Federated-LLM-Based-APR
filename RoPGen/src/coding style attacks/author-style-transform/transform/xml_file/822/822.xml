<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/822/822.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="16:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="16:1">{<block_content pos:start="5:5" pos:end="15:13">
    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:8">long</name> <name pos:start="5:10" pos:end="5:13">long</name></type> <name pos:start="5:15" pos:end="5:15">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:35"><expr pos:start="6:5" pos:end="6:34"><call pos:start="6:5" pos:end="6:34"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:34">(<argument pos:start="6:13" pos:end="6:23"><expr pos:start="6:13" pos:end="6:23"><literal type="string" pos:start="6:13" pos:end="6:23">"bigadd.in"</literal></expr></argument>,<argument pos:start="6:25" pos:end="6:27"><expr pos:start="6:25" pos:end="6:27"><literal type="string" pos:start="6:25" pos:end="6:27">"r"</literal></expr></argument>,<argument pos:start="6:29" pos:end="6:33"><expr pos:start="6:29" pos:end="6:33"><name pos:start="6:29" pos:end="6:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:37"><expr pos:start="7:5" pos:end="7:36"><call pos:start="7:5" pos:end="7:36"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:36">(<argument pos:start="7:13" pos:end="7:24"><expr pos:start="7:13" pos:end="7:24"><literal type="string" pos:start="7:13" pos:end="7:24">"bigadd.out"</literal></expr></argument>,<argument pos:start="7:26" pos:end="7:28"><expr pos:start="7:26" pos:end="7:28"><literal type="string" pos:start="7:26" pos:end="7:28">"w"</literal></expr></argument>,<argument pos:start="7:30" pos:end="7:35"><expr pos:start="7:30" pos:end="7:35"><name pos:start="7:30" pos:end="7:35">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:11"><expr pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:10">n</name></expr>;</expr_stmt>
    <if_stmt pos:start="9:5" pos:end="14:5"><if pos:start="9:5" pos:end="11:5">if<condition pos:start="9:7" pos:end="9:29">(<expr pos:start="9:8" pos:end="9:28"><name pos:start="9:8" pos:end="9:8">n</name><operator pos:start="9:9" pos:end="9:9">&lt;</operator><literal type="number" pos:start="9:10" pos:end="9:28">1000000000000000000</literal></expr>)</condition><block pos:start="9:30" pos:end="11:5">{<block_content pos:start="10:9" pos:end="10:27">
        <expr_stmt pos:start="10:9" pos:end="10:27"><expr pos:start="10:9" pos:end="10:26"><name pos:start="10:9" pos:end="10:12">cout</name><operator pos:start="10:13" pos:end="10:14">&lt;&lt;</operator><name pos:start="10:15" pos:end="10:15">n</name><operator pos:start="10:16" pos:end="10:16">+</operator><literal type="number" pos:start="10:17" pos:end="10:20">2018</literal><operator pos:start="10:21" pos:end="10:22">&lt;&lt;</operator><name pos:start="10:23" pos:end="10:26">endl</name></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="11:6" pos:end="14:5">else<block pos:start="11:10" pos:end="14:5">{<block_content pos:start="12:9" pos:end="13:16">
        <decl_stmt pos:start="12:9" pos:end="12:40"><decl pos:start="12:9" pos:end="12:39"><type pos:start="12:9" pos:end="12:17"><name pos:start="12:9" pos:end="12:12">long</name> <name pos:start="12:14" pos:end="12:17">long</name></type> <name pos:start="12:19" pos:end="12:19">a</name><init pos:start="12:20" pos:end="12:39">=<expr pos:start="12:21" pos:end="12:39"><literal type="number" pos:start="12:21" pos:end="12:39">9223372036854777825</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:16"><expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:12">cout</name><operator pos:start="13:13" pos:end="13:14">&lt;&lt;</operator><name pos:start="13:15" pos:end="13:15">a</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return pos:start="15:5" pos:end="15:13">return <expr pos:start="15:12" pos:end="15:12"><literal type="number" pos:start="15:12" pos:end="15:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
