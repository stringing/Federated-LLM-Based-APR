<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/553/553.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:21"><decl pos:start="3:1" pos:end="3:20"><type pos:start="3:1" pos:end="3:12"><name pos:start="3:1" pos:end="3:12"><name pos:start="3:1" pos:end="3:6">vector</name> <argument_list type="generic" pos:start="3:8" pos:end="3:12">&lt;<argument pos:start="3:9" pos:end="3:11"><expr pos:start="3:9" pos:end="3:11"><name pos:start="3:9" pos:end="3:11">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="3:14" pos:end="3:20"><name pos:start="3:14" pos:end="3:14">G</name><index pos:start="3:15" pos:end="3:20">[<expr pos:start="3:16" pos:end="3:19"><literal type="number" pos:start="3:16" pos:end="3:19">1001</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:13"><decl pos:start="4:1" pos:end="4:12"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:12"><name pos:start="4:5" pos:end="4:6">fa</name><index pos:start="4:7" pos:end="4:12">[<expr pos:start="4:8" pos:end="4:11"><literal type="number" pos:start="4:8" pos:end="4:11">1001</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="40:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list><block pos:start="5:11" pos:end="40:1">{<block_content pos:start="6:5" pos:end="39:13">
    <expr_stmt pos:start="6:5" pos:end="6:30"><expr pos:start="6:5" pos:end="6:29"><call pos:start="6:5" pos:end="6:29"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:29">(<argument pos:start="6:13" pos:end="6:18"><expr pos:start="6:13" pos:end="6:18"><literal type="string" pos:start="6:13" pos:end="6:18">"p.in"</literal></expr></argument>,<argument pos:start="6:20" pos:end="6:22"><expr pos:start="6:20" pos:end="6:22"><literal type="string" pos:start="6:20" pos:end="6:22">"r"</literal></expr></argument>,<argument pos:start="6:24" pos:end="6:28"><expr pos:start="6:24" pos:end="6:28"><name pos:start="6:24" pos:end="6:28">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><call pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:31">(<argument pos:start="7:13" pos:end="7:19"><expr pos:start="7:13" pos:end="7:19"><literal type="string" pos:start="7:13" pos:end="7:19">"p.out"</literal></expr></argument>,<argument pos:start="7:21" pos:end="7:23"><expr pos:start="7:21" pos:end="7:23"><literal type="string" pos:start="7:21" pos:end="7:23">"w"</literal></expr></argument>,<argument pos:start="7:25" pos:end="7:30"><expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:10"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:11"><expr pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:7">cin</name><operator pos:start="9:8" pos:end="9:9">&gt;&gt;</operator><name pos:start="9:10" pos:end="9:10">t</name></expr>;</expr_stmt>
    <while pos:start="10:5" pos:end="38:5">while<condition pos:start="10:10" pos:end="10:14">(<expr pos:start="10:11" pos:end="10:13"><name pos:start="10:11" pos:end="10:11">t</name><operator pos:start="10:12" pos:end="10:13">--</operator></expr>)</condition><block pos:start="10:15" pos:end="38:5">{<block_content pos:start="11:9" pos:end="37:9">
        <decl_stmt pos:start="11:9" pos:end="11:14"><decl pos:start="11:9" pos:end="11:13"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">n</name></decl>;</decl_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:15"><expr pos:start="12:9" pos:end="12:14"><name pos:start="12:9" pos:end="12:11">cin</name><operator pos:start="12:12" pos:end="12:13">&gt;&gt;</operator><name pos:start="12:14" pos:end="12:14">n</name></expr>;</expr_stmt>
        <for pos:start="13:9" pos:end="19:9">for<control pos:start="13:12" pos:end="13:30">(<init pos:start="13:13" pos:end="13:20"><decl pos:start="13:13" pos:end="13:19"><type pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:15">int</name></type> <name pos:start="13:17" pos:end="13:17">i</name><init pos:start="13:18" pos:end="13:19">=<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr></init></decl>;</init><condition pos:start="13:21" pos:end="13:26"><expr pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:21">i</name><operator pos:start="13:22" pos:end="13:22">&lt;</operator><name pos:start="13:23" pos:end="13:23">n</name><operator pos:start="13:24" pos:end="13:24">-</operator><literal type="number" pos:start="13:25" pos:end="13:25">1</literal></expr>;</condition><incr pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:27">i</name><operator pos:start="13:28" pos:end="13:29">++</operator></expr></incr>)</control><block pos:start="13:31" pos:end="19:9">{<block_content pos:start="14:13" pos:end="18:20">
            <expr_stmt pos:start="14:13" pos:end="14:19"><expr pos:start="14:13" pos:end="14:18"><name pos:start="14:13" pos:end="14:15">cin</name><operator pos:start="14:16" pos:end="14:17">&gt;&gt;</operator><name pos:start="14:18" pos:end="14:18">n</name></expr>;</expr_stmt>
            <decl_stmt pos:start="15:13" pos:end="15:20"><decl pos:start="15:13" pos:end="15:17"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:17">x</name></decl>,<decl pos:start="15:19" pos:end="15:19"><type ref="prev" pos:start="15:13" pos:end="15:15"/><name pos:start="15:19" pos:end="15:19">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:22"><expr pos:start="16:13" pos:end="16:21"><name pos:start="16:13" pos:end="16:15">cin</name><operator pos:start="16:16" pos:end="16:17">&gt;&gt;</operator><name pos:start="16:18" pos:end="16:18">x</name><operator pos:start="16:19" pos:end="16:20">&gt;&gt;</operator><name pos:start="16:21" pos:end="16:21">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:30"><expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:13">G</name><index pos:start="17:14" pos:end="17:16">[<expr pos:start="17:15" pos:end="17:15"><name pos:start="17:15" pos:end="17:15">x</name></expr>]</index></name><operator pos:start="17:17" pos:end="17:17">.</operator><call pos:start="17:18" pos:end="17:29"><name pos:start="17:18" pos:end="17:26">push_back</name><argument_list pos:start="17:27" pos:end="17:29">(<argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:20"><expr pos:start="18:13" pos:end="18:19"><name pos:start="18:13" pos:end="18:17"><name pos:start="18:13" pos:end="18:14">fa</name><index pos:start="18:15" pos:end="18:17">[<expr pos:start="18:16" pos:end="18:16"><name pos:start="18:16" pos:end="18:16">y</name></expr>]</index></name><operator pos:start="18:18" pos:end="18:18">=</operator><name pos:start="18:19" pos:end="18:19">x</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="20:9" pos:end="20:18"><decl pos:start="20:9" pos:end="20:17"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:15">ans</name><init pos:start="20:16" pos:end="20:17">=<expr pos:start="20:17" pos:end="20:17"><literal type="number" pos:start="20:17" pos:end="20:17">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="21:9" pos:end="32:9">for<control pos:start="21:12" pos:end="21:29">(<init pos:start="21:13" pos:end="21:20"><decl pos:start="21:13" pos:end="21:19"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:17">i</name><init pos:start="21:18" pos:end="21:19">=<expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">1</literal></expr></init></decl>;</init><condition pos:start="21:21" pos:end="21:25"><expr pos:start="21:21" pos:end="21:24"><name pos:start="21:21" pos:end="21:21">i</name><operator pos:start="21:22" pos:end="21:23">&lt;=</operator><name pos:start="21:24" pos:end="21:24">n</name></expr>;</condition><incr pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:26">i</name><operator pos:start="21:27" pos:end="21:28">++</operator></expr></incr>)</control><block pos:start="21:30" pos:end="32:9">{<block_content pos:start="22:13" pos:end="31:13">
            <decl_stmt pos:start="22:13" pos:end="22:27"><decl pos:start="22:13" pos:end="22:26"><type pos:start="22:13" pos:end="22:16"><name pos:start="22:13" pos:end="22:16">bool</name></type> <name pos:start="22:18" pos:end="22:21">flag</name><init pos:start="22:22" pos:end="22:26">=<expr pos:start="22:23" pos:end="22:26"><literal type="boolean" pos:start="22:23" pos:end="22:26">true</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="23:13" pos:end="28:13">for<control pos:start="23:16" pos:end="23:42">(<init pos:start="23:17" pos:end="23:24"><decl pos:start="23:17" pos:end="23:23"><type pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:19">int</name></type> <name pos:start="23:21" pos:end="23:21">j</name><init pos:start="23:22" pos:end="23:23">=<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr></init></decl>;</init><condition pos:start="23:25" pos:end="23:38"><expr pos:start="23:25" pos:end="23:37"><name pos:start="23:25" pos:end="23:25">j</name><operator pos:start="23:26" pos:end="23:26">&lt;</operator><name pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:27">G</name><index pos:start="23:28" pos:end="23:30">[<expr pos:start="23:29" pos:end="23:29"><name pos:start="23:29" pos:end="23:29">i</name></expr>]</index></name><operator pos:start="23:31" pos:end="23:31">.</operator><call pos:start="23:32" pos:end="23:37"><name pos:start="23:32" pos:end="23:35">size</name><argument_list pos:start="23:36" pos:end="23:37">()</argument_list></call></expr>;</condition><incr pos:start="23:39" pos:end="23:41"><expr pos:start="23:39" pos:end="23:41"><name pos:start="23:39" pos:end="23:39">j</name><operator pos:start="23:40" pos:end="23:41">++</operator></expr></incr>)</control><block pos:start="23:43" pos:end="28:13">{<block_content pos:start="24:17" pos:end="27:17">
                <if_stmt pos:start="24:17" pos:end="27:17"><if pos:start="24:17" pos:end="27:17">if<condition pos:start="24:19" pos:end="24:49">(<expr pos:start="24:20" pos:end="24:48"><name pos:start="24:20" pos:end="24:23"><name pos:start="24:20" pos:end="24:20">G</name><index pos:start="24:21" pos:end="24:23">[<expr pos:start="24:22" pos:end="24:22"><name pos:start="24:22" pos:end="24:22">i</name></expr>]</index></name><operator pos:start="24:24" pos:end="24:24">.</operator><call pos:start="24:25" pos:end="24:30"><name pos:start="24:25" pos:end="24:28">size</name><argument_list pos:start="24:29" pos:end="24:30">()</argument_list></call><operator pos:start="24:31" pos:end="24:31">&lt;</operator><name pos:start="24:32" pos:end="24:41"><name pos:start="24:32" pos:end="24:32">G</name><index pos:start="24:33" pos:end="24:41">[<expr pos:start="24:34" pos:end="24:40"><name pos:start="24:34" pos:end="24:40"><name pos:start="24:34" pos:end="24:34">G</name><index pos:start="24:35" pos:end="24:37">[<expr pos:start="24:36" pos:end="24:36"><name pos:start="24:36" pos:end="24:36">i</name></expr>]</index><index pos:start="24:38" pos:end="24:40">[<expr pos:start="24:39" pos:end="24:39"><name pos:start="24:39" pos:end="24:39">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="24:42" pos:end="24:42">.</operator><call pos:start="24:43" pos:end="24:48"><name pos:start="24:43" pos:end="24:46">size</name><argument_list pos:start="24:47" pos:end="24:48">()</argument_list></call></expr>)</condition><block pos:start="24:50" pos:end="27:17">{<block_content pos:start="25:21" pos:end="26:26">
                    <expr_stmt pos:start="25:21" pos:end="25:31"><expr pos:start="25:21" pos:end="25:30"><name pos:start="25:21" pos:end="25:24">flag</name><operator pos:start="25:25" pos:end="25:25">=</operator><literal type="boolean" pos:start="25:26" pos:end="25:30">false</literal></expr>;</expr_stmt>
                    <break pos:start="26:21" pos:end="26:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="29:13" pos:end="31:13"><if pos:start="29:13" pos:end="31:13">if<condition pos:start="29:15" pos:end="29:50">(<expr pos:start="29:16" pos:end="29:49"><name pos:start="29:16" pos:end="29:19">flag</name><operator pos:start="29:20" pos:end="29:21">&amp;&amp;</operator><name pos:start="29:22" pos:end="29:25"><name pos:start="29:22" pos:end="29:22">G</name><index pos:start="29:23" pos:end="29:25">[<expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">i</name></expr>]</index></name><operator pos:start="29:26" pos:end="29:26">.</operator><call pos:start="29:27" pos:end="29:32"><name pos:start="29:27" pos:end="29:30">size</name><argument_list pos:start="29:31" pos:end="29:32">()</argument_list></call><operator pos:start="29:33" pos:end="29:34">&lt;=</operator><name pos:start="29:35" pos:end="29:42"><name pos:start="29:35" pos:end="29:35">G</name><index pos:start="29:36" pos:end="29:42">[<expr pos:start="29:37" pos:end="29:41"><name pos:start="29:37" pos:end="29:41"><name pos:start="29:37" pos:end="29:38">fa</name><index pos:start="29:39" pos:end="29:41">[<expr pos:start="29:40" pos:end="29:40"><name pos:start="29:40" pos:end="29:40">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="29:43" pos:end="29:43">.</operator><call pos:start="29:44" pos:end="29:49"><name pos:start="29:44" pos:end="29:47">size</name><argument_list pos:start="29:48" pos:end="29:49">()</argument_list></call></expr>)</condition><block pos:start="29:51" pos:end="31:13">{<block_content pos:start="30:17" pos:end="30:22">
                <expr_stmt pos:start="30:17" pos:end="30:22"><expr pos:start="30:17" pos:end="30:21"><name pos:start="30:17" pos:end="30:19">ans</name><operator pos:start="30:20" pos:end="30:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="33:9" pos:end="33:24"><expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:12">cout</name><operator pos:start="33:13" pos:end="33:14">&lt;&lt;</operator><name pos:start="33:15" pos:end="33:17">ans</name><operator pos:start="33:18" pos:end="33:19">&lt;&lt;</operator><name pos:start="33:20" pos:end="33:23">endl</name></expr>;</expr_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:32"><expr pos:start="34:9" pos:end="34:31"><call pos:start="34:9" pos:end="34:31"><name pos:start="34:9" pos:end="34:14">memset</name><argument_list pos:start="34:15" pos:end="34:31">(<argument pos:start="34:16" pos:end="34:17"><expr pos:start="34:16" pos:end="34:17"><name pos:start="34:16" pos:end="34:17">fa</name></expr></argument>,<argument pos:start="34:19" pos:end="34:19"><expr pos:start="34:19" pos:end="34:19"><literal type="number" pos:start="34:19" pos:end="34:19">0</literal></expr></argument>,<argument pos:start="34:21" pos:end="34:30"><expr pos:start="34:21" pos:end="34:30"><sizeof pos:start="34:21" pos:end="34:30">sizeof<argument_list pos:start="34:27" pos:end="34:30">(<argument pos:start="34:28" pos:end="34:29"><expr pos:start="34:28" pos:end="34:29"><name pos:start="34:28" pos:end="34:29">fa</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="35:9" pos:end="37:9">for<control pos:start="35:12" pos:end="35:29">(<init pos:start="35:13" pos:end="35:20"><decl pos:start="35:13" pos:end="35:19"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:17">i</name><init pos:start="35:18" pos:end="35:19">=<expr pos:start="35:19" pos:end="35:19"><literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr></init></decl>;</init><condition pos:start="35:21" pos:end="35:25"><expr pos:start="35:21" pos:end="35:24"><name pos:start="35:21" pos:end="35:21">i</name><operator pos:start="35:22" pos:end="35:23">&lt;=</operator><name pos:start="35:24" pos:end="35:24">n</name></expr>;</condition><incr pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><name pos:start="35:26" pos:end="35:26">i</name><operator pos:start="35:27" pos:end="35:28">++</operator></expr></incr>)</control><block pos:start="35:30" pos:end="37:9">{<block_content pos:start="36:13" pos:end="36:37">
            <expr_stmt pos:start="36:13" pos:end="36:37"><expr pos:start="36:13" pos:end="36:36"><call pos:start="36:13" pos:end="36:25"><name pos:start="36:13" pos:end="36:23"><name pos:start="36:13" pos:end="36:18">vector</name><argument_list type="generic" pos:start="36:19" pos:end="36:23">&lt;<argument pos:start="36:20" pos:end="36:22"><expr pos:start="36:20" pos:end="36:22"><name pos:start="36:20" pos:end="36:22">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:start="36:24" pos:end="36:25">()</argument_list></call><operator pos:start="36:26" pos:end="36:26">.</operator><call pos:start="36:27" pos:end="36:36"><name pos:start="36:27" pos:end="36:30">swap</name><argument_list pos:start="36:31" pos:end="36:36">(<argument pos:start="36:32" pos:end="36:35"><expr pos:start="36:32" pos:end="36:35"><name pos:start="36:32" pos:end="36:35"><name pos:start="36:32" pos:end="36:32">G</name><index pos:start="36:33" pos:end="36:35">[<expr pos:start="36:34" pos:end="36:34"><name pos:start="36:34" pos:end="36:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></while>
    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
