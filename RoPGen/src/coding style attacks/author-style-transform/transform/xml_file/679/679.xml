<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/679/679.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:13"><decl pos:start="4:1" pos:end="4:10"><type pos:start="4:1" pos:end="4:6"><name pos:start="4:1" pos:end="4:6">string</name></type> <name pos:start="4:8" pos:end="4:10">sum</name></decl>,<decl pos:start="4:12" pos:end="4:12"><type ref="prev" pos:start="4:1" pos:end="4:6"/><name pos:start="4:12" pos:end="4:12">s</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:6"><decl pos:start="5:1" pos:end="5:5"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:5">n</name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="28:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list><block pos:start="6:11" pos:end="28:1">{<block_content pos:start="7:5" pos:end="27:13">
    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><call pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:31">(<argument pos:start="7:13" pos:end="7:20"><expr pos:start="7:13" pos:end="7:20"><literal type="string" pos:start="7:13" pos:end="7:20">"zip.in"</literal></expr></argument>,<argument pos:start="7:22" pos:end="7:24"><expr pos:start="7:22" pos:end="7:24"><literal type="string" pos:start="7:22" pos:end="7:24">"r"</literal></expr></argument>,<argument pos:start="7:26" pos:end="7:30"><expr pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:34"><expr pos:start="8:5" pos:end="8:33"><call pos:start="8:5" pos:end="8:33"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:33">(<argument pos:start="8:13" pos:end="8:21"><expr pos:start="8:13" pos:end="8:21"><literal type="string" pos:start="8:13" pos:end="8:21">"zip.out"</literal></expr></argument>,<argument pos:start="8:23" pos:end="8:25"><expr pos:start="8:23" pos:end="8:25"><literal type="string" pos:start="8:23" pos:end="8:25">"w"</literal></expr></argument>,<argument pos:start="8:27" pos:end="8:32"><expr pos:start="8:27" pos:end="8:32"><name pos:start="8:27" pos:end="8:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while pos:start="9:5" pos:end="12:5">while<condition pos:start="9:10" pos:end="9:17">(<expr pos:start="9:11" pos:end="9:16"><name pos:start="9:11" pos:end="9:13">cin</name><operator pos:start="9:14" pos:end="9:15">&gt;&gt;</operator><name pos:start="9:16" pos:end="9:16">s</name></expr>)</condition><block pos:start="9:18" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:15">
        <expr_stmt pos:start="10:9" pos:end="10:19"><expr pos:start="10:9" pos:end="10:18"><name pos:start="10:9" pos:end="10:9">n</name><operator pos:start="10:10" pos:end="10:10">=</operator><call pos:start="10:11" pos:end="10:18"><name pos:start="10:11" pos:end="10:16"><name pos:start="10:11" pos:end="10:11">s</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:16">size</name></name><argument_list pos:start="10:17" pos:end="10:18">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:15"><expr pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:11">sum</name><operator pos:start="11:12" pos:end="11:13">+=</operator><name pos:start="11:14" pos:end="11:14">s</name></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:8">cout</name><operator pos:start="13:9" pos:end="13:10">&lt;&lt;</operator><name pos:start="13:11" pos:end="13:11">n</name><operator pos:start="13:12" pos:end="13:13">&lt;&lt;</operator><literal type="string" pos:start="13:14" pos:end="13:16">" "</literal></expr>;</expr_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:31"><decl pos:start="14:5" pos:end="14:23"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:12">asns</name><init pos:start="14:13" pos:end="14:23">=<expr pos:start="14:14" pos:end="14:23"><name pos:start="14:14" pos:end="14:19"><name pos:start="14:14" pos:end="14:16">sum</name><index pos:start="14:17" pos:end="14:19">[<expr pos:start="14:18" pos:end="14:18"><literal type="number" pos:start="14:18" pos:end="14:18">0</literal></expr>]</index></name><operator pos:start="14:20" pos:end="14:20">-</operator><literal type="char" pos:start="14:21" pos:end="14:23">'0'</literal></expr></init></decl>,<decl pos:start="14:25" pos:end="14:30"><type ref="prev" pos:start="14:5" pos:end="14:7"/><name pos:start="14:25" pos:end="14:28">suma</name><init pos:start="14:29" pos:end="14:30">=<expr pos:start="14:30" pos:end="14:30"><literal type="number" pos:start="14:30" pos:end="14:30">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="15:5" pos:end="26:5">for<control pos:start="15:8" pos:end="15:33">(<init pos:start="15:9" pos:end="15:16"><decl pos:start="15:9" pos:end="15:15"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">i</name><init pos:start="15:14" pos:end="15:15">=<expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</init><condition pos:start="15:17" pos:end="15:29"><expr pos:start="15:17" pos:end="15:28"><name pos:start="15:17" pos:end="15:17">i</name><operator pos:start="15:18" pos:end="15:18">&lt;</operator><call pos:start="15:19" pos:end="15:28"><name pos:start="15:19" pos:end="15:26"><name pos:start="15:19" pos:end="15:21">sum</name><operator pos:start="15:22" pos:end="15:22">.</operator><name pos:start="15:23" pos:end="15:26">size</name></name><argument_list pos:start="15:27" pos:end="15:28">()</argument_list></call></expr>;</condition><incr pos:start="15:30" pos:end="15:32"><expr pos:start="15:30" pos:end="15:32"><name pos:start="15:30" pos:end="15:30">i</name><operator pos:start="15:31" pos:end="15:32">++</operator></expr></incr>)</control><block pos:start="15:34" pos:end="26:5">{<block_content pos:start="16:9" pos:end="25:9">
        <if_stmt pos:start="16:9" pos:end="22:9"><if pos:start="16:9" pos:end="20:9">if<condition pos:start="16:11" pos:end="16:28">(<expr pos:start="16:12" pos:end="16:27"><name pos:start="16:12" pos:end="16:15">asns</name><operator pos:start="16:16" pos:end="16:17">!=</operator><name pos:start="16:18" pos:end="16:23"><name pos:start="16:18" pos:end="16:20">sum</name><index pos:start="16:21" pos:end="16:23">[<expr pos:start="16:22" pos:end="16:22"><name pos:start="16:22" pos:end="16:22">i</name></expr>]</index></name><operator pos:start="16:24" pos:end="16:24">-</operator><literal type="char" pos:start="16:25" pos:end="16:27">'0'</literal></expr>)</condition><block pos:start="16:29" pos:end="20:9">{<block_content pos:start="17:13" pos:end="19:19">
            <expr_stmt pos:start="17:13" pos:end="17:28"><expr pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:16">asns</name><operator pos:start="17:17" pos:end="17:17">=</operator><name pos:start="17:18" pos:end="17:23"><name pos:start="17:18" pos:end="17:20">sum</name><index pos:start="17:21" pos:end="17:23">[<expr pos:start="17:22" pos:end="17:22"><name pos:start="17:22" pos:end="17:22">i</name></expr>]</index></name><operator pos:start="17:24" pos:end="17:24">-</operator><literal type="char" pos:start="17:25" pos:end="17:27">'0'</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:28"><expr pos:start="18:13" pos:end="18:27"><name pos:start="18:13" pos:end="18:16">cout</name><operator pos:start="18:17" pos:end="18:18">&lt;&lt;</operator><name pos:start="18:19" pos:end="18:22">suma</name><operator pos:start="18:23" pos:end="18:24">&lt;&lt;</operator><literal type="string" pos:start="18:25" pos:end="18:27">" "</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:19"><expr pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:16">suma</name><operator pos:start="19:17" pos:end="19:17">=</operator><literal type="number" pos:start="19:18" pos:end="19:18">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="20:10" pos:end="22:9">else<block pos:start="20:14" pos:end="22:9">{<block_content pos:start="21:13" pos:end="21:19">
            <expr_stmt pos:start="21:13" pos:end="21:19"><expr pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:16">suma</name><operator pos:start="21:17" pos:end="21:18">++</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <if_stmt pos:start="23:9" pos:end="25:9"><if pos:start="23:9" pos:end="25:9">if<condition pos:start="23:11" pos:end="23:27">(<expr pos:start="23:12" pos:end="23:26"><name pos:start="23:12" pos:end="23:12">i</name><operator pos:start="23:13" pos:end="23:14">==</operator><call pos:start="23:15" pos:end="23:24"><name pos:start="23:15" pos:end="23:22"><name pos:start="23:15" pos:end="23:17">sum</name><operator pos:start="23:18" pos:end="23:18">.</operator><name pos:start="23:19" pos:end="23:22">size</name></name><argument_list pos:start="23:23" pos:end="23:24">()</argument_list></call><operator pos:start="23:25" pos:end="23:25">-</operator><literal type="number" pos:start="23:26" pos:end="23:26">1</literal></expr>)</condition><block pos:start="23:28" pos:end="25:9">{<block_content pos:start="24:13" pos:end="24:23">
            <expr_stmt pos:start="24:13" pos:end="24:23"><expr pos:start="24:13" pos:end="24:22"><name pos:start="24:13" pos:end="24:16">cout</name><operator pos:start="24:17" pos:end="24:18">&lt;&lt;</operator><name pos:start="24:19" pos:end="24:22">suma</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
