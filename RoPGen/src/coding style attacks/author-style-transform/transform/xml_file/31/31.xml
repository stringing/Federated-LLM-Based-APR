<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/31/31.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:17">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:33"><decl pos:start="4:1" pos:end="4:23"><type pos:start="4:1" pos:end="4:9"><name pos:start="4:1" pos:end="4:4">long</name> <name pos:start="4:6" pos:end="4:9">long</name></type> <name pos:start="4:11" pos:end="4:23"><name pos:start="4:11" pos:end="4:15">floor</name><index pos:start="4:16" pos:end="4:23">[<expr pos:start="4:17" pos:end="4:22"><literal type="number" pos:start="4:17" pos:end="4:22">100005</literal></expr>]</index></name></decl>, <decl pos:start="4:26" pos:end="4:32"><type ref="prev" pos:start="4:1" pos:end="4:9"/><name pos:start="4:26" pos:end="4:28">ans</name> <init pos:start="4:30" pos:end="4:32">= <expr pos:start="4:32" pos:end="4:32"><literal type="number" pos:start="4:32" pos:end="4:32">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="28:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list> <block pos:start="5:12" pos:end="28:1">{<block_content pos:start="6:5" pos:end="27:13">
    <expr_stmt pos:start="6:5" pos:end="6:39"><expr pos:start="6:5" pos:end="6:38"><call pos:start="6:5" pos:end="6:38"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:38">(<argument pos:start="6:13" pos:end="6:25"><expr pos:start="6:13" pos:end="6:25"><literal type="string" pos:start="6:13" pos:end="6:25">"elevator.in"</literal></expr></argument>, <argument pos:start="6:28" pos:end="6:30"><expr pos:start="6:28" pos:end="6:30"><literal type="string" pos:start="6:28" pos:end="6:30">"r"</literal></expr></argument>, <argument pos:start="6:33" pos:end="6:37"><expr pos:start="6:33" pos:end="6:37"><name pos:start="6:33" pos:end="6:37">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:41"><expr pos:start="7:5" pos:end="7:40"><call pos:start="7:5" pos:end="7:40"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:40">(<argument pos:start="7:13" pos:end="7:26"><expr pos:start="7:13" pos:end="7:26"><literal type="string" pos:start="7:13" pos:end="7:26">"elevator.out"</literal></expr></argument>, <argument pos:start="7:29" pos:end="7:31"><expr pos:start="7:29" pos:end="7:31"><literal type="string" pos:start="7:29" pos:end="7:31">"w"</literal></expr></argument>, <argument pos:start="7:34" pos:end="7:39"><expr pos:start="7:34" pos:end="7:39"><name pos:start="7:34" pos:end="7:39">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:10"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><call pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:9">scanf</name><argument_list pos:start="9:10" pos:end="9:21">(<argument pos:start="9:11" pos:end="9:16"><expr pos:start="9:11" pos:end="9:16"><literal type="string" pos:start="9:11" pos:end="9:16">"%lld"</literal></expr></argument>, <argument pos:start="9:19" pos:end="9:20"><expr pos:start="9:19" pos:end="9:20"><operator pos:start="9:19" pos:end="9:19">&amp;</operator><name pos:start="9:20" pos:end="9:20">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="10:5" pos:end="12:5">for <control pos:start="10:9" pos:end="10:32">(<init pos:start="10:10" pos:end="10:19"><decl pos:start="10:10" pos:end="10:18"><type pos:start="10:10" pos:end="10:12"><name pos:start="10:10" pos:end="10:12">int</name></type> <name pos:start="10:14" pos:end="10:14">i</name> <init pos:start="10:16" pos:end="10:18">= <expr pos:start="10:18" pos:end="10:18"><literal type="number" pos:start="10:18" pos:end="10:18">1</literal></expr></init></decl>;</init> <condition pos:start="10:21" pos:end="10:27"><expr pos:start="10:21" pos:end="10:26"><name pos:start="10:21" pos:end="10:21">i</name> <operator pos:start="10:23" pos:end="10:24">&lt;=</operator> <name pos:start="10:26" pos:end="10:26">n</name></expr>;</condition> <incr pos:start="10:29" pos:end="10:31"><expr pos:start="10:29" pos:end="10:31"><name pos:start="10:29" pos:end="10:29">i</name><operator pos:start="10:30" pos:end="10:31">++</operator></expr></incr>)</control> <block pos:start="10:34" pos:end="12:5">{<block_content pos:start="11:9" pos:end="11:32">
        <expr_stmt pos:start="11:9" pos:end="11:32"><expr pos:start="11:9" pos:end="11:31"><call pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:13">scanf</name><argument_list pos:start="11:14" pos:end="11:31">(<argument pos:start="11:15" pos:end="11:20"><expr pos:start="11:15" pos:end="11:20"><literal type="string" pos:start="11:15" pos:end="11:20">"%lld"</literal></expr></argument>, <argument pos:start="11:23" pos:end="11:30"><expr pos:start="11:23" pos:end="11:30"><name pos:start="11:23" pos:end="11:30"><name pos:start="11:23" pos:end="11:27">floor</name><index pos:start="11:28" pos:end="11:30">[<expr pos:start="11:29" pos:end="11:29"><name pos:start="11:29" pos:end="11:29">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><call pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:8">sort</name><argument_list pos:start="13:9" pos:end="13:34">(<argument pos:start="13:10" pos:end="13:18"><expr pos:start="13:10" pos:end="13:18"><name pos:start="13:10" pos:end="13:14">floor</name> <operator pos:start="13:16" pos:end="13:16">+</operator> <literal type="number" pos:start="13:18" pos:end="13:18">1</literal></expr></argument>, <argument pos:start="13:21" pos:end="13:33"><expr pos:start="13:21" pos:end="13:33"><name pos:start="13:21" pos:end="13:25">floor</name> <operator pos:start="13:27" pos:end="13:27">+</operator> <name pos:start="13:29" pos:end="13:29">n</name> <operator pos:start="13:31" pos:end="13:31">+</operator> <literal type="number" pos:start="13:33" pos:end="13:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:29"><decl pos:start="14:5" pos:end="14:28"><type pos:start="14:5" pos:end="14:13"><name pos:start="14:5" pos:end="14:8">long</name> <name pos:start="14:10" pos:end="14:13">long</name></type> <name pos:start="14:15" pos:end="14:17">now</name> <init pos:start="14:19" pos:end="14:28">= <expr pos:start="14:21" pos:end="14:28"><name pos:start="14:21" pos:end="14:28"><name pos:start="14:21" pos:end="14:25">floor</name><index pos:start="14:26" pos:end="14:28">[<expr pos:start="14:27" pos:end="14:27"><name pos:start="14:27" pos:end="14:27">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:19"><expr pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:7">ans</name> <operator pos:start="15:9" pos:end="15:10">+=</operator> <name pos:start="15:12" pos:end="15:14">now</name> <operator pos:start="15:16" pos:end="15:16">*</operator> <literal type="number" pos:start="15:18" pos:end="15:18">5</literal></expr>;</expr_stmt> 
    <for pos:start="16:5" pos:end="25:5">for <control pos:start="16:9" pos:end="16:32">(<init pos:start="16:10" pos:end="16:19"><decl pos:start="16:10" pos:end="16:18"><type pos:start="16:10" pos:end="16:12"><name pos:start="16:10" pos:end="16:12">int</name></type> <name pos:start="16:14" pos:end="16:14">i</name> <init pos:start="16:16" pos:end="16:18">= <expr pos:start="16:18" pos:end="16:18"><name pos:start="16:18" pos:end="16:18">n</name></expr></init></decl>;</init> <condition pos:start="16:21" pos:end="16:27"><expr pos:start="16:21" pos:end="16:26"><name pos:start="16:21" pos:end="16:21">i</name> <operator pos:start="16:23" pos:end="16:24">&gt;=</operator> <literal type="number" pos:start="16:26" pos:end="16:26">1</literal></expr>;</condition> <incr pos:start="16:29" pos:end="16:31"><expr pos:start="16:29" pos:end="16:31"><name pos:start="16:29" pos:end="16:29">i</name><operator pos:start="16:30" pos:end="16:31">--</operator></expr></incr>)</control> <block pos:start="16:34" pos:end="25:5">{<block_content pos:start="17:9" pos:end="24:24">
        <decl_stmt pos:start="17:9" pos:end="17:34"><decl pos:start="17:9" pos:end="17:33"><type pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:12">long</name> <name pos:start="17:14" pos:end="17:17">long</name></type> <name pos:start="17:19" pos:end="17:22">temp</name> <init pos:start="17:24" pos:end="17:33">= <expr pos:start="17:26" pos:end="17:33"><name pos:start="17:26" pos:end="17:33"><name pos:start="17:26" pos:end="17:30">floor</name><index pos:start="17:31" pos:end="17:33">[<expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="18:9" pos:end="18:17"><expr pos:start="18:9" pos:end="18:16"><name pos:start="18:9" pos:end="18:11">ans</name> <operator pos:start="18:13" pos:end="18:14">+=</operator> <literal type="number" pos:start="18:16" pos:end="18:16">3</literal></expr>;</expr_stmt>
        <do pos:start="19:9" pos:end="22:43">do <block pos:start="19:12" pos:end="22:9">{<block_content pos:start="20:13" pos:end="21:16">
            <expr_stmt pos:start="20:13" pos:end="20:21"><expr pos:start="20:13" pos:end="20:20"><name pos:start="20:13" pos:end="20:15">ans</name> <operator pos:start="20:17" pos:end="20:18">+=</operator> <literal type="number" pos:start="20:20" pos:end="20:20">2</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:16"><expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:13">i</name><operator pos:start="21:14" pos:end="21:15">--</operator></expr>;</expr_stmt>
        </block_content>}</block> while <condition pos:start="22:17" pos:end="22:42">(<expr pos:start="22:18" pos:end="22:41"><name pos:start="22:18" pos:end="22:25"><name pos:start="22:18" pos:end="22:22">floor</name><index pos:start="22:23" pos:end="22:25">[<expr pos:start="22:24" pos:end="22:24"><name pos:start="22:24" pos:end="22:24">i</name></expr>]</index></name> <operator pos:start="22:27" pos:end="22:28">==</operator> <name pos:start="22:30" pos:end="22:41"><name pos:start="22:30" pos:end="22:34">floor</name><index pos:start="22:35" pos:end="22:41">[<expr pos:start="22:36" pos:end="22:40"><name pos:start="22:36" pos:end="22:36">i</name> <operator pos:start="22:38" pos:end="22:38">-</operator> <literal type="number" pos:start="22:40" pos:end="22:40">1</literal></expr>]</index></name></expr>)</condition>;</do> 
        <expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:11">now</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:22"><name pos:start="23:15" pos:end="23:19">floor</name><index pos:start="23:20" pos:end="23:22">[<expr pos:start="23:21" pos:end="23:21"><name pos:start="23:21" pos:end="23:21">i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:24"><expr pos:start="24:9" pos:end="24:23"><name pos:start="24:9" pos:end="24:11">ans</name> <operator pos:start="24:13" pos:end="24:14">+=</operator> <name pos:start="24:16" pos:end="24:19">temp</name> <operator pos:start="24:21" pos:end="24:21">*</operator> <literal type="number" pos:start="24:23" pos:end="24:23">4</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="26:5" pos:end="26:24"><expr pos:start="26:5" pos:end="26:23"><call pos:start="26:5" pos:end="26:23"><name pos:start="26:5" pos:end="26:10">printf</name><argument_list pos:start="26:11" pos:end="26:23">(<argument pos:start="26:12" pos:end="26:17"><expr pos:start="26:12" pos:end="26:17"><literal type="string" pos:start="26:12" pos:end="26:17">"%lld"</literal></expr></argument>, <argument pos:start="26:20" pos:end="26:22"><expr pos:start="26:20" pos:end="26:22"><name pos:start="26:20" pos:end="26:22">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
