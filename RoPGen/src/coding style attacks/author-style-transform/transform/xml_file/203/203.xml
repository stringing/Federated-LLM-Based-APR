<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/203/203.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:23"><decl pos:start="3:1" pos:end="3:22"><type pos:start="3:1" pos:end="3:11"><name pos:start="3:1" pos:end="3:11"><name pos:start="3:1" pos:end="3:6">vector</name><argument_list type="generic" pos:start="3:7" pos:end="3:11">&lt;<argument pos:start="3:8" pos:end="3:10"><expr pos:start="3:8" pos:end="3:10"><name pos:start="3:8" pos:end="3:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="3:13" pos:end="3:22"><name pos:start="3:13" pos:end="3:16">tree</name><index pos:start="3:17" pos:end="3:22">[<expr pos:start="3:18" pos:end="3:21"><literal type="number" pos:start="3:18" pos:end="3:21">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="33:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list> <block pos:start="4:12" pos:end="33:1">{<block_content pos:start="5:5" pos:end="32:13">
    <expr_stmt pos:start="5:5" pos:end="5:32"><expr pos:start="5:5" pos:end="5:31"><call pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:31">(<argument pos:start="5:13" pos:end="5:18"><expr pos:start="5:13" pos:end="5:18"><literal type="string" pos:start="5:13" pos:end="5:18">"p.in"</literal></expr></argument>, <argument pos:start="5:21" pos:end="5:23"><expr pos:start="5:21" pos:end="5:23"><literal type="string" pos:start="5:21" pos:end="5:23">"r"</literal></expr></argument>, <argument pos:start="5:26" pos:end="5:30"><expr pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:34"><expr pos:start="6:5" pos:end="6:33"><call pos:start="6:5" pos:end="6:33"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:33">(<argument pos:start="6:13" pos:end="6:19"><expr pos:start="6:13" pos:end="6:19"><literal type="string" pos:start="6:13" pos:end="6:19">"p.out"</literal></expr></argument>, <argument pos:start="6:22" pos:end="6:24"><expr pos:start="6:22" pos:end="6:24"><literal type="string" pos:start="6:22" pos:end="6:24">"w"</literal></expr></argument>, <argument pos:start="6:27" pos:end="6:32"><expr pos:start="6:27" pos:end="6:32"><name pos:start="6:27" pos:end="6:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">t</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:13"><expr pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:7">cin</name> <operator pos:start="8:9" pos:end="8:10">&gt;&gt;</operator> <name pos:start="8:12" pos:end="8:12">t</name></expr>;</expr_stmt>
    <while pos:start="9:5" pos:end="31:5">while<condition pos:start="9:10" pos:end="9:14">(<expr pos:start="9:11" pos:end="9:13"><name pos:start="9:11" pos:end="9:11">t</name><operator pos:start="9:12" pos:end="9:13">--</operator></expr>)</condition> <block pos:start="9:16" pos:end="31:5">{<block_content pos:start="10:9" pos:end="30:28">
        <expr_stmt pos:start="10:9" pos:end="10:17"><expr pos:start="10:9" pos:end="10:16"><name pos:start="10:9" pos:end="10:11">cin</name> <operator pos:start="10:13" pos:end="10:14">&gt;&gt;</operator> <name pos:start="10:16" pos:end="10:16">n</name></expr>;</expr_stmt>
        <decl_stmt pos:start="11:9" pos:end="11:17"><decl pos:start="11:9" pos:end="11:13"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">x</name></decl>, <decl pos:start="11:16" pos:end="11:16"><type ref="prev" pos:start="11:9" pos:end="11:11"/><name pos:start="11:16" pos:end="11:16">y</name></decl>;</decl_stmt>
        <for pos:start="12:9" pos:end="16:9">for<control pos:start="12:12" pos:end="12:34">(<init pos:start="12:13" pos:end="12:22"><decl pos:start="12:13" pos:end="12:21"><type pos:start="12:13" pos:end="12:15"><name pos:start="12:13" pos:end="12:15">int</name></type> <name pos:start="12:17" pos:end="12:17">i</name> <init pos:start="12:19" pos:end="12:21">= <expr pos:start="12:21" pos:end="12:21"><literal type="number" pos:start="12:21" pos:end="12:21">1</literal></expr></init></decl>;</init> <condition pos:start="12:24" pos:end="12:29"><expr pos:start="12:24" pos:end="12:28"><name pos:start="12:24" pos:end="12:24">i</name> <operator pos:start="12:26" pos:end="12:26">&lt;</operator> <name pos:start="12:28" pos:end="12:28">n</name></expr>;</condition> <incr pos:start="12:31" pos:end="12:33"><expr pos:start="12:31" pos:end="12:33"><name pos:start="12:31" pos:end="12:31">i</name><operator pos:start="12:32" pos:end="12:33">++</operator></expr></incr>)</control> <block pos:start="12:36" pos:end="16:9">{<block_content pos:start="13:13" pos:end="15:33">
            <expr_stmt pos:start="13:13" pos:end="13:26"><expr pos:start="13:13" pos:end="13:25"><name pos:start="13:13" pos:end="13:15">cin</name> <operator pos:start="13:17" pos:end="13:18">&gt;&gt;</operator> <name pos:start="13:20" pos:end="13:20">x</name> <operator pos:start="13:22" pos:end="13:23">&gt;&gt;</operator> <name pos:start="13:25" pos:end="13:25">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:33"><expr pos:start="14:13" pos:end="14:32"><name pos:start="14:13" pos:end="14:19"><name pos:start="14:13" pos:end="14:16">tree</name><index pos:start="14:17" pos:end="14:19">[<expr pos:start="14:18" pos:end="14:18"><name pos:start="14:18" pos:end="14:18">x</name></expr>]</index></name><operator pos:start="14:20" pos:end="14:20">.</operator><call pos:start="14:21" pos:end="14:32"><name pos:start="14:21" pos:end="14:29">push_back</name><argument_list pos:start="14:30" pos:end="14:32">(<argument pos:start="14:31" pos:end="14:31"><expr pos:start="14:31" pos:end="14:31"><name pos:start="14:31" pos:end="14:31">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:33"><expr pos:start="15:13" pos:end="15:32"><name pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:16">tree</name><index pos:start="15:17" pos:end="15:19">[<expr pos:start="15:18" pos:end="15:18"><name pos:start="15:18" pos:end="15:18">y</name></expr>]</index></name><operator pos:start="15:20" pos:end="15:20">.</operator><call pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:29">push_back</name><argument_list pos:start="15:30" pos:end="15:32">(<argument pos:start="15:31" pos:end="15:31"><expr pos:start="15:31" pos:end="15:31"><name pos:start="15:31" pos:end="15:31">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="17:9" pos:end="17:20"><decl pos:start="17:9" pos:end="17:19"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:15">cnt</name> <init pos:start="17:17" pos:end="17:19">= <expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="18:9" pos:end="29:9">for<control pos:start="18:12" pos:end="18:34">(<init pos:start="18:13" pos:end="18:22"><decl pos:start="18:13" pos:end="18:21"><type pos:start="18:13" pos:end="18:15"><name pos:start="18:13" pos:end="18:15">int</name></type> <name pos:start="18:17" pos:end="18:17">i</name> <init pos:start="18:19" pos:end="18:21">= <expr pos:start="18:21" pos:end="18:21"><literal type="number" pos:start="18:21" pos:end="18:21">1</literal></expr></init></decl>;</init> <condition pos:start="18:24" pos:end="18:29"><expr pos:start="18:24" pos:end="18:28"><name pos:start="18:24" pos:end="18:24">i</name> <operator pos:start="18:26" pos:end="18:26">&lt;</operator> <name pos:start="18:28" pos:end="18:28">n</name></expr>;</condition> <incr pos:start="18:31" pos:end="18:33"><expr pos:start="18:31" pos:end="18:33"><name pos:start="18:31" pos:end="18:31">i</name><operator pos:start="18:32" pos:end="18:33">++</operator></expr></incr>)</control> <block pos:start="18:36" pos:end="29:9">{<block_content pos:start="19:13" pos:end="28:13">
            <decl_stmt pos:start="19:13" pos:end="19:29"><decl pos:start="19:13" pos:end="19:28"><type pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">bool</name></type> <name pos:start="19:18" pos:end="19:21">flag</name> <init pos:start="19:23" pos:end="19:28">= <expr pos:start="19:25" pos:end="19:28"><literal type="boolean" pos:start="19:25" pos:end="19:28">true</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="20:13" pos:end="25:13">for<control pos:start="20:16" pos:end="20:51">(<init pos:start="20:17" pos:end="20:26"><decl pos:start="20:17" pos:end="20:25"><type pos:start="20:17" pos:end="20:19"><name pos:start="20:17" pos:end="20:19">int</name></type> <name pos:start="20:21" pos:end="20:21">j</name> <init pos:start="20:23" pos:end="20:25">= <expr pos:start="20:25" pos:end="20:25"><literal type="number" pos:start="20:25" pos:end="20:25">0</literal></expr></init></decl>;</init> <condition pos:start="20:28" pos:end="20:46"><expr pos:start="20:28" pos:end="20:45"><name pos:start="20:28" pos:end="20:28">j</name> <operator pos:start="20:30" pos:end="20:30">&lt;</operator> <name pos:start="20:32" pos:end="20:38"><name pos:start="20:32" pos:end="20:35">tree</name><index pos:start="20:36" pos:end="20:38">[<expr pos:start="20:37" pos:end="20:37"><name pos:start="20:37" pos:end="20:37">i</name></expr>]</index></name><operator pos:start="20:39" pos:end="20:39">.</operator><call pos:start="20:40" pos:end="20:45"><name pos:start="20:40" pos:end="20:43">size</name><argument_list pos:start="20:44" pos:end="20:45">()</argument_list></call></expr>;</condition> <incr pos:start="20:48" pos:end="20:50"><expr pos:start="20:48" pos:end="20:50"><name pos:start="20:48" pos:end="20:48">j</name><operator pos:start="20:49" pos:end="20:50">++</operator></expr></incr>)</control> <block pos:start="20:53" pos:end="25:13">{<block_content pos:start="21:16" pos:end="24:16">
               <if_stmt pos:start="21:16" pos:end="24:16"><if pos:start="21:16" pos:end="24:16">if<condition pos:start="21:18" pos:end="21:59">(<expr pos:start="21:19" pos:end="21:58"><name pos:start="21:19" pos:end="21:34"><name pos:start="21:19" pos:end="21:22">tree</name><index pos:start="21:23" pos:end="21:34">[<expr pos:start="21:24" pos:end="21:33"><name pos:start="21:24" pos:end="21:33"><name pos:start="21:24" pos:end="21:27">tree</name><index pos:start="21:28" pos:end="21:30">[<expr pos:start="21:29" pos:end="21:29"><name pos:start="21:29" pos:end="21:29">i</name></expr>]</index><index pos:start="21:31" pos:end="21:33">[<expr pos:start="21:32" pos:end="21:32"><name pos:start="21:32" pos:end="21:32">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="21:35" pos:end="21:35">.</operator><call pos:start="21:36" pos:end="21:41"><name pos:start="21:36" pos:end="21:39">size</name><argument_list pos:start="21:40" pos:end="21:41">()</argument_list></call> <operator pos:start="21:43" pos:end="21:43">&gt;</operator> <name pos:start="21:45" pos:end="21:51"><name pos:start="21:45" pos:end="21:48">tree</name><index pos:start="21:49" pos:end="21:51">[<expr pos:start="21:50" pos:end="21:50"><name pos:start="21:50" pos:end="21:50">i</name></expr>]</index></name><operator pos:start="21:52" pos:end="21:52">.</operator><call pos:start="21:53" pos:end="21:58"><name pos:start="21:53" pos:end="21:56">size</name><argument_list pos:start="21:57" pos:end="21:58">()</argument_list></call></expr>)</condition><block pos:start="21:60" pos:end="24:16">{<block_content pos:start="22:20" pos:end="23:25">
                   <expr_stmt pos:start="22:20" pos:end="22:32"><expr pos:start="22:20" pos:end="22:31"><name pos:start="22:20" pos:end="22:23">flag</name> <operator pos:start="22:25" pos:end="22:25">=</operator> <literal type="boolean" pos:start="22:27" pos:end="22:31">false</literal></expr>;</expr_stmt>
                   <break pos:start="23:20" pos:end="23:25">break;</break>
               </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="26:13" pos:end="28:13"><if pos:start="26:13" pos:end="28:13">if<condition pos:start="26:15" pos:end="26:20">(<expr pos:start="26:16" pos:end="26:19"><name pos:start="26:16" pos:end="26:19">flag</name></expr>)</condition><block pos:start="26:21" pos:end="28:13">{<block_content pos:start="27:17" pos:end="27:22">
                <expr_stmt pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:21"><name pos:start="27:17" pos:end="27:19">cnt</name><operator pos:start="27:20" pos:end="27:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="30:9" pos:end="30:28"><expr pos:start="30:9" pos:end="30:27"><name pos:start="30:9" pos:end="30:12">cout</name> <operator pos:start="30:14" pos:end="30:15">&lt;&lt;</operator> <name pos:start="30:17" pos:end="30:19">cnt</name> <operator pos:start="30:21" pos:end="30:22">&lt;&lt;</operator> <name pos:start="30:24" pos:end="30:27">endl</name></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="32:5" pos:end="32:13">return <expr pos:start="32:12" pos:end="32:12"><literal type="number" pos:start="32:12" pos:end="32:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
