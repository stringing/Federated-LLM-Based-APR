<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/995/995.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:17">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:18">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:18">&lt;cstring&gt;</cpp:file></cpp:include>
<decl_stmt pos:start="3:1" pos:end="3:25"><decl pos:start="3:1" pos:end="3:24"><type pos:start="3:1" pos:end="3:9"><specifier pos:start="3:1" pos:end="3:5">const</specifier> <name pos:start="3:7" pos:end="3:9">int</name></type> <name pos:start="3:11" pos:end="3:14">MAXN</name> <init pos:start="3:16" pos:end="3:24">= <expr pos:start="3:18" pos:end="3:24"><literal type="number" pos:start="3:18" pos:end="3:22">1e5</literal> <operator pos:start="3:22" pos:end="3:22">+</operator> <literal type="number" pos:start="3:24" pos:end="3:24">5</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:17"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">n</name></decl>, <decl pos:start="4:8" pos:end="4:10"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:8" pos:end="4:10">cnt</name></decl>, <decl pos:start="4:13" pos:end="4:16"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:13" pos:end="4:16">flag</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:19"><decl pos:start="5:1" pos:end="5:13"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:7">ans</name><index pos:start="5:8" pos:end="5:13">[<expr pos:start="5:9" pos:end="5:12"><name pos:start="5:9" pos:end="5:12">MAXN</name></expr>]</index></name></decl>, <decl pos:start="5:16" pos:end="5:18"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:16" pos:end="5:18">tot</name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:21"><decl pos:start="6:1" pos:end="6:20"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">char</name></type> <name pos:start="6:6" pos:end="6:20"><name pos:start="6:6" pos:end="6:8">map</name><index pos:start="6:9" pos:end="6:14">[<expr pos:start="6:10" pos:end="6:13"><literal type="number" pos:start="6:10" pos:end="6:13">1005</literal></expr>]</index><index pos:start="6:15" pos:end="6:20">[<expr pos:start="6:16" pos:end="6:19"><literal type="number" pos:start="6:16" pos:end="6:19">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="35:1"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:8">main</name><parameter_list pos:start="7:9" pos:end="7:10">()</parameter_list> <block pos:start="7:12" pos:end="35:1">{<block_content pos:start="8:5" pos:end="34:13">
    <expr_stmt pos:start="8:5" pos:end="8:34"><expr pos:start="8:5" pos:end="8:33"><call pos:start="8:5" pos:end="8:33"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:33">(<argument pos:start="8:13" pos:end="8:20"><expr pos:start="8:13" pos:end="8:20"><literal type="string" pos:start="8:13" pos:end="8:20">"zip.in"</literal></expr></argument>, <argument pos:start="8:23" pos:end="8:25"><expr pos:start="8:23" pos:end="8:25"><literal type="string" pos:start="8:23" pos:end="8:25">"r"</literal></expr></argument>, <argument pos:start="8:28" pos:end="8:32"><expr pos:start="8:28" pos:end="8:32"><name pos:start="8:28" pos:end="8:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:36"><expr pos:start="9:5" pos:end="9:35"><call pos:start="9:5" pos:end="9:35"><name pos:start="9:5" pos:end="9:11">freopen</name><argument_list pos:start="9:12" pos:end="9:35">(<argument pos:start="9:13" pos:end="9:21"><expr pos:start="9:13" pos:end="9:21"><literal type="string" pos:start="9:13" pos:end="9:21">"zip.out"</literal></expr></argument>, <argument pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><literal type="string" pos:start="9:24" pos:end="9:26">"w"</literal></expr></argument>, <argument pos:start="9:29" pos:end="9:34"><expr pos:start="9:29" pos:end="9:34"><name pos:start="9:29" pos:end="9:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:28"><expr pos:start="10:5" pos:end="10:27"><call pos:start="10:5" pos:end="10:27"><name pos:start="10:5" pos:end="10:9">scanf</name><argument_list pos:start="10:10" pos:end="10:27">(<argument pos:start="10:11" pos:end="10:14"><expr pos:start="10:11" pos:end="10:14"><literal type="string" pos:start="10:11" pos:end="10:14">"%s"</literal></expr></argument>, <argument pos:start="10:17" pos:end="10:26"><expr pos:start="10:17" pos:end="10:26"><name pos:start="10:17" pos:end="10:22"><name pos:start="10:17" pos:end="10:19">map</name><index pos:start="10:20" pos:end="10:22">[<expr pos:start="10:21" pos:end="10:21"><literal type="number" pos:start="10:21" pos:end="10:21">1</literal></expr>]</index></name> <operator pos:start="10:24" pos:end="10:24">+</operator> <literal type="number" pos:start="10:26" pos:end="10:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:5">n</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <call pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:14">strlen</name><argument_list pos:start="11:15" pos:end="11:26">(<argument pos:start="11:16" pos:end="11:25"><expr pos:start="11:16" pos:end="11:25"><name pos:start="11:16" pos:end="11:21"><name pos:start="11:16" pos:end="11:18">map</name><index pos:start="11:19" pos:end="11:21">[<expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">1</literal></expr>]</index></name> <operator pos:start="11:23" pos:end="11:23">+</operator> <literal type="number" pos:start="11:25" pos:end="11:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="12:5" pos:end="14:5">for<control pos:start="12:8" pos:end="12:31">(<init pos:start="12:9" pos:end="12:18"><decl pos:start="12:9" pos:end="12:17"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">i</name> <init pos:start="12:15" pos:end="12:17">= <expr pos:start="12:17" pos:end="12:17"><literal type="number" pos:start="12:17" pos:end="12:17">2</literal></expr></init></decl>;</init> <condition pos:start="12:20" pos:end="12:26"><expr pos:start="12:20" pos:end="12:25"><name pos:start="12:20" pos:end="12:20">i</name> <operator pos:start="12:22" pos:end="12:23">&lt;=</operator> <name pos:start="12:25" pos:end="12:25">n</name></expr>;</condition> <incr pos:start="12:28" pos:end="12:30"><expr pos:start="12:28" pos:end="12:30"><name pos:start="12:28" pos:end="12:28">i</name><operator pos:start="12:29" pos:end="12:30">++</operator></expr></incr>)</control><block pos:start="12:32" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:32">
        <expr_stmt pos:start="13:9" pos:end="13:32"><expr pos:start="13:9" pos:end="13:31"><call pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:13">scanf</name><argument_list pos:start="13:14" pos:end="13:31">(<argument pos:start="13:15" pos:end="13:18"><expr pos:start="13:15" pos:end="13:18"><literal type="string" pos:start="13:15" pos:end="13:18">"%s"</literal></expr></argument>, <argument pos:start="13:21" pos:end="13:30"><expr pos:start="13:21" pos:end="13:30"><name pos:start="13:21" pos:end="13:26"><name pos:start="13:21" pos:end="13:23">map</name><index pos:start="13:24" pos:end="13:26">[<expr pos:start="13:25" pos:end="13:25"><name pos:start="13:25" pos:end="13:25">i</name></expr>]</index></name> <operator pos:start="13:28" pos:end="13:28">+</operator> <literal type="number" pos:start="13:30" pos:end="13:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="15:5" pos:end="15:13"><expr pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:8">flag</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <literal type="number" pos:start="15:12" pos:end="15:12">0</literal></expr>;</expr_stmt>
    <for pos:start="16:5" pos:end="29:5">for <control pos:start="16:9" pos:end="16:32">(<init pos:start="16:10" pos:end="16:19"><decl pos:start="16:10" pos:end="16:18"><type pos:start="16:10" pos:end="16:12"><name pos:start="16:10" pos:end="16:12">int</name></type> <name pos:start="16:14" pos:end="16:14">i</name> <init pos:start="16:16" pos:end="16:18">= <expr pos:start="16:18" pos:end="16:18"><literal type="number" pos:start="16:18" pos:end="16:18">1</literal></expr></init></decl>;</init> <condition pos:start="16:21" pos:end="16:27"><expr pos:start="16:21" pos:end="16:26"><name pos:start="16:21" pos:end="16:21">i</name> <operator pos:start="16:23" pos:end="16:24">&lt;=</operator> <name pos:start="16:26" pos:end="16:26">n</name></expr>;</condition> <incr pos:start="16:29" pos:end="16:31"><expr pos:start="16:29" pos:end="16:31"><name pos:start="16:29" pos:end="16:29">i</name><operator pos:start="16:30" pos:end="16:31">++</operator></expr></incr>)</control> <block pos:start="16:34" pos:end="29:5">{<block_content pos:start="17:9" pos:end="28:9">
        <for pos:start="17:9" pos:end="28:9">for<control pos:start="17:12" pos:end="17:35">(<init pos:start="17:13" pos:end="17:22"><decl pos:start="17:13" pos:end="17:21"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:17">j</name> <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr></init></decl>;</init> <condition pos:start="17:24" pos:end="17:30"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:24">j</name> <operator pos:start="17:26" pos:end="17:27">&lt;=</operator> <name pos:start="17:29" pos:end="17:29">n</name></expr>;</condition> <incr pos:start="17:32" pos:end="17:34"><expr pos:start="17:32" pos:end="17:34"><name pos:start="17:32" pos:end="17:32">j</name><operator pos:start="17:33" pos:end="17:34">++</operator></expr></incr>)</control><block pos:start="17:36" pos:end="28:9">{<block_content pos:start="18:13" pos:end="27:13">
            <if_stmt pos:start="18:13" pos:end="27:13"><if pos:start="18:13" pos:end="21:13">if<condition pos:start="18:15" pos:end="18:39">(<expr pos:start="18:16" pos:end="18:38"><name pos:start="18:16" pos:end="18:24"><name pos:start="18:16" pos:end="18:18">map</name><index pos:start="18:19" pos:end="18:21">[<expr pos:start="18:20" pos:end="18:20"><name pos:start="18:20" pos:end="18:20">i</name></expr>]</index><index pos:start="18:22" pos:end="18:24">[<expr pos:start="18:23" pos:end="18:23"><name pos:start="18:23" pos:end="18:23">j</name></expr>]</index></name> <operator pos:start="18:26" pos:end="18:26">-</operator> <literal type="char" pos:start="18:28" pos:end="18:30">'0'</literal> <operator pos:start="18:32" pos:end="18:33">==</operator> <name pos:start="18:35" pos:end="18:38">flag</name></expr>)</condition>
            <block pos:start="19:13" pos:end="21:13">{<block_content pos:start="20:17" pos:end="20:22">
                <expr_stmt pos:start="20:17" pos:end="20:22"><expr pos:start="20:17" pos:end="20:21"><name pos:start="20:17" pos:end="20:19">cnt</name><operator pos:start="20:20" pos:end="20:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="22:13" pos:end="27:13">else
            <block pos:start="23:13" pos:end="27:13">{<block_content pos:start="24:17" pos:end="26:24">
                <expr_stmt pos:start="24:17" pos:end="24:33"><expr pos:start="24:17" pos:end="24:32"><name pos:start="24:17" pos:end="24:26"><name pos:start="24:17" pos:end="24:19">ans</name><index pos:start="24:20" pos:end="24:26">[<expr pos:start="24:21" pos:end="24:25"><name pos:start="24:21" pos:end="24:23">tot</name><operator pos:start="24:24" pos:end="24:25">++</operator></expr>]</index></name> <operator pos:start="24:28" pos:end="24:28">=</operator> <name pos:start="24:30" pos:end="24:32">cnt</name></expr>;</expr_stmt>
                <expr_stmt pos:start="25:17" pos:end="25:26"><expr pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:20">flag</name> <operator pos:start="25:22" pos:end="25:23">^=</operator> <literal type="number" pos:start="25:25" pos:end="25:25">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="26:17" pos:end="26:24"><expr pos:start="26:17" pos:end="26:23"><name pos:start="26:17" pos:end="26:19">cnt</name> <operator pos:start="26:21" pos:end="26:21">=</operator> <literal type="number" pos:start="26:23" pos:end="26:23">1</literal></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for><expr_stmt pos:start="29:6" pos:end="29:22"><expr pos:start="29:6" pos:end="29:21"><name pos:start="29:6" pos:end="29:15"><name pos:start="29:6" pos:end="29:8">ans</name><index pos:start="29:9" pos:end="29:15">[<expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:12">tot</name><operator pos:start="29:13" pos:end="29:14">++</operator></expr>]</index></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:21">cnt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:21"><expr pos:start="30:5" pos:end="30:20"><call pos:start="30:5" pos:end="30:20"><name pos:start="30:5" pos:end="30:10">printf</name><argument_list pos:start="30:11" pos:end="30:20">(<argument pos:start="30:12" pos:end="30:16"><expr pos:start="30:12" pos:end="30:16"><literal type="string" pos:start="30:12" pos:end="30:16">"%d "</literal></expr></argument>, <argument pos:start="30:19" pos:end="30:19"><expr pos:start="30:19" pos:end="30:19"><name pos:start="30:19" pos:end="30:19">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="31:5" pos:end="33:5">for<control pos:start="31:8" pos:end="31:33">(<init pos:start="31:9" pos:end="31:18"><decl pos:start="31:9" pos:end="31:17"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name> <init pos:start="31:15" pos:end="31:17">= <expr pos:start="31:17" pos:end="31:17"><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr></init></decl>;</init> <condition pos:start="31:20" pos:end="31:28"><expr pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:20">i</name> <operator pos:start="31:22" pos:end="31:23">&lt;=</operator> <name pos:start="31:25" pos:end="31:27">tot</name></expr>;</condition> <incr pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:30">i</name><operator pos:start="31:31" pos:end="31:32">++</operator></expr></incr>)</control><block pos:start="31:34" pos:end="33:5">{<block_content pos:start="32:9" pos:end="32:30">
        <expr_stmt pos:start="32:9" pos:end="32:30"><expr pos:start="32:9" pos:end="32:29"><call pos:start="32:9" pos:end="32:29"><name pos:start="32:9" pos:end="32:14">printf</name><argument_list pos:start="32:15" pos:end="32:29">(<argument pos:start="32:16" pos:end="32:20"><expr pos:start="32:16" pos:end="32:20"><literal type="string" pos:start="32:16" pos:end="32:20">"%d "</literal></expr></argument>, <argument pos:start="32:23" pos:end="32:28"><expr pos:start="32:23" pos:end="32:28"><name pos:start="32:23" pos:end="32:28"><name pos:start="32:23" pos:end="32:25">ans</name><index pos:start="32:26" pos:end="32:28">[<expr pos:start="32:27" pos:end="32:27"><name pos:start="32:27" pos:end="32:27">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="34:5" pos:end="34:13">return <expr pos:start="34:12" pos:end="34:12"><literal type="number" pos:start="34:12" pos:end="34:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
