<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/10/10.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:12"><decl pos:start="4:1" pos:end="4:11"><type pos:start="4:1" pos:end="4:9"><name pos:start="4:1" pos:end="4:4">long</name> <name pos:start="4:6" pos:end="4:9">long</name></type> <name pos:start="4:11" pos:end="4:11">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:17"><decl pos:start="5:1" pos:end="5:16"><type pos:start="5:1" pos:end="5:14"><name pos:start="5:1" pos:end="5:14"><name pos:start="5:1" pos:end="5:3">set</name><argument_list type="generic" pos:start="5:4" pos:end="5:14">&lt;<argument pos:start="5:5" pos:end="5:13"><expr pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:8">long</name> <name pos:start="5:10" pos:end="5:13">long</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="5:16" pos:end="5:16">a</name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="36:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name><parameter_list pos:start="6:9" pos:end="6:10">()</parameter_list> <block pos:start="6:12" pos:end="36:1">{<block_content pos:start="7:5" pos:end="35:13">
    <expr_stmt pos:start="7:5" pos:end="7:39"><expr pos:start="7:5" pos:end="7:38"><call pos:start="7:5" pos:end="7:38"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:38">(<argument pos:start="7:13" pos:end="7:25"><expr pos:start="7:13" pos:end="7:25"><literal type="string" pos:start="7:13" pos:end="7:25">"elevater.in"</literal></expr></argument>, <argument pos:start="7:28" pos:end="7:30"><expr pos:start="7:28" pos:end="7:30"><literal type="string" pos:start="7:28" pos:end="7:30">"r"</literal></expr></argument>, <argument pos:start="7:33" pos:end="7:37"><expr pos:start="7:33" pos:end="7:37"><name pos:start="7:33" pos:end="7:37">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:41"><expr pos:start="8:5" pos:end="8:40"><call pos:start="8:5" pos:end="8:40"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:40">(<argument pos:start="8:13" pos:end="8:26"><expr pos:start="8:13" pos:end="8:26"><literal type="string" pos:start="8:13" pos:end="8:26">"elevator.out"</literal></expr></argument>, <argument pos:start="8:29" pos:end="8:31"><expr pos:start="8:29" pos:end="8:31"><literal type="string" pos:start="8:29" pos:end="8:31">"w"</literal></expr></argument>, <argument pos:start="8:34" pos:end="8:39"><expr pos:start="8:34" pos:end="8:39"><name pos:start="8:34" pos:end="8:39">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:13"><expr pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:7">cin</name> <operator pos:start="9:9" pos:end="9:10">&gt;&gt;</operator> <name pos:start="9:12" pos:end="9:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:26"><decl pos:start="10:5" pos:end="10:25"><type pos:start="10:5" pos:end="10:17"><name pos:start="10:5" pos:end="10:8">long</name> <name pos:start="10:10" pos:end="10:13">long</name> <name pos:start="10:15" pos:end="10:17">int</name></type> <name pos:start="10:19" pos:end="10:21">sum</name> <init pos:start="10:23" pos:end="10:25">= <expr pos:start="10:25" pos:end="10:25"><literal type="number" pos:start="10:25" pos:end="10:25">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:8">long</name> <name pos:start="11:10" pos:end="11:13">long</name></type> <name pos:start="11:15" pos:end="11:16">x1</name></decl>, <decl pos:start="11:19" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:13"/><name pos:start="11:19" pos:end="11:22">last</name> <init pos:start="11:24" pos:end="11:26">= <expr pos:start="11:26" pos:end="11:26"><literal type="number" pos:start="11:26" pos:end="11:26">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="12:5" pos:end="16:5">for <control pos:start="12:9" pos:end="12:32">(<init pos:start="12:10" pos:end="12:19"><decl pos:start="12:10" pos:end="12:18"><type pos:start="12:10" pos:end="12:12"><name pos:start="12:10" pos:end="12:12">int</name></type> <name pos:start="12:14" pos:end="12:14">i</name> <init pos:start="12:16" pos:end="12:18">= <expr pos:start="12:18" pos:end="12:18"><literal type="number" pos:start="12:18" pos:end="12:18">1</literal></expr></init></decl>;</init> <condition pos:start="12:21" pos:end="12:27"><expr pos:start="12:21" pos:end="12:26"><name pos:start="12:21" pos:end="12:21">i</name> <operator pos:start="12:23" pos:end="12:24">&lt;=</operator> <name pos:start="12:26" pos:end="12:26">n</name></expr>;</condition> <incr pos:start="12:29" pos:end="12:31"><expr pos:start="12:29" pos:end="12:31"><name pos:start="12:29" pos:end="12:29">i</name><operator pos:start="12:30" pos:end="12:31">++</operator></expr></incr>)</control> <block pos:start="12:34" pos:end="16:5">{<block_content pos:start="13:9" pos:end="15:20">
        <decl_stmt pos:start="13:9" pos:end="13:14"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">x</name></decl>;</decl_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:17"><expr pos:start="14:9" pos:end="14:16"><name pos:start="14:9" pos:end="14:11">cin</name> <operator pos:start="14:13" pos:end="14:14">&gt;&gt;</operator> <name pos:start="14:16" pos:end="14:16">x</name></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:20"><expr pos:start="15:9" pos:end="15:19"><call pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:9">a</name><operator pos:start="15:10" pos:end="15:10">.</operator><name pos:start="15:11" pos:end="15:16">insert</name></name><argument_list pos:start="15:17" pos:end="15:19">(<argument pos:start="15:18" pos:end="15:18"><expr pos:start="15:18" pos:end="15:18"><name pos:start="15:18" pos:end="15:18">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="17:5" pos:end="25:5">for <control pos:start="17:9" pos:end="17:70">(<init pos:start="17:10" pos:end="17:49"><decl pos:start="17:10" pos:end="17:48"><type pos:start="17:10" pos:end="17:33"><name pos:start="17:10" pos:end="17:33"><name pos:start="17:10" pos:end="17:23"><name pos:start="17:10" pos:end="17:12">set</name><argument_list type="generic" pos:start="17:13" pos:end="17:23">&lt;<argument pos:start="17:14" pos:end="17:22"><expr pos:start="17:14" pos:end="17:22"><name pos:start="17:14" pos:end="17:17">long</name> <name pos:start="17:19" pos:end="17:22">long</name></expr></argument>&gt;</argument_list></name><operator pos:start="17:24" pos:end="17:25">::</operator><name pos:start="17:26" pos:end="17:33">iterator</name></name></type> <name pos:start="17:35" pos:end="17:36">it</name> <init pos:start="17:38" pos:end="17:48">= <expr pos:start="17:40" pos:end="17:48"><call pos:start="17:40" pos:end="17:48"><name pos:start="17:40" pos:end="17:46"><name pos:start="17:40" pos:end="17:40">a</name><operator pos:start="17:41" pos:end="17:41">.</operator><name pos:start="17:42" pos:end="17:46">begin</name></name><argument_list pos:start="17:47" pos:end="17:48">()</argument_list></call></expr></init></decl>;</init> <condition pos:start="17:51" pos:end="17:64"><expr pos:start="17:51" pos:end="17:63"><name pos:start="17:51" pos:end="17:52">it</name> <operator pos:start="17:54" pos:end="17:55">!=</operator> <call pos:start="17:57" pos:end="17:63"><name pos:start="17:57" pos:end="17:61"><name pos:start="17:57" pos:end="17:57">a</name><operator pos:start="17:58" pos:end="17:58">.</operator><name pos:start="17:59" pos:end="17:61">end</name></name><argument_list pos:start="17:62" pos:end="17:63">()</argument_list></call></expr>;</condition> <incr pos:start="17:66" pos:end="17:69"><expr pos:start="17:66" pos:end="17:69"><name pos:start="17:66" pos:end="17:67">it</name><operator pos:start="17:68" pos:end="17:69">++</operator></expr></incr>)</control> <block pos:start="17:72" pos:end="25:5">{<block_content pos:start="18:9" pos:end="24:18">
        <expr_stmt pos:start="18:9" pos:end="18:19"><expr pos:start="18:9" pos:end="18:18"><name pos:start="18:9" pos:end="18:10">x1</name> <operator pos:start="18:12" pos:end="18:12">=</operator> <operator pos:start="18:14" pos:end="18:14">(</operator><operator pos:start="18:15" pos:end="18:15">*</operator><name pos:start="18:16" pos:end="18:17">it</name><operator pos:start="18:18" pos:end="18:18">)</operator></expr>;</expr_stmt>
        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="21:9">if <condition pos:start="19:12" pos:end="19:22">(<expr pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:14">x1</name> <operator pos:start="19:16" pos:end="19:16">&gt;</operator> <name pos:start="19:18" pos:end="19:21">last</name></expr>)</condition> <block pos:start="19:24" pos:end="21:9">{<block_content pos:start="20:13" pos:end="20:35">
            <expr_stmt pos:start="20:13" pos:end="20:35"><expr pos:start="20:13" pos:end="20:34"><name pos:start="20:13" pos:end="20:15">sum</name> <operator pos:start="20:17" pos:end="20:18">+=</operator> <literal type="number" pos:start="20:20" pos:end="20:20">5</literal> <operator pos:start="20:22" pos:end="20:22">*</operator> <operator pos:start="20:24" pos:end="20:24">(</operator><name pos:start="20:25" pos:end="20:26">x1</name> <operator pos:start="20:28" pos:end="20:28">-</operator> <name pos:start="20:30" pos:end="20:33">last</name><operator pos:start="20:34" pos:end="20:34">)</operator></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="21:10" pos:end="23:9">else <block pos:start="21:15" pos:end="23:9">{<block_content pos:start="22:13" pos:end="22:35">
            <expr_stmt pos:start="22:13" pos:end="22:35"><expr pos:start="22:13" pos:end="22:34"><name pos:start="22:13" pos:end="22:15">sum</name> <operator pos:start="22:17" pos:end="22:18">+=</operator> <literal type="number" pos:start="22:20" pos:end="22:20">4</literal> <operator pos:start="22:22" pos:end="22:22">*</operator> <operator pos:start="22:24" pos:end="22:24">(</operator><name pos:start="22:25" pos:end="22:28">last</name> <operator pos:start="22:30" pos:end="22:30">-</operator> <name pos:start="22:32" pos:end="22:33">x1</name><operator pos:start="22:34" pos:end="22:34">)</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:18"><expr pos:start="24:9" pos:end="24:17"><name pos:start="24:9" pos:end="24:12">last</name> <operator pos:start="24:14" pos:end="24:14">=</operator> <name pos:start="24:16" pos:end="24:17">x1</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="26:5" pos:end="26:24"><expr pos:start="26:5" pos:end="26:23"><name pos:start="26:5" pos:end="26:7">sum</name> <operator pos:start="26:9" pos:end="26:10">+=</operator> <call pos:start="26:12" pos:end="26:19"><name pos:start="26:12" pos:end="26:17"><name pos:start="26:12" pos:end="26:12">a</name><operator pos:start="26:13" pos:end="26:13">.</operator><name pos:start="26:14" pos:end="26:17">size</name></name><argument_list pos:start="26:18" pos:end="26:19">()</argument_list></call> <operator pos:start="26:21" pos:end="26:21">*</operator> <literal type="number" pos:start="26:23" pos:end="26:23">3</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:17"><expr pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:7">sum</name> <operator pos:start="27:9" pos:end="27:10">+=</operator> <name pos:start="27:12" pos:end="27:12">n</name> <operator pos:start="27:14" pos:end="27:14">*</operator> <literal type="number" pos:start="27:16" pos:end="27:16">2</literal></expr>;</expr_stmt>
    <if_stmt pos:start="28:5" pos:end="34:5"><if pos:start="28:5" pos:end="31:5">if <condition pos:start="28:8" pos:end="28:16">(<expr pos:start="28:9" pos:end="28:15"><name pos:start="28:9" pos:end="28:10">x1</name> <operator pos:start="28:12" pos:end="28:13">==</operator> <literal type="number" pos:start="28:15" pos:end="28:15">0</literal></expr>)</condition> <block pos:start="28:18" pos:end="31:5">{<block_content pos:start="29:9" pos:end="30:17">
        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:12">cout</name> <operator pos:start="29:14" pos:end="29:15">&lt;&lt;</operator> <name pos:start="29:17" pos:end="29:19">sum</name> <operator pos:start="29:21" pos:end="29:22">&lt;&lt;</operator> <name pos:start="29:24" pos:end="29:27">endl</name></expr>;</expr_stmt>
        <return pos:start="30:9" pos:end="30:17">return <expr pos:start="30:16" pos:end="30:16"><literal type="number" pos:start="30:16" pos:end="30:16">0</literal></expr>;</return>
    </block_content>}</block></if> <else pos:start="31:7" pos:end="34:5">else <block pos:start="31:12" pos:end="34:5">{<block_content pos:start="32:9" pos:end="33:28">
        <expr_stmt pos:start="32:9" pos:end="32:24"><expr pos:start="32:9" pos:end="32:23"><name pos:start="32:9" pos:end="32:11">sum</name> <operator pos:start="32:13" pos:end="32:14">+=</operator> <name pos:start="32:16" pos:end="32:19">last</name> <operator pos:start="32:21" pos:end="32:21">*</operator> <literal type="number" pos:start="32:23" pos:end="32:23">4</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="33:9" pos:end="33:28"><expr pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:12">cout</name> <operator pos:start="33:14" pos:end="33:15">&lt;&lt;</operator> <name pos:start="33:17" pos:end="33:19">sum</name> <operator pos:start="33:21" pos:end="33:22">&lt;&lt;</operator> <name pos:start="33:24" pos:end="33:27">endl</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return> 
</block_content>}</block></function>
</unit>
