<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/674/674.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>   
<function pos:start="3:1" pos:end="15:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list> <block pos:start="3:12" pos:end="15:1">{<block_content pos:start="4:5" pos:end="14:13">
    <decl_stmt pos:start="4:5" pos:end="4:21"><decl pos:start="4:5" pos:end="4:12"><type pos:start="4:5" pos:end="4:10"><name pos:start="4:5" pos:end="4:10">double</name></type> <name pos:start="4:12" pos:end="4:12">n</name></decl> , <decl pos:start="4:16" pos:end="4:16"><type ref="prev" pos:start="4:5" pos:end="4:10"/><name pos:start="4:16" pos:end="4:16">a</name></decl> , <decl pos:start="4:20" pos:end="4:20"><type ref="prev" pos:start="4:5" pos:end="4:10"/><name pos:start="4:20" pos:end="4:20">b</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type>  <name pos:start="5:10" pos:end="5:16">min_int</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">double</name></type> <name pos:start="6:12" pos:end="6:12">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:23"><expr pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:7">cin</name> <operator pos:start="7:9" pos:end="7:10">&gt;&gt;</operator> <name pos:start="7:12" pos:end="7:12">n</name> <operator pos:start="7:14" pos:end="7:15">&gt;&gt;</operator> <name pos:start="7:17" pos:end="7:17">a</name> <operator pos:start="7:19" pos:end="7:20">&gt;&gt;</operator> <name pos:start="7:22" pos:end="7:22">b</name></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:34"><expr pos:start="8:5" pos:end="8:33"><name pos:start="8:5" pos:end="8:7">min</name> <operator pos:start="8:9" pos:end="8:9">=</operator> <operator pos:start="8:11" pos:end="8:11">(</operator><name pos:start="8:12" pos:end="8:12">n</name> <operator pos:start="8:14" pos:end="8:14">*</operator> <name pos:start="8:16" pos:end="8:16">a</name> <operator pos:start="8:18" pos:end="8:18">-</operator> <literal type="number" pos:start="8:20" pos:end="8:22">600</literal><operator pos:start="8:23" pos:end="8:23">)</operator> <operator pos:start="8:25" pos:end="8:25">/</operator> <operator pos:start="8:27" pos:end="8:27">(</operator><name pos:start="8:28" pos:end="8:28">b</name> <operator pos:start="8:30" pos:end="8:30">-</operator> <name pos:start="8:32" pos:end="8:32">a</name><operator pos:start="8:33" pos:end="8:33">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:18"><expr pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:11">min_int</name> <operator pos:start="9:13" pos:end="9:13">=</operator> <name pos:start="9:15" pos:end="9:17">min</name></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="12:5"><if pos:start="10:5" pos:end="12:5">if<condition pos:start="10:7" pos:end="10:22">(<expr pos:start="10:8" pos:end="10:21"><name pos:start="10:8" pos:end="10:10">min</name> <operator pos:start="10:12" pos:end="10:13">!=</operator> <name pos:start="10:15" pos:end="10:21">min_int</name></expr>)</condition> <block pos:start="10:24" pos:end="12:5">{<block_content pos:start="11:9" pos:end="11:18">
        <expr_stmt pos:start="11:9" pos:end="11:18"><expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:15">min_int</name><operator pos:start="11:16" pos:end="11:17">++</operator></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:28"><expr pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:8">cout</name> <operator pos:start="13:10" pos:end="13:11">&lt;&lt;</operator> <name pos:start="13:13" pos:end="13:19">min_int</name> <operator pos:start="13:21" pos:end="13:22">&lt;&lt;</operator> <name pos:start="13:24" pos:end="13:27">endl</name></expr>;</expr_stmt>
    <return pos:start="14:5" pos:end="14:13">return <expr pos:start="14:12" pos:end="14:12"><literal type="number" pos:start="14:12" pos:end="14:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
