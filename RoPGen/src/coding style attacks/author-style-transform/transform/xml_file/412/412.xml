<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/412/412.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:44"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:7"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:7">b</name></decl>,<decl pos:start="3:9" pos:end="3:17"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:9" pos:end="3:17"><name pos:start="3:9" pos:end="3:9">a</name><index pos:start="3:10" pos:end="3:17">[<expr pos:start="3:11" pos:end="3:16"><literal type="number" pos:start="3:11" pos:end="3:16">100001</literal></expr>]</index></name></decl>,<decl pos:start="3:19" pos:end="3:19"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:19" pos:end="3:19">h</name></decl>,<decl pos:start="3:21" pos:end="3:21"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:21" pos:end="3:21">t</name></decl>,<decl pos:start="3:23" pos:end="3:25"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:23" pos:end="3:25">sum</name></decl>,<decl pos:start="3:27" pos:end="3:37"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:27" pos:end="3:37"><name pos:start="3:27" pos:end="3:28">a2</name><index pos:start="3:29" pos:end="3:37">[<expr pos:start="3:30" pos:end="3:36"><literal type="number" pos:start="3:30" pos:end="3:36">1000001</literal></expr>]</index></name></decl>,<decl pos:start="3:39" pos:end="3:43"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:39" pos:end="3:43">point</name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="27:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:10">search</name><parameter_list pos:start="4:11" pos:end="4:12">()</parameter_list> <block pos:start="4:14" pos:end="27:1">{<block_content pos:start="5:5" pos:end="26:17">
    <expr_stmt pos:start="5:5" pos:end="5:8"><expr pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:5">h</name><operator pos:start="5:6" pos:end="5:6">=</operator><literal type="number" pos:start="5:7" pos:end="5:7">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:8"><expr pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:5">t</name><operator pos:start="6:6" pos:end="6:6">=</operator><literal type="number" pos:start="6:7" pos:end="6:7">2</literal></expr>;</expr_stmt>
    <while pos:start="7:5" pos:end="24:5">while<condition pos:start="7:10" pos:end="7:14">(<expr pos:start="7:11" pos:end="7:13"><name pos:start="7:11" pos:end="7:11">h</name><operator pos:start="7:12" pos:end="7:12">&lt;</operator><name pos:start="7:13" pos:end="7:13">n</name></expr>)</condition> <block pos:start="7:16" pos:end="24:5">{<block_content pos:start="8:9" pos:end="23:18">
        <expr_stmt pos:start="8:9" pos:end="8:18"><expr pos:start="8:9" pos:end="8:17"><name pos:start="8:9" pos:end="8:11">sum</name><operator pos:start="8:12" pos:end="8:13">+=</operator><name pos:start="8:14" pos:end="8:17"><name pos:start="8:14" pos:end="8:14">a</name><index pos:start="8:15" pos:end="8:17">[<expr pos:start="8:16" pos:end="8:16"><name pos:start="8:16" pos:end="8:16">h</name></expr>]</index></name></expr>;</expr_stmt>
        <while pos:start="9:9" pos:end="21:9">while<condition pos:start="9:14" pos:end="9:19">(<expr pos:start="9:15" pos:end="9:18"><name pos:start="9:15" pos:end="9:15">t</name><operator pos:start="9:16" pos:end="9:17">!=</operator><name pos:start="9:18" pos:end="9:18">n</name></expr>)</condition>
        <block pos:start="10:9" pos:end="21:9">{<block_content pos:start="11:13" pos:end="20:21">
            <for pos:start="11:13" pos:end="19:9">for<control pos:start="11:16" pos:end="11:35">(<init pos:start="11:17" pos:end="11:24"><decl pos:start="11:17" pos:end="11:23"><type pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:19">int</name></type> <name pos:start="11:21" pos:end="11:21">i</name><init pos:start="11:22" pos:end="11:23">=<expr pos:start="11:23" pos:end="11:23"><name pos:start="11:23" pos:end="11:23">t</name></expr></init></decl>;</init> <condition pos:start="11:26" pos:end="11:30"><expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:26">i</name><operator pos:start="11:27" pos:end="11:28">&lt;=</operator><name pos:start="11:29" pos:end="11:29">n</name></expr>;</condition> <incr pos:start="11:32" pos:end="11:34"><expr pos:start="11:32" pos:end="11:34"><name pos:start="11:32" pos:end="11:32">i</name><operator pos:start="11:33" pos:end="11:34">++</operator></expr></incr>)</control> <block pos:start="11:37" pos:end="19:9">{<block_content pos:start="13:13" pos:end="18:13">
            
            <expr_stmt pos:start="13:13" pos:end="13:22"><expr pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:15">sum</name><operator pos:start="13:16" pos:end="13:17">+=</operator><name pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:18">a</name><index pos:start="13:19" pos:end="13:21">[<expr pos:start="13:20" pos:end="13:20"><name pos:start="13:20" pos:end="13:20">i</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="14:13" pos:end="18:13"><if pos:start="14:13" pos:end="18:13">if<condition pos:start="14:15" pos:end="14:22">(<expr pos:start="14:16" pos:end="14:21"><name pos:start="14:16" pos:end="14:18">sum</name><operator pos:start="14:19" pos:end="14:20">&gt;=</operator><name pos:start="14:21" pos:end="14:21">b</name></expr>)</condition> <block pos:start="14:24" pos:end="18:13">{<block_content pos:start="15:17" pos:end="17:22">
                <expr_stmt pos:start="15:17" pos:end="15:24"><expr pos:start="15:17" pos:end="15:23"><name pos:start="15:17" pos:end="15:21">point</name><operator pos:start="15:22" pos:end="15:23">++</operator></expr>;</expr_stmt>
                <expr_stmt pos:start="16:17" pos:end="16:32"><expr pos:start="16:17" pos:end="16:31"><name pos:start="16:17" pos:end="16:25"><name pos:start="16:17" pos:end="16:18">a2</name><index pos:start="16:19" pos:end="16:25">[<expr pos:start="16:20" pos:end="16:24"><name pos:start="16:20" pos:end="16:24">point</name></expr>]</index></name><operator pos:start="16:26" pos:end="16:26">=</operator><name pos:start="16:27" pos:end="16:29">sum</name><operator pos:start="16:30" pos:end="16:30">-</operator><name pos:start="16:31" pos:end="16:31">b</name></expr>;</expr_stmt>
                <break pos:start="17:17" pos:end="17:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="20:9" pos:end="20:12"><expr pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:9">t</name><operator pos:start="20:10" pos:end="20:11">++</operator></expr>;</expr_stmt><expr_stmt pos:start="20:13" pos:end="20:21"><expr pos:start="20:13" pos:end="20:20"><name pos:start="20:13" pos:end="20:15">sum</name><operator pos:start="20:16" pos:end="20:16">=</operator><name pos:start="20:17" pos:end="20:20"><name pos:start="20:17" pos:end="20:17">a</name><index pos:start="20:18" pos:end="20:20">[<expr pos:start="20:19" pos:end="20:19"><name pos:start="20:19" pos:end="20:19">h</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></while>
        
        <expr_stmt pos:start="23:9" pos:end="23:12"><expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:9">h</name><operator pos:start="23:10" pos:end="23:11">++</operator></expr>;</expr_stmt><expr_stmt pos:start="23:13" pos:end="23:18"><expr pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:13">t</name><operator pos:start="23:14" pos:end="23:14">=</operator><name pos:start="23:15" pos:end="23:15">h</name><operator pos:start="23:16" pos:end="23:16">+</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:8">sort</name><argument_list pos:start="25:9" pos:end="25:25">(<argument pos:start="25:10" pos:end="25:13"><expr pos:start="25:10" pos:end="25:13"><name pos:start="25:10" pos:end="25:11">a2</name><operator pos:start="25:12" pos:end="25:12">+</operator><literal type="number" pos:start="25:13" pos:end="25:13">1</literal></expr></argument>,<argument pos:start="25:15" pos:end="25:24"><expr pos:start="25:15" pos:end="25:24"><name pos:start="25:15" pos:end="25:16">a2</name><operator pos:start="25:17" pos:end="25:17">+</operator><name pos:start="25:18" pos:end="25:22">point</name><operator pos:start="25:23" pos:end="25:23">+</operator><literal type="number" pos:start="25:24" pos:end="25:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="26:5" pos:end="26:17">return <expr pos:start="26:12" pos:end="26:16"><name pos:start="26:12" pos:end="26:16"><name pos:start="26:12" pos:end="26:13">a2</name><index pos:start="26:14" pos:end="26:16">[<expr pos:start="26:15" pos:end="26:15"><literal type="number" pos:start="26:15" pos:end="26:15">1</literal></expr>]</index></name></expr>;</return>
</block_content>}</block></function>
<function pos:start="28:1" pos:end="42:1"><type pos:start="28:1" pos:end="28:3"><name pos:start="28:1" pos:end="28:3">int</name></type> <name pos:start="28:5" pos:end="28:8">main</name><parameter_list pos:start="28:9" pos:end="28:10">()</parameter_list> <block pos:start="28:12" pos:end="42:1">{<block_content pos:start="29:5" pos:end="41:13">
    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><call pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:11">freopen</name> <argument_list pos:start="29:13" pos:end="29:38">(<argument pos:start="29:14" pos:end="29:23"><expr pos:start="29:14" pos:end="29:23"><literal type="string" pos:start="29:14" pos:end="29:23">"shelf.in"</literal></expr></argument> , <argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><literal type="string" pos:start="29:27" pos:end="29:29">"r"</literal></expr></argument> , <argument pos:start="29:33" pos:end="29:37"><expr pos:start="29:33" pos:end="29:37"><name pos:start="29:33" pos:end="29:37">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:41"><expr pos:start="30:5" pos:end="30:40"><call pos:start="30:5" pos:end="30:40"><name pos:start="30:5" pos:end="30:11">freopen</name> <argument_list pos:start="30:13" pos:end="30:40">(<argument pos:start="30:14" pos:end="30:24"><expr pos:start="30:14" pos:end="30:24"><literal type="string" pos:start="30:14" pos:end="30:24">"shelf.out"</literal></expr></argument> , <argument pos:start="30:28" pos:end="30:30"><expr pos:start="30:28" pos:end="30:30"><literal type="string" pos:start="30:28" pos:end="30:30">"w"</literal></expr></argument> , <argument pos:start="30:34" pos:end="30:39"><expr pos:start="30:34" pos:end="30:39"><name pos:start="30:34" pos:end="30:39">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:14"><expr pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:7">cin</name><operator pos:start="31:8" pos:end="31:9">&gt;&gt;</operator><name pos:start="31:10" pos:end="31:10">n</name><operator pos:start="31:11" pos:end="31:12">&gt;&gt;</operator><name pos:start="31:13" pos:end="31:13">b</name></expr>;</expr_stmt>
    <for pos:start="32:5" pos:end="38:5">for<control pos:start="32:8" pos:end="32:27">(<init pos:start="32:9" pos:end="32:16"><decl pos:start="32:9" pos:end="32:15"><type pos:start="32:9" pos:end="32:11"><name pos:start="32:9" pos:end="32:11">int</name></type> <name pos:start="32:13" pos:end="32:13">i</name><init pos:start="32:14" pos:end="32:15">=<expr pos:start="32:15" pos:end="32:15"><literal type="number" pos:start="32:15" pos:end="32:15">1</literal></expr></init></decl>;</init> <condition pos:start="32:18" pos:end="32:22"><expr pos:start="32:18" pos:end="32:21"><name pos:start="32:18" pos:end="32:18">i</name><operator pos:start="32:19" pos:end="32:20">&lt;=</operator><name pos:start="32:21" pos:end="32:21">n</name></expr>;</condition> <incr pos:start="32:24" pos:end="32:26"><expr pos:start="32:24" pos:end="32:26"><name pos:start="32:24" pos:end="32:24">i</name><operator pos:start="32:25" pos:end="32:26">++</operator></expr></incr>)</control> <block pos:start="32:29" pos:end="38:5">{<block_content pos:start="33:9" pos:end="37:9">
        <expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:11">cin</name><operator pos:start="33:12" pos:end="33:13">&gt;&gt;</operator><name pos:start="33:14" pos:end="33:17"><name pos:start="33:14" pos:end="33:14">a</name><index pos:start="33:15" pos:end="33:17">[<expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">i</name></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="34:9" pos:end="37:9"><if pos:start="34:9" pos:end="37:9">if<condition pos:start="34:11" pos:end="34:19">(<expr pos:start="34:12" pos:end="34:18"><name pos:start="34:12" pos:end="34:15"><name pos:start="34:12" pos:end="34:12">a</name><index pos:start="34:13" pos:end="34:15">[<expr pos:start="34:14" pos:end="34:14"><name pos:start="34:14" pos:end="34:14">i</name></expr>]</index></name><operator pos:start="34:16" pos:end="34:17">==</operator><name pos:start="34:18" pos:end="34:18">b</name></expr>)</condition> <block pos:start="34:21" pos:end="37:9">{<block_content pos:start="35:13" pos:end="36:21">
            <expr_stmt pos:start="35:13" pos:end="35:20"><expr pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:16">cout</name><operator pos:start="35:17" pos:end="35:18">&lt;&lt;</operator><literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr>;</expr_stmt>
            <return pos:start="36:13" pos:end="36:21">return <expr pos:start="36:20" pos:end="36:20"><literal type="number" pos:start="36:20" pos:end="36:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="39:5" pos:end="39:20"><expr pos:start="39:5" pos:end="39:19"><call pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:8">sort</name><argument_list pos:start="39:9" pos:end="39:19">(<argument pos:start="39:10" pos:end="39:12"><expr pos:start="39:10" pos:end="39:12"><name pos:start="39:10" pos:end="39:10">a</name><operator pos:start="39:11" pos:end="39:11">+</operator><literal type="number" pos:start="39:12" pos:end="39:12">1</literal></expr></argument>,<argument pos:start="39:14" pos:end="39:18"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">a</name><operator pos:start="39:15" pos:end="39:15">+</operator><name pos:start="39:16" pos:end="39:16">n</name><operator pos:start="39:17" pos:end="39:17">+</operator><literal type="number" pos:start="39:18" pos:end="39:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:19"><expr pos:start="40:5" pos:end="40:18"><name pos:start="40:5" pos:end="40:8">cout</name><operator pos:start="40:9" pos:end="40:10">&lt;&lt;</operator><call pos:start="40:11" pos:end="40:18"><name pos:start="40:11" pos:end="40:16">search</name><argument_list pos:start="40:17" pos:end="40:18">()</argument_list></call></expr>;</expr_stmt>
    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
