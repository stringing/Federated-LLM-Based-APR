<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/104/104.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="36:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="36:1">{<block_content pos:start="4:5" pos:end="35:13">
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">n</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name> <init pos:start="5:11" pos:end="5:13">= <expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:24"><decl pos:start="6:5" pos:end="6:23"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:17"><name pos:start="6:12" pos:end="6:12">f</name><index pos:start="6:13" pos:end="6:17">[<expr pos:start="6:14" pos:end="6:16"><literal type="number" pos:start="6:14" pos:end="6:16">100</literal></expr>]</index></name> <init pos:start="6:19" pos:end="6:23">= <expr pos:start="6:21" pos:end="6:23"><block pos:start="6:21" pos:end="6:23">{ }</block></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:13"><expr pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">cin</name> <operator pos:start="7:9" pos:end="7:10">&gt;&gt;</operator> <name pos:start="7:12" pos:end="7:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:14"><expr pos:start="8:5" pos:end="8:13"><call pos:start="8:5" pos:end="8:13"><name pos:start="8:5" pos:end="8:11">getchar</name><argument_list pos:start="8:12" pos:end="8:13">()</argument_list></call></expr>;</expr_stmt>
    <while pos:start="9:5" pos:end="12:5">while<condition pos:start="9:10" pos:end="9:14">(<expr pos:start="9:11" pos:end="9:13"><name pos:start="9:11" pos:end="9:11">n</name><operator pos:start="9:12" pos:end="9:13">--</operator></expr>)</condition><block pos:start="9:15" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:23">
        <decl_stmt pos:start="10:9" pos:end="10:17"><decl pos:start="10:9" pos:end="10:16"><type pos:start="10:9" pos:end="10:14"><name pos:start="10:9" pos:end="10:14">string</name></type> <name pos:start="10:16" pos:end="10:16">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:23"><expr pos:start="11:9" pos:end="11:22"><call pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:15">getline</name><argument_list pos:start="11:16" pos:end="11:22">(<argument pos:start="11:17" pos:end="11:19"><expr pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:19">cin</name></expr></argument>,<argument pos:start="11:21" pos:end="11:21"><expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <for pos:start="13:5" pos:end="34:5">for<control pos:start="13:8" pos:end="13:36">(<init pos:start="13:9" pos:end="13:18"><decl pos:start="13:9" pos:end="13:17"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name> <init pos:start="13:15" pos:end="13:17">= <expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr></init></decl>;</init> <condition pos:start="13:20" pos:end="13:32"><expr pos:start="13:20" pos:end="13:31"><name pos:start="13:20" pos:end="13:20">i</name> <operator pos:start="13:22" pos:end="13:22">&lt;</operator> <call pos:start="13:24" pos:end="13:31"><name pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:24">s</name><operator pos:start="13:25" pos:end="13:25">.</operator><name pos:start="13:26" pos:end="13:29">size</name></name><argument_list pos:start="13:30" pos:end="13:31">()</argument_list></call></expr>;</condition><incr pos:start="13:33" pos:end="13:35"><expr pos:start="13:33" pos:end="13:35"><name pos:start="13:33" pos:end="13:33">i</name><operator pos:start="13:34" pos:end="13:35">++</operator></expr></incr>)</control><block pos:start="13:37" pos:end="34:5">{<block_content pos:start="14:9" pos:end="33:9">
        <if_stmt pos:start="14:9" pos:end="16:9"><if pos:start="14:9" pos:end="16:9">if<condition pos:start="14:11" pos:end="14:43">(<expr pos:start="14:12" pos:end="14:42"><name pos:start="14:12" pos:end="14:15"><name pos:start="14:12" pos:end="14:12">s</name><index pos:start="14:13" pos:end="14:15">[<expr pos:start="14:14" pos:end="14:14"><name pos:start="14:14" pos:end="14:14">i</name></expr>]</index></name> <operator pos:start="14:17" pos:end="14:18">&gt;=</operator> <literal type="char" pos:start="14:20" pos:end="14:22">'A'</literal> <operator pos:start="14:24" pos:end="14:25">&amp;&amp;</operator> <operator pos:start="14:27" pos:end="14:28">&lt;=</operator> <literal type="char" pos:start="14:30" pos:end="14:32">'Z'</literal> <operator pos:start="14:34" pos:end="14:35">&amp;&amp;</operator> <operator pos:start="14:37" pos:end="14:38">!=</operator> <literal type="char" pos:start="14:40" pos:end="14:42">'I'</literal></expr>)</condition><block pos:start="14:44" pos:end="16:9">{<block_content pos:start="15:13" pos:end="15:23">
            <expr_stmt pos:start="15:13" pos:end="15:23"><expr pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:13">s</name><index pos:start="15:14" pos:end="15:16">[<expr pos:start="15:15" pos:end="15:15"><name pos:start="15:15" pos:end="15:15">i</name></expr>]</index></name> <operator pos:start="15:18" pos:end="15:19">+=</operator> <literal type="number" pos:start="15:21" pos:end="15:22">32</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="17:9" pos:end="19:9"><if pos:start="17:9" pos:end="19:9">if<condition pos:start="17:11" pos:end="17:23">(<expr pos:start="17:12" pos:end="17:22"><name pos:start="17:12" pos:end="17:15"><name pos:start="17:12" pos:end="17:12">s</name><index pos:start="17:13" pos:end="17:15">[<expr pos:start="17:14" pos:end="17:14"><name pos:start="17:14" pos:end="17:14">i</name></expr>]</index></name> <operator pos:start="17:17" pos:end="17:18">==</operator> <literal type="char" pos:start="17:20" pos:end="17:22">'?'</literal></expr>)</condition><block pos:start="17:24" pos:end="19:9">{<block_content pos:start="18:13" pos:end="18:23">
            <expr_stmt pos:start="18:13" pos:end="18:23"><expr pos:start="18:13" pos:end="18:22"><name pos:start="18:13" pos:end="18:16"><name pos:start="18:13" pos:end="18:13">s</name><index pos:start="18:14" pos:end="18:16">[<expr pos:start="18:15" pos:end="18:15"><name pos:start="18:15" pos:end="18:15">i</name></expr>]</index></name> <operator pos:start="18:18" pos:end="18:18">=</operator> <literal type="char" pos:start="18:20" pos:end="18:22">'!'</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="20:9" pos:end="24:9"><if pos:start="20:9" pos:end="22:9">if<condition pos:start="20:11" pos:end="20:23">(<expr pos:start="20:12" pos:end="20:22"><name pos:start="20:12" pos:end="20:15"><name pos:start="20:12" pos:end="20:12">s</name><index pos:start="20:13" pos:end="20:15">[<expr pos:start="20:14" pos:end="20:14"><name pos:start="20:14" pos:end="20:14">i</name></expr>]</index></name> <operator pos:start="20:17" pos:end="20:18">!=</operator> <literal type="string" pos:start="20:20" pos:end="20:22">" "</literal></expr>)</condition><block pos:start="20:24" pos:end="22:9">{<block_content pos:start="21:13" pos:end="21:24">
            <expr_stmt pos:start="21:13" pos:end="21:24"><expr pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:16"><name pos:start="21:13" pos:end="21:13">f</name><index pos:start="21:14" pos:end="21:16">[<expr pos:start="21:15" pos:end="21:15"><name pos:start="21:15" pos:end="21:15">x</name></expr>]</index></name> <operator pos:start="21:18" pos:end="21:19">+=</operator> <name pos:start="21:21" pos:end="21:24"><name pos:start="21:21" pos:end="21:21">s</name><index pos:start="21:22" pos:end="21:24">[<expr pos:start="21:23" pos:end="21:23"><name pos:start="21:23" pos:end="21:23">i</name></expr>]</index></name></expr></expr_stmt>
        </block_content>}</block></if><else pos:start="22:10" pos:end="24:9">else<block pos:start="22:14" pos:end="24:9">{<block_content pos:start="23:13" pos:end="23:16">
            <expr_stmt pos:start="23:13" pos:end="23:16"><expr pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:13">x</name><operator pos:start="23:14" pos:end="23:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <for pos:start="25:9" pos:end="33:9">for<control pos:start="25:12" pos:end="25:34">(<init pos:start="25:13" pos:end="25:22"><decl pos:start="25:13" pos:end="25:21"><type pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">int</name></type> <name pos:start="25:17" pos:end="25:17">i</name> <init pos:start="25:19" pos:end="25:21">= <expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr></init></decl>;</init> <condition pos:start="25:24" pos:end="25:30"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:24">i</name> <operator pos:start="25:26" pos:end="25:27">&lt;=</operator> <name pos:start="25:29" pos:end="25:29">x</name></expr>;</condition><incr pos:start="25:31" pos:end="25:33"><expr pos:start="25:31" pos:end="25:33"><name pos:start="25:31" pos:end="25:31">i</name><operator pos:start="25:32" pos:end="25:33">++</operator></expr></incr>)</control><block pos:start="25:35" pos:end="33:9">{<block_content pos:start="26:13" pos:end="32:13">
            <if_stmt pos:start="26:13" pos:end="32:13"><if pos:start="26:13" pos:end="28:13">if<condition pos:start="26:15" pos:end="26:67">(<expr pos:start="26:16" pos:end="26:66"><name pos:start="26:16" pos:end="26:19"><name pos:start="26:16" pos:end="26:16">f</name><index pos:start="26:17" pos:end="26:19">[<expr pos:start="26:18" pos:end="26:18"><name pos:start="26:18" pos:end="26:18">i</name></expr>]</index></name> <operator pos:start="26:21" pos:end="26:22">==</operator> <literal type="string" pos:start="26:24" pos:end="26:28">"can"</literal> <operator pos:start="26:30" pos:end="26:31">||</operator> <name pos:start="26:33" pos:end="26:36"><name pos:start="26:33" pos:end="26:33">f</name><index pos:start="26:34" pos:end="26:36">[<expr pos:start="26:35" pos:end="26:35"><name pos:start="26:35" pos:end="26:35">i</name></expr>]</index></name> <operator pos:start="26:38" pos:end="26:39">==</operator> <literal type="string" pos:start="26:41" pos:end="26:47">"could"</literal> <operator pos:start="26:49" pos:end="26:50">&amp;&amp;</operator> <name pos:start="26:52" pos:end="26:57"><name pos:start="26:52" pos:end="26:52">f</name><index pos:start="26:53" pos:end="26:57">[<expr pos:start="26:54" pos:end="26:56"><name pos:start="26:54" pos:end="26:54">i</name><operator pos:start="26:55" pos:end="26:55">+</operator><literal type="number" pos:start="26:56" pos:end="26:56">1</literal></expr>]</index></name> <operator pos:start="26:59" pos:end="26:60">==</operator> <literal type="string" pos:start="26:62" pos:end="26:66">"you"</literal></expr>)</condition><block pos:start="26:68" pos:end="28:13">{<block_content pos:start="27:17" pos:end="27:41">
                <expr_stmt pos:start="27:17" pos:end="27:41"><expr pos:start="27:17" pos:end="27:41"><name pos:start="27:17" pos:end="27:20">cout</name> <operator pos:start="27:22" pos:end="27:23">&lt;&lt;</operator> <literal type="string" pos:start="27:25" pos:end="27:27">"I"</literal> <operator pos:start="27:29" pos:end="27:30">&lt;&lt;</operator> <name pos:start="27:32" pos:end="27:35"><name pos:start="27:32" pos:end="27:32">f</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">i</name></expr>]</index></name> <operator pos:start="27:37" pos:end="27:38">&lt;&lt;</operator><literal type="string" pos:start="27:39" pos:end="27:41">" "</literal></expr></expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="28:14" pos:end="30:13">else if<condition pos:start="28:21" pos:end="28:49">(<expr pos:start="28:22" pos:end="28:48"><name pos:start="28:22" pos:end="28:25"><name pos:start="28:22" pos:end="28:22">f</name><index pos:start="28:23" pos:end="28:25">[<expr pos:start="28:24" pos:end="28:24"><name pos:start="28:24" pos:end="28:24">i</name></expr>]</index></name> <operator pos:start="28:27" pos:end="28:28">==</operator> <literal type="string" pos:start="28:30" pos:end="28:32">"I"</literal> <operator pos:start="28:34" pos:end="28:35">||</operator> <name pos:start="28:37" pos:end="28:40"><name pos:start="28:37" pos:end="28:37">f</name><index pos:start="28:38" pos:end="28:40">[<expr pos:start="28:39" pos:end="28:39"><name pos:start="28:39" pos:end="28:39">i</name></expr>]</index></name> <operator pos:start="28:42" pos:end="28:43">==</operator> <literal type="string" pos:start="28:45" pos:end="28:48">"me"</literal></expr>)</condition><block pos:start="28:50" pos:end="30:13">{<block_content pos:start="29:17" pos:end="29:37">
                <expr_stmt pos:start="29:17" pos:end="29:37"><expr pos:start="29:17" pos:end="29:36"><name pos:start="29:17" pos:end="29:20">cout</name> <operator pos:start="29:22" pos:end="29:23">&lt;&lt;</operator> <literal type="string" pos:start="29:25" pos:end="29:29">"you"</literal> <operator pos:start="29:31" pos:end="29:32">&lt;&lt;</operator> <literal type="string" pos:start="29:34" pos:end="29:36">" "</literal></expr>;</expr_stmt>
            </block_content>}</block></if><else pos:start="30:14" pos:end="32:13">else<block pos:start="30:18" pos:end="32:13">{<block_content pos:start="31:17" pos:end="31:36">
                <expr_stmt pos:start="31:17" pos:end="31:36"><expr pos:start="31:17" pos:end="31:35"><name pos:start="31:17" pos:end="31:20">cout</name> <operator pos:start="31:22" pos:end="31:23">&lt;&lt;</operator> <name pos:start="31:25" pos:end="31:28"><name pos:start="31:25" pos:end="31:25">f</name><index pos:start="31:26" pos:end="31:28">[<expr pos:start="31:27" pos:end="31:27"><name pos:start="31:27" pos:end="31:27">i</name></expr>]</index></name> <operator pos:start="31:30" pos:end="31:31">&lt;&lt;</operator> <literal type="string" pos:start="31:33" pos:end="31:35">" "</literal></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
