<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/731/731.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="20:1"><type pos:start="3:1" pos:end="3:4"><name pos:start="3:1" pos:end="3:4">void</name></type> <name pos:start="3:6" pos:end="3:6">f</name><parameter_list pos:start="3:7" pos:end="3:19">(<parameter pos:start="3:8" pos:end="3:18"><decl pos:start="3:8" pos:end="3:18"><type pos:start="3:8" pos:end="3:16"><name pos:start="3:8" pos:end="3:11">long</name> <name pos:start="3:13" pos:end="3:16">long</name></type> <name pos:start="3:18" pos:end="3:18">n</name></decl></parameter>)</parameter_list> <block pos:start="3:21" pos:end="20:1">{<block_content pos:start="4:5" pos:end="19:5">
    <if_stmt pos:start="4:5" pos:end="13:5"><if pos:start="4:5" pos:end="7:5">if<condition pos:start="4:7" pos:end="4:15">(<expr pos:start="4:8" pos:end="4:14"><name pos:start="4:8" pos:end="4:8">n</name> <operator pos:start="4:10" pos:end="4:11">==</operator> <literal type="number" pos:start="4:13" pos:end="4:14">12</literal></expr>)</condition> <block pos:start="4:17" pos:end="7:5">{<block_content pos:start="5:9" pos:end="6:20">
        <expr_stmt pos:start="5:9" pos:end="5:31"><expr pos:start="5:9" pos:end="5:30"><name pos:start="5:9" pos:end="5:12">cout</name> <operator pos:start="5:14" pos:end="5:15">&lt;&lt;</operator> <literal type="string" pos:start="5:17" pos:end="5:30">"12, 6, 3, 12"</literal></expr>;</expr_stmt>
        <return pos:start="6:9" pos:end="6:20">return <expr pos:start="6:16" pos:end="6:19"><call pos:start="6:16" pos:end="6:19"><name pos:start="6:16" pos:end="6:16">f</name><argument_list pos:start="6:17" pos:end="6:19">(<argument pos:start="6:18" pos:end="6:18"><expr pos:start="6:18" pos:end="6:18"><name pos:start="6:18" pos:end="6:18">n</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if> <if type="elseif" pos:start="7:7" pos:end="10:5">else if<condition pos:start="7:14" pos:end="7:21">(<expr pos:start="7:15" pos:end="7:20"><name pos:start="7:15" pos:end="7:15">n</name> <operator pos:start="7:17" pos:end="7:18">==</operator> <literal type="number" pos:start="7:20" pos:end="7:20">6</literal></expr>)</condition> <block pos:start="7:23" pos:end="10:5">{<block_content pos:start="8:9" pos:end="9:20">
        <expr_stmt pos:start="8:9" pos:end="8:30"><expr pos:start="8:9" pos:end="8:29"><name pos:start="8:9" pos:end="8:12">cout</name> <operator pos:start="8:14" pos:end="8:15">&lt;&lt;</operator> <literal type="string" pos:start="8:17" pos:end="8:29">"6, 3, 12, 6"</literal></expr>;</expr_stmt>
        <return pos:start="9:9" pos:end="9:20">return <expr pos:start="9:16" pos:end="9:19"><call pos:start="9:16" pos:end="9:19"><name pos:start="9:16" pos:end="9:16">f</name><argument_list pos:start="9:17" pos:end="9:19">(<argument pos:start="9:18" pos:end="9:18"><expr pos:start="9:18" pos:end="9:18"><name pos:start="9:18" pos:end="9:18">n</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if> <if type="elseif" pos:start="10:7" pos:end="13:5">else if<condition pos:start="10:14" pos:end="10:21">(<expr pos:start="10:15" pos:end="10:20"><name pos:start="10:15" pos:end="10:15">n</name> <operator pos:start="10:17" pos:end="10:18">==</operator> <literal type="number" pos:start="10:20" pos:end="10:20">3</literal></expr>)</condition> <block pos:start="10:23" pos:end="13:5">{<block_content pos:start="11:9" pos:end="12:20">
        <expr_stmt pos:start="11:9" pos:end="11:30"><expr pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:12">cout</name> <operator pos:start="11:14" pos:end="11:15">&lt;&lt;</operator> <literal type="string" pos:start="11:17" pos:end="11:29">"3, 12, 6, 3"</literal></expr>;</expr_stmt>
        <return pos:start="12:9" pos:end="12:20">return <expr pos:start="12:16" pos:end="12:19"><call pos:start="12:16" pos:end="12:19"><name pos:start="12:16" pos:end="12:16">f</name><argument_list pos:start="12:17" pos:end="12:19">(<argument pos:start="12:18" pos:end="12:18"><expr pos:start="12:18" pos:end="12:18"><name pos:start="12:18" pos:end="12:18">n</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:22"><expr pos:start="14:5" pos:end="14:21"><name pos:start="14:5" pos:end="14:8">cout</name> <operator pos:start="14:10" pos:end="14:11">&lt;&lt;</operator> <name pos:start="14:13" pos:end="14:13">n</name> <operator pos:start="14:15" pos:end="14:16">&lt;&lt;</operator> <literal type="string" pos:start="14:18" pos:end="14:21">", "</literal></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="17:5">if<condition pos:start="15:7" pos:end="15:18">(<expr pos:start="15:8" pos:end="15:17"><name pos:start="15:8" pos:end="15:8">n</name> <operator pos:start="15:10" pos:end="15:10">%</operator> <literal type="number" pos:start="15:12" pos:end="15:12">2</literal> <operator pos:start="15:14" pos:end="15:15">==</operator> <literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr>)</condition> <block pos:start="15:20" pos:end="17:5">{<block_content pos:start="16:9" pos:end="16:15">
        <expr_stmt pos:start="16:9" pos:end="16:15"><expr pos:start="16:9" pos:end="16:14"><call pos:start="16:9" pos:end="16:14"><name pos:start="16:9" pos:end="16:9">f</name><argument_list pos:start="16:10" pos:end="16:14">(<argument pos:start="16:11" pos:end="16:13"><expr pos:start="16:11" pos:end="16:13"><name pos:start="16:11" pos:end="16:11">n</name><operator pos:start="16:12" pos:end="16:12">/</operator><literal type="number" pos:start="16:13" pos:end="16:13">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="19:5">else if<condition pos:start="17:14" pos:end="17:25">(<expr pos:start="17:15" pos:end="17:24"><name pos:start="17:15" pos:end="17:15">n</name> <operator pos:start="17:17" pos:end="17:17">%</operator> <literal type="number" pos:start="17:19" pos:end="17:19">2</literal> <operator pos:start="17:21" pos:end="17:22">==</operator> <literal type="number" pos:start="17:24" pos:end="17:24">1</literal></expr>)</condition> <block pos:start="17:27" pos:end="19:5">{<block_content pos:start="18:9" pos:end="18:24">
        <expr_stmt pos:start="18:9" pos:end="18:24"><expr pos:start="18:9" pos:end="18:23"><name pos:start="18:9" pos:end="18:12">cout</name> <operator pos:start="18:14" pos:end="18:15">&lt;&lt;</operator> <name pos:start="18:17" pos:end="18:17">n</name><operator pos:start="18:18" pos:end="18:18">*</operator><literal type="number" pos:start="18:19" pos:end="18:21">3</literal> <operator pos:start="18:21" pos:end="18:21">+</operator> <literal type="number" pos:start="18:23" pos:end="18:23">6</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="21:1" pos:end="26:1"><type pos:start="21:1" pos:end="21:3"><name pos:start="21:1" pos:end="21:3">int</name></type> <name pos:start="21:5" pos:end="21:8">main</name><parameter_list pos:start="21:9" pos:end="21:10">()</parameter_list> <block pos:start="21:12" pos:end="26:1">{<block_content pos:start="22:5" pos:end="25:9">
    <decl_stmt pos:start="22:5" pos:end="22:10"><decl pos:start="22:5" pos:end="22:9"><type pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></type> <name pos:start="22:9" pos:end="22:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:13"><expr pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:7">cin</name> <operator pos:start="23:9" pos:end="23:10">&gt;&gt;</operator> <name pos:start="23:12" pos:end="23:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:14"><expr pos:start="24:5" pos:end="24:13"><name pos:start="24:5" pos:end="24:8">cout</name> <operator pos:start="24:10" pos:end="24:11">&lt;&lt;</operator> <name pos:start="24:13" pos:end="24:13">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:9"><expr pos:start="25:5" pos:end="25:8"><call pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:5">f</name><argument_list pos:start="25:6" pos:end="25:8">(<argument pos:start="25:7" pos:end="25:7"><expr pos:start="25:7" pos:end="25:7"><name pos:start="25:7" pos:end="25:7">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
