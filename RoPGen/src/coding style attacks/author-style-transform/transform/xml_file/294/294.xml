<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/294/294.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:6"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:17"><decl pos:start="4:1" pos:end="4:16"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">minn</name><init pos:start="4:9" pos:end="4:16">=<expr pos:start="4:10" pos:end="4:16"><name pos:start="4:10" pos:end="4:16">INT_MAX</name></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:11"><decl pos:start="5:1" pos:end="5:10"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:5">a</name><index pos:start="5:6" pos:end="5:10">[<expr pos:start="5:7" pos:end="5:9"><literal type="number" pos:start="5:7" pos:end="5:9">100</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:11"><decl pos:start="6:1" pos:end="6:10"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:5">b</name><index pos:start="6:6" pos:end="6:10">[<expr pos:start="6:7" pos:end="6:9"><literal type="number" pos:start="6:7" pos:end="6:9">110</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="18:1"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">void</name></type> <name pos:start="7:6" pos:end="7:8">dfs</name><parameter_list pos:start="7:9" pos:end="7:27">(<parameter pos:start="7:10" pos:end="7:14"><decl pos:start="7:10" pos:end="7:14"><type pos:start="7:10" pos:end="7:14"><name pos:start="7:10" pos:end="7:12">int</name></type> <name pos:start="7:14" pos:end="7:14">k</name></decl></parameter>,<parameter pos:start="7:16" pos:end="7:20"><decl pos:start="7:16" pos:end="7:20"><type pos:start="7:16" pos:end="7:20"><name pos:start="7:16" pos:end="7:18">int</name></type> <name pos:start="7:20" pos:end="7:20">t</name></decl></parameter>,<parameter pos:start="7:22" pos:end="7:26"><decl pos:start="7:22" pos:end="7:26"><type pos:start="7:22" pos:end="7:26"><name pos:start="7:22" pos:end="7:24">int</name></type> <name pos:start="7:26" pos:end="7:26">p</name></decl></parameter>)</parameter_list>
<block pos:start="8:1" pos:end="18:1">{<block_content pos:start="9:5" pos:end="17:17">
    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if<condition pos:start="9:7" pos:end="9:12">(<expr pos:start="9:8" pos:end="9:11"><name pos:start="9:8" pos:end="9:8">k</name><operator pos:start="9:9" pos:end="9:10">==</operator><name pos:start="9:11" pos:end="9:11">n</name></expr>)</condition>
    <block pos:start="10:5" pos:end="13:5">{<block_content pos:start="11:9" pos:end="12:15">
        <expr_stmt pos:start="11:9" pos:end="11:32"><expr pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:12">minn</name><operator pos:start="11:13" pos:end="11:13">=</operator><call pos:start="11:14" pos:end="11:31"><name pos:start="11:14" pos:end="11:16">min</name><argument_list pos:start="11:17" pos:end="11:31">(<argument pos:start="11:18" pos:end="11:21"><expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">minn</name></expr></argument>,<argument pos:start="11:23" pos:end="11:30"><expr pos:start="11:23" pos:end="11:30"><call pos:start="11:23" pos:end="11:30"><name pos:start="11:23" pos:end="11:25">abs</name><argument_list pos:start="11:26" pos:end="11:30">(<argument pos:start="11:27" pos:end="11:29"><expr pos:start="11:27" pos:end="11:29"><name pos:start="11:27" pos:end="11:27">t</name><operator pos:start="11:28" pos:end="11:28">-</operator><name pos:start="11:29" pos:end="11:29">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="12:9" pos:end="12:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="14:5" pos:end="15:15"><if pos:start="14:5" pos:end="15:15">if<condition pos:start="14:7" pos:end="14:11">(<expr pos:start="14:8" pos:end="14:10"><name pos:start="14:8" pos:end="14:8">k</name><operator pos:start="14:9" pos:end="14:9">&gt;</operator><name pos:start="14:10" pos:end="14:10">n</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:15"><block_content pos:start="15:9" pos:end="15:15">
        <return pos:start="15:9" pos:end="15:15">return;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:27"><expr pos:start="16:5" pos:end="16:26"><call pos:start="16:5" pos:end="16:26"><name pos:start="16:5" pos:end="16:7">dfs</name><argument_list pos:start="16:8" pos:end="16:26">(<argument pos:start="16:9" pos:end="16:11"><expr pos:start="16:9" pos:end="16:11"><name pos:start="16:9" pos:end="16:9">k</name><operator pos:start="16:10" pos:end="16:10">+</operator><literal type="number" pos:start="16:11" pos:end="16:11">1</literal></expr></argument>,<argument pos:start="16:13" pos:end="16:18"><expr pos:start="16:13" pos:end="16:18"><name pos:start="16:13" pos:end="16:13">t</name><operator pos:start="16:14" pos:end="16:14">*</operator><name pos:start="16:15" pos:end="16:18"><name pos:start="16:15" pos:end="16:15">a</name><index pos:start="16:16" pos:end="16:18">[<expr pos:start="16:17" pos:end="16:17"><name pos:start="16:17" pos:end="16:17">k</name></expr>]</index></name></expr></argument>,<argument pos:start="16:20" pos:end="16:25"><expr pos:start="16:20" pos:end="16:25"><name pos:start="16:20" pos:end="16:20">p</name><operator pos:start="16:21" pos:end="16:21">+</operator><name pos:start="16:22" pos:end="16:25"><name pos:start="16:22" pos:end="16:22">b</name><index pos:start="16:23" pos:end="16:25">[<expr pos:start="16:24" pos:end="16:24"><name pos:start="16:24" pos:end="16:24">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><call pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:7">dfs</name><argument_list pos:start="17:8" pos:end="17:16">(<argument pos:start="17:9" pos:end="17:11"><expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:9">k</name><operator pos:start="17:10" pos:end="17:10">+</operator><literal type="number" pos:start="17:11" pos:end="17:11">1</literal></expr></argument>,<argument pos:start="17:13" pos:end="17:13"><expr pos:start="17:13" pos:end="17:13"><name pos:start="17:13" pos:end="17:13">t</name></expr></argument>,<argument pos:start="17:15" pos:end="17:15"><expr pos:start="17:15" pos:end="17:15"><name pos:start="17:15" pos:end="17:15">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="19:1" pos:end="32:1"><type pos:start="19:1" pos:end="19:3"><name pos:start="19:1" pos:end="19:3">int</name></type> <name pos:start="19:5" pos:end="19:8">main</name><parameter_list pos:start="19:9" pos:end="19:10">()</parameter_list>
<block pos:start="20:1" pos:end="32:1">{<block_content pos:start="21:5" pos:end="31:13">
    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><call pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:11">freopen</name><argument_list pos:start="21:12" pos:end="21:33">(<argument pos:start="21:13" pos:end="21:22"><expr pos:start="21:13" pos:end="21:22"><literal type="string" pos:start="21:13" pos:end="21:22">"stone,in"</literal></expr></argument>,<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><literal type="string" pos:start="21:24" pos:end="21:26">"r"</literal></expr></argument>,<argument pos:start="21:28" pos:end="21:32"><expr pos:start="21:28" pos:end="21:32"><name pos:start="21:28" pos:end="21:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:36"><expr pos:start="22:5" pos:end="22:35"><call pos:start="22:5" pos:end="22:35"><name pos:start="22:5" pos:end="22:11">freopen</name><argument_list pos:start="22:12" pos:end="22:35">(<argument pos:start="22:13" pos:end="22:23"><expr pos:start="22:13" pos:end="22:23"><literal type="string" pos:start="22:13" pos:end="22:23">"stone.out"</literal></expr></argument>,<argument pos:start="22:25" pos:end="22:27"><expr pos:start="22:25" pos:end="22:27"><literal type="string" pos:start="22:25" pos:end="22:27">"w"</literal></expr></argument>,<argument pos:start="22:29" pos:end="22:34"><expr pos:start="22:29" pos:end="22:34"><name pos:start="22:29" pos:end="22:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:11"><expr pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:7">cin</name><operator pos:start="23:8" pos:end="23:9">&gt;&gt;</operator><name pos:start="23:10" pos:end="23:10">n</name></expr>;</expr_stmt>
    <for pos:start="24:5" pos:end="25:18">for<control pos:start="24:8" pos:end="24:25">(<init pos:start="24:9" pos:end="24:16"><decl pos:start="24:9" pos:end="24:15"><type pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:11">int</name></type> <name pos:start="24:13" pos:end="24:13">i</name><init pos:start="24:14" pos:end="24:15">=<expr pos:start="24:15" pos:end="24:15"><literal type="number" pos:start="24:15" pos:end="24:15">1</literal></expr></init></decl>;</init><condition pos:start="24:17" pos:end="24:21"><expr pos:start="24:17" pos:end="24:20"><name pos:start="24:17" pos:end="24:17">i</name><operator pos:start="24:18" pos:end="24:19">&lt;=</operator><name pos:start="24:20" pos:end="24:20">n</name></expr>;</condition><incr pos:start="24:22" pos:end="24:24"><expr pos:start="24:22" pos:end="24:24"><name pos:start="24:22" pos:end="24:22">i</name><operator pos:start="24:23" pos:end="24:24">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">
        <expr_stmt pos:start="25:9" pos:end="25:18"><expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:11">cin</name><operator pos:start="25:12" pos:end="25:13">&gt;&gt;</operator><name pos:start="25:14" pos:end="25:17"><name pos:start="25:14" pos:end="25:14">a</name><index pos:start="25:15" pos:end="25:17">[<expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <for pos:start="26:5" pos:end="27:18">for<control pos:start="26:8" pos:end="26:25">(<init pos:start="26:9" pos:end="26:16"><decl pos:start="26:9" pos:end="26:15"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:13">i</name><init pos:start="26:14" pos:end="26:15">=<expr pos:start="26:15" pos:end="26:15"><literal type="number" pos:start="26:15" pos:end="26:15">1</literal></expr></init></decl>;</init><condition pos:start="26:17" pos:end="26:21"><expr pos:start="26:17" pos:end="26:20"><name pos:start="26:17" pos:end="26:17">i</name><operator pos:start="26:18" pos:end="26:19">&lt;=</operator><name pos:start="26:20" pos:end="26:20">n</name></expr>;</condition><incr pos:start="26:22" pos:end="26:24"><expr pos:start="26:22" pos:end="26:24"><name pos:start="26:22" pos:end="26:22">i</name><operator pos:start="26:23" pos:end="26:24">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">
        <expr_stmt pos:start="27:9" pos:end="27:18"><expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:11">cin</name><operator pos:start="27:12" pos:end="27:13">&gt;&gt;</operator><name pos:start="27:14" pos:end="27:17"><name pos:start="27:14" pos:end="27:14">b</name><index pos:start="27:15" pos:end="27:17">[<expr pos:start="27:16" pos:end="27:16"><name pos:start="27:16" pos:end="27:16">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="28:5" pos:end="28:15"><expr pos:start="28:5" pos:end="28:14"><call pos:start="28:5" pos:end="28:14"><name pos:start="28:5" pos:end="28:7">dfs</name><argument_list pos:start="28:8" pos:end="28:14">(<argument pos:start="28:9" pos:end="28:9"><expr pos:start="28:9" pos:end="28:9"><literal type="number" pos:start="28:9" pos:end="28:9">1</literal></expr></argument>,<argument pos:start="28:11" pos:end="28:11"><expr pos:start="28:11" pos:end="28:11"><literal type="number" pos:start="28:11" pos:end="28:11">1</literal></expr></argument>,<argument pos:start="28:13" pos:end="28:13"><expr pos:start="28:13" pos:end="28:13"><literal type="number" pos:start="28:13" pos:end="28:13">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:15"><expr pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:8">cout</name><operator pos:start="29:9" pos:end="29:10">&lt;&lt;</operator><name pos:start="29:11" pos:end="29:14">minn</name></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
