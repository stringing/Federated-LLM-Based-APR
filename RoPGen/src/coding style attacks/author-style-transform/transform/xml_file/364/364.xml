<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/364/364.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:define pos:start="2:1" pos:end="2:15">#<cpp:directive pos:start="2:2" pos:end="2:7">define</cpp:directive> <cpp:macro pos:start="2:9" pos:end="2:11"><name pos:start="2:9" pos:end="2:11">MAX</name></cpp:macro> <cpp:value pos:start="2:13" pos:end="2:15">100</cpp:value></cpp:define>
 
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
 
<decl_stmt pos:start="6:1" pos:end="6:22"><decl pos:start="6:1" pos:end="6:21"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:9"><name pos:start="6:5" pos:end="6:6">xx</name><index pos:start="6:7" pos:end="6:9">[<expr pos:start="6:8" pos:end="6:8"><literal type="number" pos:start="6:8" pos:end="6:8">4</literal></expr>]</index></name><init pos:start="6:10" pos:end="6:21">= <expr pos:start="6:12" pos:end="6:21"><block pos:start="6:12" pos:end="6:21">{<expr pos:start="6:13" pos:end="6:13"><literal type="number" pos:start="6:13" pos:end="6:13">1</literal></expr>,<expr pos:start="6:15" pos:end="6:16"><operator pos:start="6:15" pos:end="6:15">-</operator><literal type="number" pos:start="6:16" pos:end="6:16">1</literal></expr>,<expr pos:start="6:18" pos:end="6:18"><literal type="number" pos:start="6:18" pos:end="6:18">0</literal></expr>,<expr pos:start="6:20" pos:end="6:20"><literal type="number" pos:start="6:20" pos:end="6:20">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:22"><decl pos:start="7:1" pos:end="7:21"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:6">yy</name><index pos:start="7:7" pos:end="7:9">[<expr pos:start="7:8" pos:end="7:8"><literal type="number" pos:start="7:8" pos:end="7:8">4</literal></expr>]</index></name><init pos:start="7:10" pos:end="7:21">= <expr pos:start="7:12" pos:end="7:21"><block pos:start="7:12" pos:end="7:21">{<expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr>,<expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr>,<expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">1</literal></expr>,<expr pos:start="7:19" pos:end="7:20"><operator pos:start="7:19" pos:end="7:19">-</operator><literal type="number" pos:start="7:20" pos:end="7:20">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:19"><decl pos:start="8:1" pos:end="8:18"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">char</name></type> <name pos:start="8:6" pos:end="8:18"><name pos:start="8:6" pos:end="8:8">map</name><index pos:start="8:9" pos:end="8:13">[<expr pos:start="8:10" pos:end="8:12"><name pos:start="8:10" pos:end="8:12">MAX</name></expr>]</index><index pos:start="8:14" pos:end="8:18">[<expr pos:start="8:15" pos:end="8:17"><name pos:start="8:15" pos:end="8:17">MAX</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="9:1" pos:end="9:10"><decl pos:start="9:1" pos:end="9:9"><type pos:start="9:1" pos:end="9:3"><name pos:start="9:1" pos:end="9:3">int</name></type> <name pos:start="9:5" pos:end="9:9">count</name></decl>;</decl_stmt>
 
<function pos:start="11:1" pos:end="21:1"><type pos:start="11:1" pos:end="11:3"><name pos:start="11:1" pos:end="11:3">int</name></type> <name pos:start="11:5" pos:end="11:10">intial</name><parameter_list pos:start="11:11" pos:end="11:12">()</parameter_list>
<block pos:start="12:1" pos:end="21:1">{<block_content pos:start="13:5" pos:end="20:5">
    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>,<decl pos:start="13:11" pos:end="13:11"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:11" pos:end="13:11">j</name></decl>;</decl_stmt>
    <for pos:start="14:5" pos:end="20:5">for<control pos:start="14:8" pos:end="14:22">(<init pos:start="14:9" pos:end="14:12"><expr pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:9">i</name><operator pos:start="14:10" pos:end="14:10">=</operator><literal type="number" pos:start="14:11" pos:end="14:11">0</literal></expr>;</init><condition pos:start="14:13" pos:end="14:18"><expr pos:start="14:13" pos:end="14:17"><name pos:start="14:13" pos:end="14:13">i</name><operator pos:start="14:14" pos:end="14:14">&lt;</operator><name pos:start="14:15" pos:end="14:17">MAX</name></expr>;</condition><incr pos:start="14:19" pos:end="14:21"><expr pos:start="14:19" pos:end="14:21"><name pos:start="14:19" pos:end="14:19">i</name><operator pos:start="14:20" pos:end="14:21">++</operator></expr></incr>)</control>
    <block pos:start="15:5" pos:end="20:5">{<block_content pos:start="16:9" pos:end="19:9">
        <for pos:start="16:9" pos:end="19:9">for<control pos:start="16:12" pos:end="16:26">(<init pos:start="16:13" pos:end="16:16"><expr pos:start="16:13" pos:end="16:15"><name pos:start="16:13" pos:end="16:13">j</name><operator pos:start="16:14" pos:end="16:14">=</operator><literal type="number" pos:start="16:15" pos:end="16:15">0</literal></expr>;</init><condition pos:start="16:17" pos:end="16:22"><expr pos:start="16:17" pos:end="16:21"><name pos:start="16:17" pos:end="16:17">j</name><operator pos:start="16:18" pos:end="16:18">&lt;</operator><name pos:start="16:19" pos:end="16:21">MAX</name></expr>;</condition><incr pos:start="16:23" pos:end="16:25"><expr pos:start="16:23" pos:end="16:25"><operator pos:start="16:23" pos:end="16:24">++</operator><name pos:start="16:25" pos:end="16:25">j</name></expr></incr>)</control>
        <block pos:start="17:9" pos:end="19:9">{<block_content pos:start="18:13" pos:end="18:26">
            <expr_stmt pos:start="18:13" pos:end="18:26"><expr pos:start="18:13" pos:end="18:25"><name pos:start="18:13" pos:end="18:21"><name pos:start="18:13" pos:end="18:15">map</name><index pos:start="18:16" pos:end="18:18">[<expr pos:start="18:17" pos:end="18:17"><name pos:start="18:17" pos:end="18:17">i</name></expr>]</index><index pos:start="18:19" pos:end="18:21">[<expr pos:start="18:20" pos:end="18:20"><name pos:start="18:20" pos:end="18:20">j</name></expr>]</index></name><operator pos:start="18:22" pos:end="18:22">=</operator><literal type="char" pos:start="18:23" pos:end="18:25">'.'</literal></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
</block_content>}</block></function>
 
<function pos:start="23:1" pos:end="35:1"><type pos:start="23:1" pos:end="23:4"><name pos:start="23:1" pos:end="23:4">void</name></type> <name pos:start="23:6" pos:end="23:8">dfs</name><parameter_list pos:start="23:9" pos:end="23:21">(<parameter pos:start="23:10" pos:end="23:14"><decl pos:start="23:10" pos:end="23:14"><type pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:12">int</name></type> <name pos:start="23:14" pos:end="23:14">x</name></decl></parameter>,<parameter pos:start="23:16" pos:end="23:20"><decl pos:start="23:16" pos:end="23:20"><type pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:18">int</name></type> <name pos:start="23:20" pos:end="23:20">y</name></decl></parameter>)</parameter_list>
<block pos:start="24:1" pos:end="35:1">{<block_content pos:start="25:5" pos:end="34:5">
    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:7">map</name><index pos:start="25:8" pos:end="25:10">[<expr pos:start="25:9" pos:end="25:9"><name pos:start="25:9" pos:end="25:9">x</name></expr>]</index><index pos:start="25:11" pos:end="25:13">[<expr pos:start="25:12" pos:end="25:12"><name pos:start="25:12" pos:end="25:12">y</name></expr>]</index></name><operator pos:start="25:14" pos:end="25:14">=</operator><literal type="char" pos:start="25:15" pos:end="25:17">'.'</literal></expr>;</expr_stmt>
    <for pos:start="26:5" pos:end="34:5">for<control pos:start="26:8" pos:end="26:24">(<init pos:start="26:9" pos:end="26:16"><decl pos:start="26:9" pos:end="26:15"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:13">k</name><init pos:start="26:14" pos:end="26:15">=<expr pos:start="26:15" pos:end="26:15"><literal type="number" pos:start="26:15" pos:end="26:15">0</literal></expr></init></decl>;</init><condition pos:start="26:17" pos:end="26:20"><expr pos:start="26:17" pos:end="26:19"><name pos:start="26:17" pos:end="26:17">k</name><operator pos:start="26:18" pos:end="26:18">&lt;</operator><literal type="number" pos:start="26:19" pos:end="26:19">4</literal></expr>;</condition><incr pos:start="26:21" pos:end="26:23"><expr pos:start="26:21" pos:end="26:23"><operator pos:start="26:21" pos:end="26:22">++</operator><name pos:start="26:23" pos:end="26:23">k</name></expr></incr>)</control>
    <block pos:start="27:5" pos:end="34:5">{<block_content pos:start="28:9" pos:end="33:9">
        <decl_stmt pos:start="28:9" pos:end="28:25"><decl pos:start="28:9" pos:end="28:24"><type pos:start="28:9" pos:end="28:11"><name pos:start="28:9" pos:end="28:11">int</name></type> <name pos:start="28:13" pos:end="28:14">tx</name> <init pos:start="28:16" pos:end="28:24">= <expr pos:start="28:18" pos:end="28:24"><name pos:start="28:18" pos:end="28:18">x</name><operator pos:start="28:19" pos:end="28:19">+</operator><name pos:start="28:20" pos:end="28:24"><name pos:start="28:20" pos:end="28:21">xx</name><index pos:start="28:22" pos:end="28:24">[<expr pos:start="28:23" pos:end="28:23"><name pos:start="28:23" pos:end="28:23">k</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="29:9" pos:end="29:25"><decl pos:start="29:9" pos:end="29:24"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:14">ty</name> <init pos:start="29:16" pos:end="29:24">= <expr pos:start="29:18" pos:end="29:24"><name pos:start="29:18" pos:end="29:18">y</name><operator pos:start="29:19" pos:end="29:19">+</operator><name pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:21">yy</name><index pos:start="29:22" pos:end="29:24">[<expr pos:start="29:23" pos:end="29:23"><name pos:start="29:23" pos:end="29:23">k</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="30:9" pos:end="33:9"><if pos:start="30:9" pos:end="33:9">if<condition pos:start="30:11" pos:end="30:30">(<expr pos:start="30:12" pos:end="30:29"><name pos:start="30:12" pos:end="30:22"><name pos:start="30:12" pos:end="30:14">map</name><index pos:start="30:15" pos:end="30:18">[<expr pos:start="30:16" pos:end="30:17"><name pos:start="30:16" pos:end="30:17">tx</name></expr>]</index><index pos:start="30:19" pos:end="30:22">[<expr pos:start="30:20" pos:end="30:21"><name pos:start="30:20" pos:end="30:21">ty</name></expr>]</index></name> <operator pos:start="30:24" pos:end="30:25">==</operator> <literal type="char" pos:start="30:27" pos:end="30:29">'#'</literal></expr>)</condition>
        <block pos:start="31:9" pos:end="33:9">{<block_content pos:start="32:13" pos:end="32:23">
            <expr_stmt pos:start="32:13" pos:end="32:23"><expr pos:start="32:13" pos:end="32:22"><call pos:start="32:13" pos:end="32:22"><name pos:start="32:13" pos:end="32:15">dfs</name><argument_list pos:start="32:16" pos:end="32:22">(<argument pos:start="32:17" pos:end="32:18"><expr pos:start="32:17" pos:end="32:18"><name pos:start="32:17" pos:end="32:18">tx</name></expr></argument>,<argument pos:start="32:20" pos:end="32:21"><expr pos:start="32:20" pos:end="32:21"><name pos:start="32:20" pos:end="32:21">ty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="36:1" pos:end="76:1"><type pos:start="36:1" pos:end="36:3"><name pos:start="36:1" pos:end="36:3">int</name></type> <name pos:start="36:5" pos:end="36:8">main</name><parameter_list pos:start="36:9" pos:end="36:10">()</parameter_list>
<block pos:start="37:1" pos:end="76:1">{<block_content pos:start="38:5" pos:end="75:13">
    <expr_stmt pos:start="38:5" pos:end="38:37"><expr pos:start="38:5" pos:end="38:36"><call pos:start="38:5" pos:end="38:36"><name pos:start="38:5" pos:end="38:11">freopen</name><argument_list pos:start="38:12" pos:end="38:36">(<argument pos:start="38:13" pos:end="38:23"><expr pos:start="38:13" pos:end="38:23"><literal type="string" pos:start="38:13" pos:end="38:23">"hiking.in"</literal></expr></argument>, <argument pos:start="38:26" pos:end="38:28"><expr pos:start="38:26" pos:end="38:28"><literal type="string" pos:start="38:26" pos:end="38:28">"r"</literal></expr></argument>, <argument pos:start="38:31" pos:end="38:35"><expr pos:start="38:31" pos:end="38:35"><name pos:start="38:31" pos:end="38:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:39"><expr pos:start="39:5" pos:end="39:38"><call pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:11">freopen</name><argument_list pos:start="39:12" pos:end="39:38">(<argument pos:start="39:13" pos:end="39:24"><expr pos:start="39:13" pos:end="39:24"><literal type="string" pos:start="39:13" pos:end="39:24">"hiking.out"</literal></expr></argument>, <argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><literal type="string" pos:start="39:27" pos:end="39:29">"w"</literal></expr></argument>, <argument pos:start="39:32" pos:end="39:37"><expr pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="40:5" pos:end="40:12"><decl pos:start="40:5" pos:end="40:9"><type pos:start="40:5" pos:end="40:7"><name pos:start="40:5" pos:end="40:7">int</name></type> <name pos:start="40:9" pos:end="40:9">n</name></decl>,<decl pos:start="40:11" pos:end="40:11"><type ref="prev" pos:start="40:5" pos:end="40:7"/><name pos:start="40:11" pos:end="40:11">m</name></decl>;</decl_stmt>
    <decl_stmt pos:start="41:5" pos:end="41:12"><decl pos:start="41:5" pos:end="41:9"><type pos:start="41:5" pos:end="41:7"><name pos:start="41:5" pos:end="41:7">int</name></type> <name pos:start="41:9" pos:end="41:9">i</name></decl>,<decl pos:start="41:11" pos:end="41:11"><type ref="prev" pos:start="41:5" pos:end="41:7"/><name pos:start="41:11" pos:end="41:11">j</name></decl>;</decl_stmt>
    
    <expr_stmt pos:start="43:5" pos:end="43:14"><expr pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:7">cin</name><operator pos:start="43:8" pos:end="43:9">&gt;&gt;</operator><name pos:start="43:10" pos:end="43:10">n</name><operator pos:start="43:11" pos:end="43:12">&gt;&gt;</operator><name pos:start="43:13" pos:end="43:13">m</name></expr>;</expr_stmt>
    
    <expr_stmt pos:start="45:5" pos:end="45:13"><expr pos:start="45:5" pos:end="45:12"><call pos:start="45:5" pos:end="45:12"><name pos:start="45:5" pos:end="45:10">intial</name><argument_list pos:start="45:11" pos:end="45:12">()</argument_list></call></expr>;</expr_stmt>
    <for pos:start="46:5" pos:end="52:5">for<control pos:start="46:8" pos:end="46:24">(<init pos:start="46:9" pos:end="46:14"><expr pos:start="46:9" pos:end="46:12"><name pos:start="46:9" pos:end="46:9">i</name><operator pos:start="46:10" pos:end="46:10">=</operator> <literal type="number" pos:start="46:12" pos:end="46:12">1</literal></expr> ;</init><condition pos:start="46:15" pos:end="46:20"><expr pos:start="46:15" pos:end="46:19"><name pos:start="46:15" pos:end="46:15">i</name><operator pos:start="46:16" pos:end="46:17">&lt;=</operator> <name pos:start="46:19" pos:end="46:19">n</name></expr>;</condition><incr pos:start="46:21" pos:end="46:23"><expr pos:start="46:21" pos:end="46:23"><operator pos:start="46:21" pos:end="46:22">++</operator><name pos:start="46:23" pos:end="46:23">i</name></expr></incr>)</control>
    <block pos:start="47:5" pos:end="52:5">{<block_content pos:start="48:9" pos:end="51:9">
        <for pos:start="48:9" pos:end="51:9">for<control pos:start="48:12" pos:end="48:25">(<init pos:start="48:13" pos:end="48:16"><expr pos:start="48:13" pos:end="48:15"><name pos:start="48:13" pos:end="48:13">j</name><operator pos:start="48:14" pos:end="48:14">=</operator><literal type="number" pos:start="48:15" pos:end="48:15">1</literal></expr>;</init><condition pos:start="48:17" pos:end="48:21"><expr pos:start="48:17" pos:end="48:20"><name pos:start="48:17" pos:end="48:17">j</name><operator pos:start="48:18" pos:end="48:19">&lt;=</operator><name pos:start="48:20" pos:end="48:20">m</name></expr>;</condition><incr pos:start="48:22" pos:end="48:24"><expr pos:start="48:22" pos:end="48:24"><operator pos:start="48:22" pos:end="48:23">++</operator><name pos:start="48:24" pos:end="48:24">j</name></expr></incr>)</control>
        <block pos:start="49:9" pos:end="51:9">{<block_content pos:start="50:13" pos:end="50:27">
            <expr_stmt pos:start="50:13" pos:end="50:27"><expr pos:start="50:13" pos:end="50:26"><name pos:start="50:13" pos:end="50:15">cin</name><operator pos:start="50:16" pos:end="50:17">&gt;&gt;</operator><name pos:start="50:18" pos:end="50:26"><name pos:start="50:18" pos:end="50:20">map</name><index pos:start="50:21" pos:end="50:23">[<expr pos:start="50:22" pos:end="50:22"><name pos:start="50:22" pos:end="50:22">i</name></expr>]</index><index pos:start="50:24" pos:end="50:26">[<expr pos:start="50:25" pos:end="50:25"><name pos:start="50:25" pos:end="50:25">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    
    <for pos:start="54:5" pos:end="65:5">for<control pos:start="54:8" pos:end="54:24">(<init pos:start="54:9" pos:end="54:14"><expr pos:start="54:9" pos:end="54:12"><name pos:start="54:9" pos:end="54:9">i</name><operator pos:start="54:10" pos:end="54:10">=</operator> <literal type="number" pos:start="54:12" pos:end="54:12">1</literal></expr> ;</init><condition pos:start="54:15" pos:end="54:20"><expr pos:start="54:15" pos:end="54:19"><name pos:start="54:15" pos:end="54:15">i</name><operator pos:start="54:16" pos:end="54:17">&lt;=</operator> <name pos:start="54:19" pos:end="54:19">n</name></expr>;</condition><incr pos:start="54:21" pos:end="54:23"><expr pos:start="54:21" pos:end="54:23"><operator pos:start="54:21" pos:end="54:22">++</operator><name pos:start="54:23" pos:end="54:23">i</name></expr></incr>)</control>
    <block pos:start="55:5" pos:end="65:5">{<block_content pos:start="56:9" pos:end="64:9">
        <for pos:start="56:9" pos:end="64:9">for<control pos:start="56:12" pos:end="56:25">(<init pos:start="56:13" pos:end="56:16"><expr pos:start="56:13" pos:end="56:15"><name pos:start="56:13" pos:end="56:13">j</name><operator pos:start="56:14" pos:end="56:14">=</operator><literal type="number" pos:start="56:15" pos:end="56:15">1</literal></expr>;</init><condition pos:start="56:17" pos:end="56:21"><expr pos:start="56:17" pos:end="56:20"><name pos:start="56:17" pos:end="56:17">j</name><operator pos:start="56:18" pos:end="56:19">&lt;=</operator><name pos:start="56:20" pos:end="56:20">m</name></expr>;</condition><incr pos:start="56:22" pos:end="56:24"><expr pos:start="56:22" pos:end="56:24"><operator pos:start="56:22" pos:end="56:23">++</operator><name pos:start="56:24" pos:end="56:24">j</name></expr></incr>)</control>
        <block pos:start="57:9" pos:end="64:9">{<block_content pos:start="58:13" pos:end="62:13">
            <if_stmt pos:start="58:13" pos:end="62:13"><if pos:start="58:13" pos:end="62:13">if<condition pos:start="58:15" pos:end="58:30">(<expr pos:start="58:16" pos:end="58:29"><name pos:start="58:16" pos:end="58:24"><name pos:start="58:16" pos:end="58:18">map</name><index pos:start="58:19" pos:end="58:21">[<expr pos:start="58:20" pos:end="58:20"><name pos:start="58:20" pos:end="58:20">i</name></expr>]</index><index pos:start="58:22" pos:end="58:24">[<expr pos:start="58:23" pos:end="58:23"><name pos:start="58:23" pos:end="58:23">j</name></expr>]</index></name><operator pos:start="58:25" pos:end="58:26">==</operator><literal type="char" pos:start="58:27" pos:end="58:29">'#'</literal></expr>)</condition>
            <block pos:start="59:13" pos:end="62:13">{<block_content pos:start="60:17" pos:end="61:25">
                <expr_stmt pos:start="60:17" pos:end="60:24"><expr pos:start="60:17" pos:end="60:23"><name pos:start="60:17" pos:end="60:21">count</name><operator pos:start="60:22" pos:end="60:23">++</operator></expr>;</expr_stmt>
                <expr_stmt pos:start="61:17" pos:end="61:25"><expr pos:start="61:17" pos:end="61:24"><call pos:start="61:17" pos:end="61:24"><name pos:start="61:17" pos:end="61:19">dfs</name><argument_list pos:start="61:20" pos:end="61:24">(<argument pos:start="61:21" pos:end="61:21"><expr pos:start="61:21" pos:end="61:21"><name pos:start="61:21" pos:end="61:21">i</name></expr></argument>,<argument pos:start="61:23" pos:end="61:23"><expr pos:start="61:23" pos:end="61:23"><name pos:start="61:23" pos:end="61:23">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        
        </block_content>}</block></for>
    </block_content>}</block></for>
    <decl_stmt pos:start="66:5" pos:end="66:16"><decl pos:start="66:5" pos:end="66:15"><type pos:start="66:5" pos:end="66:7"><name pos:start="66:5" pos:end="66:7">int</name></type> <name pos:start="66:9" pos:end="66:11">sum</name> <init pos:start="66:13" pos:end="66:15">= <expr pos:start="66:15" pos:end="66:15"><literal type="number" pos:start="66:15" pos:end="66:15">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="67:5" pos:end="74:5">for <control pos:start="67:9" pos:end="67:31">(<init pos:start="67:10" pos:end="67:19"><decl pos:start="67:10" pos:end="67:18"><type pos:start="67:10" pos:end="67:12"><name pos:start="67:10" pos:end="67:12">int</name></type> <name pos:start="67:14" pos:end="67:14">i</name> <init pos:start="67:16" pos:end="67:18">= <expr pos:start="67:18" pos:end="67:18"><literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr></init></decl>;</init> <condition pos:start="67:21" pos:end="67:26"><expr pos:start="67:21" pos:end="67:25"><name pos:start="67:21" pos:end="67:21">i</name> <operator pos:start="67:23" pos:end="67:23">&lt;</operator> <name pos:start="67:25" pos:end="67:25">n</name></expr>;</condition> <incr pos:start="67:28" pos:end="67:30"><expr pos:start="67:28" pos:end="67:30"><name pos:start="67:28" pos:end="67:28">i</name><operator pos:start="67:29" pos:end="67:30">++</operator></expr></incr>)</control> <block pos:start="67:33" pos:end="74:5">{<block_content pos:start="68:9" pos:end="73:9">
        <for pos:start="68:9" pos:end="73:9">for <control pos:start="68:13" pos:end="68:35">(<init pos:start="68:14" pos:end="68:23"><decl pos:start="68:14" pos:end="68:22"><type pos:start="68:14" pos:end="68:16"><name pos:start="68:14" pos:end="68:16">int</name></type> <name pos:start="68:18" pos:end="68:18">j</name> <init pos:start="68:20" pos:end="68:22">= <expr pos:start="68:22" pos:end="68:22"><literal type="number" pos:start="68:22" pos:end="68:22">0</literal></expr></init></decl>;</init> <condition pos:start="68:25" pos:end="68:30"><expr pos:start="68:25" pos:end="68:29"><name pos:start="68:25" pos:end="68:25">j</name> <operator pos:start="68:27" pos:end="68:27">&lt;</operator> <name pos:start="68:29" pos:end="68:29">m</name></expr>;</condition> <incr pos:start="68:32" pos:end="68:34"><expr pos:start="68:32" pos:end="68:34"><name pos:start="68:32" pos:end="68:32">j</name><operator pos:start="68:33" pos:end="68:34">++</operator></expr></incr>)</control> <block pos:start="68:37" pos:end="73:9">{<block_content pos:start="69:13" pos:end="72:13">
            <if_stmt pos:start="69:13" pos:end="72:13"><if pos:start="69:13" pos:end="72:13">if<condition pos:start="69:15" pos:end="69:31">(<expr pos:start="69:16" pos:end="69:30"><name pos:start="69:16" pos:end="69:24"><name pos:start="69:16" pos:end="69:18">map</name><index pos:start="69:19" pos:end="69:21">[<expr pos:start="69:20" pos:end="69:20"><name pos:start="69:20" pos:end="69:20">i</name></expr>]</index><index pos:start="69:22" pos:end="69:24">[<expr pos:start="69:23" pos:end="69:23"><name pos:start="69:23" pos:end="69:23">j</name></expr>]</index></name> <operator pos:start="69:26" pos:end="69:27">==</operator><literal type="char" pos:start="69:28" pos:end="69:30">'1'</literal></expr>)</condition> <block pos:start="69:33" pos:end="72:13">{<block_content pos:start="70:17" pos:end="71:26">
                <expr_stmt pos:start="70:17" pos:end="70:22"><expr pos:start="70:17" pos:end="70:21"><name pos:start="70:17" pos:end="70:19">sum</name><operator pos:start="70:20" pos:end="70:21">++</operator></expr>;</expr_stmt> 
                <expr_stmt pos:start="71:17" pos:end="71:26"><expr pos:start="71:17" pos:end="71:25"><call pos:start="71:17" pos:end="71:25"><name pos:start="71:17" pos:end="71:19">dfs</name><argument_list pos:start="71:20" pos:end="71:25">(<argument pos:start="71:21" pos:end="71:21"><expr pos:start="71:21" pos:end="71:21"><name pos:start="71:21" pos:end="71:21">i</name></expr></argument>, <argument pos:start="71:24" pos:end="71:24"><expr pos:start="71:24" pos:end="71:24"><name pos:start="71:24" pos:end="71:24">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
