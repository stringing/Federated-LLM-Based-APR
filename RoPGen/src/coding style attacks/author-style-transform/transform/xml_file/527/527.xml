<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/527/527.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:37"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>,<decl pos:start="3:7" pos:end="3:16"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:7" pos:end="3:16"><name pos:start="3:7" pos:end="3:7">a</name><index pos:start="3:8" pos:end="3:16">[<expr pos:start="3:9" pos:end="3:15"><literal type="number" pos:start="3:9" pos:end="3:15">1000001</literal></expr>]</index></name></decl>,<decl pos:start="3:18" pos:end="3:27"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:18" pos:end="3:27"><name pos:start="3:18" pos:end="3:18">b</name><index pos:start="3:19" pos:end="3:27">[<expr pos:start="3:20" pos:end="3:26"><literal type="number" pos:start="3:20" pos:end="3:26">1000001</literal></expr>]</index></name></decl>,<decl pos:start="3:29" pos:end="3:36"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:29" pos:end="3:32">minn</name><init pos:start="3:33" pos:end="3:36">=<expr pos:start="3:34" pos:end="3:36"><literal type="number" pos:start="3:34" pos:end="3:36">1e9</literal></expr></init></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="11:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">void</name></type> <name pos:start="4:6" pos:end="4:8">dfs</name><parameter_list pos:start="4:9" pos:end="4:33">(<parameter pos:start="4:10" pos:end="4:14"><decl pos:start="4:10" pos:end="4:14"><type pos:start="4:10" pos:end="4:14"><name pos:start="4:10" pos:end="4:12">int</name></type> <name pos:start="4:14" pos:end="4:14">x</name></decl></parameter>,<parameter pos:start="4:16" pos:end="4:23"><decl pos:start="4:16" pos:end="4:23"><type pos:start="4:16" pos:end="4:23"><name pos:start="4:16" pos:end="4:18">int</name></type> <name pos:start="4:20" pos:end="4:23">sum1</name></decl></parameter>,<parameter pos:start="4:25" pos:end="4:32"><decl pos:start="4:25" pos:end="4:32"><type pos:start="4:25" pos:end="4:32"><name pos:start="4:25" pos:end="4:27">int</name></type> <name pos:start="4:29" pos:end="4:32">sum2</name></decl></parameter>)</parameter_list> <block pos:start="4:35" pos:end="11:1">{<block_content pos:start="5:5" pos:end="10:23">
    <if_stmt pos:start="5:5" pos:end="8:5"><if pos:start="5:5" pos:end="8:5">if<condition pos:start="5:7" pos:end="5:12">(<expr pos:start="5:8" pos:end="5:11"><name pos:start="5:8" pos:end="5:8">x</name><operator pos:start="5:9" pos:end="5:10">==</operator><name pos:start="5:11" pos:end="5:11">n</name></expr>)</condition><block pos:start="5:13" pos:end="8:5">{<block_content pos:start="6:9" pos:end="7:16">
        <expr_stmt pos:start="6:9" pos:end="6:38"><expr pos:start="6:9" pos:end="6:37"><name pos:start="6:9" pos:end="6:12">minn</name><operator pos:start="6:13" pos:end="6:13">=</operator><call pos:start="6:14" pos:end="6:37"><name pos:start="6:14" pos:end="6:16">min</name><argument_list pos:start="6:17" pos:end="6:37">(<argument pos:start="6:18" pos:end="6:31"><expr pos:start="6:18" pos:end="6:31"><call pos:start="6:18" pos:end="6:31"><name pos:start="6:18" pos:end="6:20">abs</name><argument_list pos:start="6:21" pos:end="6:31">(<argument pos:start="6:22" pos:end="6:30"><expr pos:start="6:22" pos:end="6:30"><name pos:start="6:22" pos:end="6:25">sum1</name><operator pos:start="6:26" pos:end="6:26">-</operator><name pos:start="6:27" pos:end="6:30">sum2</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="6:33" pos:end="6:36"><expr pos:start="6:33" pos:end="6:36"><name pos:start="6:33" pos:end="6:36">minn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="7:9" pos:end="7:16">return ;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><call pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:7">dfs</name><argument_list pos:start="9:8" pos:end="9:32">(<argument pos:start="9:9" pos:end="9:11"><expr pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:9">x</name><operator pos:start="9:10" pos:end="9:10">+</operator><literal type="number" pos:start="9:11" pos:end="9:11">1</literal></expr></argument>,<argument pos:start="9:13" pos:end="9:21"><expr pos:start="9:13" pos:end="9:21"><name pos:start="9:13" pos:end="9:16">sum1</name><operator pos:start="9:17" pos:end="9:17">*</operator><name pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:18">a</name><index pos:start="9:19" pos:end="9:21">[<expr pos:start="9:20" pos:end="9:20"><name pos:start="9:20" pos:end="9:20">x</name></expr>]</index></name></expr></argument>,<argument pos:start="9:23" pos:end="9:31"><expr pos:start="9:23" pos:end="9:31"><name pos:start="9:23" pos:end="9:26">sum2</name><operator pos:start="9:27" pos:end="9:27">+</operator><name pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:28">b</name><index pos:start="9:29" pos:end="9:31">[<expr pos:start="9:30" pos:end="9:30"><name pos:start="9:30" pos:end="9:30">x</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:23"><expr pos:start="10:5" pos:end="10:22"><call pos:start="10:5" pos:end="10:22"><name pos:start="10:5" pos:end="10:7">dfs</name><argument_list pos:start="10:8" pos:end="10:22">(<argument pos:start="10:9" pos:end="10:11"><expr pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:9">x</name><operator pos:start="10:10" pos:end="10:10">+</operator><literal type="number" pos:start="10:11" pos:end="10:11">1</literal></expr></argument>,<argument pos:start="10:13" pos:end="10:16"><expr pos:start="10:13" pos:end="10:16"><name pos:start="10:13" pos:end="10:16">sum1</name></expr></argument>,<argument pos:start="10:18" pos:end="10:21"><expr pos:start="10:18" pos:end="10:21"><name pos:start="10:18" pos:end="10:21">sum2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="12:1" pos:end="22:1"><type pos:start="12:1" pos:end="12:3"><name pos:start="12:1" pos:end="12:3">int</name></type> <name pos:start="12:5" pos:end="12:8">main</name><parameter_list pos:start="12:9" pos:end="12:10">()</parameter_list> <block pos:start="12:12" pos:end="22:1">{<block_content pos:start="13:5" pos:end="21:13">
    <expr_stmt pos:start="13:5" pos:end="13:36"><expr pos:start="13:5" pos:end="13:35"><call pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:11">freopen</name><argument_list pos:start="13:12" pos:end="13:35">(<argument pos:start="13:13" pos:end="13:22"><expr pos:start="13:13" pos:end="13:22"><literal type="string" pos:start="13:13" pos:end="13:22">"stone.in"</literal></expr></argument>, <argument pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><literal type="string" pos:start="13:25" pos:end="13:27">"r"</literal></expr></argument>, <argument pos:start="13:30" pos:end="13:34"><expr pos:start="13:30" pos:end="13:34"><name pos:start="13:30" pos:end="13:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:38"><expr pos:start="14:5" pos:end="14:37"><call pos:start="14:5" pos:end="14:37"><name pos:start="14:5" pos:end="14:11">freopen</name><argument_list pos:start="14:12" pos:end="14:37">(<argument pos:start="14:13" pos:end="14:23"><expr pos:start="14:13" pos:end="14:23"><literal type="string" pos:start="14:13" pos:end="14:23">"stone.out"</literal></expr></argument>, <argument pos:start="14:26" pos:end="14:28"><expr pos:start="14:26" pos:end="14:28"><literal type="string" pos:start="14:26" pos:end="14:28">"w"</literal></expr></argument>, <argument pos:start="14:31" pos:end="14:36"><expr pos:start="14:31" pos:end="14:36"><name pos:start="14:31" pos:end="14:36">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:11"><expr pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:7">cin</name><operator pos:start="15:8" pos:end="15:9">&gt;&gt;</operator><name pos:start="15:10" pos:end="15:10">n</name></expr>;</expr_stmt>
    <for pos:start="16:5" pos:end="18:5">for<control pos:start="16:8" pos:end="16:24">(<init pos:start="16:9" pos:end="16:16"><decl pos:start="16:9" pos:end="16:15"><type pos:start="16:9" pos:end="16:11"><name pos:start="16:9" pos:end="16:11">int</name></type> <name pos:start="16:13" pos:end="16:13">i</name><init pos:start="16:14" pos:end="16:15">=<expr pos:start="16:15" pos:end="16:15"><literal type="number" pos:start="16:15" pos:end="16:15">0</literal></expr></init></decl>;</init><condition pos:start="16:17" pos:end="16:20"><expr pos:start="16:17" pos:end="16:19"><name pos:start="16:17" pos:end="16:17">i</name><operator pos:start="16:18" pos:end="16:18">&lt;</operator><name pos:start="16:19" pos:end="16:19">n</name></expr>;</condition><incr pos:start="16:21" pos:end="16:23"><expr pos:start="16:21" pos:end="16:23"><name pos:start="16:21" pos:end="16:21">i</name><operator pos:start="16:22" pos:end="16:23">++</operator></expr></incr>)</control><block pos:start="16:25" pos:end="18:5">{<block_content pos:start="17:9" pos:end="17:24">
        <expr_stmt pos:start="17:9" pos:end="17:24"><expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:11">cin</name><operator pos:start="17:12" pos:end="17:13">&gt;&gt;</operator><name pos:start="17:14" pos:end="17:17"><name pos:start="17:14" pos:end="17:14">a</name><index pos:start="17:15" pos:end="17:17">[<expr pos:start="17:16" pos:end="17:16"><name pos:start="17:16" pos:end="17:16">i</name></expr>]</index></name><operator pos:start="17:18" pos:end="17:19">&gt;&gt;</operator><name pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:20">b</name><index pos:start="17:21" pos:end="17:23">[<expr pos:start="17:22" pos:end="17:22"><name pos:start="17:22" pos:end="17:22">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="19:5" pos:end="19:15"><expr pos:start="19:5" pos:end="19:14"><call pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:7">dfs</name><argument_list pos:start="19:8" pos:end="19:14">(<argument pos:start="19:9" pos:end="19:9"><expr pos:start="19:9" pos:end="19:9"><literal type="number" pos:start="19:9" pos:end="19:9">0</literal></expr></argument>,<argument pos:start="19:11" pos:end="19:11"><expr pos:start="19:11" pos:end="19:11"><literal type="number" pos:start="19:11" pos:end="19:11">1</literal></expr></argument>,<argument pos:start="19:13" pos:end="19:13"><expr pos:start="19:13" pos:end="19:13"><literal type="number" pos:start="19:13" pos:end="19:13">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:15"><expr pos:start="20:5" pos:end="20:14"><name pos:start="20:5" pos:end="20:8">cout</name><operator pos:start="20:9" pos:end="20:10">&lt;&lt;</operator><name pos:start="20:11" pos:end="20:14">minn</name></expr>;</expr_stmt>
    <return pos:start="21:5" pos:end="21:13">return <expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
