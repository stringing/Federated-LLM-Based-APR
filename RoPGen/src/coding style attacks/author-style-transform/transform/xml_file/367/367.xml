<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/367/367.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="46:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list>
<block pos:start="4:1" pos:end="46:1">{<block_content pos:start="5:5" pos:end="45:13">
    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>,<decl pos:start="5:11" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:11" pos:end="5:11">l</name><init pos:start="5:12" pos:end="5:13">=<expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>,<decl pos:start="5:15" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">r</name><init pos:start="5:16" pos:end="5:17">=<expr pos:start="5:17" pos:end="5:17"><literal type="number" pos:start="5:17" pos:end="5:17">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:11"><expr pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:7">cin</name><operator pos:start="6:8" pos:end="6:9">&gt;&gt;</operator><name pos:start="6:10" pos:end="6:10">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">k</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:16"><decl pos:start="8:5" pos:end="8:15"><type pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:10">string</name></type> <name pos:start="8:12" pos:end="8:15">name</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">string</name></type> <name pos:start="9:12" pos:end="9:17"><name pos:start="9:12" pos:end="9:12">q</name><index pos:start="9:13" pos:end="9:17">[<expr pos:start="9:14" pos:end="9:16"><literal type="number" pos:start="9:14" pos:end="9:14">2</literal><operator pos:start="9:15" pos:end="9:15">*</operator><name pos:start="9:16" pos:end="9:16">n</name></expr>]</index></name><init pos:start="9:18" pos:end="9:23">=<expr pos:start="9:19" pos:end="9:23"><block pos:start="9:19" pos:end="9:23">{<expr pos:start="9:20" pos:end="9:22"><literal type="string" pos:start="9:20" pos:end="9:22">"0"</literal></expr>}</block></expr></init></decl>;</decl_stmt>
    <while pos:start="10:5" pos:end="44:5">while<condition pos:start="10:10" pos:end="10:14">(<expr pos:start="10:11" pos:end="10:13"><name pos:start="10:11" pos:end="10:11">n</name><operator pos:start="10:12" pos:end="10:13">--</operator></expr>)</condition>
    <block pos:start="11:5" pos:end="44:5">{<block_content pos:start="12:9" pos:end="43:9">
        <expr_stmt pos:start="12:9" pos:end="12:15"><expr pos:start="12:9" pos:end="12:14"><name pos:start="12:9" pos:end="12:11">cin</name><operator pos:start="12:12" pos:end="12:13">&gt;&gt;</operator><name pos:start="12:14" pos:end="12:14">k</name></expr>;</expr_stmt>
        <if_stmt pos:start="13:9" pos:end="43:9"><if pos:start="13:9" pos:end="37:9">if<condition pos:start="13:11" pos:end="13:16">(<expr pos:start="13:12" pos:end="13:15"><name pos:start="13:12" pos:end="13:12">k</name><operator pos:start="13:13" pos:end="13:14">==</operator><literal type="number" pos:start="13:15" pos:end="13:15">1</literal></expr>)</condition>
        <block pos:start="14:9" pos:end="37:9">{<block_content pos:start="15:13" pos:end="36:24">
            <expr_stmt pos:start="15:13" pos:end="15:22"><expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:15">cin</name><operator pos:start="15:16" pos:end="15:17">&gt;&gt;</operator><name pos:start="15:18" pos:end="15:21">name</name></expr>;</expr_stmt>
            <decl_stmt pos:start="16:13" pos:end="16:25"><decl pos:start="16:13" pos:end="16:24"><type pos:start="16:13" pos:end="16:16"><name pos:start="16:13" pos:end="16:16">bool</name></type> <name pos:start="16:18" pos:end="16:18">f</name><init pos:start="16:19" pos:end="16:24">=<expr pos:start="16:20" pos:end="16:24"><literal type="boolean" pos:start="16:20" pos:end="16:24">false</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="17:13" pos:end="17:18"><decl pos:start="17:13" pos:end="17:17"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:17">i</name></decl>;</decl_stmt>
            <for pos:start="18:13" pos:end="25:13">for<control pos:start="18:16" pos:end="18:28">(<init pos:start="18:17" pos:end="18:20"><expr pos:start="18:17" pos:end="18:19"><name pos:start="18:17" pos:end="18:17">i</name><operator pos:start="18:18" pos:end="18:18">=</operator><name pos:start="18:19" pos:end="18:19">l</name></expr>;</init><condition pos:start="18:21" pos:end="18:24"><expr pos:start="18:21" pos:end="18:23"><name pos:start="18:21" pos:end="18:21">i</name><operator pos:start="18:22" pos:end="18:22">&lt;</operator><name pos:start="18:23" pos:end="18:23">r</name></expr>;</condition><incr pos:start="18:25" pos:end="18:27"><expr pos:start="18:25" pos:end="18:27"><name pos:start="18:25" pos:end="18:25">i</name><operator pos:start="18:26" pos:end="18:27">++</operator></expr></incr>)</control>
            <block pos:start="19:13" pos:end="25:13">{<block_content pos:start="20:17" pos:end="24:17">
                <if_stmt pos:start="20:17" pos:end="24:17"><if pos:start="20:17" pos:end="24:17">if<condition pos:start="20:19" pos:end="20:36">(<expr pos:start="20:20" pos:end="20:35"><name pos:start="20:20" pos:end="20:26"><name pos:start="20:20" pos:end="20:20">q</name><index pos:start="20:21" pos:end="20:23">[<expr pos:start="20:22" pos:end="20:22"><name pos:start="20:22" pos:end="20:22">i</name></expr>]</index><index pos:start="20:24" pos:end="20:26">[<expr pos:start="20:25" pos:end="20:25"><literal type="number" pos:start="20:25" pos:end="20:25">0</literal></expr>]</index></name><operator pos:start="20:27" pos:end="20:28">==</operator><name pos:start="20:29" pos:end="20:35"><name pos:start="20:29" pos:end="20:32">name</name><index pos:start="20:33" pos:end="20:35">[<expr pos:start="20:34" pos:end="20:34"><literal type="number" pos:start="20:34" pos:end="20:34">0</literal></expr>]</index></name></expr>)</condition>
                <block pos:start="21:17" pos:end="24:17">{<block_content pos:start="22:21" pos:end="23:26">
                    <expr_stmt pos:start="22:21" pos:end="22:25"><expr pos:start="22:21" pos:end="22:24"><name pos:start="22:21" pos:end="22:21">f</name><operator pos:start="22:22" pos:end="22:22">=</operator><operator pos:start="22:23" pos:end="22:23">!</operator><name pos:start="22:24" pos:end="22:24">f</name></expr>;</expr_stmt>
                    <break pos:start="23:21" pos:end="23:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="26:13" pos:end="31:13"><if pos:start="26:13" pos:end="31:13">if<condition pos:start="26:15" pos:end="26:18">(<expr pos:start="26:16" pos:end="26:17"><operator pos:start="26:16" pos:end="26:16">!</operator><name pos:start="26:17" pos:end="26:17">f</name></expr>)</condition>
            <block pos:start="27:13" pos:end="31:13">{<block_content pos:start="28:17" pos:end="30:25">
                <expr_stmt pos:start="28:17" pos:end="28:26"><expr pos:start="28:17" pos:end="28:25"><name pos:start="28:17" pos:end="28:20"><name pos:start="28:17" pos:end="28:17">q</name><index pos:start="28:18" pos:end="28:20">[<expr pos:start="28:19" pos:end="28:19"><name pos:start="28:19" pos:end="28:19">r</name></expr>]</index></name><operator pos:start="28:21" pos:end="28:21">=</operator><name pos:start="28:22" pos:end="28:25">name</name></expr>;</expr_stmt>
                <expr_stmt pos:start="29:17" pos:end="29:20"><expr pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:17">r</name><operator pos:start="29:18" pos:end="29:19">++</operator></expr>;</expr_stmt>
                <continue pos:start="30:17" pos:end="30:25">continue;</continue>
            </block_content>}</block></if></if_stmt>
            <for pos:start="32:13" pos:end="35:13">for<control pos:start="32:16" pos:end="32:34">(<init pos:start="32:17" pos:end="32:24"><decl pos:start="32:17" pos:end="32:23"><type pos:start="32:17" pos:end="32:19"><name pos:start="32:17" pos:end="32:19">int</name></type> <name pos:start="32:21" pos:end="32:21">j</name><init pos:start="32:22" pos:end="32:23">=<expr pos:start="32:23" pos:end="32:23"><name pos:start="32:23" pos:end="32:23">r</name></expr></init></decl>;</init><condition pos:start="32:25" pos:end="32:30"><expr pos:start="32:25" pos:end="32:29"><name pos:start="32:25" pos:end="32:25">j</name><operator pos:start="32:26" pos:end="32:26">&gt;</operator><name pos:start="32:27" pos:end="32:27">i</name><operator pos:start="32:28" pos:end="32:28">+</operator><literal type="number" pos:start="32:29" pos:end="32:29">1</literal></expr>;</condition><incr pos:start="32:31" pos:end="32:33"><expr pos:start="32:31" pos:end="32:33"><name pos:start="32:31" pos:end="32:31">j</name><operator pos:start="32:32" pos:end="32:33">--</operator></expr></incr>)</control>
            <block pos:start="33:13" pos:end="35:13">{<block_content pos:start="34:17" pos:end="34:34">
                <expr_stmt pos:start="34:17" pos:end="34:34"><expr pos:start="34:17" pos:end="34:33"><call pos:start="34:17" pos:end="34:33"><name pos:start="34:17" pos:end="34:20">swap</name><argument_list pos:start="34:21" pos:end="34:33">(<argument pos:start="34:22" pos:end="34:25"><expr pos:start="34:22" pos:end="34:25"><name pos:start="34:22" pos:end="34:25"><name pos:start="34:22" pos:end="34:22">q</name><index pos:start="34:23" pos:end="34:25">[<expr pos:start="34:24" pos:end="34:24"><name pos:start="34:24" pos:end="34:24">j</name></expr>]</index></name></expr></argument>,<argument pos:start="34:27" pos:end="34:32"><expr pos:start="34:27" pos:end="34:32"><name pos:start="34:27" pos:end="34:32"><name pos:start="34:27" pos:end="34:27">q</name><index pos:start="34:28" pos:end="34:32">[<expr pos:start="34:29" pos:end="34:31"><name pos:start="34:29" pos:end="34:29">j</name><operator pos:start="34:30" pos:end="34:30">-</operator><literal type="number" pos:start="34:31" pos:end="34:31">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="36:13" pos:end="36:24"><expr pos:start="36:13" pos:end="36:23"><name pos:start="36:13" pos:end="36:18"><name pos:start="36:13" pos:end="36:13">q</name><index pos:start="36:14" pos:end="36:18">[<expr pos:start="36:15" pos:end="36:17"><name pos:start="36:15" pos:end="36:15">i</name><operator pos:start="36:16" pos:end="36:16">+</operator><literal type="number" pos:start="36:17" pos:end="36:17">1</literal></expr>]</index></name><operator pos:start="36:19" pos:end="36:19">=</operator><name pos:start="36:20" pos:end="36:23">name</name></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else pos:start="38:9" pos:end="43:9">else
        <block pos:start="39:9" pos:end="43:9">{<block_content pos:start="40:13" pos:end="42:16">
            <expr_stmt pos:start="40:13" pos:end="40:29"><expr pos:start="40:13" pos:end="40:28"><name pos:start="40:13" pos:end="40:16">cout</name><operator pos:start="40:17" pos:end="40:18">&lt;&lt;</operator><name pos:start="40:19" pos:end="40:22"><name pos:start="40:19" pos:end="40:19">q</name><index pos:start="40:20" pos:end="40:22">[<expr pos:start="40:21" pos:end="40:21"><name pos:start="40:21" pos:end="40:21">l</name></expr>]</index></name><operator pos:start="40:23" pos:end="40:24">&lt;&lt;</operator><name pos:start="40:25" pos:end="40:28">endl</name></expr>;</expr_stmt>
            <expr_stmt pos:start="41:13" pos:end="41:21"><expr pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:16"><name pos:start="41:13" pos:end="41:13">q</name><index pos:start="41:14" pos:end="41:16">[<expr pos:start="41:15" pos:end="41:15"><name pos:start="41:15" pos:end="41:15">l</name></expr>]</index></name><operator pos:start="41:17" pos:end="41:17">=</operator><literal type="string" pos:start="41:18" pos:end="41:20">"0"</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="42:13" pos:end="42:16"><expr pos:start="42:13" pos:end="42:15"><name pos:start="42:13" pos:end="42:13">l</name><operator pos:start="42:14" pos:end="42:15">++</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
