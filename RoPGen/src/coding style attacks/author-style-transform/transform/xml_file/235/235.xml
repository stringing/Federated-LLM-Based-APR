<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/235/235.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;vector&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:12"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">t</name></decl>, <decl pos:start="4:8" pos:end="4:8"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:8" pos:end="4:8">n</name></decl>, <decl pos:start="4:11" pos:end="4:11"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:11" pos:end="4:11">p</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:20"><decl pos:start="5:1" pos:end="5:19"><type pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:6">vector</name><argument_list type="generic" pos:start="5:7" pos:end="5:11">&lt;<argument pos:start="5:8" pos:end="5:10"><expr pos:start="5:8" pos:end="5:10"><name pos:start="5:8" pos:end="5:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="5:13" pos:end="5:19"><name pos:start="5:13" pos:end="5:13">G</name><index pos:start="5:14" pos:end="5:19">[<expr pos:start="5:15" pos:end="5:18"><literal type="number" pos:start="5:15" pos:end="5:18">1010</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt pos:start="6:1" pos:end="6:13"><decl pos:start="6:1" pos:end="6:12"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:6">fa</name><index pos:start="6:7" pos:end="6:12">[<expr pos:start="6:8" pos:end="6:11"><literal type="number" pos:start="6:8" pos:end="6:11">1010</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="42:1"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:8">main</name> <parameter_list pos:start="7:10" pos:end="7:11">()</parameter_list> <block pos:start="7:13" pos:end="42:1">{<block_content pos:start="8:5" pos:end="41:13">
    <expr_stmt pos:start="8:5" pos:end="8:32"><expr pos:start="8:5" pos:end="8:31"><call pos:start="8:5" pos:end="8:31"><name pos:start="8:5" pos:end="8:11">freopen</name><argument_list pos:start="8:12" pos:end="8:31">(<argument pos:start="8:13" pos:end="8:18"><expr pos:start="8:13" pos:end="8:18"><literal type="string" pos:start="8:13" pos:end="8:18">"p.in"</literal></expr></argument>, <argument pos:start="8:21" pos:end="8:23"><expr pos:start="8:21" pos:end="8:23"><literal type="string" pos:start="8:21" pos:end="8:23">"r"</literal></expr></argument>, <argument pos:start="8:26" pos:end="8:30"><expr pos:start="8:26" pos:end="8:30"><name pos:start="8:26" pos:end="8:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><call pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:11">freopen</name><argument_list pos:start="9:12" pos:end="9:33">(<argument pos:start="9:13" pos:end="9:19"><expr pos:start="9:13" pos:end="9:19"><literal type="string" pos:start="9:13" pos:end="9:19">"p.out"</literal></expr></argument>, <argument pos:start="9:22" pos:end="9:24"><expr pos:start="9:22" pos:end="9:24"><literal type="string" pos:start="9:22" pos:end="9:24">"w"</literal></expr></argument>, <argument pos:start="9:27" pos:end="9:32"><expr pos:start="9:27" pos:end="9:32"><name pos:start="9:27" pos:end="9:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:13"><expr pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:7">cin</name> <operator pos:start="10:9" pos:end="10:10">&gt;&gt;</operator> <name pos:start="10:12" pos:end="10:12">t</name></expr>;</expr_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">flag</name> <init pos:start="11:14" pos:end="11:16">= <expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr></init></decl>;</decl_stmt> 
    <while pos:start="12:5" pos:end="40:5">while <condition pos:start="12:11" pos:end="12:15">(<expr pos:start="12:12" pos:end="12:14"><name pos:start="12:12" pos:end="12:12">t</name><operator pos:start="12:13" pos:end="12:14">--</operator></expr>)</condition> <block pos:start="12:17" pos:end="40:5">{<block_content pos:start="13:9" pos:end="39:9">
        <expr_stmt pos:start="13:9" pos:end="13:17"><expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:11">cin</name> <operator pos:start="13:13" pos:end="13:14">&gt;&gt;</operator> <name pos:start="13:16" pos:end="13:16">n</name></expr>;</expr_stmt>
        <for pos:start="14:9" pos:end="20:9">for <control pos:start="14:13" pos:end="14:35">(<init pos:start="14:14" pos:end="14:23"><decl pos:start="14:14" pos:end="14:22"><type pos:start="14:14" pos:end="14:16"><name pos:start="14:14" pos:end="14:16">int</name></type> <name pos:start="14:18" pos:end="14:18">i</name> <init pos:start="14:20" pos:end="14:22">= <expr pos:start="14:22" pos:end="14:22"><literal type="number" pos:start="14:22" pos:end="14:22">1</literal></expr></init></decl>;</init> <condition pos:start="14:25" pos:end="14:30"><expr pos:start="14:25" pos:end="14:29"><name pos:start="14:25" pos:end="14:25">i</name> <operator pos:start="14:27" pos:end="14:27">&lt;</operator> <name pos:start="14:29" pos:end="14:29">n</name></expr>;</condition> <incr pos:start="14:32" pos:end="14:34"><expr pos:start="14:32" pos:end="14:34"><name pos:start="14:32" pos:end="14:32">i</name><operator pos:start="14:33" pos:end="14:34">++</operator></expr></incr>)</control> <block pos:start="14:37" pos:end="20:9">{<block_content pos:start="15:13" pos:end="19:22">
            <decl_stmt pos:start="15:13" pos:end="15:21"><decl pos:start="15:13" pos:end="15:17"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:17">x</name></decl>, <decl pos:start="15:20" pos:end="15:20"><type ref="prev" pos:start="15:13" pos:end="15:15"/><name pos:start="15:20" pos:end="15:20">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:26"><expr pos:start="16:13" pos:end="16:25"><name pos:start="16:13" pos:end="16:15">cin</name> <operator pos:start="16:17" pos:end="16:18">&gt;&gt;</operator> <name pos:start="16:20" pos:end="16:20">x</name> <operator pos:start="16:22" pos:end="16:23">&gt;&gt;</operator> <name pos:start="16:25" pos:end="16:25">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:30"><expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:13">G</name><index pos:start="17:14" pos:end="17:16">[<expr pos:start="17:15" pos:end="17:15"><name pos:start="17:15" pos:end="17:15">x</name></expr>]</index></name><operator pos:start="17:17" pos:end="17:17">.</operator><call pos:start="17:18" pos:end="17:29"><name pos:start="17:18" pos:end="17:26">push_back</name><argument_list pos:start="17:27" pos:end="17:29">(<argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:30"><expr pos:start="18:13" pos:end="18:29"><name pos:start="18:13" pos:end="18:16"><name pos:start="18:13" pos:end="18:13">G</name><index pos:start="18:14" pos:end="18:16">[<expr pos:start="18:15" pos:end="18:15"><name pos:start="18:15" pos:end="18:15">y</name></expr>]</index></name><operator pos:start="18:17" pos:end="18:17">.</operator><call pos:start="18:18" pos:end="18:29"><name pos:start="18:18" pos:end="18:26">push_back</name><argument_list pos:start="18:27" pos:end="18:29">(<argument pos:start="18:28" pos:end="18:28"><expr pos:start="18:28" pos:end="18:28"><name pos:start="18:28" pos:end="18:28">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:22"><expr pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:14">fa</name><index pos:start="19:15" pos:end="19:17">[<expr pos:start="19:16" pos:end="19:16"><name pos:start="19:16" pos:end="19:16">y</name></expr>]</index></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:21">x</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="21:9" pos:end="34:9">for <control pos:start="21:13" pos:end="21:36">(<init pos:start="21:14" pos:end="21:23"><decl pos:start="21:14" pos:end="21:22"><type pos:start="21:14" pos:end="21:16"><name pos:start="21:14" pos:end="21:16">int</name></type> <name pos:start="21:18" pos:end="21:18">i</name> <init pos:start="21:20" pos:end="21:22">= <expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">1</literal></expr></init></decl>;</init> <condition pos:start="21:25" pos:end="21:31"><expr pos:start="21:25" pos:end="21:30"><name pos:start="21:25" pos:end="21:25">i</name> <operator pos:start="21:27" pos:end="21:28">&lt;=</operator> <name pos:start="21:30" pos:end="21:30">n</name></expr>;</condition> <incr pos:start="21:33" pos:end="21:35"><expr pos:start="21:33" pos:end="21:35"><name pos:start="21:33" pos:end="21:33">i</name><operator pos:start="21:34" pos:end="21:35">++</operator></expr></incr>)</control> <block pos:start="21:38" pos:end="34:9">{<block_content pos:start="22:13" pos:end="33:22">
            <decl_stmt pos:start="22:13" pos:end="22:34"><decl pos:start="22:13" pos:end="22:33"><type pos:start="22:13" pos:end="22:15"><name pos:start="22:13" pos:end="22:15">int</name></type> <name pos:start="22:17" pos:end="22:19">cnt</name> <init pos:start="22:21" pos:end="22:33">= <expr pos:start="22:23" pos:end="22:33"><name pos:start="22:23" pos:end="22:26"><name pos:start="22:23" pos:end="22:23">G</name><index pos:start="22:24" pos:end="22:26">[<expr pos:start="22:25" pos:end="22:25"><name pos:start="22:25" pos:end="22:25">i</name></expr>]</index></name><operator pos:start="22:27" pos:end="22:27">.</operator><call pos:start="22:28" pos:end="22:33"><name pos:start="22:28" pos:end="22:31">size</name><argument_list pos:start="22:32" pos:end="22:33">()</argument_list></call></expr></init></decl>;</decl_stmt> 
            <expr_stmt pos:start="23:13" pos:end="23:21"><expr pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:16">flag</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <literal type="number" pos:start="23:20" pos:end="23:20">1</literal></expr>;</expr_stmt>
            <if_stmt pos:start="24:13" pos:end="26:13"><if pos:start="24:13" pos:end="26:13">if <condition pos:start="24:16" pos:end="24:23">(<expr pos:start="24:17" pos:end="24:22"><operator pos:start="24:17" pos:end="24:17">!</operator><name pos:start="24:18" pos:end="24:22"><name pos:start="24:18" pos:end="24:19">fa</name><index pos:start="24:20" pos:end="24:22">[<expr pos:start="24:21" pos:end="24:21"><name pos:start="24:21" pos:end="24:21">i</name></expr>]</index></name></expr>)</condition> <block pos:start="24:25" pos:end="26:13">{<block_content pos:start="25:17" pos:end="25:22">
                <expr_stmt pos:start="25:17" pos:end="25:22"><expr pos:start="25:17" pos:end="25:21"><name pos:start="25:17" pos:end="25:19">cnt</name><operator pos:start="25:20" pos:end="25:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <for pos:start="27:13" pos:end="32:13">for <control pos:start="27:17" pos:end="27:49">(<init pos:start="27:18" pos:end="27:27"><decl pos:start="27:18" pos:end="27:26"><type pos:start="27:18" pos:end="27:20"><name pos:start="27:18" pos:end="27:20">int</name></type> <name pos:start="27:22" pos:end="27:22">j</name> <init pos:start="27:24" pos:end="27:26">= <expr pos:start="27:26" pos:end="27:26"><literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr></init></decl>;</init> <condition pos:start="27:29" pos:end="27:44"><expr pos:start="27:29" pos:end="27:43"><name pos:start="27:29" pos:end="27:29">j</name> <operator pos:start="27:31" pos:end="27:31">&lt;</operator> <name pos:start="27:33" pos:end="27:36"><name pos:start="27:33" pos:end="27:33">G</name><index pos:start="27:34" pos:end="27:36">[<expr pos:start="27:35" pos:end="27:35"><name pos:start="27:35" pos:end="27:35">i</name></expr>]</index></name><operator pos:start="27:37" pos:end="27:37">.</operator><call pos:start="27:38" pos:end="27:43"><name pos:start="27:38" pos:end="27:41">size</name><argument_list pos:start="27:42" pos:end="27:43">()</argument_list></call></expr>;</condition> <incr pos:start="27:46" pos:end="27:48"><expr pos:start="27:46" pos:end="27:48"><name pos:start="27:46" pos:end="27:46">j</name><operator pos:start="27:47" pos:end="27:48">++</operator></expr></incr>)</control> <block pos:start="27:51" pos:end="32:13">{<block_content pos:start="28:17" pos:end="31:17">
                <if_stmt pos:start="28:17" pos:end="31:17"><if pos:start="28:17" pos:end="31:17">if <condition pos:start="28:20" pos:end="28:44">(<expr pos:start="28:21" pos:end="28:43"><name pos:start="28:21" pos:end="28:30"><name pos:start="28:21" pos:end="28:21">G</name><index pos:start="28:22" pos:end="28:30">[<expr pos:start="28:23" pos:end="28:29"><name pos:start="28:23" pos:end="28:29"><name pos:start="28:23" pos:end="28:23">G</name><index pos:start="28:24" pos:end="28:26">[<expr pos:start="28:25" pos:end="28:25"><name pos:start="28:25" pos:end="28:25">i</name></expr>]</index><index pos:start="28:27" pos:end="28:29">[<expr pos:start="28:28" pos:end="28:28"><name pos:start="28:28" pos:end="28:28">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="28:31" pos:end="28:31">.</operator><call pos:start="28:32" pos:end="28:37"><name pos:start="28:32" pos:end="28:35">size</name><argument_list pos:start="28:36" pos:end="28:37">()</argument_list></call> <operator pos:start="28:39" pos:end="28:39">&gt;</operator> <name pos:start="28:41" pos:end="28:43">cnt</name></expr>)</condition> <block pos:start="28:46" pos:end="31:17">{<block_content pos:start="29:21" pos:end="30:26">
                    <expr_stmt pos:start="29:21" pos:end="29:29"><expr pos:start="29:21" pos:end="29:28"><name pos:start="29:21" pos:end="29:24">flag</name> <operator pos:start="29:26" pos:end="29:26">=</operator> <literal type="number" pos:start="29:28" pos:end="29:28">0</literal></expr>;</expr_stmt>
                    <break pos:start="30:21" pos:end="30:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="33:13" pos:end="33:22"><expr pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:13">p</name> <operator pos:start="33:15" pos:end="33:16">+=</operator> <name pos:start="33:18" pos:end="33:21">flag</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:12">cout</name> <operator pos:start="35:14" pos:end="35:15">&lt;&lt;</operator> <name pos:start="35:17" pos:end="35:17">p</name> <operator pos:start="35:19" pos:end="35:20">&lt;&lt;</operator> <name pos:start="35:22" pos:end="35:25">endl</name></expr>;</expr_stmt>
        <expr_stmt pos:start="36:9" pos:end="36:14"><expr pos:start="36:9" pos:end="36:13"><name pos:start="36:9" pos:end="36:9">p</name> <operator pos:start="36:11" pos:end="36:11">=</operator> <literal type="number" pos:start="36:13" pos:end="36:13">0</literal></expr>;</expr_stmt>
        <for pos:start="37:9" pos:end="39:9">for <control pos:start="37:13" pos:end="37:36">(<init pos:start="37:14" pos:end="37:23"><decl pos:start="37:14" pos:end="37:22"><type pos:start="37:14" pos:end="37:16"><name pos:start="37:14" pos:end="37:16">int</name></type> <name pos:start="37:18" pos:end="37:18">i</name> <init pos:start="37:20" pos:end="37:22">= <expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr></init></decl>;</init> <condition pos:start="37:25" pos:end="37:31"><expr pos:start="37:25" pos:end="37:30"><name pos:start="37:25" pos:end="37:25">i</name> <operator pos:start="37:27" pos:end="37:28">&lt;=</operator> <name pos:start="37:30" pos:end="37:30">n</name></expr>;</condition> <incr pos:start="37:33" pos:end="37:35"><expr pos:start="37:33" pos:end="37:35"><name pos:start="37:33" pos:end="37:33">i</name><operator pos:start="37:34" pos:end="37:35">++</operator></expr></incr>)</control> <block pos:start="37:38" pos:end="39:9">{<block_content pos:start="38:13" pos:end="38:37"> 
            <expr_stmt pos:start="38:13" pos:end="38:37"><expr pos:start="38:13" pos:end="38:36"><call pos:start="38:13" pos:end="38:25"><name pos:start="38:13" pos:end="38:23"><name pos:start="38:13" pos:end="38:18">vector</name><argument_list type="generic" pos:start="38:19" pos:end="38:23">&lt;<argument pos:start="38:20" pos:end="38:22"><expr pos:start="38:20" pos:end="38:22"><name pos:start="38:20" pos:end="38:22">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:start="38:24" pos:end="38:25">()</argument_list></call><operator pos:start="38:26" pos:end="38:26">.</operator><call pos:start="38:27" pos:end="38:36"><name pos:start="38:27" pos:end="38:30">swap</name><argument_list pos:start="38:31" pos:end="38:36">(<argument pos:start="38:32" pos:end="38:35"><expr pos:start="38:32" pos:end="38:35"><name pos:start="38:32" pos:end="38:35"><name pos:start="38:32" pos:end="38:32">G</name><index pos:start="38:33" pos:end="38:35">[<expr pos:start="38:34" pos:end="38:34"><name pos:start="38:34" pos:end="38:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></while>
    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
