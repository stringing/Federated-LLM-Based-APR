<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1054/1054.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:35"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">n</name></decl>,<decl pos:start="4:7" pos:end="4:18"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:7" pos:end="4:9">ans</name><init pos:start="4:10" pos:end="4:18">=<expr pos:start="4:11" pos:end="4:18"><literal type="number" pos:start="4:11" pos:end="4:18">10000000</literal></expr></init></decl>,<decl pos:start="4:20" pos:end="4:26"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:20" pos:end="4:26"><name pos:start="4:20" pos:end="4:22">ang</name><index pos:start="4:23" pos:end="4:26">[<expr pos:start="4:24" pos:end="4:25"><literal type="number" pos:start="4:24" pos:end="4:25">15</literal></expr>]</index></name></decl>,<decl pos:start="4:28" pos:end="4:34"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:28" pos:end="4:34"><name pos:start="4:28" pos:end="4:30">pet</name><index pos:start="4:31" pos:end="4:34">[<expr pos:start="4:32" pos:end="4:33"><literal type="number" pos:start="4:32" pos:end="4:33">15</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="13:1"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">void</name></type> <name pos:start="5:6" pos:end="5:8">dfs</name><parameter_list pos:start="5:9" pos:end="5:27">(<parameter pos:start="5:10" pos:end="5:14"><decl pos:start="5:10" pos:end="5:14"><type pos:start="5:10" pos:end="5:14"><name pos:start="5:10" pos:end="5:12">int</name></type> <name pos:start="5:14" pos:end="5:14">x</name></decl></parameter>,<parameter pos:start="5:16" pos:end="5:20"><decl pos:start="5:16" pos:end="5:20"><type pos:start="5:16" pos:end="5:20"><name pos:start="5:16" pos:end="5:18">int</name></type> <name pos:start="5:20" pos:end="5:20">a</name></decl></parameter>,<parameter pos:start="5:22" pos:end="5:26"><decl pos:start="5:22" pos:end="5:26"><type pos:start="5:22" pos:end="5:26"><name pos:start="5:22" pos:end="5:24">int</name></type> <name pos:start="5:26" pos:end="5:26">p</name></decl></parameter>)</parameter_list><block pos:start="5:28" pos:end="13:1">{<block_content pos:start="6:5" pos:end="12:17">
    <if_stmt pos:start="6:5" pos:end="10:5"><if pos:start="6:5" pos:end="10:5">if<condition pos:start="6:7" pos:end="6:12">(<expr pos:start="6:8" pos:end="6:11"><name pos:start="6:8" pos:end="6:8">x</name><operator pos:start="6:9" pos:end="6:10">==</operator><name pos:start="6:11" pos:end="6:11">n</name></expr>)</condition><block pos:start="6:13" pos:end="10:5">{<block_content pos:start="7:9" pos:end="9:15">
        <expr_stmt pos:start="7:9" pos:end="7:30"><expr pos:start="7:9" pos:end="7:29"><name pos:start="7:9" pos:end="7:11">ans</name><operator pos:start="7:12" pos:end="7:12">=</operator><call pos:start="7:13" pos:end="7:29"><name pos:start="7:13" pos:end="7:15">min</name><argument_list pos:start="7:16" pos:end="7:29">(<argument pos:start="7:17" pos:end="7:19"><expr pos:start="7:17" pos:end="7:19"><name pos:start="7:17" pos:end="7:19">ans</name></expr></argument>,<argument pos:start="7:21" pos:end="7:28"><expr pos:start="7:21" pos:end="7:28"><call pos:start="7:21" pos:end="7:28"><name pos:start="7:21" pos:end="7:23">abs</name><argument_list pos:start="7:24" pos:end="7:28">(<argument pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:25">a</name><operator pos:start="7:26" pos:end="7:26">-</operator><name pos:start="7:27" pos:end="7:27">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:48"><expr pos:start="8:9" pos:end="8:47"><name pos:start="8:9" pos:end="8:12">cout</name><operator pos:start="8:13" pos:end="8:14">&lt;&lt;</operator><name pos:start="8:15" pos:end="8:17">ans</name><operator pos:start="8:18" pos:end="8:19">&lt;&lt;</operator><literal type="char" pos:start="8:20" pos:end="8:22">' '</literal><operator pos:start="8:23" pos:end="8:24">&lt;&lt;</operator><name pos:start="8:25" pos:end="8:25">x</name><operator pos:start="8:26" pos:end="8:27">&lt;&lt;</operator><literal type="char" pos:start="8:28" pos:end="8:30">' '</literal><operator pos:start="8:31" pos:end="8:32">&lt;&lt;</operator><name pos:start="8:33" pos:end="8:33">a</name><operator pos:start="8:34" pos:end="8:35">&lt;&lt;</operator><literal type="char" pos:start="8:36" pos:end="8:38">' '</literal><operator pos:start="8:39" pos:end="8:40">&lt;&lt;</operator><name pos:start="8:41" pos:end="8:41">p</name><operator pos:start="8:42" pos:end="8:43">&lt;&lt;</operator><name pos:start="8:44" pos:end="8:47">endl</name></expr>;</expr_stmt>
        <return pos:start="9:9" pos:end="9:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><call pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:7">dfs</name><argument_list pos:start="11:8" pos:end="11:30">(<argument pos:start="11:9" pos:end="11:11"><expr pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:9">x</name><operator pos:start="11:10" pos:end="11:10">+</operator><literal type="number" pos:start="11:11" pos:end="11:11">1</literal></expr></argument>,<argument pos:start="11:13" pos:end="11:20"><expr pos:start="11:13" pos:end="11:20"><name pos:start="11:13" pos:end="11:13">a</name><operator pos:start="11:14" pos:end="11:14">*</operator><name pos:start="11:15" pos:end="11:20"><name pos:start="11:15" pos:end="11:17">ang</name><index pos:start="11:18" pos:end="11:20">[<expr pos:start="11:19" pos:end="11:19"><name pos:start="11:19" pos:end="11:19">x</name></expr>]</index></name></expr></argument>,<argument pos:start="11:22" pos:end="11:29"><expr pos:start="11:22" pos:end="11:29"><name pos:start="11:22" pos:end="11:22">p</name><operator pos:start="11:23" pos:end="11:23">+</operator><name pos:start="11:24" pos:end="11:29"><name pos:start="11:24" pos:end="11:26">pet</name><index pos:start="11:27" pos:end="11:29">[<expr pos:start="11:28" pos:end="11:28"><name pos:start="11:28" pos:end="11:28">x</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:17"><expr pos:start="12:5" pos:end="12:16"><call pos:start="12:5" pos:end="12:16"><name pos:start="12:5" pos:end="12:7">dfs</name><argument_list pos:start="12:8" pos:end="12:16">(<argument pos:start="12:9" pos:end="12:11"><expr pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:9">x</name><operator pos:start="12:10" pos:end="12:10">+</operator><literal type="number" pos:start="12:11" pos:end="12:11">1</literal></expr></argument>,<argument pos:start="12:13" pos:end="12:13"><expr pos:start="12:13" pos:end="12:13"><name pos:start="12:13" pos:end="12:13">a</name></expr></argument>,<argument pos:start="12:15" pos:end="12:15"><expr pos:start="12:15" pos:end="12:15"><name pos:start="12:15" pos:end="12:15">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="14:1" pos:end="24:1"><type pos:start="14:1" pos:end="14:3"><name pos:start="14:1" pos:end="14:3">int</name></type> <name pos:start="14:5" pos:end="14:8">main</name><parameter_list pos:start="14:9" pos:end="14:10">()</parameter_list><block pos:start="14:11" pos:end="24:1">{<block_content pos:start="15:5" pos:end="23:13">
    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><call pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:11">freopen</name><argument_list pos:start="15:12" pos:end="15:35">(<argument pos:start="15:13" pos:end="15:22"><expr pos:start="15:13" pos:end="15:22"><literal type="string" pos:start="15:13" pos:end="15:22">"stone.in"</literal></expr></argument>, <argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><literal type="string" pos:start="15:25" pos:end="15:27">"r"</literal></expr></argument>, <argument pos:start="15:30" pos:end="15:34"><expr pos:start="15:30" pos:end="15:34"><name pos:start="15:30" pos:end="15:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:38"><expr pos:start="16:5" pos:end="16:37"><call pos:start="16:5" pos:end="16:37"><name pos:start="16:5" pos:end="16:11">freopen</name><argument_list pos:start="16:12" pos:end="16:37">(<argument pos:start="16:13" pos:end="16:23"><expr pos:start="16:13" pos:end="16:23"><literal type="string" pos:start="16:13" pos:end="16:23">"stone.out"</literal></expr></argument>, <argument pos:start="16:26" pos:end="16:28"><expr pos:start="16:26" pos:end="16:28"><literal type="string" pos:start="16:26" pos:end="16:28">"w"</literal></expr></argument>, <argument pos:start="16:31" pos:end="16:36"><expr pos:start="16:31" pos:end="16:36"><name pos:start="16:31" pos:end="16:36">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><call pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:9">scanf</name><argument_list pos:start="17:10" pos:end="17:18">(<argument pos:start="17:11" pos:end="17:14"><expr pos:start="17:11" pos:end="17:14"><literal type="string" pos:start="17:11" pos:end="17:14">"%d"</literal></expr></argument>,<argument pos:start="17:16" pos:end="17:17"><expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">&amp;</operator><name pos:start="17:17" pos:end="17:17">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="18:5" pos:end="20:5">for<control pos:start="18:8" pos:end="18:26">(<init pos:start="18:9" pos:end="18:16"><decl pos:start="18:9" pos:end="18:15"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">i</name><init pos:start="18:14" pos:end="18:15">=<expr pos:start="18:15" pos:end="18:15"><literal type="number" pos:start="18:15" pos:end="18:15">0</literal></expr></init></decl>;</init> <condition pos:start="18:18" pos:end="18:21"><expr pos:start="18:18" pos:end="18:20"><name pos:start="18:18" pos:end="18:18">i</name><operator pos:start="18:19" pos:end="18:19">&lt;</operator><name pos:start="18:20" pos:end="18:20">n</name></expr>;</condition> <incr pos:start="18:23" pos:end="18:25"><expr pos:start="18:23" pos:end="18:25"><name pos:start="18:23" pos:end="18:23">i</name><operator pos:start="18:24" pos:end="18:25">++</operator></expr></incr>)</control><block pos:start="18:27" pos:end="20:5">{<block_content pos:start="19:9" pos:end="19:38">
        <expr_stmt pos:start="19:9" pos:end="19:38"><expr pos:start="19:9" pos:end="19:37"><call pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:13">scanf</name><argument_list pos:start="19:14" pos:end="19:37">(<argument pos:start="19:15" pos:end="19:20"><expr pos:start="19:15" pos:end="19:20"><literal type="string" pos:start="19:15" pos:end="19:20">"%d%d"</literal></expr></argument>,<argument pos:start="19:22" pos:end="19:28"><expr pos:start="19:22" pos:end="19:28"><operator pos:start="19:22" pos:end="19:22">&amp;</operator><name pos:start="19:23" pos:end="19:28"><name pos:start="19:23" pos:end="19:25">ang</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><name pos:start="19:27" pos:end="19:27">i</name></expr>]</index></name></expr></argument>,<argument pos:start="19:30" pos:end="19:36"><expr pos:start="19:30" pos:end="19:36"><operator pos:start="19:30" pos:end="19:30">&amp;</operator><name pos:start="19:31" pos:end="19:36"><name pos:start="19:31" pos:end="19:33">pet</name><index pos:start="19:34" pos:end="19:36">[<expr pos:start="19:35" pos:end="19:35"><name pos:start="19:35" pos:end="19:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="21:5" pos:end="21:15"><expr pos:start="21:5" pos:end="21:14"><call pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:7">dfs</name><argument_list pos:start="21:8" pos:end="21:14">(<argument pos:start="21:9" pos:end="21:9"><expr pos:start="21:9" pos:end="21:9"><literal type="number" pos:start="21:9" pos:end="21:9">0</literal></expr></argument>,<argument pos:start="21:11" pos:end="21:11"><expr pos:start="21:11" pos:end="21:11"><literal type="number" pos:start="21:11" pos:end="21:11">1</literal></expr></argument>,<argument pos:start="21:13" pos:end="21:13"><expr pos:start="21:13" pos:end="21:13"><literal type="number" pos:start="21:13" pos:end="21:13">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:23"><expr pos:start="22:5" pos:end="22:22"><call pos:start="22:5" pos:end="22:22"><name pos:start="22:5" pos:end="22:10">printf</name><argument_list pos:start="22:11" pos:end="22:22">(<argument pos:start="22:12" pos:end="22:17"><expr pos:start="22:12" pos:end="22:17"><literal type="string" pos:start="22:12" pos:end="22:17">"%d\n"</literal></expr></argument>,<argument pos:start="22:19" pos:end="22:21"><expr pos:start="22:19" pos:end="22:21"><name pos:start="22:19" pos:end="22:21">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="23:5" pos:end="23:13">return <expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
