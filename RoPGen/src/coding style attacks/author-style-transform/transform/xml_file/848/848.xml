<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/848/848.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:15">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:15">&lt;stack&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="78:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="78:1">{<block_content pos:start="5:5" pos:end="77:13">
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:11"><expr pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:7">cin</name><operator pos:start="6:8" pos:end="6:9">&gt;&gt;</operator><name pos:start="6:10" pos:end="6:10">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:9">stack</name><argument_list type="generic" pos:start="7:10" pos:end="7:14">&lt;<argument pos:start="7:11" pos:end="7:13"><expr pos:start="7:11" pos:end="7:13"><name pos:start="7:11" pos:end="7:13">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="7:16" pos:end="7:16">a</name></decl>,<decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:14"/><name pos:start="7:18" pos:end="7:18">b</name></decl>;</decl_stmt>
    <while pos:start="8:5" pos:end="57:1">while<condition pos:start="8:10" pos:end="8:14">(<expr pos:start="8:11" pos:end="8:13"><name pos:start="8:11" pos:end="8:11">n</name><operator pos:start="8:12" pos:end="8:13">--</operator></expr>)</condition><block pos:start="8:15" pos:end="57:1">{<block_content pos:start="9:9" pos:end="55:5">
        <decl_stmt pos:start="9:9" pos:end="9:15"><decl pos:start="9:9" pos:end="9:14"><type pos:start="9:9" pos:end="9:12"><name pos:start="9:9" pos:end="9:12">char</name></type> <name pos:start="9:14" pos:end="9:14">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:15"><expr pos:start="10:9" pos:end="10:14"><name pos:start="10:9" pos:end="10:11">cin</name><operator pos:start="10:12" pos:end="10:13">&gt;&gt;</operator><name pos:start="10:14" pos:end="10:14">s</name></expr>;</expr_stmt>
        <if_stmt pos:start="11:9" pos:end="55:5"><if pos:start="11:9" pos:end="33:5">if<condition pos:start="11:11" pos:end="11:18">(<expr pos:start="11:12" pos:end="11:17"><name pos:start="11:12" pos:end="11:12">s</name><operator pos:start="11:13" pos:end="11:14">==</operator><literal type="char" pos:start="11:15" pos:end="11:17">'A'</literal></expr>)</condition><block pos:start="11:19" pos:end="33:5">{<block_content pos:start="12:13" pos:end="32:13">
            <decl_stmt pos:start="12:13" pos:end="12:19"><decl pos:start="12:13" pos:end="12:18"><type pos:start="12:13" pos:end="12:16"><name pos:start="12:13" pos:end="12:16">char</name></type> <name pos:start="12:18" pos:end="12:18">x</name></decl>;</decl_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:19"><expr pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:15">cin</name><operator pos:start="13:16" pos:end="13:17">&gt;&gt;</operator><name pos:start="13:18" pos:end="13:18">x</name></expr>;</expr_stmt>
            <if_stmt pos:start="14:13" pos:end="32:13"><if pos:start="14:13" pos:end="18:9">if<condition pos:start="14:15" pos:end="14:24">(<expr pos:start="14:16" pos:end="14:23"><name pos:start="14:16" pos:end="14:16">x</name> <operator pos:start="14:18" pos:end="14:19">==</operator> <literal type="char" pos:start="14:21" pos:end="14:23">'I'</literal></expr>)</condition><block pos:start="14:25" pos:end="18:9">{<block_content pos:start="15:17" pos:end="17:29">
                <decl_stmt pos:start="15:17" pos:end="15:25"><decl pos:start="15:17" pos:end="15:24"><type pos:start="15:17" pos:end="15:19"><name pos:start="15:17" pos:end="15:19">int</name></type> <name pos:start="15:21" pos:end="15:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="16:17" pos:end="16:26"><expr pos:start="16:17" pos:end="16:25"><name pos:start="16:17" pos:end="16:19">cin</name><operator pos:start="16:20" pos:end="16:21">&gt;&gt;</operator><name pos:start="16:22" pos:end="16:25">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="17:17" pos:end="17:29"><expr pos:start="17:17" pos:end="17:28"><call pos:start="17:17" pos:end="17:28"><name pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:17">a</name><operator pos:start="17:18" pos:end="17:18">.</operator><name pos:start="17:19" pos:end="17:22">push</name></name><argument_list pos:start="17:23" pos:end="17:28">(<argument pos:start="17:24" pos:end="17:27"><expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="18:10" pos:end="22:13">else if<condition pos:start="18:17" pos:end="18:25">(<expr pos:start="18:18" pos:end="18:24"><name pos:start="18:18" pos:end="18:18">x</name> <operator pos:start="18:20" pos:end="18:21">==</operator><literal type="char" pos:start="18:22" pos:end="18:24">'D'</literal></expr>)</condition><block pos:start="18:26" pos:end="22:13">{<block_content pos:start="19:17" pos:end="21:17">
                <if_stmt pos:start="19:17" pos:end="21:17"><if pos:start="19:17" pos:end="21:17">if<condition pos:start="19:19" pos:end="19:30">(<expr pos:start="19:20" pos:end="19:29"><operator pos:start="19:20" pos:end="19:20">!</operator><call pos:start="19:21" pos:end="19:29"><name pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:21">a</name><operator pos:start="19:22" pos:end="19:22">.</operator><name pos:start="19:23" pos:end="19:27">empty</name></name><argument_list pos:start="19:28" pos:end="19:29">()</argument_list></call></expr>)</condition><block pos:start="19:31" pos:end="21:17">{<block_content pos:start="20:21" pos:end="20:28">
                    <expr_stmt pos:start="20:21" pos:end="20:28"><expr pos:start="20:21" pos:end="20:27"><call pos:start="20:21" pos:end="20:27"><name pos:start="20:21" pos:end="20:25"><name pos:start="20:21" pos:end="20:21">a</name><operator pos:start="20:22" pos:end="20:22">.</operator><name pos:start="20:23" pos:end="20:25">pop</name></name><argument_list pos:start="20:26" pos:end="20:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if><else pos:start="22:14" pos:end="32:13">else<block pos:start="22:18" pos:end="32:13">{<block_content pos:start="23:17" pos:end="31:17">
                <decl_stmt pos:start="23:17" pos:end="23:29"><decl pos:start="23:17" pos:end="23:28"><type pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:21">stack</name><argument_list type="generic" pos:start="23:22" pos:end="23:26">&lt;<argument pos:start="23:23" pos:end="23:25"><expr pos:start="23:23" pos:end="23:25"><name pos:start="23:23" pos:end="23:25">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="23:28" pos:end="23:28">c</name></decl>;</decl_stmt>
                <while pos:start="24:17" pos:end="27:17">while<condition pos:start="24:22" pos:end="24:33">(<expr pos:start="24:23" pos:end="24:32"><operator pos:start="24:23" pos:end="24:23">!</operator><call pos:start="24:24" pos:end="24:32"><name pos:start="24:24" pos:end="24:30"><name pos:start="24:24" pos:end="24:24">b</name><operator pos:start="24:25" pos:end="24:25">.</operator><name pos:start="24:26" pos:end="24:30">empty</name></name><argument_list pos:start="24:31" pos:end="24:32">()</argument_list></call></expr>)</condition><block pos:start="24:34" pos:end="27:17">{<block_content pos:start="25:21" pos:end="26:28">
                    <expr_stmt pos:start="25:21" pos:end="25:36"><expr pos:start="25:21" pos:end="25:35"><call pos:start="25:21" pos:end="25:35"><name pos:start="25:21" pos:end="25:26"><name pos:start="25:21" pos:end="25:21">c</name><operator pos:start="25:22" pos:end="25:22">.</operator><name pos:start="25:23" pos:end="25:26">push</name></name><argument_list pos:start="25:27" pos:end="25:35">(<argument pos:start="25:28" pos:end="25:34"><expr pos:start="25:28" pos:end="25:34"><call pos:start="25:28" pos:end="25:34"><name pos:start="25:28" pos:end="25:32"><name pos:start="25:28" pos:end="25:28">b</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:32">top</name></name><argument_list pos:start="25:33" pos:end="25:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="26:21" pos:end="26:28"><expr pos:start="26:21" pos:end="26:27"><call pos:start="26:21" pos:end="26:27"><name pos:start="26:21" pos:end="26:25"><name pos:start="26:21" pos:end="26:21">b</name><operator pos:start="26:22" pos:end="26:22">.</operator><name pos:start="26:23" pos:end="26:25">pop</name></name><argument_list pos:start="26:26" pos:end="26:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="28:17" pos:end="31:17">while<condition pos:start="28:22" pos:end="28:33">(<expr pos:start="28:23" pos:end="28:32"><operator pos:start="28:23" pos:end="28:23">!</operator><call pos:start="28:24" pos:end="28:32"><name pos:start="28:24" pos:end="28:30"><name pos:start="28:24" pos:end="28:24">c</name><operator pos:start="28:25" pos:end="28:25">.</operator><name pos:start="28:26" pos:end="28:30">empty</name></name><argument_list pos:start="28:31" pos:end="28:32">()</argument_list></call></expr>)</condition><block pos:start="28:34" pos:end="31:17">{<block_content pos:start="29:21" pos:end="30:28">
                    <expr_stmt pos:start="29:21" pos:end="29:36"><expr pos:start="29:21" pos:end="29:35"><call pos:start="29:21" pos:end="29:35"><name pos:start="29:21" pos:end="29:26"><name pos:start="29:21" pos:end="29:21">a</name><operator pos:start="29:22" pos:end="29:22">.</operator><name pos:start="29:23" pos:end="29:26">push</name></name><argument_list pos:start="29:27" pos:end="29:35">(<argument pos:start="29:28" pos:end="29:34"><expr pos:start="29:28" pos:end="29:34"><call pos:start="29:28" pos:end="29:34"><name pos:start="29:28" pos:end="29:32"><name pos:start="29:28" pos:end="29:28">c</name><operator pos:start="29:29" pos:end="29:29">.</operator><name pos:start="29:30" pos:end="29:32">top</name></name><argument_list pos:start="29:33" pos:end="29:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="30:21" pos:end="30:28"><expr pos:start="30:21" pos:end="30:27"><call pos:start="30:21" pos:end="30:27"><name pos:start="30:21" pos:end="30:25"><name pos:start="30:21" pos:end="30:21">c</name><operator pos:start="30:22" pos:end="30:22">.</operator><name pos:start="30:23" pos:end="30:25">pop</name></name><argument_list pos:start="30:26" pos:end="30:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
    </block_content>}</block></if><else pos:start="33:6" pos:end="55:5">else<block pos:start="33:10" pos:end="55:5">{<block_content pos:start="34:13" pos:end="54:13">
            <decl_stmt pos:start="34:13" pos:end="34:19"><decl pos:start="34:13" pos:end="34:18"><type pos:start="34:13" pos:end="34:16"><name pos:start="34:13" pos:end="34:16">char</name></type> <name pos:start="34:18" pos:end="34:18">x</name></decl>;</decl_stmt>
            <expr_stmt pos:start="35:13" pos:end="35:19"><expr pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:15">cin</name><operator pos:start="35:16" pos:end="35:17">&gt;&gt;</operator><name pos:start="35:18" pos:end="35:18">x</name></expr>;</expr_stmt>
            <if_stmt pos:start="36:13" pos:end="54:13"><if pos:start="36:13" pos:end="40:9">if<condition pos:start="36:15" pos:end="36:24">(<expr pos:start="36:16" pos:end="36:23"><name pos:start="36:16" pos:end="36:16">x</name> <operator pos:start="36:18" pos:end="36:19">==</operator> <literal type="char" pos:start="36:21" pos:end="36:23">'I'</literal></expr>)</condition><block pos:start="36:25" pos:end="40:9">{<block_content pos:start="37:17" pos:end="39:29">
                <decl_stmt pos:start="37:17" pos:end="37:25"><decl pos:start="37:17" pos:end="37:24"><type pos:start="37:17" pos:end="37:19"><name pos:start="37:17" pos:end="37:19">int</name></type> <name pos:start="37:21" pos:end="37:24">data</name></decl>;</decl_stmt>
                <expr_stmt pos:start="38:17" pos:end="38:26"><expr pos:start="38:17" pos:end="38:25"><name pos:start="38:17" pos:end="38:19">cin</name><operator pos:start="38:20" pos:end="38:21">&gt;&gt;</operator><name pos:start="38:22" pos:end="38:25">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="39:17" pos:end="39:29"><expr pos:start="39:17" pos:end="39:28"><call pos:start="39:17" pos:end="39:28"><name pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:17">a</name><operator pos:start="39:18" pos:end="39:18">.</operator><name pos:start="39:19" pos:end="39:22">push</name></name><argument_list pos:start="39:23" pos:end="39:28">(<argument pos:start="39:24" pos:end="39:27"><expr pos:start="39:24" pos:end="39:27"><name pos:start="39:24" pos:end="39:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="40:10" pos:end="44:13">else if<condition pos:start="40:17" pos:end="40:25">(<expr pos:start="40:18" pos:end="40:24"><name pos:start="40:18" pos:end="40:18">x</name> <operator pos:start="40:20" pos:end="40:21">==</operator><literal type="char" pos:start="40:22" pos:end="40:24">'D'</literal></expr>)</condition><block pos:start="40:26" pos:end="44:13">{<block_content pos:start="41:17" pos:end="43:17">
                <if_stmt pos:start="41:17" pos:end="43:17"><if pos:start="41:17" pos:end="43:17">if<condition pos:start="41:19" pos:end="41:30">(<expr pos:start="41:20" pos:end="41:29"><operator pos:start="41:20" pos:end="41:20">!</operator><call pos:start="41:21" pos:end="41:29"><name pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:21">b</name><operator pos:start="41:22" pos:end="41:22">.</operator><name pos:start="41:23" pos:end="41:27">empty</name></name><argument_list pos:start="41:28" pos:end="41:29">()</argument_list></call></expr>)</condition><block pos:start="41:31" pos:end="43:17">{<block_content pos:start="42:21" pos:end="42:28">
                    <expr_stmt pos:start="42:21" pos:end="42:28"><expr pos:start="42:21" pos:end="42:27"><call pos:start="42:21" pos:end="42:27"><name pos:start="42:21" pos:end="42:25"><name pos:start="42:21" pos:end="42:21">b</name><operator pos:start="42:22" pos:end="42:22">.</operator><name pos:start="42:23" pos:end="42:25">pop</name></name><argument_list pos:start="42:26" pos:end="42:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if><else pos:start="44:14" pos:end="54:13">else<block pos:start="44:18" pos:end="54:13">{<block_content pos:start="45:17" pos:end="53:17">
                <decl_stmt pos:start="45:17" pos:end="45:29"><decl pos:start="45:17" pos:end="45:28"><type pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:21">stack</name><argument_list type="generic" pos:start="45:22" pos:end="45:26">&lt;<argument pos:start="45:23" pos:end="45:25"><expr pos:start="45:23" pos:end="45:25"><name pos:start="45:23" pos:end="45:25">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="45:28" pos:end="45:28">c</name></decl>;</decl_stmt>
                <while pos:start="46:17" pos:end="49:17">while<condition pos:start="46:22" pos:end="46:33">(<expr pos:start="46:23" pos:end="46:32"><operator pos:start="46:23" pos:end="46:23">!</operator><call pos:start="46:24" pos:end="46:32"><name pos:start="46:24" pos:end="46:30"><name pos:start="46:24" pos:end="46:24">a</name><operator pos:start="46:25" pos:end="46:25">.</operator><name pos:start="46:26" pos:end="46:30">empty</name></name><argument_list pos:start="46:31" pos:end="46:32">()</argument_list></call></expr>)</condition><block pos:start="46:34" pos:end="49:17">{<block_content pos:start="47:21" pos:end="48:28">
                    <expr_stmt pos:start="47:21" pos:end="47:36"><expr pos:start="47:21" pos:end="47:35"><call pos:start="47:21" pos:end="47:35"><name pos:start="47:21" pos:end="47:26"><name pos:start="47:21" pos:end="47:21">c</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:26">push</name></name><argument_list pos:start="47:27" pos:end="47:35">(<argument pos:start="47:28" pos:end="47:34"><expr pos:start="47:28" pos:end="47:34"><call pos:start="47:28" pos:end="47:34"><name pos:start="47:28" pos:end="47:32"><name pos:start="47:28" pos:end="47:28">a</name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:32">top</name></name><argument_list pos:start="47:33" pos:end="47:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="48:21" pos:end="48:28"><expr pos:start="48:21" pos:end="48:27"><call pos:start="48:21" pos:end="48:27"><name pos:start="48:21" pos:end="48:25"><name pos:start="48:21" pos:end="48:21">a</name><operator pos:start="48:22" pos:end="48:22">.</operator><name pos:start="48:23" pos:end="48:25">pop</name></name><argument_list pos:start="48:26" pos:end="48:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="50:17" pos:end="53:17">while<condition pos:start="50:22" pos:end="50:33">(<expr pos:start="50:23" pos:end="50:32"><operator pos:start="50:23" pos:end="50:23">!</operator><call pos:start="50:24" pos:end="50:32"><name pos:start="50:24" pos:end="50:30"><name pos:start="50:24" pos:end="50:24">c</name><operator pos:start="50:25" pos:end="50:25">.</operator><name pos:start="50:26" pos:end="50:30">empty</name></name><argument_list pos:start="50:31" pos:end="50:32">()</argument_list></call></expr>)</condition><block pos:start="50:34" pos:end="53:17">{<block_content pos:start="51:21" pos:end="52:28">
                    <expr_stmt pos:start="51:21" pos:end="51:36"><expr pos:start="51:21" pos:end="51:35"><call pos:start="51:21" pos:end="51:35"><name pos:start="51:21" pos:end="51:26"><name pos:start="51:21" pos:end="51:21">b</name><operator pos:start="51:22" pos:end="51:22">.</operator><name pos:start="51:23" pos:end="51:26">push</name></name><argument_list pos:start="51:27" pos:end="51:35">(<argument pos:start="51:28" pos:end="51:34"><expr pos:start="51:28" pos:end="51:34"><call pos:start="51:28" pos:end="51:34"><name pos:start="51:28" pos:end="51:32"><name pos:start="51:28" pos:end="51:28">c</name><operator pos:start="51:29" pos:end="51:29">.</operator><name pos:start="51:30" pos:end="51:32">top</name></name><argument_list pos:start="51:33" pos:end="51:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="52:21" pos:end="52:28"><expr pos:start="52:21" pos:end="52:27"><call pos:start="52:21" pos:end="52:27"><name pos:start="52:21" pos:end="52:25"><name pos:start="52:21" pos:end="52:21">c</name><operator pos:start="52:22" pos:end="52:22">.</operator><name pos:start="52:23" pos:end="52:25">pop</name></name><argument_list pos:start="52:26" pos:end="52:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
    </block_content>}</block></else></if_stmt>
            
</block_content>}</block></while>
    <decl_stmt pos:start="58:5" pos:end="58:17"><decl pos:start="58:5" pos:end="58:16"><type pos:start="58:5" pos:end="58:14"><name pos:start="58:5" pos:end="58:14"><name pos:start="58:5" pos:end="58:9">stack</name><argument_list type="generic" pos:start="58:10" pos:end="58:14">&lt;<argument pos:start="58:11" pos:end="58:13"><expr pos:start="58:11" pos:end="58:13"><name pos:start="58:11" pos:end="58:13">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="58:16" pos:end="58:16">c</name></decl>;</decl_stmt>
    <while pos:start="59:5" pos:end="62:5">while<condition pos:start="59:10" pos:end="59:21">(<expr pos:start="59:11" pos:end="59:20"><operator pos:start="59:11" pos:end="59:11">!</operator><call pos:start="59:12" pos:end="59:20"><name pos:start="59:12" pos:end="59:18"><name pos:start="59:12" pos:end="59:12">a</name><operator pos:start="59:13" pos:end="59:13">.</operator><name pos:start="59:14" pos:end="59:18">empty</name></name><argument_list pos:start="59:19" pos:end="59:20">()</argument_list></call></expr>)</condition><block pos:start="59:22" pos:end="62:5">{<block_content pos:start="60:9" pos:end="61:16">
        <expr_stmt pos:start="60:9" pos:end="60:24"><expr pos:start="60:9" pos:end="60:23"><call pos:start="60:9" pos:end="60:23"><name pos:start="60:9" pos:end="60:14"><name pos:start="60:9" pos:end="60:9">c</name><operator pos:start="60:10" pos:end="60:10">.</operator><name pos:start="60:11" pos:end="60:14">push</name></name><argument_list pos:start="60:15" pos:end="60:23">(<argument pos:start="60:16" pos:end="60:22"><expr pos:start="60:16" pos:end="60:22"><call pos:start="60:16" pos:end="60:22"><name pos:start="60:16" pos:end="60:20"><name pos:start="60:16" pos:end="60:16">a</name><operator pos:start="60:17" pos:end="60:17">.</operator><name pos:start="60:18" pos:end="60:20">top</name></name><argument_list pos:start="60:21" pos:end="60:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="61:9" pos:end="61:16"><expr pos:start="61:9" pos:end="61:15"><call pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:13"><name pos:start="61:9" pos:end="61:9">a</name><operator pos:start="61:10" pos:end="61:10">.</operator><name pos:start="61:11" pos:end="61:13">pop</name></name><argument_list pos:start="61:14" pos:end="61:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="63:5" pos:end="66:5">while<condition pos:start="63:10" pos:end="63:21">(<expr pos:start="63:11" pos:end="63:20"><operator pos:start="63:11" pos:end="63:11">!</operator><call pos:start="63:12" pos:end="63:20"><name pos:start="63:12" pos:end="63:18"><name pos:start="63:12" pos:end="63:12">c</name><operator pos:start="63:13" pos:end="63:13">.</operator><name pos:start="63:14" pos:end="63:18">empty</name></name><argument_list pos:start="63:19" pos:end="63:20">()</argument_list></call></expr>)</condition><block pos:start="63:22" pos:end="66:5">{<block_content pos:start="64:9" pos:end="65:16">
        <expr_stmt pos:start="64:9" pos:end="64:27"><expr pos:start="64:9" pos:end="64:26"><name pos:start="64:9" pos:end="64:12">cout</name><operator pos:start="64:13" pos:end="64:14">&lt;&lt;</operator><call pos:start="64:15" pos:end="64:21"><name pos:start="64:15" pos:end="64:19"><name pos:start="64:15" pos:end="64:15">c</name><operator pos:start="64:16" pos:end="64:16">.</operator><name pos:start="64:17" pos:end="64:19">top</name></name><argument_list pos:start="64:20" pos:end="64:21">()</argument_list></call><operator pos:start="64:22" pos:end="64:23">&lt;&lt;</operator><literal type="string" pos:start="64:24" pos:end="64:26">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="65:9" pos:end="65:16"><expr pos:start="65:9" pos:end="65:15"><call pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:13"><name pos:start="65:9" pos:end="65:9">c</name><operator pos:start="65:10" pos:end="65:10">.</operator><name pos:start="65:11" pos:end="65:13">pop</name></name><argument_list pos:start="65:14" pos:end="65:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="67:5" pos:end="67:15"><expr pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:8">cout</name><operator pos:start="67:9" pos:end="67:10">&lt;&lt;</operator><name pos:start="67:11" pos:end="67:14">endl</name></expr>;</expr_stmt>
     <while pos:start="68:6" pos:end="71:5">while<condition pos:start="68:11" pos:end="68:22">(<expr pos:start="68:12" pos:end="68:21"><operator pos:start="68:12" pos:end="68:12">!</operator><call pos:start="68:13" pos:end="68:21"><name pos:start="68:13" pos:end="68:19"><name pos:start="68:13" pos:end="68:13">b</name><operator pos:start="68:14" pos:end="68:14">.</operator><name pos:start="68:15" pos:end="68:19">empty</name></name><argument_list pos:start="68:20" pos:end="68:21">()</argument_list></call></expr>)</condition><block pos:start="68:23" pos:end="71:5">{<block_content pos:start="69:9" pos:end="70:16">
        <expr_stmt pos:start="69:9" pos:end="69:24"><expr pos:start="69:9" pos:end="69:23"><call pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:14"><name pos:start="69:9" pos:end="69:9">c</name><operator pos:start="69:10" pos:end="69:10">.</operator><name pos:start="69:11" pos:end="69:14">push</name></name><argument_list pos:start="69:15" pos:end="69:23">(<argument pos:start="69:16" pos:end="69:22"><expr pos:start="69:16" pos:end="69:22"><call pos:start="69:16" pos:end="69:22"><name pos:start="69:16" pos:end="69:20"><name pos:start="69:16" pos:end="69:16">b</name><operator pos:start="69:17" pos:end="69:17">.</operator><name pos:start="69:18" pos:end="69:20">top</name></name><argument_list pos:start="69:21" pos:end="69:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="70:9" pos:end="70:16"><expr pos:start="70:9" pos:end="70:15"><call pos:start="70:9" pos:end="70:15"><name pos:start="70:9" pos:end="70:13"><name pos:start="70:9" pos:end="70:9">b</name><operator pos:start="70:10" pos:end="70:10">.</operator><name pos:start="70:11" pos:end="70:13">pop</name></name><argument_list pos:start="70:14" pos:end="70:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="72:5" pos:end="75:5">while<condition pos:start="72:10" pos:end="72:21">(<expr pos:start="72:11" pos:end="72:20"><operator pos:start="72:11" pos:end="72:11">!</operator><call pos:start="72:12" pos:end="72:20"><name pos:start="72:12" pos:end="72:18"><name pos:start="72:12" pos:end="72:12">c</name><operator pos:start="72:13" pos:end="72:13">.</operator><name pos:start="72:14" pos:end="72:18">empty</name></name><argument_list pos:start="72:19" pos:end="72:20">()</argument_list></call></expr>)</condition><block pos:start="72:22" pos:end="75:5">{<block_content pos:start="73:9" pos:end="74:16">
        <expr_stmt pos:start="73:9" pos:end="73:27"><expr pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:12">cout</name><operator pos:start="73:13" pos:end="73:14">&lt;&lt;</operator><call pos:start="73:15" pos:end="73:21"><name pos:start="73:15" pos:end="73:19"><name pos:start="73:15" pos:end="73:15">c</name><operator pos:start="73:16" pos:end="73:16">.</operator><name pos:start="73:17" pos:end="73:19">top</name></name><argument_list pos:start="73:20" pos:end="73:21">()</argument_list></call><operator pos:start="73:22" pos:end="73:23">&lt;&lt;</operator><literal type="string" pos:start="73:24" pos:end="73:26">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="74:9" pos:end="74:16"><expr pos:start="74:9" pos:end="74:15"><call pos:start="74:9" pos:end="74:15"><name pos:start="74:9" pos:end="74:13"><name pos:start="74:9" pos:end="74:9">c</name><operator pos:start="74:10" pos:end="74:10">.</operator><name pos:start="74:11" pos:end="74:13">pop</name></name><argument_list pos:start="74:14" pos:end="74:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="76:5" pos:end="76:15"><expr pos:start="76:5" pos:end="76:14"><name pos:start="76:5" pos:end="76:8">cout</name><operator pos:start="76:9" pos:end="76:10">&lt;&lt;</operator><name pos:start="76:11" pos:end="76:14">endl</name></expr>;</expr_stmt>
    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>
</block_content>}</block></function>


</unit>
