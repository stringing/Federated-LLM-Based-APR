<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/843/843.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:16">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:16">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:18">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<function pos:start="5:1" pos:end="42:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:7">min</name><parameter_list pos:start="5:8" pos:end="5:9">()</parameter_list><block pos:start="5:10" pos:end="42:1">{<block_content pos:start="6:5" pos:end="41:13">
    <decl_stmt pos:start="6:5" pos:end="6:10"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">x</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:13"><expr pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">cin</name> <operator pos:start="7:9" pos:end="7:10">&gt;&gt;</operator> <name pos:start="7:12" pos:end="7:12">x</name></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:15"><expr pos:start="8:5" pos:end="8:14"><name pos:start="8:5" pos:end="8:5">x</name> <operator pos:start="8:7" pos:end="8:7">=</operator> <name pos:start="8:9" pos:end="8:9">x</name> <operator pos:start="8:11" pos:end="8:11">*</operator> <literal type="number" pos:start="8:13" pos:end="8:14">60</literal></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:10">vector</name><argument_list type="generic" pos:start="9:11" pos:end="9:15">&lt;<argument pos:start="9:12" pos:end="9:14"><expr pos:start="9:12" pos:end="9:14"><name pos:start="9:12" pos:end="9:14">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="9:17" pos:end="9:17">v</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:15"><decl pos:start="10:5" pos:end="10:14"><type pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:10">string</name></type> <name pos:start="10:12" pos:end="10:14">cvz</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name> <init pos:start="11:11" pos:end="11:13">= <expr pos:start="11:13" pos:end="11:13"><literal type="number" pos:start="11:13" pos:end="11:13">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:14"><decl pos:start="12:5" pos:end="12:13"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:9">u</name> <init pos:start="12:11" pos:end="12:13">= <expr pos:start="12:13" pos:end="12:13"><literal type="number" pos:start="12:13" pos:end="12:13">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="13:5" pos:end="21:5">while<condition pos:start="13:10" pos:end="13:21">(<expr pos:start="13:11" pos:end="13:20"><name pos:start="13:11" pos:end="13:13">cin</name> <operator pos:start="13:15" pos:end="13:16">&gt;&gt;</operator> <name pos:start="13:18" pos:end="13:20">cvz</name></expr>)</condition><block pos:start="13:22" pos:end="21:5">{<block_content pos:start="14:9" pos:end="20:14">
        <if_stmt pos:start="14:9" pos:end="19:9"><if pos:start="14:9" pos:end="16:9">if<condition pos:start="14:11" pos:end="14:35">(<expr pos:start="14:12" pos:end="14:34"><name pos:start="14:12" pos:end="14:17"><name pos:start="14:12" pos:end="14:14">cvz</name><index pos:start="14:15" pos:end="14:17">[<expr pos:start="14:16" pos:end="14:16"><name pos:start="14:16" pos:end="14:16">u</name></expr>]</index></name><operator pos:start="14:18" pos:end="14:19">==</operator> <literal type="string" pos:start="14:21" pos:end="14:34">"tingtingting"</literal></expr>)</condition><block pos:start="14:36" pos:end="16:9">{<block_content pos:start="15:13" pos:end="15:21">
            <continue pos:start="15:13" pos:end="15:21">continue;</continue>
        </block_content>}</block></if>
        <else pos:start="17:9" pos:end="19:9">else<block pos:start="17:13" pos:end="19:9">{<block_content pos:start="18:9" pos:end="18:20">
        <expr_stmt pos:start="18:9" pos:end="18:20"><expr pos:start="18:9" pos:end="18:19"><name pos:start="18:9" pos:end="18:11">cin</name> <operator pos:start="18:13" pos:end="18:14">&gt;&gt;</operator> <name pos:start="18:16" pos:end="18:19"><name pos:start="18:16" pos:end="18:16">v</name><index pos:start="18:17" pos:end="18:19">[<expr pos:start="18:18" pos:end="18:18"><name pos:start="18:18" pos:end="18:18">u</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="20:9" pos:end="20:14"><expr pos:start="20:9" pos:end="20:13"><name pos:start="20:9" pos:end="20:9">u</name><operator pos:start="20:10" pos:end="20:10">=</operator><name pos:start="20:11" pos:end="20:11">u</name><operator pos:start="20:12" pos:end="20:12">+</operator><literal type="number" pos:start="20:13" pos:end="20:13">1</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="22:5" pos:end="39:5">while<condition pos:start="22:10" pos:end="22:16">(<expr pos:start="22:11" pos:end="22:15"><name pos:start="22:11" pos:end="22:11">x</name><operator pos:start="22:12" pos:end="22:13">&gt;=</operator> <literal type="number" pos:start="22:15" pos:end="22:15">0</literal></expr>)</condition><block pos:start="22:17" pos:end="39:5">{<block_content pos:start="23:9" pos:end="38:18">
        <if_stmt pos:start="23:9" pos:end="37:5"><if pos:start="23:9" pos:end="31:9">if<condition pos:start="23:11" pos:end="23:34">(<expr pos:start="23:12" pos:end="23:33"><name pos:start="23:12" pos:end="23:17"><name pos:start="23:12" pos:end="23:14">cvz</name><index pos:start="23:15" pos:end="23:17">[<expr pos:start="23:16" pos:end="23:16"><name pos:start="23:16" pos:end="23:16">i</name></expr>]</index></name> <operator pos:start="23:19" pos:end="23:20">==</operator> <literal type="string" pos:start="23:22" pos:end="23:33">"kaomianjin"</literal></expr>)</condition><block pos:start="23:35" pos:end="31:9">{<block_content pos:start="24:13" pos:end="30:13">
            <if_stmt pos:start="24:13" pos:end="30:13"><if pos:start="24:13" pos:end="27:13">if<condition pos:start="24:15" pos:end="24:40">(<expr pos:start="24:16" pos:end="24:39"><name pos:start="24:16" pos:end="24:23"><name pos:start="24:16" pos:end="24:18">cvz</name><index pos:start="24:19" pos:end="24:23">[<expr pos:start="24:20" pos:end="24:22"><name pos:start="24:20" pos:end="24:20">i</name><operator pos:start="24:21" pos:end="24:21">+</operator><literal type="number" pos:start="24:22" pos:end="24:22">1</literal></expr>]</index></name><operator pos:start="24:24" pos:end="24:25">==</operator><literal type="string" pos:start="24:26" pos:end="24:39">"tingtingting"</literal></expr>)</condition><block pos:start="24:41" pos:end="27:13">{<block_content pos:start="25:17" pos:end="26:25">
                <expr_stmt pos:start="25:17" pos:end="25:34"><expr pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:20">cout</name> <operator pos:start="25:22" pos:end="25:23">&lt;&lt;</operator> <literal type="string" pos:start="25:25" pos:end="25:33">"Hahaha."</literal></expr>;</expr_stmt>
                <return pos:start="26:17" pos:end="26:25">return <expr pos:start="26:24" pos:end="26:24"><literal type="number" pos:start="26:24" pos:end="26:24">0</literal></expr>;</return>
            </block_content>}</block></if><else pos:start="27:14" pos:end="30:13">else<block pos:start="27:18" pos:end="30:13">{<block_content pos:start="28:17" pos:end="29:25">
                <expr_stmt pos:start="28:17" pos:end="28:43"><expr pos:start="28:17" pos:end="28:42"><name pos:start="28:17" pos:end="28:20">cout</name> <operator pos:start="28:22" pos:end="28:23">&lt;&lt;</operator> <literal type="string" pos:start="28:25" pos:end="28:42">"Congratulations!"</literal></expr>;</expr_stmt>
                <return pos:start="29:17" pos:end="29:25">return <expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</return>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if><else pos:start="31:10" pos:end="37:5">else<block pos:start="31:14" pos:end="37:5">{<block_content pos:start="32:13" pos:end="36:13">
            <if_stmt pos:start="32:13" pos:end="36:13"><if pos:start="32:13" pos:end="34:13">if<condition pos:start="32:15" pos:end="32:42">(<expr pos:start="32:16" pos:end="32:41"><name pos:start="32:16" pos:end="32:23"><name pos:start="32:16" pos:end="32:18">cvz</name><index pos:start="32:19" pos:end="32:23">[<expr pos:start="32:20" pos:end="32:22"><name pos:start="32:20" pos:end="32:20">i</name><operator pos:start="32:21" pos:end="32:21">+</operator><literal type="number" pos:start="32:22" pos:end="32:22">1</literal></expr>]</index></name> <operator pos:start="32:25" pos:end="32:26">==</operator> <literal type="string" pos:start="32:28" pos:end="32:41">"tingtingting"</literal></expr>)</condition><block pos:start="32:43" pos:end="34:13">{<block_content pos:start="33:17" pos:end="33:25">
                <continue pos:start="33:17" pos:end="33:25">continue;</continue>
            </block_content>}</block></if><else pos:start="34:14" pos:end="36:13">else<block pos:start="34:18" pos:end="36:13">{<block_content pos:start="35:17" pos:end="35:29">
                <expr_stmt pos:start="35:17" pos:end="35:29"><expr pos:start="35:17" pos:end="35:28"><name pos:start="35:17" pos:end="35:17">x</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:21">x</name> <operator pos:start="35:23" pos:end="35:23">-</operator> <name pos:start="35:25" pos:end="35:28"><name pos:start="35:25" pos:end="35:25">v</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><name pos:start="35:27" pos:end="35:27">i</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
    </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="38:9" pos:end="38:18"><expr pos:start="38:9" pos:end="38:17"><name pos:start="38:9" pos:end="38:9">i</name> <operator pos:start="38:11" pos:end="38:11">=</operator> <name pos:start="38:13" pos:end="38:13">i</name> <operator pos:start="38:15" pos:end="38:15">+</operator> <literal type="number" pos:start="38:17" pos:end="38:17">1</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="40:5" pos:end="40:29"><expr pos:start="40:5" pos:end="40:28"><name pos:start="40:5" pos:end="40:8">cout</name> <operator pos:start="40:10" pos:end="40:11">&lt;&lt;</operator> <literal type="string" pos:start="40:13" pos:end="40:28">"Unfortunately."</literal></expr>;</expr_stmt>
    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
