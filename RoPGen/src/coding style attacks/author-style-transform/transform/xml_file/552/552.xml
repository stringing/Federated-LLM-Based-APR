<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/552/552.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="23:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">f</name><parameter_list pos:start="3:6" pos:end="3:18">(<parameter pos:start="3:7" pos:end="3:17"><decl pos:start="3:7" pos:end="3:17"><type pos:start="3:7" pos:end="3:15"><name pos:start="3:7" pos:end="3:10">long</name> <name pos:start="3:12" pos:end="3:15">long</name></type> <name pos:start="3:17" pos:end="3:17">n</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="22:5">
    <if_stmt pos:start="5:5" pos:end="8:5"><if pos:start="5:5" pos:end="8:5">if <condition pos:start="5:8" pos:end="5:16">(<expr pos:start="5:9" pos:end="5:15"><name pos:start="5:9" pos:end="5:9">n</name> <operator pos:start="5:11" pos:end="5:12">==</operator> <literal type="number" pos:start="5:14" pos:end="5:15">12</literal></expr>)</condition> <block pos:start="5:18" pos:end="8:5">{<block_content pos:start="6:9" pos:end="7:17">
        <expr_stmt pos:start="6:9" pos:end="6:31"><expr pos:start="6:9" pos:end="6:30"><name pos:start="6:9" pos:end="6:12">cout</name> <operator pos:start="6:14" pos:end="6:15">&lt;&lt;</operator> <literal type="string" pos:start="6:17" pos:end="6:30">"12, 6, 3, 12"</literal></expr>;</expr_stmt>
        <return pos:start="7:9" pos:end="7:17">return <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="9:5" pos:end="12:5"><if pos:start="9:5" pos:end="12:5">if <condition pos:start="9:8" pos:end="9:15">(<expr pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:9">n</name> <operator pos:start="9:11" pos:end="9:12">==</operator> <literal type="number" pos:start="9:14" pos:end="9:14">6</literal></expr>)</condition> <block pos:start="9:17" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:17">
        <expr_stmt pos:start="10:9" pos:end="10:30"><expr pos:start="10:9" pos:end="10:29"><name pos:start="10:9" pos:end="10:12">cout</name> <operator pos:start="10:14" pos:end="10:15">&lt;&lt;</operator> <literal type="string" pos:start="10:17" pos:end="10:29">"6, 3, 12, 6"</literal></expr>;</expr_stmt>
        <return pos:start="11:9" pos:end="11:17">return <expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="13:5" pos:end="16:5"><if pos:start="13:5" pos:end="16:5">if <condition pos:start="13:8" pos:end="13:15">(<expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:9">n</name> <operator pos:start="13:11" pos:end="13:12">==</operator> <literal type="number" pos:start="13:14" pos:end="13:14">3</literal></expr>)</condition> <block pos:start="13:17" pos:end="16:5">{<block_content pos:start="14:9" pos:end="15:17">
        <expr_stmt pos:start="14:9" pos:end="14:30"><expr pos:start="14:9" pos:end="14:29"><name pos:start="14:9" pos:end="14:12">cout</name> <operator pos:start="14:14" pos:end="14:15">&lt;&lt;</operator> <literal type="string" pos:start="14:17" pos:end="14:29">"3, 12, 6, 3"</literal></expr>;</expr_stmt>
        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:8">cout</name><operator pos:start="17:9" pos:end="17:10">&lt;&lt;</operator><name pos:start="17:11" pos:end="17:11">n</name><operator pos:start="17:12" pos:end="17:13">&lt;&lt;</operator><literal type="string" pos:start="17:14" pos:end="17:17">", "</literal></expr>;</expr_stmt>
    <if_stmt pos:start="18:5" pos:end="22:5"><if pos:start="18:5" pos:end="20:5">if<condition pos:start="18:7" pos:end="18:14">(<expr pos:start="18:8" pos:end="18:13"><name pos:start="18:8" pos:end="18:8">n</name><operator pos:start="18:9" pos:end="18:9">%</operator><literal type="number" pos:start="18:10" pos:end="18:10">2</literal><operator pos:start="18:11" pos:end="18:12">==</operator><literal type="number" pos:start="18:13" pos:end="18:13">0</literal></expr>)</condition><block pos:start="18:15" pos:end="20:5">{<block_content pos:start="19:9" pos:end="19:22">
        <return pos:start="19:9" pos:end="19:22">return <expr pos:start="19:16" pos:end="19:21"><call pos:start="19:16" pos:end="19:21"><name pos:start="19:16" pos:end="19:16">f</name><argument_list pos:start="19:17" pos:end="19:21">(<argument pos:start="19:18" pos:end="19:20"><expr pos:start="19:18" pos:end="19:20"><name pos:start="19:18" pos:end="19:18">n</name><operator pos:start="19:19" pos:end="19:19">/</operator><literal type="number" pos:start="19:20" pos:end="19:20">2</literal></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if> <else pos:start="20:7" pos:end="22:5">else <block pos:start="20:12" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:24">
        <return pos:start="21:9" pos:end="21:24">return <expr pos:start="21:16" pos:end="21:23"><call pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:16">f</name><argument_list pos:start="21:17" pos:end="21:23">(<argument pos:start="21:18" pos:end="21:22"><expr pos:start="21:18" pos:end="21:22"><literal type="number" pos:start="21:18" pos:end="21:18">3</literal><operator pos:start="21:19" pos:end="21:19">*</operator><name pos:start="21:20" pos:end="21:20">n</name><operator pos:start="21:21" pos:end="21:21">+</operator><literal type="number" pos:start="21:22" pos:end="21:22">3</literal></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="24:1" pos:end="29:1"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:8">main</name><parameter_list pos:start="24:9" pos:end="24:10">()</parameter_list> <block pos:start="24:12" pos:end="29:1">{<block_content pos:start="25:5" pos:end="28:13">
    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:13"><expr pos:start="26:5" pos:end="26:12"><name pos:start="26:5" pos:end="26:7">cin</name> <operator pos:start="26:9" pos:end="26:10">&gt;&gt;</operator> <name pos:start="26:12" pos:end="26:12">n</name></expr>;</expr_stmt>
    <macro pos:start="27:5" pos:end="27:8"><name pos:start="27:5" pos:end="27:5">f</name><argument_list pos:start="27:6" pos:end="27:8">(<argument pos:start="27:7" pos:end="27:7">n</argument>)</argument_list></macro>
    <return pos:start="28:5" pos:end="28:13">return <expr pos:start="28:12" pos:end="28:12"><literal type="number" pos:start="28:12" pos:end="28:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
