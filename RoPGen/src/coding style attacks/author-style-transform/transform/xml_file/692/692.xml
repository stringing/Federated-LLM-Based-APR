<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/692/692.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="11:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:7">sum</name> <parameter_list pos:start="4:9" pos:end="4:15">(<parameter pos:start="4:10" pos:end="4:14"><decl pos:start="4:10" pos:end="4:14"><type pos:start="4:10" pos:end="4:12"><name pos:start="4:10" pos:end="4:12">int</name></type> <name pos:start="4:14" pos:end="4:14">a</name></decl></parameter>)</parameter_list> <block pos:start="4:17" pos:end="11:1">{<block_content pos:start="5:5" pos:end="10:15">
    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">sum</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="6:5" pos:end="9:5">while <condition pos:start="6:11" pos:end="6:13">(<expr pos:start="6:12" pos:end="6:12"><name pos:start="6:12" pos:end="6:12">a</name></expr>)</condition> <block pos:start="6:15" pos:end="9:5">{<block_content pos:start="7:9" pos:end="8:16">
        <expr_stmt pos:start="7:9" pos:end="7:22"><expr pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:11">sum</name> <operator pos:start="7:13" pos:end="7:14">+=</operator> <name pos:start="7:16" pos:end="7:16">a</name> <operator pos:start="7:18" pos:end="7:18">%</operator> <literal type="number" pos:start="7:20" pos:end="7:21">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:16"><expr pos:start="8:9" pos:end="8:15"><name pos:start="8:9" pos:end="8:9">a</name> <operator pos:start="8:11" pos:end="8:12">/=</operator> <literal type="number" pos:start="8:14" pos:end="8:15">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="10:5" pos:end="10:15">return <expr pos:start="10:12" pos:end="10:14"><name pos:start="10:12" pos:end="10:14">sum</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="12:1" pos:end="17:1"><type pos:start="12:1" pos:end="12:4"><name pos:start="12:1" pos:end="12:4">bool</name></type> <name pos:start="12:6" pos:end="12:8">cmp</name> <parameter_list pos:start="12:10" pos:end="12:23">(<parameter pos:start="12:11" pos:end="12:15"><decl pos:start="12:11" pos:end="12:15"><type pos:start="12:11" pos:end="12:15"><name pos:start="12:11" pos:end="12:13">int</name></type> <name pos:start="12:15" pos:end="12:15">x</name></decl></parameter>, <parameter pos:start="12:18" pos:end="12:22"><decl pos:start="12:18" pos:end="12:22"><type pos:start="12:18" pos:end="12:22"><name pos:start="12:18" pos:end="12:20">int</name></type> <name pos:start="12:22" pos:end="12:22">y</name></decl></parameter>)</parameter_list> <block pos:start="12:25" pos:end="17:1">{<block_content pos:start="13:5" pos:end="16:17">
    <if_stmt pos:start="13:5" pos:end="15:5"><if pos:start="13:5" pos:end="15:5">if <condition pos:start="13:8" pos:end="13:25">(<expr pos:start="13:9" pos:end="13:24"><call pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:11">sum</name><argument_list pos:start="13:12" pos:end="13:14">(<argument pos:start="13:13" pos:end="13:13"><expr pos:start="13:13" pos:end="13:13"><name pos:start="13:13" pos:end="13:13">x</name></expr></argument>)</argument_list></call> <operator pos:start="13:16" pos:end="13:17">!=</operator> <call pos:start="13:19" pos:end="13:24"><name pos:start="13:19" pos:end="13:21">sum</name><argument_list pos:start="13:22" pos:end="13:24">(<argument pos:start="13:23" pos:end="13:23"><expr pos:start="13:23" pos:end="13:23"><name pos:start="13:23" pos:end="13:23">y</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:27" pos:end="15:5">{<block_content pos:start="14:9" pos:end="14:31">
        <return pos:start="14:9" pos:end="14:31">return <expr pos:start="14:16" pos:end="14:30"><call pos:start="14:16" pos:end="14:21"><name pos:start="14:16" pos:end="14:18">sum</name><argument_list pos:start="14:19" pos:end="14:21">(<argument pos:start="14:20" pos:end="14:20"><expr pos:start="14:20" pos:end="14:20"><name pos:start="14:20" pos:end="14:20">x</name></expr></argument>)</argument_list></call> <operator pos:start="14:23" pos:end="14:23">&lt;</operator> <call pos:start="14:25" pos:end="14:30"><name pos:start="14:25" pos:end="14:27">sum</name><argument_list pos:start="14:28" pos:end="14:30">(<argument pos:start="14:29" pos:end="14:29"><expr pos:start="14:29" pos:end="14:29"><name pos:start="14:29" pos:end="14:29">y</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="16:5" pos:end="16:17">return <expr pos:start="16:12" pos:end="16:16"><name pos:start="16:12" pos:end="16:12">x</name> <operator pos:start="16:14" pos:end="16:14">&lt;</operator> <name pos:start="16:16" pos:end="16:16">y</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="18:1" pos:end="31:1"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:8">main</name><parameter_list pos:start="18:9" pos:end="18:10">()</parameter_list><block pos:start="18:11" pos:end="31:1">{<block_content pos:start="19:5" pos:end="29:13">
    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">n</name></decl>, <decl pos:start="19:12" pos:end="19:19"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:19"><name pos:start="19:12" pos:end="19:12">x</name><index pos:start="19:13" pos:end="19:19">[<expr pos:start="19:14" pos:end="19:18"><literal type="number" pos:start="19:14" pos:end="19:18">10000</literal></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:13"><expr pos:start="20:5" pos:end="20:12"><name pos:start="20:5" pos:end="20:7">cin</name> <operator pos:start="20:9" pos:end="20:10">&gt;&gt;</operator> <name pos:start="20:12" pos:end="20:12">n</name></expr>;</expr_stmt>
    <for pos:start="21:5" pos:end="24:5">for<control pos:start="21:8" pos:end="21:28">(<init pos:start="21:9" pos:end="21:18"><decl pos:start="21:9" pos:end="21:17"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">i</name> <init pos:start="21:15" pos:end="21:17">= <expr pos:start="21:17" pos:end="21:17"><literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr></init></decl>;</init><condition pos:start="21:19" pos:end="21:24"><expr pos:start="21:19" pos:end="21:23"><name pos:start="21:19" pos:end="21:19">i</name> <operator pos:start="21:21" pos:end="21:21">&lt;</operator> <name pos:start="21:23" pos:end="21:23">n</name></expr>;</condition><incr pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:25">i</name><operator pos:start="21:26" pos:end="21:27">++</operator></expr></incr>)</control><block pos:start="21:29" pos:end="24:5">{<block_content pos:start="22:8" pos:end="22:19">
       <expr_stmt pos:start="22:8" pos:end="22:19"><expr pos:start="22:8" pos:end="22:18"><name pos:start="22:8" pos:end="22:10">cin</name> <operator pos:start="22:12" pos:end="22:13">&gt;&gt;</operator> <name pos:start="22:15" pos:end="22:18"><name pos:start="22:15" pos:end="22:15">x</name><index pos:start="22:16" pos:end="22:18">[<expr pos:start="22:17" pos:end="22:17"><name pos:start="22:17" pos:end="22:17">i</name></expr>]</index></name></expr>;</expr_stmt>
        
    </block_content>}</block></for>
    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><call pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:8">sort</name><argument_list pos:start="25:9" pos:end="25:18">(<argument pos:start="25:10" pos:end="25:10"><expr pos:start="25:10" pos:end="25:10"><name pos:start="25:10" pos:end="25:10">x</name></expr></argument>, <argument pos:start="25:13" pos:end="25:17"><expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:13">x</name> <operator pos:start="25:15" pos:end="25:15">+</operator> <name pos:start="25:17" pos:end="25:17">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="26:5" pos:end="28:5">for<control pos:start="26:8" pos:end="26:28">(<init pos:start="26:9" pos:end="26:18"><decl pos:start="26:9" pos:end="26:17"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:13">i</name> <init pos:start="26:15" pos:end="26:17">= <expr pos:start="26:17" pos:end="26:17"><literal type="number" pos:start="26:17" pos:end="26:17">0</literal></expr></init></decl>;</init><condition pos:start="26:19" pos:end="26:24"><expr pos:start="26:19" pos:end="26:23"><name pos:start="26:19" pos:end="26:19">i</name> <operator pos:start="26:21" pos:end="26:21">&lt;</operator> <name pos:start="26:23" pos:end="26:23">n</name></expr>;</condition><incr pos:start="26:25" pos:end="26:27"><expr pos:start="26:25" pos:end="26:27"><name pos:start="26:25" pos:end="26:25">i</name><operator pos:start="26:26" pos:end="26:27">++</operator></expr></incr>)</control><block pos:start="26:29" pos:end="28:5">{<block_content pos:start="27:8" pos:end="27:27">
       <expr_stmt pos:start="27:8" pos:end="27:27"><expr pos:start="27:8" pos:end="27:26"><name pos:start="27:8" pos:end="27:11">cout</name> <operator pos:start="27:13" pos:end="27:14">&lt;&lt;</operator> <name pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:16">x</name><index pos:start="27:17" pos:end="27:19">[<expr pos:start="27:18" pos:end="27:18"><name pos:start="27:18" pos:end="27:18">i</name></expr>]</index></name> <operator pos:start="27:21" pos:end="27:22">&lt;&lt;</operator> <literal type="string" pos:start="27:24" pos:end="27:26">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
