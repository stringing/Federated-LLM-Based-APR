<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/973/973.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:18"><decl pos:start="4:1" pos:end="4:17"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:11"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:11">[<expr pos:start="4:7" pos:end="4:10"><literal type="number" pos:start="4:7" pos:end="4:10">1005</literal></expr>]</index></name> <init pos:start="4:13" pos:end="4:17">= <expr pos:start="4:15" pos:end="4:17"><block pos:start="4:15" pos:end="4:17">{<expr pos:start="4:16" pos:end="4:16"><literal type="number" pos:start="4:16" pos:end="4:16">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="30:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list> <block pos:start="5:12" pos:end="30:1">{<block_content pos:start="6:5" pos:end="29:13">
    <expr_stmt pos:start="6:5" pos:end="6:37"><expr pos:start="6:5" pos:end="6:36"><call pos:start="6:5" pos:end="6:36"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:36">(<argument pos:start="6:13" pos:end="6:23"><expr pos:start="6:13" pos:end="6:23"><literal type="string" pos:start="6:13" pos:end="6:23">"bigadd.in"</literal></expr></argument>, <argument pos:start="6:26" pos:end="6:28"><expr pos:start="6:26" pos:end="6:28"><literal type="string" pos:start="6:26" pos:end="6:28">"r"</literal></expr></argument>, <argument pos:start="6:31" pos:end="6:35"><expr pos:start="6:31" pos:end="6:35"><name pos:start="6:31" pos:end="6:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:39"><expr pos:start="7:5" pos:end="7:38"><call pos:start="7:5" pos:end="7:38"><name pos:start="7:5" pos:end="7:11">freopen</name><argument_list pos:start="7:12" pos:end="7:38">(<argument pos:start="7:13" pos:end="7:24"><expr pos:start="7:13" pos:end="7:24"><literal type="string" pos:start="7:13" pos:end="7:24">"bigadd.out"</literal></expr></argument>, <argument pos:start="7:27" pos:end="7:29"><expr pos:start="7:27" pos:end="7:29"><literal type="string" pos:start="7:27" pos:end="7:29">"w"</literal></expr></argument>, <argument pos:start="7:32" pos:end="7:37"><expr pos:start="7:32" pos:end="7:37"><name pos:start="7:32" pos:end="7:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:15"><decl pos:start="8:5" pos:end="8:14"><type pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:10">string</name></type> <name pos:start="8:12" pos:end="8:14">num</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:21"><expr pos:start="10:5" pos:end="10:20"><name pos:start="10:5" pos:end="10:7">len</name> <operator pos:start="10:9" pos:end="10:9">=</operator> <call pos:start="10:11" pos:end="10:20"><name pos:start="10:11" pos:end="10:18"><name pos:start="10:11" pos:end="10:13">num</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:18">size</name></name><argument_list pos:start="10:19" pos:end="10:20">()</argument_list></call></expr>;</expr_stmt>
    <for pos:start="11:5" pos:end="13:5">for <control pos:start="11:9" pos:end="11:33">(<init pos:start="11:10" pos:end="11:19"><decl pos:start="11:10" pos:end="11:18"><type pos:start="11:10" pos:end="11:12"><name pos:start="11:10" pos:end="11:12">int</name></type> <name pos:start="11:14" pos:end="11:14">i</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</init> <condition pos:start="11:21" pos:end="11:28"><expr pos:start="11:21" pos:end="11:27"><name pos:start="11:21" pos:end="11:21">i</name> <operator pos:start="11:23" pos:end="11:23">&lt;</operator> <name pos:start="11:25" pos:end="11:27">len</name></expr>;</condition> <incr pos:start="11:30" pos:end="11:32"><expr pos:start="11:30" pos:end="11:32"><name pos:start="11:30" pos:end="11:30">i</name><operator pos:start="11:31" pos:end="11:32">++</operator></expr></incr>)</control> <block pos:start="11:35" pos:end="13:5">{<block_content pos:start="12:9" pos:end="12:38">
        <expr_stmt pos:start="12:9" pos:end="12:38"><expr pos:start="12:9" pos:end="12:37"><name pos:start="12:9" pos:end="12:12"><name pos:start="12:9" pos:end="12:9">a</name><index pos:start="12:10" pos:end="12:12">[<expr pos:start="12:11" pos:end="12:11"><name pos:start="12:11" pos:end="12:11">i</name></expr>]</index></name> <operator pos:start="12:14" pos:end="12:14">=</operator> <name pos:start="12:16" pos:end="12:31"><name pos:start="12:16" pos:end="12:18">num</name><index pos:start="12:19" pos:end="12:31">[<expr pos:start="12:20" pos:end="12:30"><name pos:start="12:20" pos:end="12:22">len</name> <operator pos:start="12:24" pos:end="12:24">-</operator> <literal type="number" pos:start="12:26" pos:end="12:28">1</literal> <operator pos:start="12:28" pos:end="12:28">-</operator> <name pos:start="12:30" pos:end="12:30">i</name></expr>]</index></name> <operator pos:start="12:33" pos:end="12:33">-</operator> <literal type="char" pos:start="12:35" pos:end="12:37">'0'</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="14:5" pos:end="14:17"><expr pos:start="14:5" pos:end="14:16"><name pos:start="14:5" pos:end="14:8"><name pos:start="14:5" pos:end="14:5">a</name><index pos:start="14:6" pos:end="14:8">[<expr pos:start="14:7" pos:end="14:7"><literal type="number" pos:start="14:7" pos:end="14:7">0</literal></expr>]</index></name> <operator pos:start="14:10" pos:end="14:11">+=</operator> <literal type="number" pos:start="14:13" pos:end="14:16">2018</literal></expr>;</expr_stmt>
    <for pos:start="15:5" pos:end="18:5">for <control pos:start="15:9" pos:end="15:33">(<init pos:start="15:10" pos:end="15:19"><decl pos:start="15:10" pos:end="15:18"><type pos:start="15:10" pos:end="15:12"><name pos:start="15:10" pos:end="15:12">int</name></type> <name pos:start="15:14" pos:end="15:14">i</name> <init pos:start="15:16" pos:end="15:18">= <expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr></init></decl>;</init> <condition pos:start="15:21" pos:end="15:28"><expr pos:start="15:21" pos:end="15:27"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <name pos:start="15:25" pos:end="15:27">len</name></expr>;</condition> <incr pos:start="15:30" pos:end="15:32"><expr pos:start="15:30" pos:end="15:32"><name pos:start="15:30" pos:end="15:30">i</name><operator pos:start="15:31" pos:end="15:32">++</operator></expr></incr>)</control> <block pos:start="15:35" pos:end="18:5">{<block_content pos:start="16:9" pos:end="17:19">
        <expr_stmt pos:start="16:9" pos:end="16:30"><expr pos:start="16:9" pos:end="16:29"><name pos:start="16:9" pos:end="16:16"><name pos:start="16:9" pos:end="16:9">a</name><index pos:start="16:10" pos:end="16:16">[<expr pos:start="16:11" pos:end="16:15"><name pos:start="16:11" pos:end="16:11">i</name> <operator pos:start="16:13" pos:end="16:13">+</operator> <literal type="number" pos:start="16:15" pos:end="16:15">1</literal></expr>]</index></name> <operator pos:start="16:18" pos:end="16:19">+=</operator> <name pos:start="16:21" pos:end="16:24"><name pos:start="16:21" pos:end="16:21">a</name><index pos:start="16:22" pos:end="16:24">[<expr pos:start="16:23" pos:end="16:23"><name pos:start="16:23" pos:end="16:23">i</name></expr>]</index></name> <operator pos:start="16:26" pos:end="16:26">/</operator> <literal type="number" pos:start="16:28" pos:end="16:29">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:19"><expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:12"><name pos:start="17:9" pos:end="17:9">a</name><index pos:start="17:10" pos:end="17:12">[<expr pos:start="17:11" pos:end="17:11"><name pos:start="17:11" pos:end="17:11">i</name></expr>]</index></name> <operator pos:start="17:14" pos:end="17:15">%=</operator> <literal type="number" pos:start="17:17" pos:end="17:18">10</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <while pos:start="19:5" pos:end="23:5">while <condition pos:start="19:11" pos:end="19:18">(<expr pos:start="19:12" pos:end="19:17"><name pos:start="19:12" pos:end="19:17"><name pos:start="19:12" pos:end="19:12">a</name><index pos:start="19:13" pos:end="19:17">[<expr pos:start="19:14" pos:end="19:16"><name pos:start="19:14" pos:end="19:16">len</name></expr>]</index></name></expr>)</condition> <block pos:start="19:20" pos:end="23:5">{<block_content pos:start="20:9" pos:end="22:14">
        <expr_stmt pos:start="20:9" pos:end="20:34"><expr pos:start="20:9" pos:end="20:33"><name pos:start="20:9" pos:end="20:18"><name pos:start="20:9" pos:end="20:9">a</name><index pos:start="20:10" pos:end="20:18">[<expr pos:start="20:11" pos:end="20:17"><name pos:start="20:11" pos:end="20:13">len</name> <operator pos:start="20:15" pos:end="20:15">+</operator> <literal type="number" pos:start="20:17" pos:end="20:17">1</literal></expr>]</index></name> <operator pos:start="20:20" pos:end="20:21">+=</operator> <name pos:start="20:23" pos:end="20:28"><name pos:start="20:23" pos:end="20:23">a</name><index pos:start="20:24" pos:end="20:28">[<expr pos:start="20:25" pos:end="20:27"><name pos:start="20:25" pos:end="20:27">len</name></expr>]</index></name> <operator pos:start="20:30" pos:end="20:30">/</operator> <literal type="number" pos:start="20:32" pos:end="20:33">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:21"><expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:9">a</name><index pos:start="21:10" pos:end="21:14">[<expr pos:start="21:11" pos:end="21:13"><name pos:start="21:11" pos:end="21:13">len</name></expr>]</index></name> <operator pos:start="21:16" pos:end="21:17">%=</operator> <literal type="number" pos:start="21:19" pos:end="21:20">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:14"><expr pos:start="22:9" pos:end="22:13"><name pos:start="22:9" pos:end="22:11">len</name><operator pos:start="22:12" pos:end="22:13">++</operator></expr>;</expr_stmt>
    </block_content>}</block></while>
    <for pos:start="24:5" pos:end="26:5">for <control pos:start="24:9" pos:end="24:38">(<init pos:start="24:10" pos:end="24:25"><decl pos:start="24:10" pos:end="24:24"><type pos:start="24:10" pos:end="24:12"><name pos:start="24:10" pos:end="24:12">int</name></type> <name pos:start="24:14" pos:end="24:14">i</name> <init pos:start="24:16" pos:end="24:24">= <expr pos:start="24:18" pos:end="24:24"><name pos:start="24:18" pos:end="24:20">len</name> <operator pos:start="24:22" pos:end="24:22">-</operator> <literal type="number" pos:start="24:24" pos:end="24:24">1</literal></expr></init></decl>;</init> <condition pos:start="24:27" pos:end="24:33"><expr pos:start="24:27" pos:end="24:32"><name pos:start="24:27" pos:end="24:27">i</name> <operator pos:start="24:29" pos:end="24:30">&gt;=</operator> <literal type="number" pos:start="24:32" pos:end="24:32">0</literal></expr>;</condition> <incr pos:start="24:35" pos:end="24:37"><expr pos:start="24:35" pos:end="24:37"><name pos:start="24:35" pos:end="24:35">i</name><operator pos:start="24:36" pos:end="24:37">--</operator></expr></incr>)</control> <block pos:start="24:40" pos:end="26:5">{<block_content pos:start="25:9" pos:end="25:21"> 
        <expr_stmt pos:start="25:9" pos:end="25:21"><expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:12">cout</name> <operator pos:start="25:14" pos:end="25:15">&lt;&lt;</operator> <name pos:start="25:17" pos:end="25:20"><name pos:start="25:17" pos:end="25:17">a</name><index pos:start="25:18" pos:end="25:20">[<expr pos:start="25:19" pos:end="25:19"><name pos:start="25:19" pos:end="25:19">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="27:5" pos:end="27:18"><expr pos:start="27:5" pos:end="27:17"><call pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:10">fclose</name><argument_list pos:start="27:11" pos:end="27:17">(<argument pos:start="27:12" pos:end="27:16"><expr pos:start="27:12" pos:end="27:16"><name pos:start="27:12" pos:end="27:16">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:19"><expr pos:start="28:5" pos:end="28:18"><call pos:start="28:5" pos:end="28:18"><name pos:start="28:5" pos:end="28:10">fclose</name><argument_list pos:start="28:11" pos:end="28:18">(<argument pos:start="28:12" pos:end="28:17"><expr pos:start="28:12" pos:end="28:17"><name pos:start="28:12" pos:end="28:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
