<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/325/325.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:18">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:18">&lt;iomanip&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>

<function pos:start="6:1" pos:end="17:1"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:8">main</name> <parameter_list pos:start="6:10" pos:end="6:11">()</parameter_list>
<block pos:start="7:1" pos:end="17:1">{<block_content pos:start="8:5" pos:end="16:13">
    <expr_stmt pos:start="8:5" pos:end="8:38"><expr pos:start="8:5" pos:end="8:37"><call pos:start="8:5" pos:end="8:37"><name pos:start="8:5" pos:end="8:11">freopen</name> <argument_list pos:start="8:13" pos:end="8:37">(<argument pos:start="8:14" pos:end="8:24"><expr pos:start="8:14" pos:end="8:24"><literal type="string" pos:start="8:14" pos:end="8:24">"bigadd.in"</literal></expr></argument>, <argument pos:start="8:27" pos:end="8:29"><expr pos:start="8:27" pos:end="8:29"><literal type="string" pos:start="8:27" pos:end="8:29">"r"</literal></expr></argument>, <argument pos:start="8:32" pos:end="8:36"><expr pos:start="8:32" pos:end="8:36"><name pos:start="8:32" pos:end="8:36">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:40"><expr pos:start="9:5" pos:end="9:39"><call pos:start="9:5" pos:end="9:39"><name pos:start="9:5" pos:end="9:11">freopen</name> <argument_list pos:start="9:13" pos:end="9:39">(<argument pos:start="9:14" pos:end="9:25"><expr pos:start="9:14" pos:end="9:25"><literal type="string" pos:start="9:14" pos:end="9:25">"bigadd.out"</literal></expr></argument>, <argument pos:start="9:28" pos:end="9:30"><expr pos:start="9:28" pos:end="9:30"><literal type="string" pos:start="9:28" pos:end="9:30">"w"</literal></expr></argument>, <argument pos:start="9:33" pos:end="9:38"><expr pos:start="9:33" pos:end="9:38"><name pos:start="9:33" pos:end="9:38">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:16"><decl pos:start="10:5" pos:end="10:15"><type pos:start="10:5" pos:end="10:13"><name pos:start="10:5" pos:end="10:8">long</name> <name pos:start="10:10" pos:end="10:13">long</name></type> <name pos:start="10:15" pos:end="10:15">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:13"><expr pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:7">cin</name> <operator pos:start="11:9" pos:end="11:10">&gt;&gt;</operator> <name pos:start="11:12" pos:end="11:12">s</name></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:14"><expr pos:start="12:5" pos:end="12:13"><name pos:start="12:5" pos:end="12:5">s</name> <operator pos:start="12:7" pos:end="12:8">+=</operator> <literal type="number" pos:start="12:10" pos:end="12:13">2018</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:8">cout</name> <operator pos:start="13:10" pos:end="13:11">&lt;&lt;</operator> <name pos:start="13:13" pos:end="13:13">s</name> <operator pos:start="13:15" pos:end="13:16">&lt;&lt;</operator> <name pos:start="13:18" pos:end="13:21">endl</name></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:19"><expr pos:start="14:5" pos:end="14:18"><call pos:start="14:5" pos:end="14:18"><name pos:start="14:5" pos:end="14:10">fclose</name> <argument_list pos:start="14:12" pos:end="14:18">(<argument pos:start="14:13" pos:end="14:17"><expr pos:start="14:13" pos:end="14:17"><name pos:start="14:13" pos:end="14:17">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><call pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:10">fclose</name> <argument_list pos:start="15:12" pos:end="15:19">(<argument pos:start="15:13" pos:end="15:18"><expr pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:18">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="16:5" pos:end="16:13">return <expr pos:start="16:12" pos:end="16:12"><literal type="number" pos:start="16:12" pos:end="16:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
