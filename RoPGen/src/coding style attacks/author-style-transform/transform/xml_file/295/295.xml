<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/295/295.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:14"><decl pos:start="3:1" pos:end="3:11"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">ans</name> <init pos:start="3:9" pos:end="3:11">= <expr pos:start="3:11" pos:end="3:11"><literal type="number" pos:start="3:11" pos:end="3:11">0</literal></expr></init></decl>,<decl pos:start="3:13" pos:end="3:13"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:13" pos:end="3:13">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:27"><decl pos:start="4:1" pos:end="4:12"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:12"><name pos:start="4:6" pos:end="4:8">row</name><index pos:start="4:9" pos:end="4:12">[<expr pos:start="4:10" pos:end="4:11"><literal type="number" pos:start="4:10" pos:end="4:11">10</literal></expr>]</index></name></decl>,<decl pos:start="4:14" pos:end="4:19"><type ref="prev" pos:start="4:1" pos:end="4:4"/><name pos:start="4:14" pos:end="4:19"><name pos:start="4:14" pos:end="4:15">x1</name><index pos:start="4:16" pos:end="4:19">[<expr pos:start="4:17" pos:end="4:18"><literal type="number" pos:start="4:17" pos:end="4:18">20</literal></expr>]</index></name></decl>,<decl pos:start="4:21" pos:end="4:26"><type ref="prev" pos:start="4:1" pos:end="4:4"/><name pos:start="4:21" pos:end="4:26"><name pos:start="4:21" pos:end="4:22">x2</name><index pos:start="4:23" pos:end="4:26">[<expr pos:start="4:24" pos:end="4:25"><literal type="number" pos:start="4:24" pos:end="4:25">20</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="7:9"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:10">check</name><parameter_list pos:start="5:11" pos:end="5:23">(<parameter pos:start="5:12" pos:end="5:16"><decl pos:start="5:12" pos:end="5:16"><type pos:start="5:12" pos:end="5:16"><name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:16">c</name></decl></parameter>,<parameter pos:start="5:18" pos:end="5:22"><decl pos:start="5:18" pos:end="5:22"><type pos:start="5:18" pos:end="5:22"><name pos:start="5:18" pos:end="5:20">int</name></type> <name pos:start="5:22" pos:end="5:22">i</name></decl></parameter>)</parameter_list><block pos:start="5:24" pos:end="7:9">{<block_content pos:start="6:17" pos:end="6:53">
                <return pos:start="6:17" pos:end="6:53">return <expr pos:start="6:24" pos:end="6:52"><operator pos:start="6:24" pos:end="6:24">!</operator><name pos:start="6:25" pos:end="6:30"><name pos:start="6:25" pos:end="6:27">row</name><index pos:start="6:28" pos:end="6:30">[<expr pos:start="6:29" pos:end="6:29"><name pos:start="6:29" pos:end="6:29">i</name></expr>]</index></name><operator pos:start="6:31" pos:end="6:32">&amp;&amp;</operator><operator pos:start="6:33" pos:end="6:33">!</operator><name pos:start="6:34" pos:end="6:40"><name pos:start="6:34" pos:end="6:35">x1</name><index pos:start="6:36" pos:end="6:40">[<expr pos:start="6:37" pos:end="6:39"><name pos:start="6:37" pos:end="6:37">c</name><operator pos:start="6:38" pos:end="6:38">+</operator><name pos:start="6:39" pos:end="6:39">i</name></expr>]</index></name><operator pos:start="6:41" pos:end="6:42">&amp;&amp;</operator><operator pos:start="6:43" pos:end="6:43">!</operator><name pos:start="6:44" pos:end="6:52"><name pos:start="6:44" pos:end="6:45">x2</name><index pos:start="6:46" pos:end="6:52">[<expr pos:start="6:47" pos:end="6:51"><name pos:start="6:47" pos:end="6:47">c</name><operator pos:start="6:48" pos:end="6:48">-</operator><name pos:start="6:49" pos:end="6:49">i</name><operator pos:start="6:50" pos:end="6:50">+</operator><name pos:start="6:51" pos:end="6:51">n</name></expr>]</index></name></expr>;</return>
        </block_content>}</block></function>
<function pos:start="8:1" pos:end="28:1"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">void</name></type> <name pos:start="8:6" pos:end="8:8">dfs</name><parameter_list pos:start="8:9" pos:end="8:15">(<parameter pos:start="8:10" pos:end="8:14"><decl pos:start="8:10" pos:end="8:14"><type pos:start="8:10" pos:end="8:12"><name pos:start="8:10" pos:end="8:12">int</name></type> <name pos:start="8:14" pos:end="8:14">c</name></decl></parameter>)</parameter_list><block pos:start="8:16" pos:end="28:1">{<block_content pos:start="9:9" pos:end="26:9">
        <if_stmt pos:start="9:9" pos:end="12:9"><if pos:start="9:9" pos:end="12:9">if<condition pos:start="9:11" pos:end="9:16">(<expr pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:12">c</name><operator pos:start="9:13" pos:end="9:14">==</operator><name pos:start="9:15" pos:end="9:15">n</name></expr>)</condition><block pos:start="9:17" pos:end="12:9">{<block_content pos:start="10:17" pos:end="11:23">
                <expr_stmt pos:start="10:17" pos:end="10:22"><expr pos:start="10:17" pos:end="10:21"><name pos:start="10:17" pos:end="10:19">ans</name><operator pos:start="10:20" pos:end="10:21">++</operator></expr>;</expr_stmt>
                <return pos:start="11:17" pos:end="11:23">return;</return>
        </block_content>}</block></if></if_stmt>
        <for pos:start="13:9" pos:end="19:8">for<control pos:start="13:12" pos:end="13:28">(<init pos:start="13:13" pos:end="13:20"><decl pos:start="13:13" pos:end="13:19"><type pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:15">int</name></type> <name pos:start="13:17" pos:end="13:17">i</name><init pos:start="13:18" pos:end="13:19">=<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr></init></decl>;</init><condition pos:start="13:21" pos:end="13:24"><expr pos:start="13:21" pos:end="13:23"><name pos:start="13:21" pos:end="13:21">i</name><operator pos:start="13:22" pos:end="13:22">&lt;</operator><name pos:start="13:23" pos:end="13:23">n</name></expr>;</condition><incr pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><name pos:start="13:25" pos:end="13:25">i</name><operator pos:start="13:26" pos:end="13:27">++</operator></expr></incr>)</control><block pos:start="13:29" pos:end="19:8">{<block_content pos:start="14:17" pos:end="18:17">
                <if_stmt pos:start="14:17" pos:end="18:17"><if pos:start="14:17" pos:end="18:17">if<condition pos:start="14:19" pos:end="14:30">(<expr pos:start="14:20" pos:end="14:29"><call pos:start="14:20" pos:end="14:29"><name pos:start="14:20" pos:end="14:24">check</name><argument_list pos:start="14:25" pos:end="14:29">(<argument pos:start="14:26" pos:end="14:26"><expr pos:start="14:26" pos:end="14:26"><name pos:start="14:26" pos:end="14:26">c</name></expr></argument>,<argument pos:start="14:28" pos:end="14:28"><expr pos:start="14:28" pos:end="14:28"><name pos:start="14:28" pos:end="14:28">i</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="14:31" pos:end="18:17">{<block_content pos:start="15:25" pos:end="17:55">
                        <expr_stmt pos:start="15:25" pos:end="15:54"><expr pos:start="15:25" pos:end="15:53"><name pos:start="15:25" pos:end="15:30"><name pos:start="15:25" pos:end="15:27">row</name><index pos:start="15:28" pos:end="15:30">[<expr pos:start="15:29" pos:end="15:29"><name pos:start="15:29" pos:end="15:29">i</name></expr>]</index></name><operator pos:start="15:31" pos:end="15:31">=</operator><name pos:start="15:32" pos:end="15:38"><name pos:start="15:32" pos:end="15:33">x1</name><index pos:start="15:34" pos:end="15:38">[<expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:35">c</name><operator pos:start="15:36" pos:end="15:36">+</operator><name pos:start="15:37" pos:end="15:37">i</name></expr>]</index></name><operator pos:start="15:39" pos:end="15:39">=</operator><name pos:start="15:40" pos:end="15:48"><name pos:start="15:40" pos:end="15:41">x2</name><index pos:start="15:42" pos:end="15:48">[<expr pos:start="15:43" pos:end="15:47"><name pos:start="15:43" pos:end="15:43">c</name><operator pos:start="15:44" pos:end="15:44">-</operator><name pos:start="15:45" pos:end="15:45">i</name><operator pos:start="15:46" pos:end="15:46">+</operator><name pos:start="15:47" pos:end="15:47">n</name></expr>]</index></name><operator pos:start="15:49" pos:end="15:49">=</operator><literal type="boolean" pos:start="15:50" pos:end="15:53">true</literal></expr>;</expr_stmt>
                        <expr_stmt pos:start="16:25" pos:end="16:33"><expr pos:start="16:25" pos:end="16:32"><call pos:start="16:25" pos:end="16:32"><name pos:start="16:25" pos:end="16:27">dfs</name><argument_list pos:start="16:28" pos:end="16:32">(<argument pos:start="16:29" pos:end="16:31"><expr pos:start="16:29" pos:end="16:31"><name pos:start="16:29" pos:end="16:29">c</name><operator pos:start="16:30" pos:end="16:30">+</operator><literal type="number" pos:start="16:31" pos:end="16:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="17:25" pos:end="17:55"><expr pos:start="17:25" pos:end="17:54"><name pos:start="17:25" pos:end="17:30"><name pos:start="17:25" pos:end="17:27">row</name><index pos:start="17:28" pos:end="17:30">[<expr pos:start="17:29" pos:end="17:29"><name pos:start="17:29" pos:end="17:29">i</name></expr>]</index></name><operator pos:start="17:31" pos:end="17:31">=</operator><name pos:start="17:32" pos:end="17:38"><name pos:start="17:32" pos:end="17:33">x1</name><index pos:start="17:34" pos:end="17:38">[<expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:35">c</name><operator pos:start="17:36" pos:end="17:36">+</operator><name pos:start="17:37" pos:end="17:37">i</name></expr>]</index></name><operator pos:start="17:39" pos:end="17:39">=</operator><name pos:start="17:40" pos:end="17:48"><name pos:start="17:40" pos:end="17:41">x2</name><index pos:start="17:42" pos:end="17:48">[<expr pos:start="17:43" pos:end="17:47"><name pos:start="17:43" pos:end="17:43">c</name><operator pos:start="17:44" pos:end="17:44">-</operator><name pos:start="17:45" pos:end="17:45">i</name><operator pos:start="17:46" pos:end="17:46">+</operator><name pos:start="17:47" pos:end="17:47">n</name></expr>]</index></name><operator pos:start="17:49" pos:end="17:49">=</operator><literal type="boolean" pos:start="17:50" pos:end="17:54">false</literal></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
       </block_content>}</block></for>
        <for pos:start="20:9" pos:end="26:9">for<control pos:start="20:12" pos:end="20:28">(<init pos:start="20:13" pos:end="20:20"><decl pos:start="20:13" pos:end="20:19"><type pos:start="20:13" pos:end="20:15"><name pos:start="20:13" pos:end="20:15">int</name></type> <name pos:start="20:17" pos:end="20:17">j</name><init pos:start="20:18" pos:end="20:19">=<expr pos:start="20:19" pos:end="20:19"><literal type="number" pos:start="20:19" pos:end="20:19">0</literal></expr></init></decl>;</init><condition pos:start="20:21" pos:end="20:24"><expr pos:start="20:21" pos:end="20:23"><name pos:start="20:21" pos:end="20:21">j</name><operator pos:start="20:22" pos:end="20:22">&lt;</operator><name pos:start="20:23" pos:end="20:23">n</name></expr>;</condition><incr pos:start="20:25" pos:end="20:27"><expr pos:start="20:25" pos:end="20:27"><name pos:start="20:25" pos:end="20:25">j</name><operator pos:start="20:26" pos:end="20:27">++</operator></expr></incr>)</control><block pos:start="20:29" pos:end="26:9">{<block_content pos:start="21:17" pos:end="25:17">
                <if_stmt pos:start="21:17" pos:end="25:17"><if pos:start="21:17" pos:end="25:17">if<condition pos:start="21:19" pos:end="21:30">(<expr pos:start="21:20" pos:end="21:29"><call pos:start="21:20" pos:end="21:29"><name pos:start="21:20" pos:end="21:24">check</name><argument_list pos:start="21:25" pos:end="21:29">(<argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><name pos:start="21:26" pos:end="21:26">c</name></expr></argument>,<argument pos:start="21:28" pos:end="21:28"><expr pos:start="21:28" pos:end="21:28"><name pos:start="21:28" pos:end="21:28">j</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="21:31" pos:end="25:17">{<block_content pos:start="22:25" pos:end="24:55">
                        <expr_stmt pos:start="22:25" pos:end="22:54"><expr pos:start="22:25" pos:end="22:53"><name pos:start="22:25" pos:end="22:30"><name pos:start="22:25" pos:end="22:27">row</name><index pos:start="22:28" pos:end="22:30">[<expr pos:start="22:29" pos:end="22:29"><name pos:start="22:29" pos:end="22:29">j</name></expr>]</index></name><operator pos:start="22:31" pos:end="22:31">=</operator><name pos:start="22:32" pos:end="22:38"><name pos:start="22:32" pos:end="22:33">x1</name><index pos:start="22:34" pos:end="22:38">[<expr pos:start="22:35" pos:end="22:37"><name pos:start="22:35" pos:end="22:35">c</name><operator pos:start="22:36" pos:end="22:36">+</operator><name pos:start="22:37" pos:end="22:37">j</name></expr>]</index></name><operator pos:start="22:39" pos:end="22:39">=</operator><name pos:start="22:40" pos:end="22:48"><name pos:start="22:40" pos:end="22:41">x2</name><index pos:start="22:42" pos:end="22:48">[<expr pos:start="22:43" pos:end="22:47"><name pos:start="22:43" pos:end="22:43">c</name><operator pos:start="22:44" pos:end="22:44">-</operator><name pos:start="22:45" pos:end="22:45">j</name><operator pos:start="22:46" pos:end="22:46">+</operator><name pos:start="22:47" pos:end="22:47">n</name></expr>]</index></name><operator pos:start="22:49" pos:end="22:49">=</operator><literal type="boolean" pos:start="22:50" pos:end="22:53">true</literal></expr>;</expr_stmt>
                        <expr_stmt pos:start="23:25" pos:end="23:33"><expr pos:start="23:25" pos:end="23:32"><call pos:start="23:25" pos:end="23:32"><name pos:start="23:25" pos:end="23:27">dfs</name><argument_list pos:start="23:28" pos:end="23:32">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:29">c</name><operator pos:start="23:30" pos:end="23:30">+</operator><literal type="number" pos:start="23:31" pos:end="23:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="24:25" pos:end="24:55"><expr pos:start="24:25" pos:end="24:54"><name pos:start="24:25" pos:end="24:30"><name pos:start="24:25" pos:end="24:27">row</name><index pos:start="24:28" pos:end="24:30">[<expr pos:start="24:29" pos:end="24:29"><name pos:start="24:29" pos:end="24:29">j</name></expr>]</index></name><operator pos:start="24:31" pos:end="24:31">=</operator><name pos:start="24:32" pos:end="24:38"><name pos:start="24:32" pos:end="24:33">x1</name><index pos:start="24:34" pos:end="24:38">[<expr pos:start="24:35" pos:end="24:37"><name pos:start="24:35" pos:end="24:35">c</name><operator pos:start="24:36" pos:end="24:36">+</operator><name pos:start="24:37" pos:end="24:37">j</name></expr>]</index></name><operator pos:start="24:39" pos:end="24:39">=</operator><name pos:start="24:40" pos:end="24:48"><name pos:start="24:40" pos:end="24:41">x2</name><index pos:start="24:42" pos:end="24:48">[<expr pos:start="24:43" pos:end="24:47"><name pos:start="24:43" pos:end="24:43">c</name><operator pos:start="24:44" pos:end="24:44">-</operator><name pos:start="24:45" pos:end="24:45">j</name><operator pos:start="24:46" pos:end="24:46">+</operator><name pos:start="24:47" pos:end="24:47">n</name></expr>]</index></name><operator pos:start="24:49" pos:end="24:49">=</operator><literal type="boolean" pos:start="24:50" pos:end="24:54">false</literal></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        
</block_content>}</block></function>
<function pos:start="29:1" pos:end="36:1"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:8">main</name><parameter_list pos:start="29:9" pos:end="29:10">()</parameter_list> <block pos:start="29:12" pos:end="36:1">{<block_content pos:start="30:9" pos:end="35:13">
        <expr_stmt pos:start="30:9" pos:end="30:38"><expr pos:start="30:9" pos:end="30:37"><call pos:start="30:9" pos:end="30:37"><name pos:start="30:9" pos:end="30:15">freopen</name><argument_list pos:start="30:16" pos:end="30:37">(<argument pos:start="30:17" pos:end="30:26"><expr pos:start="30:17" pos:end="30:26"><literal type="string" pos:start="30:17" pos:end="30:26">"queen.in"</literal></expr></argument>,<argument pos:start="30:28" pos:end="30:30"><expr pos:start="30:28" pos:end="30:30"><literal type="string" pos:start="30:28" pos:end="30:30">"r"</literal></expr></argument>,<argument pos:start="30:32" pos:end="30:36"><expr pos:start="30:32" pos:end="30:36"><name pos:start="30:32" pos:end="30:36">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="31:9" pos:end="31:40"><expr pos:start="31:9" pos:end="31:39"><call pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:15">freopen</name><argument_list pos:start="31:16" pos:end="31:39">(<argument pos:start="31:17" pos:end="31:27"><expr pos:start="31:17" pos:end="31:27"><literal type="string" pos:start="31:17" pos:end="31:27">"queen.out"</literal></expr></argument>,<argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><literal type="string" pos:start="31:29" pos:end="31:31">"w"</literal></expr></argument>,<argument pos:start="31:33" pos:end="31:38"><expr pos:start="31:33" pos:end="31:38"><name pos:start="31:33" pos:end="31:38">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:15"><expr pos:start="32:9" pos:end="32:14"><name pos:start="32:9" pos:end="32:11">cin</name><operator pos:start="32:12" pos:end="32:13">&gt;&gt;</operator><name pos:start="32:14" pos:end="32:14">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:11"><expr pos:start="33:5" pos:end="33:10"><call pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:7">dfs</name><argument_list pos:start="33:8" pos:end="33:10">(<argument pos:start="33:9" pos:end="33:9"><expr pos:start="33:9" pos:end="33:9"><literal type="number" pos:start="33:9" pos:end="33:9">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:24"><expr pos:start="34:9" pos:end="34:23"><name pos:start="34:9" pos:end="34:12">cout</name><operator pos:start="34:13" pos:end="34:14">&lt;&lt;</operator><name pos:start="34:15" pos:end="34:17">ans</name><operator pos:start="34:18" pos:end="34:19">&lt;&lt;</operator><name pos:start="34:20" pos:end="34:23">endl</name></expr>;</expr_stmt>
    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>    
</block_content>}</block></function>
</unit>
