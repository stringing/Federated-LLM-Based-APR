<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1021/1021.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:define pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:7">define</cpp:directive> <cpp:macro pos:start="2:9" pos:end="2:10"><name pos:start="2:9" pos:end="2:10">ll</name></cpp:macro> <cpp:value pos:start="2:12" pos:end="2:20">long long</cpp:value></cpp:define>
<cpp:include pos:start="3:1" pos:end="3:20">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:16">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:16">&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:17">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive> <cpp:file pos:start="5:10" pos:end="5:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<using pos:start="6:1" pos:end="6:20">using <namespace pos:start="6:7" pos:end="6:20">namespace <name pos:start="6:17" pos:end="6:19">std</name>;</namespace></using>
<function pos:start="7:1" pos:end="9:1"><type pos:start="7:1" pos:end="7:2"><name pos:start="7:1" pos:end="7:2">ll</name></type> <name pos:start="7:4" pos:end="7:7">sici</name> <parameter_list pos:start="7:9" pos:end="7:14">(<parameter pos:start="7:10" pos:end="7:13"><decl pos:start="7:10" pos:end="7:13"><type pos:start="7:10" pos:end="7:11"><name pos:start="7:10" pos:end="7:11">ll</name></type> <name pos:start="7:13" pos:end="7:13">n</name></decl></parameter>)</parameter_list> <block pos:start="7:16" pos:end="9:1">{<block_content pos:start="8:5" pos:end="8:17">
    <return pos:start="8:5" pos:end="8:17">return <expr pos:start="8:12" pos:end="8:16"><name pos:start="8:12" pos:end="8:12">n</name> <operator pos:start="8:14" pos:end="8:14">*</operator> <name pos:start="8:16" pos:end="8:16">n</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="10:1" pos:end="17:1"><type pos:start="10:1" pos:end="10:2"><name pos:start="10:1" pos:end="10:2">ll</name></type> <name pos:start="10:4" pos:end="10:7">addd</name> <parameter_list pos:start="10:9" pos:end="10:14">(<parameter pos:start="10:10" pos:end="10:13"><decl pos:start="10:10" pos:end="10:13"><type pos:start="10:10" pos:end="10:11"><name pos:start="10:10" pos:end="10:11">ll</name></type> <name pos:start="10:13" pos:end="10:13">n</name></decl></parameter>)</parameter_list> <block pos:start="10:16" pos:end="17:1">{<block_content pos:start="11:5" pos:end="16:13">
    <for pos:start="11:5" pos:end="15:5">for <control pos:start="11:9" pos:end="11:37">(<init pos:start="11:10" pos:end="11:18"><decl pos:start="11:10" pos:end="11:17"><type pos:start="11:10" pos:end="11:11"><name pos:start="11:10" pos:end="11:11">ll</name></type> <name pos:start="11:13" pos:end="11:13">i</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr></init></decl>;</init> <condition pos:start="11:20" pos:end="11:32"><expr pos:start="11:20" pos:end="11:31"><call pos:start="11:20" pos:end="11:26"><name pos:start="11:20" pos:end="11:23">sici</name><argument_list pos:start="11:24" pos:end="11:26">(<argument pos:start="11:25" pos:end="11:25"><expr pos:start="11:25" pos:end="11:25"><name pos:start="11:25" pos:end="11:25">i</name></expr></argument>)</argument_list></call> <operator pos:start="11:28" pos:end="11:29">&lt;=</operator> <name pos:start="11:31" pos:end="11:31">n</name></expr>;</condition> <incr pos:start="11:34" pos:end="11:36"><expr pos:start="11:34" pos:end="11:36"><name pos:start="11:34" pos:end="11:34">i</name><operator pos:start="11:35" pos:end="11:36">++</operator></expr></incr>)</control> <block pos:start="11:39" pos:end="15:5">{<block_content pos:start="12:9" pos:end="14:9">
        <if_stmt pos:start="12:9" pos:end="14:9"><if pos:start="12:9" pos:end="14:9">if <condition pos:start="12:12" pos:end="12:25">(<expr pos:start="12:13" pos:end="12:24"><call pos:start="12:13" pos:end="12:19"><name pos:start="12:13" pos:end="12:16">sici</name><argument_list pos:start="12:17" pos:end="12:19">(<argument pos:start="12:18" pos:end="12:18"><expr pos:start="12:18" pos:end="12:18"><name pos:start="12:18" pos:end="12:18">i</name></expr></argument>)</argument_list></call> <operator pos:start="12:21" pos:end="12:22">==</operator> <name pos:start="12:24" pos:end="12:24">n</name></expr>)</condition> <block pos:start="12:27" pos:end="14:9">{<block_content pos:start="13:13" pos:end="13:21">
            <return pos:start="13:13" pos:end="13:21">return <expr pos:start="13:20" pos:end="13:20"><name pos:start="13:20" pos:end="13:20">i</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="16:5" pos:end="16:13">return <expr pos:start="16:12" pos:end="16:12"><literal type="number" pos:start="16:12" pos:end="16:12">0</literal></expr>;</return>
</block_content>}</block></function>
<decl_stmt pos:start="18:1" pos:end="18:5"><decl pos:start="18:1" pos:end="18:4"><type pos:start="18:1" pos:end="18:2"><name pos:start="18:1" pos:end="18:2">ll</name></type> <name pos:start="18:4" pos:end="18:4">n</name></decl>;</decl_stmt>
<function pos:start="19:1" pos:end="51:1"><type pos:start="19:1" pos:end="19:3"><name pos:start="19:1" pos:end="19:3">int</name></type> <name pos:start="19:5" pos:end="19:8">main</name> <parameter_list pos:start="19:10" pos:end="19:11">()</parameter_list> <block pos:start="19:13" pos:end="51:1">{<block_content pos:start="20:5" pos:end="50:13">
    <expr_stmt pos:start="20:5" pos:end="20:38"><expr pos:start="20:5" pos:end="20:37"><call pos:start="20:5" pos:end="20:37"><name pos:start="20:5" pos:end="20:11">freopen</name> <argument_list pos:start="20:13" pos:end="20:37">(<argument pos:start="20:14" pos:end="20:24"><expr pos:start="20:14" pos:end="20:24"><literal type="string" pos:start="20:14" pos:end="20:24">"square.in"</literal></expr></argument>, <argument pos:start="20:27" pos:end="20:29"><expr pos:start="20:27" pos:end="20:29"><literal type="string" pos:start="20:27" pos:end="20:29">"r"</literal></expr></argument>, <argument pos:start="20:32" pos:end="20:36"><expr pos:start="20:32" pos:end="20:36"><name pos:start="20:32" pos:end="20:36">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><call pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:11">freopen</name> <argument_list pos:start="21:13" pos:end="21:39">(<argument pos:start="21:14" pos:end="21:25"><expr pos:start="21:14" pos:end="21:25"><literal type="string" pos:start="21:14" pos:end="21:25">"square.out"</literal></expr></argument>, <argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><literal type="string" pos:start="21:28" pos:end="21:30">"w"</literal></expr></argument>, <argument pos:start="21:33" pos:end="21:38"><expr pos:start="21:33" pos:end="21:38"><name pos:start="21:33" pos:end="21:38">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:13"><expr pos:start="22:5" pos:end="22:12"><name pos:start="22:5" pos:end="22:7">cin</name> <operator pos:start="22:9" pos:end="22:10">&gt;&gt;</operator> <name pos:start="22:12" pos:end="22:12">n</name></expr>;</expr_stmt>
    <for pos:start="23:5" pos:end="28:5">for <control pos:start="23:9" pos:end="23:36">(<init pos:start="23:10" pos:end="23:19"><decl pos:start="23:10" pos:end="23:18"><type pos:start="23:10" pos:end="23:12"><name pos:start="23:10" pos:end="23:12">int</name></type> <name pos:start="23:14" pos:end="23:14">i</name> <init pos:start="23:16" pos:end="23:18">= <expr pos:start="23:18" pos:end="23:18"><literal type="number" pos:start="23:18" pos:end="23:18">1</literal></expr></init></decl>;</init> <condition pos:start="23:21" pos:end="23:31"><expr pos:start="23:21" pos:end="23:30"><name pos:start="23:21" pos:end="23:21">i</name> <operator pos:start="23:23" pos:end="23:23">*</operator> <name pos:start="23:25" pos:end="23:25">i</name> <operator pos:start="23:27" pos:end="23:28">&lt;=</operator> <name pos:start="23:30" pos:end="23:30">n</name></expr>;</condition> <incr pos:start="23:33" pos:end="23:35"><expr pos:start="23:33" pos:end="23:35"><name pos:start="23:33" pos:end="23:33">i</name><operator pos:start="23:34" pos:end="23:35">++</operator></expr></incr>)</control> <block pos:start="23:38" pos:end="28:5">{<block_content pos:start="24:9" pos:end="27:9">
        <if_stmt pos:start="24:9" pos:end="27:9"><if pos:start="24:9" pos:end="27:9">if <condition pos:start="24:12" pos:end="24:23">(<expr pos:start="24:13" pos:end="24:22"><name pos:start="24:13" pos:end="24:13">i</name> <operator pos:start="24:15" pos:end="24:15">*</operator> <name pos:start="24:17" pos:end="24:17">i</name> <operator pos:start="24:19" pos:end="24:20">==</operator> <name pos:start="24:22" pos:end="24:22">n</name></expr>)</condition> <block pos:start="24:25" pos:end="27:9">{<block_content pos:start="25:13" pos:end="26:21">
            <expr_stmt pos:start="25:13" pos:end="25:34"><expr pos:start="25:13" pos:end="25:33"><call pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:18">printf</name><argument_list pos:start="25:19" pos:end="25:33">(<argument pos:start="25:20" pos:end="25:29"><expr pos:start="25:20" pos:end="25:29"><literal type="string" pos:start="25:20" pos:end="25:29">"0 0 0 %d"</literal></expr></argument>, <argument pos:start="25:32" pos:end="25:32"><expr pos:start="25:32" pos:end="25:32"><name pos:start="25:32" pos:end="25:32">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="26:13" pos:end="26:21">return <expr pos:start="26:20" pos:end="26:20"><literal type="number" pos:start="26:20" pos:end="26:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="29:5" pos:end="36:5">for <control pos:start="29:9" pos:end="29:36">(<init pos:start="29:10" pos:end="29:19"><decl pos:start="29:10" pos:end="29:18"><type pos:start="29:10" pos:end="29:12"><name pos:start="29:10" pos:end="29:12">int</name></type> <name pos:start="29:14" pos:end="29:14">i</name> <init pos:start="29:16" pos:end="29:18">= <expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">1</literal></expr></init></decl>;</init> <condition pos:start="29:21" pos:end="29:31"><expr pos:start="29:21" pos:end="29:30"><name pos:start="29:21" pos:end="29:21">i</name> <operator pos:start="29:23" pos:end="29:23">*</operator> <name pos:start="29:25" pos:end="29:25">i</name> <operator pos:start="29:27" pos:end="29:28">&lt;=</operator> <name pos:start="29:30" pos:end="29:30">n</name></expr>;</condition> <incr pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><name pos:start="29:33" pos:end="29:33">i</name><operator pos:start="29:34" pos:end="29:35">++</operator></expr></incr>)</control> <block pos:start="29:38" pos:end="36:5">{<block_content pos:start="30:9" pos:end="35:9">
        <for pos:start="30:9" pos:end="35:9">for <control pos:start="30:13" pos:end="30:40">(<init pos:start="30:14" pos:end="30:23"><decl pos:start="30:14" pos:end="30:22"><type pos:start="30:14" pos:end="30:16"><name pos:start="30:14" pos:end="30:16">int</name></type> <name pos:start="30:18" pos:end="30:18">j</name> <init pos:start="30:20" pos:end="30:22">= <expr pos:start="30:22" pos:end="30:22"><literal type="number" pos:start="30:22" pos:end="30:22">1</literal></expr></init></decl>;</init> <condition pos:start="30:25" pos:end="30:35"><expr pos:start="30:25" pos:end="30:34"><name pos:start="30:25" pos:end="30:25">j</name> <operator pos:start="30:27" pos:end="30:27">*</operator> <name pos:start="30:29" pos:end="30:29">j</name> <operator pos:start="30:31" pos:end="30:32">&lt;=</operator> <name pos:start="30:34" pos:end="30:34">n</name></expr>;</condition> <incr pos:start="30:37" pos:end="30:39"><expr pos:start="30:37" pos:end="30:39"><name pos:start="30:37" pos:end="30:37">j</name><operator pos:start="30:38" pos:end="30:39">++</operator></expr></incr>)</control> <block pos:start="30:42" pos:end="35:9">{<block_content pos:start="31:13" pos:end="34:13">
            <if_stmt pos:start="31:13" pos:end="34:13"><if pos:start="31:13" pos:end="34:13">if <condition pos:start="31:16" pos:end="31:35">(<expr pos:start="31:17" pos:end="31:34"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">*</operator> <name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">+</operator> <name pos:start="31:25" pos:end="31:25">j</name> <operator pos:start="31:27" pos:end="31:27">*</operator> <name pos:start="31:29" pos:end="31:29">j</name> <operator pos:start="31:31" pos:end="31:32">==</operator> <name pos:start="31:34" pos:end="31:34">n</name></expr>)</condition> <block pos:start="31:37" pos:end="34:13">{<block_content pos:start="32:17" pos:end="33:25">
                <expr_stmt pos:start="32:17" pos:end="32:42"><expr pos:start="32:17" pos:end="32:41"><call pos:start="32:17" pos:end="32:41"><name pos:start="32:17" pos:end="32:22">printf</name><argument_list pos:start="32:23" pos:end="32:41">(<argument pos:start="32:24" pos:end="32:34"><expr pos:start="32:24" pos:end="32:34"><literal type="string" pos:start="32:24" pos:end="32:34">"0 0 %d %d"</literal></expr></argument>, <argument pos:start="32:37" pos:end="32:37"><expr pos:start="32:37" pos:end="32:37"><name pos:start="32:37" pos:end="32:37">i</name></expr></argument>, <argument pos:start="32:40" pos:end="32:40"><expr pos:start="32:40" pos:end="32:40"><name pos:start="32:40" pos:end="32:40">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:start="33:17" pos:end="33:25">return <expr pos:start="33:24" pos:end="33:24"><literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="37:5" pos:end="48:5">for <control pos:start="37:9" pos:end="37:36">(<init pos:start="37:10" pos:end="37:19"><decl pos:start="37:10" pos:end="37:18"><type pos:start="37:10" pos:end="37:12"><name pos:start="37:10" pos:end="37:12">int</name></type> <name pos:start="37:14" pos:end="37:14">i</name> <init pos:start="37:16" pos:end="37:18">= <expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr></init></decl>;</init> <condition pos:start="37:21" pos:end="37:31"><expr pos:start="37:21" pos:end="37:30"><name pos:start="37:21" pos:end="37:21">i</name> <operator pos:start="37:23" pos:end="37:23">*</operator> <name pos:start="37:25" pos:end="37:25">i</name> <operator pos:start="37:27" pos:end="37:28">&lt;=</operator> <name pos:start="37:30" pos:end="37:30">n</name></expr>;</condition> <incr pos:start="37:33" pos:end="37:35"><expr pos:start="37:33" pos:end="37:35"><name pos:start="37:33" pos:end="37:33">i</name><operator pos:start="37:34" pos:end="37:35">++</operator></expr></incr>)</control> <block pos:start="37:38" pos:end="48:5">{<block_content pos:start="38:9" pos:end="47:9">
        <for pos:start="38:9" pos:end="47:9">for <control pos:start="38:13" pos:end="38:40">(<init pos:start="38:14" pos:end="38:23"><decl pos:start="38:14" pos:end="38:22"><type pos:start="38:14" pos:end="38:16"><name pos:start="38:14" pos:end="38:16">int</name></type> <name pos:start="38:18" pos:end="38:18">j</name> <init pos:start="38:20" pos:end="38:22">= <expr pos:start="38:22" pos:end="38:22"><literal type="number" pos:start="38:22" pos:end="38:22">1</literal></expr></init></decl>;</init> <condition pos:start="38:25" pos:end="38:35"><expr pos:start="38:25" pos:end="38:34"><name pos:start="38:25" pos:end="38:25">j</name> <operator pos:start="38:27" pos:end="38:27">*</operator> <name pos:start="38:29" pos:end="38:29">j</name> <operator pos:start="38:31" pos:end="38:32">&lt;=</operator> <name pos:start="38:34" pos:end="38:34">n</name></expr>;</condition> <incr pos:start="38:37" pos:end="38:39"><expr pos:start="38:37" pos:end="38:39"><name pos:start="38:37" pos:end="38:37">j</name><operator pos:start="38:38" pos:end="38:39">++</operator></expr></incr>)</control> <block pos:start="38:42" pos:end="47:9">{<block_content pos:start="39:13" pos:end="46:13">
            <for pos:start="39:13" pos:end="46:13">for <control pos:start="39:17" pos:end="39:44">(<init pos:start="39:18" pos:end="39:27"><decl pos:start="39:18" pos:end="39:26"><type pos:start="39:18" pos:end="39:20"><name pos:start="39:18" pos:end="39:20">int</name></type> <name pos:start="39:22" pos:end="39:22">k</name> <init pos:start="39:24" pos:end="39:26">= <expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr></init></decl>;</init> <condition pos:start="39:29" pos:end="39:39"><expr pos:start="39:29" pos:end="39:38"><name pos:start="39:29" pos:end="39:29">k</name> <operator pos:start="39:31" pos:end="39:31">*</operator> <name pos:start="39:33" pos:end="39:33">k</name> <operator pos:start="39:35" pos:end="39:36">&lt;=</operator> <name pos:start="39:38" pos:end="39:38">n</name></expr>;</condition> <incr pos:start="39:41" pos:end="39:43"><expr pos:start="39:41" pos:end="39:43"><name pos:start="39:41" pos:end="39:41">k</name><operator pos:start="39:42" pos:end="39:43">++</operator></expr></incr>)</control> <block pos:start="39:46" pos:end="46:13">{<block_content pos:start="40:17" pos:end="45:17">
                <decl_stmt pos:start="40:17" pos:end="40:21"><decl pos:start="40:17" pos:end="40:20"><type pos:start="40:17" pos:end="40:18"><name pos:start="40:17" pos:end="40:18">ll</name></type> <name pos:start="40:20" pos:end="40:20">x</name></decl>;</decl_stmt>
                <if_stmt pos:start="41:17" pos:end="45:17"><if pos:start="41:17" pos:end="45:17">if <condition pos:start="41:20" pos:end="41:58">(<expr pos:start="41:21" pos:end="41:57"><call pos:start="41:21" pos:end="41:57"><name pos:start="41:21" pos:end="41:24">addd</name><argument_list pos:start="41:25" pos:end="41:57">(<argument pos:start="41:26" pos:end="41:56"><expr pos:start="41:26" pos:end="41:56"><name pos:start="41:26" pos:end="41:26">n</name> <operator pos:start="41:28" pos:end="41:28">-</operator> <call pos:start="41:30" pos:end="41:36"><name pos:start="41:30" pos:end="41:33">sici</name><argument_list pos:start="41:34" pos:end="41:36">(<argument pos:start="41:35" pos:end="41:35"><expr pos:start="41:35" pos:end="41:35"><name pos:start="41:35" pos:end="41:35">i</name></expr></argument>)</argument_list></call> <operator pos:start="41:38" pos:end="41:38">-</operator> <call pos:start="41:40" pos:end="41:46"><name pos:start="41:40" pos:end="41:43">sici</name><argument_list pos:start="41:44" pos:end="41:46">(<argument pos:start="41:45" pos:end="41:45"><expr pos:start="41:45" pos:end="41:45"><name pos:start="41:45" pos:end="41:45">j</name></expr></argument>)</argument_list></call> <operator pos:start="41:48" pos:end="41:48">-</operator> <call pos:start="41:50" pos:end="41:56"><name pos:start="41:50" pos:end="41:53">sici</name><argument_list pos:start="41:54" pos:end="41:56">(<argument pos:start="41:55" pos:end="41:55"><expr pos:start="41:55" pos:end="41:55"><name pos:start="41:55" pos:end="41:55">k</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:60" pos:end="45:17">{<block_content pos:start="42:21" pos:end="44:29">
                    <expr_stmt pos:start="42:21" pos:end="42:62"><expr pos:start="42:21" pos:end="42:61"><name pos:start="42:21" pos:end="42:21">x</name> <operator pos:start="42:23" pos:end="42:23">=</operator> <call pos:start="42:25" pos:end="42:61"><name pos:start="42:25" pos:end="42:28">addd</name><argument_list pos:start="42:29" pos:end="42:61">(<argument pos:start="42:30" pos:end="42:60"><expr pos:start="42:30" pos:end="42:60"><name pos:start="42:30" pos:end="42:30">n</name> <operator pos:start="42:32" pos:end="42:32">-</operator> <call pos:start="42:34" pos:end="42:40"><name pos:start="42:34" pos:end="42:37">sici</name><argument_list pos:start="42:38" pos:end="42:40">(<argument pos:start="42:39" pos:end="42:39"><expr pos:start="42:39" pos:end="42:39"><name pos:start="42:39" pos:end="42:39">i</name></expr></argument>)</argument_list></call> <operator pos:start="42:42" pos:end="42:42">-</operator> <call pos:start="42:44" pos:end="42:50"><name pos:start="42:44" pos:end="42:47">sici</name><argument_list pos:start="42:48" pos:end="42:50">(<argument pos:start="42:49" pos:end="42:49"><expr pos:start="42:49" pos:end="42:49"><name pos:start="42:49" pos:end="42:49">j</name></expr></argument>)</argument_list></call> <operator pos:start="42:52" pos:end="42:52">-</operator> <call pos:start="42:54" pos:end="42:60"><name pos:start="42:54" pos:end="42:57">sici</name><argument_list pos:start="42:58" pos:end="42:60">(<argument pos:start="42:59" pos:end="42:59"><expr pos:start="42:59" pos:end="42:59"><name pos:start="42:59" pos:end="42:59">k</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="43:21" pos:end="43:56"><expr pos:start="43:21" pos:end="43:55"><call pos:start="43:21" pos:end="43:55"><name pos:start="43:21" pos:end="43:26">printf</name><argument_list pos:start="43:27" pos:end="43:55">(<argument pos:start="43:28" pos:end="43:42"><expr pos:start="43:28" pos:end="43:42"><literal type="string" pos:start="43:28" pos:end="43:42">"%d %d %d %lld"</literal></expr></argument>, <argument pos:start="43:45" pos:end="43:45"><expr pos:start="43:45" pos:end="43:45"><name pos:start="43:45" pos:end="43:45">i</name></expr></argument>, <argument pos:start="43:48" pos:end="43:48"><expr pos:start="43:48" pos:end="43:48"><name pos:start="43:48" pos:end="43:48">j</name></expr></argument>, <argument pos:start="43:51" pos:end="43:51"><expr pos:start="43:51" pos:end="43:51"><name pos:start="43:51" pos:end="43:51">k</name></expr></argument>, <argument pos:start="43:54" pos:end="43:54"><expr pos:start="43:54" pos:end="43:54"><name pos:start="43:54" pos:end="43:54">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return pos:start="44:21" pos:end="44:29">return <expr pos:start="44:28" pos:end="44:28"><literal type="number" pos:start="44:28" pos:end="44:28">0</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>
    </block_content>}</block></for>
    
    <return pos:start="50:5" pos:end="50:13">return <expr pos:start="50:12" pos:end="50:12"><literal type="number" pos:start="50:12" pos:end="50:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
