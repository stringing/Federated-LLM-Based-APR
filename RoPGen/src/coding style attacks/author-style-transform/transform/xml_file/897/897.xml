<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/897/897.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:68"><decl pos:start="3:1" pos:end="3:50"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:13"><name pos:start="3:5" pos:end="3:7">dir</name><index pos:start="3:8" pos:end="3:10">[<expr pos:start="3:9" pos:end="3:9"><literal type="number" pos:start="3:9" pos:end="3:9">4</literal></expr>]</index><index pos:start="3:11" pos:end="3:13">[<expr pos:start="3:12" pos:end="3:12"><literal type="number" pos:start="3:12" pos:end="3:12">2</literal></expr>]</index></name> <init pos:start="3:15" pos:end="3:50">= <expr pos:start="3:17" pos:end="3:50"><block pos:start="3:17" pos:end="3:50">{<expr pos:start="3:18" pos:end="3:24"><block pos:start="3:18" pos:end="3:24">{<expr pos:start="3:19" pos:end="3:20"><operator pos:start="3:19" pos:end="3:19">-</operator><literal type="number" pos:start="3:20" pos:end="3:20">1</literal></expr>, <expr pos:start="3:23" pos:end="3:23"><literal type="number" pos:start="3:23" pos:end="3:23">0</literal></expr>}</block></expr>, <expr pos:start="3:27" pos:end="3:32"><block pos:start="3:27" pos:end="3:32">{<expr pos:start="3:28" pos:end="3:28"><literal type="number" pos:start="3:28" pos:end="3:28">1</literal></expr>, <expr pos:start="3:31" pos:end="3:31"><literal type="number" pos:start="3:31" pos:end="3:31">0</literal></expr>}</block></expr>, <expr pos:start="3:35" pos:end="3:41"><block pos:start="3:35" pos:end="3:41">{<expr pos:start="3:36" pos:end="3:36"><literal type="number" pos:start="3:36" pos:end="3:36">0</literal></expr>, <expr pos:start="3:39" pos:end="3:40"><operator pos:start="3:39" pos:end="3:39">-</operator><literal type="number" pos:start="3:40" pos:end="3:40">1</literal></expr>}</block></expr>, <expr pos:start="3:44" pos:end="3:49"><block pos:start="3:44" pos:end="3:49">{<expr pos:start="3:45" pos:end="3:45"><literal type="number" pos:start="3:45" pos:end="3:45">0</literal></expr>, <expr pos:start="3:48" pos:end="3:48"><literal type="number" pos:start="3:48" pos:end="3:48">1</literal></expr>}</block></expr>}</block></expr></init></decl>, <decl pos:start="3:53" pos:end="3:55"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:53" pos:end="3:55">ans</name></decl>, <decl pos:start="3:58" pos:end="3:58"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:58" pos:end="3:58">n</name></decl>, <decl pos:start="3:61" pos:end="3:61"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:61" pos:end="3:61">m</name></decl>, <decl pos:start="3:64" pos:end="3:64"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:64" pos:end="3:64">x</name></decl>, <decl pos:start="3:67" pos:end="3:67"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:67" pos:end="3:67">y</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:20"><decl pos:start="4:1" pos:end="4:19"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">char</name></type> <name pos:start="4:6" pos:end="4:19"><name pos:start="4:6" pos:end="4:9">maze</name><index pos:start="4:10" pos:end="4:14">[<expr pos:start="4:11" pos:end="4:13"><literal type="number" pos:start="4:11" pos:end="4:13">105</literal></expr>]</index><index pos:start="4:15" pos:end="4:19">[<expr pos:start="4:16" pos:end="4:18"><literal type="number" pos:start="4:16" pos:end="4:18">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:19"><decl pos:start="5:1" pos:end="5:18"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">bool</name></type> <name pos:start="5:6" pos:end="5:18"><name pos:start="5:6" pos:end="5:8">vis</name><index pos:start="5:9" pos:end="5:13">[<expr pos:start="5:10" pos:end="5:12"><literal type="number" pos:start="5:10" pos:end="5:12">105</literal></expr>]</index><index pos:start="5:14" pos:end="5:18">[<expr pos:start="5:15" pos:end="5:17"><literal type="number" pos:start="5:15" pos:end="5:17">105</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="9:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">bool</name></type> <name pos:start="6:6" pos:end="6:7">in</name><parameter_list pos:start="6:8" pos:end="6:21">(<parameter pos:start="6:9" pos:end="6:13"><decl pos:start="6:9" pos:end="6:13"><type pos:start="6:9" pos:end="6:13"><name pos:start="6:9" pos:end="6:11">int</name></type> <name pos:start="6:13" pos:end="6:13">x</name></decl></parameter>, <parameter pos:start="6:16" pos:end="6:20"><decl pos:start="6:16" pos:end="6:20"><type pos:start="6:16" pos:end="6:20"><name pos:start="6:16" pos:end="6:18">int</name></type> <name pos:start="6:20" pos:end="6:20">y</name></decl></parameter>)</parameter_list>
<block pos:start="7:1" pos:end="9:1">{<block_content pos:start="8:5" pos:end="8:46">
    <return pos:start="8:5" pos:end="8:46">return <expr pos:start="8:12" pos:end="8:45"><literal type="number" pos:start="8:12" pos:end="8:12">0</literal> <operator pos:start="8:14" pos:end="8:15">&lt;=</operator> <name pos:start="8:17" pos:end="8:17">x</name> <operator pos:start="8:19" pos:end="8:20">&amp;&amp;</operator> <name pos:start="8:22" pos:end="8:22">x</name> <operator pos:start="8:24" pos:end="8:24">&lt;</operator> <name pos:start="8:26" pos:end="8:26">n</name> <operator pos:start="8:28" pos:end="8:29">&amp;&amp;</operator> <literal type="number" pos:start="8:31" pos:end="8:31">0</literal> <operator pos:start="8:33" pos:end="8:34">&lt;=</operator> <name pos:start="8:36" pos:end="8:36">y</name> <operator pos:start="8:38" pos:end="8:39">&amp;&amp;</operator> <name pos:start="8:41" pos:end="8:41">y</name> <operator pos:start="8:43" pos:end="8:43">&lt;</operator> <name pos:start="8:45" pos:end="8:45">m</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="10:1" pos:end="27:1"><type pos:start="10:1" pos:end="10:4"><name pos:start="10:1" pos:end="10:4">void</name></type> <name pos:start="10:6" pos:end="10:8">dfs</name><parameter_list pos:start="10:9" pos:end="10:22">(<parameter pos:start="10:10" pos:end="10:14"><decl pos:start="10:10" pos:end="10:14"><type pos:start="10:10" pos:end="10:14"><name pos:start="10:10" pos:end="10:12">int</name></type> <name pos:start="10:14" pos:end="10:14">x</name></decl></parameter>, <parameter pos:start="10:17" pos:end="10:21"><decl pos:start="10:17" pos:end="10:21"><type pos:start="10:17" pos:end="10:21"><name pos:start="10:17" pos:end="10:19">int</name></type> <name pos:start="10:21" pos:end="10:21">y</name></decl></parameter>)</parameter_list>
<block pos:start="11:1" pos:end="27:1">{<block_content pos:start="12:5" pos:end="26:5">
    <expr_stmt pos:start="12:5" pos:end="12:21"><expr pos:start="12:5" pos:end="12:20"><name pos:start="12:5" pos:end="12:13"><name pos:start="12:5" pos:end="12:7">vis</name><index pos:start="12:8" pos:end="12:10">[<expr pos:start="12:9" pos:end="12:9"><name pos:start="12:9" pos:end="12:9">x</name></expr>]</index><index pos:start="12:11" pos:end="12:13">[<expr pos:start="12:12" pos:end="12:12"><name pos:start="12:12" pos:end="12:12">y</name></expr>]</index></name> <operator pos:start="12:15" pos:end="12:15">=</operator> <literal type="boolean" pos:start="12:17" pos:end="12:20">true</literal></expr>;</expr_stmt>
    <for pos:start="13:5" pos:end="26:5">for <control pos:start="13:9" pos:end="13:31">(<init pos:start="13:10" pos:end="13:19"><decl pos:start="13:10" pos:end="13:18"><type pos:start="13:10" pos:end="13:12"><name pos:start="13:10" pos:end="13:12">int</name></type> <name pos:start="13:14" pos:end="13:14">i</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>;</init> <condition pos:start="13:21" pos:end="13:26"><expr pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:21">i</name> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <literal type="number" pos:start="13:25" pos:end="13:25">4</literal></expr>;</condition> <incr pos:start="13:28" pos:end="13:30"><expr pos:start="13:28" pos:end="13:30"><name pos:start="13:28" pos:end="13:28">i</name><operator pos:start="13:29" pos:end="13:30">++</operator></expr></incr>)</control>
    <block pos:start="14:5" pos:end="26:5">{<block_content pos:start="15:9" pos:end="25:9">
        <decl_stmt pos:start="15:9" pos:end="15:31"><decl pos:start="15:9" pos:end="15:30"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:14">tx</name> <init pos:start="15:16" pos:end="15:30">= <expr pos:start="15:18" pos:end="15:30"><name pos:start="15:18" pos:end="15:18">x</name> <operator pos:start="15:20" pos:end="15:20">+</operator> <name pos:start="15:22" pos:end="15:30"><name pos:start="15:22" pos:end="15:24">dir</name><index pos:start="15:25" pos:end="15:27">[<expr pos:start="15:26" pos:end="15:26"><name pos:start="15:26" pos:end="15:26">i</name></expr>]</index><index pos:start="15:28" pos:end="15:30">[<expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="16:9" pos:end="16:31"><decl pos:start="16:9" pos:end="16:30"><type pos:start="16:9" pos:end="16:11"><name pos:start="16:9" pos:end="16:11">int</name></type> <name pos:start="16:13" pos:end="16:14">ty</name> <init pos:start="16:16" pos:end="16:30">= <expr pos:start="16:18" pos:end="16:30"><name pos:start="16:18" pos:end="16:18">y</name> <operator pos:start="16:20" pos:end="16:20">+</operator> <name pos:start="16:22" pos:end="16:30"><name pos:start="16:22" pos:end="16:24">dir</name><index pos:start="16:25" pos:end="16:27">[<expr pos:start="16:26" pos:end="16:26"><name pos:start="16:26" pos:end="16:26">i</name></expr>]</index><index pos:start="16:28" pos:end="16:30">[<expr pos:start="16:29" pos:end="16:29"><literal type="number" pos:start="16:29" pos:end="16:29">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="17:9" pos:end="25:9"><if pos:start="17:9" pos:end="25:9">if <condition pos:start="17:12" pos:end="17:62">(<expr pos:start="17:13" pos:end="17:61"><call pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:14">in</name><argument_list pos:start="17:15" pos:end="17:22">(<argument pos:start="17:16" pos:end="17:17"><expr pos:start="17:16" pos:end="17:17"><name pos:start="17:16" pos:end="17:17">tx</name></expr></argument>, <argument pos:start="17:20" pos:end="17:21"><expr pos:start="17:20" pos:end="17:21"><name pos:start="17:20" pos:end="17:21">ty</name></expr></argument>)</argument_list></call> <operator pos:start="17:24" pos:end="17:25">&amp;&amp;</operator> <operator pos:start="17:27" pos:end="17:27">!</operator><name pos:start="17:28" pos:end="17:38"><name pos:start="17:28" pos:end="17:30">vis</name><index pos:start="17:31" pos:end="17:34">[<expr pos:start="17:32" pos:end="17:33"><name pos:start="17:32" pos:end="17:33">tx</name></expr>]</index><index pos:start="17:35" pos:end="17:38">[<expr pos:start="17:36" pos:end="17:37"><name pos:start="17:36" pos:end="17:37">ty</name></expr>]</index></name> <operator pos:start="17:40" pos:end="17:41">&amp;&amp;</operator> <name pos:start="17:43" pos:end="17:54"><name pos:start="17:43" pos:end="17:46">maze</name><index pos:start="17:47" pos:end="17:50">[<expr pos:start="17:48" pos:end="17:49"><name pos:start="17:48" pos:end="17:49">tx</name></expr>]</index><index pos:start="17:51" pos:end="17:54">[<expr pos:start="17:52" pos:end="17:53"><name pos:start="17:52" pos:end="17:53">ty</name></expr>]</index></name> <operator pos:start="17:56" pos:end="17:57">!=</operator> <literal type="char" pos:start="17:59" pos:end="17:61">'#'</literal></expr>)</condition>
        <block pos:start="18:9" pos:end="25:9">{<block_content pos:start="19:13" pos:end="24:13">
            <if_stmt pos:start="19:13" pos:end="24:13"><if pos:start="19:13" pos:end="24:13">if <condition pos:start="19:16" pos:end="19:66">(<expr pos:start="19:17" pos:end="19:65"><call pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:18">in</name><argument_list pos:start="19:19" pos:end="19:26">(<argument pos:start="19:20" pos:end="19:21"><expr pos:start="19:20" pos:end="19:21"><name pos:start="19:20" pos:end="19:21">tx</name></expr></argument>, <argument pos:start="19:24" pos:end="19:25"><expr pos:start="19:24" pos:end="19:25"><name pos:start="19:24" pos:end="19:25">ty</name></expr></argument>)</argument_list></call> <operator pos:start="19:28" pos:end="19:29">&amp;&amp;</operator> <operator pos:start="19:31" pos:end="19:31">!</operator><name pos:start="19:32" pos:end="19:42"><name pos:start="19:32" pos:end="19:34">vis</name><index pos:start="19:35" pos:end="19:38">[<expr pos:start="19:36" pos:end="19:37"><name pos:start="19:36" pos:end="19:37">tx</name></expr>]</index><index pos:start="19:39" pos:end="19:42">[<expr pos:start="19:40" pos:end="19:41"><name pos:start="19:40" pos:end="19:41">ty</name></expr>]</index></name> <operator pos:start="19:44" pos:end="19:45">&amp;&amp;</operator> <name pos:start="19:47" pos:end="19:58"><name pos:start="19:47" pos:end="19:50">maze</name><index pos:start="19:51" pos:end="19:54">[<expr pos:start="19:52" pos:end="19:53"><name pos:start="19:52" pos:end="19:53">tx</name></expr>]</index><index pos:start="19:55" pos:end="19:58">[<expr pos:start="19:56" pos:end="19:57"><name pos:start="19:56" pos:end="19:57">ty</name></expr>]</index></name> <operator pos:start="19:60" pos:end="19:61">!=</operator> <literal type="char" pos:start="19:63" pos:end="19:65">'#'</literal></expr>)</condition>
            <block pos:start="20:13" pos:end="24:13">{<block_content pos:start="21:17" pos:end="23:28">
                <expr_stmt pos:start="21:17" pos:end="21:23"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:17">x</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:22">tx</name></expr>;</expr_stmt>
                <expr_stmt pos:start="22:17" pos:end="22:23"><expr pos:start="22:17" pos:end="22:22"><name pos:start="22:17" pos:end="22:17">y</name> <operator pos:start="22:19" pos:end="22:19">=</operator> <name pos:start="22:21" pos:end="22:22">ty</name></expr>;</expr_stmt>
                <expr_stmt pos:start="23:17" pos:end="23:28"><expr pos:start="23:17" pos:end="23:27"><call pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:19">dfs</name><argument_list pos:start="23:20" pos:end="23:27">(<argument pos:start="23:21" pos:end="23:22"><expr pos:start="23:21" pos:end="23:22"><name pos:start="23:21" pos:end="23:22">tx</name></expr></argument>, <argument pos:start="23:25" pos:end="23:26"><expr pos:start="23:25" pos:end="23:26"><name pos:start="23:25" pos:end="23:26">ty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="28:1" pos:end="51:1"><type pos:start="28:1" pos:end="28:3"><name pos:start="28:1" pos:end="28:3">int</name></type> <name pos:start="28:5" pos:end="28:8">main</name> <parameter_list pos:start="28:10" pos:end="28:11">()</parameter_list>
<block pos:start="29:1" pos:end="51:1">{<block_content pos:start="30:5" pos:end="50:13">
    <expr_stmt pos:start="30:5" pos:end="30:37"><expr pos:start="30:5" pos:end="30:36"><call pos:start="30:5" pos:end="30:36"><name pos:start="30:5" pos:end="30:11">freopen</name><argument_list pos:start="30:12" pos:end="30:36">(<argument pos:start="30:13" pos:end="30:23"><expr pos:start="30:13" pos:end="30:23"><literal type="string" pos:start="30:13" pos:end="30:23">"hiking.in"</literal></expr></argument>, <argument pos:start="30:26" pos:end="30:28"><expr pos:start="30:26" pos:end="30:28"><literal type="string" pos:start="30:26" pos:end="30:28">"r"</literal></expr></argument>, <argument pos:start="30:31" pos:end="30:35"><expr pos:start="30:31" pos:end="30:35"><name pos:start="30:31" pos:end="30:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:39"><expr pos:start="31:5" pos:end="31:38"><call pos:start="31:5" pos:end="31:38"><name pos:start="31:5" pos:end="31:11">freopen</name><argument_list pos:start="31:12" pos:end="31:38">(<argument pos:start="31:13" pos:end="31:24"><expr pos:start="31:13" pos:end="31:24"><literal type="string" pos:start="31:13" pos:end="31:24">"hiking.out"</literal></expr></argument>, <argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><literal type="string" pos:start="31:27" pos:end="31:29">"w"</literal></expr></argument>, <argument pos:start="31:32" pos:end="31:37"><expr pos:start="31:32" pos:end="31:37"><name pos:start="31:32" pos:end="31:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:18"><expr pos:start="32:5" pos:end="32:17"><name pos:start="32:5" pos:end="32:7">cin</name> <operator pos:start="32:9" pos:end="32:10">&gt;&gt;</operator> <name pos:start="32:12" pos:end="32:12">n</name> <operator pos:start="32:14" pos:end="32:15">&gt;&gt;</operator> <name pos:start="32:17" pos:end="32:17">m</name></expr>;</expr_stmt>
    <for pos:start="33:5" pos:end="39:5">for <control pos:start="33:9" pos:end="33:31">(<init pos:start="33:10" pos:end="33:19"><decl pos:start="33:10" pos:end="33:18"><type pos:start="33:10" pos:end="33:12"><name pos:start="33:10" pos:end="33:12">int</name></type> <name pos:start="33:14" pos:end="33:14">i</name> <init pos:start="33:16" pos:end="33:18">= <expr pos:start="33:18" pos:end="33:18"><literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr></init></decl>;</init> <condition pos:start="33:21" pos:end="33:26"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <name pos:start="33:25" pos:end="33:25">n</name></expr>;</condition> <incr pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:28">i</name><operator pos:start="33:29" pos:end="33:30">++</operator></expr></incr>)</control>
    <block pos:start="34:5" pos:end="39:5">{<block_content pos:start="35:9" pos:end="38:9">
        <for pos:start="35:9" pos:end="38:9">for <control pos:start="35:13" pos:end="35:35">(<init pos:start="35:14" pos:end="35:23"><decl pos:start="35:14" pos:end="35:22"><type pos:start="35:14" pos:end="35:16"><name pos:start="35:14" pos:end="35:16">int</name></type> <name pos:start="35:18" pos:end="35:18">j</name> <init pos:start="35:20" pos:end="35:22">= <expr pos:start="35:22" pos:end="35:22"><literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr></init></decl>;</init> <condition pos:start="35:25" pos:end="35:30"><expr pos:start="35:25" pos:end="35:29"><name pos:start="35:25" pos:end="35:25">j</name> <operator pos:start="35:27" pos:end="35:27">&lt;</operator> <name pos:start="35:29" pos:end="35:29">m</name></expr>;</condition> <incr pos:start="35:32" pos:end="35:34"><expr pos:start="35:32" pos:end="35:34"><name pos:start="35:32" pos:end="35:32">j</name><operator pos:start="35:33" pos:end="35:34">++</operator></expr></incr>)</control>
        <block pos:start="36:9" pos:end="38:9">{<block_content pos:start="37:13" pos:end="37:30">
            <expr_stmt pos:start="37:13" pos:end="37:30"><expr pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:15">cin</name> <operator pos:start="37:17" pos:end="37:18">&gt;&gt;</operator> <name pos:start="37:20" pos:end="37:29"><name pos:start="37:20" pos:end="37:23">maze</name><index pos:start="37:24" pos:end="37:26">[<expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">i</name></expr>]</index><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><name pos:start="37:28" pos:end="37:28">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <while pos:start="40:5" pos:end="48:5">while<condition pos:start="40:10" pos:end="40:25">(<expr pos:start="40:11" pos:end="40:24"><name pos:start="40:11" pos:end="40:11">x</name> <operator pos:start="40:13" pos:end="40:13">&gt;</operator> <name pos:start="40:15" pos:end="40:15">n</name> <operator pos:start="40:17" pos:end="40:18">||</operator> <name pos:start="40:20" pos:end="40:20">y</name> <operator pos:start="40:22" pos:end="40:22">&gt;</operator> <name pos:start="40:24" pos:end="40:24">m</name></expr>)</condition>
    <block pos:start="41:5" pos:end="48:5">{<block_content pos:start="42:13" pos:end="46:13">
            <if_stmt pos:start="42:13" pos:end="46:13"><if pos:start="42:13" pos:end="46:13">if <condition pos:start="42:16" pos:end="42:48">(<expr pos:start="42:17" pos:end="42:47"><name pos:start="42:17" pos:end="42:26"><name pos:start="42:17" pos:end="42:20">maze</name><index pos:start="42:21" pos:end="42:23">[<expr pos:start="42:22" pos:end="42:22"><name pos:start="42:22" pos:end="42:22">x</name></expr>]</index><index pos:start="42:24" pos:end="42:26">[<expr pos:start="42:25" pos:end="42:25"><name pos:start="42:25" pos:end="42:25">y</name></expr>]</index></name> <operator pos:start="42:28" pos:end="42:29">==</operator> <literal type="char" pos:start="42:31" pos:end="42:33">'#'</literal> <operator pos:start="42:35" pos:end="42:36">&amp;&amp;</operator> <operator pos:start="42:38" pos:end="42:38">!</operator><name pos:start="42:39" pos:end="42:47"><name pos:start="42:39" pos:end="42:41">vis</name><index pos:start="42:42" pos:end="42:44">[<expr pos:start="42:43" pos:end="42:43"><name pos:start="42:43" pos:end="42:43">x</name></expr>]</index><index pos:start="42:45" pos:end="42:47">[<expr pos:start="42:46" pos:end="42:46"><name pos:start="42:46" pos:end="42:46">y</name></expr>]</index></name></expr>)</condition>
            <block pos:start="43:13" pos:end="46:13">{<block_content pos:start="44:17" pos:end="45:22">
                <expr_stmt pos:start="44:17" pos:end="44:26"><expr pos:start="44:17" pos:end="44:25"><call pos:start="44:17" pos:end="44:25"><name pos:start="44:17" pos:end="44:19">dfs</name><argument_list pos:start="44:20" pos:end="44:25">(<argument pos:start="44:21" pos:end="44:21"><expr pos:start="44:21" pos:end="44:21"><name pos:start="44:21" pos:end="44:21">x</name></expr></argument>, <argument pos:start="44:24" pos:end="44:24"><expr pos:start="44:24" pos:end="44:24"><name pos:start="44:24" pos:end="44:24">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:21"><name pos:start="45:17" pos:end="45:19">ans</name><operator pos:start="45:20" pos:end="45:21">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        
    </block_content>}</block></while>
    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:8">cout</name> <operator pos:start="49:10" pos:end="49:11">&lt;&lt;</operator> <name pos:start="49:13" pos:end="49:15">ans</name> <operator pos:start="49:17" pos:end="49:18">&lt;&lt;</operator> <name pos:start="49:20" pos:end="49:23">endl</name></expr>;</expr_stmt>
    <return pos:start="50:5" pos:end="50:13">return <expr pos:start="50:12" pos:end="50:12"><literal type="number" pos:start="50:12" pos:end="50:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
