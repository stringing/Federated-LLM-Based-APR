<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/354/354.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="17:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:8">cmp</name><parameter_list pos:start="4:9" pos:end="4:21">(<parameter pos:start="4:10" pos:end="4:14"><decl pos:start="4:10" pos:end="4:14"><type pos:start="4:10" pos:end="4:14"><name pos:start="4:10" pos:end="4:12">int</name></type> <name pos:start="4:14" pos:end="4:14">x</name></decl></parameter>,<parameter pos:start="4:16" pos:end="4:20"><decl pos:start="4:16" pos:end="4:20"><type pos:start="4:16" pos:end="4:20"><name pos:start="4:16" pos:end="4:18">int</name></type> <name pos:start="4:20" pos:end="4:20">y</name></decl></parameter>)</parameter_list><block pos:start="4:22" pos:end="17:1">{<block_content pos:start="5:5" pos:end="16:5">
    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">sum</name><init pos:start="5:12" pos:end="5:13">=<expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>,<decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:17">num</name><init pos:start="5:18" pos:end="5:19">=<expr pos:start="5:19" pos:end="5:19"><literal type="number" pos:start="5:19" pos:end="5:19">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="6:5" pos:end="9:5">while<condition pos:start="6:10" pos:end="6:15">(<expr pos:start="6:11" pos:end="6:14"><name pos:start="6:11" pos:end="6:11">x</name><operator pos:start="6:12" pos:end="6:13">&lt;=</operator><literal type="number" pos:start="6:14" pos:end="6:14">0</literal></expr>)</condition><block pos:start="6:16" pos:end="9:5">{<block_content pos:start="7:9" pos:end="8:14">
        <expr_stmt pos:start="7:9" pos:end="7:18"><expr pos:start="7:9" pos:end="7:17"><name pos:start="7:9" pos:end="7:11">sum</name><operator pos:start="7:12" pos:end="7:13">+=</operator><name pos:start="7:14" pos:end="7:14">x</name><operator pos:start="7:15" pos:end="7:15">%</operator><literal type="number" pos:start="7:16" pos:end="7:17">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:14"><expr pos:start="8:9" pos:end="8:13"><name pos:start="8:9" pos:end="8:9">x</name><operator pos:start="8:10" pos:end="8:11">/=</operator><literal type="number" pos:start="8:12" pos:end="8:13">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="10:5" pos:end="13:5">while<condition pos:start="10:10" pos:end="10:15">(<expr pos:start="10:11" pos:end="10:14"><name pos:start="10:11" pos:end="10:11">y</name><operator pos:start="10:12" pos:end="10:13">&lt;=</operator><literal type="number" pos:start="10:14" pos:end="10:14">0</literal></expr>)</condition><block pos:start="10:16" pos:end="13:5">{<block_content pos:start="11:9" pos:end="12:14"> 
        <expr_stmt pos:start="11:9" pos:end="11:18"><expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:11">num</name><operator pos:start="11:12" pos:end="11:13">+=</operator><name pos:start="11:14" pos:end="11:14">y</name><operator pos:start="11:15" pos:end="11:15">%</operator><literal type="number" pos:start="11:16" pos:end="11:17">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:14"><expr pos:start="12:9" pos:end="12:13"><name pos:start="12:9" pos:end="12:9">y</name><operator pos:start="12:10" pos:end="12:11">/=</operator><literal type="number" pos:start="12:12" pos:end="12:13">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <if_stmt pos:start="14:5" pos:end="16:5"><if pos:start="14:5" pos:end="16:5">if<condition pos:start="14:7" pos:end="14:18">(<expr pos:start="14:8" pos:end="14:17"><name pos:start="14:8" pos:end="14:10">sum</name> <operator pos:start="14:12" pos:end="14:13">==</operator> <name pos:start="14:15" pos:end="14:17">num</name></expr>)</condition><block pos:start="14:19" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:21">
        <return pos:start="15:9" pos:end="15:21">return <expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:16">x</name> <operator pos:start="15:18" pos:end="15:18">&lt;</operator> <name pos:start="15:20" pos:end="15:20">y</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="18:1" pos:end="30:1"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:8">main</name><parameter_list pos:start="18:9" pos:end="18:10">()</parameter_list><block pos:start="18:11" pos:end="30:1">{<block_content pos:start="19:5" pos:end="29:13">
    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:9">a</name><index pos:start="19:10" pos:end="19:15">[<expr pos:start="19:11" pos:end="19:14"><literal type="number" pos:start="19:11" pos:end="19:14">1001</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="20:5" pos:end="20:10"><decl pos:start="20:5" pos:end="20:9"><type pos:start="20:5" pos:end="20:7"><name pos:start="20:5" pos:end="20:7">int</name></type> <name pos:start="20:9" pos:end="20:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:11"><expr pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:7">cin</name><operator pos:start="21:8" pos:end="21:9">&gt;&gt;</operator><name pos:start="21:10" pos:end="21:10">n</name></expr>;</expr_stmt>
    <for pos:start="22:5" pos:end="24:5">for<control pos:start="22:8" pos:end="22:25">(<init pos:start="22:9" pos:end="22:16"><decl pos:start="22:9" pos:end="22:15"><type pos:start="22:9" pos:end="22:11"><name pos:start="22:9" pos:end="22:11">int</name></type> <name pos:start="22:13" pos:end="22:13">i</name><init pos:start="22:14" pos:end="22:15">=<expr pos:start="22:15" pos:end="22:15"><literal type="number" pos:start="22:15" pos:end="22:15">1</literal></expr></init></decl>;</init><condition pos:start="22:17" pos:end="22:21"><expr pos:start="22:17" pos:end="22:20"><name pos:start="22:17" pos:end="22:17">i</name><operator pos:start="22:18" pos:end="22:19">&lt;=</operator><name pos:start="22:20" pos:end="22:20">n</name></expr>;</condition><incr pos:start="22:22" pos:end="22:24"><expr pos:start="22:22" pos:end="22:24"><name pos:start="22:22" pos:end="22:22">i</name><operator pos:start="22:23" pos:end="22:24">++</operator></expr></incr>)</control><block pos:start="22:26" pos:end="24:5">{<block_content pos:start="23:9" pos:end="23:18">
        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:11">cin</name><operator pos:start="23:12" pos:end="23:13">&gt;&gt;</operator><name pos:start="23:14" pos:end="23:17"><name pos:start="23:14" pos:end="23:14">a</name><index pos:start="23:15" pos:end="23:17">[<expr pos:start="23:16" pos:end="23:16"><name pos:start="23:16" pos:end="23:16">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><call pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:8">sort</name><argument_list pos:start="25:9" pos:end="25:23">(<argument pos:start="25:10" pos:end="25:12"><expr pos:start="25:10" pos:end="25:12"><name pos:start="25:10" pos:end="25:10">a</name><operator pos:start="25:11" pos:end="25:11">+</operator><literal type="number" pos:start="25:12" pos:end="25:12">1</literal></expr></argument>,<argument pos:start="25:14" pos:end="25:18"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">a</name><operator pos:start="25:15" pos:end="25:15">+</operator><name pos:start="25:16" pos:end="25:16">n</name><operator pos:start="25:17" pos:end="25:17">+</operator><literal type="number" pos:start="25:18" pos:end="25:18">1</literal></expr></argument>,<argument pos:start="25:20" pos:end="25:22"><expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="26:5" pos:end="28:5">for<control pos:start="26:8" pos:end="26:25">(<init pos:start="26:9" pos:end="26:16"><decl pos:start="26:9" pos:end="26:15"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:13">i</name><init pos:start="26:14" pos:end="26:15">=<expr pos:start="26:15" pos:end="26:15"><literal type="number" pos:start="26:15" pos:end="26:15">1</literal></expr></init></decl>;</init><condition pos:start="26:17" pos:end="26:21"><expr pos:start="26:17" pos:end="26:20"><name pos:start="26:17" pos:end="26:17">i</name><operator pos:start="26:18" pos:end="26:19">&lt;=</operator><name pos:start="26:20" pos:end="26:20">n</name></expr>;</condition><incr pos:start="26:22" pos:end="26:24"><expr pos:start="26:22" pos:end="26:24"><name pos:start="26:22" pos:end="26:22">i</name><operator pos:start="26:23" pos:end="26:24">++</operator></expr></incr>)</control><block pos:start="26:26" pos:end="28:5">{<block_content pos:start="27:9" pos:end="27:24">
        <expr_stmt pos:start="27:9" pos:end="27:24"><expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:12">cout</name><operator pos:start="27:13" pos:end="27:14">&lt;&lt;</operator><name pos:start="27:15" pos:end="27:18"><name pos:start="27:15" pos:end="27:15">a</name><index pos:start="27:16" pos:end="27:18">[<expr pos:start="27:17" pos:end="27:17"><name pos:start="27:17" pos:end="27:17">i</name></expr>]</index></name><operator pos:start="27:19" pos:end="27:20">&lt;&lt;</operator><literal type="string" pos:start="27:21" pos:end="27:23">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>
</block_content>}</block></function> 

</unit>
