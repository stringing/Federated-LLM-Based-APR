<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1147/1147.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="23:1"><type pos:start="3:1" pos:end="3:4"><name pos:start="3:1" pos:end="3:4">void</name></type> <name pos:start="3:6" pos:end="3:12">process</name><parameter_list pos:start="3:13" pos:end="3:14">()</parameter_list><block pos:start="3:15" pos:end="23:1">{<block_content pos:start="4:5" pos:end="22:24">
    <decl_stmt pos:start="4:5" pos:end="4:16"><decl pos:start="4:5" pos:end="4:15"><type pos:start="4:5" pos:end="4:13"><name pos:start="4:5" pos:end="4:8">long</name> <name pos:start="4:10" pos:end="4:13">long</name></type> <name pos:start="4:15" pos:end="4:15">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:13"><expr pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:7">cin</name> <operator pos:start="5:9" pos:end="5:10">&gt;&gt;</operator> <name pos:start="5:12" pos:end="5:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:19"><decl pos:start="6:5" pos:end="6:18"><type pos:start="6:5" pos:end="6:13"><name pos:start="6:5" pos:end="6:8">long</name> <name pos:start="6:10" pos:end="6:13">long</name></type> <name pos:start="6:15" pos:end="6:18"><name pos:start="6:15" pos:end="6:15">a</name><index pos:start="6:16" pos:end="6:18">[<expr pos:start="6:17" pos:end="6:17"><name pos:start="6:17" pos:end="6:17">n</name></expr>]</index></name></decl>;</decl_stmt>
    <for pos:start="7:5" pos:end="9:5">for<control pos:start="7:8" pos:end="7:28">(<init pos:start="7:9" pos:end="7:18"><decl pos:start="7:9" pos:end="7:17"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">i</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</init><condition pos:start="7:19" pos:end="7:24"><expr pos:start="7:19" pos:end="7:23"><name pos:start="7:19" pos:end="7:19">i</name> <operator pos:start="7:21" pos:end="7:21">&lt;</operator> <name pos:start="7:23" pos:end="7:23">n</name></expr>;</condition><incr pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:25">i</name><operator pos:start="7:26" pos:end="7:27">++</operator></expr></incr>)</control><block pos:start="7:29" pos:end="9:5">{<block_content pos:start="8:9" pos:end="8:20">
        <expr_stmt pos:start="8:9" pos:end="8:20"><expr pos:start="8:9" pos:end="8:19"><name pos:start="8:9" pos:end="8:11">cin</name> <operator pos:start="8:13" pos:end="8:14">&gt;&gt;</operator> <name pos:start="8:16" pos:end="8:19"><name pos:start="8:16" pos:end="8:16">a</name><index pos:start="8:17" pos:end="8:19">[<expr pos:start="8:18" pos:end="8:18"><name pos:start="8:18" pos:end="8:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="10:5" pos:end="10:18"><expr pos:start="10:5" pos:end="10:17"><call pos:start="10:5" pos:end="10:17"><name pos:start="10:5" pos:end="10:8">sort</name><argument_list pos:start="10:9" pos:end="10:17">(<argument pos:start="10:10" pos:end="10:10"><expr pos:start="10:10" pos:end="10:10"><name pos:start="10:10" pos:end="10:10">a</name></expr></argument>,<argument pos:start="10:12" pos:end="10:16"><expr pos:start="10:12" pos:end="10:16"><name pos:start="10:12" pos:end="10:12">a</name> <operator pos:start="10:14" pos:end="10:14">+</operator> <name pos:start="10:16" pos:end="10:16">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:8">long</name> <name pos:start="11:10" pos:end="11:13">long</name></type> <name pos:start="11:15" pos:end="11:17">ans</name> <init pos:start="11:19" pos:end="11:32">= <expr pos:start="11:21" pos:end="11:32"><literal type="number" pos:start="11:21" pos:end="11:21">9</literal> <operator pos:start="11:23" pos:end="11:23">*</operator> <name pos:start="11:25" pos:end="11:32"><name pos:start="11:25" pos:end="11:25">a</name><index pos:start="11:26" pos:end="11:32">[<expr pos:start="11:27" pos:end="11:31"><name pos:start="11:27" pos:end="11:27">n</name> <operator pos:start="11:29" pos:end="11:29">-</operator> <literal type="number" pos:start="11:31" pos:end="11:31">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:17"><expr pos:start="12:5" pos:end="12:16"><name pos:start="12:5" pos:end="12:7">ans</name> <operator pos:start="12:9" pos:end="12:10">+=</operator> <literal type="number" pos:start="12:12" pos:end="12:12">2</literal> <operator pos:start="12:14" pos:end="12:14">*</operator> <name pos:start="12:16" pos:end="12:16">n</name></expr>;</expr_stmt>
    <for pos:start="13:5" pos:end="21:5">for<control pos:start="13:8" pos:end="13:28">(<init pos:start="13:9" pos:end="13:18"><decl pos:start="13:9" pos:end="13:17"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name> <init pos:start="13:15" pos:end="13:17">= <expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr></init></decl>;</init><condition pos:start="13:19" pos:end="13:24"><expr pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:19">i</name> <operator pos:start="13:21" pos:end="13:21">&lt;</operator> <name pos:start="13:23" pos:end="13:23">n</name></expr>;</condition><incr pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><name pos:start="13:25" pos:end="13:25">i</name><operator pos:start="13:26" pos:end="13:27">++</operator></expr></incr>)</control><block pos:start="13:29" pos:end="21:5">{<block_content pos:start="14:9" pos:end="20:9">
        <if_stmt pos:start="14:9" pos:end="20:9"><if pos:start="14:9" pos:end="16:9">if<condition pos:start="14:11" pos:end="14:18">(<expr pos:start="14:12" pos:end="14:17"><name pos:start="14:12" pos:end="14:12">i</name> <operator pos:start="14:14" pos:end="14:15">!=</operator> <literal type="number" pos:start="14:17" pos:end="14:17">0</literal></expr>)</condition><block pos:start="14:19" pos:end="16:9">{<block_content pos:start="15:13" pos:end="15:21">
            <expr_stmt pos:start="15:13" pos:end="15:21"><expr pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:15">ans</name> <operator pos:start="15:17" pos:end="15:18">+=</operator> <literal type="number" pos:start="15:20" pos:end="15:20">3</literal></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="16:10" pos:end="18:9">else if<condition pos:start="16:17" pos:end="16:34">(<expr pos:start="16:18" pos:end="16:33"><name pos:start="16:18" pos:end="16:21"><name pos:start="16:18" pos:end="16:18">a</name><index pos:start="16:19" pos:end="16:21">[<expr pos:start="16:20" pos:end="16:20"><name pos:start="16:20" pos:end="16:20">i</name></expr>]</index></name> <operator pos:start="16:23" pos:end="16:24">!=</operator> <name pos:start="16:26" pos:end="16:33"><name pos:start="16:26" pos:end="16:26">a</name><index pos:start="16:27" pos:end="16:33">[<expr pos:start="16:28" pos:end="16:32"><name pos:start="16:28" pos:end="16:28">i</name> <operator pos:start="16:30" pos:end="16:30">-</operator> <literal type="number" pos:start="16:32" pos:end="16:32">1</literal></expr>]</index></name></expr>)</condition><block pos:start="16:35" pos:end="18:9">{<block_content pos:start="17:13" pos:end="17:21">
            <expr_stmt pos:start="17:13" pos:end="17:21"><expr pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:15">ans</name> <operator pos:start="17:17" pos:end="17:18">+=</operator> <literal type="number" pos:start="17:20" pos:end="17:20">3</literal></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="18:10" pos:end="20:9">else<block pos:start="18:14" pos:end="20:9">{<block_content pos:start="19:13" pos:end="19:21">
            <expr_stmt pos:start="19:13" pos:end="19:21"><expr pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:15">ans</name> <operator pos:start="19:17" pos:end="19:18">+=</operator> <literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="22:5" pos:end="22:24"><expr pos:start="22:5" pos:end="22:23"><name pos:start="22:5" pos:end="22:8">cout</name> <operator pos:start="22:10" pos:end="22:11">&lt;&lt;</operator> <name pos:start="22:13" pos:end="22:15">ans</name> <operator pos:start="22:17" pos:end="22:18">&lt;&lt;</operator> <name pos:start="22:20" pos:end="22:23">endl</name></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="24:1" pos:end="29:1"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:8">main</name><parameter_list pos:start="24:9" pos:end="24:10">()</parameter_list><block pos:start="24:11" pos:end="29:1">{<block_content pos:start="25:5" pos:end="28:13">
    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><call pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:11">freopen</name><argument_list pos:start="25:12" pos:end="25:36">(<argument pos:start="25:13" pos:end="25:25"><expr pos:start="25:13" pos:end="25:25"><literal type="string" pos:start="25:13" pos:end="25:25">"elevator.in"</literal></expr></argument>,<argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><literal type="string" pos:start="25:27" pos:end="25:29">"r"</literal></expr></argument>,<argument pos:start="25:31" pos:end="25:35"><expr pos:start="25:31" pos:end="25:35"><name pos:start="25:31" pos:end="25:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:39"><expr pos:start="26:5" pos:end="26:38"><call pos:start="26:5" pos:end="26:38"><name pos:start="26:5" pos:end="26:11">freopen</name><argument_list pos:start="26:12" pos:end="26:38">(<argument pos:start="26:13" pos:end="26:26"><expr pos:start="26:13" pos:end="26:26"><literal type="string" pos:start="26:13" pos:end="26:26">"elevator.out"</literal></expr></argument>,<argument pos:start="26:28" pos:end="26:30"><expr pos:start="26:28" pos:end="26:30"><literal type="string" pos:start="26:28" pos:end="26:30">"w"</literal></expr></argument>,<argument pos:start="26:32" pos:end="26:37"><expr pos:start="26:32" pos:end="26:37"><name pos:start="26:32" pos:end="26:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:14"><expr pos:start="27:5" pos:end="27:13"><call pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11">process</name><argument_list pos:start="27:12" pos:end="27:13">()</argument_list></call></expr>;</expr_stmt>
    <return pos:start="28:5" pos:end="28:13">return <expr pos:start="28:12" pos:end="28:12"><literal type="number" pos:start="28:12" pos:end="28:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
