<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/341/341.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>

<decl_stmt pos:start="5:1" pos:end="5:21"><decl pos:start="5:1" pos:end="5:20"><type pos:start="5:1" pos:end="5:9"><specifier pos:start="5:1" pos:end="5:5">const</specifier> <name pos:start="5:7" pos:end="5:9">int</name></type> <name pos:start="5:11" pos:end="5:14">MAXN</name> <init pos:start="5:16" pos:end="5:20">= <expr pos:start="5:18" pos:end="5:20"><literal type="number" pos:start="5:18" pos:end="5:20">105</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:24"><decl pos:start="6:1" pos:end="6:23"><type pos:start="6:1" pos:end="6:9"><specifier pos:start="6:1" pos:end="6:5">const</specifier> <name pos:start="6:7" pos:end="6:9">int</name></type> <name pos:start="6:11" pos:end="6:15">MAXTN</name> <init pos:start="6:17" pos:end="6:23">= <expr pos:start="6:19" pos:end="6:23"><literal type="number" pos:start="6:19" pos:end="6:23">20005</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:23"><decl pos:start="7:1" pos:end="7:22"><type pos:start="7:1" pos:end="7:9"><specifier pos:start="7:1" pos:end="7:5">const</specifier> <name pos:start="7:7" pos:end="7:9">int</name></type> <name pos:start="7:11" pos:end="7:14">MAXE</name> <init pos:start="7:16" pos:end="7:22">= <expr pos:start="7:18" pos:end="7:22"><literal type="number" pos:start="7:18" pos:end="7:22">50005</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:9"><decl pos:start="8:1" pos:end="8:5"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:5">n</name></decl>, <decl pos:start="8:8" pos:end="8:8"><type ref="prev" pos:start="8:1" pos:end="8:3"/><name pos:start="8:8" pos:end="8:8">m</name></decl>;</decl_stmt>
<struct pos:start="9:1" pos:end="11:13">struct <name pos:start="9:8" pos:end="9:11">edge</name> <block pos:start="9:13" pos:end="11:1">{<public type="default" pos:start="10:5" pos:end="10:19">
    <decl_stmt pos:start="10:5" pos:end="10:19"><decl pos:start="10:5" pos:end="10:9"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">u</name></decl>, <decl pos:start="10:12" pos:end="10:12"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:12" pos:end="10:12">v</name></decl>, <decl pos:start="10:15" pos:end="10:18"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:15" pos:end="10:18">next</name></decl>;</decl_stmt>
</public>}</block><decl pos:start="11:2" pos:end="11:12"><name pos:start="11:2" pos:end="11:12"><name pos:start="11:2" pos:end="11:2">E</name><index pos:start="11:3" pos:end="11:12">[<expr pos:start="11:4" pos:end="11:11"><name pos:start="11:4" pos:end="11:7">MAXE</name> <operator pos:start="11:9" pos:end="11:9">*</operator> <literal type="number" pos:start="11:11" pos:end="11:11">2</literal></expr>]</index></name></decl>;</struct>
<decl_stmt pos:start="12:1" pos:end="12:25"><decl pos:start="12:1" pos:end="12:19"><type pos:start="12:1" pos:end="12:3"><name pos:start="12:1" pos:end="12:3">int</name></type> <name pos:start="12:5" pos:end="12:19"><name pos:start="12:5" pos:end="12:9">first</name><index pos:start="12:10" pos:end="12:19">[<expr pos:start="12:11" pos:end="12:18"><name pos:start="12:11" pos:end="12:14">MAXE</name> <operator pos:start="12:16" pos:end="12:16">*</operator> <literal type="number" pos:start="12:18" pos:end="12:18">2</literal></expr>]</index></name></decl>, <decl pos:start="12:22" pos:end="12:24"><type ref="prev" pos:start="12:1" pos:end="12:3"/><name pos:start="12:22" pos:end="12:24">tot</name></decl>;</decl_stmt>
<decl_stmt pos:start="13:1" pos:end="13:69"><decl pos:start="13:1" pos:end="13:11"><type pos:start="13:1" pos:end="13:3"><name pos:start="13:1" pos:end="13:3">int</name></type> <name pos:start="13:5" pos:end="13:11">scc_cnt</name></decl>, <decl pos:start="13:14" pos:end="13:23"><type ref="prev" pos:start="13:1" pos:end="13:3"/><name pos:start="13:14" pos:end="13:23"><name pos:start="13:14" pos:end="13:16">dfn</name><index pos:start="13:17" pos:end="13:23">[<expr pos:start="13:18" pos:end="13:22"><name pos:start="13:18" pos:end="13:22">MAXTN</name></expr>]</index></name></decl>, <decl pos:start="13:26" pos:end="13:35"><type ref="prev" pos:start="13:1" pos:end="13:3"/><name pos:start="13:26" pos:end="13:35"><name pos:start="13:26" pos:end="13:28">low</name><index pos:start="13:29" pos:end="13:35">[<expr pos:start="13:30" pos:end="13:34"><name pos:start="13:30" pos:end="13:34">MAXTN</name></expr>]</index></name></decl>, <decl pos:start="13:38" pos:end="13:49"><type ref="prev" pos:start="13:1" pos:end="13:3"/><name pos:start="13:38" pos:end="13:49"><name pos:start="13:38" pos:end="13:42">sccno</name><index pos:start="13:43" pos:end="13:49">[<expr pos:start="13:44" pos:end="13:48"><name pos:start="13:44" pos:end="13:48">MAXTN</name></expr>]</index></name></decl>, <decl pos:start="13:52" pos:end="13:61"><type ref="prev" pos:start="13:1" pos:end="13:3"/><name pos:start="13:52" pos:end="13:61"><name pos:start="13:52" pos:end="13:54">sum</name><index pos:start="13:55" pos:end="13:61">[<expr pos:start="13:56" pos:end="13:60"><name pos:start="13:56" pos:end="13:60">MAXTN</name></expr>]</index></name></decl>, <decl pos:start="13:64" pos:end="13:68"><type ref="prev" pos:start="13:1" pos:end="13:3"/><name pos:start="13:64" pos:end="13:68">times</name></decl>;</decl_stmt>
<decl_stmt pos:start="14:1" pos:end="14:35"><decl pos:start="14:1" pos:end="14:14"><type pos:start="14:1" pos:end="14:3"><name pos:start="14:1" pos:end="14:3">int</name></type> <name pos:start="14:5" pos:end="14:14"><name pos:start="14:5" pos:end="14:7">num</name><index pos:start="14:8" pos:end="14:14">[<expr pos:start="14:9" pos:end="14:13"><name pos:start="14:9" pos:end="14:13">MAXTN</name></expr>]</index></name></decl>, <decl pos:start="14:17" pos:end="14:28"><type ref="prev" pos:start="14:1" pos:end="14:3"/><name pos:start="14:17" pos:end="14:28"><name pos:start="14:17" pos:end="14:21">write</name><index pos:start="14:22" pos:end="14:28">[<expr pos:start="14:23" pos:end="14:27"><name pos:start="14:23" pos:end="14:27">MAXTN</name></expr>]</index></name></decl>, <decl pos:start="14:31" pos:end="14:34"><type ref="prev" pos:start="14:1" pos:end="14:3"/><name pos:start="14:31" pos:end="14:34">wcnt</name></decl>;</decl_stmt>
<decl_stmt pos:start="15:1" pos:end="15:21"><decl pos:start="15:1" pos:end="15:20"><type pos:start="15:1" pos:end="15:4"><name pos:start="15:1" pos:end="15:4">char</name></type> <name pos:start="15:6" pos:end="15:20"><name pos:start="15:6" pos:end="15:8">Map</name><index pos:start="15:9" pos:end="15:14">[<expr pos:start="15:10" pos:end="15:13"><name pos:start="15:10" pos:end="15:13">MAXN</name></expr>]</index><index pos:start="15:15" pos:end="15:20">[<expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">MAXN</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="16:1" pos:end="16:33"><decl pos:start="16:1" pos:end="16:12"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:12"><name pos:start="16:5" pos:end="16:5">r</name><index pos:start="16:6" pos:end="16:12">[<expr pos:start="16:7" pos:end="16:11"><name pos:start="16:7" pos:end="16:11">MAXTN</name></expr>]</index></name></decl>, <decl pos:start="16:15" pos:end="16:22"><type ref="prev" pos:start="16:1" pos:end="16:3"/><name pos:start="16:15" pos:end="16:22"><name pos:start="16:15" pos:end="16:15">c</name><index pos:start="16:16" pos:end="16:22">[<expr pos:start="16:17" pos:end="16:21"><name pos:start="16:17" pos:end="16:21">MAXTN</name></expr>]</index></name></decl>, <decl pos:start="16:25" pos:end="16:32"><type ref="prev" pos:start="16:1" pos:end="16:3"/><name pos:start="16:25" pos:end="16:32"><name pos:start="16:25" pos:end="16:25">f</name><index pos:start="16:26" pos:end="16:32">[<expr pos:start="16:27" pos:end="16:31"><name pos:start="16:27" pos:end="16:31">MAXTN</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="17:1" pos:end="17:13"><decl pos:start="17:1" pos:end="17:12"><type pos:start="17:1" pos:end="17:10"><name pos:start="17:1" pos:end="17:10"><name pos:start="17:1" pos:end="17:5">stack</name><argument_list type="generic" pos:start="17:6" pos:end="17:10">&lt;<argument pos:start="17:7" pos:end="17:9"><expr pos:start="17:7" pos:end="17:9"><name pos:start="17:7" pos:end="17:9">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="17:12" pos:end="17:12">S</name></decl>;</decl_stmt>
<decl_stmt pos:start="18:1" pos:end="18:13"><decl pos:start="18:1" pos:end="18:12"><type pos:start="18:1" pos:end="18:10"><name pos:start="18:1" pos:end="18:10"><name pos:start="18:1" pos:end="18:5">queue</name><argument_list type="generic" pos:start="18:6" pos:end="18:10">&lt;<argument pos:start="18:7" pos:end="18:9"><expr pos:start="18:7" pos:end="18:9"><name pos:start="18:7" pos:end="18:9">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="18:12" pos:end="18:12">q</name></decl>;</decl_stmt>
<decl_stmt pos:start="19:1" pos:end="19:23"><decl pos:start="19:1" pos:end="19:22"><type pos:start="19:1" pos:end="19:11"><name pos:start="19:1" pos:end="19:11"><name pos:start="19:1" pos:end="19:6">vector</name><argument_list type="generic" pos:start="19:7" pos:end="19:11">&lt;<argument pos:start="19:8" pos:end="19:10"><expr pos:start="19:8" pos:end="19:10"><name pos:start="19:8" pos:end="19:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:15">Adj</name><index pos:start="19:16" pos:end="19:22">[<expr pos:start="19:17" pos:end="19:21"><name pos:start="19:17" pos:end="19:21">MAXTN</name></expr>]</index></name></decl>;</decl_stmt>

<function pos:start="21:1" pos:end="26:1"><type pos:start="21:1" pos:end="21:4"><name pos:start="21:1" pos:end="21:4">void</name></type> <name pos:start="21:6" pos:end="21:8">add</name><parameter_list pos:start="21:9" pos:end="21:22">(<parameter pos:start="21:10" pos:end="21:14"><decl pos:start="21:10" pos:end="21:14"><type pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:12">int</name></type> <name pos:start="21:14" pos:end="21:14">u</name></decl></parameter>, <parameter pos:start="21:17" pos:end="21:21"><decl pos:start="21:17" pos:end="21:21"><type pos:start="21:17" pos:end="21:21"><name pos:start="21:17" pos:end="21:19">int</name></type> <name pos:start="21:21" pos:end="21:21">v</name></decl></parameter>)</parameter_list> <block pos:start="21:24" pos:end="26:1">{<block_content pos:start="22:5" pos:end="25:19">
    <expr_stmt pos:start="22:5" pos:end="22:19"><expr pos:start="22:5" pos:end="22:18"><name pos:start="22:5" pos:end="22:12"><name pos:start="22:5" pos:end="22:5">E</name><index pos:start="22:6" pos:end="22:12">[<expr pos:start="22:7" pos:end="22:11"><operator pos:start="22:7" pos:end="22:8">++</operator><name pos:start="22:9" pos:end="22:11">tot</name></expr>]</index></name><operator pos:start="22:13" pos:end="22:13">.</operator><name pos:start="22:14" pos:end="22:14">u</name> <operator pos:start="22:16" pos:end="22:16">=</operator> <name pos:start="22:18" pos:end="22:18">u</name></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:5">E</name><index pos:start="23:6" pos:end="23:10">[<expr pos:start="23:7" pos:end="23:9"><name pos:start="23:7" pos:end="23:9">tot</name></expr>]</index></name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:12">v</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:16">v</name></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:27"><expr pos:start="24:5" pos:end="24:26"><name pos:start="24:5" pos:end="24:10"><name pos:start="24:5" pos:end="24:5">E</name><index pos:start="24:6" pos:end="24:10">[<expr pos:start="24:7" pos:end="24:9"><name pos:start="24:7" pos:end="24:9">tot</name></expr>]</index></name><operator pos:start="24:11" pos:end="24:11">.</operator><name pos:start="24:12" pos:end="24:15">next</name> <operator pos:start="24:17" pos:end="24:17">=</operator> <name pos:start="24:19" pos:end="24:26"><name pos:start="24:19" pos:end="24:23">first</name><index pos:start="24:24" pos:end="24:26">[<expr pos:start="24:25" pos:end="24:25"><name pos:start="24:25" pos:end="24:25">u</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:9">first</name><index pos:start="25:10" pos:end="25:12">[<expr pos:start="25:11" pos:end="25:11"><name pos:start="25:11" pos:end="25:11">u</name></expr>]</index></name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:18">tot</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function pos:start="28:1" pos:end="52:1"><type pos:start="28:1" pos:end="28:4"><name pos:start="28:1" pos:end="28:4">void</name></type> <name pos:start="28:6" pos:end="28:8">dfs</name><parameter_list pos:start="28:9" pos:end="28:15">(<parameter pos:start="28:10" pos:end="28:14"><decl pos:start="28:10" pos:end="28:14"><type pos:start="28:10" pos:end="28:12"><name pos:start="28:10" pos:end="28:12">int</name></type> <name pos:start="28:14" pos:end="28:14">u</name></decl></parameter>)</parameter_list> <block pos:start="28:17" pos:end="52:1">{<block_content pos:start="29:5" pos:end="51:5">
    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:7">dfn</name><index pos:start="29:8" pos:end="29:10">[<expr pos:start="29:9" pos:end="29:9"><name pos:start="29:9" pos:end="29:9">u</name></expr>]</index></name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:19"><name pos:start="29:14" pos:end="29:16">low</name><index pos:start="29:17" pos:end="29:19">[<expr pos:start="29:18" pos:end="29:18"><name pos:start="29:18" pos:end="29:18">u</name></expr>]</index></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <operator pos:start="29:23" pos:end="29:24">++</operator><name pos:start="29:25" pos:end="29:29">times</name></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:14"><expr pos:start="30:5" pos:end="30:13"><call pos:start="30:5" pos:end="30:13"><name pos:start="30:5" pos:end="30:10"><name pos:start="30:5" pos:end="30:5">S</name><operator pos:start="30:6" pos:end="30:6">.</operator><name pos:start="30:7" pos:end="30:10">push</name></name><argument_list pos:start="30:11" pos:end="30:13">(<argument pos:start="30:12" pos:end="30:12"><expr pos:start="30:12" pos:end="30:12"><name pos:start="30:12" pos:end="30:12">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="31:5" pos:end="40:5">for<control pos:start="31:8" pos:end="31:49">(<init pos:start="31:9" pos:end="31:25"><decl pos:start="31:9" pos:end="31:24"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name> <init pos:start="31:15" pos:end="31:24">= <expr pos:start="31:17" pos:end="31:24"><name pos:start="31:17" pos:end="31:24"><name pos:start="31:17" pos:end="31:21">first</name><index pos:start="31:22" pos:end="31:24">[<expr pos:start="31:23" pos:end="31:23"><name pos:start="31:23" pos:end="31:23">u</name></expr>]</index></name></expr></init></decl>;</init> <condition pos:start="31:27" pos:end="31:34"><expr pos:start="31:27" pos:end="31:33"><name pos:start="31:27" pos:end="31:27">i</name> <operator pos:start="31:29" pos:end="31:30">!=</operator> <operator pos:start="31:32" pos:end="31:32">-</operator><literal type="number" pos:start="31:33" pos:end="31:33">1</literal></expr>;</condition> <incr pos:start="31:36" pos:end="31:48"><expr pos:start="31:36" pos:end="31:48"><name pos:start="31:36" pos:end="31:36">i</name> <operator pos:start="31:38" pos:end="31:38">=</operator> <name pos:start="31:40" pos:end="31:43"><name pos:start="31:40" pos:end="31:40">E</name><index pos:start="31:41" pos:end="31:43">[<expr pos:start="31:42" pos:end="31:42"><name pos:start="31:42" pos:end="31:42">i</name></expr>]</index></name><operator pos:start="31:44" pos:end="31:44">.</operator><name pos:start="31:45" pos:end="31:48">next</name></expr></incr>)</control> <block pos:start="31:51" pos:end="40:5">{<block_content pos:start="32:9" pos:end="39:9">
        <decl_stmt pos:start="32:9" pos:end="32:23"><decl pos:start="32:9" pos:end="32:22"><type pos:start="32:9" pos:end="32:11"><name pos:start="32:9" pos:end="32:11">int</name></type> <name pos:start="32:13" pos:end="32:13">v</name> <init pos:start="32:15" pos:end="32:22">= <expr pos:start="32:17" pos:end="32:22"><name pos:start="32:17" pos:end="32:20"><name pos:start="32:17" pos:end="32:17">E</name><index pos:start="32:18" pos:end="32:20">[<expr pos:start="32:19" pos:end="32:19"><name pos:start="32:19" pos:end="32:19">i</name></expr>]</index></name><operator pos:start="32:21" pos:end="32:21">.</operator><name pos:start="32:22" pos:end="32:22">v</name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="36:9">if<condition pos:start="33:11" pos:end="33:23">(<expr pos:start="33:12" pos:end="33:22"><name pos:start="33:12" pos:end="33:17"><name pos:start="33:12" pos:end="33:14">dfn</name><index pos:start="33:15" pos:end="33:17">[<expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">v</name></expr>]</index></name> <operator pos:start="33:19" pos:end="33:20">==</operator> <literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr>)</condition> <block pos:start="33:25" pos:end="36:9">{<block_content pos:start="34:13" pos:end="35:41">
            <expr_stmt pos:start="34:13" pos:end="34:19"><expr pos:start="34:13" pos:end="34:18"><call pos:start="34:13" pos:end="34:18"><name pos:start="34:13" pos:end="34:15">dfs</name><argument_list pos:start="34:16" pos:end="34:18">(<argument pos:start="34:17" pos:end="34:17"><expr pos:start="34:17" pos:end="34:17"><name pos:start="34:17" pos:end="34:17">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="35:13" pos:end="35:41"><expr pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:15">low</name><index pos:start="35:16" pos:end="35:18">[<expr pos:start="35:17" pos:end="35:17"><name pos:start="35:17" pos:end="35:17">u</name></expr>]</index></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <call pos:start="35:22" pos:end="35:40"><name pos:start="35:22" pos:end="35:24">min</name><argument_list pos:start="35:25" pos:end="35:40">(<argument pos:start="35:26" pos:end="35:31"><expr pos:start="35:26" pos:end="35:31"><name pos:start="35:26" pos:end="35:31"><name pos:start="35:26" pos:end="35:28">low</name><index pos:start="35:29" pos:end="35:31">[<expr pos:start="35:30" pos:end="35:30"><name pos:start="35:30" pos:end="35:30">u</name></expr>]</index></name></expr></argument>, <argument pos:start="35:34" pos:end="35:39"><expr pos:start="35:34" pos:end="35:39"><name pos:start="35:34" pos:end="35:39"><name pos:start="35:34" pos:end="35:36">low</name><index pos:start="35:37" pos:end="35:39">[<expr pos:start="35:38" pos:end="35:38"><name pos:start="35:38" pos:end="35:38">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="37:9" pos:end="39:9">else if<condition pos:start="37:16" pos:end="37:30">(<expr pos:start="37:17" pos:end="37:29"><name pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:21">sccno</name><index pos:start="37:22" pos:end="37:24">[<expr pos:start="37:23" pos:end="37:23"><name pos:start="37:23" pos:end="37:23">v</name></expr>]</index></name> <operator pos:start="37:26" pos:end="37:27">==</operator> <literal type="number" pos:start="37:29" pos:end="37:29">0</literal></expr>)</condition> <block pos:start="37:32" pos:end="39:9">{<block_content pos:start="38:13" pos:end="38:41">
            <expr_stmt pos:start="38:13" pos:end="38:41"><expr pos:start="38:13" pos:end="38:40"><name pos:start="38:13" pos:end="38:18"><name pos:start="38:13" pos:end="38:15">low</name><index pos:start="38:16" pos:end="38:18">[<expr pos:start="38:17" pos:end="38:17"><name pos:start="38:17" pos:end="38:17">u</name></expr>]</index></name> <operator pos:start="38:20" pos:end="38:20">=</operator> <call pos:start="38:22" pos:end="38:40"><name pos:start="38:22" pos:end="38:24">min</name><argument_list pos:start="38:25" pos:end="38:40">(<argument pos:start="38:26" pos:end="38:31"><expr pos:start="38:26" pos:end="38:31"><name pos:start="38:26" pos:end="38:31"><name pos:start="38:26" pos:end="38:28">low</name><index pos:start="38:29" pos:end="38:31">[<expr pos:start="38:30" pos:end="38:30"><name pos:start="38:30" pos:end="38:30">u</name></expr>]</index></name></expr></argument>, <argument pos:start="38:34" pos:end="38:39"><expr pos:start="38:34" pos:end="38:39"><name pos:start="38:34" pos:end="38:39"><name pos:start="38:34" pos:end="38:36">dfn</name><index pos:start="38:37" pos:end="38:39">[<expr pos:start="38:38" pos:end="38:38"><name pos:start="38:38" pos:end="38:38">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="51:5">if<condition pos:start="41:7" pos:end="41:24">(<expr pos:start="41:8" pos:end="41:23"><name pos:start="41:8" pos:end="41:13"><name pos:start="41:8" pos:end="41:10">low</name><index pos:start="41:11" pos:end="41:13">[<expr pos:start="41:12" pos:end="41:12"><name pos:start="41:12" pos:end="41:12">u</name></expr>]</index></name> <operator pos:start="41:15" pos:end="41:16">==</operator> <name pos:start="41:18" pos:end="41:23"><name pos:start="41:18" pos:end="41:20">dfn</name><index pos:start="41:21" pos:end="41:23">[<expr pos:start="41:22" pos:end="41:22"><name pos:start="41:22" pos:end="41:22">u</name></expr>]</index></name></expr>)</condition> <block pos:start="41:26" pos:end="51:5">{<block_content pos:start="42:9" pos:end="50:10">
        <expr_stmt pos:start="42:9" pos:end="42:18"><expr pos:start="42:9" pos:end="42:17"><name pos:start="42:9" pos:end="42:15">scc_cnt</name><operator pos:start="42:16" pos:end="42:17">++</operator></expr>;</expr_stmt>
        <while pos:start="43:9" pos:end="50:10">while<condition pos:start="43:14" pos:end="43:25">(<expr pos:start="43:15" pos:end="43:24"><operator pos:start="43:15" pos:end="43:15">!</operator><call pos:start="43:16" pos:end="43:24"><name pos:start="43:16" pos:end="43:22"><name pos:start="43:16" pos:end="43:16">S</name><operator pos:start="43:17" pos:end="43:17">.</operator><name pos:start="43:18" pos:end="43:22">empty</name></name><argument_list pos:start="43:23" pos:end="43:24">()</argument_list></call></expr>)</condition> <block pos:start="43:27" pos:end="50:10">{<block_content pos:start="44:13" pos:end="49:22">
            <decl_stmt pos:start="44:13" pos:end="44:28"><decl pos:start="44:13" pos:end="44:27"><type pos:start="44:13" pos:end="44:15"><name pos:start="44:13" pos:end="44:15">int</name></type> <name pos:start="44:17" pos:end="44:17">x</name> <init pos:start="44:19" pos:end="44:27">= <expr pos:start="44:21" pos:end="44:27"><call pos:start="44:21" pos:end="44:27"><name pos:start="44:21" pos:end="44:25"><name pos:start="44:21" pos:end="44:21">S</name><operator pos:start="44:22" pos:end="44:22">.</operator><name pos:start="44:23" pos:end="44:25">top</name></name><argument_list pos:start="44:26" pos:end="44:27">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="45:13" pos:end="45:20"><expr pos:start="45:13" pos:end="45:19"><call pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:17"><name pos:start="45:13" pos:end="45:13">S</name><operator pos:start="45:14" pos:end="45:14">.</operator><name pos:start="45:15" pos:end="45:17">pop</name></name><argument_list pos:start="45:18" pos:end="45:19">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="46:13" pos:end="46:31"><expr pos:start="46:13" pos:end="46:30"><name pos:start="46:13" pos:end="46:20"><name pos:start="46:13" pos:end="46:17">sccno</name><index pos:start="46:18" pos:end="46:20">[<expr pos:start="46:19" pos:end="46:19"><name pos:start="46:19" pos:end="46:19">x</name></expr>]</index></name> <operator pos:start="46:22" pos:end="46:22">=</operator> <name pos:start="46:24" pos:end="46:30">scc_cnt</name></expr>;</expr_stmt>
            <expr_stmt pos:start="47:13" pos:end="47:35"><expr pos:start="47:13" pos:end="47:34"><name pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:15">sum</name><index pos:start="47:16" pos:end="47:24">[<expr pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:23">scc_cnt</name></expr>]</index></name> <operator pos:start="47:26" pos:end="47:27">+=</operator> <name pos:start="47:29" pos:end="47:34"><name pos:start="47:29" pos:end="47:31">num</name><index pos:start="47:32" pos:end="47:34">[<expr pos:start="47:33" pos:end="47:33"><name pos:start="47:33" pos:end="47:33">x</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="48:13" pos:end="49:22"><if pos:start="48:13" pos:end="49:22">if<condition pos:start="48:15" pos:end="48:22">(<expr pos:start="48:16" pos:end="48:21"><name pos:start="48:16" pos:end="48:16">x</name> <operator pos:start="48:18" pos:end="48:19">==</operator> <name pos:start="48:21" pos:end="48:21">u</name></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:22"><block_content pos:start="49:17" pos:end="49:22">
                <break pos:start="49:17" pos:end="49:22">break;</break></block_content></block></if></if_stmt>
         </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function pos:start="54:1" pos:end="112:1"><type pos:start="54:1" pos:end="54:3"><name pos:start="54:1" pos:end="54:3">int</name></type> <name pos:start="54:5" pos:end="54:8">main</name><parameter_list pos:start="54:9" pos:end="54:10">()</parameter_list> <block pos:start="54:12" pos:end="112:1">{<block_content pos:start="55:5" pos:end="111:13">
    <expr_stmt pos:start="55:5" pos:end="55:37"><expr pos:start="55:5" pos:end="55:36"><call pos:start="55:5" pos:end="55:36"><name pos:start="55:5" pos:end="55:10">memset</name><argument_list pos:start="55:11" pos:end="55:36">(<argument pos:start="55:12" pos:end="55:16"><expr pos:start="55:12" pos:end="55:16"><name pos:start="55:12" pos:end="55:16">first</name></expr></argument>, <argument pos:start="55:19" pos:end="55:20"><expr pos:start="55:19" pos:end="55:20"><operator pos:start="55:19" pos:end="55:19">-</operator><literal type="number" pos:start="55:20" pos:end="55:20">1</literal></expr></argument>, <argument pos:start="55:23" pos:end="55:35"><expr pos:start="55:23" pos:end="55:35"><sizeof pos:start="55:23" pos:end="55:35">sizeof<argument_list pos:start="55:29" pos:end="55:35">(<argument pos:start="55:30" pos:end="55:34"><expr pos:start="55:30" pos:end="55:34"><name pos:start="55:30" pos:end="55:34">first</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="56:5" pos:end="56:18"><expr pos:start="56:5" pos:end="56:17"><name pos:start="56:5" pos:end="56:7">cin</name> <operator pos:start="56:9" pos:end="56:10">&gt;&gt;</operator> <name pos:start="56:12" pos:end="56:12">n</name> <operator pos:start="56:14" pos:end="56:15">&gt;&gt;</operator> <name pos:start="56:17" pos:end="56:17">m</name></expr>;</expr_stmt>
    <for pos:start="57:5" pos:end="59:29">for<control pos:start="57:8" pos:end="57:30">(<init pos:start="57:9" pos:end="57:18"><decl pos:start="57:9" pos:end="57:17"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:13">i</name> <init pos:start="57:15" pos:end="57:17">= <expr pos:start="57:17" pos:end="57:17"><literal type="number" pos:start="57:17" pos:end="57:17">0</literal></expr></init></decl>;</init> <condition pos:start="57:20" pos:end="57:25"><expr pos:start="57:20" pos:end="57:24"><name pos:start="57:20" pos:end="57:20">i</name> <operator pos:start="57:22" pos:end="57:22">&lt;</operator> <name pos:start="57:24" pos:end="57:24">n</name></expr>;</condition> <incr pos:start="57:27" pos:end="57:29"><expr pos:start="57:27" pos:end="57:29"><name pos:start="57:27" pos:end="57:27">i</name><operator pos:start="57:28" pos:end="57:29">++</operator></expr></incr>)</control><block type="pseudo" pos:start="58:9" pos:end="59:29"><block_content pos:start="58:9" pos:end="59:29">
        <for pos:start="58:9" pos:end="59:29">for<control pos:start="58:12" pos:end="58:34">(<init pos:start="58:13" pos:end="58:22"><decl pos:start="58:13" pos:end="58:21"><type pos:start="58:13" pos:end="58:15"><name pos:start="58:13" pos:end="58:15">int</name></type> <name pos:start="58:17" pos:end="58:17">j</name> <init pos:start="58:19" pos:end="58:21">= <expr pos:start="58:21" pos:end="58:21"><literal type="number" pos:start="58:21" pos:end="58:21">0</literal></expr></init></decl>;</init> <condition pos:start="58:24" pos:end="58:29"><expr pos:start="58:24" pos:end="58:28"><name pos:start="58:24" pos:end="58:24">j</name> <operator pos:start="58:26" pos:end="58:26">&lt;</operator> <name pos:start="58:28" pos:end="58:28">m</name></expr>;</condition> <incr pos:start="58:31" pos:end="58:33"><expr pos:start="58:31" pos:end="58:33"><name pos:start="58:31" pos:end="58:31">j</name><operator pos:start="58:32" pos:end="58:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:13" pos:end="59:29"><block_content pos:start="59:13" pos:end="59:29">
            <expr_stmt pos:start="59:13" pos:end="59:29"><expr pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:15">cin</name> <operator pos:start="59:17" pos:end="59:18">&gt;&gt;</operator> <name pos:start="59:20" pos:end="59:28"><name pos:start="59:20" pos:end="59:22">Map</name><index pos:start="59:23" pos:end="59:25">[<expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">i</name></expr>]</index><index pos:start="59:26" pos:end="59:28">[<expr pos:start="59:27" pos:end="59:27"><name pos:start="59:27" pos:end="59:27">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>
    <for pos:start="60:5" pos:end="77:5">for<control pos:start="60:8" pos:end="60:30">(<init pos:start="60:9" pos:end="60:18"><decl pos:start="60:9" pos:end="60:17"><type pos:start="60:9" pos:end="60:11"><name pos:start="60:9" pos:end="60:11">int</name></type> <name pos:start="60:13" pos:end="60:13">i</name> <init pos:start="60:15" pos:end="60:17">= <expr pos:start="60:17" pos:end="60:17"><literal type="number" pos:start="60:17" pos:end="60:17">0</literal></expr></init></decl>;</init> <condition pos:start="60:20" pos:end="60:25"><expr pos:start="60:20" pos:end="60:24"><name pos:start="60:20" pos:end="60:20">i</name> <operator pos:start="60:22" pos:end="60:22">&lt;</operator> <name pos:start="60:24" pos:end="60:24">n</name></expr>;</condition> <incr pos:start="60:27" pos:end="60:29"><expr pos:start="60:27" pos:end="60:29"><name pos:start="60:27" pos:end="60:27">i</name><operator pos:start="60:28" pos:end="60:29">++</operator></expr></incr>)</control> <block pos:start="60:32" pos:end="77:5">{<block_content pos:start="61:9" pos:end="76:9">
        <for pos:start="61:9" pos:end="76:9">for<control pos:start="61:12" pos:end="61:34">(<init pos:start="61:13" pos:end="61:22"><decl pos:start="61:13" pos:end="61:21"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:17">j</name> <init pos:start="61:19" pos:end="61:21">= <expr pos:start="61:21" pos:end="61:21"><literal type="number" pos:start="61:21" pos:end="61:21">0</literal></expr></init></decl>;</init> <condition pos:start="61:24" pos:end="61:29"><expr pos:start="61:24" pos:end="61:28"><name pos:start="61:24" pos:end="61:24">j</name> <operator pos:start="61:26" pos:end="61:26">&lt;</operator> <name pos:start="61:28" pos:end="61:28">m</name></expr>;</condition> <incr pos:start="61:31" pos:end="61:33"><expr pos:start="61:31" pos:end="61:33"><name pos:start="61:31" pos:end="61:31">j</name><operator pos:start="61:32" pos:end="61:33">++</operator></expr></incr>)</control> <block pos:start="61:36" pos:end="76:9">{<block_content pos:start="62:13" pos:end="75:13">
            <if_stmt pos:start="62:13" pos:end="75:13"><if pos:start="62:13" pos:end="63:35">if<condition pos:start="62:15" pos:end="62:32">(<expr pos:start="62:16" pos:end="62:31"><name pos:start="62:16" pos:end="62:24"><name pos:start="62:16" pos:end="62:18">Map</name><index pos:start="62:19" pos:end="62:21">[<expr pos:start="62:20" pos:end="62:20"><name pos:start="62:20" pos:end="62:20">i</name></expr>]</index><index pos:start="62:22" pos:end="62:24">[<expr pos:start="62:23" pos:end="62:23"><name pos:start="62:23" pos:end="62:23">j</name></expr>]</index></name> <operator pos:start="62:26" pos:end="62:27">==</operator> <literal type="char" pos:start="62:29" pos:end="62:31">'#'</literal></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:35"><block_content pos:start="63:17" pos:end="63:35">
                <expr_stmt pos:start="63:17" pos:end="63:35"><expr pos:start="63:17" pos:end="63:34"><name pos:start="63:17" pos:end="63:30"><name pos:start="63:17" pos:end="63:19">num</name><index pos:start="63:20" pos:end="63:30">[<expr pos:start="63:21" pos:end="63:29"><name pos:start="63:21" pos:end="63:21">i</name> <operator pos:start="63:23" pos:end="63:23">*</operator> <name pos:start="63:25" pos:end="63:25">m</name> <operator pos:start="63:27" pos:end="63:27">+</operator> <name pos:start="63:29" pos:end="63:29">j</name></expr>]</index></name> <operator pos:start="63:32" pos:end="63:32">=</operator> <literal type="number" pos:start="63:34" pos:end="63:34">0</literal></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="64:13" pos:end="75:13">else <block pos:start="64:18" pos:end="75:13">{<block_content pos:start="65:17" pos:end="74:50">
                <if_stmt pos:start="65:17" pos:end="70:58"><if pos:start="65:17" pos:end="68:17">if<condition pos:start="65:19" pos:end="65:36">(<expr pos:start="65:20" pos:end="65:35"><name pos:start="65:20" pos:end="65:28"><name pos:start="65:20" pos:end="65:22">Map</name><index pos:start="65:23" pos:end="65:25">[<expr pos:start="65:24" pos:end="65:24"><name pos:start="65:24" pos:end="65:24">i</name></expr>]</index><index pos:start="65:26" pos:end="65:28">[<expr pos:start="65:27" pos:end="65:27"><name pos:start="65:27" pos:end="65:27">j</name></expr>]</index></name> <operator pos:start="65:30" pos:end="65:31">==</operator> <literal type="char" pos:start="65:33" pos:end="65:35">'*'</literal></expr>)</condition> <block pos:start="65:38" pos:end="68:17">{<block_content pos:start="66:21" pos:end="67:39">
                    <expr_stmt pos:start="66:21" pos:end="66:46"><expr pos:start="66:21" pos:end="66:45"><name pos:start="66:21" pos:end="66:33"><name pos:start="66:21" pos:end="66:25">write</name><index pos:start="66:26" pos:end="66:33">[<expr pos:start="66:27" pos:end="66:32"><operator pos:start="66:27" pos:end="66:28">++</operator><name pos:start="66:29" pos:end="66:32">wcnt</name></expr>]</index></name> <operator pos:start="66:35" pos:end="66:35">=</operator> <name pos:start="66:37" pos:end="66:37">i</name> <operator pos:start="66:39" pos:end="66:39">*</operator> <name pos:start="66:41" pos:end="66:41">m</name> <operator pos:start="66:43" pos:end="66:43">+</operator> <name pos:start="66:45" pos:end="66:45">j</name></expr>;</expr_stmt>  
                    <expr_stmt pos:start="67:21" pos:end="67:39"><expr pos:start="67:21" pos:end="67:38"><name pos:start="67:21" pos:end="67:34"><name pos:start="67:21" pos:end="67:23">num</name><index pos:start="67:24" pos:end="67:34">[<expr pos:start="67:25" pos:end="67:33"><name pos:start="67:25" pos:end="67:25">i</name> <operator pos:start="67:27" pos:end="67:27">*</operator> <name pos:start="67:29" pos:end="67:29">m</name> <operator pos:start="67:31" pos:end="67:31">+</operator> <name pos:start="67:33" pos:end="67:33">j</name></expr>]</index></name> <operator pos:start="67:36" pos:end="67:36">=</operator> <literal type="number" pos:start="67:38" pos:end="67:38">0</literal></expr>;</expr_stmt>
                </block_content>}</block></if>
                <else pos:start="69:17" pos:end="70:58">else<block type="pseudo" pos:start="70:21" pos:end="70:58"><block_content pos:start="70:21" pos:end="70:58">
                    <expr_stmt pos:start="70:21" pos:end="70:58"><expr pos:start="70:21" pos:end="70:57"><name pos:start="70:21" pos:end="70:34"><name pos:start="70:21" pos:end="70:23">num</name><index pos:start="70:24" pos:end="70:34">[<expr pos:start="70:25" pos:end="70:33"><name pos:start="70:25" pos:end="70:25">i</name> <operator pos:start="70:27" pos:end="70:27">*</operator> <name pos:start="70:29" pos:end="70:29">m</name> <operator pos:start="70:31" pos:end="70:31">+</operator> <name pos:start="70:33" pos:end="70:33">j</name></expr>]</index></name> <operator pos:start="70:36" pos:end="70:36">=</operator> <call pos:start="70:38" pos:end="70:57"><name pos:start="70:38" pos:end="70:40">int</name><argument_list pos:start="70:41" pos:end="70:57">(<argument pos:start="70:42" pos:end="70:56"><expr pos:start="70:42" pos:end="70:56"><name pos:start="70:42" pos:end="70:50"><name pos:start="70:42" pos:end="70:44">Map</name><index pos:start="70:45" pos:end="70:47">[<expr pos:start="70:46" pos:end="70:46"><name pos:start="70:46" pos:end="70:46">i</name></expr>]</index><index pos:start="70:48" pos:end="70:50">[<expr pos:start="70:49" pos:end="70:49"><name pos:start="70:49" pos:end="70:49">j</name></expr>]</index></name> <operator pos:start="70:52" pos:end="70:52">-</operator> <literal type="char" pos:start="70:54" pos:end="70:56">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                <if_stmt pos:start="71:17" pos:end="72:52"><if pos:start="71:17" pos:end="72:52">if<condition pos:start="71:19" pos:end="71:54">(<expr pos:start="71:20" pos:end="71:53"><name pos:start="71:20" pos:end="71:20">i</name> <operator pos:start="71:22" pos:end="71:23">!=</operator> <name pos:start="71:25" pos:end="71:25">n</name> <operator pos:start="71:27" pos:end="71:27">-</operator> <literal type="number" pos:start="71:29" pos:end="71:29">1</literal> <operator pos:start="71:31" pos:end="71:32">&amp;&amp;</operator> <name pos:start="71:34" pos:end="71:46"><name pos:start="71:34" pos:end="71:36">Map</name><index pos:start="71:37" pos:end="71:43">[<expr pos:start="71:38" pos:end="71:42"><name pos:start="71:38" pos:end="71:38">i</name> <operator pos:start="71:40" pos:end="71:40">+</operator> <literal type="number" pos:start="71:42" pos:end="71:42">1</literal></expr>]</index><index pos:start="71:44" pos:end="71:46">[<expr pos:start="71:45" pos:end="71:45"><name pos:start="71:45" pos:end="71:45">j</name></expr>]</index></name> <operator pos:start="71:48" pos:end="71:49">!=</operator> <literal type="char" pos:start="71:51" pos:end="71:53">'#'</literal></expr>)</condition><block type="pseudo" pos:start="72:21" pos:end="72:52"><block_content pos:start="72:21" pos:end="72:52">
                    <expr_stmt pos:start="72:21" pos:end="72:52"><expr pos:start="72:21" pos:end="72:51"><call pos:start="72:21" pos:end="72:51"><name pos:start="72:21" pos:end="72:23">add</name><argument_list pos:start="72:24" pos:end="72:51">(<argument pos:start="72:25" pos:end="72:33"><expr pos:start="72:25" pos:end="72:33"><name pos:start="72:25" pos:end="72:25">i</name> <operator pos:start="72:27" pos:end="72:27">*</operator> <name pos:start="72:29" pos:end="72:29">m</name> <operator pos:start="72:31" pos:end="72:31">+</operator> <name pos:start="72:33" pos:end="72:33">j</name></expr></argument>, <argument pos:start="72:36" pos:end="72:50"><expr pos:start="72:36" pos:end="72:50"><operator pos:start="72:36" pos:end="72:36">(</operator><name pos:start="72:37" pos:end="72:37">i</name> <operator pos:start="72:39" pos:end="72:39">+</operator> <literal type="number" pos:start="72:41" pos:end="72:41">1</literal><operator pos:start="72:42" pos:end="72:42">)</operator> <operator pos:start="72:44" pos:end="72:44">*</operator> <name pos:start="72:46" pos:end="72:46">m</name> <operator pos:start="72:48" pos:end="72:48">+</operator> <name pos:start="72:50" pos:end="72:50">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <if_stmt pos:start="73:17" pos:end="74:50"><if pos:start="73:17" pos:end="74:50">if<condition pos:start="73:19" pos:end="73:54">(<expr pos:start="73:20" pos:end="73:53"><name pos:start="73:20" pos:end="73:20">j</name> <operator pos:start="73:22" pos:end="73:23">!=</operator> <name pos:start="73:25" pos:end="73:25">m</name> <operator pos:start="73:27" pos:end="73:27">-</operator> <literal type="number" pos:start="73:29" pos:end="73:29">1</literal> <operator pos:start="73:31" pos:end="73:32">&amp;&amp;</operator> <name pos:start="73:34" pos:end="73:46"><name pos:start="73:34" pos:end="73:36">Map</name><index pos:start="73:37" pos:end="73:39">[<expr pos:start="73:38" pos:end="73:38"><name pos:start="73:38" pos:end="73:38">i</name></expr>]</index><index pos:start="73:40" pos:end="73:46">[<expr pos:start="73:41" pos:end="73:45"><name pos:start="73:41" pos:end="73:41">j</name> <operator pos:start="73:43" pos:end="73:43">+</operator> <literal type="number" pos:start="73:45" pos:end="73:45">1</literal></expr>]</index></name> <operator pos:start="73:48" pos:end="73:49">!=</operator> <literal type="char" pos:start="73:51" pos:end="73:53">'#'</literal></expr>)</condition><block type="pseudo" pos:start="74:21" pos:end="74:50"><block_content pos:start="74:21" pos:end="74:50">
                    <expr_stmt pos:start="74:21" pos:end="74:50"><expr pos:start="74:21" pos:end="74:49"><call pos:start="74:21" pos:end="74:49"><name pos:start="74:21" pos:end="74:23">add</name><argument_list pos:start="74:24" pos:end="74:49">(<argument pos:start="74:25" pos:end="74:33"><expr pos:start="74:25" pos:end="74:33"><name pos:start="74:25" pos:end="74:25">i</name> <operator pos:start="74:27" pos:end="74:27">*</operator> <name pos:start="74:29" pos:end="74:29">m</name> <operator pos:start="74:31" pos:end="74:31">+</operator> <name pos:start="74:33" pos:end="74:33">j</name></expr></argument>, <argument pos:start="74:36" pos:end="74:48"><expr pos:start="74:36" pos:end="74:48"><name pos:start="74:36" pos:end="74:36">i</name> <operator pos:start="74:38" pos:end="74:38">*</operator> <name pos:start="74:40" pos:end="74:40">m</name> <operator pos:start="74:42" pos:end="74:42">+</operator> <name pos:start="74:44" pos:end="74:44">j</name> <operator pos:start="74:46" pos:end="74:46">+</operator> <literal type="number" pos:start="74:48" pos:end="74:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="78:5" pos:end="83:5">for<control pos:start="78:8" pos:end="78:34">(<init pos:start="78:9" pos:end="78:18"><decl pos:start="78:9" pos:end="78:17"><type pos:start="78:9" pos:end="78:11"><name pos:start="78:9" pos:end="78:11">int</name></type> <name pos:start="78:13" pos:end="78:13">i</name> <init pos:start="78:15" pos:end="78:17">= <expr pos:start="78:17" pos:end="78:17"><literal type="number" pos:start="78:17" pos:end="78:17">1</literal></expr></init></decl>;</init> <condition pos:start="78:20" pos:end="78:29"><expr pos:start="78:20" pos:end="78:28"><name pos:start="78:20" pos:end="78:20">i</name> <operator pos:start="78:22" pos:end="78:23">&lt;=</operator> <name pos:start="78:25" pos:end="78:28">wcnt</name></expr>;</condition> <incr pos:start="78:31" pos:end="78:33"><expr pos:start="78:31" pos:end="78:33"><name pos:start="78:31" pos:end="78:31">i</name><operator pos:start="78:32" pos:end="78:33">++</operator></expr></incr>)</control> <block pos:start="78:36" pos:end="83:5">{<block_content pos:start="79:9" pos:end="82:37">
        <decl_stmt pos:start="79:9" pos:end="79:17"><decl pos:start="79:9" pos:end="79:13"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:13">x</name></decl>, <decl pos:start="79:16" pos:end="79:16"><type ref="prev" pos:start="79:9" pos:end="79:11"/><name pos:start="79:16" pos:end="79:16">y</name></decl>;</decl_stmt>
        <expr_stmt pos:start="80:9" pos:end="80:22"><expr pos:start="80:9" pos:end="80:21"><name pos:start="80:9" pos:end="80:11">cin</name> <operator pos:start="80:13" pos:end="80:14">&gt;&gt;</operator> <name pos:start="80:16" pos:end="80:16">x</name> <operator pos:start="80:18" pos:end="80:19">&gt;&gt;</operator> <name pos:start="80:21" pos:end="80:21">y</name></expr>;</expr_stmt>
        <if_stmt pos:start="81:9" pos:end="82:37"><if pos:start="81:9" pos:end="82:37">if<condition pos:start="81:11" pos:end="81:28">(<expr pos:start="81:12" pos:end="81:27"><name pos:start="81:12" pos:end="81:20"><name pos:start="81:12" pos:end="81:14">Map</name><index pos:start="81:15" pos:end="81:17">[<expr pos:start="81:16" pos:end="81:16"><name pos:start="81:16" pos:end="81:16">x</name></expr>]</index><index pos:start="81:18" pos:end="81:20">[<expr pos:start="81:19" pos:end="81:19"><name pos:start="81:19" pos:end="81:19">y</name></expr>]</index></name> <operator pos:start="81:22" pos:end="81:23">!=</operator> <literal type="char" pos:start="81:25" pos:end="81:27">'#'</literal></expr>)</condition><block type="pseudo" pos:start="82:13" pos:end="82:37"><block_content pos:start="82:13" pos:end="82:37">
            <expr_stmt pos:start="82:13" pos:end="82:37"><expr pos:start="82:13" pos:end="82:36"><call pos:start="82:13" pos:end="82:36"><name pos:start="82:13" pos:end="82:15">add</name><argument_list pos:start="82:16" pos:end="82:36">(<argument pos:start="82:17" pos:end="82:24"><expr pos:start="82:17" pos:end="82:24"><name pos:start="82:17" pos:end="82:24"><name pos:start="82:17" pos:end="82:21">write</name><index pos:start="82:22" pos:end="82:24">[<expr pos:start="82:23" pos:end="82:23"><name pos:start="82:23" pos:end="82:23">i</name></expr>]</index></name></expr></argument>, <argument pos:start="82:27" pos:end="82:35"><expr pos:start="82:27" pos:end="82:35"><name pos:start="82:27" pos:end="82:27">x</name> <operator pos:start="82:29" pos:end="82:29">*</operator> <name pos:start="82:31" pos:end="82:31">m</name> <operator pos:start="82:33" pos:end="82:33">+</operator> <name pos:start="82:35" pos:end="82:35">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="84:5" pos:end="84:11"><expr pos:start="84:5" pos:end="84:10"><call pos:start="84:5" pos:end="84:10"><name pos:start="84:5" pos:end="84:7">dfs</name><argument_list pos:start="84:8" pos:end="84:10">(<argument pos:start="84:9" pos:end="84:9"><expr pos:start="84:9" pos:end="84:9"><literal type="number" pos:start="84:9" pos:end="84:9">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="85:5" pos:end="94:5">for<control pos:start="85:8" pos:end="85:51">(<init pos:start="85:9" pos:end="85:18"><decl pos:start="85:9" pos:end="85:17"><type pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">int</name></type> <name pos:start="85:13" pos:end="85:13">u</name> <init pos:start="85:15" pos:end="85:17">= <expr pos:start="85:17" pos:end="85:17"><literal type="number" pos:start="85:17" pos:end="85:17">0</literal></expr></init></decl>;</init> <condition pos:start="85:20" pos:end="85:46"><expr pos:start="85:20" pos:end="85:45"><name pos:start="85:20" pos:end="85:20">u</name> <operator pos:start="85:22" pos:end="85:23">&lt;=</operator> <operator pos:start="85:25" pos:end="85:25">(</operator><name pos:start="85:26" pos:end="85:26">n</name> <operator pos:start="85:28" pos:end="85:28">-</operator> <literal type="number" pos:start="85:30" pos:end="85:30">1</literal><operator pos:start="85:31" pos:end="85:31">)</operator> <operator pos:start="85:33" pos:end="85:33">*</operator> <name pos:start="85:35" pos:end="85:35">m</name> <operator pos:start="85:37" pos:end="85:37">+</operator> <operator pos:start="85:39" pos:end="85:39">(</operator><name pos:start="85:40" pos:end="85:40">m</name> <operator pos:start="85:42" pos:end="85:42">-</operator> <literal type="number" pos:start="85:44" pos:end="85:44">1</literal><operator pos:start="85:45" pos:end="85:45">)</operator></expr>;</condition> <incr pos:start="85:48" pos:end="85:50"><expr pos:start="85:48" pos:end="85:50"><name pos:start="85:48" pos:end="85:48">u</name><operator pos:start="85:49" pos:end="85:50">++</operator></expr></incr>)</control> <block pos:start="85:53" pos:end="94:5">{<block_content pos:start="86:9" pos:end="93:9">
        <for pos:start="86:9" pos:end="93:9">for<control pos:start="86:12" pos:end="86:53">(<init pos:start="86:13" pos:end="86:29"><decl pos:start="86:13" pos:end="86:28"><type pos:start="86:13" pos:end="86:15"><name pos:start="86:13" pos:end="86:15">int</name></type> <name pos:start="86:17" pos:end="86:17">j</name> <init pos:start="86:19" pos:end="86:28">= <expr pos:start="86:21" pos:end="86:28"><name pos:start="86:21" pos:end="86:28"><name pos:start="86:21" pos:end="86:25">first</name><index pos:start="86:26" pos:end="86:28">[<expr pos:start="86:27" pos:end="86:27"><name pos:start="86:27" pos:end="86:27">u</name></expr>]</index></name></expr></init></decl>;</init> <condition pos:start="86:31" pos:end="86:38"><expr pos:start="86:31" pos:end="86:37"><name pos:start="86:31" pos:end="86:31">j</name> <operator pos:start="86:33" pos:end="86:34">!=</operator> <operator pos:start="86:36" pos:end="86:36">-</operator><literal type="number" pos:start="86:37" pos:end="86:37">1</literal></expr>;</condition> <incr pos:start="86:40" pos:end="86:52"><expr pos:start="86:40" pos:end="86:52"><name pos:start="86:40" pos:end="86:40">j</name> <operator pos:start="86:42" pos:end="86:42">=</operator> <name pos:start="86:44" pos:end="86:47"><name pos:start="86:44" pos:end="86:44">E</name><index pos:start="86:45" pos:end="86:47">[<expr pos:start="86:46" pos:end="86:46"><name pos:start="86:46" pos:end="86:46">j</name></expr>]</index></name><operator pos:start="86:48" pos:end="86:48">.</operator><name pos:start="86:49" pos:end="86:52">next</name></expr></incr>)</control> <block pos:start="86:55" pos:end="93:9">{<block_content pos:start="87:13" pos:end="92:13">
            <decl_stmt pos:start="87:13" pos:end="87:27"><decl pos:start="87:13" pos:end="87:26"><type pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">int</name></type> <name pos:start="87:17" pos:end="87:17">v</name> <init pos:start="87:19" pos:end="87:26">= <expr pos:start="87:21" pos:end="87:26"><name pos:start="87:21" pos:end="87:24"><name pos:start="87:21" pos:end="87:21">E</name><index pos:start="87:22" pos:end="87:24">[<expr pos:start="87:23" pos:end="87:23"><name pos:start="87:23" pos:end="87:23">j</name></expr>]</index></name><operator pos:start="87:25" pos:end="87:25">.</operator><name pos:start="87:26" pos:end="87:26">v</name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="88:13" pos:end="92:13"><if pos:start="88:13" pos:end="92:13">if<condition pos:start="88:15" pos:end="88:70">(<expr pos:start="88:16" pos:end="88:69"><name pos:start="88:16" pos:end="88:23"><name pos:start="88:16" pos:end="88:20">sccno</name><index pos:start="88:21" pos:end="88:23">[<expr pos:start="88:22" pos:end="88:22"><name pos:start="88:22" pos:end="88:22">u</name></expr>]</index></name> <operator pos:start="88:25" pos:end="88:26">!=</operator> <name pos:start="88:28" pos:end="88:35"><name pos:start="88:28" pos:end="88:32">sccno</name><index pos:start="88:33" pos:end="88:35">[<expr pos:start="88:34" pos:end="88:34"><name pos:start="88:34" pos:end="88:34">v</name></expr>]</index></name> <operator pos:start="88:37" pos:end="88:38">&amp;&amp;</operator> <name pos:start="88:40" pos:end="88:47"><name pos:start="88:40" pos:end="88:44">sccno</name><index pos:start="88:45" pos:end="88:47">[<expr pos:start="88:46" pos:end="88:46"><name pos:start="88:46" pos:end="88:46">u</name></expr>]</index></name> <operator pos:start="88:49" pos:end="88:50">!=</operator> <literal type="number" pos:start="88:52" pos:end="88:52">0</literal> <operator pos:start="88:54" pos:end="88:55">&amp;&amp;</operator> <name pos:start="88:57" pos:end="88:64"><name pos:start="88:57" pos:end="88:61">sccno</name><index pos:start="88:62" pos:end="88:64">[<expr pos:start="88:63" pos:end="88:63"><name pos:start="88:63" pos:end="88:63">v</name></expr>]</index></name> <operator pos:start="88:66" pos:end="88:67">!=</operator> <literal type="number" pos:start="88:69" pos:end="88:69">0</literal></expr>)</condition> <block pos:start="88:72" pos:end="92:13">{<block_content pos:start="89:17" pos:end="91:30">
                <expr_stmt pos:start="89:17" pos:end="89:50"><expr pos:start="89:17" pos:end="89:49"><name pos:start="89:17" pos:end="89:29"><name pos:start="89:17" pos:end="89:19">Adj</name><index pos:start="89:20" pos:end="89:29">[<expr pos:start="89:21" pos:end="89:28"><name pos:start="89:21" pos:end="89:28"><name pos:start="89:21" pos:end="89:25">sccno</name><index pos:start="89:26" pos:end="89:28">[<expr pos:start="89:27" pos:end="89:27"><name pos:start="89:27" pos:end="89:27">u</name></expr>]</index></name></expr>]</index></name><operator pos:start="89:30" pos:end="89:30">.</operator><call pos:start="89:31" pos:end="89:49"><name pos:start="89:31" pos:end="89:39">push_back</name><argument_list pos:start="89:40" pos:end="89:49">(<argument pos:start="89:41" pos:end="89:48"><expr pos:start="89:41" pos:end="89:48"><name pos:start="89:41" pos:end="89:48"><name pos:start="89:41" pos:end="89:45">sccno</name><index pos:start="89:46" pos:end="89:48">[<expr pos:start="89:47" pos:end="89:47"><name pos:start="89:47" pos:end="89:47">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  
                <expr_stmt pos:start="90:17" pos:end="90:30"><expr pos:start="90:17" pos:end="90:29"><name pos:start="90:17" pos:end="90:27"><name pos:start="90:17" pos:end="90:17">r</name><index pos:start="90:18" pos:end="90:27">[<expr pos:start="90:19" pos:end="90:26"><name pos:start="90:19" pos:end="90:26"><name pos:start="90:19" pos:end="90:23">sccno</name><index pos:start="90:24" pos:end="90:26">[<expr pos:start="90:25" pos:end="90:25"><name pos:start="90:25" pos:end="90:25">v</name></expr>]</index></name></expr>]</index></name><operator pos:start="90:28" pos:end="90:29">++</operator></expr>;</expr_stmt>
                <expr_stmt pos:start="91:17" pos:end="91:30"><expr pos:start="91:17" pos:end="91:29"><name pos:start="91:17" pos:end="91:27"><name pos:start="91:17" pos:end="91:17">c</name><index pos:start="91:18" pos:end="91:27">[<expr pos:start="91:19" pos:end="91:26"><name pos:start="91:19" pos:end="91:26"><name pos:start="91:19" pos:end="91:23">sccno</name><index pos:start="91:24" pos:end="91:26">[<expr pos:start="91:25" pos:end="91:25"><name pos:start="91:25" pos:end="91:25">u</name></expr>]</index></name></expr>]</index></name><operator pos:start="91:28" pos:end="91:29">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>   
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="95:5" pos:end="95:21"><expr pos:start="95:5" pos:end="95:20"><call pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:10"><name pos:start="95:5" pos:end="95:5">q</name><operator pos:start="95:6" pos:end="95:6">.</operator><name pos:start="95:7" pos:end="95:10">push</name></name><argument_list pos:start="95:11" pos:end="95:20">(<argument pos:start="95:12" pos:end="95:19"><expr pos:start="95:12" pos:end="95:19"><name pos:start="95:12" pos:end="95:19"><name pos:start="95:12" pos:end="95:16">sccno</name><index pos:start="95:17" pos:end="95:19">[<expr pos:start="95:18" pos:end="95:18"><literal type="number" pos:start="95:18" pos:end="95:18">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while pos:start="96:5" pos:end="109:5">while<condition pos:start="96:10" pos:end="96:21">(<expr pos:start="96:11" pos:end="96:20"><operator pos:start="96:11" pos:end="96:11">!</operator><call pos:start="96:12" pos:end="96:20"><name pos:start="96:12" pos:end="96:18"><name pos:start="96:12" pos:end="96:12">q</name><operator pos:start="96:13" pos:end="96:13">.</operator><name pos:start="96:14" pos:end="96:18">empty</name></name><argument_list pos:start="96:19" pos:end="96:20">()</argument_list></call></expr>)</condition> <block pos:start="96:23" pos:end="109:5">{<block_content pos:start="97:9" pos:end="108:9">
        <decl_stmt pos:start="97:9" pos:end="97:26"><decl pos:start="97:9" pos:end="97:25"><type pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:11">int</name></type> <name pos:start="97:13" pos:end="97:13">u</name> <init pos:start="97:15" pos:end="97:25">= <expr pos:start="97:17" pos:end="97:25"><call pos:start="97:17" pos:end="97:25"><name pos:start="97:17" pos:end="97:23"><name pos:start="97:17" pos:end="97:17">q</name><operator pos:start="97:18" pos:end="97:18">.</operator><name pos:start="97:19" pos:end="97:23">front</name></name><argument_list pos:start="97:24" pos:end="97:25">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="98:9" pos:end="98:16"><expr pos:start="98:9" pos:end="98:15"><call pos:start="98:9" pos:end="98:15"><name pos:start="98:9" pos:end="98:13"><name pos:start="98:9" pos:end="98:9">q</name><operator pos:start="98:10" pos:end="98:10">.</operator><name pos:start="98:11" pos:end="98:13">pop</name></name><argument_list pos:start="98:14" pos:end="98:15">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="99:9" pos:end="99:23"><expr pos:start="99:9" pos:end="99:22"><name pos:start="99:9" pos:end="99:12"><name pos:start="99:9" pos:end="99:9">f</name><index pos:start="99:10" pos:end="99:12">[<expr pos:start="99:11" pos:end="99:11"><name pos:start="99:11" pos:end="99:11">u</name></expr>]</index></name> <operator pos:start="99:14" pos:end="99:15">+=</operator> <name pos:start="99:17" pos:end="99:22"><name pos:start="99:17" pos:end="99:19">sum</name><index pos:start="99:20" pos:end="99:22">[<expr pos:start="99:21" pos:end="99:21"><name pos:start="99:21" pos:end="99:21">u</name></expr>]</index></name></expr>;</expr_stmt>
        <decl_stmt pos:start="100:9" pos:end="100:32"><decl pos:start="100:9" pos:end="100:31"><type pos:start="100:9" pos:end="100:11"><name pos:start="100:9" pos:end="100:11">int</name></type> <name pos:start="100:13" pos:end="100:15">nnn</name> <init pos:start="100:17" pos:end="100:31">= <expr pos:start="100:19" pos:end="100:31"><name pos:start="100:19" pos:end="100:24"><name pos:start="100:19" pos:end="100:21">Adj</name><index pos:start="100:22" pos:end="100:24">[<expr pos:start="100:23" pos:end="100:23"><name pos:start="100:23" pos:end="100:23">u</name></expr>]</index></name><operator pos:start="100:25" pos:end="100:25">.</operator><call pos:start="100:26" pos:end="100:31"><name pos:start="100:26" pos:end="100:29">size</name><argument_list pos:start="100:30" pos:end="100:31">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for pos:start="101:9" pos:end="108:9">for<control pos:start="101:12" pos:end="101:36">(<init pos:start="101:13" pos:end="101:22"><decl pos:start="101:13" pos:end="101:21"><type pos:start="101:13" pos:end="101:15"><name pos:start="101:13" pos:end="101:15">int</name></type> <name pos:start="101:17" pos:end="101:17">j</name> <init pos:start="101:19" pos:end="101:21">= <expr pos:start="101:21" pos:end="101:21"><literal type="number" pos:start="101:21" pos:end="101:21">0</literal></expr></init></decl>;</init> <condition pos:start="101:24" pos:end="101:31"><expr pos:start="101:24" pos:end="101:30"><name pos:start="101:24" pos:end="101:24">j</name> <operator pos:start="101:26" pos:end="101:26">&lt;</operator> <name pos:start="101:28" pos:end="101:30">nnn</name></expr>;</condition> <incr pos:start="101:33" pos:end="101:35"><expr pos:start="101:33" pos:end="101:35"><name pos:start="101:33" pos:end="101:33">j</name><operator pos:start="101:34" pos:end="101:35">++</operator></expr></incr>)</control> <block pos:start="101:38" pos:end="108:9">{<block_content pos:start="102:13" pos:end="107:13">
            <decl_stmt pos:start="102:13" pos:end="102:30"><decl pos:start="102:13" pos:end="102:29"><type pos:start="102:13" pos:end="102:15"><name pos:start="102:13" pos:end="102:15">int</name></type> <name pos:start="102:17" pos:end="102:17">v</name> <init pos:start="102:19" pos:end="102:29">= <expr pos:start="102:21" pos:end="102:29"><name pos:start="102:21" pos:end="102:29"><name pos:start="102:21" pos:end="102:23">Adj</name><index pos:start="102:24" pos:end="102:26">[<expr pos:start="102:25" pos:end="102:25"><name pos:start="102:25" pos:end="102:25">u</name></expr>]</index><index pos:start="102:27" pos:end="102:29">[<expr pos:start="102:28" pos:end="102:28"><name pos:start="102:28" pos:end="102:28">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="103:13" pos:end="103:35"><expr pos:start="103:13" pos:end="103:34"><name pos:start="103:13" pos:end="103:16"><name pos:start="103:13" pos:end="103:13">f</name><index pos:start="103:14" pos:end="103:16">[<expr pos:start="103:15" pos:end="103:15"><name pos:start="103:15" pos:end="103:15">v</name></expr>]</index></name> <operator pos:start="103:18" pos:end="103:18">=</operator> <call pos:start="103:20" pos:end="103:34"><name pos:start="103:20" pos:end="103:22">max</name><argument_list pos:start="103:23" pos:end="103:34">(<argument pos:start="103:24" pos:end="103:27"><expr pos:start="103:24" pos:end="103:27"><name pos:start="103:24" pos:end="103:27"><name pos:start="103:24" pos:end="103:24">f</name><index pos:start="103:25" pos:end="103:27">[<expr pos:start="103:26" pos:end="103:26"><name pos:start="103:26" pos:end="103:26">v</name></expr>]</index></name></expr></argument>, <argument pos:start="103:30" pos:end="103:33"><expr pos:start="103:30" pos:end="103:33"><name pos:start="103:30" pos:end="103:33"><name pos:start="103:30" pos:end="103:30">f</name><index pos:start="103:31" pos:end="103:33">[<expr pos:start="103:32" pos:end="103:32"><name pos:start="103:32" pos:end="103:32">u</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="104:13" pos:end="104:19"><expr pos:start="104:13" pos:end="104:18"><name pos:start="104:13" pos:end="104:16"><name pos:start="104:13" pos:end="104:13">r</name><index pos:start="104:14" pos:end="104:16">[<expr pos:start="104:15" pos:end="104:15"><name pos:start="104:15" pos:end="104:15">v</name></expr>]</index></name><operator pos:start="104:17" pos:end="104:18">--</operator></expr>;</expr_stmt>
            <if_stmt pos:start="105:13" pos:end="107:13"><if pos:start="105:13" pos:end="107:13">if<condition pos:start="105:15" pos:end="105:25">(<expr pos:start="105:16" pos:end="105:24"><name pos:start="105:16" pos:end="105:19"><name pos:start="105:16" pos:end="105:16">r</name><index pos:start="105:17" pos:end="105:19">[<expr pos:start="105:18" pos:end="105:18"><name pos:start="105:18" pos:end="105:18">v</name></expr>]</index></name> <operator pos:start="105:21" pos:end="105:22">==</operator> <literal type="number" pos:start="105:24" pos:end="105:24">0</literal></expr>)</condition> <block pos:start="105:27" pos:end="107:13">{<block_content pos:start="106:17" pos:end="106:26">
                <expr_stmt pos:start="106:17" pos:end="106:26"><expr pos:start="106:17" pos:end="106:25"><call pos:start="106:17" pos:end="106:25"><name pos:start="106:17" pos:end="106:22"><name pos:start="106:17" pos:end="106:17">q</name><operator pos:start="106:18" pos:end="106:18">.</operator><name pos:start="106:19" pos:end="106:22">push</name></name><argument_list pos:start="106:23" pos:end="106:25">(<argument pos:start="106:24" pos:end="106:24"><expr pos:start="106:24" pos:end="106:24"><name pos:start="106:24" pos:end="106:24">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></while>
    <expr_stmt pos:start="110:5" pos:end="110:52"><expr pos:start="110:5" pos:end="110:51"><name pos:start="110:5" pos:end="110:8">cout</name> <operator pos:start="110:10" pos:end="110:11">&lt;&lt;</operator> <name pos:start="110:13" pos:end="110:43"><name pos:start="110:13" pos:end="110:13">f</name><index pos:start="110:14" pos:end="110:43">[<expr pos:start="110:15" pos:end="110:42"><name pos:start="110:15" pos:end="110:42"><name pos:start="110:15" pos:end="110:19">sccno</name><index pos:start="110:20" pos:end="110:42">[<expr pos:start="110:21" pos:end="110:41"><operator pos:start="110:21" pos:end="110:21">(</operator><name pos:start="110:22" pos:end="110:22">n</name> <operator pos:start="110:24" pos:end="110:24">-</operator> <literal type="number" pos:start="110:26" pos:end="110:26">1</literal><operator pos:start="110:27" pos:end="110:27">)</operator> <operator pos:start="110:29" pos:end="110:29">*</operator> <name pos:start="110:31" pos:end="110:31">m</name> <operator pos:start="110:33" pos:end="110:33">+</operator> <operator pos:start="110:35" pos:end="110:35">(</operator><name pos:start="110:36" pos:end="110:36">m</name> <operator pos:start="110:38" pos:end="110:38">-</operator> <literal type="number" pos:start="110:40" pos:end="110:40">1</literal><operator pos:start="110:41" pos:end="110:41">)</operator></expr>]</index></name></expr>]</index></name> <operator pos:start="110:45" pos:end="110:46">&lt;&lt;</operator> <name pos:start="110:48" pos:end="110:51">endl</name></expr>;</expr_stmt>
    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
