<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/493/493.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="25:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list> <block pos:start="3:12" pos:end="25:1">{<block_content pos:start="4:5" pos:end="24:13">
    <expr_stmt pos:start="4:5" pos:end="4:34"><expr pos:start="4:5" pos:end="4:33"><call pos:start="4:5" pos:end="4:33"><name pos:start="4:5" pos:end="4:11">freopen</name><argument_list pos:start="4:12" pos:end="4:33">(<argument pos:start="4:13" pos:end="4:20"><expr pos:start="4:13" pos:end="4:20"><literal type="string" pos:start="4:13" pos:end="4:20">"zip.in"</literal></expr></argument>, <argument pos:start="4:23" pos:end="4:25"><expr pos:start="4:23" pos:end="4:25"><literal type="string" pos:start="4:23" pos:end="4:25">"r"</literal></expr></argument>, <argument pos:start="4:28" pos:end="4:32"><expr pos:start="4:28" pos:end="4:32"><name pos:start="4:28" pos:end="4:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:36"><expr pos:start="5:5" pos:end="5:35"><call pos:start="5:5" pos:end="5:35"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:35">(<argument pos:start="5:13" pos:end="5:21"><expr pos:start="5:13" pos:end="5:21"><literal type="string" pos:start="5:13" pos:end="5:21">"zip.out"</literal></expr></argument>, <argument pos:start="5:24" pos:end="5:26"><expr pos:start="5:24" pos:end="5:26"><literal type="string" pos:start="5:24" pos:end="5:26">"w"</literal></expr></argument>, <argument pos:start="5:29" pos:end="5:34"><expr pos:start="5:29" pos:end="5:34"><name pos:start="5:29" pos:end="5:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:46"><decl pos:start="6:5" pos:end="6:21"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:21"><name pos:start="6:9" pos:end="6:9">a</name><index pos:start="6:10" pos:end="6:15">[<expr pos:start="6:11" pos:end="6:14"><literal type="number" pos:start="6:11" pos:end="6:14">1005</literal></expr>]</index><index pos:start="6:16" pos:end="6:21">[<expr pos:start="6:17" pos:end="6:20"><literal type="number" pos:start="6:17" pos:end="6:20">1005</literal></expr>]</index></name></decl>, <decl pos:start="6:24" pos:end="6:28"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:24" pos:end="6:24">b</name> <init pos:start="6:26" pos:end="6:28">= <expr pos:start="6:28" pos:end="6:28"><literal type="number" pos:start="6:28" pos:end="6:28">0</literal></expr></init></decl>, <decl pos:start="6:31" pos:end="6:31"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:31" pos:end="6:31">n</name></decl>, <decl pos:start="6:34" pos:end="6:38"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:34" pos:end="6:34">i</name> <init pos:start="6:36" pos:end="6:38">= <expr pos:start="6:38" pos:end="6:38"><literal type="number" pos:start="6:38" pos:end="6:38">0</literal></expr></init></decl>, <decl pos:start="6:41" pos:end="6:45"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:41" pos:end="6:41">j</name> <init pos:start="6:43" pos:end="6:45">= <expr pos:start="6:45" pos:end="6:45"><literal type="number" pos:start="6:45" pos:end="6:45">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">string</name></type> <name pos:start="7:12" pos:end="7:12">c</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:13"><expr pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:7">cin</name> <operator pos:start="8:9" pos:end="8:10">&gt;&gt;</operator> <name pos:start="8:12" pos:end="8:12">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:10"><expr pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:5">c</name> <operator pos:start="9:7" pos:end="9:7">=</operator> <name pos:start="9:9" pos:end="9:9">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:21"><expr pos:start="10:5" pos:end="10:20"><name pos:start="10:5" pos:end="10:8">cout</name> <operator pos:start="10:10" pos:end="10:11">&lt;&lt;</operator> <call pos:start="10:13" pos:end="10:20"><name pos:start="10:13" pos:end="10:18"><name pos:start="10:13" pos:end="10:13">c</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:18">size</name></name><argument_list pos:start="10:19" pos:end="10:20">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:5">n</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <call pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:9">c</name><operator pos:start="11:10" pos:end="11:10">.</operator><name pos:start="11:11" pos:end="11:14">size</name></name><argument_list pos:start="11:15" pos:end="11:16">()</argument_list></call></expr>;</expr_stmt>
    <for pos:start="12:5" pos:end="22:5">for <control pos:start="12:9" pos:end="12:31">(<init pos:start="12:10" pos:end="12:19"><decl pos:start="12:10" pos:end="12:18"><type pos:start="12:10" pos:end="12:12"><name pos:start="12:10" pos:end="12:12">int</name></type> <name pos:start="12:14" pos:end="12:14">i</name> <init pos:start="12:16" pos:end="12:18">= <expr pos:start="12:18" pos:end="12:18"><literal type="number" pos:start="12:18" pos:end="12:18">0</literal></expr></init></decl>;</init> <condition pos:start="12:21" pos:end="12:26"><expr pos:start="12:21" pos:end="12:25"><name pos:start="12:21" pos:end="12:21">i</name> <operator pos:start="12:23" pos:end="12:23">&lt;</operator> <name pos:start="12:25" pos:end="12:25">n</name></expr>;</condition> <incr pos:start="12:28" pos:end="12:30"><expr pos:start="12:28" pos:end="12:30"><name pos:start="12:28" pos:end="12:28">i</name><operator pos:start="12:29" pos:end="12:30">++</operator></expr></incr>)</control> <block pos:start="12:33" pos:end="22:5">{<block_content pos:start="13:9" pos:end="21:9">
        <for pos:start="13:9" pos:end="21:9">for <control pos:start="13:13" pos:end="13:35">(<init pos:start="13:14" pos:end="13:23"><decl pos:start="13:14" pos:end="13:22"><type pos:start="13:14" pos:end="13:16"><name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">j</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</init> <condition pos:start="13:25" pos:end="13:30"><expr pos:start="13:25" pos:end="13:29"><name pos:start="13:25" pos:end="13:25">j</name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <name pos:start="13:29" pos:end="13:29">n</name></expr>;</condition> <incr pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:32">j</name><operator pos:start="13:33" pos:end="13:34">++</operator></expr></incr>)</control> <block pos:start="13:37" pos:end="21:9">{<block_content pos:start="14:13" pos:end="20:13">
            <expr_stmt pos:start="14:13" pos:end="14:27"><expr pos:start="14:13" pos:end="14:26"><name pos:start="14:13" pos:end="14:15">cin</name> <operator pos:start="14:17" pos:end="14:18">&gt;&gt;</operator> <name pos:start="14:20" pos:end="14:26"><name pos:start="14:20" pos:end="14:20">a</name><index pos:start="14:21" pos:end="14:23">[<expr pos:start="14:22" pos:end="14:22"><name pos:start="14:22" pos:end="14:22">i</name></expr>]</index><index pos:start="14:24" pos:end="14:26">[<expr pos:start="14:25" pos:end="14:25"><name pos:start="14:25" pos:end="14:25">j</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="15:13" pos:end="20:13"><if pos:start="15:13" pos:end="17:13">if <condition pos:start="15:16" pos:end="15:29">(<expr pos:start="15:17" pos:end="15:28"><name pos:start="15:17" pos:end="15:23"><name pos:start="15:17" pos:end="15:17">a</name><index pos:start="15:18" pos:end="15:20">[<expr pos:start="15:19" pos:end="15:19"><name pos:start="15:19" pos:end="15:19">i</name></expr>]</index><index pos:start="15:21" pos:end="15:23">[<expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">j</name></expr>]</index></name> <operator pos:start="15:25" pos:end="15:26">==</operator> <literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr>)</condition> <block pos:start="15:31" pos:end="17:13">{<block_content pos:start="16:17" pos:end="16:20">
                <expr_stmt pos:start="16:17" pos:end="16:20"><expr pos:start="16:17" pos:end="16:19"><name pos:start="16:17" pos:end="16:17">b</name><operator pos:start="16:18" pos:end="16:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="17:15" pos:end="20:13">else <block pos:start="17:20" pos:end="20:13">{<block_content pos:start="18:17" pos:end="19:22">
                <expr_stmt pos:start="18:17" pos:end="18:33"><expr pos:start="18:17" pos:end="18:32"><name pos:start="18:17" pos:end="18:20">cout</name> <operator pos:start="18:22" pos:end="18:23">&lt;&lt;</operator> <name pos:start="18:25" pos:end="18:25">b</name> <operator pos:start="18:27" pos:end="18:28">&lt;&lt;</operator> <literal type="string" pos:start="18:30" pos:end="18:32">" "</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:21"><name pos:start="19:17" pos:end="19:17">b</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">1</literal></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="23:5" pos:end="23:14"><expr pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:8">cout</name> <operator pos:start="23:10" pos:end="23:11">&lt;&lt;</operator> <name pos:start="23:13" pos:end="23:13">b</name></expr>;</expr_stmt>
    <return pos:start="24:5" pos:end="24:13">return <expr pos:start="24:12" pos:end="24:12"><literal type="number" pos:start="24:12" pos:end="24:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
