<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1092/1092.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:20">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="9:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:11">intcmp</name><parameter_list pos:start="4:12" pos:end="4:25">(<parameter pos:start="4:13" pos:end="4:17"><decl pos:start="4:13" pos:end="4:17"><type pos:start="4:13" pos:end="4:17"><name pos:start="4:13" pos:end="4:15">int</name></type> <name pos:start="4:17" pos:end="4:17">x</name></decl></parameter>, <parameter pos:start="4:20" pos:end="4:24"><decl pos:start="4:20" pos:end="4:24"><type pos:start="4:20" pos:end="4:24"><name pos:start="4:20" pos:end="4:22">int</name></type> <name pos:start="4:24" pos:end="4:24">y</name></decl></parameter>)</parameter_list> <block pos:start="4:27" pos:end="9:1">{<block_content pos:start="5:9" pos:end="8:15">
        <if_stmt pos:start="5:9" pos:end="7:9"><if pos:start="5:9" pos:end="7:9">if<condition pos:start="5:11" pos:end="5:30">(<expr pos:start="5:12" pos:end="5:29"><call pos:start="5:12" pos:end="5:19"><name pos:start="5:12" pos:end="5:17"><name pos:start="5:12" pos:end="5:12">x</name><operator pos:start="5:13" pos:end="5:13">.</operator><name pos:start="5:14" pos:end="5:17">size</name></name><argument_list pos:start="5:18" pos:end="5:19">()</argument_list></call><operator pos:start="5:20" pos:end="5:21">!=</operator><call pos:start="5:22" pos:end="5:29"><name pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:22">y</name><operator pos:start="5:23" pos:end="5:23">.</operator><name pos:start="5:24" pos:end="5:27">size</name></name><argument_list pos:start="5:28" pos:end="5:29">()</argument_list></call></expr>)</condition><block pos:start="5:31" pos:end="7:9">{<block_content pos:start="6:17" pos:end="6:41">
                <return pos:start="6:17" pos:end="6:41">return <expr pos:start="6:24" pos:end="6:40"><call pos:start="6:24" pos:end="6:31"><name pos:start="6:24" pos:end="6:29"><name pos:start="6:24" pos:end="6:24">x</name><operator pos:start="6:25" pos:end="6:25">.</operator><name pos:start="6:26" pos:end="6:29">size</name></name><argument_list pos:start="6:30" pos:end="6:31">()</argument_list></call><operator pos:start="6:32" pos:end="6:32">&lt;</operator><call pos:start="6:33" pos:end="6:40"><name pos:start="6:33" pos:end="6:38"><name pos:start="6:33" pos:end="6:33">y</name><operator pos:start="6:34" pos:end="6:34">.</operator><name pos:start="6:35" pos:end="6:38">size</name></name><argument_list pos:start="6:39" pos:end="6:40">()</argument_list></call></expr>;</return>
        </block_content>}</block></if></if_stmt>
    <return pos:start="8:5" pos:end="8:15">return <expr pos:start="8:12" pos:end="8:14"><name pos:start="8:12" pos:end="8:12">x</name><operator pos:start="8:13" pos:end="8:13">&lt;</operator><name pos:start="8:14" pos:end="8:14">y</name></expr>;</return>
</block_content>}</block></function>

<decl_stmt pos:start="11:1" pos:end="11:13"><decl pos:start="11:1" pos:end="11:12"><type pos:start="11:1" pos:end="11:3"><name pos:start="11:1" pos:end="11:3">int</name></type> <name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:5">a</name><index pos:start="11:6" pos:end="11:12">[<expr pos:start="11:7" pos:end="11:11"><literal type="number" pos:start="11:7" pos:end="11:11">10000</literal></expr>]</index></name></decl>;</decl_stmt>

<function pos:start="13:1" pos:end="25:1"><type pos:start="13:1" pos:end="13:3"><name pos:start="13:1" pos:end="13:3">int</name></type> <name pos:start="13:5" pos:end="13:8">main</name><parameter_list pos:start="13:9" pos:end="13:10">()</parameter_list> <block pos:start="13:12" pos:end="25:1">{<block_content pos:start="14:5" pos:end="24:13">
    <decl_stmt pos:start="14:5" pos:end="14:10"><decl pos:start="14:5" pos:end="14:9"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:13"><expr pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:7">cin</name> <operator pos:start="15:9" pos:end="15:10">&gt;&gt;</operator> <name pos:start="15:12" pos:end="15:12">n</name></expr>;</expr_stmt>
    <for pos:start="16:5" pos:end="18:5">for <control pos:start="16:9" pos:end="16:31">(<init pos:start="16:10" pos:end="16:19"><decl pos:start="16:10" pos:end="16:18"><type pos:start="16:10" pos:end="16:12"><name pos:start="16:10" pos:end="16:12">int</name></type> <name pos:start="16:14" pos:end="16:14">i</name> <init pos:start="16:16" pos:end="16:18">= <expr pos:start="16:18" pos:end="16:18"><literal type="number" pos:start="16:18" pos:end="16:18">0</literal></expr></init></decl>;</init> <condition pos:start="16:21" pos:end="16:26"><expr pos:start="16:21" pos:end="16:25"><name pos:start="16:21" pos:end="16:21">i</name> <operator pos:start="16:23" pos:end="16:23">&lt;</operator> <name pos:start="16:25" pos:end="16:25">n</name></expr>;</condition> <incr pos:start="16:28" pos:end="16:30"><expr pos:start="16:28" pos:end="16:30"><name pos:start="16:28" pos:end="16:28">i</name><operator pos:start="16:29" pos:end="16:30">++</operator></expr></incr>)</control> <block pos:start="16:33" pos:end="18:5">{<block_content pos:start="17:9" pos:end="17:20">
        <expr_stmt pos:start="17:9" pos:end="17:20"><expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:11">cin</name> <operator pos:start="17:13" pos:end="17:14">&gt;&gt;</operator> <name pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:16">a</name><index pos:start="17:17" pos:end="17:19">[<expr pos:start="17:18" pos:end="17:18"><name pos:start="17:18" pos:end="17:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><call pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:8">sort</name><argument_list pos:start="19:9" pos:end="19:26">(<argument pos:start="19:10" pos:end="19:10"><expr pos:start="19:10" pos:end="19:10"><name pos:start="19:10" pos:end="19:10">a</name></expr></argument>, <argument pos:start="19:13" pos:end="19:17"><expr pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:13">a</name> <operator pos:start="19:15" pos:end="19:15">+</operator> <name pos:start="19:17" pos:end="19:17">n</name></expr></argument>, <argument pos:start="19:20" pos:end="19:25"><expr pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:25">intcmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="20:5" pos:end="22:5">for <control pos:start="20:9" pos:end="20:31">(<init pos:start="20:10" pos:end="20:19"><decl pos:start="20:10" pos:end="20:18"><type pos:start="20:10" pos:end="20:12"><name pos:start="20:10" pos:end="20:12">int</name></type> <name pos:start="20:14" pos:end="20:14">i</name> <init pos:start="20:16" pos:end="20:18">= <expr pos:start="20:18" pos:end="20:18"><literal type="number" pos:start="20:18" pos:end="20:18">0</literal></expr></init></decl>;</init> <condition pos:start="20:21" pos:end="20:26"><expr pos:start="20:21" pos:end="20:25"><name pos:start="20:21" pos:end="20:21">i</name> <operator pos:start="20:23" pos:end="20:23">&lt;</operator> <name pos:start="20:25" pos:end="20:25">n</name></expr>;</condition> <incr pos:start="20:28" pos:end="20:30"><expr pos:start="20:28" pos:end="20:30"><name pos:start="20:28" pos:end="20:28">i</name><operator pos:start="20:29" pos:end="20:30">++</operator></expr></incr>)</control> <block pos:start="20:33" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:28">
        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:12">cout</name> <operator pos:start="21:14" pos:end="21:15">&lt;&lt;</operator> <name pos:start="21:17" pos:end="21:20"><name pos:start="21:17" pos:end="21:17">a</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><name pos:start="21:19" pos:end="21:19">i</name></expr>]</index></name> <operator pos:start="21:22" pos:end="21:23">&lt;&lt;</operator> <literal type="string" pos:start="21:25" pos:end="21:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:8">cout</name> <operator pos:start="23:10" pos:end="23:11">&lt;&lt;</operator> <name pos:start="23:13" pos:end="23:16">endl</name></expr>;</expr_stmt>
    <return pos:start="24:5" pos:end="24:13">return <expr pos:start="24:12" pos:end="24:12"><literal type="number" pos:start="24:12" pos:end="24:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
