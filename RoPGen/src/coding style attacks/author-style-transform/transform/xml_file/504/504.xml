<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/504/504.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:16">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="33:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="33:1">{<block_content pos:start="5:5" pos:end="32:13">
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:12">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:19"><expr pos:start="6:5" pos:end="6:18"><call pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:11">getline</name><argument_list pos:start="6:12" pos:end="6:18">(<argument pos:start="6:13" pos:end="6:15"><expr pos:start="6:13" pos:end="6:15"><name pos:start="6:13" pos:end="6:15">cin</name></expr></argument>,<argument pos:start="6:17" pos:end="6:17"><expr pos:start="6:17" pos:end="6:17"><name pos:start="6:17" pos:end="6:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">max</name></decl>,<decl pos:start="7:13" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:15">num</name></decl>,<decl pos:start="7:17" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:18">ma</name></decl>,<decl pos:start="7:20" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:21">nu</name></decl>,<decl pos:start="7:23" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:23">p</name></decl>,<decl pos:start="7:25" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:26">mp</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:10"><expr pos:start="8:5" pos:end="8:9"><name pos:start="8:5" pos:end="8:7">max</name><operator pos:start="8:8" pos:end="8:8">=</operator><literal type="number" pos:start="8:9" pos:end="8:9">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:10"><expr pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:7">num</name><operator pos:start="9:8" pos:end="9:8">=</operator><literal type="number" pos:start="9:9" pos:end="9:9">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:11"><expr pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:7">num</name><operator pos:start="10:8" pos:end="10:9">+=</operator><literal type="number" pos:start="10:10" pos:end="10:10">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:9"><expr pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:6">nu</name><operator pos:start="11:7" pos:end="11:7">=</operator><literal type="number" pos:start="11:8" pos:end="11:8">0</literal></expr>;</expr_stmt>
    <for pos:start="12:5" pos:end="30:5">for<control pos:start="12:8" pos:end="12:34">(<init pos:start="12:9" pos:end="12:18"><decl pos:start="12:9" pos:end="12:17"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">i</name> <init pos:start="12:15" pos:end="12:17">= <expr pos:start="12:17" pos:end="12:17"><literal type="number" pos:start="12:17" pos:end="12:17">1</literal></expr></init></decl>;</init><condition pos:start="12:19" pos:end="12:30"><expr pos:start="12:19" pos:end="12:29"><name pos:start="12:19" pos:end="12:19">i</name> <operator pos:start="12:21" pos:end="12:21">&lt;</operator><call pos:start="12:22" pos:end="12:29"><name pos:start="12:22" pos:end="12:27"><name pos:start="12:22" pos:end="12:22">s</name><operator pos:start="12:23" pos:end="12:23">.</operator><name pos:start="12:24" pos:end="12:27">size</name></name><argument_list pos:start="12:28" pos:end="12:29">()</argument_list></call></expr>;</condition><incr pos:start="12:31" pos:end="12:33"><expr pos:start="12:31" pos:end="12:33"><name pos:start="12:31" pos:end="12:31">i</name><operator pos:start="12:32" pos:end="12:33">++</operator></expr></incr>)</control><block pos:start="12:35" pos:end="30:5">{<block_content pos:start="13:9" pos:end="28:9">
        <if_stmt pos:start="13:9" pos:end="28:9"><if pos:start="13:9" pos:end="16:9">if<condition pos:start="13:11" pos:end="13:22">(<expr pos:start="13:12" pos:end="13:21"><name pos:start="13:12" pos:end="13:15"><name pos:start="13:12" pos:end="13:12">s</name><index pos:start="13:13" pos:end="13:15">[<expr pos:start="13:14" pos:end="13:14"><name pos:start="13:14" pos:end="13:14">i</name></expr>]</index></name><operator pos:start="13:16" pos:end="13:17">!=</operator> <literal type="char" pos:start="13:19" pos:end="13:21">' '</literal></expr>)</condition><block pos:start="13:23" pos:end="16:9">{<block_content pos:start="15:13" pos:end="15:18">
           
            <expr_stmt pos:start="15:13" pos:end="15:18"><expr pos:start="15:13" pos:end="15:17"><name pos:start="15:13" pos:end="15:15">num</name><operator pos:start="15:16" pos:end="15:17">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="16:10" pos:end="28:9">else if<condition pos:start="16:17" pos:end="16:27">(<expr pos:start="16:18" pos:end="16:26"><name pos:start="16:18" pos:end="16:21"><name pos:start="16:18" pos:end="16:18">s</name><index pos:start="16:19" pos:end="16:21">[<expr pos:start="16:20" pos:end="16:20"><name pos:start="16:20" pos:end="16:20">i</name></expr>]</index></name><operator pos:start="16:22" pos:end="16:23">==</operator><literal type="char" pos:start="16:24" pos:end="16:26">' '</literal></expr>)</condition><block pos:start="16:28" pos:end="28:9">{<block_content pos:start="17:13" pos:end="27:13">
            <if_stmt pos:start="17:13" pos:end="27:13"><if pos:start="17:13" pos:end="27:13">if<condition pos:start="17:15" pos:end="17:24">(<expr pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:18">num</name> <operator pos:start="17:20" pos:end="17:20">&gt;</operator><name pos:start="17:21" pos:end="17:23">max</name></expr>)</condition><block pos:start="17:25" pos:end="27:13">{<block_content pos:start="18:17" pos:end="26:21">
                <expr_stmt pos:start="18:17" pos:end="18:26"><expr pos:start="18:17" pos:end="18:25"><name pos:start="18:17" pos:end="18:19">max</name> <operator pos:start="18:21" pos:end="18:21">=</operator> <name pos:start="18:23" pos:end="18:25">num</name></expr>;</expr_stmt>
                <expr_stmt pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:21"><name pos:start="19:17" pos:end="19:18">ma</name><operator pos:start="19:19" pos:end="19:19">=</operator><name pos:start="19:20" pos:end="19:21">nu</name></expr>;</expr_stmt>
                <expr_stmt pos:start="20:17" pos:end="20:22"><expr pos:start="20:17" pos:end="20:21"><name pos:start="20:17" pos:end="20:17">p</name><operator pos:start="20:18" pos:end="20:18">=</operator><name pos:start="20:19" pos:end="20:19">i</name><operator pos:start="20:20" pos:end="20:20">-</operator><literal type="number" pos:start="20:21" pos:end="20:21">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="21:17" pos:end="21:21"><expr pos:start="21:17" pos:end="21:20"><name pos:start="21:17" pos:end="21:18">mp</name><operator pos:start="21:19" pos:end="21:19">=</operator><name pos:start="21:20" pos:end="21:20">p</name></expr>;</expr_stmt>
                <expr_stmt pos:start="22:17" pos:end="22:21"><expr pos:start="22:17" pos:end="22:20"><name pos:start="22:17" pos:end="22:17">i</name><operator pos:start="22:18" pos:end="22:19">+=</operator><literal type="number" pos:start="22:20" pos:end="22:20">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:21"><name pos:start="23:17" pos:end="23:19">num</name><operator pos:start="23:20" pos:end="23:20">=</operator><literal type="number" pos:start="23:21" pos:end="23:21">0</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="24:17" pos:end="24:20"><expr pos:start="24:17" pos:end="24:19"><name pos:start="24:17" pos:end="24:17">p</name><operator pos:start="24:18" pos:end="24:18">=</operator><literal type="number" pos:start="24:19" pos:end="24:19">0</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="25:17" pos:end="25:21"><expr pos:start="25:17" pos:end="25:20"><name pos:start="25:17" pos:end="25:18">nu</name><operator pos:start="25:19" pos:end="25:19">=</operator><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="26:17" pos:end="26:21"><expr pos:start="26:17" pos:end="26:20"><name pos:start="26:17" pos:end="26:18">nu</name><operator pos:start="26:19" pos:end="26:19">=</operator><name pos:start="26:20" pos:end="26:20">i</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        
    </block_content>}</block></for>
    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:8">cout</name> <operator pos:start="31:10" pos:end="31:11">&lt;&lt;</operator> <call pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:20">substr</name></name><argument_list pos:start="31:21" pos:end="31:27">(<argument pos:start="31:22" pos:end="31:23"><expr pos:start="31:22" pos:end="31:23"><name pos:start="31:22" pos:end="31:23">ma</name></expr></argument>,<argument pos:start="31:25" pos:end="31:26"><expr pos:start="31:25" pos:end="31:26"><name pos:start="31:25" pos:end="31:26">mp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="32:5" pos:end="32:13">return <expr pos:start="32:12" pos:end="32:12"><literal type="number" pos:start="32:12" pos:end="32:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
