<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/525/525.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<decl_stmt pos:start="2:1" pos:end="2:30"><decl pos:start="2:1" pos:end="2:15"><type pos:start="2:1" pos:end="2:3"><name pos:start="2:1" pos:end="2:3">int</name></type> <name pos:start="2:5" pos:end="2:15"><name pos:start="2:5" pos:end="2:7">map</name><index pos:start="2:8" pos:end="2:11">[<expr pos:start="2:9" pos:end="2:10"><literal type="number" pos:start="2:9" pos:end="2:10">10</literal></expr>]</index><index pos:start="2:12" pos:end="2:15">[<expr pos:start="2:13" pos:end="2:14"><literal type="number" pos:start="2:13" pos:end="2:14">10</literal></expr>]</index></name></decl>, <decl pos:start="2:18" pos:end="2:22"><type ref="prev" pos:start="2:1" pos:end="2:3"/><name pos:start="2:18" pos:end="2:22"><name pos:start="2:18" pos:end="2:18">b</name><index pos:start="2:19" pos:end="2:22">[<expr pos:start="2:20" pos:end="2:21"><literal type="number" pos:start="2:20" pos:end="2:21">10</literal></expr>]</index></name></decl>, <decl pos:start="2:25" pos:end="2:29"><type ref="prev" pos:start="2:1" pos:end="2:3"/><name pos:start="2:25" pos:end="2:29"><name pos:start="2:25" pos:end="2:25">w</name><index pos:start="2:26" pos:end="2:29">[<expr pos:start="2:27" pos:end="2:28"><literal type="number" pos:start="2:27" pos:end="2:28">10</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="3:1" pos:end="3:11"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>, <decl pos:start="3:8" pos:end="3:10"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:8" pos:end="3:10">num</name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="21:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">void</name></type> <name pos:start="4:6" pos:end="4:10">check</name><parameter_list pos:start="4:11" pos:end="4:19">(<parameter pos:start="4:12" pos:end="4:18"><decl pos:start="4:12" pos:end="4:18"><type pos:start="4:12" pos:end="4:14"><name pos:start="4:12" pos:end="4:14">int</name></type> <name pos:start="4:16" pos:end="4:18">pos</name></decl></parameter>)</parameter_list> <block pos:start="4:21" pos:end="21:1">{<block_content pos:start="5:5" pos:end="20:5">
    <for pos:start="5:5" pos:end="10:5">for<control pos:start="5:8" pos:end="5:36">(<init pos:start="5:9" pos:end="5:18"><decl pos:start="5:9" pos:end="5:17"><type pos:start="5:9" pos:end="5:11"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:13">i</name> <init pos:start="5:15" pos:end="5:17">= <expr pos:start="5:17" pos:end="5:17"><literal type="number" pos:start="5:17" pos:end="5:17">0</literal></expr></init></decl>;</init> <condition pos:start="5:20" pos:end="5:31"><expr pos:start="5:20" pos:end="5:30"><name pos:start="5:20" pos:end="5:20">i</name> <operator pos:start="5:22" pos:end="5:22">&lt;</operator> <name pos:start="5:24" pos:end="5:26">pos</name> <operator pos:start="5:28" pos:end="5:28">-</operator> <literal type="number" pos:start="5:30" pos:end="5:30">1</literal></expr>;</condition> <incr pos:start="5:33" pos:end="5:35"><expr pos:start="5:33" pos:end="5:35"><name pos:start="5:33" pos:end="5:33">i</name><operator pos:start="5:34" pos:end="5:35">++</operator></expr></incr>)</control> <block pos:start="5:38" pos:end="10:5">{<block_content pos:start="6:9" pos:end="9:9">
        <decl_stmt pos:start="6:9" pos:end="6:38"><decl pos:start="6:9" pos:end="6:37"><type pos:start="6:9" pos:end="6:11"><name pos:start="6:9" pos:end="6:11">int</name></type> <name pos:start="6:13" pos:end="6:17">judge</name> <init pos:start="6:19" pos:end="6:37">= <expr pos:start="6:21" pos:end="6:37"><name pos:start="6:21" pos:end="6:30"><name pos:start="6:21" pos:end="6:21">b</name><index pos:start="6:22" pos:end="6:30">[<expr pos:start="6:23" pos:end="6:29"><name pos:start="6:23" pos:end="6:25">pos</name> <operator pos:start="6:27" pos:end="6:27">-</operator> <literal type="number" pos:start="6:29" pos:end="6:29">1</literal></expr>]</index></name> <operator pos:start="6:32" pos:end="6:32">-</operator> <name pos:start="6:34" pos:end="6:37"><name pos:start="6:34" pos:end="6:34">b</name><index pos:start="6:35" pos:end="6:37">[<expr pos:start="6:36" pos:end="6:36"><name pos:start="6:36" pos:end="6:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="7:9" pos:end="9:9"><if pos:start="7:9" pos:end="9:9">if<condition pos:start="7:11" pos:end="7:46">(<expr pos:start="7:12" pos:end="7:45"><name pos:start="7:12" pos:end="7:16">judge</name> <operator pos:start="7:18" pos:end="7:19">==</operator> <literal type="number" pos:start="7:21" pos:end="7:21">0</literal> <operator pos:start="7:23" pos:end="7:24">||</operator> <name pos:start="7:26" pos:end="7:30">judge</name> <operator pos:start="7:32" pos:end="7:33">==</operator> <name pos:start="7:35" pos:end="7:37">pos</name> <operator pos:start="7:39" pos:end="7:39">-</operator> <literal type="number" pos:start="7:41" pos:end="7:43">1</literal> <operator pos:start="7:43" pos:end="7:43">-</operator> <name pos:start="7:45" pos:end="7:45">i</name></expr>)</condition> <block pos:start="7:48" pos:end="9:9">{<block_content pos:start="8:13" pos:end="8:19">
            <return pos:start="8:13" pos:end="8:19">return;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="11:5" pos:end="14:5"><if pos:start="11:5" pos:end="14:5">if<condition pos:start="11:7" pos:end="11:16">(<expr pos:start="11:8" pos:end="11:15"><name pos:start="11:8" pos:end="11:10">pos</name> <operator pos:start="11:12" pos:end="11:13">==</operator> <name pos:start="11:15" pos:end="11:15">n</name></expr>)</condition> <block pos:start="11:18" pos:end="14:5">{<block_content pos:start="12:9" pos:end="13:15">
        <expr_stmt pos:start="12:9" pos:end="12:14"><expr pos:start="12:9" pos:end="12:13"><name pos:start="12:9" pos:end="12:11">num</name><operator pos:start="12:12" pos:end="12:13">++</operator></expr>;</expr_stmt>
        <return pos:start="13:9" pos:end="13:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="15:5" pos:end="20:5">for<control pos:start="15:8" pos:end="15:30">(<init pos:start="15:9" pos:end="15:18"><decl pos:start="15:9" pos:end="15:17"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">i</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</init> <condition pos:start="15:20" pos:end="15:25"><expr pos:start="15:20" pos:end="15:24"><name pos:start="15:20" pos:end="15:20">i</name> <operator pos:start="15:22" pos:end="15:22">&lt;</operator> <name pos:start="15:24" pos:end="15:24">n</name></expr>;</condition> <incr pos:start="15:27" pos:end="15:29"><expr pos:start="15:27" pos:end="15:29"><name pos:start="15:27" pos:end="15:27">i</name><operator pos:start="15:28" pos:end="15:29">++</operator></expr></incr>)</control> <block pos:start="15:32" pos:end="20:5">{<block_content pos:start="16:9" pos:end="19:9">
        <if_stmt pos:start="16:9" pos:end="19:9"><if pos:start="16:9" pos:end="19:9">if<condition pos:start="16:11" pos:end="16:38">(<expr pos:start="16:12" pos:end="16:37"><name pos:start="16:12" pos:end="16:12">i</name> <operator pos:start="16:14" pos:end="16:15">!=</operator> <name pos:start="16:17" pos:end="16:22"><name pos:start="16:17" pos:end="16:17">w</name><index pos:start="16:18" pos:end="16:22">[<expr pos:start="16:19" pos:end="16:21"><name pos:start="16:19" pos:end="16:21">pos</name></expr>]</index></name> <operator pos:start="16:24" pos:end="16:25">&amp;&amp;</operator> <name pos:start="16:27" pos:end="16:37"><name pos:start="16:27" pos:end="16:29">map</name><index pos:start="16:30" pos:end="16:34">[<expr pos:start="16:31" pos:end="16:33"><name pos:start="16:31" pos:end="16:33">pos</name></expr>]</index><index pos:start="16:35" pos:end="16:37">[<expr pos:start="16:36" pos:end="16:36"><name pos:start="16:36" pos:end="16:36">i</name></expr>]</index></name></expr>)</condition> <block pos:start="16:40" pos:end="19:9">{<block_content pos:start="17:13" pos:end="18:27">
            <expr_stmt pos:start="17:13" pos:end="17:23"><expr pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:18"><name pos:start="17:13" pos:end="17:13">b</name><index pos:start="17:14" pos:end="17:18">[<expr pos:start="17:15" pos:end="17:17"><name pos:start="17:15" pos:end="17:17">pos</name></expr>]</index></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:22">i</name></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:27"><expr pos:start="18:13" pos:end="18:26"><call pos:start="18:13" pos:end="18:26"><name pos:start="18:13" pos:end="18:17">check</name><argument_list pos:start="18:18" pos:end="18:26">(<argument pos:start="18:19" pos:end="18:25"><expr pos:start="18:19" pos:end="18:25"><name pos:start="18:19" pos:end="18:21">pos</name> <operator pos:start="18:23" pos:end="18:23">+</operator> <literal type="number" pos:start="18:25" pos:end="18:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="22:1" pos:end="39:1"><type pos:start="22:1" pos:end="22:4"><name pos:start="22:1" pos:end="22:4">void</name></type> <name pos:start="22:6" pos:end="22:8">dfs</name><parameter_list pos:start="22:9" pos:end="22:17">(<parameter pos:start="22:10" pos:end="22:16"><decl pos:start="22:10" pos:end="22:16"><type pos:start="22:10" pos:end="22:12"><name pos:start="22:10" pos:end="22:12">int</name></type> <name pos:start="22:14" pos:end="22:16">pos</name></decl></parameter>)</parameter_list> <block pos:start="22:19" pos:end="39:1">{<block_content pos:start="23:5" pos:end="38:5">
    <for pos:start="23:5" pos:end="28:5">for<control pos:start="23:8" pos:end="23:36">(<init pos:start="23:9" pos:end="23:18"><decl pos:start="23:9" pos:end="23:17"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">i</name> <init pos:start="23:15" pos:end="23:17">= <expr pos:start="23:17" pos:end="23:17"><literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr></init></decl>;</init> <condition pos:start="23:20" pos:end="23:31"><expr pos:start="23:20" pos:end="23:30"><name pos:start="23:20" pos:end="23:20">i</name> <operator pos:start="23:22" pos:end="23:22">&lt;</operator> <name pos:start="23:24" pos:end="23:26">pos</name> <operator pos:start="23:28" pos:end="23:28">-</operator> <literal type="number" pos:start="23:30" pos:end="23:30">1</literal></expr>;</condition> <incr pos:start="23:33" pos:end="23:35"><expr pos:start="23:33" pos:end="23:35"><name pos:start="23:33" pos:end="23:33">i</name><operator pos:start="23:34" pos:end="23:35">++</operator></expr></incr>)</control> <block pos:start="23:38" pos:end="28:5">{<block_content pos:start="24:9" pos:end="27:9">
        <decl_stmt pos:start="24:9" pos:end="24:38"><decl pos:start="24:9" pos:end="24:37"><type pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:11">int</name></type> <name pos:start="24:13" pos:end="24:17">judge</name> <init pos:start="24:19" pos:end="24:37">= <expr pos:start="24:21" pos:end="24:37"><name pos:start="24:21" pos:end="24:30"><name pos:start="24:21" pos:end="24:21">w</name><index pos:start="24:22" pos:end="24:30">[<expr pos:start="24:23" pos:end="24:29"><name pos:start="24:23" pos:end="24:25">pos</name> <operator pos:start="24:27" pos:end="24:27">-</operator> <literal type="number" pos:start="24:29" pos:end="24:29">1</literal></expr>]</index></name> <operator pos:start="24:32" pos:end="24:32">-</operator> <name pos:start="24:34" pos:end="24:37"><name pos:start="24:34" pos:end="24:34">w</name><index pos:start="24:35" pos:end="24:37">[<expr pos:start="24:36" pos:end="24:36"><name pos:start="24:36" pos:end="24:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="25:9" pos:end="27:9"><if pos:start="25:9" pos:end="27:9">if<condition pos:start="25:11" pos:end="25:47">(<expr pos:start="25:12" pos:end="25:46"><name pos:start="25:12" pos:end="25:16">judge</name> <operator pos:start="25:18" pos:end="25:19">==</operator> <literal type="number" pos:start="25:21" pos:end="25:21">0</literal> <operator pos:start="25:23" pos:end="25:24">||</operator> <name pos:start="25:26" pos:end="25:30">judge</name> <operator pos:start="25:32" pos:end="25:33">==</operator> <name pos:start="25:35" pos:end="25:37">pos</name> <operator pos:start="25:39" pos:end="25:39">-</operator>  <literal type="number" pos:start="25:42" pos:end="25:44">1</literal> <operator pos:start="25:44" pos:end="25:44">-</operator> <name pos:start="25:46" pos:end="25:46">i</name></expr>)</condition> <block pos:start="25:49" pos:end="27:9">{<block_content pos:start="26:13" pos:end="26:19">
            <return pos:start="26:13" pos:end="26:19">return;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="29:5" pos:end="32:5"><if pos:start="29:5" pos:end="32:5">if<condition pos:start="29:7" pos:end="29:16">(<expr pos:start="29:8" pos:end="29:15"><name pos:start="29:8" pos:end="29:10">pos</name> <operator pos:start="29:12" pos:end="29:13">==</operator> <name pos:start="29:15" pos:end="29:15">n</name></expr>)</condition> <block pos:start="29:18" pos:end="32:5">{<block_content pos:start="30:9" pos:end="31:15">
        <expr_stmt pos:start="30:9" pos:end="30:17"><expr pos:start="30:9" pos:end="30:16"><call pos:start="30:9" pos:end="30:16"><name pos:start="30:9" pos:end="30:13">check</name><argument_list pos:start="30:14" pos:end="30:16">(<argument pos:start="30:15" pos:end="30:15"><expr pos:start="30:15" pos:end="30:15"><literal type="number" pos:start="30:15" pos:end="30:15">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="31:9" pos:end="31:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="33:5" pos:end="38:5">for<control pos:start="33:8" pos:end="33:30">(<init pos:start="33:9" pos:end="33:18"><decl pos:start="33:9" pos:end="33:17"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:13">i</name> <init pos:start="33:15" pos:end="33:17">= <expr pos:start="33:17" pos:end="33:17"><literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr></init></decl>;</init> <condition pos:start="33:20" pos:end="33:25"><expr pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:20">i</name> <operator pos:start="33:22" pos:end="33:22">&lt;</operator> <name pos:start="33:24" pos:end="33:24">n</name></expr>;</condition> <incr pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:27">i</name><operator pos:start="33:28" pos:end="33:29">++</operator></expr></incr>)</control> <block pos:start="33:32" pos:end="38:5">{<block_content pos:start="34:9" pos:end="37:9">
        <if_stmt pos:start="34:9" pos:end="37:9"><if pos:start="34:9" pos:end="37:9">if<condition pos:start="34:11" pos:end="34:23">(<expr pos:start="34:12" pos:end="34:22"><name pos:start="34:12" pos:end="34:22"><name pos:start="34:12" pos:end="34:14">map</name><index pos:start="34:15" pos:end="34:19">[<expr pos:start="34:16" pos:end="34:18"><name pos:start="34:16" pos:end="34:18">pos</name></expr>]</index><index pos:start="34:20" pos:end="34:22">[<expr pos:start="34:21" pos:end="34:21"><name pos:start="34:21" pos:end="34:21">i</name></expr>]</index></name></expr>)</condition> <block pos:start="34:25" pos:end="37:9">{<block_content pos:start="35:13" pos:end="36:25">
            <expr_stmt pos:start="35:13" pos:end="35:23"><expr pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:13">w</name><index pos:start="35:14" pos:end="35:18">[<expr pos:start="35:15" pos:end="35:17"><name pos:start="35:15" pos:end="35:17">pos</name></expr>]</index></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:22">i</name></expr>;</expr_stmt>
            <expr_stmt pos:start="36:13" pos:end="36:25"><expr pos:start="36:13" pos:end="36:24"><call pos:start="36:13" pos:end="36:24"><name pos:start="36:13" pos:end="36:15">dfs</name><argument_list pos:start="36:16" pos:end="36:24">(<argument pos:start="36:17" pos:end="36:23"><expr pos:start="36:17" pos:end="36:23"><name pos:start="36:17" pos:end="36:19">pos</name> <operator pos:start="36:21" pos:end="36:21">+</operator> <literal type="number" pos:start="36:23" pos:end="36:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="40:1" pos:end="53:1"><type pos:start="40:1" pos:end="40:3"><name pos:start="40:1" pos:end="40:3">int</name></type> <name pos:start="40:5" pos:end="40:8">main</name> <parameter_list pos:start="40:10" pos:end="40:11">()</parameter_list> <block pos:start="40:13" pos:end="53:1">{<block_content pos:start="41:5" pos:end="52:13">
    <expr_stmt pos:start="41:5" pos:end="41:39"><expr pos:start="41:5" pos:end="41:38"><call pos:start="41:5" pos:end="41:38"><name pos:start="41:5" pos:end="41:11">freopen</name> <argument_list pos:start="41:13" pos:end="41:38">(<argument pos:start="41:14" pos:end="41:23"><expr pos:start="41:14" pos:end="41:23"><literal type="string" pos:start="41:14" pos:end="41:23">"queen.in"</literal></expr></argument> , <argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><literal type="string" pos:start="41:27" pos:end="41:29">"r"</literal></expr></argument> , <argument pos:start="41:33" pos:end="41:37"><expr pos:start="41:33" pos:end="41:37"><name pos:start="41:33" pos:end="41:37">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:41"><expr pos:start="42:5" pos:end="42:40"><call pos:start="42:5" pos:end="42:40"><name pos:start="42:5" pos:end="42:11">freopen</name> <argument_list pos:start="42:13" pos:end="42:40">(<argument pos:start="42:14" pos:end="42:24"><expr pos:start="42:14" pos:end="42:24"><literal type="string" pos:start="42:14" pos:end="42:24">"queen.out"</literal></expr></argument> , <argument pos:start="42:28" pos:end="42:30"><expr pos:start="42:28" pos:end="42:30"><literal type="string" pos:start="42:28" pos:end="42:30">"w"</literal></expr></argument> , <argument pos:start="42:34" pos:end="42:39"><expr pos:start="42:34" pos:end="42:39"><name pos:start="42:34" pos:end="42:39">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="43:5" pos:end="43:13"><expr pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:7">cin</name> <operator pos:start="43:9" pos:end="43:10">&gt;&gt;</operator> <name pos:start="43:12" pos:end="43:12">n</name></expr>;</expr_stmt>
    <for pos:start="44:5" pos:end="48:5">for<control pos:start="44:8" pos:end="44:30">(<init pos:start="44:9" pos:end="44:18"><decl pos:start="44:9" pos:end="44:17"><type pos:start="44:9" pos:end="44:11"><name pos:start="44:9" pos:end="44:11">int</name></type> <name pos:start="44:13" pos:end="44:13">i</name> <init pos:start="44:15" pos:end="44:17">= <expr pos:start="44:17" pos:end="44:17"><literal type="number" pos:start="44:17" pos:end="44:17">0</literal></expr></init></decl>;</init> <condition pos:start="44:20" pos:end="44:25"><expr pos:start="44:20" pos:end="44:24"><name pos:start="44:20" pos:end="44:20">i</name> <operator pos:start="44:22" pos:end="44:22">&lt;</operator> <name pos:start="44:24" pos:end="44:24">n</name></expr>;</condition> <incr pos:start="44:27" pos:end="44:29"><expr pos:start="44:27" pos:end="44:29"><name pos:start="44:27" pos:end="44:27">i</name><operator pos:start="44:28" pos:end="44:29">++</operator></expr></incr>)</control> <block pos:start="44:32" pos:end="48:5">{<block_content pos:start="45:9" pos:end="47:9">
        <for pos:start="45:9" pos:end="47:9">for<control pos:start="45:12" pos:end="45:34">(<init pos:start="45:13" pos:end="45:22"><decl pos:start="45:13" pos:end="45:21"><type pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">int</name></type> <name pos:start="45:17" pos:end="45:17">j</name> <init pos:start="45:19" pos:end="45:21">= <expr pos:start="45:21" pos:end="45:21"><literal type="number" pos:start="45:21" pos:end="45:21">0</literal></expr></init></decl>;</init> <condition pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:28"><name pos:start="45:24" pos:end="45:24">j</name> <operator pos:start="45:26" pos:end="45:26">&lt;</operator> <name pos:start="45:28" pos:end="45:28">n</name></expr>;</condition> <incr pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:31">j</name><operator pos:start="45:32" pos:end="45:33">++</operator></expr></incr>)</control> <block pos:start="45:36" pos:end="47:9">{<block_content pos:start="46:13" pos:end="46:29">
            <expr_stmt pos:start="46:13" pos:end="46:29"><expr pos:start="46:13" pos:end="46:28"><name pos:start="46:13" pos:end="46:15">cin</name> <operator pos:start="46:17" pos:end="46:18">&gt;&gt;</operator> <name pos:start="46:20" pos:end="46:28"><name pos:start="46:20" pos:end="46:22">map</name><index pos:start="46:23" pos:end="46:25">[<expr pos:start="46:24" pos:end="46:24"><name pos:start="46:24" pos:end="46:24">i</name></expr>]</index><index pos:start="46:26" pos:end="46:28">[<expr pos:start="46:27" pos:end="46:27"><name pos:start="46:27" pos:end="46:27">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="49:5" pos:end="49:12"><expr pos:start="49:5" pos:end="49:11"><name pos:start="49:5" pos:end="49:7">num</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <literal type="number" pos:start="49:11" pos:end="49:11">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="50:5" pos:end="50:11"><expr pos:start="50:5" pos:end="50:10"><call pos:start="50:5" pos:end="50:10"><name pos:start="50:5" pos:end="50:7">dfs</name><argument_list pos:start="50:8" pos:end="50:10">(<argument pos:start="50:9" pos:end="50:9"><expr pos:start="50:9" pos:end="50:9"><literal type="number" pos:start="50:9" pos:end="50:9">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="51:5" pos:end="51:24"><expr pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:8">cout</name> <operator pos:start="51:10" pos:end="51:11">&lt;&lt;</operator> <name pos:start="51:13" pos:end="51:15">num</name> <operator pos:start="51:17" pos:end="51:18">&lt;&lt;</operator> <name pos:start="51:20" pos:end="51:23">endl</name></expr>;</expr_stmt>
    <return pos:start="52:5" pos:end="52:13">return <expr pos:start="52:12" pos:end="52:12"><literal type="number" pos:start="52:12" pos:end="52:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
