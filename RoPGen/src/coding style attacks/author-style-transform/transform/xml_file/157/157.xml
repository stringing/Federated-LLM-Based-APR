<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/157/157.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:17">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:18">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:18">&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:17">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive> <cpp:file pos:start="5:10" pos:end="5:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="6:1" pos:end="6:20">using <namespace pos:start="6:7" pos:end="6:20">namespace <name pos:start="6:17" pos:end="6:19">std</name>;</namespace></using>
<function pos:start="7:1" pos:end="42:1"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:8">main</name><parameter_list pos:start="7:9" pos:end="7:10">()</parameter_list><block pos:start="7:11" pos:end="42:1">{<block_content pos:start="8:5" pos:end="41:13">
    <decl_stmt pos:start="8:5" pos:end="8:13"><decl pos:start="8:5" pos:end="8:12"><type pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:10">string</name></type> <name pos:start="8:12" pos:end="8:12">s</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:10">vector</name><argument_list type="generic" pos:start="9:11" pos:end="9:15">&lt;<argument pos:start="9:12" pos:end="9:14"><expr pos:start="9:12" pos:end="9:14"><name pos:start="9:12" pos:end="9:14">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="9:17" pos:end="9:17">v</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:18"><decl pos:start="10:5" pos:end="10:9"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">n</name></decl>,<decl pos:start="10:11" pos:end="10:15"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:11" pos:end="10:13">sum</name><init pos:start="10:14" pos:end="10:15">=<expr pos:start="10:15" pos:end="10:15"><literal type="number" pos:start="10:15" pos:end="10:15">0</literal></expr></init></decl>,<decl pos:start="10:17" pos:end="10:17"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:17" pos:end="10:17">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:11"><expr pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:7">cin</name><operator pos:start="11:8" pos:end="11:9">&gt;&gt;</operator><name pos:start="11:10" pos:end="11:10">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:10"><expr pos:start="12:5" pos:end="12:9"><name pos:start="12:5" pos:end="12:5">n</name><operator pos:start="12:6" pos:end="12:7">*=</operator><literal type="number" pos:start="12:8" pos:end="12:9">60</literal></expr>;</expr_stmt>
    <while pos:start="13:5" pos:end="38:5">while<condition pos:start="13:10" pos:end="13:17">(<expr pos:start="13:11" pos:end="13:16"><name pos:start="13:11" pos:end="13:13">cin</name><operator pos:start="13:14" pos:end="13:15">&gt;&gt;</operator><name pos:start="13:16" pos:end="13:16">s</name></expr>)</condition><block pos:start="13:18" pos:end="38:5">{<block_content pos:start="14:9" pos:end="37:14">
        <if_stmt pos:start="14:9" pos:end="35:9"><if pos:start="14:9" pos:end="17:9">if<condition pos:start="14:11" pos:end="14:30">(<expr pos:start="14:12" pos:end="14:29"><name pos:start="14:12" pos:end="14:12">s</name><operator pos:start="14:13" pos:end="14:14">==</operator><literal type="string" pos:start="14:15" pos:end="14:29">"'tingtingting"</literal></expr>)</condition><block pos:start="14:31" pos:end="17:9">{<block_content pos:start="15:13" pos:end="16:30">
            <expr_stmt pos:start="15:13" pos:end="15:25"><expr pos:start="15:13" pos:end="15:24"><call pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:13">v</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:22">pop_back</name></name><argument_list pos:start="15:23" pos:end="15:24">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:30"><expr pos:start="16:13" pos:end="16:29"><name pos:start="16:13" pos:end="16:15">sum</name><operator pos:start="16:16" pos:end="16:16">=</operator><name pos:start="16:17" pos:end="16:29"><name pos:start="16:17" pos:end="16:17">v</name><index pos:start="16:18" pos:end="16:29">[<expr pos:start="16:19" pos:end="16:28"><call pos:start="16:19" pos:end="16:26"><name pos:start="16:19" pos:end="16:24"><name pos:start="16:19" pos:end="16:19">v</name><operator pos:start="16:20" pos:end="16:20">.</operator><name pos:start="16:21" pos:end="16:24">size</name></name><argument_list pos:start="16:25" pos:end="16:26">()</argument_list></call><operator pos:start="16:27" pos:end="16:27">-</operator><literal type="number" pos:start="16:28" pos:end="16:28">1</literal></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="17:10" pos:end="27:9">else if<condition pos:start="17:17" pos:end="17:33">(<expr pos:start="17:18" pos:end="17:32"><name pos:start="17:18" pos:end="17:18">s</name><operator pos:start="17:19" pos:end="17:20">==</operator><literal type="string" pos:start="17:21" pos:end="17:32">"kaomianjin"</literal></expr>)</condition><block pos:start="17:34" pos:end="27:9">{<block_content pos:start="18:13" pos:end="25:13">
            <expr_stmt pos:start="18:13" pos:end="18:19"><expr pos:start="18:13" pos:end="18:18"><name pos:start="18:13" pos:end="18:15">cin</name><operator pos:start="18:16" pos:end="18:17">&gt;&gt;</operator><name pos:start="18:18" pos:end="18:18">t</name></expr>;</expr_stmt>
            <if_stmt pos:start="19:13" pos:end="25:13"><if pos:start="19:13" pos:end="22:13">if<condition pos:start="19:15" pos:end="19:41">(<expr pos:start="19:16" pos:end="19:40"><name pos:start="19:16" pos:end="19:18">cin</name><operator pos:start="19:19" pos:end="19:20">&gt;&gt;</operator><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">&amp;&amp;</operator><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">==</operator><literal type="string" pos:start="19:27" pos:end="19:40">"tingtingting"</literal></expr>)</condition><block pos:start="19:42" pos:end="22:13">{<block_content pos:start="20:17" pos:end="21:25">
                <expr_stmt pos:start="20:17" pos:end="20:38"><expr pos:start="20:17" pos:end="20:37"><name pos:start="20:17" pos:end="20:20">cout</name><operator pos:start="20:21" pos:end="20:22">&lt;&lt;</operator><literal type="string" pos:start="20:23" pos:end="20:31">"Hahaha."</literal><operator pos:start="20:32" pos:end="20:33">&lt;&lt;</operator><name pos:start="20:34" pos:end="20:37">endl</name></expr>;</expr_stmt>
                <return pos:start="21:17" pos:end="21:25">return <expr pos:start="21:24" pos:end="21:24"><literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr>;</return>
            </block_content>}</block></if><else pos:start="22:14" pos:end="25:13">else<block pos:start="22:18" pos:end="25:13">{<block_content pos:start="23:17" pos:end="24:26">
                <expr_stmt pos:start="23:17" pos:end="23:47"><expr pos:start="23:17" pos:end="23:46"><name pos:start="23:17" pos:end="23:20">cout</name><operator pos:start="23:21" pos:end="23:22">&lt;&lt;</operator><literal type="string" pos:start="23:23" pos:end="23:40">"Congratulations!"</literal><operator pos:start="23:41" pos:end="23:42">&lt;&lt;</operator><name pos:start="23:43" pos:end="23:46">endl</name></expr>;</expr_stmt>
                 <return pos:start="24:18" pos:end="24:26">return <expr pos:start="24:25" pos:end="24:25"><literal type="number" pos:start="24:25" pos:end="24:25">0</literal></expr>;</return>
            </block_content>}</block></else></if_stmt>
            
        </block_content>}</block></if><else pos:start="27:10" pos:end="35:9">else<block pos:start="27:14" pos:end="35:9">{<block_content pos:start="28:13" pos:end="33:29">
            <expr_stmt pos:start="28:13" pos:end="28:19"><expr pos:start="28:13" pos:end="28:18"><name pos:start="28:13" pos:end="28:15">cin</name><operator pos:start="28:16" pos:end="28:17">&gt;&gt;</operator><name pos:start="28:18" pos:end="28:18">t</name></expr>;</expr_stmt>
            <expr_stmt pos:start="29:13" pos:end="29:19"><expr pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:15">sum</name><operator pos:start="29:16" pos:end="29:17">+=</operator><name pos:start="29:18" pos:end="29:18">t</name></expr>;</expr_stmt>
            <if_stmt pos:start="30:13" pos:end="32:13"><if pos:start="30:13" pos:end="32:13">if<condition pos:start="30:15" pos:end="30:22">(<expr pos:start="30:16" pos:end="30:21"><name pos:start="30:16" pos:end="30:18">sum</name><operator pos:start="30:19" pos:end="30:20">&gt;=</operator><name pos:start="30:21" pos:end="30:21">n</name></expr>)</condition><block pos:start="30:23" pos:end="32:13">{<block_content pos:start="31:17" pos:end="31:22">
                <break pos:start="31:17" pos:end="31:22">break;</break>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="33:13" pos:end="33:29"><expr pos:start="33:13" pos:end="33:28"><call pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:13">v</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:23">push_back</name></name><argument_list pos:start="33:24" pos:end="33:28">(<argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           
        </block_content>}</block></else></if_stmt>
        
        <break pos:start="37:9" pos:end="37:14">break;</break>
    </block_content>}</block></while>
   <expr_stmt pos:start="39:4" pos:end="39:32"><expr pos:start="39:4" pos:end="39:31"><name pos:start="39:4" pos:end="39:7">cout</name><operator pos:start="39:8" pos:end="39:9">&lt;&lt;</operator><literal type="string" pos:start="39:10" pos:end="39:25">"Unfortunately."</literal><operator pos:start="39:26" pos:end="39:27">&lt;&lt;</operator><name pos:start="39:28" pos:end="39:31">endl</name></expr>;</expr_stmt>
    
    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
