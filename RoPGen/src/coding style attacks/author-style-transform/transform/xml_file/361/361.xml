<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/361/361.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="89:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="89:1">{<block_content pos:start="4:5" pos:end="88:5">
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:11"><expr pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:7">cin</name><operator pos:start="5:8" pos:end="5:9">&gt;&gt;</operator><name pos:start="5:10" pos:end="5:10">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:10"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">q</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:9">stack</name><argument_list type="generic" pos:start="7:10" pos:end="7:14">&lt;<argument pos:start="7:11" pos:end="7:13"><expr pos:start="7:11" pos:end="7:13"><name pos:start="7:11" pos:end="7:13">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="7:15" pos:end="7:15">a</name></decl>,<decl pos:start="7:17" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:14"/><name pos:start="7:17" pos:end="7:17">b</name></decl>,<decl pos:start="7:19" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:14"/><name pos:start="7:19" pos:end="7:19">c</name></decl>;</decl_stmt>
    <while pos:start="8:5" pos:end="55:5">while<condition pos:start="8:10" pos:end="8:14">(<expr pos:start="8:11" pos:end="8:13"><name pos:start="8:11" pos:end="8:11">n</name><operator pos:start="8:12" pos:end="8:13">--</operator></expr>)</condition><block pos:start="8:15" pos:end="55:5">{<block_content pos:start="9:9" pos:end="54:9">
        <decl_stmt pos:start="9:9" pos:end="9:15"><decl pos:start="9:9" pos:end="9:14"><type pos:start="9:9" pos:end="9:12"><name pos:start="9:9" pos:end="9:12">char</name></type> <name pos:start="9:14" pos:end="9:14">s</name></decl>;</decl_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:15"><expr pos:start="10:9" pos:end="10:14"><name pos:start="10:9" pos:end="10:11">cin</name><operator pos:start="10:12" pos:end="10:13">&gt;&gt;</operator><name pos:start="10:14" pos:end="10:14">s</name></expr>;</expr_stmt>
        <if_stmt pos:start="11:9" pos:end="54:9"><if pos:start="11:9" pos:end="32:9">if<condition pos:start="11:11" pos:end="11:18">(<expr pos:start="11:12" pos:end="11:17"><name pos:start="11:12" pos:end="11:12">s</name><operator pos:start="11:13" pos:end="11:14">==</operator><literal type="char" pos:start="11:15" pos:end="11:17">'A'</literal></expr>)</condition><block pos:start="11:19" pos:end="32:9">{<block_content pos:start="12:13" pos:end="31:13">
            <expr_stmt pos:start="12:13" pos:end="12:19"><expr pos:start="12:13" pos:end="12:18"><name pos:start="12:13" pos:end="12:15">cin</name><operator pos:start="12:16" pos:end="12:17">&gt;&gt;</operator><name pos:start="12:18" pos:end="12:18">s</name></expr>;</expr_stmt>
            <if_stmt pos:start="13:13" pos:end="31:13"><if pos:start="13:13" pos:end="16:13">if<condition pos:start="13:15" pos:end="13:22">(<expr pos:start="13:16" pos:end="13:21"><name pos:start="13:16" pos:end="13:16">s</name><operator pos:start="13:17" pos:end="13:18">==</operator><literal type="char" pos:start="13:19" pos:end="13:21">'I'</literal></expr>)</condition><block pos:start="13:23" pos:end="16:13">{<block_content pos:start="14:17" pos:end="15:26">
                <expr_stmt pos:start="14:17" pos:end="14:23"><expr pos:start="14:17" pos:end="14:22"><name pos:start="14:17" pos:end="14:19">cin</name><operator pos:start="14:20" pos:end="14:21">&gt;&gt;</operator><name pos:start="14:22" pos:end="14:22">q</name></expr>;</expr_stmt>
                <expr_stmt pos:start="15:17" pos:end="15:26"><expr pos:start="15:17" pos:end="15:25"><call pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:17">a</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:22">push</name></name><argument_list pos:start="15:23" pos:end="15:25">(<argument pos:start="15:24" pos:end="15:24"><expr pos:start="15:24" pos:end="15:24"><name pos:start="15:24" pos:end="15:24">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="17:13" pos:end="21:13">else if<condition pos:start="17:20" pos:end="17:27">(<expr pos:start="17:21" pos:end="17:26"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">==</operator><literal type="char" pos:start="17:24" pos:end="17:26">'D'</literal></expr>)</condition><block pos:start="17:28" pos:end="21:13">{<block_content pos:start="18:17" pos:end="20:17">
                <if_stmt pos:start="18:17" pos:end="20:17"><if pos:start="18:17" pos:end="20:17">if<condition pos:start="18:19" pos:end="18:30">(<expr pos:start="18:20" pos:end="18:29"><operator pos:start="18:20" pos:end="18:20">!</operator><call pos:start="18:21" pos:end="18:29"><name pos:start="18:21" pos:end="18:27"><name pos:start="18:21" pos:end="18:21">a</name><operator pos:start="18:22" pos:end="18:22">.</operator><name pos:start="18:23" pos:end="18:27">empty</name></name><argument_list pos:start="18:28" pos:end="18:29">()</argument_list></call></expr>)</condition><block pos:start="18:31" pos:end="20:17">{<block_content pos:start="19:21" pos:end="19:28">
                    <expr_stmt pos:start="19:21" pos:end="19:28"><expr pos:start="19:21" pos:end="19:27"><call pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">a</name><operator pos:start="19:22" pos:end="19:22">.</operator><name pos:start="19:23" pos:end="19:25">pop</name></name><argument_list pos:start="19:26" pos:end="19:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if>
            <else pos:start="22:13" pos:end="31:13">else<block pos:start="22:17" pos:end="31:13">{<block_content pos:start="23:17" pos:end="30:17">
                <while pos:start="23:17" pos:end="26:17">while<condition pos:start="23:22" pos:end="23:33">(<expr pos:start="23:23" pos:end="23:32"><operator pos:start="23:23" pos:end="23:23">!</operator><call pos:start="23:24" pos:end="23:32"><name pos:start="23:24" pos:end="23:30"><name pos:start="23:24" pos:end="23:24">b</name><operator pos:start="23:25" pos:end="23:25">.</operator><name pos:start="23:26" pos:end="23:30">empty</name></name><argument_list pos:start="23:31" pos:end="23:32">()</argument_list></call></expr>)</condition><block pos:start="23:34" pos:end="26:17">{<block_content pos:start="24:21" pos:end="25:28">
                    <expr_stmt pos:start="24:21" pos:end="24:36"><expr pos:start="24:21" pos:end="24:35"><call pos:start="24:21" pos:end="24:35"><name pos:start="24:21" pos:end="24:26"><name pos:start="24:21" pos:end="24:21">c</name><operator pos:start="24:22" pos:end="24:22">.</operator><name pos:start="24:23" pos:end="24:26">push</name></name><argument_list pos:start="24:27" pos:end="24:35">(<argument pos:start="24:28" pos:end="24:34"><expr pos:start="24:28" pos:end="24:34"><call pos:start="24:28" pos:end="24:34"><name pos:start="24:28" pos:end="24:32"><name pos:start="24:28" pos:end="24:28">b</name><operator pos:start="24:29" pos:end="24:29">.</operator><name pos:start="24:30" pos:end="24:32">top</name></name><argument_list pos:start="24:33" pos:end="24:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="25:21" pos:end="25:28"><expr pos:start="25:21" pos:end="25:27"><call pos:start="25:21" pos:end="25:27"><name pos:start="25:21" pos:end="25:25"><name pos:start="25:21" pos:end="25:21">b</name><operator pos:start="25:22" pos:end="25:22">.</operator><name pos:start="25:23" pos:end="25:25">pop</name></name><argument_list pos:start="25:26" pos:end="25:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="27:17" pos:end="30:17">while<condition pos:start="27:22" pos:end="27:33">(<expr pos:start="27:23" pos:end="27:32"><operator pos:start="27:23" pos:end="27:23">!</operator><call pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:30"><name pos:start="27:24" pos:end="27:24">a</name><operator pos:start="27:25" pos:end="27:25">.</operator><name pos:start="27:26" pos:end="27:30">empty</name></name><argument_list pos:start="27:31" pos:end="27:32">()</argument_list></call></expr>)</condition><block pos:start="27:34" pos:end="30:17">{<block_content pos:start="28:21" pos:end="29:28">
                    <expr_stmt pos:start="28:21" pos:end="28:36"><expr pos:start="28:21" pos:end="28:35"><call pos:start="28:21" pos:end="28:35"><name pos:start="28:21" pos:end="28:26"><name pos:start="28:21" pos:end="28:21">c</name><operator pos:start="28:22" pos:end="28:22">.</operator><name pos:start="28:23" pos:end="28:26">push</name></name><argument_list pos:start="28:27" pos:end="28:35">(<argument pos:start="28:28" pos:end="28:34"><expr pos:start="28:28" pos:end="28:34"><call pos:start="28:28" pos:end="28:34"><name pos:start="28:28" pos:end="28:32"><name pos:start="28:28" pos:end="28:28">a</name><operator pos:start="28:29" pos:end="28:29">.</operator><name pos:start="28:30" pos:end="28:32">top</name></name><argument_list pos:start="28:33" pos:end="28:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="29:21" pos:end="29:28"><expr pos:start="29:21" pos:end="29:27"><call pos:start="29:21" pos:end="29:27"><name pos:start="29:21" pos:end="29:25"><name pos:start="29:21" pos:end="29:21">a</name><operator pos:start="29:22" pos:end="29:22">.</operator><name pos:start="29:23" pos:end="29:25">pop</name></name><argument_list pos:start="29:26" pos:end="29:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if>
        <else pos:start="33:9" pos:end="54:9">else<block pos:start="33:13" pos:end="54:9">{<block_content pos:start="34:13" pos:end="53:13">
            <expr_stmt pos:start="34:13" pos:end="34:19"><expr pos:start="34:13" pos:end="34:18"><name pos:start="34:13" pos:end="34:15">cin</name><operator pos:start="34:16" pos:end="34:17">&gt;&gt;</operator><name pos:start="34:18" pos:end="34:18">s</name></expr>;</expr_stmt>
            <if_stmt pos:start="35:13" pos:end="53:13"><if pos:start="35:13" pos:end="38:13">if<condition pos:start="35:15" pos:end="35:22">(<expr pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">==</operator><literal type="char" pos:start="35:19" pos:end="35:21">'I'</literal></expr>)</condition><block pos:start="35:23" pos:end="38:13">{<block_content pos:start="36:17" pos:end="37:26">
                <expr_stmt pos:start="36:17" pos:end="36:23"><expr pos:start="36:17" pos:end="36:22"><name pos:start="36:17" pos:end="36:19">cin</name><operator pos:start="36:20" pos:end="36:21">&gt;&gt;</operator><name pos:start="36:22" pos:end="36:22">q</name></expr>;</expr_stmt>
                <expr_stmt pos:start="37:17" pos:end="37:26"><expr pos:start="37:17" pos:end="37:25"><call pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:22"><name pos:start="37:17" pos:end="37:17">b</name><operator pos:start="37:18" pos:end="37:18">.</operator><name pos:start="37:19" pos:end="37:22">push</name></name><argument_list pos:start="37:23" pos:end="37:25">(<argument pos:start="37:24" pos:end="37:24"><expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="39:13" pos:end="43:13">else if<condition pos:start="39:20" pos:end="39:27">(<expr pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">==</operator><literal type="char" pos:start="39:24" pos:end="39:26">'D'</literal></expr>)</condition><block pos:start="39:28" pos:end="43:13">{<block_content pos:start="40:17" pos:end="42:17">
                <if_stmt pos:start="40:17" pos:end="42:17"><if pos:start="40:17" pos:end="42:17">if<condition pos:start="40:19" pos:end="40:30">(<expr pos:start="40:20" pos:end="40:29"><operator pos:start="40:20" pos:end="40:20">!</operator><call pos:start="40:21" pos:end="40:29"><name pos:start="40:21" pos:end="40:27"><name pos:start="40:21" pos:end="40:21">b</name><operator pos:start="40:22" pos:end="40:22">.</operator><name pos:start="40:23" pos:end="40:27">empty</name></name><argument_list pos:start="40:28" pos:end="40:29">()</argument_list></call></expr>)</condition><block pos:start="40:31" pos:end="42:17">{<block_content pos:start="41:21" pos:end="41:28">
                    <expr_stmt pos:start="41:21" pos:end="41:28"><expr pos:start="41:21" pos:end="41:27"><call pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:21">b</name><operator pos:start="41:22" pos:end="41:22">.</operator><name pos:start="41:23" pos:end="41:25">pop</name></name><argument_list pos:start="41:26" pos:end="41:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if>
            <else pos:start="44:13" pos:end="53:13">else<block pos:start="44:17" pos:end="53:13">{<block_content pos:start="45:17" pos:end="52:17">
                <while pos:start="45:17" pos:end="48:17">while<condition pos:start="45:22" pos:end="45:33">(<expr pos:start="45:23" pos:end="45:32"><operator pos:start="45:23" pos:end="45:23">!</operator><call pos:start="45:24" pos:end="45:32"><name pos:start="45:24" pos:end="45:30"><name pos:start="45:24" pos:end="45:24">a</name><operator pos:start="45:25" pos:end="45:25">.</operator><name pos:start="45:26" pos:end="45:30">empty</name></name><argument_list pos:start="45:31" pos:end="45:32">()</argument_list></call></expr>)</condition><block pos:start="45:34" pos:end="48:17">{<block_content pos:start="46:21" pos:end="47:28">
                    <expr_stmt pos:start="46:21" pos:end="46:36"><expr pos:start="46:21" pos:end="46:35"><call pos:start="46:21" pos:end="46:35"><name pos:start="46:21" pos:end="46:26"><name pos:start="46:21" pos:end="46:21">c</name><operator pos:start="46:22" pos:end="46:22">.</operator><name pos:start="46:23" pos:end="46:26">push</name></name><argument_list pos:start="46:27" pos:end="46:35">(<argument pos:start="46:28" pos:end="46:34"><expr pos:start="46:28" pos:end="46:34"><call pos:start="46:28" pos:end="46:34"><name pos:start="46:28" pos:end="46:32"><name pos:start="46:28" pos:end="46:28">a</name><operator pos:start="46:29" pos:end="46:29">.</operator><name pos:start="46:30" pos:end="46:32">top</name></name><argument_list pos:start="46:33" pos:end="46:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="47:21" pos:end="47:28"><expr pos:start="47:21" pos:end="47:27"><call pos:start="47:21" pos:end="47:27"><name pos:start="47:21" pos:end="47:25"><name pos:start="47:21" pos:end="47:21">a</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:25">pop</name></name><argument_list pos:start="47:26" pos:end="47:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="49:17" pos:end="52:17">while<condition pos:start="49:22" pos:end="49:33">(<expr pos:start="49:23" pos:end="49:32"><operator pos:start="49:23" pos:end="49:23">!</operator><call pos:start="49:24" pos:end="49:32"><name pos:start="49:24" pos:end="49:30"><name pos:start="49:24" pos:end="49:24">b</name><operator pos:start="49:25" pos:end="49:25">.</operator><name pos:start="49:26" pos:end="49:30">empty</name></name><argument_list pos:start="49:31" pos:end="49:32">()</argument_list></call></expr>)</condition><block pos:start="49:34" pos:end="52:17">{<block_content pos:start="50:21" pos:end="51:28">
                    <expr_stmt pos:start="50:21" pos:end="50:36"><expr pos:start="50:21" pos:end="50:35"><call pos:start="50:21" pos:end="50:35"><name pos:start="50:21" pos:end="50:26"><name pos:start="50:21" pos:end="50:21">c</name><operator pos:start="50:22" pos:end="50:22">.</operator><name pos:start="50:23" pos:end="50:26">push</name></name><argument_list pos:start="50:27" pos:end="50:35">(<argument pos:start="50:28" pos:end="50:34"><expr pos:start="50:28" pos:end="50:34"><call pos:start="50:28" pos:end="50:34"><name pos:start="50:28" pos:end="50:32"><name pos:start="50:28" pos:end="50:28">b</name><operator pos:start="50:29" pos:end="50:29">.</operator><name pos:start="50:30" pos:end="50:32">top</name></name><argument_list pos:start="50:33" pos:end="50:34">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="51:21" pos:end="51:28"><expr pos:start="51:21" pos:end="51:27"><call pos:start="51:21" pos:end="51:27"><name pos:start="51:21" pos:end="51:25"><name pos:start="51:21" pos:end="51:21">b</name><operator pos:start="51:22" pos:end="51:22">.</operator><name pos:start="51:23" pos:end="51:25">pop</name></name><argument_list pos:start="51:26" pos:end="51:27">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <while pos:start="56:5" pos:end="59:5">while<condition pos:start="56:10" pos:end="56:21">(<expr pos:start="56:11" pos:end="56:20"><operator pos:start="56:11" pos:end="56:11">!</operator><call pos:start="56:12" pos:end="56:20"><name pos:start="56:12" pos:end="56:18"><name pos:start="56:12" pos:end="56:12">a</name><operator pos:start="56:13" pos:end="56:13">.</operator><name pos:start="56:14" pos:end="56:18">empty</name></name><argument_list pos:start="56:19" pos:end="56:20">()</argument_list></call></expr>)</condition><block pos:start="56:22" pos:end="59:5">{<block_content pos:start="57:9" pos:end="58:16">
        <expr_stmt pos:start="57:9" pos:end="57:24"><expr pos:start="57:9" pos:end="57:23"><call pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:9">b</name><operator pos:start="57:10" pos:end="57:10">.</operator><name pos:start="57:11" pos:end="57:14">push</name></name><argument_list pos:start="57:15" pos:end="57:23">(<argument pos:start="57:16" pos:end="57:22"><expr pos:start="57:16" pos:end="57:22"><call pos:start="57:16" pos:end="57:22"><name pos:start="57:16" pos:end="57:20"><name pos:start="57:16" pos:end="57:16">a</name><operator pos:start="57:17" pos:end="57:17">.</operator><name pos:start="57:18" pos:end="57:20">top</name></name><argument_list pos:start="57:21" pos:end="57:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="58:9" pos:end="58:16"><expr pos:start="58:9" pos:end="58:15"><call pos:start="58:9" pos:end="58:15"><name pos:start="58:9" pos:end="58:13"><name pos:start="58:9" pos:end="58:9">a</name><operator pos:start="58:10" pos:end="58:10">.</operator><name pos:start="58:11" pos:end="58:13">pop</name></name><argument_list pos:start="58:14" pos:end="58:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="60:5" pos:end="63:5">while<condition pos:start="60:10" pos:end="60:21">(<expr pos:start="60:11" pos:end="60:20"><operator pos:start="60:11" pos:end="60:11">!</operator><call pos:start="60:12" pos:end="60:20"><name pos:start="60:12" pos:end="60:18"><name pos:start="60:12" pos:end="60:12">b</name><operator pos:start="60:13" pos:end="60:13">.</operator><name pos:start="60:14" pos:end="60:18">empty</name></name><argument_list pos:start="60:19" pos:end="60:20">()</argument_list></call></expr>)</condition><block pos:start="60:22" pos:end="63:5">{<block_content pos:start="61:9" pos:end="62:16">
        <expr_stmt pos:start="61:9" pos:end="61:24"><expr pos:start="61:9" pos:end="61:23"><call pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:14"><name pos:start="61:9" pos:end="61:9">c</name><operator pos:start="61:10" pos:end="61:10">.</operator><name pos:start="61:11" pos:end="61:14">push</name></name><argument_list pos:start="61:15" pos:end="61:23">(<argument pos:start="61:16" pos:end="61:22"><expr pos:start="61:16" pos:end="61:22"><call pos:start="61:16" pos:end="61:22"><name pos:start="61:16" pos:end="61:20"><name pos:start="61:16" pos:end="61:16">b</name><operator pos:start="61:17" pos:end="61:17">.</operator><name pos:start="61:18" pos:end="61:20">top</name></name><argument_list pos:start="61:21" pos:end="61:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="62:9" pos:end="62:16"><expr pos:start="62:9" pos:end="62:15"><call pos:start="62:9" pos:end="62:15"><name pos:start="62:9" pos:end="62:13"><name pos:start="62:9" pos:end="62:9">b</name><operator pos:start="62:10" pos:end="62:10">.</operator><name pos:start="62:11" pos:end="62:13">pop</name></name><argument_list pos:start="62:14" pos:end="62:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="64:5" pos:end="67:5">while<condition pos:start="64:10" pos:end="64:21">(<expr pos:start="64:11" pos:end="64:20"><operator pos:start="64:11" pos:end="64:11">!</operator><call pos:start="64:12" pos:end="64:20"><name pos:start="64:12" pos:end="64:18"><name pos:start="64:12" pos:end="64:12">c</name><operator pos:start="64:13" pos:end="64:13">.</operator><name pos:start="64:14" pos:end="64:18">empty</name></name><argument_list pos:start="64:19" pos:end="64:20">()</argument_list></call></expr>)</condition><block pos:start="64:22" pos:end="67:5">{<block_content pos:start="65:9" pos:end="66:16">
        <expr_stmt pos:start="65:9" pos:end="65:24"><expr pos:start="65:9" pos:end="65:23"><call pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:14"><name pos:start="65:9" pos:end="65:9">a</name><operator pos:start="65:10" pos:end="65:10">.</operator><name pos:start="65:11" pos:end="65:14">push</name></name><argument_list pos:start="65:15" pos:end="65:23">(<argument pos:start="65:16" pos:end="65:22"><expr pos:start="65:16" pos:end="65:22"><call pos:start="65:16" pos:end="65:22"><name pos:start="65:16" pos:end="65:20"><name pos:start="65:16" pos:end="65:16">c</name><operator pos:start="65:17" pos:end="65:17">.</operator><name pos:start="65:18" pos:end="65:20">top</name></name><argument_list pos:start="65:21" pos:end="65:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="66:9" pos:end="66:16"><expr pos:start="66:9" pos:end="66:15"><call pos:start="66:9" pos:end="66:15"><name pos:start="66:9" pos:end="66:13"><name pos:start="66:9" pos:end="66:9">c</name><operator pos:start="66:10" pos:end="66:10">.</operator><name pos:start="66:11" pos:end="66:13">pop</name></name><argument_list pos:start="66:14" pos:end="66:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="68:5" pos:end="71:5">while<condition pos:start="68:10" pos:end="68:19">(<expr pos:start="68:11" pos:end="68:18"><call pos:start="68:11" pos:end="68:18"><name pos:start="68:11" pos:end="68:16"><name pos:start="68:11" pos:end="68:11">b</name><operator pos:start="68:12" pos:end="68:12">.</operator><name pos:start="68:13" pos:end="68:16">size</name></name><argument_list pos:start="68:17" pos:end="68:18">()</argument_list></call></expr>)</condition><block pos:start="68:20" pos:end="71:5">{<block_content pos:start="69:9" pos:end="70:16">
        <expr_stmt pos:start="69:9" pos:end="69:27"><expr pos:start="69:9" pos:end="69:26"><name pos:start="69:9" pos:end="69:12">cout</name><operator pos:start="69:13" pos:end="69:14">&lt;&lt;</operator><call pos:start="69:15" pos:end="69:21"><name pos:start="69:15" pos:end="69:19"><name pos:start="69:15" pos:end="69:15">a</name><operator pos:start="69:16" pos:end="69:16">.</operator><name pos:start="69:17" pos:end="69:19">top</name></name><argument_list pos:start="69:20" pos:end="69:21">()</argument_list></call><operator pos:start="69:22" pos:end="69:23">&lt;&lt;</operator><literal type="string" pos:start="69:24" pos:end="69:26">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="70:9" pos:end="70:16"><expr pos:start="70:9" pos:end="70:15"><call pos:start="70:9" pos:end="70:15"><name pos:start="70:9" pos:end="70:13"><name pos:start="70:9" pos:end="70:9">a</name><operator pos:start="70:10" pos:end="70:10">.</operator><name pos:start="70:11" pos:end="70:13">pop</name></name><argument_list pos:start="70:14" pos:end="70:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="72:5" pos:end="72:15"><expr pos:start="72:5" pos:end="72:14"><name pos:start="72:5" pos:end="72:8">cout</name><operator pos:start="72:9" pos:end="72:10">&lt;&lt;</operator><name pos:start="72:11" pos:end="72:14">endl</name></expr>;</expr_stmt>
    <while pos:start="73:5" pos:end="76:5">while<condition pos:start="73:10" pos:end="73:21">(<expr pos:start="73:11" pos:end="73:20"><operator pos:start="73:11" pos:end="73:11">!</operator><call pos:start="73:12" pos:end="73:20"><name pos:start="73:12" pos:end="73:18"><name pos:start="73:12" pos:end="73:12">b</name><operator pos:start="73:13" pos:end="73:13">.</operator><name pos:start="73:14" pos:end="73:18">empty</name></name><argument_list pos:start="73:19" pos:end="73:20">()</argument_list></call></expr>)</condition><block pos:start="73:22" pos:end="76:5">{<block_content pos:start="74:9" pos:end="75:16">
        <expr_stmt pos:start="74:9" pos:end="74:24"><expr pos:start="74:9" pos:end="74:23"><call pos:start="74:9" pos:end="74:23"><name pos:start="74:9" pos:end="74:14"><name pos:start="74:9" pos:end="74:9">c</name><operator pos:start="74:10" pos:end="74:10">.</operator><name pos:start="74:11" pos:end="74:14">push</name></name><argument_list pos:start="74:15" pos:end="74:23">(<argument pos:start="74:16" pos:end="74:22"><expr pos:start="74:16" pos:end="74:22"><call pos:start="74:16" pos:end="74:22"><name pos:start="74:16" pos:end="74:20"><name pos:start="74:16" pos:end="74:16">b</name><operator pos:start="74:17" pos:end="74:17">.</operator><name pos:start="74:18" pos:end="74:20">top</name></name><argument_list pos:start="74:21" pos:end="74:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="75:9" pos:end="75:16"><expr pos:start="75:9" pos:end="75:15"><call pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:13"><name pos:start="75:9" pos:end="75:9">b</name><operator pos:start="75:10" pos:end="75:10">.</operator><name pos:start="75:11" pos:end="75:13">pop</name></name><argument_list pos:start="75:14" pos:end="75:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="77:5" pos:end="80:5">while<condition pos:start="77:10" pos:end="77:21">(<expr pos:start="77:11" pos:end="77:20"><operator pos:start="77:11" pos:end="77:11">!</operator><call pos:start="77:12" pos:end="77:20"><name pos:start="77:12" pos:end="77:18"><name pos:start="77:12" pos:end="77:12">c</name><operator pos:start="77:13" pos:end="77:13">.</operator><name pos:start="77:14" pos:end="77:18">empty</name></name><argument_list pos:start="77:19" pos:end="77:20">()</argument_list></call></expr>)</condition><block pos:start="77:22" pos:end="80:5">{<block_content pos:start="78:9" pos:end="79:16">
        <expr_stmt pos:start="78:9" pos:end="78:24"><expr pos:start="78:9" pos:end="78:23"><call pos:start="78:9" pos:end="78:23"><name pos:start="78:9" pos:end="78:14"><name pos:start="78:9" pos:end="78:9">a</name><operator pos:start="78:10" pos:end="78:10">.</operator><name pos:start="78:11" pos:end="78:14">push</name></name><argument_list pos:start="78:15" pos:end="78:23">(<argument pos:start="78:16" pos:end="78:22"><expr pos:start="78:16" pos:end="78:22"><call pos:start="78:16" pos:end="78:22"><name pos:start="78:16" pos:end="78:20"><name pos:start="78:16" pos:end="78:16">c</name><operator pos:start="78:17" pos:end="78:17">.</operator><name pos:start="78:18" pos:end="78:20">top</name></name><argument_list pos:start="78:21" pos:end="78:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="79:9" pos:end="79:16"><expr pos:start="79:9" pos:end="79:15"><call pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:13"><name pos:start="79:9" pos:end="79:9">c</name><operator pos:start="79:10" pos:end="79:10">.</operator><name pos:start="79:11" pos:end="79:13">pop</name></name><argument_list pos:start="79:14" pos:end="79:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="81:5" pos:end="84:5">while<condition pos:start="81:10" pos:end="81:21">(<expr pos:start="81:11" pos:end="81:20"><operator pos:start="81:11" pos:end="81:11">!</operator><call pos:start="81:12" pos:end="81:20"><name pos:start="81:12" pos:end="81:18"><name pos:start="81:12" pos:end="81:12">a</name><operator pos:start="81:13" pos:end="81:13">.</operator><name pos:start="81:14" pos:end="81:18">empty</name></name><argument_list pos:start="81:19" pos:end="81:20">()</argument_list></call></expr>)</condition><block pos:start="81:22" pos:end="84:5">{<block_content pos:start="82:9" pos:end="83:16">
        <expr_stmt pos:start="82:9" pos:end="82:24"><expr pos:start="82:9" pos:end="82:23"><call pos:start="82:9" pos:end="82:23"><name pos:start="82:9" pos:end="82:14"><name pos:start="82:9" pos:end="82:9">b</name><operator pos:start="82:10" pos:end="82:10">.</operator><name pos:start="82:11" pos:end="82:14">push</name></name><argument_list pos:start="82:15" pos:end="82:23">(<argument pos:start="82:16" pos:end="82:22"><expr pos:start="82:16" pos:end="82:22"><call pos:start="82:16" pos:end="82:22"><name pos:start="82:16" pos:end="82:20"><name pos:start="82:16" pos:end="82:16">a</name><operator pos:start="82:17" pos:end="82:17">.</operator><name pos:start="82:18" pos:end="82:20">top</name></name><argument_list pos:start="82:21" pos:end="82:22">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="83:9" pos:end="83:16"><expr pos:start="83:9" pos:end="83:15"><call pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:13"><name pos:start="83:9" pos:end="83:9">a</name><operator pos:start="83:10" pos:end="83:10">.</operator><name pos:start="83:11" pos:end="83:13">pop</name></name><argument_list pos:start="83:14" pos:end="83:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="85:5" pos:end="88:5">while<condition pos:start="85:10" pos:end="85:19">(<expr pos:start="85:11" pos:end="85:18"><call pos:start="85:11" pos:end="85:18"><name pos:start="85:11" pos:end="85:16"><name pos:start="85:11" pos:end="85:11">a</name><operator pos:start="85:12" pos:end="85:12">.</operator><name pos:start="85:13" pos:end="85:16">size</name></name><argument_list pos:start="85:17" pos:end="85:18">()</argument_list></call></expr>)</condition><block pos:start="85:20" pos:end="88:5">{<block_content pos:start="86:9" pos:end="87:16">
        <expr_stmt pos:start="86:9" pos:end="86:27"><expr pos:start="86:9" pos:end="86:26"><name pos:start="86:9" pos:end="86:12">cout</name><operator pos:start="86:13" pos:end="86:14">&lt;&lt;</operator><call pos:start="86:15" pos:end="86:21"><name pos:start="86:15" pos:end="86:19"><name pos:start="86:15" pos:end="86:15">b</name><operator pos:start="86:16" pos:end="86:16">.</operator><name pos:start="86:17" pos:end="86:19">top</name></name><argument_list pos:start="86:20" pos:end="86:21">()</argument_list></call><operator pos:start="86:22" pos:end="86:23">&lt;&lt;</operator><literal type="string" pos:start="86:24" pos:end="86:26">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="87:9" pos:end="87:16"><expr pos:start="87:9" pos:end="87:15"><call pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:13"><name pos:start="87:9" pos:end="87:9">b</name><operator pos:start="87:10" pos:end="87:10">.</operator><name pos:start="87:11" pos:end="87:13">pop</name></name><argument_list pos:start="87:14" pos:end="87:15">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>
</unit>
