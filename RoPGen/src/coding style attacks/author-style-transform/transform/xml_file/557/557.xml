<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/557/557.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>

<function pos:start="4:1" pos:end="59:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list>
<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="6:5" pos:end="58:13">
    <decl_stmt pos:start="6:5" pos:end="6:18"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:17"><name pos:start="6:12" pos:end="6:12">a</name><index pos:start="6:13" pos:end="6:17">[<expr pos:start="6:14" pos:end="6:16"><literal type="number" pos:start="6:14" pos:end="6:16">105</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:13"><expr pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:7">cin</name> <operator pos:start="8:9" pos:end="8:10">&gt;&gt;</operator> <name pos:start="8:12" pos:end="8:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">front</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:17"><decl pos:start="10:5" pos:end="10:16"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:12">rear</name> <init pos:start="10:14" pos:end="10:16">= <expr pos:start="10:16" pos:end="10:16"><name pos:start="10:16" pos:end="10:16">n</name></expr></init></decl>;</decl_stmt>
    <for pos:start="11:5" pos:end="57:5">for <control pos:start="11:9" pos:end="11:30">(<init pos:start="11:10" pos:end="11:19"><decl pos:start="11:10" pos:end="11:18"><type pos:start="11:10" pos:end="11:12"><name pos:start="11:10" pos:end="11:12">int</name></type> <name pos:start="11:14" pos:end="11:14">i</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">1</literal></expr></init></decl>;</init><condition pos:start="11:20" pos:end="11:26"><expr pos:start="11:20" pos:end="11:25"><name pos:start="11:20" pos:end="11:20">i</name> <operator pos:start="11:22" pos:end="11:23">&lt;=</operator> <name pos:start="11:25" pos:end="11:25">n</name></expr>;</condition><incr pos:start="11:27" pos:end="11:29"><expr pos:start="11:27" pos:end="11:29"><name pos:start="11:27" pos:end="11:27">i</name><operator pos:start="11:28" pos:end="11:29">++</operator></expr></incr>)</control>
    <block pos:start="12:5" pos:end="57:5">{<block_content pos:start="13:9" pos:end="56:9">
        <decl_stmt pos:start="13:9" pos:end="13:15"><decl pos:start="13:9" pos:end="13:14"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:14">op</name></decl>;</decl_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:18"><expr pos:start="14:9" pos:end="14:17"><name pos:start="14:9" pos:end="14:11">cin</name> <operator pos:start="14:13" pos:end="14:14">&gt;&gt;</operator> <name pos:start="14:16" pos:end="14:17">op</name></expr>;</expr_stmt>
        <if_stmt pos:start="15:9" pos:end="56:9"><if pos:start="15:9" pos:end="44:9">if <condition pos:start="15:12" pos:end="15:20">(<expr pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:14">op</name> <operator pos:start="15:16" pos:end="15:17">==</operator> <literal type="number" pos:start="15:19" pos:end="15:19">1</literal></expr>)</condition>
        <block pos:start="16:9" pos:end="44:9">{<block_content pos:start="17:13" pos:end="43:13">
            <decl_stmt pos:start="17:13" pos:end="17:24"><decl pos:start="17:13" pos:end="17:23"><type pos:start="17:13" pos:end="17:18"><name pos:start="17:13" pos:end="17:18">string</name></type> <name pos:start="17:20" pos:end="17:23">name</name></decl>;</decl_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:24"><expr pos:start="18:13" pos:end="18:23"><name pos:start="18:13" pos:end="18:15">cin</name> <operator pos:start="18:17" pos:end="18:18">&gt;&gt;</operator> <name pos:start="18:20" pos:end="18:23">name</name></expr>;</expr_stmt>
            <decl_stmt pos:start="19:13" pos:end="19:18"><decl pos:start="19:13" pos:end="19:17"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:17">x</name></decl>;</decl_stmt>
            <decl_stmt pos:start="20:13" pos:end="20:18"><decl pos:start="20:13" pos:end="20:17"><type pos:start="20:13" pos:end="20:15"><name pos:start="20:13" pos:end="20:15">int</name></type> <name pos:start="20:17" pos:end="20:17">q</name></decl>;</decl_stmt>
            <for pos:start="21:13" pos:end="29:13">for <control pos:start="21:17" pos:end="21:45">(<init pos:start="21:18" pos:end="21:31"><decl pos:start="21:18" pos:end="21:30"><type pos:start="21:18" pos:end="21:20"><name pos:start="21:18" pos:end="21:20">int</name></type> <name pos:start="21:22" pos:end="21:22">j</name> <init pos:start="21:24" pos:end="21:30">= <expr pos:start="21:26" pos:end="21:30"><name pos:start="21:26" pos:end="21:30">front</name></expr></init></decl>;</init><condition pos:start="21:32" pos:end="21:41"><expr pos:start="21:32" pos:end="21:40"><name pos:start="21:32" pos:end="21:32">j</name> <operator pos:start="21:34" pos:end="21:35">&lt;=</operator> <name pos:start="21:37" pos:end="21:40">rear</name></expr>;</condition><incr pos:start="21:42" pos:end="21:44"><expr pos:start="21:42" pos:end="21:44"><name pos:start="21:42" pos:end="21:42">j</name><operator pos:start="21:43" pos:end="21:44">++</operator></expr></incr>)</control>
            <block pos:start="22:13" pos:end="29:13">{<block_content pos:start="23:17" pos:end="28:17">
                <expr_stmt pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:21"><name pos:start="23:17" pos:end="23:17">x</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal></expr>;</expr_stmt>
                <if_stmt pos:start="24:17" pos:end="28:17"><if pos:start="24:17" pos:end="28:17">if <condition pos:start="24:20" pos:end="24:49">(<expr pos:start="24:21" pos:end="24:48"><name pos:start="24:21" pos:end="24:27"><name pos:start="24:21" pos:end="24:21">a</name><index pos:start="24:22" pos:end="24:24">[<expr pos:start="24:23" pos:end="24:23"><name pos:start="24:23" pos:end="24:23">j</name></expr>]</index><index pos:start="24:25" pos:end="24:27">[<expr pos:start="24:26" pos:end="24:26"><literal type="number" pos:start="24:26" pos:end="24:26">0</literal></expr>]</index></name> <operator pos:start="24:29" pos:end="24:30">==</operator> <name pos:start="24:32" pos:end="24:38"><name pos:start="24:32" pos:end="24:35">name</name><index pos:start="24:36" pos:end="24:38">[<expr pos:start="24:37" pos:end="24:37"><literal type="number" pos:start="24:37" pos:end="24:37">0</literal></expr>]</index></name> <operator pos:start="24:40" pos:end="24:41">&amp;&amp;</operator> <name pos:start="24:43" pos:end="24:43">x</name> <operator pos:start="24:45" pos:end="24:46">==</operator> <literal type="number" pos:start="24:48" pos:end="24:48">0</literal></expr>)</condition>
                <block pos:start="25:17" pos:end="28:17">{<block_content pos:start="26:21" pos:end="27:26">
                    <expr_stmt pos:start="26:21" pos:end="26:26"><expr pos:start="26:21" pos:end="26:25"><name pos:start="26:21" pos:end="26:21">x</name> <operator pos:start="26:23" pos:end="26:23">=</operator> <literal type="number" pos:start="26:25" pos:end="26:25">1</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:21">q</name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:25">x</name></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="30:13" pos:end="43:13"><if pos:start="30:13" pos:end="38:13">if <condition pos:start="30:16" pos:end="30:23">(<expr pos:start="30:17" pos:end="30:22"><name pos:start="30:17" pos:end="30:17">q</name> <operator pos:start="30:19" pos:end="30:20">==</operator> <literal type="number" pos:start="30:22" pos:end="30:22">1</literal></expr>)</condition>
            <block pos:start="31:13" pos:end="38:13">{<block_content pos:start="32:17" pos:end="37:32">
                <for pos:start="32:17" pos:end="35:17">for <control pos:start="32:21" pos:end="32:49">(<init pos:start="32:22" pos:end="32:34"><decl pos:start="32:22" pos:end="32:33"><type pos:start="32:22" pos:end="32:24"><name pos:start="32:22" pos:end="32:24">int</name></type> <name pos:start="32:26" pos:end="32:26">j</name> <init pos:start="32:28" pos:end="32:33">= <expr pos:start="32:30" pos:end="32:33"><name pos:start="32:30" pos:end="32:33">rear</name></expr></init></decl>;</init><condition pos:start="32:35" pos:end="32:45"><expr pos:start="32:35" pos:end="32:44"><name pos:start="32:35" pos:end="32:35">j</name> <operator pos:start="32:37" pos:end="32:38">&gt;=</operator> <name pos:start="32:40" pos:end="32:40">q</name> <operator pos:start="32:42" pos:end="32:42">+</operator> <literal type="number" pos:start="32:44" pos:end="32:44">2</literal></expr>;</condition><incr pos:start="32:46" pos:end="32:48"><expr pos:start="32:46" pos:end="32:48"><name pos:start="32:46" pos:end="32:46">j</name><operator pos:start="32:47" pos:end="32:48">--</operator></expr></incr>)</control>
                <block pos:start="33:17" pos:end="35:17">{<block_content pos:start="34:21" pos:end="34:36">
                    <expr_stmt pos:start="34:21" pos:end="34:36"><expr pos:start="34:21" pos:end="34:35"><name pos:start="34:21" pos:end="34:28"><name pos:start="34:21" pos:end="34:21">a</name><index pos:start="34:22" pos:end="34:28">[<expr pos:start="34:23" pos:end="34:27"><name pos:start="34:23" pos:end="34:23">j</name> <operator pos:start="34:25" pos:end="34:25">+</operator> <literal type="number" pos:start="34:27" pos:end="34:27">1</literal></expr>]</index></name> <operator pos:start="34:30" pos:end="34:30">=</operator> <name pos:start="34:32" pos:end="34:35"><name pos:start="34:32" pos:end="34:32">a</name><index pos:start="34:33" pos:end="34:35">[<expr pos:start="34:34" pos:end="34:34"><name pos:start="34:34" pos:end="34:34">j</name></expr>]</index></name></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt pos:start="36:17" pos:end="36:23"><expr pos:start="36:17" pos:end="36:22"><name pos:start="36:17" pos:end="36:20">rear</name><operator pos:start="36:21" pos:end="36:22">++</operator></expr>;</expr_stmt>
                <expr_stmt pos:start="37:17" pos:end="37:32"><expr pos:start="37:17" pos:end="37:31"><name pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:17">a</name><index pos:start="37:18" pos:end="37:24">[<expr pos:start="37:19" pos:end="37:23"><name pos:start="37:19" pos:end="37:19">x</name> <operator pos:start="37:21" pos:end="37:21">+</operator> <literal type="number" pos:start="37:23" pos:end="37:23">1</literal></expr>]</index></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:31">name</name></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="39:13" pos:end="43:13">else
            <block pos:start="40:13" pos:end="43:13">{<block_content pos:start="41:17" pos:end="42:31">
                <expr_stmt pos:start="41:17" pos:end="41:23"><expr pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:20">rear</name><operator pos:start="41:21" pos:end="41:22">++</operator></expr>;</expr_stmt>
                <expr_stmt pos:start="42:17" pos:end="42:31"><expr pos:start="42:17" pos:end="42:30"><name pos:start="42:17" pos:end="42:23"><name pos:start="42:17" pos:end="42:17">a</name><index pos:start="42:18" pos:end="42:23">[<expr pos:start="42:19" pos:end="42:22"><name pos:start="42:19" pos:end="42:22">rear</name></expr>]</index></name> <operator pos:start="42:25" pos:end="42:25">=</operator> <name pos:start="42:27" pos:end="42:30">name</name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></if>
        <else pos:start="45:9" pos:end="56:9">else
        <block pos:start="46:9" pos:end="56:9">{<block_content pos:start="47:13" pos:end="55:13">
            <if_stmt pos:start="47:13" pos:end="55:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:33">(<expr pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:20">rear</name> <operator pos:start="47:22" pos:end="47:22">-</operator> <name pos:start="47:24" pos:end="47:28">front</name> <operator pos:start="47:30" pos:end="47:30">&gt;</operator> <literal type="number" pos:start="47:32" pos:end="47:32">0</literal></expr>)</condition>
            <block pos:start="48:13" pos:end="51:13">{<block_content pos:start="49:17" pos:end="50:24">
                <expr_stmt pos:start="49:17" pos:end="49:41"><expr pos:start="49:17" pos:end="49:40"><name pos:start="49:17" pos:end="49:20">cout</name> <operator pos:start="49:22" pos:end="49:23">&lt;&lt;</operator> <name pos:start="49:25" pos:end="49:32"><name pos:start="49:25" pos:end="49:25">a</name><index pos:start="49:26" pos:end="49:32">[<expr pos:start="49:27" pos:end="49:31"><name pos:start="49:27" pos:end="49:31">front</name></expr>]</index></name> <operator pos:start="49:34" pos:end="49:35">&lt;&lt;</operator> <name pos:start="49:37" pos:end="49:40">endl</name></expr>;</expr_stmt>
                <expr_stmt pos:start="50:17" pos:end="50:24"><expr pos:start="50:17" pos:end="50:23"><name pos:start="50:17" pos:end="50:21">front</name><operator pos:start="50:22" pos:end="50:23">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="52:13" pos:end="55:13">else
            <block pos:start="53:13" pos:end="55:13">{<block_content pos:start="54:17" pos:end="54:36">
                <expr_stmt pos:start="54:17" pos:end="54:36"><expr pos:start="54:17" pos:end="54:35"><name pos:start="54:17" pos:end="54:20">cout</name> <operator pos:start="54:22" pos:end="54:23">&lt;&lt;</operator> <literal type="string" pos:start="54:25" pos:end="54:27">"0"</literal> <operator pos:start="54:29" pos:end="54:30">&lt;&lt;</operator> <name pos:start="54:32" pos:end="54:35">endl</name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <return pos:start="58:5" pos:end="58:13">return <expr pos:start="58:12" pos:end="58:12"><literal type="number" pos:start="58:12" pos:end="58:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
