<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/522/522.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="36:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="36:1">{<block_content pos:start="4:5" pos:end="35:5">
    <expr_stmt pos:start="4:5" pos:end="4:30"><expr pos:start="4:5" pos:end="4:29"><call pos:start="4:5" pos:end="4:29"><name pos:start="4:5" pos:end="4:11">freopen</name><argument_list pos:start="4:12" pos:end="4:29">(<argument pos:start="4:13" pos:end="4:18"><expr pos:start="4:13" pos:end="4:18"><literal type="string" pos:start="4:13" pos:end="4:18">"p.in"</literal></expr></argument>,<argument pos:start="4:20" pos:end="4:22"><expr pos:start="4:20" pos:end="4:22"><literal type="string" pos:start="4:20" pos:end="4:22">"r"</literal></expr></argument>,<argument pos:start="4:24" pos:end="4:28"><expr pos:start="4:24" pos:end="4:28"><name pos:start="4:24" pos:end="4:28">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:32"><expr pos:start="5:5" pos:end="5:31"><call pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:31">(<argument pos:start="5:13" pos:end="5:19"><expr pos:start="5:13" pos:end="5:19"><literal type="string" pos:start="5:13" pos:end="5:19">"p.out"</literal></expr></argument>,<argument pos:start="5:21" pos:end="5:23"><expr pos:start="5:21" pos:end="5:23"><literal type="string" pos:start="5:21" pos:end="5:23">"w"</literal></expr></argument>,<argument pos:start="5:25" pos:end="5:30"><expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:10"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:11"><expr pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:7">cin</name><operator pos:start="7:8" pos:end="7:9">&gt;&gt;</operator><name pos:start="7:10" pos:end="7:10">t</name></expr>;</expr_stmt>
    <while pos:start="8:5" pos:end="35:5">while<condition pos:start="8:10" pos:end="8:14">(<expr pos:start="8:11" pos:end="8:13"><name pos:start="8:11" pos:end="8:11">t</name><operator pos:start="8:12" pos:end="8:13">--</operator></expr>)</condition><block pos:start="8:15" pos:end="35:5">{<block_content pos:start="9:9" pos:end="34:22">
        <decl_stmt pos:start="9:9" pos:end="9:14"><decl pos:start="9:9" pos:end="9:13"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">n</name></decl>;</decl_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:15"><expr pos:start="10:9" pos:end="10:14"><name pos:start="10:9" pos:end="10:11">cin</name><operator pos:start="10:12" pos:end="10:13">&gt;&gt;</operator><name pos:start="10:14" pos:end="10:14">n</name></expr>;</expr_stmt>
        <decl_stmt pos:start="11:9" pos:end="11:29"><decl pos:start="11:9" pos:end="11:28"><type pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:14">vector</name><argument_list type="generic" pos:start="11:15" pos:end="11:19">&lt;<argument pos:start="11:16" pos:end="11:18"><expr pos:start="11:16" pos:end="11:18"><name pos:start="11:16" pos:end="11:18">int</name></expr></argument>&gt;</argument_list></name></type><name pos:start="11:20" pos:end="11:28"><name pos:start="11:20" pos:end="11:22">vec</name><index pos:start="11:23" pos:end="11:28">[<expr pos:start="11:24" pos:end="11:27"><literal type="number" pos:start="11:24" pos:end="11:27">1000</literal></expr>]</index></name></decl>;</decl_stmt>
        <for pos:start="12:9" pos:end="17:9">for<control pos:start="12:12" pos:end="12:28">(<init pos:start="12:13" pos:end="12:20"><decl pos:start="12:13" pos:end="12:19"><type pos:start="12:13" pos:end="12:15"><name pos:start="12:13" pos:end="12:15">int</name></type> <name pos:start="12:17" pos:end="12:17">i</name><init pos:start="12:18" pos:end="12:19">=<expr pos:start="12:19" pos:end="12:19"><literal type="number" pos:start="12:19" pos:end="12:19">0</literal></expr></init></decl>;</init><condition pos:start="12:21" pos:end="12:24"><expr pos:start="12:21" pos:end="12:23"><name pos:start="12:21" pos:end="12:21">i</name><operator pos:start="12:22" pos:end="12:22">&lt;</operator><name pos:start="12:23" pos:end="12:23">n</name></expr>;</condition><incr pos:start="12:25" pos:end="12:27"><expr pos:start="12:25" pos:end="12:27"><name pos:start="12:25" pos:end="12:25">i</name><operator pos:start="12:26" pos:end="12:27">++</operator></expr></incr>)</control><block pos:start="12:29" pos:end="17:9">{<block_content pos:start="13:13" pos:end="16:32">
            <decl_stmt pos:start="13:13" pos:end="13:20"><decl pos:start="13:13" pos:end="13:17"><type pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:15">int</name></type> <name pos:start="13:17" pos:end="13:17">a</name></decl>,<decl pos:start="13:19" pos:end="13:19"><type ref="prev" pos:start="13:13" pos:end="13:15"/><name pos:start="13:19" pos:end="13:19">b</name></decl>;</decl_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:22"><expr pos:start="14:13" pos:end="14:21"><name pos:start="14:13" pos:end="14:15">cin</name><operator pos:start="14:16" pos:end="14:17">&gt;&gt;</operator><name pos:start="14:18" pos:end="14:18">a</name><operator pos:start="14:19" pos:end="14:20">&gt;&gt;</operator><name pos:start="14:21" pos:end="14:21">b</name></expr>;</expr_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:32"><expr pos:start="15:13" pos:end="15:31"><name pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:15">vec</name><index pos:start="15:16" pos:end="15:18">[<expr pos:start="15:17" pos:end="15:17"><name pos:start="15:17" pos:end="15:17">a</name></expr>]</index></name><operator pos:start="15:19" pos:end="15:19">.</operator><call pos:start="15:20" pos:end="15:31"><name pos:start="15:20" pos:end="15:28">push_back</name><argument_list pos:start="15:29" pos:end="15:31">(<argument pos:start="15:30" pos:end="15:30"><expr pos:start="15:30" pos:end="15:30"><name pos:start="15:30" pos:end="15:30">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:32"><expr pos:start="16:13" pos:end="16:31"><name pos:start="16:13" pos:end="16:18"><name pos:start="16:13" pos:end="16:15">vec</name><index pos:start="16:16" pos:end="16:18">[<expr pos:start="16:17" pos:end="16:17"><name pos:start="16:17" pos:end="16:17">b</name></expr>]</index></name><operator pos:start="16:19" pos:end="16:19">.</operator><call pos:start="16:20" pos:end="16:31"><name pos:start="16:20" pos:end="16:28">push_back</name><argument_list pos:start="16:29" pos:end="16:31">(<argument pos:start="16:30" pos:end="16:30"><expr pos:start="16:30" pos:end="16:30"><name pos:start="16:30" pos:end="16:30">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="18:9" pos:end="18:16"><decl pos:start="18:9" pos:end="18:15"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">p</name><init pos:start="18:14" pos:end="18:15">=<expr pos:start="18:15" pos:end="18:15"><literal type="number" pos:start="18:15" pos:end="18:15">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="19:9" pos:end="33:9">for<control pos:start="19:12" pos:end="19:28">(<init pos:start="19:13" pos:end="19:20"><decl pos:start="19:13" pos:end="19:19"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:17">i</name><init pos:start="19:18" pos:end="19:19">=<expr pos:start="19:19" pos:end="19:19"><literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr></init></decl>;</init><condition pos:start="19:21" pos:end="19:24"><expr pos:start="19:21" pos:end="19:23"><name pos:start="19:21" pos:end="19:21">i</name><operator pos:start="19:22" pos:end="19:22">&lt;</operator><name pos:start="19:23" pos:end="19:23">n</name></expr>;</condition><incr pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:25">i</name><operator pos:start="19:26" pos:end="19:27">++</operator></expr></incr>)</control><block pos:start="19:29" pos:end="33:9">{<block_content pos:start="20:13" pos:end="32:13">
            <decl_stmt pos:start="20:13" pos:end="20:23"><decl pos:start="20:13" pos:end="20:22"><type pos:start="20:13" pos:end="20:15"><name pos:start="20:13" pos:end="20:15">int</name></type> <name pos:start="20:17" pos:end="20:20">flag</name><init pos:start="20:21" pos:end="20:22">=<expr pos:start="20:22" pos:end="20:22"><literal type="number" pos:start="20:22" pos:end="20:22">1</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="21:13" pos:end="26:13">for<control pos:start="21:16" pos:end="21:44">(<init pos:start="21:17" pos:end="21:24"><decl pos:start="21:17" pos:end="21:23"><type pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:19">int</name></type> <name pos:start="21:21" pos:end="21:21">j</name><init pos:start="21:22" pos:end="21:23">=<expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr></init></decl>;</init><condition pos:start="21:25" pos:end="21:40"><expr pos:start="21:25" pos:end="21:39"><name pos:start="21:25" pos:end="21:25">j</name><operator pos:start="21:26" pos:end="21:26">&lt;</operator><name pos:start="21:27" pos:end="21:32"><name pos:start="21:27" pos:end="21:29">vec</name><index pos:start="21:30" pos:end="21:32">[<expr pos:start="21:31" pos:end="21:31"><name pos:start="21:31" pos:end="21:31">i</name></expr>]</index></name><operator pos:start="21:33" pos:end="21:33">.</operator><call pos:start="21:34" pos:end="21:39"><name pos:start="21:34" pos:end="21:37">size</name><argument_list pos:start="21:38" pos:end="21:39">()</argument_list></call></expr>;</condition><incr pos:start="21:41" pos:end="21:43"><expr pos:start="21:41" pos:end="21:43"><name pos:start="21:41" pos:end="21:41">j</name><operator pos:start="21:42" pos:end="21:43">++</operator></expr></incr>)</control><block pos:start="21:45" pos:end="26:13">{<block_content pos:start="22:17" pos:end="25:17">
                <if_stmt pos:start="22:17" pos:end="25:17"><if pos:start="22:17" pos:end="25:17">if<condition pos:start="22:19" pos:end="22:55">(<expr pos:start="22:20" pos:end="22:54"><name pos:start="22:20" pos:end="22:33"><name pos:start="22:20" pos:end="22:22">vec</name><index pos:start="22:23" pos:end="22:33">[<expr pos:start="22:24" pos:end="22:32"><name pos:start="22:24" pos:end="22:32"><name pos:start="22:24" pos:end="22:26">vec</name><index pos:start="22:27" pos:end="22:29">[<expr pos:start="22:28" pos:end="22:28"><name pos:start="22:28" pos:end="22:28">i</name></expr>]</index><index pos:start="22:30" pos:end="22:32">[<expr pos:start="22:31" pos:end="22:31"><name pos:start="22:31" pos:end="22:31">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="22:34" pos:end="22:34">.</operator><call pos:start="22:35" pos:end="22:40"><name pos:start="22:35" pos:end="22:38">size</name><argument_list pos:start="22:39" pos:end="22:40">()</argument_list></call><operator pos:start="22:41" pos:end="22:41">&gt;</operator><name pos:start="22:42" pos:end="22:47"><name pos:start="22:42" pos:end="22:44">vec</name><index pos:start="22:45" pos:end="22:47">[<expr pos:start="22:46" pos:end="22:46"><name pos:start="22:46" pos:end="22:46">i</name></expr>]</index></name><operator pos:start="22:48" pos:end="22:48">.</operator><call pos:start="22:49" pos:end="22:54"><name pos:start="22:49" pos:end="22:52">size</name><argument_list pos:start="22:53" pos:end="22:54">()</argument_list></call></expr>)</condition><block pos:start="22:56" pos:end="25:17">{<block_content pos:start="23:21" pos:end="24:26">
                    <expr_stmt pos:start="23:21" pos:end="23:27"><expr pos:start="23:21" pos:end="23:26"><name pos:start="23:21" pos:end="23:24">flag</name><operator pos:start="23:25" pos:end="23:25">=</operator><literal type="number" pos:start="23:26" pos:end="23:26">0</literal></expr>;</expr_stmt>
                    <break pos:start="24:21" pos:end="24:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="27:13" pos:end="29:13"><if pos:start="27:13" pos:end="29:13">if<condition pos:start="27:15" pos:end="27:32">(<expr pos:start="27:16" pos:end="27:31"><name pos:start="27:16" pos:end="27:21"><name pos:start="27:16" pos:end="27:18">vec</name><index pos:start="27:19" pos:end="27:21">[<expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">i</name></expr>]</index></name><operator pos:start="27:22" pos:end="27:22">.</operator><call pos:start="27:23" pos:end="27:28"><name pos:start="27:23" pos:end="27:26">size</name><argument_list pos:start="27:27" pos:end="27:28">()</argument_list></call><operator pos:start="27:29" pos:end="27:30">==</operator><literal type="number" pos:start="27:31" pos:end="27:31">0</literal></expr>)</condition><block pos:start="27:33" pos:end="29:13">{<block_content pos:start="28:17" pos:end="28:23">
                <expr_stmt pos:start="28:17" pos:end="28:23"><expr pos:start="28:17" pos:end="28:22"><name pos:start="28:17" pos:end="28:20">flag</name><operator pos:start="28:21" pos:end="28:21">=</operator><literal type="number" pos:start="28:22" pos:end="28:22">0</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="30:13" pos:end="32:13"><if pos:start="30:13" pos:end="32:13">if<condition pos:start="30:15" pos:end="30:23">(<expr pos:start="30:16" pos:end="30:22"><name pos:start="30:16" pos:end="30:19">flag</name><operator pos:start="30:20" pos:end="30:21">==</operator><literal type="number" pos:start="30:22" pos:end="30:22">1</literal></expr>)</condition><block pos:start="30:24" pos:end="32:13">{<block_content pos:start="31:17" pos:end="31:20">
                <expr_stmt pos:start="31:17" pos:end="31:20"><expr pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:17">p</name><operator pos:start="31:18" pos:end="31:19">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="34:9" pos:end="34:22"><expr pos:start="34:9" pos:end="34:21"><name pos:start="34:9" pos:end="34:12">cout</name><operator pos:start="34:13" pos:end="34:14">&lt;&lt;</operator><name pos:start="34:15" pos:end="34:15">p</name><operator pos:start="34:16" pos:end="34:17">&lt;&lt;</operator><name pos:start="34:18" pos:end="34:21">endl</name></expr>;</expr_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>
</unit>
