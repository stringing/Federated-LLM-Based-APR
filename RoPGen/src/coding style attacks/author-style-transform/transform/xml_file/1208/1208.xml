<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1208/1208.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:21"><decl pos:start="3:1" pos:end="3:20"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:20"><name pos:start="3:5" pos:end="3:7">vis</name><index pos:start="3:8" pos:end="3:12">[<expr pos:start="3:9" pos:end="3:11"><literal type="number" pos:start="3:9" pos:end="3:11">110</literal></expr>]</index><index pos:start="3:13" pos:end="3:17">[<expr pos:start="3:14" pos:end="3:16"><literal type="number" pos:start="3:14" pos:end="3:16">110</literal></expr>]</index><index pos:start="3:18" pos:end="3:20">[<expr pos:start="3:19" pos:end="3:19"><literal type="number" pos:start="3:19" pos:end="3:19">5</literal></expr>]</index></name></decl>;</decl_stmt>
<struct pos:start="4:1" pos:end="11:2">struct <name pos:start="4:8" pos:end="4:11">node</name><block pos:start="4:12" pos:end="11:1">{<public type="default" pos:start="5:5" pos:end="10:5">
    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name></decl>,<decl pos:start="5:11" pos:end="5:11"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:11" pos:end="5:11">y</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:12"><decl pos:start="6:5" pos:end="6:11"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">cnt</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">f</name></decl>;</decl_stmt>
    <function type="operator" pos:start="8:5" pos:end="10:5"><type pos:start="8:5" pos:end="8:8"><name pos:start="8:5" pos:end="8:8">bool</name></type> <name pos:start="8:10" pos:end="8:19">operator <name pos:start="8:19" pos:end="8:19">&gt;</name></name> <parameter_list pos:start="8:21" pos:end="8:35">(<parameter pos:start="8:22" pos:end="8:34"><decl pos:start="8:22" pos:end="8:34"><type pos:start="8:22" pos:end="8:33"><specifier pos:start="8:22" pos:end="8:26">const</specifier> <name pos:start="8:28" pos:end="8:31">node</name> <modifier pos:start="8:33" pos:end="8:33">&amp;</modifier></type><name pos:start="8:34" pos:end="8:34">x</name></decl></parameter>)</parameter_list> <specifier pos:start="8:37" pos:end="8:41">const</specifier> <block pos:start="8:43" pos:end="10:5">{<block_content pos:start="9:9" pos:end="9:23">
        <return pos:start="9:9" pos:end="9:23">return <expr pos:start="9:16" pos:end="9:22"><name pos:start="9:16" pos:end="9:16">f</name> <operator pos:start="9:18" pos:end="9:18">&gt;</operator> <name pos:start="9:20" pos:end="9:22"><name pos:start="9:20" pos:end="9:20">x</name><operator pos:start="9:21" pos:end="9:21">.</operator><name pos:start="9:22" pos:end="9:22">f</name></name></expr>;</return>
    </block_content>}</block></function>
</public>}</block>;</struct>
<decl_stmt pos:start="12:1" pos:end="12:14"><decl pos:start="12:1" pos:end="12:13"><type pos:start="12:1" pos:end="12:6"><name pos:start="12:1" pos:end="12:6">string</name></type> <name pos:start="12:8" pos:end="12:13"><name pos:start="12:8" pos:end="12:8">a</name><index pos:start="12:9" pos:end="12:13">[<expr pos:start="12:10" pos:end="12:12"><literal type="number" pos:start="12:10" pos:end="12:12">110</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="13:1" pos:end="13:41"><decl pos:start="13:1" pos:end="13:40"><type pos:start="13:1" pos:end="13:3"><name pos:start="13:1" pos:end="13:3">int</name></type> <name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:6">fx</name><index pos:start="13:7" pos:end="13:9">[<expr pos:start="13:8" pos:end="13:8"><literal type="number" pos:start="13:8" pos:end="13:8">4</literal></expr>]</index><index pos:start="13:10" pos:end="13:12">[<expr pos:start="13:11" pos:end="13:11"><literal type="number" pos:start="13:11" pos:end="13:11">2</literal></expr>]</index></name><init pos:start="13:13" pos:end="13:40">=<expr pos:start="13:14" pos:end="13:40"><block pos:start="13:14" pos:end="13:40">{<expr pos:start="13:15" pos:end="13:20"><block pos:start="13:15" pos:end="13:20">{<expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>,<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr>}</block></expr>,<expr pos:start="13:22" pos:end="13:26"><block pos:start="13:22" pos:end="13:26">{<expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr>,<expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">1</literal></expr>}</block></expr>,<expr pos:start="13:28" pos:end="13:32"><block pos:start="13:28" pos:end="13:32">{<expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">1</literal></expr>,<expr pos:start="13:31" pos:end="13:31"><literal type="number" pos:start="13:31" pos:end="13:31">0</literal></expr>}</block></expr>,<expr pos:start="13:34" pos:end="13:39"><block pos:start="13:34" pos:end="13:39">{<expr pos:start="13:35" pos:end="13:35"><literal type="number" pos:start="13:35" pos:end="13:35">0</literal></expr>,<expr pos:start="13:37" pos:end="13:38"><operator pos:start="13:37" pos:end="13:37">-</operator><literal type="number" pos:start="13:38" pos:end="13:38">1</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="14:1" pos:end="14:8"><decl pos:start="14:1" pos:end="14:5"><type pos:start="14:1" pos:end="14:3"><name pos:start="14:1" pos:end="14:3">int</name></type> <name pos:start="14:5" pos:end="14:5">n</name></decl>,<decl pos:start="14:7" pos:end="14:7"><type ref="prev" pos:start="14:1" pos:end="14:3"/><name pos:start="14:7" pos:end="14:7">m</name></decl>;</decl_stmt>
<decl_stmt pos:start="15:1" pos:end="15:7"><decl pos:start="15:1" pos:end="15:6"><type pos:start="15:1" pos:end="15:3"><name pos:start="15:1" pos:end="15:3">int</name></type> <name pos:start="15:5" pos:end="15:6">x1</name></decl>;</decl_stmt>
<decl_stmt pos:start="16:1" pos:end="16:7"><decl pos:start="16:1" pos:end="16:6"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:6">Y1</name></decl>;</decl_stmt>
<decl_stmt pos:start="17:1" pos:end="17:7"><decl pos:start="17:1" pos:end="17:6"><type pos:start="17:1" pos:end="17:3"><name pos:start="17:1" pos:end="17:3">int</name></type> <name pos:start="17:5" pos:end="17:6">x2</name></decl>;</decl_stmt>
<decl_stmt pos:start="18:1" pos:end="18:7"><decl pos:start="18:1" pos:end="18:6"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:6">y2</name></decl>;</decl_stmt>
<decl_stmt pos:start="19:1" pos:end="19:6"><decl pos:start="19:1" pos:end="19:5"><type pos:start="19:1" pos:end="19:3"><name pos:start="19:1" pos:end="19:3">int</name></type> <name pos:start="19:5" pos:end="19:5">k</name></decl>;</decl_stmt>
<function pos:start="20:1" pos:end="22:1"><type pos:start="20:1" pos:end="20:4"><name pos:start="20:1" pos:end="20:4">bool</name></type> <name pos:start="20:6" pos:end="20:7">in</name><parameter_list pos:start="20:8" pos:end="20:20">(<parameter pos:start="20:9" pos:end="20:13"><decl pos:start="20:9" pos:end="20:13"><type pos:start="20:9" pos:end="20:13"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:13">x</name></decl></parameter>,<parameter pos:start="20:15" pos:end="20:19"><decl pos:start="20:15" pos:end="20:19"><type pos:start="20:15" pos:end="20:19"><name pos:start="20:15" pos:end="20:17">int</name></type> <name pos:start="20:19" pos:end="20:19">y</name></decl></parameter>)</parameter_list><block pos:start="20:21" pos:end="22:1">{<block_content pos:start="21:5" pos:end="21:32">
    <return pos:start="21:5" pos:end="21:32">return <expr pos:start="21:12" pos:end="21:31"><name pos:start="21:12" pos:end="21:12">x</name><operator pos:start="21:13" pos:end="21:14">&gt;=</operator><literal type="number" pos:start="21:15" pos:end="21:15">0</literal><operator pos:start="21:16" pos:end="21:17">&amp;&amp;</operator><name pos:start="21:18" pos:end="21:18">y</name><operator pos:start="21:19" pos:end="21:20">&gt;=</operator><literal type="number" pos:start="21:21" pos:end="21:21">0</literal><operator pos:start="21:22" pos:end="21:23">&amp;&amp;</operator><name pos:start="21:24" pos:end="21:24">x</name><operator pos:start="21:25" pos:end="21:25">&lt;</operator><name pos:start="21:26" pos:end="21:26">n</name><operator pos:start="21:27" pos:end="21:28">&amp;&amp;</operator><name pos:start="21:29" pos:end="21:29">y</name><operator pos:start="21:30" pos:end="21:30">&lt;</operator><name pos:start="21:31" pos:end="21:31">m</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="23:1" pos:end="30:1"><type pos:start="23:1" pos:end="23:4"><name pos:start="23:1" pos:end="23:4">node</name></type> <name pos:start="23:6" pos:end="23:14">make_node</name><parameter_list pos:start="23:15" pos:end="23:41">(<parameter pos:start="23:16" pos:end="23:20"><decl pos:start="23:16" pos:end="23:20"><type pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:18">int</name></type> <name pos:start="23:20" pos:end="23:20">x</name></decl></parameter>,<parameter pos:start="23:22" pos:end="23:26"><decl pos:start="23:22" pos:end="23:26"><type pos:start="23:22" pos:end="23:26"><name pos:start="23:22" pos:end="23:24">int</name></type> <name pos:start="23:26" pos:end="23:26">y</name></decl></parameter>,<parameter pos:start="23:28" pos:end="23:34"><decl pos:start="23:28" pos:end="23:34"><type pos:start="23:28" pos:end="23:34"><name pos:start="23:28" pos:end="23:30">int</name></type> <name pos:start="23:32" pos:end="23:34">cnt</name></decl></parameter>,<parameter pos:start="23:36" pos:end="23:40"><decl pos:start="23:36" pos:end="23:40"><type pos:start="23:36" pos:end="23:40"><name pos:start="23:36" pos:end="23:38">int</name></type> <name pos:start="23:40" pos:end="23:40">f</name></decl></parameter>)</parameter_list><block pos:start="23:42" pos:end="30:1">{<block_content pos:start="24:5" pos:end="29:16">
    <decl_stmt pos:start="24:5" pos:end="24:14"><decl pos:start="24:5" pos:end="24:13"><type pos:start="24:5" pos:end="24:8"><name pos:start="24:5" pos:end="24:8">node</name></type> <name pos:start="24:10" pos:end="24:13">temp</name></decl>;</decl_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:13"><expr pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:8">temp</name><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:10">x</name></name><operator pos:start="25:11" pos:end="25:11">=</operator><name pos:start="25:12" pos:end="25:12">x</name></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:13"><expr pos:start="26:5" pos:end="26:12"><name pos:start="26:5" pos:end="26:10"><name pos:start="26:5" pos:end="26:8">temp</name><operator pos:start="26:9" pos:end="26:9">.</operator><name pos:start="26:10" pos:end="26:10">y</name></name><operator pos:start="26:11" pos:end="26:11">=</operator><name pos:start="26:12" pos:end="26:12">y</name></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:17"><expr pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:8">temp</name><operator pos:start="27:9" pos:end="27:9">.</operator><name pos:start="27:10" pos:end="27:12">cnt</name></name><operator pos:start="27:13" pos:end="27:13">=</operator><name pos:start="27:14" pos:end="27:16">cnt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:13"><expr pos:start="28:5" pos:end="28:12"><name pos:start="28:5" pos:end="28:10"><name pos:start="28:5" pos:end="28:8">temp</name><operator pos:start="28:9" pos:end="28:9">.</operator><name pos:start="28:10" pos:end="28:10">f</name></name><operator pos:start="28:11" pos:end="28:11">=</operator><name pos:start="28:12" pos:end="28:12">f</name></expr>;</expr_stmt>
    <return pos:start="29:5" pos:end="29:16">return <expr pos:start="29:12" pos:end="29:15"><name pos:start="29:12" pos:end="29:15">temp</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="31:1" pos:end="62:1"><type pos:start="31:1" pos:end="31:4"><name pos:start="31:1" pos:end="31:4">void</name></type> <name pos:start="31:6" pos:end="31:8">bfs</name><parameter_list pos:start="31:9" pos:end="31:10">()</parameter_list><block pos:start="31:11" pos:end="62:1">{<block_content pos:start="32:5" pos:end="61:5">
    <decl_stmt pos:start="32:5" pos:end="32:56"><decl pos:start="32:5" pos:end="32:55"><type pos:start="32:5" pos:end="32:53"><name pos:start="32:5" pos:end="32:53"><name pos:start="32:5" pos:end="32:18">priority_queue</name><argument_list type="generic" pos:start="32:19" pos:end="32:53">&lt;<argument pos:start="32:20" pos:end="32:23"><expr pos:start="32:20" pos:end="32:23"><name pos:start="32:20" pos:end="32:23">node</name></expr></argument>,<argument pos:start="32:25" pos:end="32:36"><expr pos:start="32:25" pos:end="32:36"><name pos:start="32:25" pos:end="32:36"><name pos:start="32:25" pos:end="32:30">vector</name><argument_list type="generic" pos:start="32:31" pos:end="32:36">&lt;<argument pos:start="32:32" pos:end="32:35"><expr pos:start="32:32" pos:end="32:35"><name pos:start="32:32" pos:end="32:35">node</name></expr></argument>&gt;</argument_list></name></expr></argument>, <argument pos:start="32:39" pos:end="32:51"><expr pos:start="32:39" pos:end="32:51"><name pos:start="32:39" pos:end="32:51"><name pos:start="32:39" pos:end="32:45">greater</name><argument_list type="generic" pos:start="32:46" pos:end="32:51">&lt;<argument pos:start="32:47" pos:end="32:50"><expr pos:start="32:47" pos:end="32:50"><name pos:start="32:47" pos:end="32:50">node</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name></type> <name pos:start="32:55" pos:end="32:55">q</name></decl>;</decl_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><call pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:5">q</name><operator pos:start="33:6" pos:end="33:6">.</operator><name pos:start="33:7" pos:end="33:10">push</name></name><argument_list pos:start="33:11" pos:end="33:32">(<argument pos:start="33:12" pos:end="33:31"><expr pos:start="33:12" pos:end="33:31"><call pos:start="33:12" pos:end="33:31"><name pos:start="33:12" pos:end="33:20">make_node</name><argument_list pos:start="33:21" pos:end="33:31">(<argument pos:start="33:22" pos:end="33:23"><expr pos:start="33:22" pos:end="33:23"><name pos:start="33:22" pos:end="33:23">x1</name></expr></argument>,<argument pos:start="33:25" pos:end="33:26"><expr pos:start="33:25" pos:end="33:26"><name pos:start="33:25" pos:end="33:26">Y1</name></expr></argument>,<argument pos:start="33:28" pos:end="33:28"><expr pos:start="33:28" pos:end="33:28"><literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr></argument>,<argument pos:start="33:30" pos:end="33:30"><expr pos:start="33:30" pos:end="33:30"><literal type="number" pos:start="33:30" pos:end="33:30">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:33"><expr pos:start="34:5" pos:end="34:32"><call pos:start="34:5" pos:end="34:32"><name pos:start="34:5" pos:end="34:10"><name pos:start="34:5" pos:end="34:5">q</name><operator pos:start="34:6" pos:end="34:6">.</operator><name pos:start="34:7" pos:end="34:10">push</name></name><argument_list pos:start="34:11" pos:end="34:32">(<argument pos:start="34:12" pos:end="34:31"><expr pos:start="34:12" pos:end="34:31"><call pos:start="34:12" pos:end="34:31"><name pos:start="34:12" pos:end="34:20">make_node</name><argument_list pos:start="34:21" pos:end="34:31">(<argument pos:start="34:22" pos:end="34:23"><expr pos:start="34:22" pos:end="34:23"><name pos:start="34:22" pos:end="34:23">x1</name></expr></argument>,<argument pos:start="34:25" pos:end="34:26"><expr pos:start="34:25" pos:end="34:26"><name pos:start="34:25" pos:end="34:26">Y1</name></expr></argument>,<argument pos:start="34:28" pos:end="34:28"><expr pos:start="34:28" pos:end="34:28"><literal type="number" pos:start="34:28" pos:end="34:28">0</literal></expr></argument>,<argument pos:start="34:30" pos:end="34:30"><expr pos:start="34:30" pos:end="34:30"><literal type="number" pos:start="34:30" pos:end="34:30">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><call pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:10"><name pos:start="35:5" pos:end="35:5">q</name><operator pos:start="35:6" pos:end="35:6">.</operator><name pos:start="35:7" pos:end="35:10">push</name></name><argument_list pos:start="35:11" pos:end="35:32">(<argument pos:start="35:12" pos:end="35:31"><expr pos:start="35:12" pos:end="35:31"><call pos:start="35:12" pos:end="35:31"><name pos:start="35:12" pos:end="35:20">make_node</name><argument_list pos:start="35:21" pos:end="35:31">(<argument pos:start="35:22" pos:end="35:23"><expr pos:start="35:22" pos:end="35:23"><name pos:start="35:22" pos:end="35:23">x1</name></expr></argument>,<argument pos:start="35:25" pos:end="35:26"><expr pos:start="35:25" pos:end="35:26"><name pos:start="35:25" pos:end="35:26">Y1</name></expr></argument>,<argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><literal type="number" pos:start="35:28" pos:end="35:28">0</literal></expr></argument>,<argument pos:start="35:30" pos:end="35:30"><expr pos:start="35:30" pos:end="35:30"><literal type="number" pos:start="35:30" pos:end="35:30">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:33"><expr pos:start="36:5" pos:end="36:32"><call pos:start="36:5" pos:end="36:32"><name pos:start="36:5" pos:end="36:10"><name pos:start="36:5" pos:end="36:5">q</name><operator pos:start="36:6" pos:end="36:6">.</operator><name pos:start="36:7" pos:end="36:10">push</name></name><argument_list pos:start="36:11" pos:end="36:32">(<argument pos:start="36:12" pos:end="36:31"><expr pos:start="36:12" pos:end="36:31"><call pos:start="36:12" pos:end="36:31"><name pos:start="36:12" pos:end="36:20">make_node</name><argument_list pos:start="36:21" pos:end="36:31">(<argument pos:start="36:22" pos:end="36:23"><expr pos:start="36:22" pos:end="36:23"><name pos:start="36:22" pos:end="36:23">x1</name></expr></argument>,<argument pos:start="36:25" pos:end="36:26"><expr pos:start="36:25" pos:end="36:26"><name pos:start="36:25" pos:end="36:26">Y1</name></expr></argument>,<argument pos:start="36:28" pos:end="36:28"><expr pos:start="36:28" pos:end="36:28"><literal type="number" pos:start="36:28" pos:end="36:28">0</literal></expr></argument>,<argument pos:start="36:30" pos:end="36:30"><expr pos:start="36:30" pos:end="36:30"><literal type="number" pos:start="36:30" pos:end="36:30">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while pos:start="37:5" pos:end="61:5">while<condition pos:start="37:10" pos:end="37:21">(<expr pos:start="37:11" pos:end="37:20"><operator pos:start="37:11" pos:end="37:11">!</operator><call pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:18"><name pos:start="37:12" pos:end="37:12">q</name><operator pos:start="37:13" pos:end="37:13">.</operator><name pos:start="37:14" pos:end="37:18">empty</name></name><argument_list pos:start="37:19" pos:end="37:20">()</argument_list></call></expr>)</condition><block pos:start="37:22" pos:end="61:5">{<block_content pos:start="38:9" pos:end="60:9">
        <decl_stmt pos:start="38:9" pos:end="38:23"><decl pos:start="38:9" pos:end="38:22"><type pos:start="38:9" pos:end="38:12"><name pos:start="38:9" pos:end="38:12">node</name></type> <name pos:start="38:14" pos:end="38:14">t</name><init pos:start="38:15" pos:end="38:22">=<expr pos:start="38:16" pos:end="38:22"><call pos:start="38:16" pos:end="38:22"><name pos:start="38:16" pos:end="38:20"><name pos:start="38:16" pos:end="38:16">q</name><operator pos:start="38:17" pos:end="38:17">.</operator><name pos:start="38:18" pos:end="38:20">top</name></name><argument_list pos:start="38:21" pos:end="38:22">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="39:9" pos:end="39:16"><expr pos:start="39:9" pos:end="39:15"><call pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:9">q</name><operator pos:start="39:10" pos:end="39:10">.</operator><name pos:start="39:11" pos:end="39:13">pop</name></name><argument_list pos:start="39:14" pos:end="39:15">()</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="40:9" pos:end="48:9"><if pos:start="40:9" pos:end="48:9">if<condition pos:start="40:11" pos:end="40:28">(<expr pos:start="40:12" pos:end="40:27"><name pos:start="40:12" pos:end="40:14"><name pos:start="40:12" pos:end="40:12">t</name><operator pos:start="40:13" pos:end="40:13">.</operator><name pos:start="40:14" pos:end="40:14">x</name></name><operator pos:start="40:15" pos:end="40:16">==</operator><name pos:start="40:17" pos:end="40:18">x2</name><operator pos:start="40:19" pos:end="40:20">&amp;&amp;</operator><name pos:start="40:21" pos:end="40:23"><name pos:start="40:21" pos:end="40:21">t</name><operator pos:start="40:22" pos:end="40:22">.</operator><name pos:start="40:23" pos:end="40:23">y</name></name><operator pos:start="40:24" pos:end="40:25">==</operator><name pos:start="40:26" pos:end="40:27">y2</name></expr>)</condition><block pos:start="40:29" pos:end="48:9">{<block_content pos:start="41:13" pos:end="47:19">
            <if_stmt pos:start="41:13" pos:end="46:13"><if pos:start="41:13" pos:end="44:13">if<condition pos:start="41:15" pos:end="41:23">(<expr pos:start="41:16" pos:end="41:22"><name pos:start="41:16" pos:end="41:22"><name pos:start="41:16" pos:end="41:16">t</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:20">cnt</name></name><operator pos:start="41:21" pos:end="41:21">&lt;</operator><name pos:start="41:22" pos:end="41:22">k</name></expr>)</condition><block pos:start="41:24" pos:end="44:13">{<block_content pos:start="43:17" pos:end="43:34">

                <expr_stmt pos:start="43:17" pos:end="43:34"><expr pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:20">cout</name><operator pos:start="43:21" pos:end="43:22">&lt;&lt;</operator><literal type="string" pos:start="43:23" pos:end="43:27">"yes"</literal><operator pos:start="43:28" pos:end="43:29">&lt;&lt;</operator><name pos:start="43:30" pos:end="43:33">endl</name></expr>;</expr_stmt>
            </block_content>}</block></if><else pos:start="44:14" pos:end="46:13">else<block pos:start="44:18" pos:end="46:13">{<block_content pos:start="45:17" pos:end="45:33">
                <expr_stmt pos:start="45:17" pos:end="45:33"><expr pos:start="45:17" pos:end="45:32"><name pos:start="45:17" pos:end="45:20">cout</name><operator pos:start="45:21" pos:end="45:22">&lt;&lt;</operator><literal type="string" pos:start="45:23" pos:end="45:26">"no"</literal><operator pos:start="45:27" pos:end="45:28">&lt;&lt;</operator><name pos:start="45:29" pos:end="45:32">endl</name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
            <return pos:start="47:13" pos:end="47:19">return;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:11">vis</name><index pos:start="49:12" pos:end="49:16">[<expr pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:13">t</name><operator pos:start="49:14" pos:end="49:14">.</operator><name pos:start="49:15" pos:end="49:15">x</name></name></expr>]</index><index pos:start="49:17" pos:end="49:21">[<expr pos:start="49:18" pos:end="49:20"><name pos:start="49:18" pos:end="49:20"><name pos:start="49:18" pos:end="49:18">t</name><operator pos:start="49:19" pos:end="49:19">.</operator><name pos:start="49:20" pos:end="49:20">y</name></name></expr>]</index><index pos:start="49:22" pos:end="49:26">[<expr pos:start="49:23" pos:end="49:25"><name pos:start="49:23" pos:end="49:25"><name pos:start="49:23" pos:end="49:23">t</name><operator pos:start="49:24" pos:end="49:24">.</operator><name pos:start="49:25" pos:end="49:25">f</name></name></expr>]</index></name><operator pos:start="49:27" pos:end="49:27">=</operator><literal type="number" pos:start="49:28" pos:end="49:28">1</literal></expr>;</expr_stmt>
        <for pos:start="50:9" pos:end="60:9">for<control pos:start="50:12" pos:end="50:28">(<init pos:start="50:13" pos:end="50:20"><decl pos:start="50:13" pos:end="50:19"><type pos:start="50:13" pos:end="50:15"><name pos:start="50:13" pos:end="50:15">int</name></type> <name pos:start="50:17" pos:end="50:17">s</name><init pos:start="50:18" pos:end="50:19">=<expr pos:start="50:19" pos:end="50:19"><literal type="number" pos:start="50:19" pos:end="50:19">0</literal></expr></init></decl>;</init><condition pos:start="50:21" pos:end="50:24"><expr pos:start="50:21" pos:end="50:23"><name pos:start="50:21" pos:end="50:21">s</name><operator pos:start="50:22" pos:end="50:22">&lt;</operator><literal type="number" pos:start="50:23" pos:end="50:23">4</literal></expr>;</condition><incr pos:start="50:25" pos:end="50:27"><expr pos:start="50:25" pos:end="50:27"><name pos:start="50:25" pos:end="50:25">s</name><operator pos:start="50:26" pos:end="50:27">++</operator></expr></incr>)</control><block pos:start="50:29" pos:end="60:9">{<block_content pos:start="51:13" pos:end="59:13">
            <decl_stmt pos:start="51:13" pos:end="51:32"><decl pos:start="51:13" pos:end="51:31"><type pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:15">int</name></type> <name pos:start="51:17" pos:end="51:18">tx</name><init pos:start="51:19" pos:end="51:31">=<expr pos:start="51:20" pos:end="51:31"><name pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:20">t</name><operator pos:start="51:21" pos:end="51:21">.</operator><name pos:start="51:22" pos:end="51:22">x</name></name><operator pos:start="51:23" pos:end="51:23">+</operator><name pos:start="51:24" pos:end="51:31"><name pos:start="51:24" pos:end="51:25">fx</name><index pos:start="51:26" pos:end="51:28">[<expr pos:start="51:27" pos:end="51:27"><name pos:start="51:27" pos:end="51:27">s</name></expr>]</index><index pos:start="51:29" pos:end="51:31">[<expr pos:start="51:30" pos:end="51:30"><literal type="number" pos:start="51:30" pos:end="51:30">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="52:13" pos:end="52:32"><decl pos:start="52:13" pos:end="52:31"><type pos:start="52:13" pos:end="52:15"><name pos:start="52:13" pos:end="52:15">int</name></type> <name pos:start="52:17" pos:end="52:18">ty</name><init pos:start="52:19" pos:end="52:31">=<expr pos:start="52:20" pos:end="52:31"><name pos:start="52:20" pos:end="52:22"><name pos:start="52:20" pos:end="52:20">t</name><operator pos:start="52:21" pos:end="52:21">.</operator><name pos:start="52:22" pos:end="52:22">y</name></name><operator pos:start="52:23" pos:end="52:23">+</operator><name pos:start="52:24" pos:end="52:31"><name pos:start="52:24" pos:end="52:25">fx</name><index pos:start="52:26" pos:end="52:28">[<expr pos:start="52:27" pos:end="52:27"><name pos:start="52:27" pos:end="52:27">s</name></expr>]</index><index pos:start="52:29" pos:end="52:31">[<expr pos:start="52:30" pos:end="52:30"><literal type="number" pos:start="52:30" pos:end="52:30">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="53:13" pos:end="59:13"><if pos:start="53:13" pos:end="59:13">if<condition pos:start="53:15" pos:end="53:42">(<expr pos:start="53:16" pos:end="53:41"><call pos:start="53:16" pos:end="53:24"><name pos:start="53:16" pos:end="53:17">in</name><argument_list pos:start="53:18" pos:end="53:24">(<argument pos:start="53:19" pos:end="53:20"><expr pos:start="53:19" pos:end="53:20"><name pos:start="53:19" pos:end="53:20">tx</name></expr></argument>,<argument pos:start="53:22" pos:end="53:23"><expr pos:start="53:22" pos:end="53:23"><name pos:start="53:22" pos:end="53:23">ty</name></expr></argument>)</argument_list></call><operator pos:start="53:25" pos:end="53:26">&amp;&amp;</operator><operator pos:start="53:27" pos:end="53:27">!</operator><name pos:start="53:28" pos:end="53:41"><name pos:start="53:28" pos:end="53:30">vis</name><index pos:start="53:31" pos:end="53:34">[<expr pos:start="53:32" pos:end="53:33"><name pos:start="53:32" pos:end="53:33">tx</name></expr>]</index><index pos:start="53:35" pos:end="53:38">[<expr pos:start="53:36" pos:end="53:37"><name pos:start="53:36" pos:end="53:37">ty</name></expr>]</index><index pos:start="53:39" pos:end="53:41">[<expr pos:start="53:40" pos:end="53:40"><name pos:start="53:40" pos:end="53:40">s</name></expr>]</index></name></expr>)</condition><block pos:start="53:43" pos:end="59:13">{<block_content pos:start="54:17" pos:end="58:17">
                <if_stmt pos:start="54:17" pos:end="58:17"><if pos:start="54:17" pos:end="56:17">if<condition pos:start="54:19" pos:end="54:26">(<expr pos:start="54:20" pos:end="54:25"><name pos:start="54:20" pos:end="54:22"><name pos:start="54:20" pos:end="54:20">t</name><operator pos:start="54:21" pos:end="54:21">.</operator><name pos:start="54:22" pos:end="54:22">f</name></name><operator pos:start="54:23" pos:end="54:24">==</operator><name pos:start="54:25" pos:end="54:25">s</name></expr>)</condition><block pos:start="54:27" pos:end="56:17">{<block_content pos:start="55:21" pos:end="55:53">
                    <expr_stmt pos:start="55:21" pos:end="55:53"><expr pos:start="55:21" pos:end="55:52"><call pos:start="55:21" pos:end="55:52"><name pos:start="55:21" pos:end="55:26"><name pos:start="55:21" pos:end="55:21">q</name><operator pos:start="55:22" pos:end="55:22">.</operator><name pos:start="55:23" pos:end="55:26">push</name></name><argument_list pos:start="55:27" pos:end="55:52">(<argument pos:start="55:28" pos:end="55:51"><expr pos:start="55:28" pos:end="55:51"><call pos:start="55:28" pos:end="55:51"><name pos:start="55:28" pos:end="55:36">make_node</name><argument_list pos:start="55:37" pos:end="55:51">(<argument pos:start="55:38" pos:end="55:39"><expr pos:start="55:38" pos:end="55:39"><name pos:start="55:38" pos:end="55:39">tx</name></expr></argument>,<argument pos:start="55:41" pos:end="55:42"><expr pos:start="55:41" pos:end="55:42"><name pos:start="55:41" pos:end="55:42">ty</name></expr></argument>,<argument pos:start="55:44" pos:end="55:48"><expr pos:start="55:44" pos:end="55:48"><name pos:start="55:44" pos:end="55:48"><name pos:start="55:44" pos:end="55:44">t</name><operator pos:start="55:45" pos:end="55:45">.</operator><name pos:start="55:46" pos:end="55:48">cnt</name></name></expr></argument>,<argument pos:start="55:50" pos:end="55:50"><expr pos:start="55:50" pos:end="55:50"><name pos:start="55:50" pos:end="55:50">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if><else pos:start="56:18" pos:end="58:17">else<block pos:start="56:22" pos:end="58:17">{<block_content pos:start="57:21" pos:end="57:55">
                    <expr_stmt pos:start="57:21" pos:end="57:55"><expr pos:start="57:21" pos:end="57:54"><call pos:start="57:21" pos:end="57:54"><name pos:start="57:21" pos:end="57:26"><name pos:start="57:21" pos:end="57:21">q</name><operator pos:start="57:22" pos:end="57:22">.</operator><name pos:start="57:23" pos:end="57:26">push</name></name><argument_list pos:start="57:27" pos:end="57:54">(<argument pos:start="57:28" pos:end="57:53"><expr pos:start="57:28" pos:end="57:53"><call pos:start="57:28" pos:end="57:53"><name pos:start="57:28" pos:end="57:36">make_node</name><argument_list pos:start="57:37" pos:end="57:53">(<argument pos:start="57:38" pos:end="57:39"><expr pos:start="57:38" pos:end="57:39"><name pos:start="57:38" pos:end="57:39">tx</name></expr></argument>,<argument pos:start="57:41" pos:end="57:42"><expr pos:start="57:41" pos:end="57:42"><name pos:start="57:41" pos:end="57:42">ty</name></expr></argument>,<argument pos:start="57:44" pos:end="57:50"><expr pos:start="57:44" pos:end="57:50"><name pos:start="57:44" pos:end="57:48"><name pos:start="57:44" pos:end="57:44">t</name><operator pos:start="57:45" pos:end="57:45">.</operator><name pos:start="57:46" pos:end="57:48">cnt</name></name><operator pos:start="57:49" pos:end="57:49">+</operator><literal type="number" pos:start="57:50" pos:end="57:50">1</literal></expr></argument>,<argument pos:start="57:52" pos:end="57:52"><expr pos:start="57:52" pos:end="57:52"><name pos:start="57:52" pos:end="57:52">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></while>
</block_content>}</block></function>
<function pos:start="63:1" pos:end="78:1"><type pos:start="63:1" pos:end="63:3"><name pos:start="63:1" pos:end="63:3">int</name></type> <name pos:start="63:5" pos:end="63:8">main</name><parameter_list pos:start="63:9" pos:end="63:10">()</parameter_list><block pos:start="63:11" pos:end="78:1">{<block_content pos:start="64:5" pos:end="77:13">
    <expr_stmt pos:start="64:5" pos:end="64:33"><expr pos:start="64:5" pos:end="64:32"><call pos:start="64:5" pos:end="64:32"><name pos:start="64:5" pos:end="64:11">freopen</name><argument_list pos:start="64:12" pos:end="64:32">(<argument pos:start="64:13" pos:end="64:21"><expr pos:start="64:13" pos:end="64:21"><literal type="string" pos:start="64:13" pos:end="64:21">"maze.in"</literal></expr></argument>,<argument pos:start="64:23" pos:end="64:25"><expr pos:start="64:23" pos:end="64:25"><literal type="string" pos:start="64:23" pos:end="64:25">"r"</literal></expr></argument>,<argument pos:start="64:27" pos:end="64:31"><expr pos:start="64:27" pos:end="64:31"><name pos:start="64:27" pos:end="64:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="65:5" pos:end="65:35"><expr pos:start="65:5" pos:end="65:34"><call pos:start="65:5" pos:end="65:34"><name pos:start="65:5" pos:end="65:11">freopen</name><argument_list pos:start="65:12" pos:end="65:34">(<argument pos:start="65:13" pos:end="65:22"><expr pos:start="65:13" pos:end="65:22"><literal type="string" pos:start="65:13" pos:end="65:22">"maze.out"</literal></expr></argument>,<argument pos:start="65:24" pos:end="65:26"><expr pos:start="65:24" pos:end="65:26"><literal type="string" pos:start="65:24" pos:end="65:26">"w"</literal></expr></argument>,<argument pos:start="65:28" pos:end="65:33"><expr pos:start="65:28" pos:end="65:33"><name pos:start="65:28" pos:end="65:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="66:5" pos:end="66:10"><decl pos:start="66:5" pos:end="66:9"><type pos:start="66:5" pos:end="66:7"><name pos:start="66:5" pos:end="66:7">int</name></type> <name pos:start="66:9" pos:end="66:9">T</name></decl>;</decl_stmt>
    <expr_stmt pos:start="67:5" pos:end="67:11"><expr pos:start="67:5" pos:end="67:10"><name pos:start="67:5" pos:end="67:7">cin</name><operator pos:start="67:8" pos:end="67:9">&gt;&gt;</operator><name pos:start="67:10" pos:end="67:10">T</name></expr>;</expr_stmt>
    <while pos:start="68:5" pos:end="76:5">while<condition pos:start="68:10" pos:end="68:14">(<expr pos:start="68:11" pos:end="68:13"><name pos:start="68:11" pos:end="68:11">T</name><operator pos:start="68:12" pos:end="68:13">--</operator></expr>)</condition><block pos:start="68:15" pos:end="76:5">{<block_content pos:start="69:9" pos:end="75:14">
        <expr_stmt pos:start="69:9" pos:end="69:34"><expr pos:start="69:9" pos:end="69:33"><call pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:14">memset</name><argument_list pos:start="69:15" pos:end="69:33">(<argument pos:start="69:16" pos:end="69:18"><expr pos:start="69:16" pos:end="69:18"><name pos:start="69:16" pos:end="69:18">vis</name></expr></argument>,<argument pos:start="69:20" pos:end="69:20"><expr pos:start="69:20" pos:end="69:20"><literal type="number" pos:start="69:20" pos:end="69:20">0</literal></expr></argument>,<argument pos:start="69:22" pos:end="69:32"><expr pos:start="69:22" pos:end="69:32"><sizeof pos:start="69:22" pos:end="69:32">sizeof<argument_list pos:start="69:28" pos:end="69:32">(<argument pos:start="69:29" pos:end="69:31"><expr pos:start="69:29" pos:end="69:31"><name pos:start="69:29" pos:end="69:31">vis</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="70:9" pos:end="70:18"><expr pos:start="70:9" pos:end="70:17"><name pos:start="70:9" pos:end="70:11">cin</name><operator pos:start="70:12" pos:end="70:13">&gt;&gt;</operator><name pos:start="70:14" pos:end="70:14">m</name><operator pos:start="70:15" pos:end="70:16">&gt;&gt;</operator><name pos:start="70:17" pos:end="70:17">n</name></expr>;</expr_stmt>
        <for pos:start="71:9" pos:end="73:9">for<control pos:start="71:12" pos:end="71:28">(<init pos:start="71:13" pos:end="71:20"><decl pos:start="71:13" pos:end="71:19"><type pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">int</name></type> <name pos:start="71:17" pos:end="71:17">i</name><init pos:start="71:18" pos:end="71:19">=<expr pos:start="71:19" pos:end="71:19"><literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr></init></decl>;</init><condition pos:start="71:21" pos:end="71:24"><expr pos:start="71:21" pos:end="71:23"><name pos:start="71:21" pos:end="71:21">i</name><operator pos:start="71:22" pos:end="71:22">&lt;</operator><name pos:start="71:23" pos:end="71:23">n</name></expr>;</condition><incr pos:start="71:25" pos:end="71:27"><expr pos:start="71:25" pos:end="71:27"><name pos:start="71:25" pos:end="71:25">i</name><operator pos:start="71:26" pos:end="71:27">++</operator></expr></incr>)</control><block pos:start="71:29" pos:end="73:9">{<block_content pos:start="72:13" pos:end="72:22">
            <expr_stmt pos:start="72:13" pos:end="72:22"><expr pos:start="72:13" pos:end="72:21"><name pos:start="72:13" pos:end="72:15">cin</name><operator pos:start="72:16" pos:end="72:17">&gt;&gt;</operator><name pos:start="72:18" pos:end="72:21"><name pos:start="72:18" pos:end="72:18">a</name><index pos:start="72:19" pos:end="72:21">[<expr pos:start="72:20" pos:end="72:20"><name pos:start="72:20" pos:end="72:20">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="74:9" pos:end="74:31"><expr pos:start="74:9" pos:end="74:30"><name pos:start="74:9" pos:end="74:11">cin</name><operator pos:start="74:12" pos:end="74:13">&gt;&gt;</operator><name pos:start="74:14" pos:end="74:14">k</name><operator pos:start="74:15" pos:end="74:16">&gt;&gt;</operator><name pos:start="74:17" pos:end="74:18">x1</name><operator pos:start="74:19" pos:end="74:20">&gt;&gt;</operator><name pos:start="74:21" pos:end="74:22">Y1</name><operator pos:start="74:23" pos:end="74:24">&gt;&gt;</operator><name pos:start="74:25" pos:end="74:26">x2</name><operator pos:start="74:27" pos:end="74:28">&gt;&gt;</operator><name pos:start="74:29" pos:end="74:30">y2</name></expr>;</expr_stmt>
        <expr_stmt pos:start="75:9" pos:end="75:14"><expr pos:start="75:9" pos:end="75:13"><call pos:start="75:9" pos:end="75:13"><name pos:start="75:9" pos:end="75:11">bfs</name><argument_list pos:start="75:12" pos:end="75:13">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
