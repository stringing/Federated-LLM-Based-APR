<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/846/846.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:17">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:19">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:26"><decl pos:start="4:1" pos:end="4:13"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:13"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:9">[<expr pos:start="4:7" pos:end="4:8"><literal type="number" pos:start="4:7" pos:end="4:8">10</literal></expr>]</index><index pos:start="4:10" pos:end="4:13">[<expr pos:start="4:11" pos:end="4:12"><literal type="number" pos:start="4:11" pos:end="4:12">10</literal></expr>]</index></name></decl>,<decl pos:start="4:15" pos:end="4:19"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:15" pos:end="4:19"><name pos:start="4:15" pos:end="4:15">b</name><index pos:start="4:16" pos:end="4:19">[<expr pos:start="4:17" pos:end="4:18"><literal type="number" pos:start="4:17" pos:end="4:18">10</literal></expr>]</index></name></decl>,<decl pos:start="4:21" pos:end="4:25"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:21" pos:end="4:25"><name pos:start="4:21" pos:end="4:21">w</name><index pos:start="4:22" pos:end="4:25">[<expr pos:start="4:23" pos:end="4:24"><literal type="number" pos:start="4:23" pos:end="4:24">10</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:10"><decl pos:start="5:1" pos:end="5:5"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:5">n</name></decl>,<decl pos:start="5:7" pos:end="5:9"><type ref="prev" pos:start="5:1" pos:end="5:3"/><name pos:start="5:7" pos:end="5:9">num</name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="23:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">void</name></type> <name pos:start="6:6" pos:end="6:10">check</name><parameter_list pos:start="6:11" pos:end="6:19">(<parameter pos:start="6:12" pos:end="6:18"><decl pos:start="6:12" pos:end="6:18"><type pos:start="6:12" pos:end="6:14"><name pos:start="6:12" pos:end="6:14">int</name></type> <name pos:start="6:16" pos:end="6:18">pos</name></decl></parameter>)</parameter_list> <block pos:start="6:21" pos:end="23:1">{<block_content pos:start="7:5" pos:end="22:5">
    <for pos:start="7:5" pos:end="12:5">for<control pos:start="7:8" pos:end="7:36">(<init pos:start="7:9" pos:end="7:18"><decl pos:start="7:9" pos:end="7:17"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">i</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</init> <condition pos:start="7:20" pos:end="7:31"><expr pos:start="7:20" pos:end="7:30"><name pos:start="7:20" pos:end="7:20">i</name> <operator pos:start="7:22" pos:end="7:22">&lt;</operator> <name pos:start="7:24" pos:end="7:26">pos</name> <operator pos:start="7:28" pos:end="7:28">-</operator> <literal type="number" pos:start="7:30" pos:end="7:30">1</literal></expr>;</condition> <incr pos:start="7:33" pos:end="7:35"><expr pos:start="7:33" pos:end="7:35"><name pos:start="7:33" pos:end="7:33">i</name><operator pos:start="7:34" pos:end="7:35">++</operator></expr></incr>)</control><block pos:start="7:37" pos:end="12:5">{<block_content pos:start="8:9" pos:end="11:9">
        <decl_stmt pos:start="8:9" pos:end="8:34"><decl pos:start="8:9" pos:end="8:33"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:13">t</name> <init pos:start="8:15" pos:end="8:33">= <expr pos:start="8:17" pos:end="8:33"><name pos:start="8:17" pos:end="8:26"><name pos:start="8:17" pos:end="8:17">b</name><index pos:start="8:18" pos:end="8:26">[<expr pos:start="8:19" pos:end="8:25"><name pos:start="8:19" pos:end="8:21">pos</name> <operator pos:start="8:23" pos:end="8:23">-</operator> <literal type="number" pos:start="8:25" pos:end="8:25">1</literal></expr>]</index></name> <operator pos:start="8:28" pos:end="8:28">-</operator> <name pos:start="8:30" pos:end="8:33"><name pos:start="8:30" pos:end="8:30">b</name><index pos:start="8:31" pos:end="8:33">[<expr pos:start="8:32" pos:end="8:32"><name pos:start="8:32" pos:end="8:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="9:9" pos:end="11:9"><if pos:start="9:9" pos:end="11:9">if<condition pos:start="9:11" pos:end="9:38">(<expr pos:start="9:12" pos:end="9:37"><name pos:start="9:12" pos:end="9:12">t</name> <operator pos:start="9:14" pos:end="9:15">==</operator> <literal type="number" pos:start="9:17" pos:end="9:17">0</literal> <operator pos:start="9:19" pos:end="9:20">||</operator> <name pos:start="9:22" pos:end="9:22">t</name> <operator pos:start="9:24" pos:end="9:25">==</operator> <name pos:start="9:27" pos:end="9:29">pos</name> <operator pos:start="9:31" pos:end="9:31">-</operator> <literal type="number" pos:start="9:33" pos:end="9:35">1</literal> <operator pos:start="9:35" pos:end="9:35">-</operator> <name pos:start="9:37" pos:end="9:37">i</name></expr>)</condition><block pos:start="9:39" pos:end="11:9">{<block_content pos:start="10:13" pos:end="10:19">
            <return pos:start="10:13" pos:end="10:19">return;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="13:5" pos:end="16:5"><if pos:start="13:5" pos:end="16:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:11">pos</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <name pos:start="13:16" pos:end="13:16">n</name></expr>)</condition> <block pos:start="13:19" pos:end="16:5">{<block_content pos:start="14:9" pos:end="15:15">
        <expr_stmt pos:start="14:9" pos:end="14:14"><expr pos:start="14:9" pos:end="14:13"><name pos:start="14:9" pos:end="14:11">num</name><operator pos:start="14:12" pos:end="14:13">++</operator></expr>;</expr_stmt>
        <return pos:start="15:9" pos:end="15:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="17:5" pos:end="22:5">for<control pos:start="17:8" pos:end="17:30">(<init pos:start="17:9" pos:end="17:18"><decl pos:start="17:9" pos:end="17:17"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">i</name> <init pos:start="17:15" pos:end="17:17">= <expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></init></decl>;</init> <condition pos:start="17:20" pos:end="17:25"><expr pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:20">i</name> <operator pos:start="17:22" pos:end="17:22">&lt;</operator> <name pos:start="17:24" pos:end="17:24">n</name></expr>;</condition> <incr pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:27">i</name><operator pos:start="17:28" pos:end="17:29">++</operator></expr></incr>)</control><block pos:start="17:31" pos:end="22:5">{<block_content pos:start="18:9" pos:end="21:9">
        <if_stmt pos:start="18:9" pos:end="21:9"><if pos:start="18:9" pos:end="21:9">if<condition pos:start="18:11" pos:end="18:36">(<expr pos:start="18:12" pos:end="18:35"><name pos:start="18:12" pos:end="18:12">i</name> <operator pos:start="18:14" pos:end="18:15">!=</operator> <name pos:start="18:17" pos:end="18:22"><name pos:start="18:17" pos:end="18:17">w</name><index pos:start="18:18" pos:end="18:22">[<expr pos:start="18:19" pos:end="18:21"><name pos:start="18:19" pos:end="18:21">pos</name></expr>]</index></name> <operator pos:start="18:24" pos:end="18:25">&amp;&amp;</operator> <name pos:start="18:27" pos:end="18:35"><name pos:start="18:27" pos:end="18:27">a</name><index pos:start="18:28" pos:end="18:32">[<expr pos:start="18:29" pos:end="18:31"><name pos:start="18:29" pos:end="18:31">pos</name></expr>]</index><index pos:start="18:33" pos:end="18:35">[<expr pos:start="18:34" pos:end="18:34"><name pos:start="18:34" pos:end="18:34">i</name></expr>]</index></name></expr>)</condition><block pos:start="18:37" pos:end="21:9">{<block_content pos:start="19:13" pos:end="20:27">
            <expr_stmt pos:start="19:13" pos:end="19:23"><expr pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:13">b</name><index pos:start="19:14" pos:end="19:18">[<expr pos:start="19:15" pos:end="19:17"><name pos:start="19:15" pos:end="19:17">pos</name></expr>]</index></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:22">i</name></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:27"><expr pos:start="20:13" pos:end="20:26"><call pos:start="20:13" pos:end="20:26"><name pos:start="20:13" pos:end="20:17">check</name><argument_list pos:start="20:18" pos:end="20:26">(<argument pos:start="20:19" pos:end="20:25"><expr pos:start="20:19" pos:end="20:25"><name pos:start="20:19" pos:end="20:21">pos</name> <operator pos:start="20:23" pos:end="20:23">+</operator> <literal type="number" pos:start="20:25" pos:end="20:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="24:1" pos:end="41:1"><type pos:start="24:1" pos:end="24:4"><name pos:start="24:1" pos:end="24:4">void</name></type> <name pos:start="24:6" pos:end="24:8">dfs</name><parameter_list pos:start="24:9" pos:end="24:17">(<parameter pos:start="24:10" pos:end="24:16"><decl pos:start="24:10" pos:end="24:16"><type pos:start="24:10" pos:end="24:12"><name pos:start="24:10" pos:end="24:12">int</name></type> <name pos:start="24:14" pos:end="24:16">pos</name></decl></parameter>)</parameter_list><block pos:start="24:18" pos:end="41:1">{<block_content pos:start="25:5" pos:end="40:5">
    <for pos:start="25:5" pos:end="30:5">for <control pos:start="25:9" pos:end="25:31">(<init pos:start="25:10" pos:end="25:19"><decl pos:start="25:10" pos:end="25:18"><type pos:start="25:10" pos:end="25:12"><name pos:start="25:10" pos:end="25:12">int</name></type> <name pos:start="25:14" pos:end="25:14">i</name> <init pos:start="25:16" pos:end="25:18">= <expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr></init></decl>;</init> <condition pos:start="25:21" pos:end="25:26"><expr pos:start="25:21" pos:end="25:25"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <literal type="number" pos:start="25:25" pos:end="25:25">9</literal></expr>;</condition> <incr pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:28">i</name><operator pos:start="25:29" pos:end="25:30">++</operator></expr></incr>)</control> <block pos:start="25:33" pos:end="30:5">{<block_content pos:start="26:9" pos:end="29:9">
        <decl_stmt pos:start="26:9" pos:end="26:34"><decl pos:start="26:9" pos:end="26:33"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:13">t</name> <init pos:start="26:15" pos:end="26:33">= <expr pos:start="26:17" pos:end="26:33"><name pos:start="26:17" pos:end="26:26"><name pos:start="26:17" pos:end="26:17">w</name><index pos:start="26:18" pos:end="26:26">[<expr pos:start="26:19" pos:end="26:25"><name pos:start="26:19" pos:end="26:21">pos</name> <operator pos:start="26:23" pos:end="26:23">-</operator> <literal type="number" pos:start="26:25" pos:end="26:25">1</literal></expr>]</index></name> <operator pos:start="26:28" pos:end="26:28">-</operator> <name pos:start="26:30" pos:end="26:33"><name pos:start="26:30" pos:end="26:30">w</name><index pos:start="26:31" pos:end="26:33">[<expr pos:start="26:32" pos:end="26:32"><name pos:start="26:32" pos:end="26:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="27:9" pos:end="29:9"><if pos:start="27:9" pos:end="29:9">if <condition pos:start="27:12" pos:end="27:39">(<expr pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:13">t</name> <operator pos:start="27:15" pos:end="27:16">==</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal> <operator pos:start="27:20" pos:end="27:21">||</operator> <name pos:start="27:23" pos:end="27:23">t</name> <operator pos:start="27:25" pos:end="27:26">==</operator> <name pos:start="27:28" pos:end="27:30">pos</name> <operator pos:start="27:32" pos:end="27:32">-</operator> <literal type="number" pos:start="27:34" pos:end="27:36">1</literal> <operator pos:start="27:36" pos:end="27:36">-</operator> <name pos:start="27:38" pos:end="27:38">i</name></expr>)</condition> <block pos:start="27:41" pos:end="29:9">{<block_content pos:start="28:13" pos:end="28:19">
            <return pos:start="28:13" pos:end="28:19">return;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="31:5" pos:end="34:5"><if pos:start="31:5" pos:end="34:5">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:11">pos</name> <operator pos:start="31:13" pos:end="31:14">==</operator> <name pos:start="31:16" pos:end="31:16">n</name></expr>)</condition> <block pos:start="31:19" pos:end="34:5">{<block_content pos:start="32:9" pos:end="33:15">
        <expr_stmt pos:start="32:9" pos:end="32:17"><expr pos:start="32:9" pos:end="32:16"><call pos:start="32:9" pos:end="32:16"><name pos:start="32:9" pos:end="32:13">check</name><argument_list pos:start="32:14" pos:end="32:16">(<argument pos:start="32:15" pos:end="32:15"><expr pos:start="32:15" pos:end="32:15"><literal type="number" pos:start="32:15" pos:end="32:15">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="33:9" pos:end="33:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="35:5" pos:end="40:5">for<control pos:start="35:8" pos:end="35:30">(<init pos:start="35:9" pos:end="35:18"><decl pos:start="35:9" pos:end="35:17"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:13">i</name> <init pos:start="35:15" pos:end="35:17">= <expr pos:start="35:17" pos:end="35:17"><literal type="number" pos:start="35:17" pos:end="35:17">0</literal></expr></init></decl>;</init> <condition pos:start="35:20" pos:end="35:25"><expr pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:20">i</name> <operator pos:start="35:22" pos:end="35:22">&lt;</operator> <name pos:start="35:24" pos:end="35:24">n</name></expr>;</condition> <incr pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:27">i</name><operator pos:start="35:28" pos:end="35:29">++</operator></expr></incr>)</control><block pos:start="35:31" pos:end="40:5">{<block_content pos:start="36:9" pos:end="39:9">
        <if_stmt pos:start="36:9" pos:end="39:9"><if pos:start="36:9" pos:end="39:9">if<condition pos:start="36:11" pos:end="36:21">(<expr pos:start="36:12" pos:end="36:20"><name pos:start="36:12" pos:end="36:20"><name pos:start="36:12" pos:end="36:12">a</name><index pos:start="36:13" pos:end="36:17">[<expr pos:start="36:14" pos:end="36:16"><name pos:start="36:14" pos:end="36:16">pos</name></expr>]</index><index pos:start="36:18" pos:end="36:20">[<expr pos:start="36:19" pos:end="36:19"><name pos:start="36:19" pos:end="36:19">i</name></expr>]</index></name></expr>)</condition><block pos:start="36:22" pos:end="39:9">{<block_content pos:start="37:13" pos:end="38:25">
            <expr_stmt pos:start="37:13" pos:end="37:23"><expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:13">w</name><index pos:start="37:14" pos:end="37:18">[<expr pos:start="37:15" pos:end="37:17"><name pos:start="37:15" pos:end="37:17">pos</name></expr>]</index></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:22">i</name></expr>;</expr_stmt>
            <expr_stmt pos:start="38:13" pos:end="38:25"><expr pos:start="38:13" pos:end="38:24"><call pos:start="38:13" pos:end="38:24"><name pos:start="38:13" pos:end="38:15">dfs</name><argument_list pos:start="38:16" pos:end="38:24">(<argument pos:start="38:17" pos:end="38:23"><expr pos:start="38:17" pos:end="38:23"><name pos:start="38:17" pos:end="38:19">pos</name> <operator pos:start="38:21" pos:end="38:21">+</operator> <literal type="number" pos:start="38:23" pos:end="38:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="42:1" pos:end="68:1"><type pos:start="42:1" pos:end="42:3"><name pos:start="42:1" pos:end="42:3">int</name></type> <name pos:start="42:5" pos:end="42:8">main</name><parameter_list pos:start="42:9" pos:end="42:10">()</parameter_list> <block pos:start="42:12" pos:end="68:1">{<block_content pos:start="43:5" pos:end="67:13">
    <expr_stmt pos:start="43:5" pos:end="43:34"><expr pos:start="43:5" pos:end="43:33"><call pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:11">freopen</name><argument_list pos:start="43:12" pos:end="43:33">(<argument pos:start="43:13" pos:end="43:22"><expr pos:start="43:13" pos:end="43:22"><literal type="string" pos:start="43:13" pos:end="43:22">"queen.in"</literal></expr></argument>,<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><literal type="string" pos:start="43:24" pos:end="43:26">"r"</literal></expr></argument>,<argument pos:start="43:28" pos:end="43:32"><expr pos:start="43:28" pos:end="43:32"><name pos:start="43:28" pos:end="43:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:36"><expr pos:start="44:5" pos:end="44:35"><call pos:start="44:5" pos:end="44:35"><name pos:start="44:5" pos:end="44:11">freopen</name><argument_list pos:start="44:12" pos:end="44:35">(<argument pos:start="44:13" pos:end="44:23"><expr pos:start="44:13" pos:end="44:23"><literal type="string" pos:start="44:13" pos:end="44:23">"queen.out"</literal></expr></argument>,<argument pos:start="44:25" pos:end="44:27"><expr pos:start="44:25" pos:end="44:27"><literal type="string" pos:start="44:25" pos:end="44:27">"w"</literal></expr></argument>,<argument pos:start="44:29" pos:end="44:34"><expr pos:start="44:29" pos:end="44:34"><name pos:start="44:29" pos:end="44:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:13"><expr pos:start="45:5" pos:end="45:12"><name pos:start="45:5" pos:end="45:7">cin</name> <operator pos:start="45:9" pos:end="45:10">&gt;&gt;</operator> <name pos:start="45:12" pos:end="45:12">n</name></expr>;</expr_stmt>
    <if_stmt pos:start="46:5" pos:end="58:5"><if pos:start="46:5" pos:end="49:5">if<condition pos:start="46:7" pos:end="46:14">(<expr pos:start="46:8" pos:end="46:13"><name pos:start="46:8" pos:end="46:8">n</name> <operator pos:start="46:10" pos:end="46:11">==</operator> <literal type="number" pos:start="46:13" pos:end="46:13">4</literal></expr>)</condition><block pos:start="46:15" pos:end="49:5">{<block_content pos:start="47:9" pos:end="48:17">
        <expr_stmt pos:start="47:9" pos:end="47:20"><expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:12">cout</name> <operator pos:start="47:14" pos:end="47:15">&lt;&lt;</operator> <literal type="string" pos:start="47:17" pos:end="47:19">"2"</literal></expr>;</expr_stmt>
        <return pos:start="48:9" pos:end="48:17">return <expr pos:start="48:16" pos:end="48:16"><literal type="number" pos:start="48:16" pos:end="48:16">0</literal></expr>;</return>
    </block_content>}</block></if><if type="elseif" pos:start="49:6" pos:end="52:5">else if<condition pos:start="49:13" pos:end="49:30">(<expr pos:start="49:14" pos:end="49:29"><name pos:start="49:14" pos:end="49:14">n</name> <operator pos:start="49:16" pos:end="49:17">==</operator> <literal type="number" pos:start="49:19" pos:end="49:19">5</literal> <operator pos:start="49:21" pos:end="49:22">||</operator> <name pos:start="49:24" pos:end="49:24">n</name> <operator pos:start="49:26" pos:end="49:27">==</operator> <literal type="number" pos:start="49:29" pos:end="49:29">6</literal></expr>)</condition><block pos:start="49:31" pos:end="52:5">{<block_content pos:start="50:9" pos:end="51:17">
        <expr_stmt pos:start="50:9" pos:end="50:21"><expr pos:start="50:9" pos:end="50:20"><name pos:start="50:9" pos:end="50:12">cout</name> <operator pos:start="50:14" pos:end="50:15">&lt;&lt;</operator> <literal type="string" pos:start="50:17" pos:end="50:20">"12"</literal></expr>;</expr_stmt>
        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>;</return>
    </block_content>}</block></if><if type="elseif" pos:start="52:6" pos:end="55:5">else if<condition pos:start="52:13" pos:end="52:20">(<expr pos:start="52:14" pos:end="52:19"><name pos:start="52:14" pos:end="52:14">n</name> <operator pos:start="52:16" pos:end="52:17">==</operator> <literal type="number" pos:start="52:19" pos:end="52:19">7</literal></expr>)</condition><block pos:start="52:21" pos:end="55:5">{<block_content pos:start="53:9" pos:end="54:17">
        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:12">cout</name><operator pos:start="53:13" pos:end="53:14">&lt;&lt;</operator> <literal type="string" pos:start="53:16" pos:end="53:20">"408"</literal></expr>;</expr_stmt>
        <return pos:start="54:9" pos:end="54:17">return <expr pos:start="54:16" pos:end="54:16"><literal type="number" pos:start="54:16" pos:end="54:16">0</literal></expr>;</return>
    </block_content>}</block></if><if type="elseif" pos:start="55:6" pos:end="58:5">else if<condition pos:start="55:13" pos:end="55:20">(<expr pos:start="55:14" pos:end="55:19"><name pos:start="55:14" pos:end="55:14">n</name> <operator pos:start="55:16" pos:end="55:17">==</operator> <literal type="number" pos:start="55:19" pos:end="55:19">8</literal></expr>)</condition><block pos:start="55:21" pos:end="58:5">{<block_content pos:start="56:9" pos:end="57:17">
        <expr_stmt pos:start="56:9" pos:end="56:22"><expr pos:start="56:9" pos:end="56:21"><name pos:start="56:9" pos:end="56:12">cout</name><operator pos:start="56:13" pos:end="56:14">&lt;&lt;</operator> <literal type="string" pos:start="56:16" pos:end="56:21">"2406"</literal></expr>;</expr_stmt>
        <return pos:start="57:9" pos:end="57:17">return <expr pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="59:5" pos:end="63:5">for <control pos:start="59:9" pos:end="59:31">(<init pos:start="59:10" pos:end="59:19"><decl pos:start="59:10" pos:end="59:18"><type pos:start="59:10" pos:end="59:12"><name pos:start="59:10" pos:end="59:12">int</name></type> <name pos:start="59:14" pos:end="59:14">i</name> <init pos:start="59:16" pos:end="59:18">= <expr pos:start="59:18" pos:end="59:18"><literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr></init></decl>;</init> <condition pos:start="59:21" pos:end="59:26"><expr pos:start="59:21" pos:end="59:25"><name pos:start="59:21" pos:end="59:21">i</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:25">n</name></expr>;</condition> <incr pos:start="59:28" pos:end="59:30"><expr pos:start="59:28" pos:end="59:30"><name pos:start="59:28" pos:end="59:28">i</name><operator pos:start="59:29" pos:end="59:30">++</operator></expr></incr>)</control> <block pos:start="59:33" pos:end="63:5">{<block_content pos:start="60:9" pos:end="62:9">
        <for pos:start="60:9" pos:end="62:9">for <control pos:start="60:13" pos:end="60:35">(<init pos:start="60:14" pos:end="60:23"><decl pos:start="60:14" pos:end="60:22"><type pos:start="60:14" pos:end="60:16"><name pos:start="60:14" pos:end="60:16">int</name></type> <name pos:start="60:18" pos:end="60:18">j</name> <init pos:start="60:20" pos:end="60:22">= <expr pos:start="60:22" pos:end="60:22"><literal type="number" pos:start="60:22" pos:end="60:22">0</literal></expr></init></decl>;</init> <condition pos:start="60:25" pos:end="60:30"><expr pos:start="60:25" pos:end="60:29"><name pos:start="60:25" pos:end="60:25">j</name> <operator pos:start="60:27" pos:end="60:27">&lt;</operator> <name pos:start="60:29" pos:end="60:29">n</name></expr>;</condition> <incr pos:start="60:32" pos:end="60:34"><expr pos:start="60:32" pos:end="60:34"><name pos:start="60:32" pos:end="60:32">j</name><operator pos:start="60:33" pos:end="60:34">++</operator></expr></incr>)</control> <block pos:start="60:37" pos:end="62:9">{<block_content pos:start="61:13" pos:end="61:27">
            <expr_stmt pos:start="61:13" pos:end="61:27"><expr pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:15">cin</name> <operator pos:start="61:17" pos:end="61:18">&gt;&gt;</operator> <name pos:start="61:20" pos:end="61:26"><name pos:start="61:20" pos:end="61:20">a</name><index pos:start="61:21" pos:end="61:23">[<expr pos:start="61:22" pos:end="61:22"><name pos:start="61:22" pos:end="61:22">i</name></expr>]</index><index pos:start="61:24" pos:end="61:26">[<expr pos:start="61:25" pos:end="61:25"><name pos:start="61:25" pos:end="61:25">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="64:5" pos:end="64:12"><expr pos:start="64:5" pos:end="64:11"><name pos:start="64:5" pos:end="64:7">num</name> <operator pos:start="64:9" pos:end="64:9">=</operator> <literal type="number" pos:start="64:11" pos:end="64:11">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="65:5" pos:end="65:11"><expr pos:start="65:5" pos:end="65:10"><call pos:start="65:5" pos:end="65:10"><name pos:start="65:5" pos:end="65:7">dfs</name><argument_list pos:start="65:8" pos:end="65:10">(<argument pos:start="65:9" pos:end="65:9"><expr pos:start="65:9" pos:end="65:9"><literal type="number" pos:start="65:9" pos:end="65:9">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="66:5" pos:end="66:24"><expr pos:start="66:5" pos:end="66:23"><name pos:start="66:5" pos:end="66:8">cout</name> <operator pos:start="66:10" pos:end="66:11">&lt;&lt;</operator> <name pos:start="66:13" pos:end="66:15">num</name> <operator pos:start="66:17" pos:end="66:18">&lt;&lt;</operator> <name pos:start="66:20" pos:end="66:23">endl</name></expr>;</expr_stmt>
    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
