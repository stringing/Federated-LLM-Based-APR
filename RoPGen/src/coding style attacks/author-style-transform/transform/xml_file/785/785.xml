<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/785/785.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:34"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>, <decl pos:start="3:8" pos:end="3:8"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:8" pos:end="3:8">b</name></decl>, <decl pos:start="3:11" pos:end="3:15"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:11" pos:end="3:15"><name pos:start="3:11" pos:end="3:11">h</name><index pos:start="3:12" pos:end="3:15">[<expr pos:start="3:13" pos:end="3:14"><literal type="number" pos:start="3:13" pos:end="3:14">25</literal></expr>]</index></name></decl>, <decl pos:start="3:18" pos:end="3:33"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:18" pos:end="3:20">ans</name> <init pos:start="3:22" pos:end="3:33">= <expr pos:start="3:24" pos:end="3:33"><literal type="number" pos:start="3:24" pos:end="3:33">2147483647</literal></expr></init></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="14:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">void</name></type> <name pos:start="4:6" pos:end="4:8">dfs</name><parameter_list pos:start="4:9" pos:end="4:38">(<parameter pos:start="4:10" pos:end="4:18"><decl pos:start="4:10" pos:end="4:18"><type pos:start="4:10" pos:end="4:18"><name pos:start="4:10" pos:end="4:12">int</name></type> <name pos:start="4:14" pos:end="4:18">depth</name></decl></parameter>, <parameter pos:start="4:21" pos:end="4:27"><decl pos:start="4:21" pos:end="4:27"><type pos:start="4:21" pos:end="4:27"><name pos:start="4:21" pos:end="4:23">int</name></type> <name pos:start="4:25" pos:end="4:27">sum</name></decl></parameter>, <parameter pos:start="4:30" pos:end="4:37"><decl pos:start="4:30" pos:end="4:37"><type pos:start="4:30" pos:end="4:37"><name pos:start="4:30" pos:end="4:32">int</name></type> <name pos:start="4:34" pos:end="4:37">last</name></decl></parameter>)</parameter_list> <block pos:start="4:40" pos:end="14:1">{<block_content pos:start="5:5" pos:end="13:11">
    <if_stmt pos:start="5:5" pos:end="8:5"><if pos:start="5:5" pos:end="8:5">if <condition pos:start="5:8" pos:end="5:19">(<expr pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:13">depth</name> <operator pos:start="5:15" pos:end="5:16">==</operator> <literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr>)</condition> <block pos:start="5:21" pos:end="8:5">{<block_content pos:start="6:9" pos:end="7:15">
        <if_stmt pos:start="6:9" pos:end="6:45"><if pos:start="6:9" pos:end="6:45">if <condition pos:start="6:12" pos:end="6:20">(<expr pos:start="6:13" pos:end="6:19"><name pos:start="6:13" pos:end="6:15">sum</name> <operator pos:start="6:17" pos:end="6:17">&gt;</operator> <name pos:start="6:19" pos:end="6:19">b</name></expr>)</condition><block type="pseudo" pos:start="6:22" pos:end="6:45"><block_content pos:start="6:22" pos:end="6:45"> <expr_stmt pos:start="6:22" pos:end="6:45"><expr pos:start="6:22" pos:end="6:44"><name pos:start="6:22" pos:end="6:24">ans</name> <operator pos:start="6:26" pos:end="6:26">=</operator> <call pos:start="6:28" pos:end="6:44"><name pos:start="6:28" pos:end="6:30">min</name><argument_list pos:start="6:31" pos:end="6:44">(<argument pos:start="6:32" pos:end="6:38"><expr pos:start="6:32" pos:end="6:38"><name pos:start="6:32" pos:end="6:34">sum</name> <operator pos:start="6:36" pos:end="6:36">-</operator> <name pos:start="6:38" pos:end="6:38">b</name></expr></argument>, <argument pos:start="6:41" pos:end="6:43"><expr pos:start="6:41" pos:end="6:43"><name pos:start="6:41" pos:end="6:43">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <return pos:start="7:9" pos:end="7:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="9:5" pos:end="9:31"><if pos:start="9:5" pos:end="9:31">if <condition pos:start="9:8" pos:end="9:23">(<expr pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:11">sum</name> <operator pos:start="9:13" pos:end="9:13">-</operator> <name pos:start="9:15" pos:end="9:15">b</name> <operator pos:start="9:17" pos:end="9:18">&gt;=</operator> <name pos:start="9:20" pos:end="9:22">ans</name></expr>)</condition><block type="pseudo" pos:start="9:25" pos:end="9:31"><block_content pos:start="9:25" pos:end="9:31"> <return pos:start="9:25" pos:end="9:31">return;</return></block_content></block></if></if_stmt>
    <for pos:start="10:5" pos:end="12:5">for <control pos:start="10:9" pos:end="10:47">(<init pos:start="10:10" pos:end="10:26"><decl pos:start="10:10" pos:end="10:25"><type pos:start="10:10" pos:end="10:12"><name pos:start="10:10" pos:end="10:12">int</name></type> <name pos:start="10:14" pos:end="10:14">i</name> <init pos:start="10:16" pos:end="10:25">= <expr pos:start="10:18" pos:end="10:25"><name pos:start="10:18" pos:end="10:21">last</name> <operator pos:start="10:23" pos:end="10:23">+</operator> <literal type="number" pos:start="10:25" pos:end="10:25">1</literal></expr></init></decl>;</init> <condition pos:start="10:28" pos:end="10:42"><expr pos:start="10:28" pos:end="10:41"><name pos:start="10:28" pos:end="10:28">i</name> <operator pos:start="10:30" pos:end="10:31">&lt;=</operator> <name pos:start="10:33" pos:end="10:33">n</name> <operator pos:start="10:35" pos:end="10:35">-</operator> <name pos:start="10:37" pos:end="10:41">depth</name></expr>;</condition> <incr pos:start="10:44" pos:end="10:46"><expr pos:start="10:44" pos:end="10:46"><name pos:start="10:44" pos:end="10:44">i</name><operator pos:start="10:45" pos:end="10:46">++</operator></expr></incr>)</control> <block pos:start="10:49" pos:end="12:5">{<block_content pos:start="11:9" pos:end="11:38">
        <expr_stmt pos:start="11:9" pos:end="11:38"><expr pos:start="11:9" pos:end="11:37"><call pos:start="11:9" pos:end="11:37"><name pos:start="11:9" pos:end="11:11">dfs</name><argument_list pos:start="11:12" pos:end="11:37">(<argument pos:start="11:13" pos:end="11:21"><expr pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:17">depth</name> <operator pos:start="11:19" pos:end="11:19">-</operator> <literal type="number" pos:start="11:21" pos:end="11:21">1</literal></expr></argument>, <argument pos:start="11:24" pos:end="11:33"><expr pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:26">sum</name> <operator pos:start="11:28" pos:end="11:28">+</operator> <name pos:start="11:30" pos:end="11:33"><name pos:start="11:30" pos:end="11:30">h</name><index pos:start="11:31" pos:end="11:33">[<expr pos:start="11:32" pos:end="11:32"><name pos:start="11:32" pos:end="11:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="11:36" pos:end="11:36"><expr pos:start="11:36" pos:end="11:36"><name pos:start="11:36" pos:end="11:36">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="13:5" pos:end="13:11">return;</return>
</block_content>}</block></function>
<function pos:start="15:1" pos:end="25:1"><type pos:start="15:1" pos:end="15:3"><name pos:start="15:1" pos:end="15:3">int</name></type> <name pos:start="15:5" pos:end="15:8">main</name><parameter_list pos:start="15:9" pos:end="15:10">()</parameter_list> <block pos:start="15:12" pos:end="25:1">{<block_content pos:start="16:5" pos:end="24:13">
    <expr_stmt pos:start="16:5" pos:end="16:36"><expr pos:start="16:5" pos:end="16:35"><call pos:start="16:5" pos:end="16:35"><name pos:start="16:5" pos:end="16:11">freopen</name><argument_list pos:start="16:12" pos:end="16:35">(<argument pos:start="16:13" pos:end="16:22"><expr pos:start="16:13" pos:end="16:22"><literal type="string" pos:start="16:13" pos:end="16:22">"shelf.in"</literal></expr></argument>, <argument pos:start="16:25" pos:end="16:27"><expr pos:start="16:25" pos:end="16:27"><literal type="string" pos:start="16:25" pos:end="16:27">"r"</literal></expr></argument>, <argument pos:start="16:30" pos:end="16:34"><expr pos:start="16:30" pos:end="16:34"><name pos:start="16:30" pos:end="16:34">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><call pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:11">freopen</name><argument_list pos:start="17:12" pos:end="17:37">(<argument pos:start="17:13" pos:end="17:23"><expr pos:start="17:13" pos:end="17:23"><literal type="string" pos:start="17:13" pos:end="17:23">"shelf.out"</literal></expr></argument>, <argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><literal type="string" pos:start="17:26" pos:end="17:28">"w"</literal></expr></argument>, <argument pos:start="17:31" pos:end="17:36"><expr pos:start="17:31" pos:end="17:36"><name pos:start="17:31" pos:end="17:36">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:18"><expr pos:start="18:5" pos:end="18:17"><name pos:start="18:5" pos:end="18:7">cin</name> <operator pos:start="18:9" pos:end="18:10">&gt;&gt;</operator> <name pos:start="18:12" pos:end="18:12">n</name> <operator pos:start="18:14" pos:end="18:15">&gt;&gt;</operator> <name pos:start="18:17" pos:end="18:17">b</name></expr>;</expr_stmt>
    <for pos:start="19:5" pos:end="21:5">for <control pos:start="19:9" pos:end="19:31">(<init pos:start="19:10" pos:end="19:19"><decl pos:start="19:10" pos:end="19:18"><type pos:start="19:10" pos:end="19:12"><name pos:start="19:10" pos:end="19:12">int</name></type> <name pos:start="19:14" pos:end="19:14">i</name> <init pos:start="19:16" pos:end="19:18">= <expr pos:start="19:18" pos:end="19:18"><literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr></init></decl>;</init> <condition pos:start="19:21" pos:end="19:26"><expr pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">i</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:25">n</name></expr>;</condition> <incr pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:28">i</name><operator pos:start="19:29" pos:end="19:30">++</operator></expr></incr>)</control> <block pos:start="19:33" pos:end="21:5">{<block_content pos:start="20:9" pos:end="20:20">
        <expr_stmt pos:start="20:9" pos:end="20:20"><expr pos:start="20:9" pos:end="20:19"><name pos:start="20:9" pos:end="20:11">cin</name> <operator pos:start="20:13" pos:end="20:14">&gt;&gt;</operator> <name pos:start="20:16" pos:end="20:19"><name pos:start="20:16" pos:end="20:16">h</name><index pos:start="20:17" pos:end="20:19">[<expr pos:start="20:18" pos:end="20:18"><name pos:start="20:18" pos:end="20:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="22:5" pos:end="22:17"><expr pos:start="22:5" pos:end="22:16"><call pos:start="22:5" pos:end="22:16"><name pos:start="22:5" pos:end="22:7">dfs</name><argument_list pos:start="22:8" pos:end="22:16">(<argument pos:start="22:9" pos:end="22:9"><expr pos:start="22:9" pos:end="22:9"><name pos:start="22:9" pos:end="22:9">n</name></expr></argument>, <argument pos:start="22:12" pos:end="22:12"><expr pos:start="22:12" pos:end="22:12"><literal type="number" pos:start="22:12" pos:end="22:12">0</literal></expr></argument>, <argument pos:start="22:15" pos:end="22:15"><expr pos:start="22:15" pos:end="22:15"><literal type="number" pos:start="22:15" pos:end="22:15">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:8">cout</name> <operator pos:start="23:10" pos:end="23:11">&lt;&lt;</operator> <name pos:start="23:13" pos:end="23:15">ans</name> <operator pos:start="23:17" pos:end="23:18">&lt;&lt;</operator> <name pos:start="23:20" pos:end="23:23">endl</name></expr>;</expr_stmt>
    <return pos:start="24:5" pos:end="24:13">return <expr pos:start="24:12" pos:end="24:12"><literal type="number" pos:start="24:12" pos:end="24:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
