<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/506/506.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:24"><decl pos:start="3:1" pos:end="3:19"><type pos:start="3:1" pos:end="3:9"><name pos:start="3:1" pos:end="3:4">long</name> <name pos:start="3:6" pos:end="3:9">long</name></type> <name pos:start="3:11" pos:end="3:19"><name pos:start="3:11" pos:end="3:11">a</name><index pos:start="3:12" pos:end="3:19">[<expr pos:start="3:13" pos:end="3:18"><literal type="number" pos:start="3:13" pos:end="3:18">100001</literal></expr>]</index></name></decl>,<decl pos:start="3:21" pos:end="3:23"><type ref="prev" pos:start="3:1" pos:end="3:9"/><name pos:start="3:21" pos:end="3:21">i</name><init pos:start="3:22" pos:end="3:23">=<expr pos:start="3:23" pos:end="3:23"><literal type="number" pos:start="3:23" pos:end="3:23">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="29:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:7">abc</name><parameter_list pos:start="4:8" pos:end="4:14">(<parameter pos:start="4:9" pos:end="4:13"><decl pos:start="4:9" pos:end="4:13"><type pos:start="4:9" pos:end="4:11"><name pos:start="4:9" pos:end="4:11">int</name></type> <name pos:start="4:13" pos:end="4:13">m</name></decl></parameter>)</parameter_list>
<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="6:5" pos:end="28:5">
    <if_stmt pos:start="6:5" pos:end="16:5"><if pos:start="6:5" pos:end="16:5">if<condition pos:start="6:7" pos:end="6:12">(<expr pos:start="6:8" pos:end="6:11"><name pos:start="6:8" pos:end="6:8">i</name><operator pos:start="6:9" pos:end="6:10">!=</operator><literal type="number" pos:start="6:11" pos:end="6:11">0</literal></expr>)</condition>
    <block pos:start="7:5" pos:end="16:5">{<block_content pos:start="8:9" pos:end="15:9">
        <for pos:start="8:9" pos:end="15:9">for<control pos:start="8:12" pos:end="8:29">(<init pos:start="8:13" pos:end="8:20"><decl pos:start="8:13" pos:end="8:19"><type pos:start="8:13" pos:end="8:15"><name pos:start="8:13" pos:end="8:15">int</name></type> <name pos:start="8:17" pos:end="8:17">j</name><init pos:start="8:18" pos:end="8:19">=<expr pos:start="8:19" pos:end="8:19"><literal type="number" pos:start="8:19" pos:end="8:19">0</literal></expr></init></decl>;</init><condition pos:start="8:21" pos:end="8:25"><expr pos:start="8:21" pos:end="8:24"><name pos:start="8:21" pos:end="8:21">j</name><operator pos:start="8:22" pos:end="8:23">&lt;=</operator><name pos:start="8:24" pos:end="8:24">i</name></expr>;</condition><incr pos:start="8:26" pos:end="8:28"><expr pos:start="8:26" pos:end="8:28"><name pos:start="8:26" pos:end="8:26">j</name><operator pos:start="8:27" pos:end="8:28">++</operator></expr></incr>)</control>
        <block pos:start="9:9" pos:end="15:9">{<block_content pos:start="10:13" pos:end="14:13">
            <if_stmt pos:start="10:13" pos:end="14:13"><if pos:start="10:13" pos:end="14:13">if<condition pos:start="10:15" pos:end="10:23">(<expr pos:start="10:16" pos:end="10:22"><name pos:start="10:16" pos:end="10:19"><name pos:start="10:16" pos:end="10:16">a</name><index pos:start="10:17" pos:end="10:19">[<expr pos:start="10:18" pos:end="10:18"><name pos:start="10:18" pos:end="10:18">j</name></expr>]</index></name><operator pos:start="10:20" pos:end="10:21">==</operator><name pos:start="10:22" pos:end="10:22">m</name></expr>)</condition>
            <block pos:start="11:13" pos:end="14:13">{<block_content pos:start="12:17" pos:end="13:25">
                <expr_stmt pos:start="12:17" pos:end="12:30"><expr pos:start="12:17" pos:end="12:29"><name pos:start="12:17" pos:end="12:20">cout</name><operator pos:start="12:21" pos:end="12:22">&lt;&lt;</operator><literal type="string" pos:start="12:23" pos:end="12:26">", "</literal><operator pos:start="12:27" pos:end="12:28">&lt;&lt;</operator><name pos:start="12:29" pos:end="12:29">m</name></expr>;</expr_stmt>
                <return pos:start="13:17" pos:end="13:25">return <expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">0</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:11"><expr pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:5">a</name><index pos:start="17:6" pos:end="17:8">[<expr pos:start="17:7" pos:end="17:7"><name pos:start="17:7" pos:end="17:7">i</name></expr>]</index></name><operator pos:start="17:9" pos:end="17:9">=</operator><name pos:start="17:10" pos:end="17:10">m</name></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:8"><expr pos:start="18:5" pos:end="18:7"><name pos:start="18:5" pos:end="18:5">i</name><operator pos:start="18:6" pos:end="18:7">++</operator></expr>;</expr_stmt>
    <if_stmt pos:start="19:5" pos:end="28:5"><if pos:start="19:5" pos:end="23:5">if<condition pos:start="19:7" pos:end="19:14">(<expr pos:start="19:8" pos:end="19:13"><name pos:start="19:8" pos:end="19:8">m</name><operator pos:start="19:9" pos:end="19:9">%</operator><literal type="number" pos:start="19:10" pos:end="19:10">2</literal><operator pos:start="19:11" pos:end="19:12">==</operator><literal type="number" pos:start="19:13" pos:end="19:13">0</literal></expr>)</condition>
    <block pos:start="20:5" pos:end="23:5">{<block_content pos:start="21:9" pos:end="22:24">
        <expr_stmt pos:start="21:9" pos:end="21:22"><expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:12">cout</name><operator pos:start="21:13" pos:end="21:14">&lt;&lt;</operator><literal type="string" pos:start="21:15" pos:end="21:18">", "</literal><operator pos:start="21:19" pos:end="21:20">&lt;&lt;</operator><name pos:start="21:21" pos:end="21:21">m</name></expr>;</expr_stmt>
        <return pos:start="22:9" pos:end="22:24">return <expr pos:start="22:16" pos:end="22:23"><call pos:start="22:16" pos:end="22:23"><name pos:start="22:16" pos:end="22:18">abc</name><argument_list pos:start="22:19" pos:end="22:23">(<argument pos:start="22:20" pos:end="22:22"><expr pos:start="22:20" pos:end="22:22"><name pos:start="22:20" pos:end="22:20">m</name><operator pos:start="22:21" pos:end="22:21">/</operator><literal type="number" pos:start="22:22" pos:end="22:22">2</literal></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if>
    <else pos:start="24:5" pos:end="28:5">else
    <block pos:start="25:5" pos:end="28:5">{<block_content pos:start="26:9" pos:end="27:30">
        <expr_stmt pos:start="26:9" pos:end="26:22"><expr pos:start="26:9" pos:end="26:21"><name pos:start="26:9" pos:end="26:12">cout</name><operator pos:start="26:13" pos:end="26:14">&lt;&lt;</operator><literal type="string" pos:start="26:15" pos:end="26:18">", "</literal><operator pos:start="26:19" pos:end="26:20">&lt;&lt;</operator><name pos:start="26:21" pos:end="26:21">m</name></expr>;</expr_stmt>
        <return pos:start="27:9" pos:end="27:30">return <expr pos:start="27:16" pos:end="27:29"><call pos:start="27:16" pos:end="27:29"><name pos:start="27:16" pos:end="27:18">abc</name><argument_list pos:start="27:19" pos:end="27:29">(<argument pos:start="27:20" pos:end="27:28"><expr pos:start="27:20" pos:end="27:28"><operator pos:start="27:20" pos:end="27:20">(</operator><name pos:start="27:21" pos:end="27:21">m</name><operator pos:start="27:22" pos:end="27:22">-</operator><literal type="number" pos:start="27:23" pos:end="27:23">1</literal><operator pos:start="27:24" pos:end="27:24">)</operator><operator pos:start="27:25" pos:end="27:25">*</operator><literal type="number" pos:start="27:26" pos:end="27:27">3</literal><operator pos:start="27:27" pos:end="27:27">+</operator><literal type="number" pos:start="27:28" pos:end="27:28">6</literal></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="30:1" pos:end="44:1"><type pos:start="30:1" pos:end="30:3"><name pos:start="30:1" pos:end="30:3">int</name></type> <name pos:start="30:5" pos:end="30:8">main</name><parameter_list pos:start="30:9" pos:end="30:10">()</parameter_list>
<block pos:start="31:1" pos:end="44:1">{<block_content pos:start="32:5" pos:end="43:13">
    <decl_stmt pos:start="32:5" pos:end="32:10"><decl pos:start="32:5" pos:end="32:9"><type pos:start="32:5" pos:end="32:7"><name pos:start="32:5" pos:end="32:7">int</name></type> <name pos:start="32:9" pos:end="32:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:11"><expr pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:7">cin</name><operator pos:start="33:8" pos:end="33:9">&gt;&gt;</operator><name pos:start="33:10" pos:end="33:10">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:12"><expr pos:start="34:5" pos:end="34:11"><name pos:start="34:5" pos:end="34:8">cout</name><operator pos:start="34:9" pos:end="34:10">&lt;&lt;</operator><name pos:start="34:11" pos:end="34:11">n</name></expr>;</expr_stmt>
    <if_stmt pos:start="35:5" pos:end="42:5"><if pos:start="35:5" pos:end="38:5">if<condition pos:start="35:7" pos:end="35:14">(<expr pos:start="35:8" pos:end="35:13"><name pos:start="35:8" pos:end="35:8">n</name><operator pos:start="35:9" pos:end="35:9">%</operator><literal type="number" pos:start="35:10" pos:end="35:10">2</literal><operator pos:start="35:11" pos:end="35:12">==</operator><literal type="number" pos:start="35:13" pos:end="35:13">0</literal></expr>)</condition>
    <block pos:start="36:5" pos:end="38:5">{<block_content pos:start="37:9" pos:end="37:17">
        <expr_stmt pos:start="37:9" pos:end="37:17"><expr pos:start="37:9" pos:end="37:16"><call pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:11">abc</name><argument_list pos:start="37:12" pos:end="37:16">(<argument pos:start="37:13" pos:end="37:15"><expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:13">n</name><operator pos:start="37:14" pos:end="37:14">/</operator><literal type="number" pos:start="37:15" pos:end="37:15">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if>
    <else pos:start="39:5" pos:end="42:5">else
    <block pos:start="40:5" pos:end="42:5">{<block_content pos:start="41:9" pos:end="41:23">
        <expr_stmt pos:start="41:9" pos:end="41:23"><expr pos:start="41:9" pos:end="41:22"><call pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:11">abc</name><argument_list pos:start="41:12" pos:end="41:22">(<argument pos:start="41:13" pos:end="41:21"><expr pos:start="41:13" pos:end="41:21"><operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:14">n</name><operator pos:start="41:15" pos:end="41:15">-</operator><literal type="number" pos:start="41:16" pos:end="41:16">1</literal><operator pos:start="41:17" pos:end="41:17">)</operator><operator pos:start="41:18" pos:end="41:18">*</operator><literal type="number" pos:start="41:19" pos:end="41:20">3</literal><operator pos:start="41:20" pos:end="41:20">+</operator><literal type="number" pos:start="41:21" pos:end="41:21">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
