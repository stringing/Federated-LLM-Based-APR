<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1089/1089.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:16">&lt;deque&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:18">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:18">&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:17">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive> <cpp:file pos:start="5:10" pos:end="5:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<using pos:start="6:1" pos:end="6:20">using <namespace pos:start="6:7" pos:end="6:20">namespace <name pos:start="6:17" pos:end="6:19">std</name>;</namespace></using>
<struct pos:start="7:1" pos:end="10:2">struct <name pos:start="7:8" pos:end="7:11">node</name><block pos:start="7:12" pos:end="10:1">{<public type="default" pos:start="8:5" pos:end="8:18">
    <decl_stmt pos:start="8:5" pos:end="8:18"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">x</name></decl>,<decl pos:start="8:11" pos:end="8:11"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:11" pos:end="8:11">y</name></decl>,<decl pos:start="8:13" pos:end="8:13"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:13" pos:end="8:13">d</name></decl>,<decl pos:start="8:15" pos:end="8:17"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:15" pos:end="8:17">ans</name></decl>;</decl_stmt>
    
</public>}</block>;</struct>
<decl_stmt pos:start="11:1" pos:end="11:14"><decl pos:start="11:1" pos:end="11:13"><type pos:start="11:1" pos:end="11:11"><name pos:start="11:1" pos:end="11:11"><name pos:start="11:1" pos:end="11:5">deque</name><argument_list type="generic" pos:start="11:6" pos:end="11:11">&lt;<argument pos:start="11:7" pos:end="11:10"><expr pos:start="11:7" pos:end="11:10"><name pos:start="11:7" pos:end="11:10">node</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="11:13" pos:end="11:13">q</name></decl>;</decl_stmt>
<decl_stmt pos:start="12:1" pos:end="12:43"><decl pos:start="12:1" pos:end="12:42"><type pos:start="12:1" pos:end="12:3"><name pos:start="12:1" pos:end="12:3">int</name></type> <name pos:start="12:5" pos:end="12:13"><name pos:start="12:5" pos:end="12:7">dir</name><index pos:start="12:8" pos:end="12:10">[<expr pos:start="12:9" pos:end="12:9"><literal type="number" pos:start="12:9" pos:end="12:9">4</literal></expr>]</index><index pos:start="12:11" pos:end="12:13">[<expr pos:start="12:12" pos:end="12:12"><literal type="number" pos:start="12:12" pos:end="12:12">2</literal></expr>]</index></name> <init pos:start="12:15" pos:end="12:42">= <expr pos:start="12:17" pos:end="12:42"><block pos:start="12:17" pos:end="12:42">{<expr pos:start="12:18" pos:end="12:18"><literal type="number" pos:start="12:18" pos:end="12:18">0</literal></expr>, <expr pos:start="12:21" pos:end="12:22"><operator pos:start="12:21" pos:end="12:21">-</operator><literal type="number" pos:start="12:22" pos:end="12:22">1</literal></expr>, <expr pos:start="12:25" pos:end="12:25"><literal type="number" pos:start="12:25" pos:end="12:25">0</literal></expr>, <expr pos:start="12:28" pos:end="12:28"><literal type="number" pos:start="12:28" pos:end="12:28">1</literal></expr>, <expr pos:start="12:31" pos:end="12:31"><literal type="number" pos:start="12:31" pos:end="12:31">1</literal></expr>, <expr pos:start="12:34" pos:end="12:34"><literal type="number" pos:start="12:34" pos:end="12:34">0</literal></expr>, <expr pos:start="12:37" pos:end="12:38"><operator pos:start="12:37" pos:end="12:37">-</operator><literal type="number" pos:start="12:38" pos:end="12:38">1</literal></expr>, <expr pos:start="12:41" pos:end="12:41"><literal type="number" pos:start="12:41" pos:end="12:41">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="13:1" pos:end="13:19"><decl pos:start="13:1" pos:end="13:18"><type pos:start="13:1" pos:end="13:4"><name pos:start="13:1" pos:end="13:4">char</name></type> <name pos:start="13:6" pos:end="13:18"><name pos:start="13:6" pos:end="13:6">a</name><index pos:start="13:7" pos:end="13:12">[<expr pos:start="13:8" pos:end="13:11"><literal type="number" pos:start="13:8" pos:end="13:11">1000</literal></expr>]</index><index pos:start="13:13" pos:end="13:18">[<expr pos:start="13:14" pos:end="13:17"><literal type="number" pos:start="13:14" pos:end="13:17">1000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="14:1" pos:end="14:21"><decl pos:start="14:1" pos:end="14:20"><type pos:start="14:1" pos:end="14:4"><name pos:start="14:1" pos:end="14:4">bool</name></type> <name pos:start="14:6" pos:end="14:20"><name pos:start="14:6" pos:end="14:8">vis</name><index pos:start="14:9" pos:end="14:14">[<expr pos:start="14:10" pos:end="14:13"><literal type="number" pos:start="14:10" pos:end="14:13">1000</literal></expr>]</index><index pos:start="14:15" pos:end="14:20">[<expr pos:start="14:16" pos:end="14:19"><literal type="number" pos:start="14:16" pos:end="14:19">1000</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="15:1" pos:end="69:1"><type pos:start="15:1" pos:end="15:3"><name pos:start="15:1" pos:end="15:3">int</name></type> <name pos:start="15:5" pos:end="15:8">main</name><parameter_list pos:start="15:9" pos:end="15:10">()</parameter_list> <block pos:start="15:12" pos:end="69:1">{<block_content pos:start="16:5" pos:end="68:13">
    <expr_stmt pos:start="16:5" pos:end="16:35"><expr pos:start="16:5" pos:end="16:34"><call pos:start="16:5" pos:end="16:34"><name pos:start="16:5" pos:end="16:11">freopen</name><argument_list pos:start="16:12" pos:end="16:34">(<argument pos:start="16:13" pos:end="16:21"><expr pos:start="16:13" pos:end="16:21"><literal type="string" pos:start="16:13" pos:end="16:21">"maze.in"</literal></expr></argument>, <argument pos:start="16:24" pos:end="16:26"><expr pos:start="16:24" pos:end="16:26"><literal type="string" pos:start="16:24" pos:end="16:26">"r"</literal></expr></argument>, <argument pos:start="16:29" pos:end="16:33"><expr pos:start="16:29" pos:end="16:33"><name pos:start="16:29" pos:end="16:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><call pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:11">freopen</name><argument_list pos:start="17:12" pos:end="17:36">(<argument pos:start="17:13" pos:end="17:22"><expr pos:start="17:13" pos:end="17:22"><literal type="string" pos:start="17:13" pos:end="17:22">"maze.out"</literal></expr></argument>, <argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><literal type="string" pos:start="17:25" pos:end="17:27">"w"</literal></expr></argument>, <argument pos:start="17:30" pos:end="17:35"><expr pos:start="17:30" pos:end="17:35"><name pos:start="17:30" pos:end="17:35">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="18:5" pos:end="18:10"><decl pos:start="18:5" pos:end="18:9"><type pos:start="18:5" pos:end="18:7"><name pos:start="18:5" pos:end="18:7">int</name></type> <name pos:start="18:9" pos:end="18:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:13"><expr pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:7">cin</name> <operator pos:start="19:9" pos:end="19:10">&gt;&gt;</operator> <name pos:start="19:12" pos:end="19:12">t</name></expr>;</expr_stmt>
    <while pos:start="20:5" pos:end="67:5">while <condition pos:start="20:11" pos:end="20:15">(<expr pos:start="20:12" pos:end="20:14"><name pos:start="20:12" pos:end="20:12">t</name><operator pos:start="20:13" pos:end="20:14">--</operator></expr>)</condition> <block pos:start="20:17" pos:end="67:5">{<block_content pos:start="21:9" pos:end="66:9">
        <while pos:start="21:9" pos:end="21:41">while <condition pos:start="21:15" pos:end="21:26">(<expr pos:start="21:16" pos:end="21:25"><operator pos:start="21:16" pos:end="21:16">!</operator><call pos:start="21:17" pos:end="21:25"><name pos:start="21:17" pos:end="21:23"><name pos:start="21:17" pos:end="21:17">q</name><operator pos:start="21:18" pos:end="21:18">.</operator><name pos:start="21:19" pos:end="21:23">empty</name></name><argument_list pos:start="21:24" pos:end="21:25">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:28" pos:end="21:41"><block_content pos:start="21:28" pos:end="21:41"> <expr_stmt pos:start="21:28" pos:end="21:41"><expr pos:start="21:28" pos:end="21:40"><call pos:start="21:28" pos:end="21:40"><name pos:start="21:28" pos:end="21:38"><name pos:start="21:28" pos:end="21:28">q</name><operator pos:start="21:29" pos:end="21:29">.</operator><name pos:start="21:30" pos:end="21:38">pop_front</name></name><argument_list pos:start="21:39" pos:end="21:40">()</argument_list></call></expr>;</expr_stmt></block_content></block></while>
        <expr_stmt pos:start="22:9" pos:end="22:36"><expr pos:start="22:9" pos:end="22:35"><call pos:start="22:9" pos:end="22:35"><name pos:start="22:9" pos:end="22:14">memset</name><argument_list pos:start="22:15" pos:end="22:35">(<argument pos:start="22:16" pos:end="22:18"><expr pos:start="22:16" pos:end="22:18"><name pos:start="22:16" pos:end="22:18">vis</name></expr></argument>, <argument pos:start="22:21" pos:end="22:21"><expr pos:start="22:21" pos:end="22:21"><literal type="number" pos:start="22:21" pos:end="22:21">0</literal></expr></argument>, <argument pos:start="22:24" pos:end="22:34"><expr pos:start="22:24" pos:end="22:34"><sizeof pos:start="22:24" pos:end="22:34">sizeof<argument_list pos:start="22:30" pos:end="22:34">(<argument pos:start="22:31" pos:end="22:33"><expr pos:start="22:31" pos:end="22:33"><name pos:start="22:31" pos:end="22:33">vis</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="23:9" pos:end="23:16"><decl pos:start="23:9" pos:end="23:13"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">m</name></decl>,<decl pos:start="23:15" pos:end="23:15"><type ref="prev" pos:start="23:9" pos:end="23:11"/><name pos:start="23:15" pos:end="23:15">n</name></decl>;</decl_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:21"><expr pos:start="24:9" pos:end="24:20"><name pos:start="24:9" pos:end="24:11">cin</name> <operator pos:start="24:13" pos:end="24:14">&gt;&gt;</operator><name pos:start="24:15" pos:end="24:15">m</name> <operator pos:start="24:17" pos:end="24:18">&gt;&gt;</operator> <name pos:start="24:20" pos:end="24:20">n</name></expr>;</expr_stmt>
        <for pos:start="25:9" pos:end="27:9">for <control pos:start="25:13" pos:end="25:35">(<init pos:start="25:14" pos:end="25:23"><decl pos:start="25:14" pos:end="25:22"><type pos:start="25:14" pos:end="25:16"><name pos:start="25:14" pos:end="25:16">int</name></type> <name pos:start="25:18" pos:end="25:18">i</name> <init pos:start="25:20" pos:end="25:22">= <expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr></init></decl>;</init> <condition pos:start="25:25" pos:end="25:30"><expr pos:start="25:25" pos:end="25:29"><name pos:start="25:25" pos:end="25:25">i</name> <operator pos:start="25:27" pos:end="25:27">&lt;</operator> <name pos:start="25:29" pos:end="25:29">m</name></expr>;</condition> <incr pos:start="25:32" pos:end="25:34"><expr pos:start="25:32" pos:end="25:34"><name pos:start="25:32" pos:end="25:32">i</name><operator pos:start="25:33" pos:end="25:34">++</operator></expr></incr>)</control> <block pos:start="25:37" pos:end="27:9">{<block_content pos:start="26:13" pos:end="26:24">
            <expr_stmt pos:start="26:13" pos:end="26:24"><expr pos:start="26:13" pos:end="26:23"><name pos:start="26:13" pos:end="26:15">cin</name> <operator pos:start="26:17" pos:end="26:18">&gt;&gt;</operator> <name pos:start="26:20" pos:end="26:23"><name pos:start="26:20" pos:end="26:20">a</name><index pos:start="26:21" pos:end="26:23">[<expr pos:start="26:22" pos:end="26:22"><name pos:start="26:22" pos:end="26:22">i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="28:9" pos:end="28:26"><decl pos:start="28:9" pos:end="28:13"><type pos:start="28:9" pos:end="28:11"><name pos:start="28:9" pos:end="28:11">int</name></type> <name pos:start="28:13" pos:end="28:13">k</name></decl>,<decl pos:start="28:15" pos:end="28:16"><type ref="prev" pos:start="28:9" pos:end="28:11"/><name pos:start="28:15" pos:end="28:16">x1</name></decl>,<decl pos:start="28:18" pos:end="28:19"><type ref="prev" pos:start="28:9" pos:end="28:11"/><name pos:start="28:18" pos:end="28:19">y1</name></decl>,<decl pos:start="28:21" pos:end="28:22"><type ref="prev" pos:start="28:9" pos:end="28:11"/><name pos:start="28:21" pos:end="28:22">x2</name></decl>,<decl pos:start="28:24" pos:end="28:25"><type ref="prev" pos:start="28:9" pos:end="28:11"/><name pos:start="28:24" pos:end="28:25">y2</name></decl>;</decl_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:11">cin</name> <operator pos:start="29:13" pos:end="29:14">&gt;&gt;</operator> <name pos:start="29:16" pos:end="29:16">k</name> <operator pos:start="29:18" pos:end="29:19">&gt;&gt;</operator> <name pos:start="29:21" pos:end="29:22">x1</name> <operator pos:start="29:24" pos:end="29:25">&gt;&gt;</operator> <name pos:start="29:27" pos:end="29:28">y1</name> <operator pos:start="29:30" pos:end="29:31">&gt;&gt;</operator> <name pos:start="29:33" pos:end="29:34">x2</name> <operator pos:start="29:36" pos:end="29:37">&gt;&gt;</operator> <name pos:start="29:39" pos:end="29:40">y2</name></expr>;</expr_stmt>
        <expr_stmt pos:start="30:9" pos:end="30:13"><expr pos:start="30:9" pos:end="30:12"><name pos:start="30:9" pos:end="30:10">x1</name><operator pos:start="30:11" pos:end="30:12">--</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="31:9" pos:end="31:13"><expr pos:start="31:9" pos:end="31:12"><name pos:start="31:9" pos:end="31:10">y1</name><operator pos:start="31:11" pos:end="31:12">--</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:13"><expr pos:start="32:9" pos:end="32:12"><name pos:start="32:9" pos:end="32:10">x2</name><operator pos:start="32:11" pos:end="32:12">--</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="33:9" pos:end="33:13"><expr pos:start="33:9" pos:end="33:12"><name pos:start="33:9" pos:end="33:10">y2</name><operator pos:start="33:11" pos:end="33:12">--</operator></expr>;</expr_stmt>
        <if_stmt pos:start="34:9" pos:end="37:9"><if pos:start="34:9" pos:end="37:9">if <condition pos:start="34:12" pos:end="34:29">(<expr pos:start="34:13" pos:end="34:28"><name pos:start="34:13" pos:end="34:21"><name pos:start="34:13" pos:end="34:13">a</name><index pos:start="34:14" pos:end="34:17">[<expr pos:start="34:15" pos:end="34:16"><name pos:start="34:15" pos:end="34:16">x1</name></expr>]</index><index pos:start="34:18" pos:end="34:21">[<expr pos:start="34:19" pos:end="34:20"><name pos:start="34:19" pos:end="34:20">y1</name></expr>]</index></name> <operator pos:start="34:23" pos:end="34:24">==</operator> <literal type="char" pos:start="34:26" pos:end="34:28">'*'</literal></expr>)</condition> <block pos:start="34:31" pos:end="37:9">{<block_content pos:start="35:13" pos:end="36:21">
            <expr_stmt pos:start="35:13" pos:end="35:33"><expr pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:16">cout</name> <operator pos:start="35:18" pos:end="35:19">&lt;&lt;</operator> <literal type="string" pos:start="35:21" pos:end="35:24">"no"</literal> <operator pos:start="35:26" pos:end="35:27">&lt;&lt;</operator> <name pos:start="35:29" pos:end="35:32">endl</name></expr>;</expr_stmt>
            <continue pos:start="36:13" pos:end="36:21">continue;</continue>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="38:9" pos:end="38:43"><expr pos:start="38:9" pos:end="38:42"><call pos:start="38:9" pos:end="38:42"><name pos:start="38:9" pos:end="38:20"><name pos:start="38:9" pos:end="38:9">q</name><operator pos:start="38:10" pos:end="38:10">.</operator><name pos:start="38:11" pos:end="38:20">push_front</name></name><argument_list pos:start="38:21" pos:end="38:42">(<argument pos:start="38:22" pos:end="38:41"><expr pos:start="38:22" pos:end="38:41"><operator pos:start="38:22" pos:end="38:22">(</operator><name pos:start="38:23" pos:end="38:26">node</name><operator pos:start="38:27" pos:end="38:27">)</operator><block pos:start="38:28" pos:end="38:41">{<expr pos:start="38:29" pos:end="38:30"><name pos:start="38:29" pos:end="38:30">x1</name></expr>, <expr pos:start="38:33" pos:end="38:34"><name pos:start="38:33" pos:end="38:34">y1</name></expr>, <expr pos:start="38:37" pos:end="38:37"><literal type="number" pos:start="38:37" pos:end="38:37">0</literal></expr>, <expr pos:start="38:40" pos:end="38:40"><literal type="number" pos:start="38:40" pos:end="38:40">0</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="39:9" pos:end="39:42"><expr pos:start="39:9" pos:end="39:41"><call pos:start="39:9" pos:end="39:41"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:9">q</name><operator pos:start="39:10" pos:end="39:10">.</operator><name pos:start="39:11" pos:end="39:20">push_front</name></name><argument_list pos:start="39:21" pos:end="39:41">(<argument pos:start="39:22" pos:end="39:40"><expr pos:start="39:22" pos:end="39:40"><operator pos:start="39:22" pos:end="39:22">(</operator><name pos:start="39:23" pos:end="39:26">node</name><operator pos:start="39:27" pos:end="39:27">)</operator><block pos:start="39:28" pos:end="39:40">{<expr pos:start="39:29" pos:end="39:30"><name pos:start="39:29" pos:end="39:30">x1</name></expr>,<expr pos:start="39:32" pos:end="39:33"><name pos:start="39:32" pos:end="39:33">y1</name></expr>, <expr pos:start="39:36" pos:end="39:36"><literal type="number" pos:start="39:36" pos:end="39:36">1</literal></expr>, <expr pos:start="39:39" pos:end="39:39"><literal type="number" pos:start="39:39" pos:end="39:39">0</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="40:9" pos:end="40:43"><expr pos:start="40:9" pos:end="40:42"><call pos:start="40:9" pos:end="40:42"><name pos:start="40:9" pos:end="40:20"><name pos:start="40:9" pos:end="40:9">q</name><operator pos:start="40:10" pos:end="40:10">.</operator><name pos:start="40:11" pos:end="40:20">push_front</name></name><argument_list pos:start="40:21" pos:end="40:42">(<argument pos:start="40:22" pos:end="40:41"><expr pos:start="40:22" pos:end="40:41"><operator pos:start="40:22" pos:end="40:22">(</operator><name pos:start="40:23" pos:end="40:26">node</name><operator pos:start="40:27" pos:end="40:27">)</operator><block pos:start="40:28" pos:end="40:41">{<expr pos:start="40:29" pos:end="40:30"><name pos:start="40:29" pos:end="40:30">x1</name></expr>, <expr pos:start="40:33" pos:end="40:34"><name pos:start="40:33" pos:end="40:34">y1</name></expr>, <expr pos:start="40:37" pos:end="40:37"><literal type="number" pos:start="40:37" pos:end="40:37">2</literal></expr>, <expr pos:start="40:40" pos:end="40:40"><literal type="number" pos:start="40:40" pos:end="40:40">0</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="41:9" pos:end="41:43"><expr pos:start="41:9" pos:end="41:42"><call pos:start="41:9" pos:end="41:42"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:9">q</name><operator pos:start="41:10" pos:end="41:10">.</operator><name pos:start="41:11" pos:end="41:20">push_front</name></name><argument_list pos:start="41:21" pos:end="41:42">(<argument pos:start="41:22" pos:end="41:41"><expr pos:start="41:22" pos:end="41:41"><operator pos:start="41:22" pos:end="41:22">(</operator><name pos:start="41:23" pos:end="41:26">node</name><operator pos:start="41:27" pos:end="41:27">)</operator><block pos:start="41:28" pos:end="41:41">{<expr pos:start="41:29" pos:end="41:30"><name pos:start="41:29" pos:end="41:30">x1</name></expr>, <expr pos:start="41:33" pos:end="41:34"><name pos:start="41:33" pos:end="41:34">y1</name></expr>, <expr pos:start="41:37" pos:end="41:37"><literal type="number" pos:start="41:37" pos:end="41:37">3</literal></expr>, <expr pos:start="41:40" pos:end="41:40"><literal type="number" pos:start="41:40" pos:end="41:40">0</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="42:9" pos:end="42:23"><decl pos:start="42:9" pos:end="42:22"><type pos:start="42:9" pos:end="42:11"><name pos:start="42:9" pos:end="42:11">int</name></type> <name pos:start="42:13" pos:end="42:14">t1</name> <init pos:start="42:16" pos:end="42:22">= <expr pos:start="42:18" pos:end="42:22"><literal type="boolean" pos:start="42:18" pos:end="42:22">false</literal></expr></init></decl>;</decl_stmt>
        <while pos:start="43:9" pos:end="63:9">while <condition pos:start="43:15" pos:end="43:26">(<expr pos:start="43:16" pos:end="43:25"><operator pos:start="43:16" pos:end="43:16">!</operator><call pos:start="43:17" pos:end="43:25"><name pos:start="43:17" pos:end="43:23"><name pos:start="43:17" pos:end="43:17">q</name><operator pos:start="43:18" pos:end="43:18">.</operator><name pos:start="43:19" pos:end="43:23">empty</name></name><argument_list pos:start="43:24" pos:end="43:25">()</argument_list></call></expr>)</condition> <block pos:start="43:28" pos:end="63:9">{<block_content pos:start="44:13" pos:end="62:13">
            <decl_stmt pos:start="44:13" pos:end="44:31"><decl pos:start="44:13" pos:end="44:30"><type pos:start="44:13" pos:end="44:16"><name pos:start="44:13" pos:end="44:16">node</name></type> <name pos:start="44:18" pos:end="44:18">u</name> <init pos:start="44:20" pos:end="44:30">= <expr pos:start="44:22" pos:end="44:30"><call pos:start="44:22" pos:end="44:30"><name pos:start="44:22" pos:end="44:28"><name pos:start="44:22" pos:end="44:22">q</name><operator pos:start="44:23" pos:end="44:23">.</operator><name pos:start="44:24" pos:end="44:28">front</name></name><argument_list pos:start="44:29" pos:end="44:30">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="45:13" pos:end="45:33"><expr pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:15">vis</name><index pos:start="45:16" pos:end="45:20">[<expr pos:start="45:17" pos:end="45:19"><name pos:start="45:17" pos:end="45:19"><name pos:start="45:17" pos:end="45:17">u</name><operator pos:start="45:18" pos:end="45:18">.</operator><name pos:start="45:19" pos:end="45:19">x</name></name></expr>]</index><index pos:start="45:21" pos:end="45:25">[<expr pos:start="45:22" pos:end="45:24"><name pos:start="45:22" pos:end="45:24"><name pos:start="45:22" pos:end="45:22">u</name><operator pos:start="45:23" pos:end="45:23">.</operator><name pos:start="45:24" pos:end="45:24">y</name></name></expr>]</index></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <literal type="boolean" pos:start="45:29" pos:end="45:32">true</literal></expr>;</expr_stmt>
            <if_stmt pos:start="46:13" pos:end="50:13"><if pos:start="46:13" pos:end="50:13">if <condition pos:start="46:16" pos:end="46:39">(<expr pos:start="46:17" pos:end="46:38"><name pos:start="46:17" pos:end="46:19"><name pos:start="46:17" pos:end="46:17">u</name><operator pos:start="46:18" pos:end="46:18">.</operator><name pos:start="46:19" pos:end="46:19">x</name></name> <operator pos:start="46:21" pos:end="46:22">==</operator> <name pos:start="46:24" pos:end="46:25">x2</name> <operator pos:start="46:27" pos:end="46:28">&amp;&amp;</operator> <name pos:start="46:30" pos:end="46:32"><name pos:start="46:30" pos:end="46:30">u</name><operator pos:start="46:31" pos:end="46:31">.</operator><name pos:start="46:32" pos:end="46:32">y</name></name> <operator pos:start="46:34" pos:end="46:35">==</operator> <name pos:start="46:37" pos:end="46:38">y2</name></expr>)</condition> <block pos:start="46:41" pos:end="50:13">{<block_content pos:start="47:17" pos:end="49:22">
                <expr_stmt pos:start="47:17" pos:end="47:38"><expr pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:20">cout</name> <operator pos:start="47:22" pos:end="47:23">&lt;&lt;</operator> <literal type="string" pos:start="47:25" pos:end="47:29">"yes"</literal> <operator pos:start="47:31" pos:end="47:32">&lt;&lt;</operator> <name pos:start="47:34" pos:end="47:37">endl</name></expr>;</expr_stmt>
                <expr_stmt pos:start="48:17" pos:end="48:26"><expr pos:start="48:17" pos:end="48:25"><name pos:start="48:17" pos:end="48:18">t1</name> <operator pos:start="48:20" pos:end="48:20">=</operator> <literal type="boolean" pos:start="48:22" pos:end="48:25">true</literal></expr>;</expr_stmt>
                <break pos:start="49:17" pos:end="49:22">break;</break>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="51:13" pos:end="51:26"><expr pos:start="51:13" pos:end="51:25"><call pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:13">q</name><operator pos:start="51:14" pos:end="51:14">.</operator><name pos:start="51:15" pos:end="51:23">pop_front</name></name><argument_list pos:start="51:24" pos:end="51:25">()</argument_list></call></expr>;</expr_stmt>
            <for pos:start="52:13" pos:end="62:13">for <control pos:start="52:17" pos:end="52:40">(<init pos:start="52:18" pos:end="52:27"><decl pos:start="52:18" pos:end="52:26"><type pos:start="52:18" pos:end="52:20"><name pos:start="52:18" pos:end="52:20">int</name></type> <name pos:start="52:22" pos:end="52:22">i</name> <init pos:start="52:24" pos:end="52:26">= <expr pos:start="52:26" pos:end="52:26"><literal type="number" pos:start="52:26" pos:end="52:26">0</literal></expr></init></decl>;</init> <condition pos:start="52:29" pos:end="52:35"><expr pos:start="52:29" pos:end="52:34"><name pos:start="52:29" pos:end="52:29">i</name> <operator pos:start="52:31" pos:end="52:32">&lt;=</operator> <literal type="number" pos:start="52:34" pos:end="52:34">3</literal></expr>;</condition> <incr pos:start="52:37" pos:end="52:39"><expr pos:start="52:37" pos:end="52:39"><name pos:start="52:37" pos:end="52:37">i</name><operator pos:start="52:38" pos:end="52:39">++</operator></expr></incr>)</control> <block pos:start="52:42" pos:end="62:13">{<block_content pos:start="53:17" pos:end="61:17">
                <decl_stmt pos:start="53:17" pos:end="53:41"><decl pos:start="53:17" pos:end="53:40"><type pos:start="53:17" pos:end="53:19"><name pos:start="53:17" pos:end="53:19">int</name></type> <name pos:start="53:21" pos:end="53:22">tx</name> <init pos:start="53:24" pos:end="53:40">= <expr pos:start="53:26" pos:end="53:40"><name pos:start="53:26" pos:end="53:28"><name pos:start="53:26" pos:end="53:26">u</name><operator pos:start="53:27" pos:end="53:27">.</operator><name pos:start="53:28" pos:end="53:28">x</name></name> <operator pos:start="53:30" pos:end="53:30">+</operator> <name pos:start="53:32" pos:end="53:40"><name pos:start="53:32" pos:end="53:34">dir</name><index pos:start="53:35" pos:end="53:37">[<expr pos:start="53:36" pos:end="53:36"><name pos:start="53:36" pos:end="53:36">i</name></expr>]</index><index pos:start="53:38" pos:end="53:40">[<expr pos:start="53:39" pos:end="53:39"><literal type="number" pos:start="53:39" pos:end="53:39">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="54:17" pos:end="54:41"><decl pos:start="54:17" pos:end="54:40"><type pos:start="54:17" pos:end="54:19"><name pos:start="54:17" pos:end="54:19">int</name></type> <name pos:start="54:21" pos:end="54:22">ty</name> <init pos:start="54:24" pos:end="54:40">= <expr pos:start="54:26" pos:end="54:40"><name pos:start="54:26" pos:end="54:28"><name pos:start="54:26" pos:end="54:26">u</name><operator pos:start="54:27" pos:end="54:27">.</operator><name pos:start="54:28" pos:end="54:28">y</name></name> <operator pos:start="54:30" pos:end="54:30">+</operator> <name pos:start="54:32" pos:end="54:40"><name pos:start="54:32" pos:end="54:34">dir</name><index pos:start="54:35" pos:end="54:37">[<expr pos:start="54:36" pos:end="54:36"><name pos:start="54:36" pos:end="54:36">i</name></expr>]</index><index pos:start="54:38" pos:end="54:40">[<expr pos:start="54:39" pos:end="54:39"><literal type="number" pos:start="54:39" pos:end="54:39">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="55:17" pos:end="61:17"><if pos:start="55:17" pos:end="61:17">if <condition pos:start="55:20" pos:end="55:95">(<expr pos:start="55:21" pos:end="55:94"><name pos:start="55:21" pos:end="55:29"><name pos:start="55:21" pos:end="55:21">a</name><index pos:start="55:22" pos:end="55:25">[<expr pos:start="55:23" pos:end="55:24"><name pos:start="55:23" pos:end="55:24">tx</name></expr>]</index><index pos:start="55:26" pos:end="55:29">[<expr pos:start="55:27" pos:end="55:28"><name pos:start="55:27" pos:end="55:28">ty</name></expr>]</index></name> <operator pos:start="55:31" pos:end="55:32">!=</operator> <literal type="char" pos:start="55:34" pos:end="55:36">'*'</literal> <operator pos:start="55:38" pos:end="55:39">&amp;&amp;</operator> <operator pos:start="55:41" pos:end="55:41">!</operator><name pos:start="55:42" pos:end="55:52"><name pos:start="55:42" pos:end="55:44">vis</name><index pos:start="55:45" pos:end="55:48">[<expr pos:start="55:46" pos:end="55:47"><name pos:start="55:46" pos:end="55:47">tx</name></expr>]</index><index pos:start="55:49" pos:end="55:52">[<expr pos:start="55:50" pos:end="55:51"><name pos:start="55:50" pos:end="55:51">ty</name></expr>]</index></name> <operator pos:start="55:54" pos:end="55:55">&amp;&amp;</operator> <name pos:start="55:57" pos:end="55:58">tx</name> <operator pos:start="55:60" pos:end="55:61">&gt;=</operator> <literal type="number" pos:start="55:63" pos:end="55:63">0</literal> <operator pos:start="55:65" pos:end="55:66">&amp;&amp;</operator> <name pos:start="55:68" pos:end="55:69">tx</name> <operator pos:start="55:71" pos:end="55:71">&lt;</operator> <name pos:start="55:73" pos:end="55:73">m</name> <operator pos:start="55:75" pos:end="55:76">&amp;&amp;</operator> <name pos:start="55:78" pos:end="55:79">ty</name> <operator pos:start="55:81" pos:end="55:82">&gt;=</operator> <literal type="number" pos:start="55:84" pos:end="55:84">0</literal> <operator pos:start="55:86" pos:end="55:87">&amp;&amp;</operator> <name pos:start="55:89" pos:end="55:90">ty</name> <operator pos:start="55:92" pos:end="55:92">&lt;</operator> <name pos:start="55:94" pos:end="55:94">n</name></expr>)</condition> <block pos:start="55:97" pos:end="61:17">{<block_content pos:start="56:21" pos:end="60:21">
                    <if_stmt pos:start="56:21" pos:end="60:21"><if pos:start="56:21" pos:end="58:21">if<condition pos:start="56:23" pos:end="56:32">(<expr pos:start="56:24" pos:end="56:31"><name pos:start="56:24" pos:end="56:26"><name pos:start="56:24" pos:end="56:24">u</name><operator pos:start="56:25" pos:end="56:25">.</operator><name pos:start="56:26" pos:end="56:26">d</name></name> <operator pos:start="56:28" pos:end="56:29">==</operator> <name pos:start="56:31" pos:end="56:31">i</name></expr>)</condition> <block pos:start="56:34" pos:end="58:21">{<block_content pos:start="57:25" pos:end="57:63">
                        <expr_stmt pos:start="57:25" pos:end="57:63"><expr pos:start="57:25" pos:end="57:62"><call pos:start="57:25" pos:end="57:62"><name pos:start="57:25" pos:end="57:36"><name pos:start="57:25" pos:end="57:25">q</name><operator pos:start="57:26" pos:end="57:26">.</operator><name pos:start="57:27" pos:end="57:36">push_front</name></name><argument_list pos:start="57:37" pos:end="57:62">(<argument pos:start="57:38" pos:end="57:61"><expr pos:start="57:38" pos:end="57:61"><operator pos:start="57:38" pos:end="57:38">(</operator><name pos:start="57:39" pos:end="57:42">node</name><operator pos:start="57:43" pos:end="57:43">)</operator><block pos:start="57:44" pos:end="57:61">{<expr pos:start="57:45" pos:end="57:46"><name pos:start="57:45" pos:end="57:46">tx</name></expr>, <expr pos:start="57:49" pos:end="57:50"><name pos:start="57:49" pos:end="57:50">ty</name></expr>, <expr pos:start="57:53" pos:end="57:53"><name pos:start="57:53" pos:end="57:53">i</name></expr>, <expr pos:start="57:56" pos:end="57:60"><name pos:start="57:56" pos:end="57:60"><name pos:start="57:56" pos:end="57:56">u</name><operator pos:start="57:57" pos:end="57:57">.</operator><name pos:start="57:58" pos:end="57:60">ans</name></name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if> <else pos:start="58:23" pos:end="60:21">else <block pos:start="58:28" pos:end="60:21">{<block_content pos:start="59:25" pos:end="59:86">
                        <if_stmt pos:start="59:25" pos:end="59:86"><if pos:start="59:25" pos:end="59:86">if <condition pos:start="59:28" pos:end="59:43">(<expr pos:start="59:29" pos:end="59:42"><name pos:start="59:29" pos:end="59:33"><name pos:start="59:29" pos:end="59:29">u</name><operator pos:start="59:30" pos:end="59:30">.</operator><name pos:start="59:31" pos:end="59:33">ans</name></name> <operator pos:start="59:35" pos:end="59:35">+</operator> <literal type="number" pos:start="59:37" pos:end="59:37">1</literal> <operator pos:start="59:39" pos:end="59:40">&lt;=</operator> <name pos:start="59:42" pos:end="59:42">k</name></expr>)</condition><block type="pseudo" pos:start="59:45" pos:end="59:86"><block_content pos:start="59:45" pos:end="59:86"> <expr_stmt pos:start="59:45" pos:end="59:86"><expr pos:start="59:45" pos:end="59:85"><call pos:start="59:45" pos:end="59:85"><name pos:start="59:45" pos:end="59:55"><name pos:start="59:45" pos:end="59:45">q</name><operator pos:start="59:46" pos:end="59:46">.</operator><name pos:start="59:47" pos:end="59:55">push_back</name></name><argument_list pos:start="59:56" pos:end="59:85">(<argument pos:start="59:57" pos:end="59:84"><expr pos:start="59:57" pos:end="59:84"><operator pos:start="59:57" pos:end="59:57">(</operator><name pos:start="59:58" pos:end="59:61">node</name><operator pos:start="59:62" pos:end="59:62">)</operator><block pos:start="59:63" pos:end="59:84">{<expr pos:start="59:64" pos:end="59:65"><name pos:start="59:64" pos:end="59:65">tx</name></expr>, <expr pos:start="59:68" pos:end="59:69"><name pos:start="59:68" pos:end="59:69">ty</name></expr>, <expr pos:start="59:72" pos:end="59:72"><name pos:start="59:72" pos:end="59:72">i</name></expr>, <expr pos:start="59:75" pos:end="59:83"><name pos:start="59:75" pos:end="59:79"><name pos:start="59:75" pos:end="59:75">u</name><operator pos:start="59:76" pos:end="59:76">.</operator><name pos:start="59:77" pos:end="59:79">ans</name></name> <operator pos:start="59:81" pos:end="59:81">+</operator> <literal type="number" pos:start="59:83" pos:end="59:83">1</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    </block_content>}</block></else></if_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></while>
        <if_stmt pos:start="64:9" pos:end="66:9"><if pos:start="64:9" pos:end="66:9">if <condition pos:start="64:12" pos:end="64:16">(<expr pos:start="64:13" pos:end="64:15"><operator pos:start="64:13" pos:end="64:13">!</operator><name pos:start="64:14" pos:end="64:15">t1</name></expr>)</condition> <block pos:start="64:18" pos:end="66:9">{<block_content pos:start="65:13" pos:end="65:32">
            <expr_stmt pos:start="65:13" pos:end="65:32"><expr pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:16">cout</name> <operator pos:start="65:18" pos:end="65:19">&lt;&lt;</operator> <literal type="string" pos:start="65:21" pos:end="65:24">"no"</literal> <operator pos:start="65:26" pos:end="65:27">&lt;&lt;</operator><name pos:start="65:28" pos:end="65:31">endl</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt> 
    </block_content>}</block></while>
    <return pos:start="68:5" pos:end="68:13">return <expr pos:start="68:12" pos:end="68:12"><literal type="number" pos:start="68:12" pos:end="68:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
