<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/93/93.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="18:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name> <parameter_list pos:start="3:10" pos:end="3:11">()</parameter_list> <block pos:start="3:13" pos:end="18:1">{<block_content pos:start="4:5" pos:end="17:13">
    <expr_stmt pos:start="4:5" pos:end="4:42"><expr pos:start="4:5" pos:end="4:41"><call pos:start="4:5" pos:end="4:41"><name pos:start="4:5" pos:end="4:11">freopen</name> <argument_list pos:start="4:13" pos:end="4:41">(<argument pos:start="4:14" pos:end="4:26"><expr pos:start="4:14" pos:end="4:26"><literal type="string" pos:start="4:14" pos:end="4:26">"elevator.in"</literal></expr></argument> , <argument pos:start="4:30" pos:end="4:32"><expr pos:start="4:30" pos:end="4:32"><literal type="string" pos:start="4:30" pos:end="4:32">"r"</literal></expr></argument> , <argument pos:start="4:36" pos:end="4:40"><expr pos:start="4:36" pos:end="4:40"><name pos:start="4:36" pos:end="4:40">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:44"><expr pos:start="5:5" pos:end="5:43"><call pos:start="5:5" pos:end="5:43"><name pos:start="5:5" pos:end="5:11">freopen</name> <argument_list pos:start="5:13" pos:end="5:43">(<argument pos:start="5:14" pos:end="5:27"><expr pos:start="5:14" pos:end="5:27"><literal type="string" pos:start="5:14" pos:end="5:27">"elevator.out"</literal></expr></argument> , <argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><literal type="string" pos:start="5:31" pos:end="5:33">"w"</literal></expr></argument> , <argument pos:start="5:37" pos:end="5:42"><expr pos:start="5:37" pos:end="5:42"><name pos:start="5:37" pos:end="5:42">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:20"><decl pos:start="6:5" pos:end="6:15"><type pos:start="6:5" pos:end="6:13"><name pos:start="6:5" pos:end="6:8">long</name> <name pos:start="6:10" pos:end="6:13">long</name></type> <name pos:start="6:15" pos:end="6:15">n</name></decl> , <decl pos:start="6:19" pos:end="6:19"><type ref="prev" pos:start="6:5" pos:end="6:13"/><name pos:start="6:19" pos:end="6:19">x</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:7">map</name> <argument_list type="generic" pos:start="7:9" pos:end="7:25">&lt;<argument pos:start="7:10" pos:end="7:18"><expr pos:start="7:10" pos:end="7:18"><name pos:start="7:10" pos:end="7:13">long</name> <name pos:start="7:15" pos:end="7:18">long</name></expr></argument> , <argument pos:start="7:22" pos:end="7:24"><expr pos:start="7:22" pos:end="7:24"><name pos:start="7:22" pos:end="7:24">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="7:27" pos:end="7:27">a</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:13"><expr pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:7">cin</name> <operator pos:start="8:9" pos:end="8:10">&gt;&gt;</operator> <name pos:start="8:12" pos:end="8:12">n</name></expr>;</expr_stmt>
    <for pos:start="9:5" pos:end="12:5">for <control pos:start="9:9" pos:end="9:31">(<init pos:start="9:10" pos:end="9:19"><decl pos:start="9:10" pos:end="9:18"><type pos:start="9:10" pos:end="9:12"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:14">i</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</init> <condition pos:start="9:21" pos:end="9:26"><expr pos:start="9:21" pos:end="9:25"><name pos:start="9:21" pos:end="9:21">i</name> <operator pos:start="9:23" pos:end="9:23">&lt;</operator> <name pos:start="9:25" pos:end="9:25">n</name></expr>;</condition> <incr pos:start="9:28" pos:end="9:30"><expr pos:start="9:28" pos:end="9:30"><name pos:start="9:28" pos:end="9:28">i</name><operator pos:start="9:29" pos:end="9:30">++</operator></expr></incr>)</control> <block pos:start="9:33" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:15">
        <expr_stmt pos:start="10:9" pos:end="10:17"><expr pos:start="10:9" pos:end="10:16"><name pos:start="10:9" pos:end="10:11">cin</name> <operator pos:start="10:13" pos:end="10:14">&gt;&gt;</operator> <name pos:start="10:16" pos:end="10:16">x</name></expr>;</expr_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:15"><expr pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:9">a</name><index pos:start="11:10" pos:end="11:12">[<expr pos:start="11:11" pos:end="11:11"><name pos:start="11:11" pos:end="11:11">x</name></expr>]</index></name><operator pos:start="11:13" pos:end="11:14">++</operator></expr>;</expr_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">auto</name></type> <name pos:start="13:10" pos:end="13:13">last</name> <init pos:start="13:15" pos:end="13:23">= <expr pos:start="13:17" pos:end="13:23"><call pos:start="13:17" pos:end="13:23"><name pos:start="13:17" pos:end="13:21"><name pos:start="13:17" pos:end="13:17">a</name><operator pos:start="13:18" pos:end="13:18">.</operator><name pos:start="13:19" pos:end="13:21">end</name></name><argument_list pos:start="13:22" pos:end="13:23">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:22"><decl pos:start="14:5" pos:end="14:21"><type pos:start="14:5" pos:end="14:13"><name pos:start="14:5" pos:end="14:8">long</name> <name pos:start="14:10" pos:end="14:13">long</name></type> <name pos:start="14:15" pos:end="14:17">sum</name> <init pos:start="14:19" pos:end="14:21">= <expr pos:start="14:21" pos:end="14:21"><literal type="number" pos:start="14:21" pos:end="14:21">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:54"><expr pos:start="15:5" pos:end="15:53"><name pos:start="15:5" pos:end="15:7">sum</name> <operator pos:start="15:9" pos:end="15:10">+=</operator> <name pos:start="15:12" pos:end="15:22"><name pos:start="15:12" pos:end="15:15">last</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:22">first</name></name> <operator pos:start="15:24" pos:end="15:24">*</operator> <literal type="number" pos:start="15:26" pos:end="15:28">9</literal> <operator pos:start="15:28" pos:end="15:28">+</operator> <call pos:start="15:30" pos:end="15:37"><name pos:start="15:30" pos:end="15:35"><name pos:start="15:30" pos:end="15:30">a</name><operator pos:start="15:31" pos:end="15:31">.</operator><name pos:start="15:32" pos:end="15:35">size</name></name><argument_list pos:start="15:36" pos:end="15:37">()</argument_list></call> <operator pos:start="15:39" pos:end="15:39">*</operator> <literal type="number" pos:start="15:41" pos:end="15:43">3</literal> <operator pos:start="15:43" pos:end="15:43">+</operator> <name pos:start="15:45" pos:end="15:45">n</name> <operator pos:start="15:47" pos:end="15:47">*</operator> <literal type="number" pos:start="15:49" pos:end="15:51">2</literal> <operator pos:start="15:51" pos:end="15:51">+</operator> <literal type="number" pos:start="15:53" pos:end="15:53">9</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:24"><expr pos:start="16:5" pos:end="16:23"><name pos:start="16:5" pos:end="16:8">cout</name> <operator pos:start="16:10" pos:end="16:11">&lt;&lt;</operator> <name pos:start="16:13" pos:end="16:15">sum</name> <operator pos:start="16:17" pos:end="16:18">&lt;&lt;</operator> <name pos:start="16:20" pos:end="16:23">endl</name></expr>;</expr_stmt>
    <return pos:start="17:5" pos:end="17:13">return <expr pos:start="17:12" pos:end="17:12"><literal type="number" pos:start="17:12" pos:end="17:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
