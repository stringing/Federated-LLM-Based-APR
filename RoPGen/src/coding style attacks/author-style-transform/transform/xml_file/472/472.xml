<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/472/472.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="19:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name> <parameter_list pos:start="4:10" pos:end="4:11">()</parameter_list><block pos:start="4:12" pos:end="19:1">{<block_content pos:start="5:5" pos:end="18:13">
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">string</name></type> <name pos:start="5:12" pos:end="5:12">a</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:20"><expr pos:start="6:5" pos:end="6:19"><call pos:start="6:5" pos:end="6:19"><name pos:start="6:5" pos:end="6:11">getline</name><argument_list pos:start="6:12" pos:end="6:19">(<argument pos:start="6:13" pos:end="6:15"><expr pos:start="6:13" pos:end="6:15"><name pos:start="6:13" pos:end="6:15">cin</name></expr></argument>, <argument pos:start="6:18" pos:end="6:18"><expr pos:start="6:18" pos:end="6:18"><name pos:start="6:18" pos:end="6:18">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:8">long</name> <name pos:start="7:10" pos:end="7:13">long</name></type> <name pos:start="7:15" pos:end="7:15">q</name> <init pos:start="7:17" pos:end="7:19">= <expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:19"><decl pos:start="8:5" pos:end="8:18"><type pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:10">string</name></type> <name pos:start="8:12" pos:end="8:12">w</name> <init pos:start="8:14" pos:end="8:18">= <expr pos:start="8:16" pos:end="8:18"><literal type="string" pos:start="8:16" pos:end="8:18">"a"</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="9:5" pos:end="16:5">for <control pos:start="9:9" pos:end="9:39">(<init pos:start="9:10" pos:end="9:19"><decl pos:start="9:10" pos:end="9:18"><type pos:start="9:10" pos:end="9:12"><name pos:start="9:10" pos:end="9:12">int</name></type> <name pos:start="9:14" pos:end="9:14">i</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</init> <condition pos:start="9:21" pos:end="9:34"><expr pos:start="9:21" pos:end="9:33"><call pos:start="9:21" pos:end="9:28"><name pos:start="9:21" pos:end="9:26"><name pos:start="9:21" pos:end="9:21">a</name><operator pos:start="9:22" pos:end="9:22">.</operator><name pos:start="9:23" pos:end="9:26">size</name></name><argument_list pos:start="9:27" pos:end="9:28">()</argument_list></call> <operator pos:start="9:30" pos:end="9:31">&gt;=</operator> <literal type="number" pos:start="9:33" pos:end="9:33">0</literal></expr>;</condition> <incr pos:start="9:36" pos:end="9:38"><expr pos:start="9:36" pos:end="9:38"><name pos:start="9:36" pos:end="9:36">i</name><operator pos:start="9:37" pos:end="9:38">++</operator></expr></incr>)</control><block pos:start="9:40" pos:end="16:5">{<block_content pos:start="10:9" pos:end="15:42"> 
        <if_stmt pos:start="10:9" pos:end="14:9"><if pos:start="10:9" pos:end="14:9">if <condition pos:start="10:12" pos:end="10:41">(<expr pos:start="10:13" pos:end="10:40"><name pos:start="10:13" pos:end="10:16"><name pos:start="10:13" pos:end="10:13">a</name><index pos:start="10:14" pos:end="10:16">[<expr pos:start="10:15" pos:end="10:15"><name pos:start="10:15" pos:end="10:15">i</name></expr>]</index></name> <operator pos:start="10:18" pos:end="10:19">==</operator> <literal type="char" pos:start="10:21" pos:end="10:23">' '</literal><operator pos:start="10:24" pos:end="10:25">&amp;&amp;</operator><name pos:start="10:26" pos:end="10:33"><name pos:start="10:26" pos:end="10:26">a</name><index pos:start="10:27" pos:end="10:33">[<expr pos:start="10:28" pos:end="10:32"><name pos:start="10:28" pos:end="10:28">i</name> <operator pos:start="10:30" pos:end="10:30">+</operator> <literal type="number" pos:start="10:32" pos:end="10:32">1</literal></expr>]</index></name> <operator pos:start="10:35" pos:end="10:36">!=</operator> <literal type="char" pos:start="10:38" pos:end="10:40">' '</literal></expr>)</condition><block pos:start="10:42" pos:end="14:9">{<block_content pos:start="11:12" pos:end="13:12">
           <if_stmt pos:start="11:12" pos:end="13:12"><if pos:start="11:12" pos:end="13:12">if <condition pos:start="11:15" pos:end="11:60">(<expr pos:start="11:16" pos:end="11:59"><operator pos:start="11:16" pos:end="11:16">(</operator><call pos:start="11:17" pos:end="11:40"><name pos:start="11:17" pos:end="11:24"><name pos:start="11:17" pos:end="11:17">a</name><operator pos:start="11:18" pos:end="11:18">.</operator><name pos:start="11:19" pos:end="11:24">substr</name></name><argument_list pos:start="11:25" pos:end="11:40">(<argument pos:start="11:26" pos:end="11:26"><expr pos:start="11:26" pos:end="11:26"><name pos:start="11:26" pos:end="11:26">q</name></expr></argument>, <argument pos:start="11:29" pos:end="11:39"><expr pos:start="11:29" pos:end="11:39"><call pos:start="11:29" pos:end="11:39"><name pos:start="11:29" pos:end="11:34"><name pos:start="11:29" pos:end="11:29">a</name><operator pos:start="11:30" pos:end="11:30">.</operator><name pos:start="11:31" pos:end="11:34">find</name></name><argument_list pos:start="11:35" pos:end="11:39">(<argument pos:start="11:36" pos:end="11:38"><expr pos:start="11:36" pos:end="11:38"><literal type="char" pos:start="11:36" pos:end="11:38">' '</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="11:41" pos:end="11:41">)</operator><operator pos:start="11:42" pos:end="11:42">.</operator><call pos:start="11:43" pos:end="11:48"><name pos:start="11:43" pos:end="11:46">size</name><argument_list pos:start="11:47" pos:end="11:48">()</argument_list></call> <operator pos:start="11:50" pos:end="11:50">&gt;</operator> <call pos:start="11:52" pos:end="11:59"><name pos:start="11:52" pos:end="11:57"><name pos:start="11:52" pos:end="11:52">w</name><operator pos:start="11:53" pos:end="11:53">.</operator><name pos:start="11:54" pos:end="11:57">size</name></name><argument_list pos:start="11:58" pos:end="11:59">()</argument_list></call></expr>)</condition><block pos:start="11:61" pos:end="13:12">{<block_content pos:start="12:16" pos:end="12:44">
               <expr_stmt pos:start="12:16" pos:end="12:44"><expr pos:start="12:16" pos:end="12:43"><name pos:start="12:16" pos:end="12:16">w</name> <operator pos:start="12:18" pos:end="12:18">=</operator> <call pos:start="12:20" pos:end="12:43"><name pos:start="12:20" pos:end="12:27"><name pos:start="12:20" pos:end="12:20">a</name><operator pos:start="12:21" pos:end="12:21">.</operator><name pos:start="12:22" pos:end="12:27">substr</name></name><argument_list pos:start="12:28" pos:end="12:43">(<argument pos:start="12:29" pos:end="12:29"><expr pos:start="12:29" pos:end="12:29"><name pos:start="12:29" pos:end="12:29">q</name></expr></argument>, <argument pos:start="12:32" pos:end="12:42"><expr pos:start="12:32" pos:end="12:42"><call pos:start="12:32" pos:end="12:42"><name pos:start="12:32" pos:end="12:37"><name pos:start="12:32" pos:end="12:32">a</name><operator pos:start="12:33" pos:end="12:33">.</operator><name pos:start="12:34" pos:end="12:37">find</name></name><argument_list pos:start="12:38" pos:end="12:42">(<argument pos:start="12:39" pos:end="12:41"><expr pos:start="12:39" pos:end="12:41"><literal type="char" pos:start="12:39" pos:end="12:41">' '</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:42"><expr pos:start="15:9" pos:end="15:41"><call pos:start="15:9" pos:end="15:41"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:9">a</name><operator pos:start="15:10" pos:end="15:10">.</operator><name pos:start="15:11" pos:end="15:17">replace</name></name><argument_list pos:start="15:18" pos:end="15:41">(<argument pos:start="15:19" pos:end="15:19"><expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr></argument>, <argument pos:start="15:22" pos:end="15:36"><expr pos:start="15:22" pos:end="15:36"><call pos:start="15:22" pos:end="15:32"><name pos:start="15:22" pos:end="15:27"><name pos:start="15:22" pos:end="15:22">a</name><operator pos:start="15:23" pos:end="15:23">.</operator><name pos:start="15:24" pos:end="15:27">find</name></name><argument_list pos:start="15:28" pos:end="15:32">(<argument pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><literal type="char" pos:start="15:29" pos:end="15:31">' '</literal></expr></argument>)</argument_list></call> <operator pos:start="15:34" pos:end="15:34">+</operator> <literal type="number" pos:start="15:36" pos:end="15:36">1</literal></expr></argument>, <argument pos:start="15:39" pos:end="15:40"><expr pos:start="15:39" pos:end="15:40"><literal type="string" pos:start="15:39" pos:end="15:40">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="17:5" pos:end="17:14"><expr pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:8">cout</name> <operator pos:start="17:10" pos:end="17:11">&lt;&lt;</operator> <name pos:start="17:13" pos:end="17:13">w</name></expr>;</expr_stmt>
    <return pos:start="18:5" pos:end="18:13">return <expr pos:start="18:12" pos:end="18:12"><literal type="number" pos:start="18:12" pos:end="18:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
