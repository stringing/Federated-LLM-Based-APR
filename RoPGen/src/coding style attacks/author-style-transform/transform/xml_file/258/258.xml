<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/258/258.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:18">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:17">&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:16">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:16">&lt;string&gt;</cpp:file></cpp:include>

<using pos:start="6:1" pos:end="6:20">using <namespace pos:start="6:7" pos:end="6:20">namespace <name pos:start="6:17" pos:end="6:19">std</name>;</namespace></using>

<function pos:start="8:1" pos:end="16:1"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:12">getInSun</name><parameter_list pos:start="8:13" pos:end="8:21">(<parameter pos:start="8:14" pos:end="8:20"><decl pos:start="8:14" pos:end="8:20"><type pos:start="8:14" pos:end="8:16"><name pos:start="8:14" pos:end="8:16">int</name></type> <name pos:start="8:18" pos:end="8:20">num</name></decl></parameter>)</parameter_list><block pos:start="8:22" pos:end="16:1">{<block_content pos:start="9:5" pos:end="15:15">
    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">sum</name> <init pos:start="9:13" pos:end="9:14">=<expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="10:5" pos:end="14:5">while<condition pos:start="10:10" pos:end="10:16">(<expr pos:start="10:11" pos:end="10:15"><name pos:start="10:11" pos:end="10:13">num</name><operator pos:start="10:14" pos:end="10:14">&gt;</operator><literal type="number" pos:start="10:15" pos:end="10:15">0</literal></expr>)</condition><block pos:start="10:17" pos:end="14:5">{<block_content pos:start="11:9" pos:end="13:19">
        <decl_stmt pos:start="11:9" pos:end="11:21"><decl pos:start="11:9" pos:end="11:20"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name><init pos:start="11:14" pos:end="11:20">=<expr pos:start="11:15" pos:end="11:20"><name pos:start="11:15" pos:end="11:17">num</name><operator pos:start="11:18" pos:end="11:18">%</operator><literal type="number" pos:start="11:19" pos:end="11:20">10</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:20"><expr pos:start="12:9" pos:end="12:19"><name pos:start="12:9" pos:end="12:11">sum</name> <operator pos:start="12:13" pos:end="12:13">=</operator> <name pos:start="12:15" pos:end="12:17">sum</name><operator pos:start="12:18" pos:end="12:18">+</operator><name pos:start="12:19" pos:end="12:19">i</name></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:19"><expr pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:11">num</name><operator pos:start="13:12" pos:end="13:12">=</operator><name pos:start="13:13" pos:end="13:15">num</name><operator pos:start="13:16" pos:end="13:16">/</operator><literal type="number" pos:start="13:17" pos:end="13:18">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="15:5" pos:end="15:15">return <expr pos:start="15:12" pos:end="15:14"><name pos:start="15:12" pos:end="15:14">sum</name></expr>;</return>        
</block_content>}</block></function>

<function pos:start="18:1" pos:end="25:1"><type pos:start="18:1" pos:end="18:4"><name pos:start="18:1" pos:end="18:4">bool</name></type> <name pos:start="18:6" pos:end="18:8">cmp</name><parameter_list pos:start="18:9" pos:end="18:28">(<parameter pos:start="18:10" pos:end="18:17"><decl pos:start="18:10" pos:end="18:17"><type pos:start="18:10" pos:end="18:17"><name pos:start="18:10" pos:end="18:15">string</name></type> <name pos:start="18:17" pos:end="18:17">a</name></decl></parameter>, <parameter pos:start="18:20" pos:end="18:27"><decl pos:start="18:20" pos:end="18:27"><type pos:start="18:20" pos:end="18:27"><name pos:start="18:20" pos:end="18:25">string</name></type> <name pos:start="18:27" pos:end="18:27">b</name></decl></parameter>)</parameter_list>
<block pos:start="19:1" pos:end="25:1">{<block_content pos:start="20:5" pos:end="24:5">
    <if_stmt pos:start="20:5" pos:end="24:5"><if pos:start="20:5" pos:end="22:5">if<condition pos:start="20:7" pos:end="20:34">(<expr pos:start="20:8" pos:end="20:33"><call pos:start="20:8" pos:end="20:18"><name pos:start="20:8" pos:end="20:15">getInSun</name><argument_list pos:start="20:16" pos:end="20:18">(<argument pos:start="20:17" pos:end="20:17"><expr pos:start="20:17" pos:end="20:17"><name pos:start="20:17" pos:end="20:17">a</name></expr></argument>)</argument_list></call> <operator pos:start="20:20" pos:end="20:21">!=</operator> <call pos:start="20:23" pos:end="20:33"><name pos:start="20:23" pos:end="20:30">getInSun</name><argument_list pos:start="20:31" pos:end="20:33">(<argument pos:start="20:32" pos:end="20:32"><expr pos:start="20:32" pos:end="20:32"><name pos:start="20:32" pos:end="20:32">b</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="20:35" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:39">
        <return pos:start="21:9" pos:end="21:39">return <expr pos:start="21:16" pos:end="21:38"><call pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:23">getInSun</name><argument_list pos:start="21:24" pos:end="21:26">(<argument pos:start="21:25" pos:end="21:25"><expr pos:start="21:25" pos:end="21:25"><name pos:start="21:25" pos:end="21:25">a</name></expr></argument>)</argument_list></call><operator pos:start="21:27" pos:end="21:27">&gt;</operator><call pos:start="21:28" pos:end="21:38"><name pos:start="21:28" pos:end="21:35">getInSun</name><argument_list pos:start="21:36" pos:end="21:38">(<argument pos:start="21:37" pos:end="21:37"><expr pos:start="21:37" pos:end="21:37"><name pos:start="21:37" pos:end="21:37">b</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if><else pos:start="22:6" pos:end="24:5">else<block pos:start="22:10" pos:end="24:5">{<block_content pos:start="23:9" pos:end="23:19">
        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:16">a</name><operator pos:start="23:17" pos:end="23:17">&lt;</operator><name pos:start="23:18" pos:end="23:18">b</name></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function pos:start="27:1" pos:end="38:1"><type pos:start="27:1" pos:end="27:3"><name pos:start="27:1" pos:end="27:3">int</name></type> <name pos:start="27:5" pos:end="27:8">main</name><parameter_list pos:start="27:9" pos:end="27:10">()</parameter_list>
<block pos:start="28:1" pos:end="38:1">{<block_content pos:start="29:5" pos:end="37:13">
    <decl_stmt pos:start="29:5" pos:end="29:10"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">n</name></decl>;</decl_stmt>
    <decl_stmt pos:start="30:5" pos:end="30:20"><decl pos:start="30:5" pos:end="30:19"><type pos:start="30:5" pos:end="30:10"><name pos:start="30:5" pos:end="30:10">string</name></type> <name pos:start="30:12" pos:end="30:19"><name pos:start="30:12" pos:end="30:12">a</name><index pos:start="30:13" pos:end="30:19">[<expr pos:start="30:14" pos:end="30:18"><literal type="number" pos:start="30:14" pos:end="30:18">10001</literal></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:11"><expr pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:7">cin</name><operator pos:start="31:8" pos:end="31:9">&gt;&gt;</operator><name pos:start="31:10" pos:end="31:10">n</name></expr>;</expr_stmt>
    <for pos:start="32:5" pos:end="33:20">for<control pos:start="32:8" pos:end="32:31">(<init pos:start="32:9" pos:end="32:18"><decl pos:start="32:9" pos:end="32:17"><type pos:start="32:9" pos:end="32:11"><name pos:start="32:9" pos:end="32:11">int</name></type> <name pos:start="32:13" pos:end="32:13">i</name> <init pos:start="32:15" pos:end="32:17">= <expr pos:start="32:17" pos:end="32:17"><literal type="number" pos:start="32:17" pos:end="32:17">0</literal></expr></init></decl>;</init> <condition pos:start="32:20" pos:end="32:25"><expr pos:start="32:20" pos:end="32:24"><name pos:start="32:20" pos:end="32:20">i</name> <operator pos:start="32:22" pos:end="32:22">&lt;</operator> <name pos:start="32:24" pos:end="32:24">n</name></expr>;</condition> <incr pos:start="32:27" pos:end="32:30"><expr pos:start="32:27" pos:end="32:30"><name pos:start="32:27" pos:end="32:27">i</name> <operator pos:start="32:29" pos:end="32:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:9" pos:end="33:20"><block_content pos:start="33:9" pos:end="33:20">
        <expr_stmt pos:start="33:9" pos:end="33:20"><expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:11">cin</name> <operator pos:start="33:13" pos:end="33:14">&gt;&gt;</operator> <name pos:start="33:16" pos:end="33:19"><name pos:start="33:16" pos:end="33:16">a</name><index pos:start="33:17" pos:end="33:19">[<expr pos:start="33:18" pos:end="33:18"><name pos:start="33:18" pos:end="33:18">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="34:5" pos:end="34:24"><expr pos:start="34:5" pos:end="34:23"><call pos:start="34:5" pos:end="34:23"><name pos:start="34:5" pos:end="34:8">sort</name><argument_list pos:start="34:9" pos:end="34:23">(<argument pos:start="34:10" pos:end="34:10"><expr pos:start="34:10" pos:end="34:10"><name pos:start="34:10" pos:end="34:10">a</name></expr></argument>, <argument pos:start="34:13" pos:end="34:17"><expr pos:start="34:13" pos:end="34:17"><name pos:start="34:13" pos:end="34:13">a</name> <operator pos:start="34:15" pos:end="34:15">+</operator> <name pos:start="34:17" pos:end="34:17">n</name></expr></argument>, <argument pos:start="34:20" pos:end="34:22"><expr pos:start="34:20" pos:end="34:22"><name pos:start="34:20" pos:end="34:22">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
    <for pos:start="35:5" pos:end="36:29">for<control pos:start="35:8" pos:end="35:31">(<init pos:start="35:9" pos:end="35:18"><decl pos:start="35:9" pos:end="35:17"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:13">i</name> <init pos:start="35:15" pos:end="35:17">= <expr pos:start="35:17" pos:end="35:17"><literal type="number" pos:start="35:17" pos:end="35:17">0</literal></expr></init></decl>;</init> <condition pos:start="35:20" pos:end="35:25"><expr pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:20">i</name> <operator pos:start="35:22" pos:end="35:22">&lt;</operator> <name pos:start="35:24" pos:end="35:24">n</name></expr>;</condition> <incr pos:start="35:27" pos:end="35:30"><expr pos:start="35:27" pos:end="35:30"><name pos:start="35:27" pos:end="35:27">i</name> <operator pos:start="35:29" pos:end="35:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="36:9" pos:end="36:29"><block_content pos:start="36:9" pos:end="36:29">
        <expr_stmt pos:start="36:9" pos:end="36:29"><expr pos:start="36:9" pos:end="36:28"><name pos:start="36:9" pos:end="36:12">cout</name> <operator pos:start="36:14" pos:end="36:15">&lt;&lt;</operator> <name pos:start="36:17" pos:end="36:20"><name pos:start="36:17" pos:end="36:17">a</name><index pos:start="36:18" pos:end="36:20">[<expr pos:start="36:19" pos:end="36:19"><name pos:start="36:19" pos:end="36:19">i</name></expr>]</index></name> <operator pos:start="36:22" pos:end="36:23">&lt;&lt;</operator> <name pos:start="36:25" pos:end="36:28">endl</name></expr>;</expr_stmt></block_content></block></for>
    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
