<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1190/1190.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<decl_stmt pos:start="2:1" pos:end="2:25"><decl pos:start="2:1" pos:end="2:24"><type pos:start="2:1" pos:end="2:9"><specifier pos:start="2:1" pos:end="2:5">const</specifier> <name pos:start="2:7" pos:end="2:9">int</name></type> <name pos:start="2:11" pos:end="2:14">MAXN</name> <init pos:start="2:16" pos:end="2:24">= <expr pos:start="2:18" pos:end="2:24"><literal type="number" pos:start="2:18" pos:end="2:22">2e5</literal> <operator pos:start="2:22" pos:end="2:22">+</operator> <literal type="number" pos:start="2:24" pos:end="2:24">5</literal></expr></init></decl>;</decl_stmt>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:6"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:13"><decl pos:start="5:1" pos:end="5:12"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">char</name></type> <name pos:start="5:6" pos:end="5:12"><name pos:start="5:6" pos:end="5:6">s</name><index pos:start="5:7" pos:end="5:12">[<expr pos:start="5:8" pos:end="5:11"><name pos:start="5:8" pos:end="5:11">MAXN</name></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="6:1" pos:end="28:1"><type pos:start="6:1" pos:end="6:4"><name pos:start="6:1" pos:end="6:4">bool</name></type> <name pos:start="6:6" pos:end="6:10">judge</name><parameter_list pos:start="6:11" pos:end="6:12">()</parameter_list><block pos:start="6:13" pos:end="28:1">{<block_content pos:start="7:5" pos:end="27:16">
    <if_stmt pos:start="7:5" pos:end="7:31"><if pos:start="7:5" pos:end="7:31">if<condition pos:start="7:7" pos:end="7:18">(<expr pos:start="7:8" pos:end="7:17"><name pos:start="7:8" pos:end="7:8">n</name> <operator pos:start="7:10" pos:end="7:10">%</operator> <literal type="number" pos:start="7:12" pos:end="7:12">8</literal> <operator pos:start="7:14" pos:end="7:15">!=</operator> <literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr>)</condition><block type="pseudo" pos:start="7:19" pos:end="7:31"><block_content pos:start="7:19" pos:end="7:31"><return pos:start="7:19" pos:end="7:31">return <expr pos:start="7:26" pos:end="7:30"><literal type="boolean" pos:start="7:26" pos:end="7:30">false</literal></expr>;</return></block_content></block></if></if_stmt>
    <for pos:start="8:5" pos:end="12:5">for<control pos:start="8:8" pos:end="8:31">(<init pos:start="8:9" pos:end="8:18"><decl pos:start="8:9" pos:end="8:17"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:13">i</name> <init pos:start="8:15" pos:end="8:17">= <expr pos:start="8:17" pos:end="8:17"><literal type="number" pos:start="8:17" pos:end="8:17">1</literal></expr></init></decl>;</init> <condition pos:start="8:20" pos:end="8:26"><expr pos:start="8:20" pos:end="8:25"><name pos:start="8:20" pos:end="8:20">i</name> <operator pos:start="8:22" pos:end="8:23">&lt;=</operator> <name pos:start="8:25" pos:end="8:25">n</name></expr>;</condition> <incr pos:start="8:28" pos:end="8:30"><expr pos:start="8:28" pos:end="8:30"><operator pos:start="8:28" pos:end="8:29">++</operator><name pos:start="8:30" pos:end="8:30">i</name></expr></incr>)</control><block pos:start="8:32" pos:end="12:5">{<block_content pos:start="9:9" pos:end="11:9">
        <if_stmt pos:start="9:9" pos:end="11:9"><if pos:start="9:9" pos:end="11:9">if<condition pos:start="9:11" pos:end="9:38">(<expr pos:start="9:12" pos:end="9:37"><name pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:12">s</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><name pos:start="9:14" pos:end="9:14">i</name></expr>]</index></name> <operator pos:start="9:17" pos:end="9:18">!=</operator> <literal type="char" pos:start="9:20" pos:end="9:22">'0'</literal> <operator pos:start="9:24" pos:end="9:25">&amp;&amp;</operator> <name pos:start="9:27" pos:end="9:30"><name pos:start="9:27" pos:end="9:27">s</name><index pos:start="9:28" pos:end="9:30">[<expr pos:start="9:29" pos:end="9:29"><name pos:start="9:29" pos:end="9:29">i</name></expr>]</index></name> <operator pos:start="9:32" pos:end="9:33">!=</operator> <literal type="char" pos:start="9:35" pos:end="9:37">'1'</literal></expr>)</condition><block pos:start="9:39" pos:end="11:9">{<block_content pos:start="10:13" pos:end="10:25">
            <return pos:start="10:13" pos:end="10:25">return <expr pos:start="10:20" pos:end="10:24"><literal type="boolean" pos:start="10:20" pos:end="10:24">false</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="13:5" pos:end="26:5">for<control pos:start="13:8" pos:end="13:34">(<init pos:start="13:9" pos:end="13:18"><decl pos:start="13:9" pos:end="13:17"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name> <init pos:start="13:15" pos:end="13:17">= <expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr></init></decl>;</init> <condition pos:start="13:20" pos:end="13:26"><expr pos:start="13:20" pos:end="13:25"><name pos:start="13:20" pos:end="13:20">i</name> <operator pos:start="13:22" pos:end="13:23">&lt;=</operator> <name pos:start="13:25" pos:end="13:25">n</name></expr>;</condition> <incr pos:start="13:28" pos:end="13:33"><expr pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:28">i</name> <operator pos:start="13:30" pos:end="13:31">+=</operator> <literal type="number" pos:start="13:33" pos:end="13:33">8</literal></expr></incr>)</control><block pos:start="13:35" pos:end="26:5">{<block_content pos:start="14:9" pos:end="25:9">
        <if_stmt pos:start="14:9" pos:end="14:87"><if pos:start="14:9" pos:end="14:87">if<condition pos:start="14:11" pos:end="14:74">(<expr pos:start="14:12" pos:end="14:73"><call pos:start="14:12" pos:end="14:35"><name pos:start="14:12" pos:end="14:18">strncmp</name><argument_list pos:start="14:19" pos:end="14:35">(<argument pos:start="14:20" pos:end="14:24"><expr pos:start="14:20" pos:end="14:24"><name pos:start="14:20" pos:end="14:20">s</name> <operator pos:start="14:22" pos:end="14:22">+</operator> <name pos:start="14:24" pos:end="14:24">i</name></expr></argument>, <argument pos:start="14:27" pos:end="14:31"><expr pos:start="14:27" pos:end="14:31"><literal type="string" pos:start="14:27" pos:end="14:31">"100"</literal></expr></argument>, <argument pos:start="14:34" pos:end="14:34"><expr pos:start="14:34" pos:end="14:34"><literal type="number" pos:start="14:34" pos:end="14:34">3</literal></expr></argument>)</argument_list></call> <operator pos:start="14:37" pos:end="14:38">==</operator> <literal type="number" pos:start="14:40" pos:end="14:40">0</literal> <operator pos:start="14:42" pos:end="14:43">||</operator> <call pos:start="14:45" pos:end="14:68"><name pos:start="14:45" pos:end="14:51">strncmp</name><argument_list pos:start="14:52" pos:end="14:68">(<argument pos:start="14:53" pos:end="14:57"><expr pos:start="14:53" pos:end="14:57"><name pos:start="14:53" pos:end="14:53">s</name> <operator pos:start="14:55" pos:end="14:55">+</operator> <name pos:start="14:57" pos:end="14:57">i</name></expr></argument>, <argument pos:start="14:60" pos:end="14:64"><expr pos:start="14:60" pos:end="14:64"><literal type="string" pos:start="14:60" pos:end="14:64">"110"</literal></expr></argument>, <argument pos:start="14:67" pos:end="14:67"><expr pos:start="14:67" pos:end="14:67"><literal type="number" pos:start="14:67" pos:end="14:67">3</literal></expr></argument>)</argument_list></call> <operator pos:start="14:70" pos:end="14:71">==</operator> <literal type="number" pos:start="14:73" pos:end="14:73">0</literal></expr>)</condition><block type="pseudo" pos:start="14:75" pos:end="14:87"><block_content pos:start="14:75" pos:end="14:87"><return pos:start="14:75" pos:end="14:87">return <expr pos:start="14:82" pos:end="14:86"><literal type="boolean" pos:start="14:82" pos:end="14:86">false</literal></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt pos:start="15:9" pos:end="18:9"><if pos:start="15:9" pos:end="18:9">if<condition pos:start="15:11" pos:end="15:23">(<expr pos:start="15:12" pos:end="15:22"><name pos:start="15:12" pos:end="15:15"><name pos:start="15:12" pos:end="15:12">s</name><index pos:start="15:13" pos:end="15:15">[<expr pos:start="15:14" pos:end="15:14"><name pos:start="15:14" pos:end="15:14">i</name></expr>]</index></name> <operator pos:start="15:17" pos:end="15:18">==</operator> <literal type="char" pos:start="15:20" pos:end="15:22">'0'</literal></expr>)</condition><block pos:start="15:24" pos:end="18:9">{<block_content pos:start="16:13" pos:end="17:19">
            <if_stmt pos:start="16:13" pos:end="16:57"><if pos:start="16:13" pos:end="16:57">if<condition pos:start="16:15" pos:end="16:44">(<expr pos:start="16:16" pos:end="16:43"><name pos:start="16:16" pos:end="16:16">i</name> <operator pos:start="16:18" pos:end="16:18">+</operator> <literal type="number" pos:start="16:20" pos:end="16:20">8</literal> <operator pos:start="16:22" pos:end="16:22">&gt;</operator> <name pos:start="16:24" pos:end="16:24">n</name> <operator pos:start="16:26" pos:end="16:27">||</operator> <name pos:start="16:29" pos:end="16:36"><name pos:start="16:29" pos:end="16:29">s</name><index pos:start="16:30" pos:end="16:36">[<expr pos:start="16:31" pos:end="16:35"><name pos:start="16:31" pos:end="16:31">i</name> <operator pos:start="16:33" pos:end="16:33">+</operator> <literal type="number" pos:start="16:35" pos:end="16:35">8</literal></expr>]</index></name> <operator pos:start="16:38" pos:end="16:39">!=</operator> <literal type="char" pos:start="16:41" pos:end="16:43">'0'</literal></expr>)</condition><block type="pseudo" pos:start="16:45" pos:end="16:57"><block_content pos:start="16:45" pos:end="16:57"><return pos:start="16:45" pos:end="16:57">return <expr pos:start="16:52" pos:end="16:56"><literal type="boolean" pos:start="16:52" pos:end="16:56">false</literal></expr>;</return></block_content></block></if></if_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:19"><expr pos:start="17:13" pos:end="17:18"><name pos:start="17:13" pos:end="17:13">i</name> <operator pos:start="17:15" pos:end="17:16">+=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">8</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if<condition pos:start="19:11" pos:end="19:41">(<expr pos:start="19:12" pos:end="19:40"><call pos:start="19:12" pos:end="19:35"><name pos:start="19:12" pos:end="19:18">strncmp</name><argument_list pos:start="19:19" pos:end="19:35">(<argument pos:start="19:20" pos:end="19:24"><expr pos:start="19:20" pos:end="19:24"><name pos:start="19:20" pos:end="19:20">s</name> <operator pos:start="19:22" pos:end="19:22">+</operator> <name pos:start="19:24" pos:end="19:24">i</name></expr></argument>, <argument pos:start="19:27" pos:end="19:31"><expr pos:start="19:27" pos:end="19:31"><literal type="string" pos:start="19:27" pos:end="19:31">"101"</literal></expr></argument>, <argument pos:start="19:34" pos:end="19:34"><expr pos:start="19:34" pos:end="19:34"><literal type="number" pos:start="19:34" pos:end="19:34">3</literal></expr></argument>)</argument_list></call> <operator pos:start="19:37" pos:end="19:38">==</operator> <literal type="number" pos:start="19:40" pos:end="19:40">0</literal></expr>)</condition><block pos:start="19:42" pos:end="25:9">{<block_content pos:start="20:13" pos:end="24:38">
            <decl_stmt pos:start="20:13" pos:end="20:24"><decl pos:start="20:13" pos:end="20:23"><type pos:start="20:13" pos:end="20:15"><name pos:start="20:13" pos:end="20:15">int</name></type> <name pos:start="20:17" pos:end="20:19">tmp</name> <init pos:start="20:21" pos:end="20:23">= <expr pos:start="20:23" pos:end="20:23"><literal type="number" pos:start="20:23" pos:end="20:23">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="21:13" pos:end="23:13">for<control pos:start="21:16" pos:end="21:46">(<init pos:start="21:17" pos:end="21:30"><decl pos:start="21:17" pos:end="21:29"><type pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:19">int</name></type> <name pos:start="21:21" pos:end="21:21">j</name> <init pos:start="21:23" pos:end="21:29">= <expr pos:start="21:25" pos:end="21:29"><name pos:start="21:25" pos:end="21:25">i</name> <operator pos:start="21:27" pos:end="21:27">+</operator> <literal type="number" pos:start="21:29" pos:end="21:29">3</literal></expr></init></decl>;</init> <condition pos:start="21:32" pos:end="21:41"><expr pos:start="21:32" pos:end="21:40"><name pos:start="21:32" pos:end="21:32">j</name> <operator pos:start="21:34" pos:end="21:34">&lt;</operator> <name pos:start="21:36" pos:end="21:36">i</name> <operator pos:start="21:38" pos:end="21:38">+</operator> <literal type="number" pos:start="21:40" pos:end="21:40">8</literal></expr>;</condition> <incr pos:start="21:43" pos:end="21:45"><expr pos:start="21:43" pos:end="21:45"><operator pos:start="21:43" pos:end="21:44">++</operator><name pos:start="21:45" pos:end="21:45">j</name></expr></incr>)</control><block pos:start="21:47" pos:end="23:13">{<block_content pos:start="22:17" pos:end="22:45">
                <expr_stmt pos:start="22:17" pos:end="22:45"><expr pos:start="22:17" pos:end="22:44"><name pos:start="22:17" pos:end="22:19">tmp</name> <operator pos:start="22:21" pos:end="22:21">=</operator> <name pos:start="22:23" pos:end="22:25">tmp</name> <operator pos:start="22:27" pos:end="22:27">*</operator> <literal type="number" pos:start="22:29" pos:end="22:31">2</literal> <operator pos:start="22:31" pos:end="22:31">+</operator> <operator pos:start="22:33" pos:end="22:33">(</operator><name pos:start="22:34" pos:end="22:37"><name pos:start="22:34" pos:end="22:34">s</name><index pos:start="22:35" pos:end="22:37">[<expr pos:start="22:36" pos:end="22:36"><name pos:start="22:36" pos:end="22:36">j</name></expr>]</index></name> <operator pos:start="22:39" pos:end="22:39">-</operator> <literal type="char" pos:start="22:41" pos:end="22:43">'0'</literal><operator pos:start="22:44" pos:end="22:44">)</operator></expr>;</expr_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="24:13" pos:end="24:38"><if pos:start="24:13" pos:end="24:38">if<condition pos:start="24:15" pos:end="24:25">(<expr pos:start="24:16" pos:end="24:24"><name pos:start="24:16" pos:end="24:18">tmp</name> <operator pos:start="24:20" pos:end="24:21">&gt;=</operator> <literal type="number" pos:start="24:23" pos:end="24:24">26</literal></expr>)</condition><block type="pseudo" pos:start="24:26" pos:end="24:38"><block_content pos:start="24:26" pos:end="24:38"><return pos:start="24:26" pos:end="24:38">return <expr pos:start="24:33" pos:end="24:37"><literal type="boolean" pos:start="24:33" pos:end="24:37">false</literal></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="27:5" pos:end="27:16">return <expr pos:start="27:12" pos:end="27:15"><literal type="boolean" pos:start="27:12" pos:end="27:15">true</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="29:1" pos:end="60:1"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:8">main</name><parameter_list pos:start="29:9" pos:end="29:10">()</parameter_list><block pos:start="29:11" pos:end="60:1">{<block_content pos:start="30:5" pos:end="59:13">
    <expr_stmt pos:start="30:5" pos:end="30:42"><expr pos:start="30:5" pos:end="30:41"><call pos:start="30:5" pos:end="30:41"><name pos:start="30:5" pos:end="30:11">freopen</name><argument_list pos:start="30:12" pos:end="30:41">(<argument pos:start="30:13" pos:end="30:28"><expr pos:start="30:13" pos:end="30:28"><literal type="string" pos:start="30:13" pos:end="30:28">"information.in"</literal></expr></argument>, <argument pos:start="30:31" pos:end="30:33"><expr pos:start="30:31" pos:end="30:33"><literal type="string" pos:start="30:31" pos:end="30:33">"r"</literal></expr></argument>, <argument pos:start="30:36" pos:end="30:40"><expr pos:start="30:36" pos:end="30:40"><name pos:start="30:36" pos:end="30:40">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:44"><expr pos:start="31:5" pos:end="31:43"><call pos:start="31:5" pos:end="31:43"><name pos:start="31:5" pos:end="31:11">freopen</name><argument_list pos:start="31:12" pos:end="31:43">(<argument pos:start="31:13" pos:end="31:29"><expr pos:start="31:13" pos:end="31:29"><literal type="string" pos:start="31:13" pos:end="31:29">"information.out"</literal></expr></argument>, <argument pos:start="31:32" pos:end="31:34"><expr pos:start="31:32" pos:end="31:34"><literal type="string" pos:start="31:32" pos:end="31:34">"w"</literal></expr></argument>, <argument pos:start="31:37" pos:end="31:42"><expr pos:start="31:37" pos:end="31:42"><name pos:start="31:37" pos:end="31:42">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:23"><expr pos:start="32:5" pos:end="32:22"><call pos:start="32:5" pos:end="32:22"><name pos:start="32:5" pos:end="32:9">scanf</name><argument_list pos:start="32:10" pos:end="32:22">(<argument pos:start="32:11" pos:end="32:14"><expr pos:start="32:11" pos:end="32:14"><literal type="string" pos:start="32:11" pos:end="32:14">"%s"</literal></expr></argument>, <argument pos:start="32:17" pos:end="32:21"><expr pos:start="32:17" pos:end="32:21"><name pos:start="32:17" pos:end="32:17">s</name> <operator pos:start="32:19" pos:end="32:19">+</operator> <literal type="number" pos:start="32:21" pos:end="32:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:22"><expr pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:5">n</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <call pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:14">strlen</name><argument_list pos:start="33:15" pos:end="33:21">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:16">s</name> <operator pos:start="33:18" pos:end="33:18">+</operator> <literal type="number" pos:start="33:20" pos:end="33:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="34:5" pos:end="58:5"><if pos:start="34:5" pos:end="36:5">if<condition pos:start="34:7" pos:end="34:14">(<expr pos:start="34:8" pos:end="34:13"><operator pos:start="34:8" pos:end="34:8">!</operator><name pos:start="34:9" pos:end="34:13">judge</name></expr>)</condition><block pos:start="34:15" pos:end="36:5">{<block_content pos:start="35:9" pos:end="35:26">
        <expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><call pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:14">printf</name><argument_list pos:start="35:15" pos:end="35:25">(<argument pos:start="35:16" pos:end="35:24"><expr pos:start="35:16" pos:end="35:24"><literal type="string" pos:start="35:16" pos:end="35:24">"Error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="36:7" pos:end="58:5">else <block pos:start="36:12" pos:end="58:5">{<block_content pos:start="37:9" pos:end="57:9">
        <for pos:start="37:9" pos:end="57:9">for<control pos:start="37:12" pos:end="37:38">(<init pos:start="37:13" pos:end="37:22"><decl pos:start="37:13" pos:end="37:21"><type pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">int</name></type> <name pos:start="37:17" pos:end="37:17">i</name> <init pos:start="37:19" pos:end="37:21">= <expr pos:start="37:21" pos:end="37:21"><literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr></init></decl>;</init> <condition pos:start="37:24" pos:end="37:30"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:24">i</name> <operator pos:start="37:26" pos:end="37:27">&lt;=</operator> <name pos:start="37:29" pos:end="37:29">n</name></expr>;</condition> <incr pos:start="37:32" pos:end="37:37"><expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:32">i</name> <operator pos:start="37:34" pos:end="37:35">+=</operator> <literal type="number" pos:start="37:37" pos:end="37:37">8</literal></expr></incr>)</control><block pos:start="37:39" pos:end="57:9">{<block_content pos:start="38:13" pos:end="56:13">
            <if_stmt pos:start="38:13" pos:end="56:13"><if pos:start="38:13" pos:end="44:13">if<condition pos:start="38:15" pos:end="38:45">(<expr pos:start="38:16" pos:end="38:44"><call pos:start="38:16" pos:end="38:39"><name pos:start="38:16" pos:end="38:22">strncmp</name><argument_list pos:start="38:23" pos:end="38:39">(<argument pos:start="38:24" pos:end="38:28"><expr pos:start="38:24" pos:end="38:28"><name pos:start="38:24" pos:end="38:24">s</name> <operator pos:start="38:26" pos:end="38:26">+</operator> <name pos:start="38:28" pos:end="38:28">i</name></expr></argument>, <argument pos:start="38:31" pos:end="38:35"><expr pos:start="38:31" pos:end="38:35"><literal type="string" pos:start="38:31" pos:end="38:35">"101"</literal></expr></argument>, <argument pos:start="38:38" pos:end="38:38"><expr pos:start="38:38" pos:end="38:38"><literal type="number" pos:start="38:38" pos:end="38:38">3</literal></expr></argument>)</argument_list></call> <operator pos:start="38:41" pos:end="38:42">==</operator> <literal type="number" pos:start="38:44" pos:end="38:44">0</literal></expr>)</condition><block pos:start="38:46" pos:end="44:13">{<block_content pos:start="39:17" pos:end="43:40">
                <decl_stmt pos:start="39:17" pos:end="39:28"><decl pos:start="39:17" pos:end="39:27"><type pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">int</name></type> <name pos:start="39:21" pos:end="39:23">tmp</name> <init pos:start="39:25" pos:end="39:27">= <expr pos:start="39:27" pos:end="39:27"><literal type="number" pos:start="39:27" pos:end="39:27">0</literal></expr></init></decl>;</decl_stmt>
                <for pos:start="40:17" pos:end="42:17">for<control pos:start="40:20" pos:end="40:50">(<init pos:start="40:21" pos:end="40:34"><decl pos:start="40:21" pos:end="40:33"><type pos:start="40:21" pos:end="40:23"><name pos:start="40:21" pos:end="40:23">int</name></type> <name pos:start="40:25" pos:end="40:25">j</name> <init pos:start="40:27" pos:end="40:33">= <expr pos:start="40:29" pos:end="40:33"><name pos:start="40:29" pos:end="40:29">i</name> <operator pos:start="40:31" pos:end="40:31">+</operator> <literal type="number" pos:start="40:33" pos:end="40:33">3</literal></expr></init></decl>;</init> <condition pos:start="40:36" pos:end="40:45"><expr pos:start="40:36" pos:end="40:44"><name pos:start="40:36" pos:end="40:36">j</name> <operator pos:start="40:38" pos:end="40:38">&lt;</operator> <name pos:start="40:40" pos:end="40:40">i</name> <operator pos:start="40:42" pos:end="40:42">+</operator> <literal type="number" pos:start="40:44" pos:end="40:44">8</literal></expr>;</condition> <incr pos:start="40:47" pos:end="40:49"><expr pos:start="40:47" pos:end="40:49"><operator pos:start="40:47" pos:end="40:48">++</operator><name pos:start="40:49" pos:end="40:49">j</name></expr></incr>)</control><block pos:start="40:51" pos:end="42:17">{<block_content pos:start="41:21" pos:end="41:49">
                    <expr_stmt pos:start="41:21" pos:end="41:49"><expr pos:start="41:21" pos:end="41:48"><name pos:start="41:21" pos:end="41:23">tmp</name> <operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:29">tmp</name> <operator pos:start="41:31" pos:end="41:31">*</operator> <literal type="number" pos:start="41:33" pos:end="41:35">2</literal> <operator pos:start="41:35" pos:end="41:35">+</operator> <operator pos:start="41:37" pos:end="41:37">(</operator><name pos:start="41:38" pos:end="41:41"><name pos:start="41:38" pos:end="41:38">s</name><index pos:start="41:39" pos:end="41:41">[<expr pos:start="41:40" pos:end="41:40"><name pos:start="41:40" pos:end="41:40">j</name></expr>]</index></name> <operator pos:start="41:43" pos:end="41:43">-</operator> <literal type="char" pos:start="41:45" pos:end="41:47">'0'</literal><operator pos:start="41:48" pos:end="41:48">)</operator></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt pos:start="43:17" pos:end="43:40"><expr pos:start="43:17" pos:end="43:39"><call pos:start="43:17" pos:end="43:39"><name pos:start="43:17" pos:end="43:22">printf</name><argument_list pos:start="43:23" pos:end="43:39">(<argument pos:start="43:24" pos:end="43:27"><expr pos:start="43:24" pos:end="43:27"><literal type="string" pos:start="43:24" pos:end="43:27">"%c"</literal></expr></argument>, <argument pos:start="43:30" pos:end="43:38"><expr pos:start="43:30" pos:end="43:38"><literal type="char" pos:start="43:30" pos:end="43:32">'A'</literal> <operator pos:start="43:34" pos:end="43:34">+</operator> <name pos:start="43:36" pos:end="43:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="44:15" pos:end="46:13">else if<condition pos:start="44:22" pos:end="44:47">(<expr pos:start="44:23" pos:end="44:46"><call pos:start="44:23" pos:end="44:46"><name pos:start="44:23" pos:end="44:29">strncmp</name><argument_list pos:start="44:30" pos:end="44:46">(<argument pos:start="44:31" pos:end="44:35"><expr pos:start="44:31" pos:end="44:35"><name pos:start="44:31" pos:end="44:31">s</name> <operator pos:start="44:33" pos:end="44:33">+</operator> <name pos:start="44:35" pos:end="44:35">i</name></expr></argument>, <argument pos:start="44:38" pos:end="44:42"><expr pos:start="44:38" pos:end="44:42"><literal type="string" pos:start="44:38" pos:end="44:42">"111"</literal></expr></argument>, <argument pos:start="44:45" pos:end="44:45"><expr pos:start="44:45" pos:end="44:45"><literal type="number" pos:start="44:45" pos:end="44:45">3</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="44:48" pos:end="46:13">{<block_content pos:start="45:17" pos:end="45:28">
                <expr_stmt pos:start="45:17" pos:end="45:28"><expr pos:start="45:17" pos:end="45:27"><call pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:22">printf</name><argument_list pos:start="45:23" pos:end="45:27">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><literal type="string" pos:start="45:24" pos:end="45:26">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="46:15" pos:end="56:13">else <block pos:start="46:20" pos:end="56:13">{<block_content pos:start="47:17" pos:end="55:56">
                <decl_stmt pos:start="47:17" pos:end="47:39"><decl pos:start="47:17" pos:end="47:28"><type pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:19">int</name></type> <name pos:start="47:21" pos:end="47:24">tmp1</name> <init pos:start="47:26" pos:end="47:28">= <expr pos:start="47:28" pos:end="47:28"><literal type="number" pos:start="47:28" pos:end="47:28">0</literal></expr></init></decl>, <decl pos:start="47:31" pos:end="47:38"><type ref="prev" pos:start="47:17" pos:end="47:19"/><name pos:start="47:31" pos:end="47:34">tmp2</name> <init pos:start="47:36" pos:end="47:38">= <expr pos:start="47:38" pos:end="47:38"><literal type="number" pos:start="47:38" pos:end="47:38">0</literal></expr></init></decl>;</decl_stmt>
                <for pos:start="48:17" pos:end="50:17">for<control pos:start="48:20" pos:end="48:50">(<init pos:start="48:21" pos:end="48:34"><decl pos:start="48:21" pos:end="48:33"><type pos:start="48:21" pos:end="48:23"><name pos:start="48:21" pos:end="48:23">int</name></type> <name pos:start="48:25" pos:end="48:25">j</name> <init pos:start="48:27" pos:end="48:33">= <expr pos:start="48:29" pos:end="48:33"><name pos:start="48:29" pos:end="48:29">i</name> <operator pos:start="48:31" pos:end="48:31">+</operator> <literal type="number" pos:start="48:33" pos:end="48:33">1</literal></expr></init></decl>;</init> <condition pos:start="48:36" pos:end="48:45"><expr pos:start="48:36" pos:end="48:44"><name pos:start="48:36" pos:end="48:36">j</name> <operator pos:start="48:38" pos:end="48:38">&lt;</operator> <name pos:start="48:40" pos:end="48:40">i</name> <operator pos:start="48:42" pos:end="48:42">+</operator> <literal type="number" pos:start="48:44" pos:end="48:44">8</literal></expr>;</condition> <incr pos:start="48:47" pos:end="48:49"><expr pos:start="48:47" pos:end="48:49"><operator pos:start="48:47" pos:end="48:48">++</operator><name pos:start="48:49" pos:end="48:49">j</name></expr></incr>)</control><block pos:start="48:51" pos:end="50:17">{<block_content pos:start="49:21" pos:end="49:51">
                    <expr_stmt pos:start="49:21" pos:end="49:51"><expr pos:start="49:21" pos:end="49:50"><name pos:start="49:21" pos:end="49:24">tmp1</name> <operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:31">tmp1</name> <operator pos:start="49:33" pos:end="49:33">*</operator> <literal type="number" pos:start="49:35" pos:end="49:37">2</literal> <operator pos:start="49:37" pos:end="49:37">+</operator> <operator pos:start="49:39" pos:end="49:39">(</operator><name pos:start="49:40" pos:end="49:43"><name pos:start="49:40" pos:end="49:40">s</name><index pos:start="49:41" pos:end="49:43">[<expr pos:start="49:42" pos:end="49:42"><name pos:start="49:42" pos:end="49:42">j</name></expr>]</index></name> <operator pos:start="49:45" pos:end="49:45">-</operator> <literal type="char" pos:start="49:47" pos:end="49:49">'0'</literal><operator pos:start="49:50" pos:end="49:50">)</operator></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt pos:start="51:17" pos:end="51:23"><expr pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:20">+=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">8</literal></expr>;</expr_stmt>
                <for pos:start="52:17" pos:end="54:17">for<control pos:start="52:20" pos:end="52:50">(<init pos:start="52:21" pos:end="52:34"><decl pos:start="52:21" pos:end="52:33"><type pos:start="52:21" pos:end="52:23"><name pos:start="52:21" pos:end="52:23">int</name></type> <name pos:start="52:25" pos:end="52:25">j</name> <init pos:start="52:27" pos:end="52:33">= <expr pos:start="52:29" pos:end="52:33"><name pos:start="52:29" pos:end="52:29">i</name> <operator pos:start="52:31" pos:end="52:31">+</operator> <literal type="number" pos:start="52:33" pos:end="52:33">1</literal></expr></init></decl>;</init> <condition pos:start="52:36" pos:end="52:45"><expr pos:start="52:36" pos:end="52:44"><name pos:start="52:36" pos:end="52:36">j</name> <operator pos:start="52:38" pos:end="52:38">&lt;</operator> <name pos:start="52:40" pos:end="52:40">i</name> <operator pos:start="52:42" pos:end="52:42">+</operator> <literal type="number" pos:start="52:44" pos:end="52:44">8</literal></expr>;</condition> <incr pos:start="52:47" pos:end="52:49"><expr pos:start="52:47" pos:end="52:49"><operator pos:start="52:47" pos:end="52:48">++</operator><name pos:start="52:49" pos:end="52:49">j</name></expr></incr>)</control><block pos:start="52:51" pos:end="54:17">{<block_content pos:start="53:21" pos:end="53:51">
                    <expr_stmt pos:start="53:21" pos:end="53:51"><expr pos:start="53:21" pos:end="53:50"><name pos:start="53:21" pos:end="53:24">tmp2</name> <operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:31">tmp2</name> <operator pos:start="53:33" pos:end="53:33">*</operator> <literal type="number" pos:start="53:35" pos:end="53:37">2</literal> <operator pos:start="53:37" pos:end="53:37">+</operator> <operator pos:start="53:39" pos:end="53:39">(</operator><name pos:start="53:40" pos:end="53:43"><name pos:start="53:40" pos:end="53:40">s</name><index pos:start="53:41" pos:end="53:43">[<expr pos:start="53:42" pos:end="53:42"><name pos:start="53:42" pos:end="53:42">j</name></expr>]</index></name> <operator pos:start="53:45" pos:end="53:45">-</operator> <literal type="char" pos:start="53:47" pos:end="53:49">'0'</literal><operator pos:start="53:50" pos:end="53:50">)</operator></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt pos:start="55:17" pos:end="55:56"><expr pos:start="55:17" pos:end="55:55"><call pos:start="55:17" pos:end="55:55"><name pos:start="55:17" pos:end="55:22">printf</name><argument_list pos:start="55:23" pos:end="55:55">(<argument pos:start="55:24" pos:end="55:27"><expr pos:start="55:24" pos:end="55:27"><literal type="string" pos:start="55:24" pos:end="55:27">"%d"</literal></expr></argument>, <argument pos:start="55:30" pos:end="55:54"><expr pos:start="55:30" pos:end="55:54"><operator pos:start="55:30" pos:end="55:30">(</operator><name pos:start="55:31" pos:end="55:34">tmp1</name> <operator pos:start="55:36" pos:end="55:37">&gt;&gt;</operator> <literal type="number" pos:start="55:39" pos:end="55:39">1</literal><operator pos:start="55:40" pos:end="55:40">)</operator> <operator pos:start="55:42" pos:end="55:42">+</operator> <operator pos:start="55:44" pos:end="55:44">(</operator><name pos:start="55:45" pos:end="55:48">tmp2</name> <operator pos:start="55:50" pos:end="55:51">&gt;&gt;</operator> <literal type="number" pos:start="55:53" pos:end="55:53">1</literal><operator pos:start="55:54" pos:end="55:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></else></if_stmt>
    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
