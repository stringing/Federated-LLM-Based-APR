<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/812/812.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:6"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">t</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:8"><decl pos:start="4:1" pos:end="4:5"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:5">m</name></decl>,<decl pos:start="4:7" pos:end="4:7"><type ref="prev" pos:start="4:1" pos:end="4:3"/><name pos:start="4:7" pos:end="4:7">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:17"><decl pos:start="5:1" pos:end="5:16"><type pos:start="5:1" pos:end="5:4"><name pos:start="5:1" pos:end="5:4">char</name></type> <name pos:start="5:6" pos:end="5:16"><name pos:start="5:6" pos:end="5:6">p</name><index pos:start="5:7" pos:end="5:11">[<expr pos:start="5:8" pos:end="5:10"><literal type="number" pos:start="5:8" pos:end="5:10">105</literal></expr>]</index><index pos:start="5:12" pos:end="5:16">[<expr pos:start="5:13" pos:end="5:15"><literal type="number" pos:start="5:13" pos:end="5:15">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:21"><decl pos:start="6:1" pos:end="6:20"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:20"><name pos:start="6:5" pos:end="6:7">vis</name><index pos:start="6:8" pos:end="6:12">[<expr pos:start="6:9" pos:end="6:11"><literal type="number" pos:start="6:9" pos:end="6:11">105</literal></expr>]</index><index pos:start="6:13" pos:end="6:17">[<expr pos:start="6:14" pos:end="6:16"><literal type="number" pos:start="6:14" pos:end="6:16">105</literal></expr>]</index><index pos:start="6:18" pos:end="6:20">[<expr pos:start="6:19" pos:end="6:19"><literal type="number" pos:start="6:19" pos:end="6:19">4</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt pos:start="7:1" pos:end="7:18"><decl pos:start="7:1" pos:end="7:5"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:5">k</name></decl>,<decl pos:start="7:7" pos:end="7:8"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:7" pos:end="7:8">x1</name></decl>,<decl pos:start="7:10" pos:end="7:11"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:10" pos:end="7:11">x2</name></decl>,<decl pos:start="7:13" pos:end="7:14"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:13" pos:end="7:14">y1</name></decl>,<decl pos:start="7:16" pos:end="7:17"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:16" pos:end="7:17">y2</name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:12"><decl pos:start="8:1" pos:end="8:11"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:7">num</name> <init pos:start="8:9" pos:end="8:11">= <expr pos:start="8:11" pos:end="8:11"><literal type="number" pos:start="8:11" pos:end="8:11">0</literal></expr></init></decl>;</decl_stmt>
<struct pos:start="9:1" pos:end="16:25">struct <name pos:start="9:8" pos:end="9:11">node</name><block pos:start="9:12" pos:end="15:1">{<public type="default" pos:start="10:5" pos:end="14:5">
    <decl_stmt pos:start="10:5" pos:end="10:16"><decl pos:start="10:5" pos:end="10:9"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">x</name></decl>,<decl pos:start="10:11" pos:end="10:11"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:11" pos:end="10:11">y</name></decl>,<decl pos:start="10:13" pos:end="10:13"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:13" pos:end="10:13">f</name></decl>,<decl pos:start="10:15" pos:end="10:15"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:15" pos:end="10:15">p</name></decl>;</decl_stmt>
    
    <function type="operator" pos:start="12:5" pos:end="14:5"><type pos:start="12:5" pos:end="12:8"><name pos:start="12:5" pos:end="12:8">bool</name></type> <name pos:start="12:10" pos:end="12:19">operator <name pos:start="12:19" pos:end="12:19">&lt;</name></name> <parameter_list pos:start="12:21" pos:end="12:37">(<parameter pos:start="12:22" pos:end="12:36"><decl pos:start="12:22" pos:end="12:36"><type pos:start="12:22" pos:end="12:33"><specifier pos:start="12:22" pos:end="12:26">const</specifier> <name pos:start="12:28" pos:end="12:31">node</name> <modifier pos:start="12:33" pos:end="12:33">&amp;</modifier></type><name pos:start="12:34" pos:end="12:36">cur</name></decl></parameter>)</parameter_list> <specifier pos:start="12:39" pos:end="12:43">const</specifier> <block pos:start="12:45" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:28">
        <return pos:start="13:9" pos:end="13:28">return <expr pos:start="13:16" pos:end="13:27"><call pos:start="13:16" pos:end="13:27"><name pos:start="13:16" pos:end="13:18">min</name><argument_list pos:start="13:19" pos:end="13:27">(<argument pos:start="13:20" pos:end="13:20"><expr pos:start="13:20" pos:end="13:20"><name pos:start="13:20" pos:end="13:20">p</name></expr></argument>,<argument pos:start="13:22" pos:end="13:26"><expr pos:start="13:22" pos:end="13:26"><name pos:start="13:22" pos:end="13:26"><name pos:start="13:22" pos:end="13:24">cur</name><operator pos:start="13:25" pos:end="13:25">.</operator><name pos:start="13:26" pos:end="13:26">p</name></name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
</public>}</block>
<decl pos:start="16:1" pos:end="16:24"><name pos:start="16:1" pos:end="16:20"><name pos:start="16:1" pos:end="16:14">priority_queue</name><argument_list type="generic" pos:start="16:15" pos:end="16:20">&lt;<argument pos:start="16:16" pos:end="16:19"><expr pos:start="16:16" pos:end="16:19"><name pos:start="16:16" pos:end="16:19">node</name></expr></argument>&gt;</argument_list></name> <name pos:start="16:22" pos:end="16:24">que</name></decl>;</struct>
<decl_stmt pos:start="17:1" pos:end="17:9"><decl pos:start="17:1" pos:end="17:8"><type pos:start="17:1" pos:end="17:4"><name pos:start="17:1" pos:end="17:4">node</name></type> <name pos:start="17:6" pos:end="17:8">cur</name></decl>;</decl_stmt>
<function pos:start="18:1" pos:end="41:1"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:7">bfs</name><parameter_list pos:start="18:8" pos:end="18:9">()</parameter_list><block pos:start="18:10" pos:end="41:1">{<block_content pos:start="20:5" pos:end="40:10">
    
    <expr_stmt pos:start="20:5" pos:end="20:22"><expr pos:start="20:5" pos:end="20:21"><name pos:start="20:5" pos:end="20:9"><name pos:start="20:5" pos:end="20:7">cur</name><operator pos:start="20:8" pos:end="20:8">.</operator><name pos:start="20:9" pos:end="20:9">p</name></name> <operator pos:start="20:11" pos:end="20:11">=</operator> <call pos:start="20:13" pos:end="20:21"><name pos:start="20:13" pos:end="20:19"><name pos:start="20:13" pos:end="20:15">que</name><operator pos:start="20:16" pos:end="20:16">.</operator><name pos:start="20:17" pos:end="20:19">top</name></name><argument_list pos:start="20:20" pos:end="20:21">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:14"><expr pos:start="21:5" pos:end="21:13"><call pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:7">que</name><operator pos:start="21:8" pos:end="21:8">.</operator><name pos:start="21:9" pos:end="21:11">pop</name></name><argument_list pos:start="21:12" pos:end="21:13">()</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="22:5" pos:end="26:5"><if pos:start="22:5" pos:end="26:5">if<condition pos:start="22:7" pos:end="22:34">(<expr pos:start="22:8" pos:end="22:33"><name pos:start="22:8" pos:end="22:12"><name pos:start="22:8" pos:end="22:10">cur</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:12">x</name></name> <operator pos:start="22:14" pos:end="22:15">==</operator> <name pos:start="22:17" pos:end="22:18">y2</name> <operator pos:start="22:20" pos:end="22:21">&amp;&amp;</operator> <name pos:start="22:23" pos:end="22:27"><name pos:start="22:23" pos:end="22:25">cur</name><operator pos:start="22:26" pos:end="22:26">.</operator><name pos:start="22:27" pos:end="22:27">y</name></name> <operator pos:start="22:29" pos:end="22:30">==</operator> <name pos:start="22:32" pos:end="22:33">x2</name></expr>)</condition><block pos:start="22:35" pos:end="26:5">{<block_content pos:start="23:9" pos:end="25:15">
        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:12">cout</name> <operator pos:start="23:14" pos:end="23:15">&lt;&lt;</operator> <literal type="string" pos:start="23:17" pos:end="23:21">"yes"</literal> <operator pos:start="23:23" pos:end="23:24">&lt;&lt;</operator> <name pos:start="23:26" pos:end="23:29">endl</name></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:14"><expr pos:start="24:9" pos:end="24:13"><name pos:start="24:9" pos:end="24:11">num</name><operator pos:start="24:12" pos:end="24:13">++</operator></expr>;</expr_stmt>
        <return pos:start="25:9" pos:end="25:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="27:5" pos:end="39:5">for<control pos:start="27:8" pos:end="27:30">(<init pos:start="27:9" pos:end="27:18"><decl pos:start="27:9" pos:end="27:17"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">i</name> <init pos:start="27:15" pos:end="27:17">= <expr pos:start="27:17" pos:end="27:17"><literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr></init></decl>;</init> <condition pos:start="27:20" pos:end="27:25"><expr pos:start="27:20" pos:end="27:24"><name pos:start="27:20" pos:end="27:20">i</name> <operator pos:start="27:22" pos:end="27:22">&lt;</operator> <literal type="number" pos:start="27:24" pos:end="27:24">4</literal></expr>;</condition> <incr pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:27">i</name><operator pos:start="27:28" pos:end="27:29">++</operator></expr></incr>)</control><block pos:start="27:31" pos:end="39:5">{<block_content pos:start="28:9" pos:end="38:9">
        <expr_stmt pos:start="28:9" pos:end="28:18"><expr pos:start="28:9" pos:end="28:17"><name pos:start="28:9" pos:end="28:13"><name pos:start="28:9" pos:end="28:11">cur</name><operator pos:start="28:12" pos:end="28:12">.</operator><name pos:start="28:13" pos:end="28:13">f</name></name> <operator pos:start="28:15" pos:end="28:15">=</operator> <name pos:start="28:17" pos:end="28:17">i</name></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:22"><expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:13"><name pos:start="29:9" pos:end="29:11">cur</name><operator pos:start="29:12" pos:end="29:12">.</operator><name pos:start="29:13" pos:end="29:13">p</name></name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:21"><name pos:start="29:17" pos:end="29:19">cur</name><operator pos:start="29:20" pos:end="29:20">.</operator><name pos:start="29:21" pos:end="29:21">p</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="30:9" pos:end="38:9"><if pos:start="30:9" pos:end="38:9">if<condition pos:start="30:11" pos:end="30:90">(<expr pos:start="30:12" pos:end="30:89"><literal type="number" pos:start="30:12" pos:end="30:12">1</literal> <operator pos:start="30:14" pos:end="30:15">&lt;=</operator> <name pos:start="30:17" pos:end="30:21"><name pos:start="30:17" pos:end="30:19">cur</name><operator pos:start="30:20" pos:end="30:20">.</operator><name pos:start="30:21" pos:end="30:21">x</name></name> <operator pos:start="30:23" pos:end="30:24">&amp;&amp;</operator> <name pos:start="30:26" pos:end="30:30"><name pos:start="30:26" pos:end="30:28">cur</name><operator pos:start="30:29" pos:end="30:29">.</operator><name pos:start="30:30" pos:end="30:30">x</name></name> <operator pos:start="30:32" pos:end="30:33">&lt;=</operator> <name pos:start="30:35" pos:end="30:35">m</name> <operator pos:start="30:37" pos:end="30:38">&amp;&amp;</operator> <literal type="number" pos:start="30:40" pos:end="30:40">1</literal> <operator pos:start="30:42" pos:end="30:43">&lt;=</operator> <name pos:start="30:45" pos:end="30:49"><name pos:start="30:45" pos:end="30:47">cur</name><operator pos:start="30:48" pos:end="30:48">.</operator><name pos:start="30:49" pos:end="30:49">y</name></name> <operator pos:start="30:51" pos:end="30:52">&amp;&amp;</operator> <name pos:start="30:54" pos:end="30:58"><name pos:start="30:54" pos:end="30:56">cur</name><operator pos:start="30:57" pos:end="30:57">.</operator><name pos:start="30:58" pos:end="30:58">y</name></name> <operator pos:start="30:60" pos:end="30:61">&lt;=</operator> <name pos:start="30:63" pos:end="30:63">n</name> <operator pos:start="30:65" pos:end="30:66">&amp;&amp;</operator> <name pos:start="30:68" pos:end="30:82"><name pos:start="30:68" pos:end="30:68">p</name><index pos:start="30:69" pos:end="30:75">[<expr pos:start="30:70" pos:end="30:74"><name pos:start="30:70" pos:end="30:74"><name pos:start="30:70" pos:end="30:72">cur</name><operator pos:start="30:73" pos:end="30:73">.</operator><name pos:start="30:74" pos:end="30:74">x</name></name></expr>]</index><index pos:start="30:76" pos:end="30:82">[<expr pos:start="30:77" pos:end="30:81"><name pos:start="30:77" pos:end="30:81"><name pos:start="30:77" pos:end="30:79">cur</name><operator pos:start="30:80" pos:end="30:80">.</operator><name pos:start="30:81" pos:end="30:81">y</name></name></expr>]</index></name> <operator pos:start="30:84" pos:end="30:85">!=</operator> <literal type="char" pos:start="30:87" pos:end="30:89">'*'</literal></expr>)</condition><block pos:start="30:91" pos:end="38:9">{<block_content pos:start="31:13" pos:end="37:13">
            <if_stmt pos:start="31:13" pos:end="33:13"><if pos:start="31:13" pos:end="33:13">if<condition pos:start="31:15" pos:end="31:30">(<expr pos:start="31:16" pos:end="31:29"><name pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:18">cur</name><operator pos:start="31:19" pos:end="31:19">.</operator><name pos:start="31:20" pos:end="31:20">f</name></name> <operator pos:start="31:22" pos:end="31:23">!=</operator> <name pos:start="31:25" pos:end="31:29"><name pos:start="31:25" pos:end="31:27">cur</name><operator pos:start="31:28" pos:end="31:28">.</operator><name pos:start="31:29" pos:end="31:29">f</name></name></expr>)</condition><block pos:start="31:31" pos:end="33:13">{<block_content pos:start="32:17" pos:end="32:24">
                <expr_stmt pos:start="32:17" pos:end="32:24"><expr pos:start="32:17" pos:end="32:23"><name pos:start="32:17" pos:end="32:21"><name pos:start="32:17" pos:end="32:19">cur</name><operator pos:start="32:20" pos:end="32:20">.</operator><name pos:start="32:21" pos:end="32:21">p</name></name><operator pos:start="32:22" pos:end="32:23">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="34:13" pos:end="37:13"><if pos:start="34:13" pos:end="37:13">if<condition pos:start="34:15" pos:end="34:51">(<expr pos:start="34:16" pos:end="34:50"><name pos:start="34:16" pos:end="34:20"><name pos:start="34:16" pos:end="34:18">cur</name><operator pos:start="34:19" pos:end="34:19">.</operator><name pos:start="34:20" pos:end="34:20">p</name></name> <operator pos:start="34:22" pos:end="34:23">&lt;=</operator> <name pos:start="34:25" pos:end="34:25">k</name> <operator pos:start="34:27" pos:end="34:28">&amp;&amp;</operator> <operator pos:start="34:30" pos:end="34:30">!</operator><name pos:start="34:31" pos:end="34:50"><name pos:start="34:31" pos:end="34:33">vis</name><index pos:start="34:34" pos:end="34:40">[<expr pos:start="34:35" pos:end="34:39"><name pos:start="34:35" pos:end="34:39"><name pos:start="34:35" pos:end="34:37">cur</name><operator pos:start="34:38" pos:end="34:38">.</operator><name pos:start="34:39" pos:end="34:39">x</name></name></expr>]</index><index pos:start="34:41" pos:end="34:47">[<expr pos:start="34:42" pos:end="34:46"><name pos:start="34:42" pos:end="34:46"><name pos:start="34:42" pos:end="34:44">cur</name><operator pos:start="34:45" pos:end="34:45">.</operator><name pos:start="34:46" pos:end="34:46">y</name></name></expr>]</index><index pos:start="34:48" pos:end="34:50">[<expr pos:start="34:49" pos:end="34:49"><name pos:start="34:49" pos:end="34:49">i</name></expr>]</index></name></expr>)</condition><block pos:start="34:52" pos:end="37:13">{<block_content pos:start="35:17" pos:end="36:44">
                <expr_stmt pos:start="35:17" pos:end="35:26"><expr pos:start="35:17" pos:end="35:25"><call pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:20">push</name><argument_list pos:start="35:21" pos:end="35:25">(<argument pos:start="35:22" pos:end="35:24"><expr pos:start="35:22" pos:end="35:24"><name pos:start="35:22" pos:end="35:24">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="36:17" pos:end="36:44"><expr pos:start="36:17" pos:end="36:43"><name pos:start="36:17" pos:end="36:36"><name pos:start="36:17" pos:end="36:19">vis</name><index pos:start="36:20" pos:end="36:26">[<expr pos:start="36:21" pos:end="36:25"><name pos:start="36:21" pos:end="36:25"><name pos:start="36:21" pos:end="36:23">cur</name><operator pos:start="36:24" pos:end="36:24">.</operator><name pos:start="36:25" pos:end="36:25">x</name></name></expr>]</index><index pos:start="36:27" pos:end="36:33">[<expr pos:start="36:28" pos:end="36:32"><name pos:start="36:28" pos:end="36:32"><name pos:start="36:28" pos:end="36:30">cur</name><operator pos:start="36:31" pos:end="36:31">.</operator><name pos:start="36:32" pos:end="36:32">y</name></name></expr>]</index><index pos:start="36:34" pos:end="36:36">[<expr pos:start="36:35" pos:end="36:35"><name pos:start="36:35" pos:end="36:35">i</name></expr>]</index></name> <operator pos:start="36:38" pos:end="36:38">=</operator> <name pos:start="36:40" pos:end="36:43">ture</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="40:5" pos:end="40:10"><expr pos:start="40:5" pos:end="40:9"><call pos:start="40:5" pos:end="40:9"><name pos:start="40:5" pos:end="40:7">bfs</name><argument_list pos:start="40:8" pos:end="40:9">()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="42:1" pos:end="70:1"><type pos:start="42:1" pos:end="42:3"><name pos:start="42:1" pos:end="42:3">int</name></type> <name pos:start="42:5" pos:end="42:8">main</name><parameter_list pos:start="42:9" pos:end="42:10">()</parameter_list><block pos:start="42:11" pos:end="70:1">{<block_content pos:start="43:5" pos:end="69:13">
    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><call pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:11">freopen</name><argument_list pos:start="43:12" pos:end="43:32">(<argument pos:start="43:13" pos:end="43:21"><expr pos:start="43:13" pos:end="43:21"><literal type="string" pos:start="43:13" pos:end="43:21">"maze.in"</literal></expr></argument>,<argument pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><literal type="string" pos:start="43:23" pos:end="43:25">"r"</literal></expr></argument>,<argument pos:start="43:27" pos:end="43:31"><expr pos:start="43:27" pos:end="43:31"><name pos:start="43:27" pos:end="43:31">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:35"><expr pos:start="44:5" pos:end="44:34"><call pos:start="44:5" pos:end="44:34"><name pos:start="44:5" pos:end="44:11">freopen</name><argument_list pos:start="44:12" pos:end="44:34">(<argument pos:start="44:13" pos:end="44:22"><expr pos:start="44:13" pos:end="44:22"><literal type="string" pos:start="44:13" pos:end="44:22">"maze.out"</literal></expr></argument>,<argument pos:start="44:24" pos:end="44:26"><expr pos:start="44:24" pos:end="44:26"><literal type="string" pos:start="44:24" pos:end="44:26">"w"</literal></expr></argument>,<argument pos:start="44:28" pos:end="44:33"><expr pos:start="44:28" pos:end="44:33"><name pos:start="44:28" pos:end="44:33">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:13"><expr pos:start="45:5" pos:end="45:12"><name pos:start="45:5" pos:end="45:7">cin</name> <operator pos:start="45:9" pos:end="45:10">&gt;&gt;</operator> <name pos:start="45:12" pos:end="45:12">t</name></expr>;</expr_stmt>
    <for pos:start="46:5" pos:end="68:5">for<control pos:start="46:8" pos:end="46:31">(<init pos:start="46:9" pos:end="46:18"><decl pos:start="46:9" pos:end="46:17"><type pos:start="46:9" pos:end="46:11"><name pos:start="46:9" pos:end="46:11">int</name></type> <name pos:start="46:13" pos:end="46:13">a</name> <init pos:start="46:15" pos:end="46:17">= <expr pos:start="46:17" pos:end="46:17"><literal type="number" pos:start="46:17" pos:end="46:17">1</literal></expr></init></decl>;</init> <condition pos:start="46:20" pos:end="46:26"><expr pos:start="46:20" pos:end="46:25"><name pos:start="46:20" pos:end="46:20">a</name> <operator pos:start="46:22" pos:end="46:23">&lt;=</operator> <name pos:start="46:25" pos:end="46:25">t</name></expr>;</condition> <incr pos:start="46:28" pos:end="46:30"><expr pos:start="46:28" pos:end="46:30"><name pos:start="46:28" pos:end="46:28">a</name><operator pos:start="46:29" pos:end="46:30">++</operator></expr></incr>)</control><block pos:start="46:32" pos:end="68:5">{<block_content pos:start="47:9" pos:end="67:9">
        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><call pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:14">memset</name><argument_list pos:start="47:15" pos:end="47:29">(<argument pos:start="47:16" pos:end="47:16"><expr pos:start="47:16" pos:end="47:16"><name pos:start="47:16" pos:end="47:16">p</name></expr></argument>,<argument pos:start="47:18" pos:end="47:18"><expr pos:start="47:18" pos:end="47:18"><literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr></argument>,<argument pos:start="47:20" pos:end="47:28"><expr pos:start="47:20" pos:end="47:28"><sizeof pos:start="47:20" pos:end="47:28">sizeof<argument_list pos:start="47:26" pos:end="47:28">(<argument pos:start="47:27" pos:end="47:27"><expr pos:start="47:27" pos:end="47:27"><name pos:start="47:27" pos:end="47:27">p</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="48:9" pos:end="48:14"><expr pos:start="48:9" pos:end="48:13"><name pos:start="48:9" pos:end="48:9">m</name> <operator pos:start="48:11" pos:end="48:11">=</operator> <literal type="number" pos:start="48:13" pos:end="48:13">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="49:9" pos:end="49:14"><expr pos:start="49:9" pos:end="49:13"><name pos:start="49:9" pos:end="49:9">n</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <literal type="number" pos:start="49:13" pos:end="49:13">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="50:9" pos:end="50:22"><expr pos:start="50:9" pos:end="50:21"><name pos:start="50:9" pos:end="50:11">cin</name> <operator pos:start="50:13" pos:end="50:14">&gt;&gt;</operator> <name pos:start="50:16" pos:end="50:16">m</name> <operator pos:start="50:18" pos:end="50:19">&gt;&gt;</operator> <name pos:start="50:21" pos:end="50:21">n</name></expr>;</expr_stmt>
        <for pos:start="51:9" pos:end="55:9">for<control pos:start="51:12" pos:end="51:35">(<init pos:start="51:13" pos:end="51:22"><decl pos:start="51:13" pos:end="51:21"><type pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:15">int</name></type> <name pos:start="51:17" pos:end="51:17">b</name> <init pos:start="51:19" pos:end="51:21">= <expr pos:start="51:21" pos:end="51:21"><literal type="number" pos:start="51:21" pos:end="51:21">1</literal></expr></init></decl>;</init> <condition pos:start="51:24" pos:end="51:30"><expr pos:start="51:24" pos:end="51:29"><name pos:start="51:24" pos:end="51:24">b</name> <operator pos:start="51:26" pos:end="51:27">&lt;=</operator> <name pos:start="51:29" pos:end="51:29">m</name></expr>;</condition> <incr pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:32">b</name><operator pos:start="51:33" pos:end="51:34">++</operator></expr></incr>)</control><block pos:start="51:36" pos:end="55:9">{<block_content pos:start="52:13" pos:end="54:13">
            <for pos:start="52:13" pos:end="54:13">for<control pos:start="52:16" pos:end="52:39">(<init pos:start="52:17" pos:end="52:26"><decl pos:start="52:17" pos:end="52:25"><type pos:start="52:17" pos:end="52:19"><name pos:start="52:17" pos:end="52:19">int</name></type> <name pos:start="52:21" pos:end="52:21">c</name> <init pos:start="52:23" pos:end="52:25">= <expr pos:start="52:25" pos:end="52:25"><literal type="number" pos:start="52:25" pos:end="52:25">1</literal></expr></init></decl>;</init> <condition pos:start="52:28" pos:end="52:34"><expr pos:start="52:28" pos:end="52:33"><name pos:start="52:28" pos:end="52:28">c</name> <operator pos:start="52:30" pos:end="52:31">&lt;=</operator> <name pos:start="52:33" pos:end="52:33">n</name></expr>;</condition> <incr pos:start="52:36" pos:end="52:38"><expr pos:start="52:36" pos:end="52:38"><name pos:start="52:36" pos:end="52:36">c</name><operator pos:start="52:37" pos:end="52:38">++</operator></expr></incr>)</control><block pos:start="52:40" pos:end="54:13">{<block_content pos:start="53:17" pos:end="53:31">
                <expr_stmt pos:start="53:17" pos:end="53:31"><expr pos:start="53:17" pos:end="53:30"><name pos:start="53:17" pos:end="53:19">cin</name> <operator pos:start="53:21" pos:end="53:22">&gt;&gt;</operator> <name pos:start="53:24" pos:end="53:30"><name pos:start="53:24" pos:end="53:24">p</name><index pos:start="53:25" pos:end="53:27">[<expr pos:start="53:26" pos:end="53:26"><name pos:start="53:26" pos:end="53:26">b</name></expr>]</index><index pos:start="53:28" pos:end="53:30">[<expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">c</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>
        <expr_stmt pos:start="56:9" pos:end="56:14"><expr pos:start="56:9" pos:end="56:13"><name pos:start="56:9" pos:end="56:9">k</name> <operator pos:start="56:11" pos:end="56:11">=</operator> <literal type="number" pos:start="56:13" pos:end="56:13">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="57:9" pos:end="57:15"><expr pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:10">x1</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="58:9" pos:end="58:15"><expr pos:start="58:9" pos:end="58:14"><name pos:start="58:9" pos:end="58:10">x2</name> <operator pos:start="58:12" pos:end="58:12">=</operator> <literal type="number" pos:start="58:14" pos:end="58:14">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="59:9" pos:end="59:15"><expr pos:start="59:9" pos:end="59:14"><name pos:start="59:9" pos:end="59:10">y1</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="60:9" pos:end="60:15"><expr pos:start="60:9" pos:end="60:14"><name pos:start="60:9" pos:end="60:10">y2</name> <operator pos:start="60:12" pos:end="60:12">=</operator> <literal type="number" pos:start="60:14" pos:end="60:14">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="61:9" pos:end="61:41"><expr pos:start="61:9" pos:end="61:40"><name pos:start="61:9" pos:end="61:11">cin</name> <operator pos:start="61:13" pos:end="61:14">&gt;&gt;</operator> <name pos:start="61:16" pos:end="61:16">k</name> <operator pos:start="61:18" pos:end="61:19">&gt;&gt;</operator> <name pos:start="61:21" pos:end="61:22">x1</name> <operator pos:start="61:24" pos:end="61:25">&gt;&gt;</operator> <name pos:start="61:27" pos:end="61:28">y1</name> <operator pos:start="61:30" pos:end="61:31">&gt;&gt;</operator> <name pos:start="61:33" pos:end="61:34">x2</name> <operator pos:start="61:36" pos:end="61:37">&gt;&gt;</operator> <name pos:start="61:39" pos:end="61:40">y2</name></expr>;</expr_stmt>
        <expr_stmt pos:start="62:9" pos:end="62:19"><expr pos:start="62:9" pos:end="62:18"><name pos:start="62:9" pos:end="62:13"><name pos:start="62:9" pos:end="62:11">cur</name><operator pos:start="62:12" pos:end="62:12">.</operator><name pos:start="62:13" pos:end="62:13">x</name></name> <operator pos:start="62:15" pos:end="62:15">=</operator> <name pos:start="62:17" pos:end="62:18">y1</name></expr>;</expr_stmt>
        <expr_stmt pos:start="63:9" pos:end="63:19"><expr pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:13"><name pos:start="63:9" pos:end="63:11">cur</name><operator pos:start="63:12" pos:end="63:12">.</operator><name pos:start="63:13" pos:end="63:13">y</name></name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:18">x1</name></expr>;</expr_stmt>
        <expr_stmt pos:start="64:9" pos:end="64:14"><expr pos:start="64:9" pos:end="64:13"><call pos:start="64:9" pos:end="64:13"><name pos:start="64:9" pos:end="64:11">bfs</name><argument_list pos:start="64:12" pos:end="64:13">()</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="65:9" pos:end="67:9"><if pos:start="65:9" pos:end="67:9">if<condition pos:start="65:11" pos:end="65:20">(<expr pos:start="65:12" pos:end="65:19"><name pos:start="65:12" pos:end="65:14">num</name> <operator pos:start="65:16" pos:end="65:17">!=</operator> <name pos:start="65:19" pos:end="65:19">a</name></expr>)</condition><block pos:start="65:21" pos:end="67:9">{<block_content pos:start="66:13" pos:end="66:33">
            <expr_stmt pos:start="66:13" pos:end="66:33"><expr pos:start="66:13" pos:end="66:32"><name pos:start="66:13" pos:end="66:16">cout</name> <operator pos:start="66:18" pos:end="66:19">&lt;&lt;</operator> <literal type="string" pos:start="66:21" pos:end="66:24">"no"</literal> <operator pos:start="66:26" pos:end="66:27">&lt;&lt;</operator> <name pos:start="66:29" pos:end="66:32">endl</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
