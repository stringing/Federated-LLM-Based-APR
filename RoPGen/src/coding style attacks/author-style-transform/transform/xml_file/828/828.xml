<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/828/828.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="22:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name> <parameter_list pos:start="3:10" pos:end="3:11">()</parameter_list><block pos:start="3:12" pos:end="22:1">{<block_content pos:start="4:5" pos:end="21:13">
    <expr_stmt pos:start="4:5" pos:end="4:40"><expr pos:start="4:5" pos:end="4:39"><call pos:start="4:5" pos:end="4:39"><name pos:start="4:5" pos:end="4:11">freopen</name><argument_list pos:start="4:12" pos:end="4:39">(<argument pos:start="4:13" pos:end="4:28"><expr pos:start="4:13" pos:end="4:28"><literal type="string" pos:start="4:13" pos:end="4:28">"information.in"</literal></expr></argument>,<argument pos:start="4:30" pos:end="4:32"><expr pos:start="4:30" pos:end="4:32"><literal type="string" pos:start="4:30" pos:end="4:32">"r"</literal></expr></argument>,<argument pos:start="4:34" pos:end="4:38"><expr pos:start="4:34" pos:end="4:38"><name pos:start="4:34" pos:end="4:38">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:42"><expr pos:start="5:5" pos:end="5:41"><call pos:start="5:5" pos:end="5:41"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:41">(<argument pos:start="5:13" pos:end="5:29"><expr pos:start="5:13" pos:end="5:29"><literal type="string" pos:start="5:13" pos:end="5:29">"information.out"</literal></expr></argument>,<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><literal type="string" pos:start="5:31" pos:end="5:33">"w"</literal></expr></argument>,<argument pos:start="5:35" pos:end="5:40"><expr pos:start="5:35" pos:end="5:40"><name pos:start="5:35" pos:end="5:40">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:12">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:13"><expr pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">cin</name> <operator pos:start="7:9" pos:end="7:10">&gt;&gt;</operator> <name pos:start="7:12" pos:end="7:12">n</name></expr>;</expr_stmt>
    <if_stmt pos:start="8:5" pos:end="11:5"><if pos:start="8:5" pos:end="11:5">if<condition pos:start="8:7" pos:end="8:49">(<expr pos:start="8:8" pos:end="8:48"><name pos:start="8:8" pos:end="8:11"><name pos:start="8:8" pos:end="8:8">n</name><index pos:start="8:9" pos:end="8:11">[<expr pos:start="8:10" pos:end="8:10"><literal type="number" pos:start="8:10" pos:end="8:10">0</literal></expr>]</index></name> <operator pos:start="8:13" pos:end="8:14">==</operator> <literal type="char" pos:start="8:16" pos:end="8:18">'1'</literal> <operator pos:start="8:20" pos:end="8:21">&amp;&amp;</operator> <name pos:start="8:23" pos:end="8:26"><name pos:start="8:23" pos:end="8:23">n</name><index pos:start="8:24" pos:end="8:26">[<expr pos:start="8:25" pos:end="8:25"><literal type="number" pos:start="8:25" pos:end="8:25">1</literal></expr>]</index></name> <operator pos:start="8:28" pos:end="8:29">==</operator> <literal type="char" pos:start="8:31" pos:end="8:33">'1'</literal> <operator pos:start="8:35" pos:end="8:36">&amp;&amp;</operator> <name pos:start="8:38" pos:end="8:41"><name pos:start="8:38" pos:end="8:38">n</name><index pos:start="8:39" pos:end="8:41">[<expr pos:start="8:40" pos:end="8:40"><literal type="number" pos:start="8:40" pos:end="8:40">2</literal></expr>]</index></name> <operator pos:start="8:43" pos:end="8:44">==</operator> <literal type="char" pos:start="8:46" pos:end="8:48">'0'</literal></expr>)</condition><block pos:start="8:50" pos:end="11:5">{<block_content pos:start="9:9" pos:end="10:17">
        <expr_stmt pos:start="9:9" pos:end="9:24"><expr pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:12">cout</name> <operator pos:start="9:14" pos:end="9:15">&lt;&lt;</operator> <literal type="string" pos:start="9:17" pos:end="9:23">"Error"</literal></expr>;</expr_stmt>
        <return pos:start="10:9" pos:end="10:17">return <expr pos:start="10:16" pos:end="10:16"><literal type="number" pos:start="10:16" pos:end="10:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="12:5" pos:end="15:5"><if pos:start="12:5" pos:end="15:5">if<condition pos:start="12:7" pos:end="12:49">(<expr pos:start="12:8" pos:end="12:48"><name pos:start="12:8" pos:end="12:11"><name pos:start="12:8" pos:end="12:8">n</name><index pos:start="12:9" pos:end="12:11">[<expr pos:start="12:10" pos:end="12:10"><literal type="number" pos:start="12:10" pos:end="12:10">0</literal></expr>]</index></name> <operator pos:start="12:13" pos:end="12:14">==</operator> <literal type="char" pos:start="12:16" pos:end="12:18">'1'</literal> <operator pos:start="12:20" pos:end="12:21">&amp;&amp;</operator> <name pos:start="12:23" pos:end="12:26"><name pos:start="12:23" pos:end="12:23">n</name><index pos:start="12:24" pos:end="12:26">[<expr pos:start="12:25" pos:end="12:25"><literal type="number" pos:start="12:25" pos:end="12:25">1</literal></expr>]</index></name> <operator pos:start="12:28" pos:end="12:29">==</operator> <literal type="char" pos:start="12:31" pos:end="12:33">'0'</literal> <operator pos:start="12:35" pos:end="12:36">&amp;&amp;</operator> <name pos:start="12:38" pos:end="12:41"><name pos:start="12:38" pos:end="12:38">n</name><index pos:start="12:39" pos:end="12:41">[<expr pos:start="12:40" pos:end="12:40"><literal type="number" pos:start="12:40" pos:end="12:40">2</literal></expr>]</index></name> <operator pos:start="12:43" pos:end="12:44">==</operator> <literal type="char" pos:start="12:46" pos:end="12:48">'0'</literal></expr>)</condition><block pos:start="12:50" pos:end="15:5">{<block_content pos:start="13:9" pos:end="14:17">
        <expr_stmt pos:start="13:9" pos:end="13:24"><expr pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:12">cout</name> <operator pos:start="13:14" pos:end="13:15">&lt;&lt;</operator> <literal type="string" pos:start="13:17" pos:end="13:23">"Error"</literal></expr>;</expr_stmt>
        <return pos:start="14:9" pos:end="14:17">return <expr pos:start="14:16" pos:end="14:16"><literal type="number" pos:start="14:16" pos:end="14:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt pos:start="16:5" pos:end="16:21"><decl pos:start="16:5" pos:end="16:20"><type pos:start="16:5" pos:end="16:7"><name pos:start="16:5" pos:end="16:7">int</name></type> <name pos:start="16:9" pos:end="16:9">a</name> <init pos:start="16:11" pos:end="16:20">= <expr pos:start="16:13" pos:end="16:20"><call pos:start="16:13" pos:end="16:20"><name pos:start="16:13" pos:end="16:18"><name pos:start="16:13" pos:end="16:13">n</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:18">size</name></name><argument_list pos:start="16:19" pos:end="16:20">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="17:5" pos:end="20:5"><if pos:start="17:5" pos:end="20:5">if<condition pos:start="17:7" pos:end="17:18">(<expr pos:start="17:8" pos:end="17:17"><name pos:start="17:8" pos:end="17:8">a</name> <operator pos:start="17:10" pos:end="17:10">%</operator> <literal type="number" pos:start="17:12" pos:end="17:12">8</literal> <operator pos:start="17:14" pos:end="17:15">!=</operator> <literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr>)</condition><block pos:start="17:19" pos:end="20:5">{<block_content pos:start="18:9" pos:end="19:17">
        <expr_stmt pos:start="18:9" pos:end="18:24"><expr pos:start="18:9" pos:end="18:23"><name pos:start="18:9" pos:end="18:12">cout</name> <operator pos:start="18:14" pos:end="18:15">&lt;&lt;</operator> <literal type="string" pos:start="18:17" pos:end="18:23">"Error"</literal></expr>;</expr_stmt>
        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="21:5" pos:end="21:13">return <expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
