<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/729/729.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:22"><decl pos:start="3:1" pos:end="3:14"><type pos:start="3:1" pos:end="3:10"><name pos:start="3:1" pos:end="3:10"><name pos:start="3:1" pos:end="3:5">stack</name><argument_list type="generic" pos:start="3:6" pos:end="3:10">&lt;<argument pos:start="3:7" pos:end="3:9"><expr pos:start="3:7" pos:end="3:9"><name pos:start="3:7" pos:end="3:9">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="3:12" pos:end="3:14">sta</name></decl>,<decl pos:start="3:16" pos:end="3:18"><type ref="prev" pos:start="3:1" pos:end="3:10"/><name pos:start="3:16" pos:end="3:18">stb</name></decl>,<decl pos:start="3:20" pos:end="3:21"><type ref="prev" pos:start="3:1" pos:end="3:10"/><name pos:start="3:20" pos:end="3:21">st</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:10"><decl pos:start="4:1" pos:end="4:9"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">char</name></type> <name pos:start="4:6" pos:end="4:9"><name pos:start="4:6" pos:end="4:6">c</name><index pos:start="4:7" pos:end="4:9">[<expr pos:start="4:8" pos:end="4:8"><literal type="number" pos:start="4:8" pos:end="4:8">5</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="68:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list><block pos:start="5:11" pos:end="68:1">{<block_content pos:start="6:5" pos:end="67:13">
    <decl_stmt pos:start="6:5" pos:end="6:10"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:11"><expr pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:7">cin</name><operator pos:start="7:8" pos:end="7:9">&gt;&gt;</operator><name pos:start="7:10" pos:end="7:10">n</name></expr>;</expr_stmt>
    <while pos:start="8:5" pos:end="48:5">while<condition pos:start="8:10" pos:end="8:14">(<expr pos:start="8:11" pos:end="8:13"><name pos:start="8:11" pos:end="8:11">n</name><operator pos:start="8:12" pos:end="8:13">--</operator></expr>)</condition><block pos:start="8:15" pos:end="48:5">{<block_content pos:start="9:9" pos:end="47:9">
        <expr_stmt pos:start="9:9" pos:end="9:22"><expr pos:start="9:9" pos:end="9:21"><call pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:13">scanf</name><argument_list pos:start="9:14" pos:end="9:21">(<argument pos:start="9:15" pos:end="9:18"><expr pos:start="9:15" pos:end="9:18"><literal type="string" pos:start="9:15" pos:end="9:18">"%s"</literal></expr></argument>,<argument pos:start="9:20" pos:end="9:20"><expr pos:start="9:20" pos:end="9:20"><name pos:start="9:20" pos:end="9:20">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="10:9" pos:end="28:9"><if pos:start="10:9" pos:end="28:9">if<condition pos:start="10:11" pos:end="10:21">(<expr pos:start="10:12" pos:end="10:20"><name pos:start="10:12" pos:end="10:15"><name pos:start="10:12" pos:end="10:12">c</name><index pos:start="10:13" pos:end="10:15">[<expr pos:start="10:14" pos:end="10:14"><literal type="number" pos:start="10:14" pos:end="10:14">0</literal></expr>]</index></name><operator pos:start="10:16" pos:end="10:17">==</operator><literal type="char" pos:start="10:18" pos:end="10:20">'A'</literal></expr>)</condition><block pos:start="10:22" pos:end="28:9">{<block_content pos:start="11:13" pos:end="27:13">
            <expr_stmt pos:start="11:13" pos:end="11:26"><expr pos:start="11:13" pos:end="11:25"><call pos:start="11:13" pos:end="11:25"><name pos:start="11:13" pos:end="11:17">scanf</name><argument_list pos:start="11:18" pos:end="11:25">(<argument pos:start="11:19" pos:end="11:22"><expr pos:start="11:19" pos:end="11:22"><literal type="string" pos:start="11:19" pos:end="11:22">"%s"</literal></expr></argument>,<argument pos:start="11:24" pos:end="11:24"><expr pos:start="11:24" pos:end="11:24"><name pos:start="11:24" pos:end="11:24">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="12:13" pos:end="27:13"><if pos:start="12:13" pos:end="16:13">if<condition pos:start="12:15" pos:end="12:25">(<expr pos:start="12:16" pos:end="12:24"><name pos:start="12:16" pos:end="12:19"><name pos:start="12:16" pos:end="12:16">c</name><index pos:start="12:17" pos:end="12:19">[<expr pos:start="12:18" pos:end="12:18"><literal type="number" pos:start="12:18" pos:end="12:18">0</literal></expr>]</index></name><operator pos:start="12:20" pos:end="12:21">==</operator><literal type="char" pos:start="12:22" pos:end="12:24">'I'</literal></expr>)</condition><block pos:start="12:26" pos:end="16:13">{<block_content pos:start="13:17" pos:end="15:28">
                <decl_stmt pos:start="13:17" pos:end="13:22"><decl pos:start="13:17" pos:end="13:21"><type pos:start="13:17" pos:end="13:19"><name pos:start="13:17" pos:end="13:19">int</name></type> <name pos:start="13:21" pos:end="13:21">x</name></decl>;</decl_stmt>
                <expr_stmt pos:start="14:17" pos:end="14:31"><expr pos:start="14:17" pos:end="14:30"><call pos:start="14:17" pos:end="14:30"><name pos:start="14:17" pos:end="14:21">scanf</name><argument_list pos:start="14:22" pos:end="14:30">(<argument pos:start="14:23" pos:end="14:26"><expr pos:start="14:23" pos:end="14:26"><literal type="string" pos:start="14:23" pos:end="14:26">"%d"</literal></expr></argument>,<argument pos:start="14:28" pos:end="14:29"><expr pos:start="14:28" pos:end="14:29"><operator pos:start="14:28" pos:end="14:28">&amp;</operator><name pos:start="14:29" pos:end="14:29">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="15:17" pos:end="15:28"><expr pos:start="15:17" pos:end="15:27"><call pos:start="15:17" pos:end="15:27"><name pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:19">sta</name><operator pos:start="15:20" pos:end="15:20">.</operator><name pos:start="15:21" pos:end="15:24">push</name></name><argument_list pos:start="15:25" pos:end="15:27">(<argument pos:start="15:26" pos:end="15:26"><expr pos:start="15:26" pos:end="15:26"><name pos:start="15:26" pos:end="15:26">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="16:14" pos:end="18:13">else if<condition pos:start="16:21" pos:end="16:31">(<expr pos:start="16:22" pos:end="16:30"><name pos:start="16:22" pos:end="16:25"><name pos:start="16:22" pos:end="16:22">c</name><index pos:start="16:23" pos:end="16:25">[<expr pos:start="16:24" pos:end="16:24"><literal type="number" pos:start="16:24" pos:end="16:24">0</literal></expr>]</index></name><operator pos:start="16:26" pos:end="16:27">==</operator><literal type="char" pos:start="16:28" pos:end="16:30">'D'</literal></expr>)</condition><block pos:start="16:32" pos:end="18:13">{<block_content pos:start="17:17" pos:end="17:26">
                <expr_stmt pos:start="17:17" pos:end="17:26"><expr pos:start="17:17" pos:end="17:25"><call pos:start="17:17" pos:end="17:25"><name pos:start="17:17" pos:end="17:23"><name pos:start="17:17" pos:end="17:19">sta</name><operator pos:start="17:20" pos:end="17:20">.</operator><name pos:start="17:21" pos:end="17:23">pop</name></name><argument_list pos:start="17:24" pos:end="17:25">()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="18:14" pos:end="27:13">else if<condition pos:start="18:21" pos:end="18:31">(<expr pos:start="18:22" pos:end="18:30"><name pos:start="18:22" pos:end="18:25"><name pos:start="18:22" pos:end="18:22">c</name><index pos:start="18:23" pos:end="18:25">[<expr pos:start="18:24" pos:end="18:24"><literal type="number" pos:start="18:24" pos:end="18:24">0</literal></expr>]</index></name><operator pos:start="18:26" pos:end="18:27">==</operator><literal type="char" pos:start="18:28" pos:end="18:30">'M'</literal></expr>)</condition><block pos:start="18:32" pos:end="27:13">{<block_content pos:start="19:17" pos:end="26:17">
                <while pos:start="19:17" pos:end="22:17">while<condition pos:start="19:22" pos:end="19:35">(<expr pos:start="19:23" pos:end="19:34"><operator pos:start="19:23" pos:end="19:23">!</operator><call pos:start="19:24" pos:end="19:34"><name pos:start="19:24" pos:end="19:32"><name pos:start="19:24" pos:end="19:26">stb</name><operator pos:start="19:27" pos:end="19:27">.</operator><name pos:start="19:28" pos:end="19:32">empty</name></name><argument_list pos:start="19:33" pos:end="19:34">()</argument_list></call></expr>)</condition><block pos:start="19:36" pos:end="22:17">{<block_content pos:start="20:21" pos:end="21:30">
                    <expr_stmt pos:start="20:21" pos:end="20:39"><expr pos:start="20:21" pos:end="20:38"><call pos:start="20:21" pos:end="20:38"><name pos:start="20:21" pos:end="20:27"><name pos:start="20:21" pos:end="20:22">st</name><operator pos:start="20:23" pos:end="20:23">.</operator><name pos:start="20:24" pos:end="20:27">push</name></name><argument_list pos:start="20:28" pos:end="20:38">(<argument pos:start="20:29" pos:end="20:37"><expr pos:start="20:29" pos:end="20:37"><call pos:start="20:29" pos:end="20:37"><name pos:start="20:29" pos:end="20:35"><name pos:start="20:29" pos:end="20:31">stb</name><operator pos:start="20:32" pos:end="20:32">.</operator><name pos:start="20:33" pos:end="20:35">top</name></name><argument_list pos:start="20:36" pos:end="20:37">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="21:21" pos:end="21:30"><expr pos:start="21:21" pos:end="21:29"><call pos:start="21:21" pos:end="21:29"><name pos:start="21:21" pos:end="21:27"><name pos:start="21:21" pos:end="21:23">stb</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:27">pop</name></name><argument_list pos:start="21:28" pos:end="21:29">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="23:17" pos:end="26:17">while<condition pos:start="23:22" pos:end="23:34">(<expr pos:start="23:23" pos:end="23:33"><operator pos:start="23:23" pos:end="23:23">!</operator><call pos:start="23:24" pos:end="23:33"><name pos:start="23:24" pos:end="23:31"><name pos:start="23:24" pos:end="23:25">st</name><operator pos:start="23:26" pos:end="23:26">.</operator><name pos:start="23:27" pos:end="23:31">empty</name></name><argument_list pos:start="23:32" pos:end="23:33">()</argument_list></call></expr>)</condition><block pos:start="23:35" pos:end="26:17">{<block_content pos:start="24:21" pos:end="25:29">
                    <expr_stmt pos:start="24:21" pos:end="24:39"><expr pos:start="24:21" pos:end="24:38"><call pos:start="24:21" pos:end="24:38"><name pos:start="24:21" pos:end="24:28"><name pos:start="24:21" pos:end="24:23">sta</name><operator pos:start="24:24" pos:end="24:24">.</operator><name pos:start="24:25" pos:end="24:28">push</name></name><argument_list pos:start="24:29" pos:end="24:38">(<argument pos:start="24:30" pos:end="24:37"><expr pos:start="24:30" pos:end="24:37"><call pos:start="24:30" pos:end="24:37"><name pos:start="24:30" pos:end="24:35"><name pos:start="24:30" pos:end="24:31">st</name><operator pos:start="24:32" pos:end="24:32">.</operator><name pos:start="24:33" pos:end="24:35">top</name></name><argument_list pos:start="24:36" pos:end="24:37">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="25:21" pos:end="25:29"><expr pos:start="25:21" pos:end="25:28"><call pos:start="25:21" pos:end="25:28"><name pos:start="25:21" pos:end="25:26"><name pos:start="25:21" pos:end="25:22">st</name><operator pos:start="25:23" pos:end="25:23">.</operator><name pos:start="25:24" pos:end="25:26">pop</name></name><argument_list pos:start="25:27" pos:end="25:28">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="29:9" pos:end="47:9"><if pos:start="29:9" pos:end="47:9">if<condition pos:start="29:11" pos:end="29:21">(<expr pos:start="29:12" pos:end="29:20"><name pos:start="29:12" pos:end="29:15"><name pos:start="29:12" pos:end="29:12">c</name><index pos:start="29:13" pos:end="29:15">[<expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>]</index></name><operator pos:start="29:16" pos:end="29:17">==</operator><literal type="char" pos:start="29:18" pos:end="29:20">'B'</literal></expr>)</condition><block pos:start="29:22" pos:end="47:9">{<block_content pos:start="30:13" pos:end="46:13">
            <expr_stmt pos:start="30:13" pos:end="30:26"><expr pos:start="30:13" pos:end="30:25"><call pos:start="30:13" pos:end="30:25"><name pos:start="30:13" pos:end="30:17">scanf</name><argument_list pos:start="30:18" pos:end="30:25">(<argument pos:start="30:19" pos:end="30:22"><expr pos:start="30:19" pos:end="30:22"><literal type="string" pos:start="30:19" pos:end="30:22">"%s"</literal></expr></argument>,<argument pos:start="30:24" pos:end="30:24"><expr pos:start="30:24" pos:end="30:24"><name pos:start="30:24" pos:end="30:24">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="31:13" pos:end="46:13"><if pos:start="31:13" pos:end="35:13">if<condition pos:start="31:15" pos:end="31:25">(<expr pos:start="31:16" pos:end="31:24"><name pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:16">c</name><index pos:start="31:17" pos:end="31:19">[<expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>]</index></name><operator pos:start="31:20" pos:end="31:21">==</operator><literal type="char" pos:start="31:22" pos:end="31:24">'I'</literal></expr>)</condition><block pos:start="31:26" pos:end="35:13">{<block_content pos:start="32:17" pos:end="34:28">
                <decl_stmt pos:start="32:17" pos:end="32:22"><decl pos:start="32:17" pos:end="32:21"><type pos:start="32:17" pos:end="32:19"><name pos:start="32:17" pos:end="32:19">int</name></type> <name pos:start="32:21" pos:end="32:21">x</name></decl>;</decl_stmt>
                <expr_stmt pos:start="33:17" pos:end="33:31"><expr pos:start="33:17" pos:end="33:30"><call pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:21">scanf</name><argument_list pos:start="33:22" pos:end="33:30">(<argument pos:start="33:23" pos:end="33:26"><expr pos:start="33:23" pos:end="33:26"><literal type="string" pos:start="33:23" pos:end="33:26">"%d"</literal></expr></argument>,<argument pos:start="33:28" pos:end="33:29"><expr pos:start="33:28" pos:end="33:29"><operator pos:start="33:28" pos:end="33:28">&amp;</operator><name pos:start="33:29" pos:end="33:29">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="34:17" pos:end="34:28"><expr pos:start="34:17" pos:end="34:27"><call pos:start="34:17" pos:end="34:27"><name pos:start="34:17" pos:end="34:24"><name pos:start="34:17" pos:end="34:19">stb</name><operator pos:start="34:20" pos:end="34:20">.</operator><name pos:start="34:21" pos:end="34:24">push</name></name><argument_list pos:start="34:25" pos:end="34:27">(<argument pos:start="34:26" pos:end="34:26"><expr pos:start="34:26" pos:end="34:26"><name pos:start="34:26" pos:end="34:26">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="35:14" pos:end="37:13">else if<condition pos:start="35:21" pos:end="35:31">(<expr pos:start="35:22" pos:end="35:30"><name pos:start="35:22" pos:end="35:25"><name pos:start="35:22" pos:end="35:22">c</name><index pos:start="35:23" pos:end="35:25">[<expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr>]</index></name><operator pos:start="35:26" pos:end="35:27">==</operator><literal type="char" pos:start="35:28" pos:end="35:30">'D'</literal></expr>)</condition><block pos:start="35:32" pos:end="37:13">{<block_content pos:start="36:17" pos:end="36:26">
                <expr_stmt pos:start="36:17" pos:end="36:26"><expr pos:start="36:17" pos:end="36:25"><call pos:start="36:17" pos:end="36:25"><name pos:start="36:17" pos:end="36:23"><name pos:start="36:17" pos:end="36:19">stb</name><operator pos:start="36:20" pos:end="36:20">.</operator><name pos:start="36:21" pos:end="36:23">pop</name></name><argument_list pos:start="36:24" pos:end="36:25">()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if><if type="elseif" pos:start="37:14" pos:end="46:13">else if<condition pos:start="37:21" pos:end="37:31">(<expr pos:start="37:22" pos:end="37:30"><name pos:start="37:22" pos:end="37:25"><name pos:start="37:22" pos:end="37:22">c</name><index pos:start="37:23" pos:end="37:25">[<expr pos:start="37:24" pos:end="37:24"><literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>]</index></name><operator pos:start="37:26" pos:end="37:27">==</operator><literal type="char" pos:start="37:28" pos:end="37:30">'M'</literal></expr>)</condition><block pos:start="37:32" pos:end="46:13">{<block_content pos:start="38:17" pos:end="45:17">
                <while pos:start="38:17" pos:end="41:17">while<condition pos:start="38:22" pos:end="38:35">(<expr pos:start="38:23" pos:end="38:34"><operator pos:start="38:23" pos:end="38:23">!</operator><call pos:start="38:24" pos:end="38:34"><name pos:start="38:24" pos:end="38:32"><name pos:start="38:24" pos:end="38:26">sta</name><operator pos:start="38:27" pos:end="38:27">.</operator><name pos:start="38:28" pos:end="38:32">empty</name></name><argument_list pos:start="38:33" pos:end="38:34">()</argument_list></call></expr>)</condition><block pos:start="38:36" pos:end="41:17">{<block_content pos:start="39:21" pos:end="40:30">
                    <expr_stmt pos:start="39:21" pos:end="39:39"><expr pos:start="39:21" pos:end="39:38"><call pos:start="39:21" pos:end="39:38"><name pos:start="39:21" pos:end="39:27"><name pos:start="39:21" pos:end="39:22">st</name><operator pos:start="39:23" pos:end="39:23">.</operator><name pos:start="39:24" pos:end="39:27">push</name></name><argument_list pos:start="39:28" pos:end="39:38">(<argument pos:start="39:29" pos:end="39:37"><expr pos:start="39:29" pos:end="39:37"><call pos:start="39:29" pos:end="39:37"><name pos:start="39:29" pos:end="39:35"><name pos:start="39:29" pos:end="39:31">sta</name><operator pos:start="39:32" pos:end="39:32">.</operator><name pos:start="39:33" pos:end="39:35">top</name></name><argument_list pos:start="39:36" pos:end="39:37">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="40:21" pos:end="40:30"><expr pos:start="40:21" pos:end="40:29"><call pos:start="40:21" pos:end="40:29"><name pos:start="40:21" pos:end="40:27"><name pos:start="40:21" pos:end="40:23">sta</name><operator pos:start="40:24" pos:end="40:24">.</operator><name pos:start="40:25" pos:end="40:27">pop</name></name><argument_list pos:start="40:28" pos:end="40:29">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <while pos:start="42:17" pos:end="45:17">while<condition pos:start="42:22" pos:end="42:34">(<expr pos:start="42:23" pos:end="42:33"><operator pos:start="42:23" pos:end="42:23">!</operator><call pos:start="42:24" pos:end="42:33"><name pos:start="42:24" pos:end="42:31"><name pos:start="42:24" pos:end="42:25">st</name><operator pos:start="42:26" pos:end="42:26">.</operator><name pos:start="42:27" pos:end="42:31">empty</name></name><argument_list pos:start="42:32" pos:end="42:33">()</argument_list></call></expr>)</condition><block pos:start="42:35" pos:end="45:17">{<block_content pos:start="43:21" pos:end="44:29">
                    <expr_stmt pos:start="43:21" pos:end="43:39"><expr pos:start="43:21" pos:end="43:38"><call pos:start="43:21" pos:end="43:38"><name pos:start="43:21" pos:end="43:28"><name pos:start="43:21" pos:end="43:23">stb</name><operator pos:start="43:24" pos:end="43:24">.</operator><name pos:start="43:25" pos:end="43:28">push</name></name><argument_list pos:start="43:29" pos:end="43:38">(<argument pos:start="43:30" pos:end="43:37"><expr pos:start="43:30" pos:end="43:37"><call pos:start="43:30" pos:end="43:37"><name pos:start="43:30" pos:end="43:35"><name pos:start="43:30" pos:end="43:31">st</name><operator pos:start="43:32" pos:end="43:32">.</operator><name pos:start="43:33" pos:end="43:35">top</name></name><argument_list pos:start="43:36" pos:end="43:37">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="44:21" pos:end="44:29"><expr pos:start="44:21" pos:end="44:28"><call pos:start="44:21" pos:end="44:28"><name pos:start="44:21" pos:end="44:26"><name pos:start="44:21" pos:end="44:22">st</name><operator pos:start="44:23" pos:end="44:23">.</operator><name pos:start="44:24" pos:end="44:26">pop</name></name><argument_list pos:start="44:27" pos:end="44:28">()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></while>
    <while pos:start="49:5" pos:end="52:5">while<condition pos:start="49:10" pos:end="49:23">(<expr pos:start="49:11" pos:end="49:22"><operator pos:start="49:11" pos:end="49:11">!</operator><call pos:start="49:12" pos:end="49:22"><name pos:start="49:12" pos:end="49:20"><name pos:start="49:12" pos:end="49:14">sta</name><operator pos:start="49:15" pos:end="49:15">.</operator><name pos:start="49:16" pos:end="49:20">empty</name></name><argument_list pos:start="49:21" pos:end="49:22">()</argument_list></call></expr>)</condition><block pos:start="49:24" pos:end="52:5">{<block_content pos:start="50:9" pos:end="51:17">
        <expr_stmt pos:start="50:9" pos:end="50:27"><expr pos:start="50:9" pos:end="50:26"><call pos:start="50:9" pos:end="50:26"><name pos:start="50:9" pos:end="50:15"><name pos:start="50:9" pos:end="50:10">st</name><operator pos:start="50:11" pos:end="50:11">.</operator><name pos:start="50:12" pos:end="50:15">push</name></name><argument_list pos:start="50:16" pos:end="50:26">(<argument pos:start="50:17" pos:end="50:25"><expr pos:start="50:17" pos:end="50:25"><call pos:start="50:17" pos:end="50:25"><name pos:start="50:17" pos:end="50:23"><name pos:start="50:17" pos:end="50:19">sta</name><operator pos:start="50:20" pos:end="50:20">.</operator><name pos:start="50:21" pos:end="50:23">top</name></name><argument_list pos:start="50:24" pos:end="50:25">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="51:9" pos:end="51:17"><expr pos:start="51:9" pos:end="51:16"><call pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:10">st</name><operator pos:start="51:11" pos:end="51:11">.</operator><name pos:start="51:12" pos:end="51:14">pop</name></name><argument_list pos:start="51:15" pos:end="51:16">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="53:5" pos:end="56:5">while<condition pos:start="53:10" pos:end="53:22">(<expr pos:start="53:11" pos:end="53:21"><operator pos:start="53:11" pos:end="53:11">!</operator><call pos:start="53:12" pos:end="53:21"><name pos:start="53:12" pos:end="53:19"><name pos:start="53:12" pos:end="53:13">st</name><operator pos:start="53:14" pos:end="53:14">.</operator><name pos:start="53:15" pos:end="53:19">empty</name></name><argument_list pos:start="53:20" pos:end="53:21">()</argument_list></call></expr>)</condition><block pos:start="53:23" pos:end="56:5">{<block_content pos:start="54:9" pos:end="55:17">
        <expr_stmt pos:start="54:9" pos:end="54:28"><expr pos:start="54:9" pos:end="54:27"><name pos:start="54:9" pos:end="54:12">cout</name><operator pos:start="54:13" pos:end="54:14">&lt;&lt;</operator><call pos:start="54:15" pos:end="54:22"><name pos:start="54:15" pos:end="54:20"><name pos:start="54:15" pos:end="54:16">st</name><operator pos:start="54:17" pos:end="54:17">.</operator><name pos:start="54:18" pos:end="54:20">top</name></name><argument_list pos:start="54:21" pos:end="54:22">()</argument_list></call><operator pos:start="54:23" pos:end="54:24">&lt;&lt;</operator><literal type="string" pos:start="54:25" pos:end="54:27">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="55:9" pos:end="55:17"><expr pos:start="55:9" pos:end="55:16"><call pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:10">st</name><operator pos:start="55:11" pos:end="55:11">.</operator><name pos:start="55:12" pos:end="55:14">pop</name></name><argument_list pos:start="55:15" pos:end="55:16">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="57:5" pos:end="57:15"><expr pos:start="57:5" pos:end="57:14"><name pos:start="57:5" pos:end="57:8">cout</name><operator pos:start="57:9" pos:end="57:10">&lt;&lt;</operator><name pos:start="57:11" pos:end="57:14">endl</name></expr>;</expr_stmt>
    <while pos:start="58:5" pos:end="61:5">while<condition pos:start="58:10" pos:end="58:23">(<expr pos:start="58:11" pos:end="58:22"><operator pos:start="58:11" pos:end="58:11">!</operator><call pos:start="58:12" pos:end="58:22"><name pos:start="58:12" pos:end="58:20"><name pos:start="58:12" pos:end="58:14">stb</name><operator pos:start="58:15" pos:end="58:15">.</operator><name pos:start="58:16" pos:end="58:20">empty</name></name><argument_list pos:start="58:21" pos:end="58:22">()</argument_list></call></expr>)</condition><block pos:start="58:24" pos:end="61:5">{<block_content pos:start="59:9" pos:end="60:17">
        <expr_stmt pos:start="59:9" pos:end="59:27"><expr pos:start="59:9" pos:end="59:26"><call pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:10">st</name><operator pos:start="59:11" pos:end="59:11">.</operator><name pos:start="59:12" pos:end="59:15">push</name></name><argument_list pos:start="59:16" pos:end="59:26">(<argument pos:start="59:17" pos:end="59:25"><expr pos:start="59:17" pos:end="59:25"><call pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:23"><name pos:start="59:17" pos:end="59:19">stb</name><operator pos:start="59:20" pos:end="59:20">.</operator><name pos:start="59:21" pos:end="59:23">top</name></name><argument_list pos:start="59:24" pos:end="59:25">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="60:9" pos:end="60:17"><expr pos:start="60:9" pos:end="60:16"><call pos:start="60:9" pos:end="60:16"><name pos:start="60:9" pos:end="60:14"><name pos:start="60:9" pos:end="60:10">st</name><operator pos:start="60:11" pos:end="60:11">.</operator><name pos:start="60:12" pos:end="60:14">pop</name></name><argument_list pos:start="60:15" pos:end="60:16">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="62:5" pos:end="65:5">while<condition pos:start="62:10" pos:end="62:22">(<expr pos:start="62:11" pos:end="62:21"><operator pos:start="62:11" pos:end="62:11">!</operator><call pos:start="62:12" pos:end="62:21"><name pos:start="62:12" pos:end="62:19"><name pos:start="62:12" pos:end="62:13">st</name><operator pos:start="62:14" pos:end="62:14">.</operator><name pos:start="62:15" pos:end="62:19">empty</name></name><argument_list pos:start="62:20" pos:end="62:21">()</argument_list></call></expr>)</condition><block pos:start="62:23" pos:end="65:5">{<block_content pos:start="63:9" pos:end="64:17">
        <expr_stmt pos:start="63:9" pos:end="63:28"><expr pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:12">cout</name><operator pos:start="63:13" pos:end="63:14">&lt;&lt;</operator><call pos:start="63:15" pos:end="63:22"><name pos:start="63:15" pos:end="63:20"><name pos:start="63:15" pos:end="63:16">st</name><operator pos:start="63:17" pos:end="63:17">.</operator><name pos:start="63:18" pos:end="63:20">top</name></name><argument_list pos:start="63:21" pos:end="63:22">()</argument_list></call><operator pos:start="63:23" pos:end="63:24">&lt;&lt;</operator><literal type="string" pos:start="63:25" pos:end="63:27">" "</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="64:9" pos:end="64:17"><expr pos:start="64:9" pos:end="64:16"><call pos:start="64:9" pos:end="64:16"><name pos:start="64:9" pos:end="64:14"><name pos:start="64:9" pos:end="64:10">st</name><operator pos:start="64:11" pos:end="64:11">.</operator><name pos:start="64:12" pos:end="64:14">pop</name></name><argument_list pos:start="64:15" pos:end="64:16">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="66:5" pos:end="66:15"><expr pos:start="66:5" pos:end="66:14"><name pos:start="66:5" pos:end="66:8">cout</name><operator pos:start="66:9" pos:end="66:10">&lt;&lt;</operator><name pos:start="66:11" pos:end="66:14">endl</name></expr>;</expr_stmt>
    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
