<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/753/753.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;vector&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>

<function pos:start="5:1" pos:end="28:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list> <block pos:start="5:12" pos:end="28:1">{<block_content pos:start="6:5" pos:end="27:13">
    <decl_stmt pos:start="6:5" pos:end="6:24"><decl pos:start="6:5" pos:end="6:23"><type pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:10">vector</name><argument_list type="generic" pos:start="6:11" pos:end="6:18">&lt;<argument pos:start="6:12" pos:end="6:17"><expr pos:start="6:12" pos:end="6:17"><name pos:start="6:12" pos:end="6:17">string</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:20" pos:end="6:23">name</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">t</name></decl>,<decl pos:start="7:11" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:13">tot</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:13"><expr pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:7">cin</name> <operator pos:start="8:9" pos:end="8:10">&gt;&gt;</operator> <name pos:start="8:12" pos:end="8:12">t</name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:12"><expr pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:5">t</name> <operator pos:start="9:7" pos:end="9:8">*=</operator> <literal type="number" pos:start="9:10" pos:end="9:11">60</literal></expr>;</expr_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:13"><decl pos:start="10:5" pos:end="10:12"><type pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:10">string</name></type> <name pos:start="10:12" pos:end="10:12">x</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name> <init pos:start="11:11" pos:end="11:13">= <expr pos:start="11:13" pos:end="11:13"><literal type="number" pos:start="11:13" pos:end="11:13">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="12:5" pos:end="19:5">while<condition pos:start="12:10" pos:end="12:19">(<expr pos:start="12:11" pos:end="12:18"><name pos:start="12:11" pos:end="12:13">cin</name> <operator pos:start="12:15" pos:end="12:16">&gt;&gt;</operator> <name pos:start="12:18" pos:end="12:18">x</name></expr>)</condition> <block pos:start="12:21" pos:end="19:5">{<block_content pos:start="13:9" pos:end="18:9">
        <if_stmt pos:start="13:9" pos:end="18:9"><if pos:start="13:9" pos:end="18:9">if<condition pos:start="13:11" pos:end="13:31">(<expr pos:start="13:12" pos:end="13:30"><name pos:start="13:12" pos:end="13:12">x</name> <operator pos:start="13:14" pos:end="13:15">!=</operator> <literal type="string" pos:start="13:17" pos:end="13:30">"tingtingting"</literal></expr>)</condition> <block pos:start="13:33" pos:end="18:9">{<block_content pos:start="14:13" pos:end="17:24">
            <expr_stmt pos:start="14:13" pos:end="14:30"><expr pos:start="14:13" pos:end="14:29"><call pos:start="14:13" pos:end="14:29"><name pos:start="14:13" pos:end="14:26"><name pos:start="14:13" pos:end="14:16">name</name><operator pos:start="14:17" pos:end="14:17">.</operator><name pos:start="14:18" pos:end="14:26">push_back</name></name><argument_list pos:start="14:27" pos:end="14:29">(<argument pos:start="14:28" pos:end="14:28"><expr pos:start="14:28" pos:end="14:28"><name pos:start="14:28" pos:end="14:28">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    
            <decl_stmt pos:start="15:13" pos:end="15:21"><decl pos:start="15:13" pos:end="15:20"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:20">time</name></decl>;</decl_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:24"><expr pos:start="16:13" pos:end="16:23"><name pos:start="16:13" pos:end="16:15">cin</name> <operator pos:start="16:17" pos:end="16:18">&gt;&gt;</operator> <name pos:start="16:20" pos:end="16:23">time</name></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:24"><expr pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:15">tot</name> <operator pos:start="17:17" pos:end="17:18">+=</operator> <name pos:start="17:20" pos:end="17:23">time</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></while>
    <for pos:start="20:5" pos:end="26:5">for<control pos:start="20:8" pos:end="20:40">(<init pos:start="20:9" pos:end="20:18"><decl pos:start="20:9" pos:end="20:17"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:13">j</name> <init pos:start="20:15" pos:end="20:17">= <expr pos:start="20:17" pos:end="20:17"><literal type="number" pos:start="20:17" pos:end="20:17">0</literal></expr></init></decl>;</init><condition pos:start="20:19" pos:end="20:36"><expr pos:start="20:19" pos:end="20:35"><name pos:start="20:19" pos:end="20:19">j</name> <operator pos:start="20:21" pos:end="20:21">&lt;</operator> <call pos:start="20:23" pos:end="20:33"><name pos:start="20:23" pos:end="20:31"><name pos:start="20:23" pos:end="20:26">name</name><operator pos:start="20:27" pos:end="20:27">.</operator><name pos:start="20:28" pos:end="20:31">size</name></name><argument_list pos:start="20:32" pos:end="20:33">()</argument_list></call><operator pos:start="20:34" pos:end="20:34">-</operator><literal type="number" pos:start="20:35" pos:end="20:35">1</literal></expr>;</condition><incr pos:start="20:37" pos:end="20:39"><expr pos:start="20:37" pos:end="20:39"><name pos:start="20:37" pos:end="20:37">j</name><operator pos:start="20:38" pos:end="20:39">++</operator></expr></incr>)</control> <block pos:start="20:42" pos:end="26:5">{<block_content pos:start="21:9" pos:end="25:9">
        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if<condition pos:start="21:11" pos:end="21:29">(<expr pos:start="21:12" pos:end="21:28"><name pos:start="21:12" pos:end="21:12">x</name> <operator pos:start="21:14" pos:end="21:15">==</operator> <literal type="string" pos:start="21:17" pos:end="21:28">"kaomianjin"</literal></expr>)</condition> <block pos:start="21:31" pos:end="25:9">{<block_content pos:start="22:13" pos:end="24:42">
            <if_stmt pos:start="22:13" pos:end="24:42"><if pos:start="22:13" pos:end="22:62">if<condition pos:start="22:15" pos:end="22:43">(<expr pos:start="22:16" pos:end="22:42"><name pos:start="22:16" pos:end="22:24"><name pos:start="22:16" pos:end="22:19">name</name><index pos:start="22:20" pos:end="22:24">[<expr pos:start="22:21" pos:end="22:23"><name pos:start="22:21" pos:end="22:21">i</name><operator pos:start="22:22" pos:end="22:22">+</operator><literal type="number" pos:start="22:23" pos:end="22:23">1</literal></expr>]</index></name> <operator pos:start="22:26" pos:end="22:27">==</operator> <literal type="string" pos:start="22:29" pos:end="22:42">"tingtingting"</literal></expr>)</condition><block type="pseudo" pos:start="22:45" pos:end="22:62"><block_content pos:start="22:45" pos:end="22:62"> <expr_stmt pos:start="22:45" pos:end="22:62"><expr pos:start="22:45" pos:end="22:61"><name pos:start="22:45" pos:end="22:48">cout</name> <operator pos:start="22:50" pos:end="22:51">&lt;&lt;</operator> <literal type="string" pos:start="22:53" pos:end="22:61">"hahaha."</literal></expr>;</expr_stmt></block_content></block></if>
            <if type="elseif" pos:start="23:13" pos:end="23:57">else if<condition pos:start="23:20" pos:end="23:29">(<expr pos:start="23:21" pos:end="23:28"><name pos:start="23:21" pos:end="23:23">tot</name> <operator pos:start="23:25" pos:end="23:26">&lt;=</operator> <name pos:start="23:28" pos:end="23:28">t</name></expr>)</condition><block type="pseudo" pos:start="23:31" pos:end="23:57"><block_content pos:start="23:31" pos:end="23:57"> <expr_stmt pos:start="23:31" pos:end="23:57"><expr pos:start="23:31" pos:end="23:56"><name pos:start="23:31" pos:end="23:34">cout</name> <operator pos:start="23:36" pos:end="23:37">&lt;&lt;</operator> <literal type="string" pos:start="23:39" pos:end="23:56">"Congratulations!"</literal></expr>;</expr_stmt></block_content></block></if>            
            <else pos:start="24:13" pos:end="24:42">else<block type="pseudo" pos:start="24:18" pos:end="24:42"><block_content pos:start="24:18" pos:end="24:42"> <expr_stmt pos:start="24:18" pos:end="24:42"><expr pos:start="24:18" pos:end="24:41"><name pos:start="24:18" pos:end="24:21">cout</name> <operator pos:start="24:23" pos:end="24:24">&lt;&lt;</operator> <literal type="string" pos:start="24:26" pos:end="24:41">"Unfortunately."</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>           
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
