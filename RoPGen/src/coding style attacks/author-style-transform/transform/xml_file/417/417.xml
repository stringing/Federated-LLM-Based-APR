<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/417/417.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:18">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:18">&lt;cstring&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<function pos:start="5:1" pos:end="25:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:8">main</name><parameter_list pos:start="5:9" pos:end="5:10">()</parameter_list> <block pos:start="5:12" pos:end="25:1">{<block_content pos:start="6:5" pos:end="24:13">
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></type> <name pos:start="6:12" pos:end="6:12">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:19"><expr pos:start="7:5" pos:end="7:18"><call pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:11">getline</name><argument_list pos:start="7:12" pos:end="7:18">(<argument pos:start="7:13" pos:end="7:15"><expr pos:start="7:13" pos:end="7:15"><name pos:start="7:13" pos:end="7:15">cin</name></expr></argument>,<argument pos:start="7:17" pos:end="7:17"><expr pos:start="7:17" pos:end="7:17"><name pos:start="7:17" pos:end="7:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:21"><decl pos:start="8:5" pos:end="8:20"><type pos:start="8:5" pos:end="8:8"><name pos:start="8:5" pos:end="8:8">char</name></type> <name pos:start="8:10" pos:end="8:20"><name pos:start="8:10" pos:end="8:10">a</name><index pos:start="8:11" pos:end="8:20">[<expr pos:start="8:12" pos:end="8:19"><call pos:start="8:12" pos:end="8:19"><name pos:start="8:12" pos:end="8:17"><name pos:start="8:12" pos:end="8:12">s</name><operator pos:start="8:13" pos:end="8:13">.</operator><name pos:start="8:14" pos:end="8:17">size</name></name><argument_list pos:start="8:18" pos:end="8:19">()</argument_list></call></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ine</name><init pos:start="9:12" pos:end="9:13">=<expr pos:start="9:13" pos:end="9:13"><literal type="number" pos:start="9:13" pos:end="9:13">0</literal></expr></init></decl>,<decl pos:start="9:15" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:17">nub</name><init pos:start="9:18" pos:end="9:19">=<expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="10:5" pos:end="13:5"><if pos:start="10:5" pos:end="13:5">if<condition pos:start="10:7" pos:end="10:17">(<expr pos:start="10:8" pos:end="10:16"><name pos:start="10:8" pos:end="10:11"><name pos:start="10:8" pos:end="10:8">s</name><index pos:start="10:9" pos:end="10:11">[<expr pos:start="10:10" pos:end="10:10"><name pos:start="10:10" pos:end="10:10">i</name></expr>]</index></name><operator pos:start="10:12" pos:end="10:13">==</operator><literal type="string" pos:start="10:14" pos:end="10:16">" "</literal></expr>)</condition><block pos:start="10:18" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:36">
        <expr_stmt pos:start="11:9" pos:end="11:36"><expr pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:9">a</name><operator pos:start="11:10" pos:end="11:10">=</operator><call pos:start="11:11" pos:end="11:35"><name pos:start="11:11" pos:end="11:18"><name pos:start="11:11" pos:end="11:11">s</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:18">substr</name></name><argument_list pos:start="11:19" pos:end="11:35">(<argument pos:start="11:20" pos:end="11:20"><expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr></argument>,<argument pos:start="11:22" pos:end="11:34"><expr pos:start="11:22" pos:end="11:34"><call pos:start="11:22" pos:end="11:32"><name pos:start="11:22" pos:end="11:27"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:23">.</operator><name pos:start="11:24" pos:end="11:27">find</name></name><argument_list pos:start="11:28" pos:end="11:32">(<argument pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><literal type="string" pos:start="11:29" pos:end="11:31">" "</literal></expr></argument>)</argument_list></call><operator pos:start="11:33" pos:end="11:33">-</operator><literal type="number" pos:start="11:34" pos:end="11:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>
    <for pos:start="14:5" pos:end="21:5">for<control pos:start="14:8" pos:end="14:31">(<init pos:start="14:9" pos:end="14:16"><decl pos:start="14:9" pos:end="14:15"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:13">i</name><init pos:start="14:14" pos:end="14:15">=<expr pos:start="14:15" pos:end="14:15"><literal type="number" pos:start="14:15" pos:end="14:15">0</literal></expr></init></decl>;</init><condition pos:start="14:17" pos:end="14:27"><expr pos:start="14:17" pos:end="14:26"><name pos:start="14:17" pos:end="14:17">i</name><operator pos:start="14:18" pos:end="14:18">&lt;</operator><call pos:start="14:19" pos:end="14:26"><name pos:start="14:19" pos:end="14:24"><name pos:start="14:19" pos:end="14:19">s</name><operator pos:start="14:20" pos:end="14:20">.</operator><name pos:start="14:21" pos:end="14:24">size</name></name><argument_list pos:start="14:25" pos:end="14:26">()</argument_list></call></expr>;</condition><incr pos:start="14:28" pos:end="14:30"><expr pos:start="14:28" pos:end="14:30"><name pos:start="14:28" pos:end="14:28">i</name><operator pos:start="14:29" pos:end="14:30">++</operator></expr></incr>)</control><block pos:start="14:32" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:9">
        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if<condition pos:start="15:11" pos:end="15:34">(<expr pos:start="15:12" pos:end="15:33"><name pos:start="15:12" pos:end="15:17"><name pos:start="15:12" pos:end="15:12">s</name><index pos:start="15:13" pos:end="15:17">[<expr pos:start="15:14" pos:end="15:16"><name pos:start="15:14" pos:end="15:14">i</name><operator pos:start="15:15" pos:end="15:15">-</operator><literal type="number" pos:start="15:16" pos:end="15:16">1</literal></expr>]</index></name><operator pos:start="15:18" pos:end="15:19">==</operator><literal type="string" pos:start="15:20" pos:end="15:22">" "</literal><operator pos:start="15:23" pos:end="15:24">&amp;&amp;</operator><name pos:start="15:25" pos:end="15:28"><name pos:start="15:25" pos:end="15:25">s</name><index pos:start="15:26" pos:end="15:28">[<expr pos:start="15:27" pos:end="15:27"><name pos:start="15:27" pos:end="15:27">i</name></expr>]</index></name><operator pos:start="15:29" pos:end="15:30">!=</operator><literal type="string" pos:start="15:31" pos:end="15:33">" "</literal></expr>)</condition><block pos:start="15:35" pos:end="19:9">{<block_content pos:start="16:13" pos:end="18:13">
            <if_stmt pos:start="16:13" pos:end="18:13"><if pos:start="16:13" pos:end="18:13">if<condition pos:start="16:15" pos:end="16:38">(<expr pos:start="16:16" pos:end="16:37"><name pos:start="16:16" pos:end="16:37"><name pos:start="16:16" pos:end="16:16">a</name><operator pos:start="16:17" pos:end="16:17">.</operator><name pos:start="16:18" pos:end="16:21">size</name></name><operator pos:start="16:22" pos:end="16:22">&lt;</operator><call pos:start="16:23" pos:end="16:33"><name pos:start="16:23" pos:end="16:28"><name pos:start="16:23" pos:end="16:23">s</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:28">find</name></name><argument_list pos:start="16:29" pos:end="16:33">(<argument pos:start="16:30" pos:end="16:32"><expr pos:start="16:30" pos:end="16:32"><literal type="string" pos:start="16:30" pos:end="16:32">" "</literal></expr></argument>)</argument_list></call><operator pos:start="16:34" pos:end="16:34">-</operator><literal type="number" pos:start="16:35" pos:end="16:36">1</literal><operator pos:start="16:36" pos:end="16:36">-</operator><name pos:start="16:37" pos:end="16:37">i</name></expr>)</condition><block pos:start="16:39" pos:end="18:13">{<block_content pos:start="17:21" pos:end="17:38">
                    <expr_stmt pos:start="17:21" pos:end="17:38"><expr pos:start="17:21" pos:end="17:37"><name pos:start="17:21" pos:end="17:21">a</name><operator pos:start="17:22" pos:end="17:22">=</operator><call pos:start="17:23" pos:end="17:37"><name pos:start="17:23" pos:end="17:30"><name pos:start="17:23" pos:end="17:23">s</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:30">substr</name></name><argument_list pos:start="17:31" pos:end="17:37">(<argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><literal type="number" pos:start="17:32" pos:end="17:32">0</literal></expr></argument>,<argument pos:start="17:34" pos:end="17:36"><expr pos:start="17:34" pos:end="17:36"><name pos:start="17:34" pos:end="17:34">i</name><operator pos:start="17:35" pos:end="17:35">-</operator><literal type="number" pos:start="17:36" pos:end="17:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for><for pos:start="21:6" pos:end="23:5">for<control pos:start="21:9" pos:end="21:25">(<init pos:start="21:10" pos:end="21:17"><decl pos:start="21:10" pos:end="21:16"><type pos:start="21:10" pos:end="21:12"><name pos:start="21:10" pos:end="21:12">int</name></type> <name pos:start="21:14" pos:end="21:14">i</name><init pos:start="21:15" pos:end="21:16">=<expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr></init></decl>;</init><condition pos:start="21:18" pos:end="21:21"><expr pos:start="21:18" pos:end="21:20"><name pos:start="21:18" pos:end="21:18">i</name><operator pos:start="21:19" pos:end="21:19">&lt;</operator><name pos:start="21:20" pos:end="21:20">a</name></expr>;</condition><incr pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:22">i</name><operator pos:start="21:23" pos:end="21:24">++</operator></expr></incr>)</control><block pos:start="21:26" pos:end="23:5">{<block_content pos:start="22:9" pos:end="22:19">
        <expr_stmt pos:start="22:9" pos:end="22:19"><expr pos:start="22:9" pos:end="22:18"><name pos:start="22:9" pos:end="22:12">cout</name><operator pos:start="22:13" pos:end="22:14">&lt;&lt;</operator><name pos:start="22:15" pos:end="22:18"><name pos:start="22:15" pos:end="22:15">a</name><index pos:start="22:16" pos:end="22:18">[<expr pos:start="22:17" pos:end="22:17"><name pos:start="22:17" pos:end="22:17">i</name></expr>]</index></name></expr>;</expr_stmt>    
    </block_content>}</block></for>
    <return pos:start="24:5" pos:end="24:13">return <expr pos:start="24:12" pos:end="24:12"><literal type="number" pos:start="24:12" pos:end="24:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
