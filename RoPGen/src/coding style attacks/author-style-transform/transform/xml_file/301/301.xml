<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/301/301.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:17">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:17">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:16">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:16">&lt;stack&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:17">&lt;vector&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:23"><decl pos:start="5:1" pos:end="5:22"><type pos:start="5:1" pos:end="5:9"><specifier pos:start="5:1" pos:end="5:5">const</specifier> <name pos:start="5:7" pos:end="5:9">int</name></type> <name pos:start="5:11" pos:end="5:14">MAXN</name> <init pos:start="5:16" pos:end="5:22">= <expr pos:start="5:18" pos:end="5:22"><literal type="number" pos:start="5:18" pos:end="5:22">10005</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:24"><decl pos:start="6:1" pos:end="6:23"><type pos:start="6:1" pos:end="6:9"><specifier pos:start="6:1" pos:end="6:5">const</specifier> <name pos:start="6:7" pos:end="6:9">int</name></type> <name pos:start="6:11" pos:end="6:14">MAXM</name> <init pos:start="6:16" pos:end="6:23">= <expr pos:start="6:18" pos:end="6:23"><literal type="number" pos:start="6:18" pos:end="6:23">100005</literal></expr></init></decl>;</decl_stmt>
<struct pos:start="7:1" pos:end="9:19">struct <name pos:start="7:8" pos:end="7:11">edge</name> <block pos:start="7:13" pos:end="9:1">{<public type="default" pos:start="8:5" pos:end="8:16">
    <decl_stmt pos:start="8:5" pos:end="8:16"><decl pos:start="8:5" pos:end="8:10"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:10">to</name></decl>, <decl pos:start="8:13" pos:end="8:15"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:13" pos:end="8:15">nxt</name></decl>;</decl_stmt>
</public>}</block> <decl pos:start="9:3" pos:end="9:18"><name pos:start="9:3" pos:end="9:18"><name pos:start="9:3" pos:end="9:7">edges</name><index pos:start="9:8" pos:end="9:18">[<expr pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:12">MAXM</name> <operator pos:start="9:14" pos:end="9:15">&lt;&lt;</operator> <literal type="number" pos:start="9:17" pos:end="9:17">1</literal></expr>]</index></name></decl>;</struct>
<decl_stmt pos:start="10:1" pos:end="10:20"><decl pos:start="10:1" pos:end="10:14"><type pos:start="10:1" pos:end="10:3"><name pos:start="10:1" pos:end="10:3">int</name></type> <name pos:start="10:5" pos:end="10:14"><name pos:start="10:5" pos:end="10:8">head</name><index pos:start="10:9" pos:end="10:14">[<expr pos:start="10:10" pos:end="10:13"><name pos:start="10:10" pos:end="10:13">MAXN</name></expr>]</index></name></decl>, <decl pos:start="10:17" pos:end="10:19"><type ref="prev" pos:start="10:1" pos:end="10:3"/><name pos:start="10:17" pos:end="10:19">tot</name></decl>;</decl_stmt>
<function pos:start="11:1" pos:end="15:1"><type pos:start="11:1" pos:end="11:4"><name pos:start="11:1" pos:end="11:4">void</name></type> <name pos:start="11:6" pos:end="11:8">add</name><parameter_list pos:start="11:9" pos:end="11:22">(<parameter pos:start="11:10" pos:end="11:14"><decl pos:start="11:10" pos:end="11:14"><type pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:12">int</name></type> <name pos:start="11:14" pos:end="11:14">u</name></decl></parameter>, <parameter pos:start="11:17" pos:end="11:21"><decl pos:start="11:17" pos:end="11:21"><type pos:start="11:17" pos:end="11:21"><name pos:start="11:17" pos:end="11:19">int</name></type> <name pos:start="11:21" pos:end="11:21">v</name></decl></parameter>)</parameter_list> <block pos:start="11:24" pos:end="15:1">{<block_content pos:start="12:5" pos:end="14:18">
    <expr_stmt pos:start="12:5" pos:end="12:24"><expr pos:start="12:5" pos:end="12:23"><name pos:start="12:5" pos:end="12:16"><name pos:start="12:5" pos:end="12:9">edges</name><index pos:start="12:10" pos:end="12:16">[<expr pos:start="12:11" pos:end="12:15"><operator pos:start="12:11" pos:end="12:12">++</operator><name pos:start="12:13" pos:end="12:15">tot</name></expr>]</index></name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:19">to</name> <operator pos:start="12:21" pos:end="12:21">=</operator> <name pos:start="12:23" pos:end="12:23">v</name></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:9">edges</name><index pos:start="13:10" pos:end="13:14">[<expr pos:start="13:11" pos:end="13:13"><name pos:start="13:11" pos:end="13:13">tot</name></expr>]</index></name><operator pos:start="13:15" pos:end="13:15">.</operator><name pos:start="13:16" pos:end="13:18">nxt</name> <operator pos:start="13:20" pos:end="13:20">=</operator> <name pos:start="13:22" pos:end="13:28"><name pos:start="13:22" pos:end="13:25">head</name><index pos:start="13:26" pos:end="13:28">[<expr pos:start="13:27" pos:end="13:27"><name pos:start="13:27" pos:end="13:27">u</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:18"><expr pos:start="14:5" pos:end="14:17"><name pos:start="14:5" pos:end="14:11"><name pos:start="14:5" pos:end="14:8">head</name><index pos:start="14:9" pos:end="14:11">[<expr pos:start="14:10" pos:end="14:10"><name pos:start="14:10" pos:end="14:10">u</name></expr>]</index></name> <operator pos:start="14:13" pos:end="14:13">=</operator> <name pos:start="14:15" pos:end="14:17">tot</name></expr>;</expr_stmt>
</block_content>}</block></function>
<decl_stmt pos:start="16:1" pos:end="16:44"><decl pos:start="16:1" pos:end="16:13"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:13"><name pos:start="16:5" pos:end="16:7">dfn</name><index pos:start="16:8" pos:end="16:13">[<expr pos:start="16:9" pos:end="16:12"><name pos:start="16:9" pos:end="16:12">MAXN</name></expr>]</index></name></decl>, <decl pos:start="16:16" pos:end="16:24"><type ref="prev" pos:start="16:1" pos:end="16:3"/><name pos:start="16:16" pos:end="16:24"><name pos:start="16:16" pos:end="16:18">low</name><index pos:start="16:19" pos:end="16:24">[<expr pos:start="16:20" pos:end="16:23"><name pos:start="16:20" pos:end="16:23">MAXN</name></expr>]</index></name></decl>, <decl pos:start="16:27" pos:end="16:36"><type ref="prev" pos:start="16:1" pos:end="16:3"/><name pos:start="16:27" pos:end="16:36"><name pos:start="16:27" pos:end="16:30">type</name><index pos:start="16:31" pos:end="16:36">[<expr pos:start="16:32" pos:end="16:35"><name pos:start="16:32" pos:end="16:35">MAXN</name></expr>]</index></name></decl>, <decl pos:start="16:39" pos:end="16:43"><type ref="prev" pos:start="16:1" pos:end="16:3"/><name pos:start="16:39" pos:end="16:43">times</name></decl>;</decl_stmt>
<decl_stmt pos:start="17:1" pos:end="17:14"><decl pos:start="17:1" pos:end="17:13"><type pos:start="17:1" pos:end="17:10"><name pos:start="17:1" pos:end="17:10"><name pos:start="17:1" pos:end="17:5">stack</name><argument_list type="generic" pos:start="17:6" pos:end="17:10">&lt;<argument pos:start="17:7" pos:end="17:9"><expr pos:start="17:7" pos:end="17:9"><name pos:start="17:7" pos:end="17:9">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="17:12" pos:end="17:13">st</name></decl>;</decl_stmt> <decl_stmt pos:start="17:16" pos:end="17:39"><decl pos:start="17:16" pos:end="17:27"><type pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">int</name></type> <name pos:start="17:20" pos:end="17:27"><name pos:start="17:20" pos:end="17:21">cl</name><index pos:start="17:22" pos:end="17:27">[<expr pos:start="17:23" pos:end="17:26"><name pos:start="17:23" pos:end="17:26">MAXN</name></expr>]</index></name></decl>, <decl pos:start="17:30" pos:end="17:38"><type ref="prev" pos:start="17:16" pos:end="17:18"/><name pos:start="17:30" pos:end="17:38"><name pos:start="17:30" pos:end="17:32">typ</name><index pos:start="17:33" pos:end="17:38">[<expr pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:37">MAXN</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="18:1" pos:end="18:22"><decl pos:start="18:1" pos:end="18:21"><type pos:start="18:1" pos:end="18:11"><name pos:start="18:1" pos:end="18:11"><name pos:start="18:1" pos:end="18:6">vector</name><argument_list type="generic" pos:start="18:7" pos:end="18:11">&lt;<argument pos:start="18:8" pos:end="18:10"><expr pos:start="18:8" pos:end="18:10"><name pos:start="18:8" pos:end="18:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="18:13" pos:end="18:21"><name pos:start="18:13" pos:end="18:15">res</name><index pos:start="18:16" pos:end="18:21">[<expr pos:start="18:17" pos:end="18:20"><name pos:start="18:17" pos:end="18:20">MAXN</name></expr>]</index></name></decl>;</decl_stmt> <decl_stmt pos:start="18:24" pos:end="18:30"><decl pos:start="18:24" pos:end="18:29"><type pos:start="18:24" pos:end="18:26"><name pos:start="18:24" pos:end="18:26">int</name></type> <name pos:start="18:28" pos:end="18:29">tp</name></decl>;</decl_stmt>
<decl_stmt pos:start="19:1" pos:end="19:15"><decl pos:start="19:1" pos:end="19:8"><type pos:start="19:1" pos:end="19:3"><name pos:start="19:1" pos:end="19:3">int</name></type> <name pos:start="19:5" pos:end="19:8">ans1</name></decl>, <decl pos:start="19:11" pos:end="19:14"><type ref="prev" pos:start="19:1" pos:end="19:3"/><name pos:start="19:11" pos:end="19:14">ans2</name></decl>;</decl_stmt>
<function pos:start="20:1" pos:end="50:1"><type pos:start="20:1" pos:end="20:4"><name pos:start="20:1" pos:end="20:4">void</name></type> <name pos:start="20:6" pos:end="20:11">tarjan</name><parameter_list pos:start="20:12" pos:end="20:26">(<parameter pos:start="20:13" pos:end="20:17"><decl pos:start="20:13" pos:end="20:17"><type pos:start="20:13" pos:end="20:17"><name pos:start="20:13" pos:end="20:15">int</name></type> <name pos:start="20:17" pos:end="20:17">u</name></decl></parameter>, <parameter pos:start="20:20" pos:end="20:25"><decl pos:start="20:20" pos:end="20:25"><type pos:start="20:20" pos:end="20:25"><name pos:start="20:20" pos:end="20:22">int</name></type> <name pos:start="20:24" pos:end="20:25">fa</name></decl></parameter>)</parameter_list> <block pos:start="20:28" pos:end="50:1">{<block_content pos:start="21:5" pos:end="49:5">
    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:7">dfn</name><index pos:start="21:8" pos:end="21:10">[<expr pos:start="21:9" pos:end="21:9"><name pos:start="21:9" pos:end="21:9">u</name></expr>]</index></name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:19"><name pos:start="21:14" pos:end="21:16">low</name><index pos:start="21:17" pos:end="21:19">[<expr pos:start="21:18" pos:end="21:18"><name pos:start="21:18" pos:end="21:18">u</name></expr>]</index></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <operator pos:start="21:23" pos:end="21:24">++</operator><name pos:start="21:25" pos:end="21:29">times</name></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:15"><expr pos:start="22:5" pos:end="22:14"><call pos:start="22:5" pos:end="22:14"><name pos:start="22:5" pos:end="22:11"><name pos:start="22:5" pos:end="22:6">st</name><operator pos:start="22:7" pos:end="22:7">.</operator><name pos:start="22:8" pos:end="22:11">push</name></name><argument_list pos:start="22:12" pos:end="22:14">(<argument pos:start="22:13" pos:end="22:13"><expr pos:start="22:13" pos:end="22:13"><name pos:start="22:13" pos:end="22:13">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="23:5" pos:end="39:5">for <control pos:start="23:9" pos:end="23:46">(<init pos:start="23:10" pos:end="23:25"><decl pos:start="23:10" pos:end="23:24"><type pos:start="23:10" pos:end="23:12"><name pos:start="23:10" pos:end="23:12">int</name></type> <name pos:start="23:14" pos:end="23:14">i</name> <init pos:start="23:16" pos:end="23:24">= <expr pos:start="23:18" pos:end="23:24"><name pos:start="23:18" pos:end="23:24"><name pos:start="23:18" pos:end="23:21">head</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><name pos:start="23:23" pos:end="23:23">u</name></expr>]</index></name></expr></init></decl>;</init> <condition pos:start="23:27" pos:end="23:28"><expr pos:start="23:27" pos:end="23:27"><name pos:start="23:27" pos:end="23:27">i</name></expr>;</condition> <incr pos:start="23:30" pos:end="23:45"><expr pos:start="23:30" pos:end="23:45"><name pos:start="23:30" pos:end="23:30">i</name> <operator pos:start="23:32" pos:end="23:32">=</operator> <name pos:start="23:34" pos:end="23:41"><name pos:start="23:34" pos:end="23:38">edges</name><index pos:start="23:39" pos:end="23:41">[<expr pos:start="23:40" pos:end="23:40"><name pos:start="23:40" pos:end="23:40">i</name></expr>]</index></name><operator pos:start="23:42" pos:end="23:42">.</operator><name pos:start="23:43" pos:end="23:45">nxt</name></expr></incr>)</control> <block pos:start="23:48" pos:end="39:5">{<block_content pos:start="24:9" pos:end="38:9">
        <if_stmt pos:start="24:9" pos:end="24:40"><if pos:start="24:9" pos:end="24:40">if <condition pos:start="24:12" pos:end="24:30">(<expr pos:start="24:13" pos:end="24:29"><name pos:start="24:13" pos:end="24:20"><name pos:start="24:13" pos:end="24:17">edges</name><index pos:start="24:18" pos:end="24:20">[<expr pos:start="24:19" pos:end="24:19"><name pos:start="24:19" pos:end="24:19">i</name></expr>]</index></name><operator pos:start="24:21" pos:end="24:21">.</operator><name pos:start="24:22" pos:end="24:23">to</name> <operator pos:start="24:25" pos:end="24:26">==</operator> <name pos:start="24:28" pos:end="24:29">fa</name></expr>)</condition><block type="pseudo" pos:start="24:32" pos:end="24:40"><block_content pos:start="24:32" pos:end="24:40"> <continue pos:start="24:32" pos:end="24:40">continue;</continue></block_content></block></if></if_stmt>
        <if_stmt pos:start="25:9" pos:end="38:9"><if pos:start="25:9" pos:end="30:9">if <condition pos:start="25:12" pos:end="25:29">(<expr pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:15">dfn</name><index pos:start="25:16" pos:end="25:28">[<expr pos:start="25:17" pos:end="25:27"><name pos:start="25:17" pos:end="25:24"><name pos:start="25:17" pos:end="25:21">edges</name><index pos:start="25:22" pos:end="25:24">[<expr pos:start="25:23" pos:end="25:23"><name pos:start="25:23" pos:end="25:23">i</name></expr>]</index></name><operator pos:start="25:25" pos:end="25:25">.</operator><name pos:start="25:26" pos:end="25:27">to</name></expr>]</index></name></expr>)</condition> <block pos:start="25:31" pos:end="30:9">{<block_content pos:start="26:13" pos:end="29:13">
            <if_stmt pos:start="26:13" pos:end="29:13"><if pos:start="26:13" pos:end="29:13">if <condition pos:start="26:16" pos:end="26:42">(<expr pos:start="26:17" pos:end="26:41"><name pos:start="26:17" pos:end="26:32"><name pos:start="26:17" pos:end="26:19">dfn</name><index pos:start="26:20" pos:end="26:32">[<expr pos:start="26:21" pos:end="26:31"><name pos:start="26:21" pos:end="26:28"><name pos:start="26:21" pos:end="26:25">edges</name><index pos:start="26:26" pos:end="26:28">[<expr pos:start="26:27" pos:end="26:27"><name pos:start="26:27" pos:end="26:27">i</name></expr>]</index></name><operator pos:start="26:29" pos:end="26:29">.</operator><name pos:start="26:30" pos:end="26:31">to</name></expr>]</index></name> <operator pos:start="26:34" pos:end="26:34">&lt;</operator> <name pos:start="26:36" pos:end="26:41"><name pos:start="26:36" pos:end="26:38">dfn</name><index pos:start="26:39" pos:end="26:41">[<expr pos:start="26:40" pos:end="26:40"><name pos:start="26:40" pos:end="26:40">u</name></expr>]</index></name></expr>)</condition> <block pos:start="26:44" pos:end="29:13">{<block_content pos:start="27:17" pos:end="28:26">
                <expr_stmt pos:start="27:17" pos:end="27:55"><expr pos:start="27:17" pos:end="27:54"><name pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:19">low</name><index pos:start="27:20" pos:end="27:22">[<expr pos:start="27:21" pos:end="27:21"><name pos:start="27:21" pos:end="27:21">u</name></expr>]</index></name> <operator pos:start="27:24" pos:end="27:24">=</operator> <call pos:start="27:26" pos:end="27:54"><name pos:start="27:26" pos:end="27:28">min</name><argument_list pos:start="27:29" pos:end="27:54">(<argument pos:start="27:30" pos:end="27:35"><expr pos:start="27:30" pos:end="27:35"><name pos:start="27:30" pos:end="27:35"><name pos:start="27:30" pos:end="27:32">low</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">u</name></expr>]</index></name></expr></argument>, <argument pos:start="27:38" pos:end="27:53"><expr pos:start="27:38" pos:end="27:53"><name pos:start="27:38" pos:end="27:53"><name pos:start="27:38" pos:end="27:40">dfn</name><index pos:start="27:41" pos:end="27:53">[<expr pos:start="27:42" pos:end="27:52"><name pos:start="27:42" pos:end="27:49"><name pos:start="27:42" pos:end="27:46">edges</name><index pos:start="27:47" pos:end="27:49">[<expr pos:start="27:48" pos:end="27:48"><name pos:start="27:48" pos:end="27:48">i</name></expr>]</index></name><operator pos:start="27:50" pos:end="27:50">.</operator><name pos:start="27:51" pos:end="27:52">to</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="28:17" pos:end="28:26"><expr pos:start="28:17" pos:end="28:25"><name pos:start="28:17" pos:end="28:23"><name pos:start="28:17" pos:end="28:20">type</name><index pos:start="28:21" pos:end="28:23">[<expr pos:start="28:22" pos:end="28:22"><name pos:start="28:22" pos:end="28:22">u</name></expr>]</index></name><operator pos:start="28:24" pos:end="28:25">++</operator></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if>
        <else pos:start="31:9" pos:end="38:9">else <block pos:start="31:14" pos:end="38:9">{<block_content pos:start="32:13" pos:end="37:24">
            <expr_stmt pos:start="32:13" pos:end="32:35"><expr pos:start="32:13" pos:end="32:34"><call pos:start="32:13" pos:end="32:34"><name pos:start="32:13" pos:end="32:18">tarjan</name><argument_list pos:start="32:19" pos:end="32:34">(<argument pos:start="32:20" pos:end="32:30"><expr pos:start="32:20" pos:end="32:30"><name pos:start="32:20" pos:end="32:27"><name pos:start="32:20" pos:end="32:24">edges</name><index pos:start="32:25" pos:end="32:27">[<expr pos:start="32:26" pos:end="32:26"><name pos:start="32:26" pos:end="32:26">i</name></expr>]</index></name><operator pos:start="32:28" pos:end="32:28">.</operator><name pos:start="32:29" pos:end="32:30">to</name></expr></argument>, <argument pos:start="32:33" pos:end="32:33"><expr pos:start="32:33" pos:end="32:33"><name pos:start="32:33" pos:end="32:33">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="33:13" pos:end="37:24"><if pos:start="33:13" pos:end="36:13">if <condition pos:start="33:16" pos:end="33:43">(<expr pos:start="33:17" pos:end="33:42"><name pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:19">low</name><index pos:start="33:20" pos:end="33:32">[<expr pos:start="33:21" pos:end="33:31"><name pos:start="33:21" pos:end="33:28"><name pos:start="33:21" pos:end="33:25">edges</name><index pos:start="33:26" pos:end="33:28">[<expr pos:start="33:27" pos:end="33:27"><name pos:start="33:27" pos:end="33:27">i</name></expr>]</index></name><operator pos:start="33:29" pos:end="33:29">.</operator><name pos:start="33:30" pos:end="33:31">to</name></expr>]</index></name> <operator pos:start="33:34" pos:end="33:35">&lt;=</operator> <name pos:start="33:37" pos:end="33:42"><name pos:start="33:37" pos:end="33:39">dfn</name><index pos:start="33:40" pos:end="33:42">[<expr pos:start="33:41" pos:end="33:41"><name pos:start="33:41" pos:end="33:41">u</name></expr>]</index></name></expr>)</condition> <block pos:start="33:45" pos:end="36:13">{<block_content pos:start="34:17" pos:end="35:45">
                <expr_stmt pos:start="34:17" pos:end="34:55"><expr pos:start="34:17" pos:end="34:54"><name pos:start="34:17" pos:end="34:22"><name pos:start="34:17" pos:end="34:19">low</name><index pos:start="34:20" pos:end="34:22">[<expr pos:start="34:21" pos:end="34:21"><name pos:start="34:21" pos:end="34:21">u</name></expr>]</index></name> <operator pos:start="34:24" pos:end="34:24">=</operator> <call pos:start="34:26" pos:end="34:54"><name pos:start="34:26" pos:end="34:28">min</name><argument_list pos:start="34:29" pos:end="34:54">(<argument pos:start="34:30" pos:end="34:35"><expr pos:start="34:30" pos:end="34:35"><name pos:start="34:30" pos:end="34:35"><name pos:start="34:30" pos:end="34:32">low</name><index pos:start="34:33" pos:end="34:35">[<expr pos:start="34:34" pos:end="34:34"><name pos:start="34:34" pos:end="34:34">u</name></expr>]</index></name></expr></argument>, <argument pos:start="34:38" pos:end="34:53"><expr pos:start="34:38" pos:end="34:53"><name pos:start="34:38" pos:end="34:53"><name pos:start="34:38" pos:end="34:40">low</name><index pos:start="34:41" pos:end="34:53">[<expr pos:start="34:42" pos:end="34:52"><name pos:start="34:42" pos:end="34:49"><name pos:start="34:42" pos:end="34:46">edges</name><index pos:start="34:47" pos:end="34:49">[<expr pos:start="34:48" pos:end="34:48"><name pos:start="34:48" pos:end="34:48">i</name></expr>]</index></name><operator pos:start="34:50" pos:end="34:50">.</operator><name pos:start="34:51" pos:end="34:52">to</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="35:17" pos:end="35:45"><expr pos:start="35:17" pos:end="35:44"><name pos:start="35:17" pos:end="35:23"><name pos:start="35:17" pos:end="35:20">type</name><index pos:start="35:21" pos:end="35:23">[<expr pos:start="35:22" pos:end="35:22"><name pos:start="35:22" pos:end="35:22">u</name></expr>]</index></name> <operator pos:start="35:25" pos:end="35:26">+=</operator> <name pos:start="35:28" pos:end="35:44"><name pos:start="35:28" pos:end="35:31">type</name><index pos:start="35:32" pos:end="35:44">[<expr pos:start="35:33" pos:end="35:43"><name pos:start="35:33" pos:end="35:40"><name pos:start="35:33" pos:end="35:37">edges</name><index pos:start="35:38" pos:end="35:40">[<expr pos:start="35:39" pos:end="35:39"><name pos:start="35:39" pos:end="35:39">i</name></expr>]</index></name><operator pos:start="35:41" pos:end="35:41">.</operator><name pos:start="35:42" pos:end="35:43">to</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="37:13" pos:end="37:24">else<block type="pseudo" pos:start="37:18" pos:end="37:24"><block_content pos:start="37:18" pos:end="37:24"> <expr_stmt pos:start="37:18" pos:end="37:24"><expr pos:start="37:18" pos:end="37:23"><name pos:start="37:18" pos:end="37:21">ans1</name><operator pos:start="37:22" pos:end="37:23">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="40:5" pos:end="49:5"><if pos:start="40:5" pos:end="49:5">if <condition pos:start="40:8" pos:end="40:25">(<expr pos:start="40:9" pos:end="40:24"><name pos:start="40:9" pos:end="40:14"><name pos:start="40:9" pos:end="40:11">dfn</name><index pos:start="40:12" pos:end="40:14">[<expr pos:start="40:13" pos:end="40:13"><name pos:start="40:13" pos:end="40:13">u</name></expr>]</index></name> <operator pos:start="40:16" pos:end="40:17">==</operator> <name pos:start="40:19" pos:end="40:24"><name pos:start="40:19" pos:end="40:21">low</name><index pos:start="40:22" pos:end="40:24">[<expr pos:start="40:23" pos:end="40:23"><name pos:start="40:23" pos:end="40:23">u</name></expr>]</index></name></expr>)</condition> <block pos:start="40:27" pos:end="49:5">{<block_content pos:start="41:9" pos:end="48:31">
        <decl_stmt pos:start="41:9" pos:end="41:14"><decl pos:start="41:9" pos:end="41:13"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:13">v</name></decl>;</decl_stmt>
        <expr_stmt pos:start="42:9" pos:end="42:26"><expr pos:start="42:9" pos:end="42:25"><name pos:start="42:9" pos:end="42:15"><name pos:start="42:9" pos:end="42:11">typ</name><index pos:start="42:12" pos:end="42:15">[<expr pos:start="42:13" pos:end="42:14"><name pos:start="42:13" pos:end="42:14">tp</name></expr>]</index></name> <operator pos:start="42:17" pos:end="42:17">=</operator> <name pos:start="42:19" pos:end="42:25"><name pos:start="42:19" pos:end="42:22">type</name><index pos:start="42:23" pos:end="42:25">[<expr pos:start="42:24" pos:end="42:24"><name pos:start="42:24" pos:end="42:24">u</name></expr>]</index></name></expr>;</expr_stmt>
        <do pos:start="43:9" pos:end="48:25">do <block pos:start="43:12" pos:end="48:9">{<block_content pos:start="44:13" pos:end="47:23">
            <expr_stmt pos:start="44:13" pos:end="44:25"><expr pos:start="44:13" pos:end="44:24"><name pos:start="44:13" pos:end="44:13">v</name> <operator pos:start="44:15" pos:end="44:15">=</operator> <call pos:start="44:17" pos:end="44:24"><name pos:start="44:17" pos:end="44:22"><name pos:start="44:17" pos:end="44:18">st</name><operator pos:start="44:19" pos:end="44:19">.</operator><name pos:start="44:20" pos:end="44:22">top</name></name><argument_list pos:start="44:23" pos:end="44:24">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="45:13" pos:end="45:21"><expr pos:start="45:13" pos:end="45:20"><call pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:14">st</name><operator pos:start="45:15" pos:end="45:15">.</operator><name pos:start="45:16" pos:end="45:18">pop</name></name><argument_list pos:start="45:19" pos:end="45:20">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="46:13" pos:end="46:33"><expr pos:start="46:13" pos:end="46:32"><name pos:start="46:13" pos:end="46:19"><name pos:start="46:13" pos:end="46:15">res</name><index pos:start="46:16" pos:end="46:19">[<expr pos:start="46:17" pos:end="46:18"><name pos:start="46:17" pos:end="46:18">tp</name></expr>]</index></name><operator pos:start="46:20" pos:end="46:20">.</operator><call pos:start="46:21" pos:end="46:32"><name pos:start="46:21" pos:end="46:29">push_back</name><argument_list pos:start="46:30" pos:end="46:32">(<argument pos:start="46:31" pos:end="46:31"><expr pos:start="46:31" pos:end="46:31"><name pos:start="46:31" pos:end="46:31">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="47:13" pos:end="47:23"><expr pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:17"><name pos:start="47:13" pos:end="47:14">cl</name><index pos:start="47:15" pos:end="47:17">[<expr pos:start="47:16" pos:end="47:16"><name pos:start="47:16" pos:end="47:16">v</name></expr>]</index></name> <operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:22">tp</name></expr>;</expr_stmt>
        </block_content>}</block> while <condition pos:start="48:17" pos:end="48:24">(<expr pos:start="48:18" pos:end="48:23"><name pos:start="48:18" pos:end="48:18">v</name> <operator pos:start="48:20" pos:end="48:21">!=</operator> <name pos:start="48:23" pos:end="48:23">u</name></expr>)</condition>;</do> <expr_stmt pos:start="48:27" pos:end="48:31"><expr pos:start="48:27" pos:end="48:30"><name pos:start="48:27" pos:end="48:28">tp</name><operator pos:start="48:29" pos:end="48:30">++</operator></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="51:1" pos:end="71:1"><type pos:start="51:1" pos:end="51:3"><name pos:start="51:1" pos:end="51:3">int</name></type> <name pos:start="51:5" pos:end="51:8">main</name><parameter_list pos:start="51:9" pos:end="51:10">()</parameter_list> <block pos:start="51:12" pos:end="71:1">{<block_content pos:start="52:5" pos:end="70:13">
    <decl_stmt pos:start="52:5" pos:end="52:13"><decl pos:start="52:5" pos:end="52:9"><type pos:start="52:5" pos:end="52:7"><name pos:start="52:5" pos:end="52:7">int</name></type> <name pos:start="52:9" pos:end="52:9">n</name></decl>, <decl pos:start="52:12" pos:end="52:12"><type ref="prev" pos:start="52:5" pos:end="52:7"/><name pos:start="52:12" pos:end="52:12">m</name></decl>;</decl_stmt>
    <expr_stmt pos:start="53:5" pos:end="53:27"><expr pos:start="53:5" pos:end="53:26"><call pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:9">scanf</name><argument_list pos:start="53:10" pos:end="53:26">(<argument pos:start="53:11" pos:end="53:17"><expr pos:start="53:11" pos:end="53:17"><literal type="string" pos:start="53:11" pos:end="53:17">"%d %d"</literal></expr></argument>, <argument pos:start="53:20" pos:end="53:21"><expr pos:start="53:20" pos:end="53:21"><operator pos:start="53:20" pos:end="53:20">&amp;</operator><name pos:start="53:21" pos:end="53:21">n</name></expr></argument>, <argument pos:start="53:24" pos:end="53:25"><expr pos:start="53:24" pos:end="53:25"><operator pos:start="53:24" pos:end="53:24">&amp;</operator><name pos:start="53:25" pos:end="53:25">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="54:5" pos:end="59:5">for <control pos:start="54:9" pos:end="54:32">(<init pos:start="54:10" pos:end="54:19"><decl pos:start="54:10" pos:end="54:18"><type pos:start="54:10" pos:end="54:12"><name pos:start="54:10" pos:end="54:12">int</name></type> <name pos:start="54:14" pos:end="54:14">i</name> <init pos:start="54:16" pos:end="54:18">= <expr pos:start="54:18" pos:end="54:18"><literal type="number" pos:start="54:18" pos:end="54:18">1</literal></expr></init></decl>;</init> <condition pos:start="54:21" pos:end="54:27"><expr pos:start="54:21" pos:end="54:26"><name pos:start="54:21" pos:end="54:21">i</name> <operator pos:start="54:23" pos:end="54:24">&lt;=</operator> <name pos:start="54:26" pos:end="54:26">m</name></expr>;</condition> <incr pos:start="54:29" pos:end="54:31"><expr pos:start="54:29" pos:end="54:31"><name pos:start="54:29" pos:end="54:29">i</name><operator pos:start="54:30" pos:end="54:31">++</operator></expr></incr>)</control> <block pos:start="54:34" pos:end="59:5">{<block_content pos:start="55:9" pos:end="58:18">
        <decl_stmt pos:start="55:9" pos:end="55:17"><decl pos:start="55:9" pos:end="55:13"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:13">u</name></decl>, <decl pos:start="55:16" pos:end="55:16"><type ref="prev" pos:start="55:9" pos:end="55:11"/><name pos:start="55:16" pos:end="55:16">v</name></decl>;</decl_stmt>
        <expr_stmt pos:start="56:9" pos:end="56:31"><expr pos:start="56:9" pos:end="56:30"><call pos:start="56:9" pos:end="56:30"><name pos:start="56:9" pos:end="56:13">scanf</name><argument_list pos:start="56:14" pos:end="56:30">(<argument pos:start="56:15" pos:end="56:21"><expr pos:start="56:15" pos:end="56:21"><literal type="string" pos:start="56:15" pos:end="56:21">"%d %d"</literal></expr></argument>, <argument pos:start="56:24" pos:end="56:25"><expr pos:start="56:24" pos:end="56:25"><operator pos:start="56:24" pos:end="56:24">&amp;</operator><name pos:start="56:25" pos:end="56:25">u</name></expr></argument>, <argument pos:start="56:28" pos:end="56:29"><expr pos:start="56:28" pos:end="56:29"><operator pos:start="56:28" pos:end="56:28">&amp;</operator><name pos:start="56:29" pos:end="56:29">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="57:9" pos:end="57:18"><expr pos:start="57:9" pos:end="57:17"><call pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:11">add</name><argument_list pos:start="57:12" pos:end="57:17">(<argument pos:start="57:13" pos:end="57:13"><expr pos:start="57:13" pos:end="57:13"><name pos:start="57:13" pos:end="57:13">u</name></expr></argument>, <argument pos:start="57:16" pos:end="57:16"><expr pos:start="57:16" pos:end="57:16"><name pos:start="57:16" pos:end="57:16">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="58:9" pos:end="58:18"><expr pos:start="58:9" pos:end="58:17"><call pos:start="58:9" pos:end="58:17"><name pos:start="58:9" pos:end="58:11">add</name><argument_list pos:start="58:12" pos:end="58:17">(<argument pos:start="58:13" pos:end="58:13"><expr pos:start="58:13" pos:end="58:13"><name pos:start="58:13" pos:end="58:13">v</name></expr></argument>, <argument pos:start="58:16" pos:end="58:16"><expr pos:start="58:16" pos:end="58:16"><name pos:start="58:16" pos:end="58:16">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="60:5" pos:end="62:5">for <control pos:start="60:9" pos:end="60:31">(<init pos:start="60:10" pos:end="60:19"><decl pos:start="60:10" pos:end="60:18"><type pos:start="60:10" pos:end="60:12"><name pos:start="60:10" pos:end="60:12">int</name></type> <name pos:start="60:14" pos:end="60:14">i</name> <init pos:start="60:16" pos:end="60:18">= <expr pos:start="60:18" pos:end="60:18"><literal type="number" pos:start="60:18" pos:end="60:18">0</literal></expr></init></decl>;</init> <condition pos:start="60:21" pos:end="60:26"><expr pos:start="60:21" pos:end="60:25"><name pos:start="60:21" pos:end="60:21">i</name> <operator pos:start="60:23" pos:end="60:23">&lt;</operator> <name pos:start="60:25" pos:end="60:25">n</name></expr>;</condition> <incr pos:start="60:28" pos:end="60:30"><expr pos:start="60:28" pos:end="60:30"><name pos:start="60:28" pos:end="60:28">i</name><operator pos:start="60:29" pos:end="60:30">++</operator></expr></incr>)</control> <block pos:start="60:33" pos:end="62:5">{<block_content pos:start="61:9" pos:end="61:38">
        <if_stmt pos:start="61:9" pos:end="61:38"><if pos:start="61:9" pos:end="61:38">if <condition pos:start="61:12" pos:end="61:24">(<expr pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:15">dfn</name><index pos:start="61:16" pos:end="61:18">[<expr pos:start="61:17" pos:end="61:17"><name pos:start="61:17" pos:end="61:17">i</name></expr>]</index></name> <operator pos:start="61:20" pos:end="61:21">==</operator> <literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>)</condition><block type="pseudo" pos:start="61:26" pos:end="61:38"><block_content pos:start="61:26" pos:end="61:38"> <expr_stmt pos:start="61:26" pos:end="61:38"><expr pos:start="61:26" pos:end="61:37"><call pos:start="61:26" pos:end="61:37"><name pos:start="61:26" pos:end="61:31">tarjan</name><argument_list pos:start="61:32" pos:end="61:37">(<argument pos:start="61:33" pos:end="61:33"><expr pos:start="61:33" pos:end="61:33"><name pos:start="61:33" pos:end="61:33">i</name></expr></argument>, <argument pos:start="61:36" pos:end="61:36"><expr pos:start="61:36" pos:end="61:36"><name pos:start="61:36" pos:end="61:36">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <for pos:start="63:5" pos:end="65:5">for <control pos:start="63:9" pos:end="63:39">(<init pos:start="63:10" pos:end="63:19"><decl pos:start="63:10" pos:end="63:18"><type pos:start="63:10" pos:end="63:12"><name pos:start="63:10" pos:end="63:12">int</name></type> <name pos:start="63:14" pos:end="63:14">i</name> <init pos:start="63:16" pos:end="63:18">= <expr pos:start="63:18" pos:end="63:18"><literal type="number" pos:start="63:18" pos:end="63:18">1</literal></expr></init></decl>;</init> <condition pos:start="63:21" pos:end="63:31"><expr pos:start="63:21" pos:end="63:30"><name pos:start="63:21" pos:end="63:21">i</name> <operator pos:start="63:23" pos:end="63:24">&lt;=</operator> <name pos:start="63:26" pos:end="63:26">m</name> <operator pos:start="63:28" pos:end="63:28">+</operator> <name pos:start="63:30" pos:end="63:30">m</name></expr>;</condition> <incr pos:start="63:33" pos:end="63:38"><expr pos:start="63:33" pos:end="63:38"><name pos:start="63:33" pos:end="63:33">i</name> <operator pos:start="63:35" pos:end="63:36">+=</operator> <literal type="number" pos:start="63:38" pos:end="63:38">2</literal></expr></incr>)</control> <block pos:start="63:41" pos:end="65:5">{<block_content pos:start="64:9" pos:end="64:88">
        <if_stmt pos:start="64:9" pos:end="64:88"><if pos:start="64:9" pos:end="64:88">if <condition pos:start="64:12" pos:end="64:80">(<expr pos:start="64:13" pos:end="64:79"><name pos:start="64:13" pos:end="64:27"><name pos:start="64:13" pos:end="64:14">cl</name><index pos:start="64:15" pos:end="64:27">[<expr pos:start="64:16" pos:end="64:26"><name pos:start="64:16" pos:end="64:23"><name pos:start="64:16" pos:end="64:20">edges</name><index pos:start="64:21" pos:end="64:23">[<expr pos:start="64:22" pos:end="64:22"><name pos:start="64:22" pos:end="64:22">i</name></expr>]</index></name><operator pos:start="64:24" pos:end="64:24">.</operator><name pos:start="64:25" pos:end="64:26">to</name></expr>]</index></name> <operator pos:start="64:29" pos:end="64:30">==</operator> <name pos:start="64:32" pos:end="64:50"><name pos:start="64:32" pos:end="64:33">cl</name><index pos:start="64:34" pos:end="64:50">[<expr pos:start="64:35" pos:end="64:49"><name pos:start="64:35" pos:end="64:46"><name pos:start="64:35" pos:end="64:39">edges</name><index pos:start="64:40" pos:end="64:46">[<expr pos:start="64:41" pos:end="64:45"><name pos:start="64:41" pos:end="64:41">i</name> <operator pos:start="64:43" pos:end="64:43">+</operator> <literal type="number" pos:start="64:45" pos:end="64:45">1</literal></expr>]</index></name><operator pos:start="64:47" pos:end="64:47">.</operator><name pos:start="64:48" pos:end="64:49">to</name></expr>]</index></name> <operator pos:start="64:52" pos:end="64:53">&amp;&amp;</operator> <name pos:start="64:55" pos:end="64:74"><name pos:start="64:55" pos:end="64:57">typ</name><index pos:start="64:58" pos:end="64:74">[<expr pos:start="64:59" pos:end="64:73"><name pos:start="64:59" pos:end="64:73"><name pos:start="64:59" pos:end="64:60">cl</name><index pos:start="64:61" pos:end="64:73">[<expr pos:start="64:62" pos:end="64:72"><name pos:start="64:62" pos:end="64:69"><name pos:start="64:62" pos:end="64:66">edges</name><index pos:start="64:67" pos:end="64:69">[<expr pos:start="64:68" pos:end="64:68"><name pos:start="64:68" pos:end="64:68">i</name></expr>]</index></name><operator pos:start="64:70" pos:end="64:70">.</operator><name pos:start="64:71" pos:end="64:72">to</name></expr>]</index></name></expr>]</index></name> <operator pos:start="64:76" pos:end="64:77">&gt;=</operator> <literal type="number" pos:start="64:79" pos:end="64:79">2</literal></expr>)</condition><block type="pseudo" pos:start="64:82" pos:end="64:88"><block_content pos:start="64:82" pos:end="64:88"> <expr_stmt pos:start="64:82" pos:end="64:88"><expr pos:start="64:82" pos:end="64:87"><name pos:start="64:82" pos:end="64:85">ans2</name><operator pos:start="64:86" pos:end="64:87">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    
    
    
    <expr_stmt pos:start="69:5" pos:end="69:34"><expr pos:start="69:5" pos:end="69:33"><call pos:start="69:5" pos:end="69:33"><name pos:start="69:5" pos:end="69:10">printf</name><argument_list pos:start="69:11" pos:end="69:33">(<argument pos:start="69:12" pos:end="69:20"><expr pos:start="69:12" pos:end="69:20"><literal type="string" pos:start="69:12" pos:end="69:20">"%d %d\n"</literal></expr></argument>, <argument pos:start="69:23" pos:end="69:26"><expr pos:start="69:23" pos:end="69:26"><name pos:start="69:23" pos:end="69:26">ans1</name></expr></argument>, <argument pos:start="69:29" pos:end="69:32"><expr pos:start="69:29" pos:end="69:32"><name pos:start="69:29" pos:end="69:32">ans2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="70:5" pos:end="70:13">return <expr pos:start="70:12" pos:end="70:12"><literal type="number" pos:start="70:12" pos:end="70:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
