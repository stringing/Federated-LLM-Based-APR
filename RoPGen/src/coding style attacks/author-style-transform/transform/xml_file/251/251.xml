<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/251/251.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<function pos:start="4:1" pos:end="15:1"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:8">main</name><parameter_list pos:start="4:9" pos:end="4:10">()</parameter_list><block pos:start="4:11" pos:end="15:1">{<block_content pos:start="5:5" pos:end="14:13">
    <expr_stmt pos:start="5:5" pos:end="5:39"><expr pos:start="5:5" pos:end="5:38"><call pos:start="5:5" pos:end="5:38"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:38">(<argument pos:start="5:13" pos:end="5:25"><expr pos:start="5:13" pos:end="5:25"><literal type="string" pos:start="5:13" pos:end="5:25">"elevator.in"</literal></expr></argument>, <argument pos:start="5:28" pos:end="5:30"><expr pos:start="5:28" pos:end="5:30"><literal type="string" pos:start="5:28" pos:end="5:30">"r"</literal></expr></argument>, <argument pos:start="5:33" pos:end="5:37"><expr pos:start="5:33" pos:end="5:37"><name pos:start="5:33" pos:end="5:37">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:41"><expr pos:start="6:5" pos:end="6:40"><call pos:start="6:5" pos:end="6:40"><name pos:start="6:5" pos:end="6:11">freopen</name><argument_list pos:start="6:12" pos:end="6:40">(<argument pos:start="6:13" pos:end="6:26"><expr pos:start="6:13" pos:end="6:26"><literal type="string" pos:start="6:13" pos:end="6:26">"elevator.out"</literal></expr></argument>, <argument pos:start="6:29" pos:end="6:31"><expr pos:start="6:29" pos:end="6:31"><literal type="string" pos:start="6:29" pos:end="6:31">"w"</literal></expr></argument>, <argument pos:start="6:34" pos:end="6:39"><expr pos:start="6:34" pos:end="6:39"><name pos:start="6:34" pos:end="6:39">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>,<decl pos:start="7:11" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:19"><name pos:start="7:11" pos:end="7:11">a</name><index pos:start="7:12" pos:end="7:19">[<expr pos:start="7:13" pos:end="7:18"><literal type="number" pos:start="7:13" pos:end="7:18">100000</literal></expr>]</index></name></decl>,<decl pos:start="7:21" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:22">i0</name><init pos:start="7:23" pos:end="7:24">=<expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:11"><expr pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:7">cin</name><operator pos:start="8:8" pos:end="8:9">&gt;&gt;</operator><name pos:start="8:10" pos:end="8:10">n</name></expr>;</expr_stmt>
    <for pos:start="9:5" pos:end="11:5">for<control pos:start="9:8" pos:end="9:24">(<init pos:start="9:9" pos:end="9:16"><decl pos:start="9:9" pos:end="9:15"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">i</name><init pos:start="9:14" pos:end="9:15">=<expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</init><condition pos:start="9:17" pos:end="9:20"><expr pos:start="9:17" pos:end="9:19"><name pos:start="9:17" pos:end="9:17">i</name><operator pos:start="9:18" pos:end="9:18">&lt;</operator><name pos:start="9:19" pos:end="9:19">n</name></expr>;</condition><incr pos:start="9:21" pos:end="9:23"><expr pos:start="9:21" pos:end="9:23"><name pos:start="9:21" pos:end="9:21">i</name><operator pos:start="9:22" pos:end="9:23">++</operator></expr></incr>)</control><block pos:start="9:25" pos:end="11:5">{<block_content pos:start="10:9" pos:end="10:18">
        <expr_stmt pos:start="10:9" pos:end="10:18"><expr pos:start="10:9" pos:end="10:17"><name pos:start="10:9" pos:end="10:11">cin</name><operator pos:start="10:12" pos:end="10:13">&gt;&gt;</operator><name pos:start="10:14" pos:end="10:17"><name pos:start="10:14" pos:end="10:14">a</name><index pos:start="10:15" pos:end="10:17">[<expr pos:start="10:16" pos:end="10:16"><name pos:start="10:16" pos:end="10:16">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="12:5" pos:end="12:16"><expr pos:start="12:5" pos:end="12:15"><call pos:start="12:5" pos:end="12:15"><name pos:start="12:5" pos:end="12:8">sort</name><argument_list pos:start="12:9" pos:end="12:15">(<argument pos:start="12:10" pos:end="12:10"><expr pos:start="12:10" pos:end="12:10"><name pos:start="12:10" pos:end="12:10">a</name></expr></argument>,<argument pos:start="12:12" pos:end="12:14"><expr pos:start="12:12" pos:end="12:14"><name pos:start="12:12" pos:end="12:12">a</name><operator pos:start="12:13" pos:end="12:13">+</operator><name pos:start="12:14" pos:end="12:14">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:8">cout</name><operator pos:start="13:9" pos:end="13:10">&lt;&lt;</operator><name pos:start="13:11" pos:end="13:16"><name pos:start="13:11" pos:end="13:11">a</name><index pos:start="13:12" pos:end="13:16">[<expr pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:13">n</name><operator pos:start="13:14" pos:end="13:14">-</operator><literal type="number" pos:start="13:15" pos:end="13:15">1</literal></expr>]</index></name><operator pos:start="13:17" pos:end="13:17">*</operator><literal type="number" pos:start="13:18" pos:end="13:19">9</literal><operator pos:start="13:19" pos:end="13:19">+</operator><name pos:start="13:20" pos:end="13:20">n</name><operator pos:start="13:21" pos:end="13:21">*</operator><literal type="number" pos:start="13:22" pos:end="13:23">3</literal><operator pos:start="13:23" pos:end="13:23">+</operator><name pos:start="13:24" pos:end="13:24">n</name><operator pos:start="13:25" pos:end="13:25">*</operator><literal type="number" pos:start="13:26" pos:end="13:26">2</literal><operator pos:start="13:27" pos:end="13:28">&lt;&lt;</operator><name pos:start="13:29" pos:end="13:32">endl</name></expr>;</expr_stmt>
    <return pos:start="14:5" pos:end="14:13">return <expr pos:start="14:12" pos:end="14:12"><literal type="number" pos:start="14:12" pos:end="14:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
