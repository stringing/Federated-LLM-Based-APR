<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/56/56.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;cstdio&gt;</cpp:file></cpp:include>

<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:20"><decl pos:start="5:1" pos:end="5:19"><type pos:start="5:1" pos:end="5:9"><specifier pos:start="5:1" pos:end="5:5">const</specifier> <name pos:start="5:7" pos:end="5:9">int</name></type> <name pos:start="5:11" pos:end="5:14">maxn</name> <init pos:start="5:16" pos:end="5:19">= <expr pos:start="5:18" pos:end="5:19"><literal type="number" pos:start="5:18" pos:end="5:19">35</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:6"><decl pos:start="6:1" pos:end="6:5"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:25"><decl pos:start="7:1" pos:end="7:13"><type pos:start="7:1" pos:end="7:3"><name pos:start="7:1" pos:end="7:3">int</name></type> <name pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:7">mid</name><index pos:start="7:8" pos:end="7:13">[<expr pos:start="7:9" pos:end="7:12"><name pos:start="7:9" pos:end="7:12">maxn</name></expr>]</index></name></decl>, <decl pos:start="7:16" pos:end="7:24"><type ref="prev" pos:start="7:1" pos:end="7:3"/><name pos:start="7:16" pos:end="7:24"><name pos:start="7:16" pos:end="7:18">las</name><index pos:start="7:19" pos:end="7:24">[<expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:25"><decl pos:start="8:1" pos:end="8:13"><type pos:start="8:1" pos:end="8:3"><name pos:start="8:1" pos:end="8:3">int</name></type> <name pos:start="8:5" pos:end="8:13"><name pos:start="8:5" pos:end="8:7">lef</name><index pos:start="8:8" pos:end="8:13">[<expr pos:start="8:9" pos:end="8:12"><name pos:start="8:9" pos:end="8:12">maxn</name></expr>]</index></name></decl>, <decl pos:start="8:16" pos:end="8:24"><type ref="prev" pos:start="8:1" pos:end="8:3"/><name pos:start="8:16" pos:end="8:24"><name pos:start="8:16" pos:end="8:18">rig</name><index pos:start="8:19" pos:end="8:24">[<expr pos:start="8:20" pos:end="8:23"><name pos:start="8:20" pos:end="8:23">maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="9:1" pos:end="9:14"><decl pos:start="9:1" pos:end="9:13"><type pos:start="9:1" pos:end="9:3"><name pos:start="9:1" pos:end="9:3">int</name></type> <name pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:7">num</name><index pos:start="9:8" pos:end="9:13">[<expr pos:start="9:9" pos:end="9:12"><literal type="number" pos:start="9:9" pos:end="9:12">1050</literal></expr>]</index></name></decl>;</decl_stmt>

<function pos:start="11:1" pos:end="21:1"><type pos:start="11:1" pos:end="11:3"><name pos:start="11:1" pos:end="11:3">int</name></type> <name pos:start="11:5" pos:end="11:9">solve</name> <parameter_list pos:start="11:11" pos:end="11:42">(<parameter pos:start="11:12" pos:end="11:17"><decl pos:start="11:12" pos:end="11:17"><type pos:start="11:12" pos:end="11:17"><name pos:start="11:12" pos:end="11:14">int</name></type> <name pos:start="11:16" pos:end="11:17">l1</name></decl></parameter>, <parameter pos:start="11:20" pos:end="11:25"><decl pos:start="11:20" pos:end="11:25"><type pos:start="11:20" pos:end="11:25"><name pos:start="11:20" pos:end="11:22">int</name></type> <name pos:start="11:24" pos:end="11:25">r1</name></decl></parameter>, <parameter pos:start="11:28" pos:end="11:33"><decl pos:start="11:28" pos:end="11:33"><type pos:start="11:28" pos:end="11:33"><name pos:start="11:28" pos:end="11:30">int</name></type> <name pos:start="11:32" pos:end="11:33">l2</name></decl></parameter>, <parameter pos:start="11:36" pos:end="11:41"><decl pos:start="11:36" pos:end="11:41"><type pos:start="11:36" pos:end="11:41"><name pos:start="11:36" pos:end="11:38">int</name></type> <name pos:start="11:40" pos:end="11:41">r2</name></decl></parameter>)</parameter_list> <block pos:start="11:44" pos:end="21:1">{<block_content pos:start="12:5" pos:end="20:14">
    <if_stmt pos:start="12:5" pos:end="14:5"><if pos:start="12:5" pos:end="14:5">if <condition pos:start="12:8" pos:end="12:16">(<expr pos:start="12:9" pos:end="12:15"><name pos:start="12:9" pos:end="12:10">l1</name> <operator pos:start="12:12" pos:end="12:12">&gt;</operator> <name pos:start="12:14" pos:end="12:15">r1</name></expr>)</condition> <block pos:start="12:18" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:17">
        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">rt</name> <init pos:start="15:12" pos:end="15:20">= <expr pos:start="15:14" pos:end="15:20"><name pos:start="15:14" pos:end="15:20"><name pos:start="15:14" pos:end="15:16">las</name><index pos:start="15:17" pos:end="15:20">[<expr pos:start="15:18" pos:end="15:19"><name pos:start="15:18" pos:end="15:19">r2</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="16:5" pos:end="16:20"><decl pos:start="16:5" pos:end="16:19"><type pos:start="16:5" pos:end="16:7"><name pos:start="16:5" pos:end="16:7">int</name></type> <name pos:start="16:9" pos:end="16:9">p</name> <init pos:start="16:11" pos:end="16:19">= <expr pos:start="16:13" pos:end="16:19"><name pos:start="16:13" pos:end="16:19"><name pos:start="16:13" pos:end="16:15">num</name><index pos:start="16:16" pos:end="16:19">[<expr pos:start="16:17" pos:end="16:18"><name pos:start="16:17" pos:end="16:18">rt</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">lenl</name> <init pos:start="17:14" pos:end="17:21">= <expr pos:start="17:16" pos:end="17:21"><name pos:start="17:16" pos:end="17:16">p</name> <operator pos:start="17:18" pos:end="17:18">-</operator> <name pos:start="17:20" pos:end="17:21">l1</name></expr></init></decl>, <decl pos:start="17:24" pos:end="17:36"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:24" pos:end="17:27">lenr</name> <init pos:start="17:29" pos:end="17:36">= <expr pos:start="17:31" pos:end="17:36"><name pos:start="17:31" pos:end="17:32">r1</name> <operator pos:start="17:34" pos:end="17:34">-</operator> <name pos:start="17:36" pos:end="17:36">p</name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:50"><expr pos:start="18:5" pos:end="18:49"><name pos:start="18:5" pos:end="18:11"><name pos:start="18:5" pos:end="18:7">lef</name><index pos:start="18:8" pos:end="18:11">[<expr pos:start="18:9" pos:end="18:10"><name pos:start="18:9" pos:end="18:10">rt</name></expr>]</index></name> <operator pos:start="18:13" pos:end="18:13">=</operator> <call pos:start="18:15" pos:end="18:49"><name pos:start="18:15" pos:end="18:19">solve</name><argument_list pos:start="18:20" pos:end="18:49">(<argument pos:start="18:21" pos:end="18:22"><expr pos:start="18:21" pos:end="18:22"><name pos:start="18:21" pos:end="18:22">l1</name></expr></argument>, <argument pos:start="18:25" pos:end="18:29"><expr pos:start="18:25" pos:end="18:29"><name pos:start="18:25" pos:end="18:25">p</name> <operator pos:start="18:27" pos:end="18:27">-</operator> <literal type="number" pos:start="18:29" pos:end="18:29">1</literal></expr></argument>, <argument pos:start="18:32" pos:end="18:33"><expr pos:start="18:32" pos:end="18:33"><name pos:start="18:32" pos:end="18:33">l2</name></expr></argument>, <argument pos:start="18:36" pos:end="18:48"><expr pos:start="18:36" pos:end="18:48"><name pos:start="18:36" pos:end="18:37">l2</name> <operator pos:start="18:39" pos:end="18:39">+</operator> <name pos:start="18:41" pos:end="18:44">lenl</name> <operator pos:start="18:46" pos:end="18:46">-</operator> <literal type="number" pos:start="18:48" pos:end="18:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:7">rig</name><index pos:start="19:8" pos:end="19:11">[<expr pos:start="19:9" pos:end="19:10"><name pos:start="19:9" pos:end="19:10">rt</name></expr>]</index></name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:49"><name pos:start="19:15" pos:end="19:19">solve</name><argument_list pos:start="19:20" pos:end="19:49">(<argument pos:start="19:21" pos:end="19:25"><expr pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">p</name> <operator pos:start="19:23" pos:end="19:23">+</operator> <literal type="number" pos:start="19:25" pos:end="19:25">1</literal></expr></argument>, <argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><name pos:start="19:28" pos:end="19:29">r1</name></expr></argument>, <argument pos:start="19:32" pos:end="19:40"><expr pos:start="19:32" pos:end="19:40"><name pos:start="19:32" pos:end="19:33">r2</name> <operator pos:start="19:35" pos:end="19:35">-</operator> <name pos:start="19:37" pos:end="19:40">lenr</name></expr></argument>, <argument pos:start="19:43" pos:end="19:48"><expr pos:start="19:43" pos:end="19:48"><name pos:start="19:43" pos:end="19:44">r2</name> <operator pos:start="19:46" pos:end="19:46">-</operator> <literal type="number" pos:start="19:48" pos:end="19:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="20:5" pos:end="20:14">return <expr pos:start="20:12" pos:end="20:13"><name pos:start="20:12" pos:end="20:13">rt</name></expr>;</return>
</block_content>}</block></function>

<function pos:start="23:1" pos:end="44:1"><type pos:start="23:1" pos:end="23:3"><name pos:start="23:1" pos:end="23:3">int</name></type> <name pos:start="23:5" pos:end="23:8">main</name> <parameter_list pos:start="23:10" pos:end="23:11">()</parameter_list> <block pos:start="23:13" pos:end="44:1">{<block_content pos:start="24:5" pos:end="43:13">
    <expr_stmt pos:start="24:5" pos:end="24:35"><expr pos:start="24:5" pos:end="24:34"><call pos:start="24:5" pos:end="24:34"><name pos:start="24:5" pos:end="24:11">freopen</name><argument_list pos:start="24:12" pos:end="24:34">(<argument pos:start="24:13" pos:end="24:21"><expr pos:start="24:13" pos:end="24:21"><literal type="string" pos:start="24:13" pos:end="24:21">"sort.in"</literal></expr></argument>, <argument pos:start="24:24" pos:end="24:26"><expr pos:start="24:24" pos:end="24:26"><literal type="string" pos:start="24:24" pos:end="24:26">"r"</literal></expr></argument>, <argument pos:start="24:29" pos:end="24:33"><expr pos:start="24:29" pos:end="24:33"><name pos:start="24:29" pos:end="24:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><call pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:11">freopen</name><argument_list pos:start="25:12" pos:end="25:36">(<argument pos:start="25:13" pos:end="25:22"><expr pos:start="25:13" pos:end="25:22"><literal type="string" pos:start="25:13" pos:end="25:22">"sort.out"</literal></expr></argument>, <argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><literal type="string" pos:start="25:25" pos:end="25:27">"w"</literal></expr></argument>, <argument pos:start="25:30" pos:end="25:35"><expr pos:start="25:30" pos:end="25:35"><name pos:start="25:30" pos:end="25:35">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:13"><expr pos:start="26:5" pos:end="26:12"><name pos:start="26:5" pos:end="26:7">cin</name> <operator pos:start="26:9" pos:end="26:10">&gt;&gt;</operator> <name pos:start="26:12" pos:end="26:12">n</name></expr>;</expr_stmt>
    <for pos:start="27:5" pos:end="29:5">for <control pos:start="27:9" pos:end="27:32">(<init pos:start="27:10" pos:end="27:19"><decl pos:start="27:10" pos:end="27:18"><type pos:start="27:10" pos:end="27:12"><name pos:start="27:10" pos:end="27:12">int</name></type> <name pos:start="27:14" pos:end="27:14">i</name> <init pos:start="27:16" pos:end="27:18">= <expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">1</literal></expr></init></decl>;</init> <condition pos:start="27:21" pos:end="27:27"><expr pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:21">i</name> <operator pos:start="27:23" pos:end="27:24">&lt;=</operator> <name pos:start="27:26" pos:end="27:26">n</name></expr>;</condition> <incr pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:29">i</name><operator pos:start="27:30" pos:end="27:31">++</operator></expr></incr>)</control> <block pos:start="27:34" pos:end="29:5">{<block_content pos:start="28:9" pos:end="28:22">
        <expr_stmt pos:start="28:9" pos:end="28:22"><expr pos:start="28:9" pos:end="28:21"><name pos:start="28:9" pos:end="28:11">cin</name> <operator pos:start="28:13" pos:end="28:14">&gt;&gt;</operator> <name pos:start="28:16" pos:end="28:21"><name pos:start="28:16" pos:end="28:18">mid</name><index pos:start="28:19" pos:end="28:21">[<expr pos:start="28:20" pos:end="28:20"><name pos:start="28:20" pos:end="28:20">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="30:5" pos:end="32:5">for <control pos:start="30:9" pos:end="30:32">(<init pos:start="30:10" pos:end="30:19"><decl pos:start="30:10" pos:end="30:18"><type pos:start="30:10" pos:end="30:12"><name pos:start="30:10" pos:end="30:12">int</name></type> <name pos:start="30:14" pos:end="30:14">i</name> <init pos:start="30:16" pos:end="30:18">= <expr pos:start="30:18" pos:end="30:18"><literal type="number" pos:start="30:18" pos:end="30:18">1</literal></expr></init></decl>;</init> <condition pos:start="30:21" pos:end="30:27"><expr pos:start="30:21" pos:end="30:26"><name pos:start="30:21" pos:end="30:21">i</name> <operator pos:start="30:23" pos:end="30:24">&lt;=</operator> <name pos:start="30:26" pos:end="30:26">n</name></expr>;</condition> <incr pos:start="30:29" pos:end="30:31"><expr pos:start="30:29" pos:end="30:31"><name pos:start="30:29" pos:end="30:29">i</name><operator pos:start="30:30" pos:end="30:31">++</operator></expr></incr>)</control> <block pos:start="30:34" pos:end="32:5">{<block_content pos:start="31:9" pos:end="31:22">
        <expr_stmt pos:start="31:9" pos:end="31:22"><expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:11">cin</name> <operator pos:start="31:13" pos:end="31:14">&gt;&gt;</operator> <name pos:start="31:16" pos:end="31:21"><name pos:start="31:16" pos:end="31:18">las</name><index pos:start="31:19" pos:end="31:21">[<expr pos:start="31:20" pos:end="31:20"><name pos:start="31:20" pos:end="31:20">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="33:5" pos:end="35:5">for <control pos:start="33:9" pos:end="33:32">(<init pos:start="33:10" pos:end="33:19"><decl pos:start="33:10" pos:end="33:18"><type pos:start="33:10" pos:end="33:12"><name pos:start="33:10" pos:end="33:12">int</name></type> <name pos:start="33:14" pos:end="33:14">i</name> <init pos:start="33:16" pos:end="33:18">= <expr pos:start="33:18" pos:end="33:18"><literal type="number" pos:start="33:18" pos:end="33:18">1</literal></expr></init></decl>;</init> <condition pos:start="33:21" pos:end="33:27"><expr pos:start="33:21" pos:end="33:26"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:24">&lt;=</operator> <name pos:start="33:26" pos:end="33:26">n</name></expr>;</condition> <incr pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:29">i</name><operator pos:start="33:30" pos:end="33:31">++</operator></expr></incr>)</control> <block pos:start="33:34" pos:end="35:5">{<block_content pos:start="34:9" pos:end="34:24">
        <expr_stmt pos:start="34:9" pos:end="34:24"><expr pos:start="34:9" pos:end="34:23"><name pos:start="34:9" pos:end="34:19"><name pos:start="34:9" pos:end="34:11">num</name><index pos:start="34:12" pos:end="34:19">[<expr pos:start="34:13" pos:end="34:18"><name pos:start="34:13" pos:end="34:18"><name pos:start="34:13" pos:end="34:15">mid</name><index pos:start="34:16" pos:end="34:18">[<expr pos:start="34:17" pos:end="34:17"><name pos:start="34:17" pos:end="34:17">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="34:21" pos:end="34:21">=</operator> <name pos:start="34:23" pos:end="34:23">i</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="36:5" pos:end="36:22"><expr pos:start="36:5" pos:end="36:21"><call pos:start="36:5" pos:end="36:21"><name pos:start="36:5" pos:end="36:9">solve</name><argument_list pos:start="36:10" pos:end="36:21">(<argument pos:start="36:11" pos:end="36:11"><expr pos:start="36:11" pos:end="36:11"><literal type="number" pos:start="36:11" pos:end="36:11">1</literal></expr></argument>, <argument pos:start="36:14" pos:end="36:14"><expr pos:start="36:14" pos:end="36:14"><name pos:start="36:14" pos:end="36:14">n</name></expr></argument>, <argument pos:start="36:17" pos:end="36:17"><expr pos:start="36:17" pos:end="36:17"><literal type="number" pos:start="36:17" pos:end="36:17">1</literal></expr></argument>, <argument pos:start="36:20" pos:end="36:20"><expr pos:start="36:20" pos:end="36:20"><name pos:start="36:20" pos:end="36:20">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="37:5" pos:end="41:5">for <control pos:start="37:9" pos:end="37:35">(<init pos:start="37:10" pos:end="37:19"><decl pos:start="37:10" pos:end="37:18"><type pos:start="37:10" pos:end="37:12"><name pos:start="37:10" pos:end="37:12">int</name></type> <name pos:start="37:14" pos:end="37:14">i</name> <init pos:start="37:16" pos:end="37:18">= <expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">1</literal></expr></init></decl>;</init> <condition pos:start="37:21" pos:end="37:30"><expr pos:start="37:21" pos:end="37:29"><name pos:start="37:21" pos:end="37:21">i</name> <operator pos:start="37:23" pos:end="37:24">&lt;=</operator> <literal type="number" pos:start="37:26" pos:end="37:29">1000</literal></expr>;</condition> <incr pos:start="37:32" pos:end="37:34"><expr pos:start="37:32" pos:end="37:34"><name pos:start="37:32" pos:end="37:32">i</name><operator pos:start="37:33" pos:end="37:34">++</operator></expr></incr>)</control> <block pos:start="37:37" pos:end="41:5">{<block_content pos:start="38:9" pos:end="40:9">
        <if_stmt pos:start="38:9" pos:end="40:9"><if pos:start="38:9" pos:end="40:9">if <condition pos:start="38:12" pos:end="38:19">(<expr pos:start="38:13" pos:end="38:18"><name pos:start="38:13" pos:end="38:18"><name pos:start="38:13" pos:end="38:15">num</name><index pos:start="38:16" pos:end="38:18">[<expr pos:start="38:17" pos:end="38:17"><name pos:start="38:17" pos:end="38:17">i</name></expr>]</index></name></expr>)</condition> <block pos:start="38:21" pos:end="40:9">{<block_content pos:start="39:13" pos:end="39:52">
            <expr_stmt pos:start="39:13" pos:end="39:52"><expr pos:start="39:13" pos:end="39:51"><name pos:start="39:13" pos:end="39:16">cout</name> <operator pos:start="39:18" pos:end="39:19">&lt;&lt;</operator> <name pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:23">lef</name><index pos:start="39:24" pos:end="39:26">[<expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">i</name></expr>]</index></name> <operator pos:start="39:28" pos:end="39:29">&lt;&lt;</operator> <literal type="string" pos:start="39:31" pos:end="39:33">" "</literal> <operator pos:start="39:35" pos:end="39:36">&lt;&lt;</operator> <name pos:start="39:38" pos:end="39:43"><name pos:start="39:38" pos:end="39:40">rig</name><index pos:start="39:41" pos:end="39:43">[<expr pos:start="39:42" pos:end="39:42"><name pos:start="39:42" pos:end="39:42">i</name></expr>]</index></name> <operator pos:start="39:45" pos:end="39:46">&lt;&lt;</operator> <name pos:start="39:48" pos:end="39:51">endl</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    
    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
