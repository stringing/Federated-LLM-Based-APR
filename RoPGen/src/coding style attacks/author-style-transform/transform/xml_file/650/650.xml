<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/650/650.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:36"><decl pos:start="3:1" pos:end="3:17"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">ans</name> <init pos:start="3:9" pos:end="3:17">= <expr pos:start="3:11" pos:end="3:17"><name pos:start="3:11" pos:end="3:17">INT_MAX</name></expr></init></decl>,<decl pos:start="3:19" pos:end="3:19"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:19" pos:end="3:19">n</name></decl>,<decl pos:start="3:21" pos:end="3:25"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:21" pos:end="3:25">shelf</name></decl>,<decl pos:start="3:27" pos:end="3:35"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:27" pos:end="3:35"><name pos:start="3:27" pos:end="3:31">hight</name><index pos:start="3:32" pos:end="3:35">[<expr pos:start="3:33" pos:end="3:34"><literal type="number" pos:start="3:33" pos:end="3:34">30</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="14:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">void</name></type> <name pos:start="4:6" pos:end="4:8">dfs</name><parameter_list pos:start="4:9" pos:end="4:23">(<parameter pos:start="4:10" pos:end="4:14"><decl pos:start="4:10" pos:end="4:14"><type pos:start="4:10" pos:end="4:14"><name pos:start="4:10" pos:end="4:12">int</name></type> <name pos:start="4:14" pos:end="4:14">k</name></decl></parameter>,<parameter pos:start="4:16" pos:end="4:22"><decl pos:start="4:16" pos:end="4:22"><type pos:start="4:16" pos:end="4:22"><name pos:start="4:16" pos:end="4:18">int</name></type> <name pos:start="4:20" pos:end="4:22">sum</name></decl></parameter>)</parameter_list><block pos:start="4:24" pos:end="14:1">{<block_content pos:start="5:5" pos:end="13:17">
    <if_stmt pos:start="5:5" pos:end="10:5"><if pos:start="5:5" pos:end="10:5">if<condition pos:start="5:7" pos:end="5:13">(<expr pos:start="5:8" pos:end="5:12"><name pos:start="5:8" pos:end="5:8">k</name> <operator pos:start="5:10" pos:end="5:10">&gt;</operator> <name pos:start="5:12" pos:end="5:12">n</name></expr>)</condition><block pos:start="5:14" pos:end="10:5">{<block_content pos:start="6:9" pos:end="9:15">
        <if_stmt pos:start="6:9" pos:end="8:9"><if pos:start="6:9" pos:end="8:9">if<condition pos:start="6:11" pos:end="6:21">(<expr pos:start="6:12" pos:end="6:20"><name pos:start="6:12" pos:end="6:14">sum</name> <operator pos:start="6:16" pos:end="6:16">&lt;</operator> <name pos:start="6:18" pos:end="6:20">ans</name></expr>)</condition><block pos:start="6:22" pos:end="8:9">{<block_content pos:start="7:13" pos:end="7:22">
            <expr_stmt pos:start="7:13" pos:end="7:22"><expr pos:start="7:13" pos:end="7:21"><name pos:start="7:13" pos:end="7:15">ans</name> <operator pos:start="7:17" pos:end="7:17">=</operator> <name pos:start="7:19" pos:end="7:21">sum</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return pos:start="9:9" pos:end="9:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="11:5" pos:end="11:26"><if pos:start="11:5" pos:end="11:26">if<condition pos:start="11:7" pos:end="11:18">(<expr pos:start="11:8" pos:end="11:17"><name pos:start="11:8" pos:end="11:10">sum</name> <operator pos:start="11:12" pos:end="11:13">&gt;=</operator> <name pos:start="11:15" pos:end="11:17">ans</name></expr>)</condition><block type="pseudo" pos:start="11:20" pos:end="11:26"><block_content pos:start="11:20" pos:end="11:26"> <return pos:start="11:20" pos:end="11:26">return;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:28"><expr pos:start="12:5" pos:end="12:27"><call pos:start="12:5" pos:end="12:27"><name pos:start="12:5" pos:end="12:7">dfs</name><argument_list pos:start="12:8" pos:end="12:27">(<argument pos:start="12:9" pos:end="12:11"><expr pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:9">k</name><operator pos:start="12:10" pos:end="12:10">+</operator><literal type="number" pos:start="12:11" pos:end="12:11">1</literal></expr></argument>,<argument pos:start="12:13" pos:end="12:26"><expr pos:start="12:13" pos:end="12:26"><name pos:start="12:13" pos:end="12:15">sum</name> <operator pos:start="12:17" pos:end="12:17">+</operator> <name pos:start="12:19" pos:end="12:26"><name pos:start="12:19" pos:end="12:23">hight</name><index pos:start="12:24" pos:end="12:26">[<expr pos:start="12:25" pos:end="12:25"><name pos:start="12:25" pos:end="12:25">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><call pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:7">dfs</name><argument_list pos:start="13:8" pos:end="13:16">(<argument pos:start="13:9" pos:end="13:11"><expr pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:9">k</name><operator pos:start="13:10" pos:end="13:10">+</operator><literal type="number" pos:start="13:11" pos:end="13:11">1</literal></expr></argument>,<argument pos:start="13:13" pos:end="13:15"><expr pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:15">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="15:1" pos:end="27:1"><type pos:start="15:1" pos:end="15:3"><name pos:start="15:1" pos:end="15:3">int</name></type> <name pos:start="15:5" pos:end="15:8">main</name><parameter_list pos:start="15:9" pos:end="15:10">()</parameter_list><block pos:start="15:11" pos:end="27:1">{<block_content pos:start="16:5" pos:end="26:13">
    <expr_stmt pos:start="16:5" pos:end="16:34"><expr pos:start="16:5" pos:end="16:33"><call pos:start="16:5" pos:end="16:33"><name pos:start="16:5" pos:end="16:11">freopen</name><argument_list pos:start="16:12" pos:end="16:33">(<argument pos:start="16:13" pos:end="16:22"><expr pos:start="16:13" pos:end="16:22"><literal type="string" pos:start="16:13" pos:end="16:22">"shelf.in"</literal></expr></argument>,<argument pos:start="16:24" pos:end="16:26"><expr pos:start="16:24" pos:end="16:26"><literal type="string" pos:start="16:24" pos:end="16:26">"r"</literal></expr></argument>,<argument pos:start="16:28" pos:end="16:32"><expr pos:start="16:28" pos:end="16:32"><name pos:start="16:28" pos:end="16:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:11">freopen</name><argument_list pos:start="17:12" pos:end="17:35">(<argument pos:start="17:13" pos:end="17:23"><expr pos:start="17:13" pos:end="17:23"><literal type="string" pos:start="17:13" pos:end="17:23">"shelf.out"</literal></expr></argument>,<argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><literal type="string" pos:start="17:25" pos:end="17:27">"w"</literal></expr></argument>,<argument pos:start="17:29" pos:end="17:34"><expr pos:start="17:29" pos:end="17:34"><name pos:start="17:29" pos:end="17:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:28"><expr pos:start="18:5" pos:end="18:27"><call pos:start="18:5" pos:end="18:27"><name pos:start="18:5" pos:end="18:9">scanf</name><argument_list pos:start="18:10" pos:end="18:27">(<argument pos:start="18:11" pos:end="18:16"><expr pos:start="18:11" pos:end="18:16"><literal type="string" pos:start="18:11" pos:end="18:16">"%d%d"</literal></expr></argument>,<argument pos:start="18:18" pos:end="18:19"><expr pos:start="18:18" pos:end="18:19"><operator pos:start="18:18" pos:end="18:18">&amp;</operator><name pos:start="18:19" pos:end="18:19">n</name></expr></argument>,<argument pos:start="18:21" pos:end="18:26"><expr pos:start="18:21" pos:end="18:26"><operator pos:start="18:21" pos:end="18:21">&amp;</operator><name pos:start="18:22" pos:end="18:26">shelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="19:5" pos:end="21:5">for<control pos:start="19:8" pos:end="19:29">(<init pos:start="19:9" pos:end="19:18"><decl pos:start="19:9" pos:end="19:17"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">i</name> <init pos:start="19:15" pos:end="19:17">= <expr pos:start="19:17" pos:end="19:17"><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr></init></decl>;</init><condition pos:start="19:19" pos:end="19:25"><expr pos:start="19:19" pos:end="19:24"><name pos:start="19:19" pos:end="19:19">i</name> <operator pos:start="19:21" pos:end="19:22">&lt;=</operator> <name pos:start="19:24" pos:end="19:24">n</name></expr>;</condition><incr pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:26">i</name><operator pos:start="19:27" pos:end="19:28">++</operator></expr></incr>)</control><block pos:start="19:30" pos:end="21:5">{<block_content pos:start="20:9" pos:end="20:32">
        <expr_stmt pos:start="20:9" pos:end="20:32"><expr pos:start="20:9" pos:end="20:31"><call pos:start="20:9" pos:end="20:31"><name pos:start="20:9" pos:end="20:13">scanf</name><argument_list pos:start="20:14" pos:end="20:31">(<argument pos:start="20:15" pos:end="20:18"><expr pos:start="20:15" pos:end="20:18"><literal type="string" pos:start="20:15" pos:end="20:18">"%d"</literal></expr></argument>,<argument pos:start="20:20" pos:end="20:30"><expr pos:start="20:20" pos:end="20:30"><operator pos:start="20:20" pos:end="20:20">&amp;</operator><operator pos:start="20:21" pos:end="20:21">(</operator><name pos:start="20:22" pos:end="20:29"><name pos:start="20:22" pos:end="20:26">hight</name><index pos:start="20:27" pos:end="20:29">[<expr pos:start="20:28" pos:end="20:28"><name pos:start="20:28" pos:end="20:28">i</name></expr>]</index></name><operator pos:start="20:30" pos:end="20:30">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="22:5" pos:end="22:13"><expr pos:start="22:5" pos:end="22:12"><call pos:start="22:5" pos:end="22:12"><name pos:start="22:5" pos:end="22:7">dfs</name><argument_list pos:start="22:8" pos:end="22:12">(<argument pos:start="22:9" pos:end="22:9"><expr pos:start="22:9" pos:end="22:9"><literal type="number" pos:start="22:9" pos:end="22:9">1</literal></expr></argument>,<argument pos:start="22:11" pos:end="22:11"><expr pos:start="22:11" pos:end="22:11"><literal type="number" pos:start="22:11" pos:end="22:11">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><call pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:10">printf</name><argument_list pos:start="23:11" pos:end="23:20">(<argument pos:start="23:12" pos:end="23:15"><expr pos:start="23:12" pos:end="23:15"><literal type="string" pos:start="23:12" pos:end="23:15">"%d"</literal></expr></argument>,<argument pos:start="23:17" pos:end="23:19"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:19">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:18"><expr pos:start="24:5" pos:end="24:17"><call pos:start="24:5" pos:end="24:17"><name pos:start="24:5" pos:end="24:10">fclose</name><argument_list pos:start="24:11" pos:end="24:17">(<argument pos:start="24:12" pos:end="24:16"><expr pos:start="24:12" pos:end="24:16"><name pos:start="24:12" pos:end="24:16">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><call pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:10">fclose</name><argument_list pos:start="25:11" pos:end="25:18">(<argument pos:start="25:12" pos:end="25:17"><expr pos:start="25:12" pos:end="25:17"><name pos:start="25:12" pos:end="25:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="26:5" pos:end="26:13">return <expr pos:start="26:12" pos:end="26:12"><literal type="number" pos:start="26:12" pos:end="26:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
