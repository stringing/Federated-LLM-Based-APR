<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/274/274.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:9"><decl pos:start="3:1" pos:end="3:8"><type pos:start="3:1" pos:end="3:6"><name pos:start="3:1" pos:end="3:6">string</name></type> <name pos:start="3:8" pos:end="3:8">o</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:16"><decl pos:start="4:1" pos:end="4:15"><type pos:start="4:1" pos:end="4:9"><name pos:start="4:1" pos:end="4:4">long</name> <name pos:start="4:6" pos:end="4:9">long</name></type> <name pos:start="4:11" pos:end="4:13">sum</name><init pos:start="4:14" pos:end="4:15">=<expr pos:start="4:15" pos:end="4:15"><literal type="number" pos:start="4:15" pos:end="4:15">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:16"><decl pos:start="5:1" pos:end="5:15"><type pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:11"><name pos:start="5:1" pos:end="5:6">vector</name><argument_list type="generic" pos:start="5:7" pos:end="5:11">&lt;<argument pos:start="5:8" pos:end="5:10"><expr pos:start="5:8" pos:end="5:10"><name pos:start="5:8" pos:end="5:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="5:13" pos:end="5:15">ret</name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:22"><decl pos:start="6:1" pos:end="6:21"><type pos:start="6:1" pos:end="6:18"><name pos:start="6:1" pos:end="6:18"><name pos:start="6:1" pos:end="6:3">map</name><argument_list type="generic" pos:start="6:4" pos:end="6:18">&lt;<argument pos:start="6:5" pos:end="6:10"><expr pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">string</name></expr></argument>,<argument pos:start="6:12" pos:end="6:17"><expr pos:start="6:12" pos:end="6:17"><name pos:start="6:12" pos:end="6:17">string</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="6:20" pos:end="6:21">mp</name></decl>;</decl_stmt>
<function pos:start="7:1" pos:end="19:1"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">char</name></type> <name pos:start="7:6" pos:end="7:12">getchar</name><parameter_list pos:start="7:13" pos:end="7:25">(<parameter pos:start="7:14" pos:end="7:24"><decl pos:start="7:14" pos:end="7:24"><type pos:start="7:14" pos:end="7:19"><name pos:start="7:14" pos:end="7:19">string</name></type> <name pos:start="7:21" pos:end="7:24">pass</name></decl></parameter>)</parameter_list>
<block pos:start="8:1" pos:end="19:1">{<block_content pos:start="9:5" pos:end="18:17">
    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">a</name><init pos:start="9:10" pos:end="9:11">=<expr pos:start="9:11" pos:end="9:11"><literal type="number" pos:start="9:11" pos:end="9:11">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="10:5" pos:end="13:5">for<control pos:start="10:8" pos:end="10:24">(<init pos:start="10:9" pos:end="10:16"><decl pos:start="10:9" pos:end="10:15"><type pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">int</name></type> <name pos:start="10:13" pos:end="10:13">i</name><init pos:start="10:14" pos:end="10:15">=<expr pos:start="10:15" pos:end="10:15"><literal type="number" pos:start="10:15" pos:end="10:15">3</literal></expr></init></decl>;</init><condition pos:start="10:17" pos:end="10:20"><expr pos:start="10:17" pos:end="10:19"><name pos:start="10:17" pos:end="10:17">i</name><operator pos:start="10:18" pos:end="10:18">&lt;</operator><literal type="number" pos:start="10:19" pos:end="10:19">8</literal></expr>;</condition><incr pos:start="10:21" pos:end="10:23"><expr pos:start="10:21" pos:end="10:23"><operator pos:start="10:21" pos:end="10:22">++</operator><name pos:start="10:23" pos:end="10:23">i</name></expr></incr>)</control>
    <block pos:start="11:5" pos:end="13:5">{<block_content pos:start="12:9" pos:end="12:44">
        <expr_stmt pos:start="12:9" pos:end="12:44"><expr pos:start="12:9" pos:end="12:43"><name pos:start="12:9" pos:end="12:9">a</name><operator pos:start="12:10" pos:end="12:10">=</operator><name pos:start="12:11" pos:end="12:11">a</name><operator pos:start="12:12" pos:end="12:12">+</operator><operator pos:start="12:13" pos:end="12:13">(</operator><operator pos:start="12:14" pos:end="12:14">(</operator><name pos:start="12:15" pos:end="12:17">int</name><operator pos:start="12:18" pos:end="12:18">)</operator><operator pos:start="12:19" pos:end="12:19">(</operator><name pos:start="12:20" pos:end="12:26"><name pos:start="12:20" pos:end="12:23">pass</name><index pos:start="12:24" pos:end="12:26">[<expr pos:start="12:25" pos:end="12:25"><name pos:start="12:25" pos:end="12:25">i</name></expr>]</index></name><operator pos:start="12:27" pos:end="12:27">-</operator><literal type="char" pos:start="12:28" pos:end="12:30">'0'</literal><operator pos:start="12:31" pos:end="12:31">)</operator><operator pos:start="12:32" pos:end="12:32">)</operator><operator pos:start="12:33" pos:end="12:33">*</operator><call pos:start="12:34" pos:end="12:43"><name pos:start="12:34" pos:end="12:36">pow</name><argument_list pos:start="12:37" pos:end="12:43">(<argument pos:start="12:38" pos:end="12:38"><expr pos:start="12:38" pos:end="12:38"><literal type="number" pos:start="12:38" pos:end="12:38">2</literal></expr></argument>,<argument pos:start="12:40" pos:end="12:42"><expr pos:start="12:40" pos:end="12:42"><literal type="number" pos:start="12:40" pos:end="12:41">7</literal><operator pos:start="12:41" pos:end="12:41">-</operator><name pos:start="12:42" pos:end="12:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="14:5" pos:end="17:5"><if pos:start="14:5" pos:end="17:5">if<condition pos:start="14:7" pos:end="14:13">(<expr pos:start="14:8" pos:end="14:12"><name pos:start="14:8" pos:end="14:8">a</name><operator pos:start="14:9" pos:end="14:10">&gt;=</operator><literal type="number" pos:start="14:11" pos:end="14:12">26</literal></expr>)</condition>
    <block pos:start="15:5" pos:end="17:5">{<block_content pos:start="16:9" pos:end="16:19">
        <return pos:start="16:9" pos:end="16:19">return <expr pos:start="16:16" pos:end="16:18"><literal type="char" pos:start="16:16" pos:end="16:18">'e'</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="18:5" pos:end="18:17">return <expr pos:start="18:12" pos:end="18:16"><literal type="char" pos:start="18:12" pos:end="18:14">'A'</literal><operator pos:start="18:15" pos:end="18:15">+</operator><name pos:start="18:16" pos:end="18:16">a</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="20:1" pos:end="28:1"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:10">getint</name><parameter_list pos:start="20:11" pos:end="20:23">(<parameter pos:start="20:12" pos:end="20:22"><decl pos:start="20:12" pos:end="20:22"><type pos:start="20:12" pos:end="20:17"><name pos:start="20:12" pos:end="20:17">string</name></type> <name pos:start="20:19" pos:end="20:22">pass</name></decl></parameter>)</parameter_list>
<block pos:start="21:1" pos:end="28:1">{<block_content pos:start="22:5" pos:end="27:13">
    <decl_stmt pos:start="22:5" pos:end="22:12"><decl pos:start="22:5" pos:end="22:11"><type pos:start="22:5" pos:end="22:7"><name pos:start="22:5" pos:end="22:7">int</name></type> <name pos:start="22:9" pos:end="22:9">a</name><init pos:start="22:10" pos:end="22:11">=<expr pos:start="22:11" pos:end="22:11"><literal type="number" pos:start="22:11" pos:end="22:11">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="23:5" pos:end="26:5">for<control pos:start="23:8" pos:end="23:24">(<init pos:start="23:9" pos:end="23:16"><decl pos:start="23:9" pos:end="23:15"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">i</name><init pos:start="23:14" pos:end="23:15">=<expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">3</literal></expr></init></decl>;</init><condition pos:start="23:17" pos:end="23:20"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:17">i</name><operator pos:start="23:18" pos:end="23:18">&lt;</operator><literal type="number" pos:start="23:19" pos:end="23:19">8</literal></expr>;</condition><incr pos:start="23:21" pos:end="23:23"><expr pos:start="23:21" pos:end="23:23"><operator pos:start="23:21" pos:end="23:22">++</operator><name pos:start="23:23" pos:end="23:23">i</name></expr></incr>)</control>
    <block pos:start="24:5" pos:end="26:5">{<block_content pos:start="25:9" pos:end="25:44">
        <expr_stmt pos:start="25:9" pos:end="25:44"><expr pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:9">a</name><operator pos:start="25:10" pos:end="25:10">=</operator><name pos:start="25:11" pos:end="25:11">a</name><operator pos:start="25:12" pos:end="25:12">+</operator><operator pos:start="25:13" pos:end="25:13">(</operator><operator pos:start="25:14" pos:end="25:14">(</operator><name pos:start="25:15" pos:end="25:17">int</name><operator pos:start="25:18" pos:end="25:18">)</operator><operator pos:start="25:19" pos:end="25:19">(</operator><name pos:start="25:20" pos:end="25:26"><name pos:start="25:20" pos:end="25:23">pass</name><index pos:start="25:24" pos:end="25:26">[<expr pos:start="25:25" pos:end="25:25"><name pos:start="25:25" pos:end="25:25">i</name></expr>]</index></name><operator pos:start="25:27" pos:end="25:27">-</operator><literal type="char" pos:start="25:28" pos:end="25:30">'0'</literal><operator pos:start="25:31" pos:end="25:31">)</operator><operator pos:start="25:32" pos:end="25:32">)</operator><operator pos:start="25:33" pos:end="25:33">*</operator><call pos:start="25:34" pos:end="25:43"><name pos:start="25:34" pos:end="25:36">pow</name><argument_list pos:start="25:37" pos:end="25:43">(<argument pos:start="25:38" pos:end="25:38"><expr pos:start="25:38" pos:end="25:38"><literal type="number" pos:start="25:38" pos:end="25:38">2</literal></expr></argument>,<argument pos:start="25:40" pos:end="25:42"><expr pos:start="25:40" pos:end="25:42"><literal type="number" pos:start="25:40" pos:end="25:41">7</literal><operator pos:start="25:41" pos:end="25:41">-</operator><name pos:start="25:42" pos:end="25:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><name pos:start="27:12" pos:end="27:12">a</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="29:1" pos:end="56:1"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:9">fanyi</name><parameter_list pos:start="29:10" pos:end="29:19">(<parameter pos:start="29:11" pos:end="29:18"><decl pos:start="29:11" pos:end="29:18"><type pos:start="29:11" pos:end="29:16"><name pos:start="29:11" pos:end="29:16">string</name></type> <name pos:start="29:18" pos:end="29:18">s</name></decl></parameter>)</parameter_list>
<block pos:start="30:1" pos:end="56:1">{<block_content pos:start="31:5" pos:end="55:13">
    <for pos:start="31:5" pos:end="34:5">for<control pos:start="31:8" pos:end="31:24">(<init pos:start="31:9" pos:end="31:16"><decl pos:start="31:9" pos:end="31:15"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name><init pos:start="31:14" pos:end="31:15">=<expr pos:start="31:15" pos:end="31:15"><literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr></init></decl>;</init><condition pos:start="31:17" pos:end="31:20"><expr pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:17">i</name><operator pos:start="31:18" pos:end="31:18">&lt;</operator><literal type="number" pos:start="31:19" pos:end="31:19">8</literal></expr>;</condition><incr pos:start="31:21" pos:end="31:23"><expr pos:start="31:21" pos:end="31:23"><operator pos:start="31:21" pos:end="31:22">++</operator><name pos:start="31:23" pos:end="31:23">i</name></expr></incr>)</control>
    <block pos:start="32:5" pos:end="34:5">{<block_content pos:start="33:9" pos:end="33:45">
        <if_stmt pos:start="33:9" pos:end="33:45"><if pos:start="33:9" pos:end="33:45">if<condition pos:start="33:11" pos:end="33:32">(<expr pos:start="33:12" pos:end="33:31"><name pos:start="33:12" pos:end="33:15"><name pos:start="33:12" pos:end="33:12">s</name><index pos:start="33:13" pos:end="33:15">[<expr pos:start="33:14" pos:end="33:14"><name pos:start="33:14" pos:end="33:14">i</name></expr>]</index></name><operator pos:start="33:16" pos:end="33:17">!=</operator><literal type="char" pos:start="33:18" pos:end="33:20">'0'</literal><operator pos:start="33:21" pos:end="33:22">&amp;&amp;</operator><name pos:start="33:23" pos:end="33:26"><name pos:start="33:23" pos:end="33:23">s</name><index pos:start="33:24" pos:end="33:26">[<expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">i</name></expr>]</index></name><operator pos:start="33:27" pos:end="33:28">!=</operator><literal type="char" pos:start="33:29" pos:end="33:31">'1'</literal></expr>)</condition><block type="pseudo" pos:start="33:37" pos:end="33:45"><block_content pos:start="33:37" pos:end="33:45">    <return pos:start="33:37" pos:end="33:45">return <expr pos:start="33:44" pos:end="33:44"><literal type="number" pos:start="33:44" pos:end="33:44">1</literal></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if<condition pos:start="35:7" pos:end="35:17">(<expr pos:start="35:8" pos:end="35:16"><name pos:start="35:8" pos:end="35:11"><name pos:start="35:8" pos:end="35:8">s</name><index pos:start="35:9" pos:end="35:11">[<expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">0</literal></expr>]</index></name><operator pos:start="35:12" pos:end="35:13">==</operator><literal type="char" pos:start="35:14" pos:end="35:16">'0'</literal></expr>)</condition>
    <block pos:start="36:5" pos:end="39:5">{<block_content pos:start="37:9" pos:end="38:17">
        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:11">sum</name><operator pos:start="37:12" pos:end="37:13">+=</operator><call pos:start="37:14" pos:end="37:22"><name pos:start="37:14" pos:end="37:19">getint</name><argument_list pos:start="37:20" pos:end="37:22">(<argument pos:start="37:21" pos:end="37:21"><expr pos:start="37:21" pos:end="37:21"><name pos:start="37:21" pos:end="37:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="38:9" pos:end="38:17">return <expr pos:start="38:16" pos:end="38:16"><literal type="number" pos:start="38:16" pos:end="38:16">2</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="40:5" pos:end="44:5"><if pos:start="40:5" pos:end="44:5">if<condition pos:start="40:7" pos:end="40:39">(<expr pos:start="40:8" pos:end="40:38"><name pos:start="40:8" pos:end="40:11"><name pos:start="40:8" pos:end="40:8">s</name><index pos:start="40:9" pos:end="40:11">[<expr pos:start="40:10" pos:end="40:10"><literal type="number" pos:start="40:10" pos:end="40:10">0</literal></expr>]</index></name><operator pos:start="40:12" pos:end="40:13">==</operator><literal type="char" pos:start="40:14" pos:end="40:16">'1'</literal><operator pos:start="40:17" pos:end="40:18">&amp;&amp;</operator><name pos:start="40:19" pos:end="40:22"><name pos:start="40:19" pos:end="40:19">s</name><index pos:start="40:20" pos:end="40:22">[<expr pos:start="40:21" pos:end="40:21"><literal type="number" pos:start="40:21" pos:end="40:21">1</literal></expr>]</index></name><operator pos:start="40:23" pos:end="40:24">==</operator><literal type="char" pos:start="40:25" pos:end="40:27">'1'</literal><operator pos:start="40:28" pos:end="40:29">&amp;&amp;</operator><name pos:start="40:30" pos:end="40:33"><name pos:start="40:30" pos:end="40:30">s</name><index pos:start="40:31" pos:end="40:33">[<expr pos:start="40:32" pos:end="40:32"><literal type="number" pos:start="40:32" pos:end="40:32">2</literal></expr>]</index></name><operator pos:start="40:34" pos:end="40:35">==</operator><literal type="char" pos:start="40:36" pos:end="40:38">'1'</literal></expr>)</condition>
    <block pos:start="41:5" pos:end="44:5">{<block_content pos:start="42:9" pos:end="43:17">
        <expr_stmt pos:start="42:9" pos:end="42:15"><expr pos:start="42:9" pos:end="42:14"><name pos:start="42:9" pos:end="42:9">o</name><operator pos:start="42:10" pos:end="42:11">+=</operator><literal type="char" pos:start="42:12" pos:end="42:14">' '</literal></expr>;</expr_stmt>
        <return pos:start="43:9" pos:end="43:17">return <expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="45:5" pos:end="54:5"><if pos:start="45:5" pos:end="54:5">if<condition pos:start="45:7" pos:end="45:39">(<expr pos:start="45:8" pos:end="45:38"><name pos:start="45:8" pos:end="45:11"><name pos:start="45:8" pos:end="45:8">s</name><index pos:start="45:9" pos:end="45:11">[<expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">0</literal></expr>]</index></name><operator pos:start="45:12" pos:end="45:13">==</operator><literal type="char" pos:start="45:14" pos:end="45:16">'1'</literal><operator pos:start="45:17" pos:end="45:18">&amp;&amp;</operator><name pos:start="45:19" pos:end="45:22"><name pos:start="45:19" pos:end="45:19">s</name><index pos:start="45:20" pos:end="45:22">[<expr pos:start="45:21" pos:end="45:21"><literal type="number" pos:start="45:21" pos:end="45:21">1</literal></expr>]</index></name><operator pos:start="45:23" pos:end="45:24">==</operator><literal type="char" pos:start="45:25" pos:end="45:27">'0'</literal><operator pos:start="45:28" pos:end="45:29">&amp;&amp;</operator><name pos:start="45:30" pos:end="45:33"><name pos:start="45:30" pos:end="45:30">s</name><index pos:start="45:31" pos:end="45:33">[<expr pos:start="45:32" pos:end="45:32"><literal type="number" pos:start="45:32" pos:end="45:32">2</literal></expr>]</index></name><operator pos:start="45:34" pos:end="45:35">==</operator><literal type="char" pos:start="45:36" pos:end="45:38">'1'</literal></expr>)</condition>
    <block pos:start="46:5" pos:end="54:5">{<block_content pos:start="47:9" pos:end="53:17">
        <decl_stmt pos:start="47:9" pos:end="47:28"><decl pos:start="47:9" pos:end="47:27"><type pos:start="47:9" pos:end="47:12"><name pos:start="47:9" pos:end="47:12">char</name></type> <name pos:start="47:14" pos:end="47:16">cha</name><init pos:start="47:17" pos:end="47:27">=<expr pos:start="47:18" pos:end="47:27"><call pos:start="47:18" pos:end="47:27"><name pos:start="47:18" pos:end="47:24">getchar</name><argument_list pos:start="47:25" pos:end="47:27">(<argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><name pos:start="47:26" pos:end="47:26">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="48:9" pos:end="51:9"><if pos:start="48:9" pos:end="51:9">if<condition pos:start="48:11" pos:end="48:20">(<expr pos:start="48:12" pos:end="48:19"><name pos:start="48:12" pos:end="48:14">cha</name><operator pos:start="48:15" pos:end="48:16">==</operator><literal type="char" pos:start="48:17" pos:end="48:19">'e'</literal></expr>)</condition>
        <block pos:start="49:9" pos:end="51:9">{<block_content pos:start="50:13" pos:end="50:21">
            <return pos:start="50:13" pos:end="50:21">return <expr pos:start="50:20" pos:end="50:20"><literal type="number" pos:start="50:20" pos:end="50:20">1</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="52:9" pos:end="52:15"><expr pos:start="52:9" pos:end="52:14"><name pos:start="52:9" pos:end="52:9">o</name><operator pos:start="52:10" pos:end="52:11">+=</operator><name pos:start="52:12" pos:end="52:14">cha</name></expr>;</expr_stmt>
        <return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">1</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="57:1" pos:end="108:1"><type pos:start="57:1" pos:end="57:3"><name pos:start="57:1" pos:end="57:3">int</name></type> <name pos:start="57:5" pos:end="57:8">main</name><parameter_list pos:start="57:9" pos:end="57:10">()</parameter_list>
<block pos:start="58:1" pos:end="108:1">{<block_content pos:start="59:5" pos:end="107:5">
    <expr_stmt pos:start="59:5" pos:end="59:40"><expr pos:start="59:5" pos:end="59:39"><call pos:start="59:5" pos:end="59:39"><name pos:start="59:5" pos:end="59:11">freopen</name><argument_list pos:start="59:12" pos:end="59:39">(<argument pos:start="59:13" pos:end="59:28"><expr pos:start="59:13" pos:end="59:28"><literal type="string" pos:start="59:13" pos:end="59:28">"information.in"</literal></expr></argument>,<argument pos:start="59:30" pos:end="59:32"><expr pos:start="59:30" pos:end="59:32"><literal type="string" pos:start="59:30" pos:end="59:32">"r"</literal></expr></argument>,<argument pos:start="59:34" pos:end="59:38"><expr pos:start="59:34" pos:end="59:38"><name pos:start="59:34" pos:end="59:38">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="60:5" pos:end="60:42"><expr pos:start="60:5" pos:end="60:41"><call pos:start="60:5" pos:end="60:41"><name pos:start="60:5" pos:end="60:11">freopen</name><argument_list pos:start="60:12" pos:end="60:41">(<argument pos:start="60:13" pos:end="60:29"><expr pos:start="60:13" pos:end="60:29"><literal type="string" pos:start="60:13" pos:end="60:29">"information.out"</literal></expr></argument>,<argument pos:start="60:31" pos:end="60:33"><expr pos:start="60:31" pos:end="60:33"><literal type="string" pos:start="60:31" pos:end="60:33">"w"</literal></expr></argument>,<argument pos:start="60:35" pos:end="60:40"><expr pos:start="60:35" pos:end="60:40"><name pos:start="60:35" pos:end="60:40">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="61:5" pos:end="61:13"><decl pos:start="61:5" pos:end="61:12"><type pos:start="61:5" pos:end="61:10"><name pos:start="61:5" pos:end="61:10">string</name></type> <name pos:start="61:12" pos:end="61:12">s</name></decl>;</decl_stmt>
    <expr_stmt pos:start="62:5" pos:end="62:11"><expr pos:start="62:5" pos:end="62:10"><name pos:start="62:5" pos:end="62:7">cin</name><operator pos:start="62:8" pos:end="62:9">&gt;&gt;</operator><name pos:start="62:10" pos:end="62:10">s</name></expr>;</expr_stmt>
    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if<condition pos:start="63:7" pos:end="63:21">(<expr pos:start="63:8" pos:end="63:20"><call pos:start="63:8" pos:end="63:15"><name pos:start="63:8" pos:end="63:13"><name pos:start="63:8" pos:end="63:8">s</name><operator pos:start="63:9" pos:end="63:9">.</operator><name pos:start="63:10" pos:end="63:13">size</name></name><argument_list pos:start="63:14" pos:end="63:15">()</argument_list></call><operator pos:start="63:16" pos:end="63:16">%</operator><literal type="number" pos:start="63:17" pos:end="63:17">8</literal><operator pos:start="63:18" pos:end="63:19">!=</operator><literal type="number" pos:start="63:20" pos:end="63:20">0</literal></expr>)</condition>
    <block pos:start="64:5" pos:end="67:5">{<block_content pos:start="65:9" pos:end="66:17">
        <expr_stmt pos:start="65:9" pos:end="65:22"><expr pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:12">cout</name><operator pos:start="65:13" pos:end="65:14">&lt;&lt;</operator><literal type="string" pos:start="65:15" pos:end="65:21">"Error"</literal></expr>;</expr_stmt>
        <return pos:start="66:9" pos:end="66:17">return <expr pos:start="66:16" pos:end="66:16"><literal type="number" pos:start="66:16" pos:end="66:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="68:5" pos:end="84:5">for<control pos:start="68:8" pos:end="68:32">(<init pos:start="68:9" pos:end="68:16"><decl pos:start="68:9" pos:end="68:15"><type pos:start="68:9" pos:end="68:11"><name pos:start="68:9" pos:end="68:11">int</name></type> <name pos:start="68:13" pos:end="68:13">i</name><init pos:start="68:14" pos:end="68:15">=<expr pos:start="68:15" pos:end="68:15"><literal type="number" pos:start="68:15" pos:end="68:15">0</literal></expr></init></decl>;</init><condition pos:start="68:17" pos:end="68:27"><expr pos:start="68:17" pos:end="68:26"><name pos:start="68:17" pos:end="68:17">i</name><operator pos:start="68:18" pos:end="68:18">&lt;</operator><call pos:start="68:19" pos:end="68:26"><name pos:start="68:19" pos:end="68:24"><name pos:start="68:19" pos:end="68:19">s</name><operator pos:start="68:20" pos:end="68:20">.</operator><name pos:start="68:21" pos:end="68:24">size</name></name><argument_list pos:start="68:25" pos:end="68:26">()</argument_list></call></expr>;</condition><incr pos:start="68:28" pos:end="68:31"><expr pos:start="68:28" pos:end="68:31"><name pos:start="68:28" pos:end="68:28">i</name><operator pos:start="68:29" pos:end="68:30">+=</operator><literal type="number" pos:start="68:31" pos:end="68:31">8</literal></expr></incr>)</control>
    <block pos:start="69:5" pos:end="84:5">{<block_content pos:start="70:9" pos:end="83:9">
        <decl_stmt pos:start="70:9" pos:end="70:22"><decl pos:start="70:9" pos:end="70:21"><type pos:start="70:9" pos:end="70:14"><name pos:start="70:9" pos:end="70:14">string</name></type> <name pos:start="70:16" pos:end="70:18">str</name><init pos:start="70:19" pos:end="70:21">=<expr pos:start="70:20" pos:end="70:21"><literal type="string" pos:start="70:20" pos:end="70:21">""</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="71:9" pos:end="74:9">for<control pos:start="71:12" pos:end="71:28">(<init pos:start="71:13" pos:end="71:20"><decl pos:start="71:13" pos:end="71:19"><type pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">int</name></type> <name pos:start="71:17" pos:end="71:17">j</name><init pos:start="71:18" pos:end="71:19">=<expr pos:start="71:19" pos:end="71:19"><literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr></init></decl>;</init><condition pos:start="71:21" pos:end="71:24"><expr pos:start="71:21" pos:end="71:23"><name pos:start="71:21" pos:end="71:21">j</name><operator pos:start="71:22" pos:end="71:22">&lt;</operator><literal type="number" pos:start="71:23" pos:end="71:23">8</literal></expr>;</condition><incr pos:start="71:25" pos:end="71:27"><expr pos:start="71:25" pos:end="71:27"><operator pos:start="71:25" pos:end="71:26">++</operator><name pos:start="71:27" pos:end="71:27">j</name></expr></incr>)</control>
        <block pos:start="72:9" pos:end="74:9">{<block_content pos:start="73:13" pos:end="73:34">
            <expr_stmt pos:start="73:13" pos:end="73:34"><expr pos:start="73:13" pos:end="73:33"><call pos:start="73:13" pos:end="73:33"><name pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:15">str</name><operator pos:start="73:16" pos:end="73:16">.</operator><name pos:start="73:17" pos:end="73:25">push_back</name></name><argument_list pos:start="73:26" pos:end="73:33">(<argument pos:start="73:27" pos:end="73:32"><expr pos:start="73:27" pos:end="73:32"><name pos:start="73:27" pos:end="73:32"><name pos:start="73:27" pos:end="73:27">s</name><index pos:start="73:28" pos:end="73:32">[<expr pos:start="73:29" pos:end="73:31"><name pos:start="73:29" pos:end="73:29">i</name><operator pos:start="73:30" pos:end="73:30">+</operator><name pos:start="73:31" pos:end="73:31">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="75:9" pos:end="75:28"><decl pos:start="75:9" pos:end="75:27"><type pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:11">int</name></type> <name pos:start="75:13" pos:end="75:16">retu</name><init pos:start="75:17" pos:end="75:27">=<expr pos:start="75:18" pos:end="75:27"><call pos:start="75:18" pos:end="75:27"><name pos:start="75:18" pos:end="75:22">fanyi</name><argument_list pos:start="75:23" pos:end="75:27">(<argument pos:start="75:24" pos:end="75:26"><expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:26">str</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="76:9" pos:end="83:9"><if pos:start="76:9" pos:end="80:9">if<condition pos:start="76:11" pos:end="76:19">(<expr pos:start="76:12" pos:end="76:18"><name pos:start="76:12" pos:end="76:15">retu</name><operator pos:start="76:16" pos:end="76:17">==</operator><literal type="number" pos:start="76:18" pos:end="76:18">1</literal></expr>)</condition>
        <block pos:start="77:9" pos:end="80:9">{<block_content pos:start="78:13" pos:end="79:21">
            <expr_stmt pos:start="78:13" pos:end="78:26"><expr pos:start="78:13" pos:end="78:25"><name pos:start="78:13" pos:end="78:16">cout</name><operator pos:start="78:17" pos:end="78:18">&lt;&lt;</operator><literal type="string" pos:start="78:19" pos:end="78:25">"Error"</literal></expr>;</expr_stmt>
            <return pos:start="79:13" pos:end="79:21">return <expr pos:start="79:20" pos:end="79:20"><literal type="number" pos:start="79:20" pos:end="79:20">0</literal></expr>;</return>
        </block_content>}</block></if><else pos:start="80:10" pos:end="83:9">else
        <block pos:start="81:9" pos:end="83:9">{<block_content pos:start="82:13" pos:end="82:32">
            <expr_stmt pos:start="82:13" pos:end="82:32"><expr pos:start="82:13" pos:end="82:31"><call pos:start="82:13" pos:end="82:31"><name pos:start="82:13" pos:end="82:25"><name pos:start="82:13" pos:end="82:15">ret</name><operator pos:start="82:16" pos:end="82:16">.</operator><name pos:start="82:17" pos:end="82:25">push_back</name></name><argument_list pos:start="82:26" pos:end="82:31">(<argument pos:start="82:27" pos:end="82:30"><expr pos:start="82:27" pos:end="82:30"><name pos:start="82:27" pos:end="82:30">retu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="85:5" pos:end="85:18"><decl pos:start="85:5" pos:end="85:17"><type pos:start="85:5" pos:end="85:7"><name pos:start="85:5" pos:end="85:7">int</name></type> <name pos:start="85:9" pos:end="85:15">num_cnt</name><init pos:start="85:16" pos:end="85:17">=<expr pos:start="85:17" pos:end="85:17"><literal type="number" pos:start="85:17" pos:end="85:17">0</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="86:5" pos:end="97:5">for<control pos:start="86:8" pos:end="86:35">(<init pos:start="86:9" pos:end="86:16"><decl pos:start="86:9" pos:end="86:15"><type pos:start="86:9" pos:end="86:11"><name pos:start="86:9" pos:end="86:11">int</name></type> <name pos:start="86:13" pos:end="86:13">i</name><init pos:start="86:14" pos:end="86:15">=<expr pos:start="86:15" pos:end="86:15"><literal type="number" pos:start="86:15" pos:end="86:15">1</literal></expr></init></decl>;</init><condition pos:start="86:17" pos:end="86:31"><expr pos:start="86:17" pos:end="86:30"><name pos:start="86:17" pos:end="86:17">i</name><operator pos:start="86:18" pos:end="86:18">&lt;</operator><call pos:start="86:19" pos:end="86:28"><name pos:start="86:19" pos:end="86:26"><name pos:start="86:19" pos:end="86:21">ret</name><operator pos:start="86:22" pos:end="86:22">.</operator><name pos:start="86:23" pos:end="86:26">size</name></name><argument_list pos:start="86:27" pos:end="86:28">()</argument_list></call><operator pos:start="86:29" pos:end="86:29">-</operator><literal type="number" pos:start="86:30" pos:end="86:30">1</literal></expr>;</condition><incr pos:start="86:32" pos:end="86:34"><expr pos:start="86:32" pos:end="86:34"><operator pos:start="86:32" pos:end="86:33">++</operator><name pos:start="86:34" pos:end="86:34">i</name></expr></incr>)</control>
    <block pos:start="87:5" pos:end="97:5">{<block_content pos:start="88:9" pos:end="96:9">
        <if_stmt pos:start="88:9" pos:end="92:9"><if pos:start="88:9" pos:end="92:9">if<condition pos:start="88:11" pos:end="88:47">(<expr pos:start="88:12" pos:end="88:46"><name pos:start="88:12" pos:end="88:17"><name pos:start="88:12" pos:end="88:14">ret</name><index pos:start="88:15" pos:end="88:17">[<expr pos:start="88:16" pos:end="88:16"><name pos:start="88:16" pos:end="88:16">i</name></expr>]</index></name><operator pos:start="88:18" pos:end="88:19">==</operator><literal type="number" pos:start="88:20" pos:end="88:20">2</literal><operator pos:start="88:21" pos:end="88:22">&amp;&amp;</operator><name pos:start="88:23" pos:end="88:30"><name pos:start="88:23" pos:end="88:25">ret</name><index pos:start="88:26" pos:end="88:30">[<expr pos:start="88:27" pos:end="88:29"><name pos:start="88:27" pos:end="88:27">i</name><operator pos:start="88:28" pos:end="88:28">-</operator><literal type="number" pos:start="88:29" pos:end="88:29">1</literal></expr>]</index></name><operator pos:start="88:31" pos:end="88:32">!=</operator><literal type="number" pos:start="88:33" pos:end="88:33">2</literal><operator pos:start="88:34" pos:end="88:35">&amp;&amp;</operator><name pos:start="88:36" pos:end="88:43"><name pos:start="88:36" pos:end="88:38">ret</name><index pos:start="88:39" pos:end="88:43">[<expr pos:start="88:40" pos:end="88:42"><name pos:start="88:40" pos:end="88:40">i</name><operator pos:start="88:41" pos:end="88:41">+</operator><literal type="number" pos:start="88:42" pos:end="88:42">1</literal></expr>]</index></name><operator pos:start="88:44" pos:end="88:45">!=</operator><literal type="number" pos:start="88:46" pos:end="88:46">2</literal></expr>)</condition>
        <block pos:start="89:9" pos:end="92:9">{<block_content pos:start="90:13" pos:end="91:21">
            <expr_stmt pos:start="90:13" pos:end="90:26"><expr pos:start="90:13" pos:end="90:25"><name pos:start="90:13" pos:end="90:16">cout</name><operator pos:start="90:17" pos:end="90:18">&lt;&lt;</operator><literal type="string" pos:start="90:19" pos:end="90:25">"Error"</literal></expr>;</expr_stmt>
            <return pos:start="91:13" pos:end="91:21">return <expr pos:start="91:20" pos:end="91:20"><literal type="number" pos:start="91:20" pos:end="91:20">0</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="93:9" pos:end="96:9"><if pos:start="93:9" pos:end="96:9">if<condition pos:start="93:11" pos:end="93:21">(<expr pos:start="93:12" pos:end="93:20"><name pos:start="93:12" pos:end="93:17"><name pos:start="93:12" pos:end="93:14">ret</name><index pos:start="93:15" pos:end="93:17">[<expr pos:start="93:16" pos:end="93:16"><name pos:start="93:16" pos:end="93:16">i</name></expr>]</index></name><operator pos:start="93:18" pos:end="93:19">==</operator><literal type="number" pos:start="93:20" pos:end="93:20">2</literal></expr>)</condition>
        <block pos:start="94:9" pos:end="96:9">{<block_content pos:start="95:13" pos:end="95:22">
            <expr_stmt pos:start="95:13" pos:end="95:22"><expr pos:start="95:13" pos:end="95:21"><operator pos:start="95:13" pos:end="95:14">++</operator><name pos:start="95:15" pos:end="95:21">num_cnt</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="98:5" pos:end="102:5"><if pos:start="98:5" pos:end="102:5">if<condition pos:start="98:7" pos:end="98:20">(<expr pos:start="98:8" pos:end="98:19"><name pos:start="98:8" pos:end="98:14">num_cnt</name><operator pos:start="98:15" pos:end="98:15">%</operator><literal type="number" pos:start="98:16" pos:end="98:16">2</literal><operator pos:start="98:17" pos:end="98:18">==</operator><literal type="number" pos:start="98:19" pos:end="98:19">1</literal></expr>)</condition>
    <block pos:start="99:5" pos:end="102:5">{<block_content pos:start="100:9" pos:end="101:17">
        <expr_stmt pos:start="100:9" pos:end="100:22"><expr pos:start="100:9" pos:end="100:21"><name pos:start="100:9" pos:end="100:12">cout</name><operator pos:start="100:13" pos:end="100:14">&lt;&lt;</operator><literal type="string" pos:start="100:15" pos:end="100:21">"Error"</literal></expr>;</expr_stmt>
        <return pos:start="101:9" pos:end="101:17">return <expr pos:start="101:16" pos:end="101:16"><literal type="number" pos:start="101:16" pos:end="101:16">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="103:5" pos:end="103:12"><expr pos:start="103:5" pos:end="103:11"><name pos:start="103:5" pos:end="103:8">cout</name><operator pos:start="103:9" pos:end="103:10">&lt;&lt;</operator><name pos:start="103:11" pos:end="103:11">o</name></expr>;</expr_stmt>
    <if_stmt pos:start="104:5" pos:end="107:5"><if pos:start="104:5" pos:end="107:5">if<condition pos:start="104:7" pos:end="104:14">(<expr pos:start="104:8" pos:end="104:13"><name pos:start="104:8" pos:end="104:10">sum</name><operator pos:start="104:11" pos:end="104:12">!=</operator><literal type="number" pos:start="104:13" pos:end="104:13">0</literal></expr>)</condition>
    <block pos:start="105:5" pos:end="107:5">{<block_content pos:start="106:9" pos:end="106:18">
        <expr_stmt pos:start="106:9" pos:end="106:18"><expr pos:start="106:9" pos:end="106:17"><name pos:start="106:9" pos:end="106:12">cout</name><operator pos:start="106:13" pos:end="106:14">&lt;&lt;</operator><name pos:start="106:15" pos:end="106:17">sum</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
</unit>
