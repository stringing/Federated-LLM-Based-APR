<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/683/683.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:19">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:19">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:16">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:16">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="5:1" pos:end="5:15">#<cpp:directive pos:start="5:2" pos:end="5:8">include</cpp:directive><cpp:file pos:start="5:9" pos:end="5:15">&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include pos:start="6:1" pos:end="6:17">#<cpp:directive pos:start="6:2" pos:end="6:8">include</cpp:directive><cpp:file pos:start="6:9" pos:end="6:17">&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include pos:start="7:1" pos:end="7:13">#<cpp:directive pos:start="7:2" pos:end="7:8">include</cpp:directive><cpp:file pos:start="7:9" pos:end="7:13">&lt;map&gt;</cpp:file></cpp:include>
<cpp:include pos:start="8:1" pos:end="8:16">#<cpp:directive pos:start="8:2" pos:end="8:8">include</cpp:directive><cpp:file pos:start="8:9" pos:end="8:16">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:define pos:start="9:1" pos:end="9:29">#<cpp:directive pos:start="9:2" pos:end="9:7">define</cpp:directive> <cpp:macro pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">bug</name></cpp:macro> <cpp:value pos:start="9:13" pos:end="9:29">cout&lt;&lt;"bug"&lt;&lt;endl</cpp:value></cpp:define>
<cpp:define pos:start="10:1" pos:end="10:20">#<cpp:directive pos:start="10:2" pos:end="10:7">define</cpp:directive> <cpp:macro pos:start="10:9" pos:end="10:10"><name pos:start="10:9" pos:end="10:10">ll</name></cpp:macro> <cpp:value pos:start="10:12" pos:end="10:20">long long</cpp:value></cpp:define>
<cpp:define pos:start="11:1" pos:end="11:22">#<cpp:directive pos:start="11:2" pos:end="11:7">define</cpp:directive> <cpp:macro pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">inf</name></cpp:macro> <cpp:value pos:start="11:13" pos:end="11:22">0x3f3f3f3f</cpp:value></cpp:define>
<cpp:define pos:start="12:1" pos:end="12:22">#<cpp:directive pos:start="12:2" pos:end="12:7">define</cpp:directive> <cpp:macro pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">MOD</name></cpp:macro> <cpp:value pos:start="12:13" pos:end="12:22">1000000007</cpp:value></cpp:define>
<using pos:start="13:1" pos:end="13:20">using <namespace pos:start="13:7" pos:end="13:20">namespace <name pos:start="13:17" pos:end="13:19">std</name>;</namespace></using>
<decl_stmt pos:start="14:1" pos:end="14:8"><decl pos:start="14:1" pos:end="14:5"><type pos:start="14:1" pos:end="14:3"><name pos:start="14:1" pos:end="14:3">int</name></type> <name pos:start="14:5" pos:end="14:5">n</name></decl>,<decl pos:start="14:7" pos:end="14:7"><type ref="prev" pos:start="14:1" pos:end="14:3"/><name pos:start="14:7" pos:end="14:7">m</name></decl>;</decl_stmt>
<decl_stmt pos:start="15:1" pos:end="15:17"><decl pos:start="15:1" pos:end="15:16"><type pos:start="15:1" pos:end="15:4"><name pos:start="15:1" pos:end="15:4">char</name></type> <name pos:start="15:6" pos:end="15:16"><name pos:start="15:6" pos:end="15:6">a</name><index pos:start="15:7" pos:end="15:11">[<expr pos:start="15:8" pos:end="15:10"><literal type="number" pos:start="15:8" pos:end="15:10">105</literal></expr>]</index><index pos:start="15:12" pos:end="15:16">[<expr pos:start="15:13" pos:end="15:15"><literal type="number" pos:start="15:13" pos:end="15:15">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="16:1" pos:end="16:16"><decl pos:start="16:1" pos:end="16:15"><type pos:start="16:1" pos:end="16:3"><name pos:start="16:1" pos:end="16:3">int</name></type> <name pos:start="16:5" pos:end="16:15"><name pos:start="16:5" pos:end="16:5">b</name><index pos:start="16:6" pos:end="16:10">[<expr pos:start="16:7" pos:end="16:9"><literal type="number" pos:start="16:7" pos:end="16:9">105</literal></expr>]</index><index pos:start="16:11" pos:end="16:15">[<expr pos:start="16:12" pos:end="16:14"><literal type="number" pos:start="16:12" pos:end="16:14">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="17:1" pos:end="17:23"><decl pos:start="17:1" pos:end="17:22"><type pos:start="17:1" pos:end="17:11"><name pos:start="17:1" pos:end="17:11"><name pos:start="17:1" pos:end="17:6">vector</name><argument_list type="generic" pos:start="17:7" pos:end="17:11">&lt;<argument pos:start="17:8" pos:end="17:10"><expr pos:start="17:8" pos:end="17:10"><name pos:start="17:8" pos:end="17:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:15">ver</name><index pos:start="17:16" pos:end="17:22">[<expr pos:start="17:17" pos:end="17:21"><literal type="number" pos:start="17:17" pos:end="17:21">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="18:1" pos:end="18:24"><decl pos:start="18:1" pos:end="18:23"><type pos:start="18:1" pos:end="18:11"><name pos:start="18:1" pos:end="18:11"><name pos:start="18:1" pos:end="18:6">vector</name><argument_list type="generic" pos:start="18:7" pos:end="18:11">&lt;<argument pos:start="18:8" pos:end="18:10"><expr pos:start="18:8" pos:end="18:10"><name pos:start="18:8" pos:end="18:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="18:13" pos:end="18:23"><name pos:start="18:13" pos:end="18:16">ver1</name><index pos:start="18:17" pos:end="18:23">[<expr pos:start="18:18" pos:end="18:22"><literal type="number" pos:start="18:18" pos:end="18:22">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="19:1" pos:end="19:24"><decl pos:start="19:1" pos:end="19:23"><type pos:start="19:1" pos:end="19:11"><name pos:start="19:1" pos:end="19:11"><name pos:start="19:1" pos:end="19:6">vector</name><argument_list type="generic" pos:start="19:7" pos:end="19:11">&lt;<argument pos:start="19:8" pos:end="19:10"><expr pos:start="19:8" pos:end="19:10"><name pos:start="19:8" pos:end="19:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:16">ver2</name><index pos:start="19:17" pos:end="19:23">[<expr pos:start="19:18" pos:end="19:22"><literal type="number" pos:start="19:18" pos:end="19:22">10000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="20:1" pos:end="20:24"><decl pos:start="20:1" pos:end="20:13"><type pos:start="20:1" pos:end="20:3"><name pos:start="20:1" pos:end="20:3">int</name></type> <name pos:start="20:5" pos:end="20:13"><name pos:start="20:5" pos:end="20:5">x</name><index pos:start="20:6" pos:end="20:13">[<expr pos:start="20:7" pos:end="20:12"><literal type="number" pos:start="20:7" pos:end="20:12">100000</literal></expr>]</index></name></decl>,<decl pos:start="20:15" pos:end="20:23"><type ref="prev" pos:start="20:1" pos:end="20:3"/><name pos:start="20:15" pos:end="20:23"><name pos:start="20:15" pos:end="20:15">y</name><index pos:start="20:16" pos:end="20:23">[<expr pos:start="20:17" pos:end="20:22"><literal type="number" pos:start="20:17" pos:end="20:22">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="21:1" pos:end="21:10"><decl pos:start="21:1" pos:end="21:9"><type pos:start="21:1" pos:end="21:3"><name pos:start="21:1" pos:end="21:3">int</name></type> <name pos:start="21:5" pos:end="21:7">top</name><init pos:start="21:8" pos:end="21:9">=<expr pos:start="21:9" pos:end="21:9"><literal type="number" pos:start="21:9" pos:end="21:9">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="22:1" pos:end="22:28"><decl pos:start="22:1" pos:end="22:15"><type pos:start="22:1" pos:end="22:3"><name pos:start="22:1" pos:end="22:3">int</name></type> <name pos:start="22:5" pos:end="22:15"><name pos:start="22:5" pos:end="22:7">dfn</name><index pos:start="22:8" pos:end="22:15">[<expr pos:start="22:9" pos:end="22:14"><literal type="number" pos:start="22:9" pos:end="22:14">100000</literal></expr>]</index></name></decl>,<decl pos:start="22:17" pos:end="22:27"><type ref="prev" pos:start="22:1" pos:end="22:3"/><name pos:start="22:17" pos:end="22:27"><name pos:start="22:17" pos:end="22:19">low</name><index pos:start="22:20" pos:end="22:27">[<expr pos:start="22:21" pos:end="22:26"><literal type="number" pos:start="22:21" pos:end="22:26">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="23:1" pos:end="23:10"><decl pos:start="23:1" pos:end="23:9"><type pos:start="23:1" pos:end="23:3"><name pos:start="23:1" pos:end="23:3">int</name></type> <name pos:start="23:5" pos:end="23:7">tot</name><init pos:start="23:8" pos:end="23:9">=<expr pos:start="23:9" pos:end="23:9"><literal type="number" pos:start="23:9" pos:end="23:9">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="24:1" pos:end="24:17"><decl pos:start="24:1" pos:end="24:16"><type pos:start="24:1" pos:end="24:3"><name pos:start="24:1" pos:end="24:3">int</name></type> <name pos:start="24:5" pos:end="24:16"><name pos:start="24:5" pos:end="24:8">zhan</name><index pos:start="24:9" pos:end="24:16">[<expr pos:start="24:10" pos:end="24:15"><literal type="number" pos:start="24:10" pos:end="24:15">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="25:1" pos:end="25:14"><decl pos:start="25:1" pos:end="25:13"><type pos:start="25:1" pos:end="25:3"><name pos:start="25:1" pos:end="25:3">int</name></type> <name pos:start="25:5" pos:end="25:11">topzhan</name><init pos:start="25:12" pos:end="25:13">=<expr pos:start="25:13" pos:end="25:13"><literal type="number" pos:start="25:13" pos:end="25:13">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="26:1" pos:end="26:17"><decl pos:start="26:1" pos:end="26:16"><type pos:start="26:1" pos:end="26:3"><name pos:start="26:1" pos:end="26:3">int</name></type> <name pos:start="26:5" pos:end="26:16"><name pos:start="26:5" pos:end="26:8">flag</name><index pos:start="26:9" pos:end="26:16">[<expr pos:start="26:10" pos:end="26:15"><literal type="number" pos:start="26:10" pos:end="26:15">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="27:1" pos:end="27:10"><decl pos:start="27:1" pos:end="27:9"><type pos:start="27:1" pos:end="27:3"><name pos:start="27:1" pos:end="27:3">int</name></type> <name pos:start="27:5" pos:end="27:7">cnt</name><init pos:start="27:8" pos:end="27:9">=<expr pos:start="27:9" pos:end="27:9"><literal type="number" pos:start="27:9" pos:end="27:9">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="28:1" pos:end="28:17"><decl pos:start="28:1" pos:end="28:16"><type pos:start="28:1" pos:end="28:3"><name pos:start="28:1" pos:end="28:3">int</name></type> <name pos:start="28:5" pos:end="28:16"><name pos:start="28:5" pos:end="28:8">sum1</name><index pos:start="28:9" pos:end="28:16">[<expr pos:start="28:10" pos:end="28:15"><literal type="number" pos:start="28:10" pos:end="28:15">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="29:1" pos:end="29:17"><decl pos:start="29:1" pos:end="29:16"><type pos:start="29:1" pos:end="29:3"><name pos:start="29:1" pos:end="29:3">int</name></type> <name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:8">sum2</name><index pos:start="29:9" pos:end="29:16">[<expr pos:start="29:10" pos:end="29:15"><literal type="number" pos:start="29:10" pos:end="29:15">100000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="30:1" pos:end="30:13"><decl pos:start="30:1" pos:end="30:12"><type pos:start="30:1" pos:end="30:3"><name pos:start="30:1" pos:end="30:3">int</name></type> <name pos:start="30:5" pos:end="30:12"><name pos:start="30:5" pos:end="30:5">f</name><index pos:start="30:6" pos:end="30:12">[<expr pos:start="30:7" pos:end="30:11"><literal type="number" pos:start="30:7" pos:end="30:11">10000</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt pos:start="31:1" pos:end="31:12"><decl pos:start="31:1" pos:end="31:11"><type pos:start="31:1" pos:end="31:3"><name pos:start="31:1" pos:end="31:3">int</name></type> <name pos:start="31:5" pos:end="31:9">flag1</name><init pos:start="31:10" pos:end="31:11">=<expr pos:start="31:11" pos:end="31:11"><literal type="number" pos:start="31:11" pos:end="31:11">0</literal></expr></init></decl>;</decl_stmt>
<function pos:start="32:1" pos:end="62:1"><type pos:start="32:1" pos:end="32:4"><name pos:start="32:1" pos:end="32:4">void</name></type> <name pos:start="32:6" pos:end="32:11">tarjan</name><parameter_list pos:start="32:12" pos:end="32:18">(<parameter pos:start="32:13" pos:end="32:17"><decl pos:start="32:13" pos:end="32:17"><type pos:start="32:13" pos:end="32:15"><name pos:start="32:13" pos:end="32:15">int</name></type> <name pos:start="32:17" pos:end="32:17">u</name></decl></parameter>)</parameter_list><block pos:start="32:19" pos:end="62:1">{<block_content pos:start="33:5" pos:end="61:5">
    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:7">dfn</name><index pos:start="33:8" pos:end="33:10">[<expr pos:start="33:9" pos:end="33:9"><name pos:start="33:9" pos:end="33:9">u</name></expr>]</index></name><operator pos:start="33:11" pos:end="33:11">=</operator><name pos:start="33:12" pos:end="33:14">tot</name></expr><operator pos:start="33:15" pos:end="33:15">,</operator><expr pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:21"><name pos:start="33:16" pos:end="33:18">low</name><index pos:start="33:19" pos:end="33:21">[<expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">u</name></expr>]</index></name><operator pos:start="33:22" pos:end="33:22">=</operator><name pos:start="33:23" pos:end="33:25">tot</name></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:10"><expr pos:start="34:5" pos:end="34:9"><name pos:start="34:5" pos:end="34:7">tot</name><operator pos:start="34:8" pos:end="34:9">++</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:8">zhan</name><index pos:start="35:9" pos:end="35:19">[<expr pos:start="35:10" pos:end="35:18"><name pos:start="35:10" pos:end="35:16">topzhan</name><operator pos:start="35:17" pos:end="35:18">++</operator></expr>]</index></name><operator pos:start="35:20" pos:end="35:20">=</operator><name pos:start="35:21" pos:end="35:21">u</name></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:14"><expr pos:start="36:5" pos:end="36:13"><name pos:start="36:5" pos:end="36:11"><name pos:start="36:5" pos:end="36:8">flag</name><index pos:start="36:9" pos:end="36:11">[<expr pos:start="36:10" pos:end="36:10"><name pos:start="36:10" pos:end="36:10">u</name></expr>]</index></name><operator pos:start="36:12" pos:end="36:12">=</operator><literal type="number" pos:start="36:13" pos:end="36:13">1</literal></expr>;</expr_stmt>
    <for pos:start="37:5" pos:end="46:5">for<control pos:start="37:8" pos:end="37:36">(<init pos:start="37:9" pos:end="37:16"><decl pos:start="37:9" pos:end="37:15"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:13">i</name><init pos:start="37:14" pos:end="37:15">=<expr pos:start="37:15" pos:end="37:15"><literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr></init></decl>;</init><condition pos:start="37:17" pos:end="37:32"><expr pos:start="37:17" pos:end="37:31"><name pos:start="37:17" pos:end="37:17">i</name><operator pos:start="37:18" pos:end="37:18">&lt;</operator><name pos:start="37:19" pos:end="37:24"><name pos:start="37:19" pos:end="37:21">ver</name><index pos:start="37:22" pos:end="37:24">[<expr pos:start="37:23" pos:end="37:23"><name pos:start="37:23" pos:end="37:23">u</name></expr>]</index></name><operator pos:start="37:25" pos:end="37:25">.</operator><call pos:start="37:26" pos:end="37:31"><name pos:start="37:26" pos:end="37:29">size</name><argument_list pos:start="37:30" pos:end="37:31">()</argument_list></call></expr>;</condition><incr pos:start="37:33" pos:end="37:35"><expr pos:start="37:33" pos:end="37:35"><name pos:start="37:33" pos:end="37:33">i</name><operator pos:start="37:34" pos:end="37:35">++</operator></expr></incr>)</control><block pos:start="37:37" pos:end="46:5">{<block_content pos:start="38:9" pos:end="45:9">
        <decl_stmt pos:start="38:9" pos:end="38:24"><decl pos:start="38:9" pos:end="38:23"><type pos:start="38:9" pos:end="38:11"><name pos:start="38:9" pos:end="38:11">int</name></type> <name pos:start="38:13" pos:end="38:13">v</name><init pos:start="38:14" pos:end="38:23">=<expr pos:start="38:15" pos:end="38:23"><name pos:start="38:15" pos:end="38:23"><name pos:start="38:15" pos:end="38:17">ver</name><index pos:start="38:18" pos:end="38:20">[<expr pos:start="38:19" pos:end="38:19"><name pos:start="38:19" pos:end="38:19">u</name></expr>]</index><index pos:start="38:21" pos:end="38:23">[<expr pos:start="38:22" pos:end="38:22"><name pos:start="38:22" pos:end="38:22">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="42:9">if<condition pos:start="39:11" pos:end="39:21">(<expr pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:17"><name pos:start="39:12" pos:end="39:14">dfn</name><index pos:start="39:15" pos:end="39:17">[<expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">v</name></expr>]</index></name><operator pos:start="39:18" pos:end="39:19">==</operator><literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>)</condition><block pos:start="39:22" pos:end="42:9">{<block_content pos:start="40:13" pos:end="41:38">
            <expr_stmt pos:start="40:13" pos:end="40:22"><expr pos:start="40:13" pos:end="40:21"><call pos:start="40:13" pos:end="40:21"><name pos:start="40:13" pos:end="40:18">tarjan</name><argument_list pos:start="40:19" pos:end="40:21">(<argument pos:start="40:20" pos:end="40:20"><expr pos:start="40:20" pos:end="40:20"><name pos:start="40:20" pos:end="40:20">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="41:13" pos:end="41:38"><expr pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:15">low</name><index pos:start="41:16" pos:end="41:18">[<expr pos:start="41:17" pos:end="41:17"><name pos:start="41:17" pos:end="41:17">u</name></expr>]</index></name><operator pos:start="41:19" pos:end="41:19">=</operator><call pos:start="41:20" pos:end="41:37"><name pos:start="41:20" pos:end="41:22">min</name><argument_list pos:start="41:23" pos:end="41:37">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:26">low</name><index pos:start="41:27" pos:end="41:29">[<expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="41:31" pos:end="41:36"><expr pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:33">low</name><index pos:start="41:34" pos:end="41:36">[<expr pos:start="41:35" pos:end="41:35"><name pos:start="41:35" pos:end="41:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="43:9" pos:end="45:9">else if<condition pos:start="43:16" pos:end="43:27">(<expr pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:23"><name pos:start="43:17" pos:end="43:20">flag</name><index pos:start="43:21" pos:end="43:23">[<expr pos:start="43:22" pos:end="43:22"><name pos:start="43:22" pos:end="43:22">v</name></expr>]</index></name><operator pos:start="43:24" pos:end="43:25">==</operator><literal type="number" pos:start="43:26" pos:end="43:26">1</literal></expr>)</condition><block pos:start="43:28" pos:end="45:9">{<block_content pos:start="44:13" pos:end="44:38">
            <expr_stmt pos:start="44:13" pos:end="44:38"><expr pos:start="44:13" pos:end="44:37"><name pos:start="44:13" pos:end="44:18"><name pos:start="44:13" pos:end="44:15">low</name><index pos:start="44:16" pos:end="44:18">[<expr pos:start="44:17" pos:end="44:17"><name pos:start="44:17" pos:end="44:17">u</name></expr>]</index></name><operator pos:start="44:19" pos:end="44:19">=</operator><call pos:start="44:20" pos:end="44:37"><name pos:start="44:20" pos:end="44:22">min</name><argument_list pos:start="44:23" pos:end="44:37">(<argument pos:start="44:24" pos:end="44:29"><expr pos:start="44:24" pos:end="44:29"><name pos:start="44:24" pos:end="44:29"><name pos:start="44:24" pos:end="44:26">low</name><index pos:start="44:27" pos:end="44:29">[<expr pos:start="44:28" pos:end="44:28"><name pos:start="44:28" pos:end="44:28">u</name></expr>]</index></name></expr></argument>,<argument pos:start="44:31" pos:end="44:36"><expr pos:start="44:31" pos:end="44:36"><name pos:start="44:31" pos:end="44:36"><name pos:start="44:31" pos:end="44:33">dfn</name><index pos:start="44:34" pos:end="44:36">[<expr pos:start="44:35" pos:end="44:35"><name pos:start="44:35" pos:end="44:35">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="47:5" pos:end="61:5"><if pos:start="47:5" pos:end="61:5">if<condition pos:start="47:7" pos:end="47:22">(<expr pos:start="47:8" pos:end="47:21"><name pos:start="47:8" pos:end="47:13"><name pos:start="47:8" pos:end="47:10">low</name><index pos:start="47:11" pos:end="47:13">[<expr pos:start="47:12" pos:end="47:12"><name pos:start="47:12" pos:end="47:12">u</name></expr>]</index></name><operator pos:start="47:14" pos:end="47:15">==</operator><name pos:start="47:16" pos:end="47:21"><name pos:start="47:16" pos:end="47:18">dfn</name><index pos:start="47:19" pos:end="47:21">[<expr pos:start="47:20" pos:end="47:20"><name pos:start="47:20" pos:end="47:20">u</name></expr>]</index></name></expr>)</condition><block pos:start="47:23" pos:end="61:5">{<block_content pos:start="48:9" pos:end="60:9">
        <expr_stmt pos:start="48:9" pos:end="48:14"><expr pos:start="48:9" pos:end="48:13"><name pos:start="48:9" pos:end="48:11">cnt</name><operator pos:start="48:12" pos:end="48:13">++</operator></expr>;</expr_stmt>
        <if_stmt pos:start="49:9" pos:end="51:9"><if pos:start="49:9" pos:end="51:9">if<condition pos:start="49:11" pos:end="49:16">(<expr pos:start="49:12" pos:end="49:15"><name pos:start="49:12" pos:end="49:12">u</name><operator pos:start="49:13" pos:end="49:14">==</operator><literal type="number" pos:start="49:15" pos:end="49:15">1</literal></expr>)</condition><block pos:start="49:17" pos:end="51:9">{<block_content pos:start="50:13" pos:end="50:22">
            <expr_stmt pos:start="50:13" pos:end="50:22"><expr pos:start="50:13" pos:end="50:21"><name pos:start="50:13" pos:end="50:17">flag1</name><operator pos:start="50:18" pos:end="50:18">=</operator><name pos:start="50:19" pos:end="50:21">cnt</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <while pos:start="52:9" pos:end="60:9">while<condition pos:start="52:14" pos:end="52:16">(<expr pos:start="52:15" pos:end="52:15"><literal type="number" pos:start="52:15" pos:end="52:15">1</literal></expr>)</condition><block pos:start="52:17" pos:end="60:9">{<block_content pos:start="53:13" pos:end="59:13">
            <decl_stmt pos:start="53:13" pos:end="53:34"><decl pos:start="53:13" pos:end="53:33"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:17">x</name><init pos:start="53:18" pos:end="53:33">=<expr pos:start="53:19" pos:end="53:33"><name pos:start="53:19" pos:end="53:33"><name pos:start="53:19" pos:end="53:22">zhan</name><index pos:start="53:23" pos:end="53:33">[<expr pos:start="53:24" pos:end="53:32"><name pos:start="53:24" pos:end="53:30">topzhan</name><operator pos:start="53:31" pos:end="53:31">-</operator><literal type="number" pos:start="53:32" pos:end="53:32">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="54:13" pos:end="54:22"><expr pos:start="54:13" pos:end="54:21"><name pos:start="54:13" pos:end="54:19">topzhan</name><operator pos:start="54:20" pos:end="54:21">--</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="55:13" pos:end="55:22"><expr pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:16">flag</name><index pos:start="55:17" pos:end="55:19">[<expr pos:start="55:18" pos:end="55:18"><name pos:start="55:18" pos:end="55:18">x</name></expr>]</index></name><operator pos:start="55:20" pos:end="55:20">=</operator><literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="56:13" pos:end="56:24"><expr pos:start="56:13" pos:end="56:23"><name pos:start="56:13" pos:end="56:19"><name pos:start="56:13" pos:end="56:16">sum1</name><index pos:start="56:17" pos:end="56:19">[<expr pos:start="56:18" pos:end="56:18"><name pos:start="56:18" pos:end="56:18">x</name></expr>]</index></name><operator pos:start="56:20" pos:end="56:20">=</operator><name pos:start="56:21" pos:end="56:23">cnt</name></expr>;</expr_stmt>
            <if_stmt pos:start="57:13" pos:end="59:13"><if pos:start="57:13" pos:end="59:13">if<condition pos:start="57:15" pos:end="57:20">(<expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:16">x</name><operator pos:start="57:17" pos:end="57:18">==</operator><name pos:start="57:19" pos:end="57:19">u</name></expr>)</condition><block pos:start="57:21" pos:end="59:13">{<block_content pos:start="58:17" pos:end="58:22">
                <break pos:start="58:17" pos:end="58:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function pos:start="63:1" pos:end="74:1"><type pos:start="63:1" pos:end="63:3"><name pos:start="63:1" pos:end="63:3">int</name></type> <name pos:start="63:5" pos:end="63:7">dfs</name><parameter_list pos:start="63:8" pos:end="63:14">(<parameter pos:start="63:9" pos:end="63:13"><decl pos:start="63:9" pos:end="63:13"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:13">u</name></decl></parameter>)</parameter_list><block pos:start="63:15" pos:end="74:1">{<block_content pos:start="64:5" pos:end="73:16">
    <if_stmt pos:start="64:5" pos:end="66:5"><if pos:start="64:5" pos:end="66:5">if<condition pos:start="64:7" pos:end="64:15">(<expr pos:start="64:8" pos:end="64:14"><name pos:start="64:8" pos:end="64:11"><name pos:start="64:8" pos:end="64:8">f</name><index pos:start="64:9" pos:end="64:11">[<expr pos:start="64:10" pos:end="64:10"><name pos:start="64:10" pos:end="64:10">u</name></expr>]</index></name><operator pos:start="64:12" pos:end="64:13">!=</operator><literal type="number" pos:start="64:14" pos:end="64:14">0</literal></expr>)</condition><block pos:start="64:16" pos:end="66:5">{<block_content pos:start="65:9" pos:end="65:20">
        <return pos:start="65:9" pos:end="65:20">return <expr pos:start="65:16" pos:end="65:19"><name pos:start="65:16" pos:end="65:19"><name pos:start="65:16" pos:end="65:16">f</name><index pos:start="65:17" pos:end="65:19">[<expr pos:start="65:18" pos:end="65:18"><name pos:start="65:18" pos:end="65:18">u</name></expr>]</index></name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt pos:start="67:5" pos:end="67:21"><decl pos:start="67:5" pos:end="67:20"><type pos:start="67:5" pos:end="67:7"><name pos:start="67:5" pos:end="67:7">int</name></type> <name pos:start="67:9" pos:end="67:12">maxx</name><init pos:start="67:13" pos:end="67:20">=<expr pos:start="67:14" pos:end="67:20"><name pos:start="67:14" pos:end="67:20"><name pos:start="67:14" pos:end="67:17">sum2</name><index pos:start="67:18" pos:end="67:20">[<expr pos:start="67:19" pos:end="67:19"><name pos:start="67:19" pos:end="67:19">u</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <for pos:start="68:5" pos:end="71:5">for<control pos:start="68:8" pos:end="68:37">(<init pos:start="68:9" pos:end="68:16"><decl pos:start="68:9" pos:end="68:15"><type pos:start="68:9" pos:end="68:11"><name pos:start="68:9" pos:end="68:11">int</name></type> <name pos:start="68:13" pos:end="68:13">i</name><init pos:start="68:14" pos:end="68:15">=<expr pos:start="68:15" pos:end="68:15"><literal type="number" pos:start="68:15" pos:end="68:15">0</literal></expr></init></decl>;</init><condition pos:start="68:17" pos:end="68:33"><expr pos:start="68:17" pos:end="68:32"><name pos:start="68:17" pos:end="68:17">i</name><operator pos:start="68:18" pos:end="68:18">&lt;</operator><name pos:start="68:19" pos:end="68:25"><name pos:start="68:19" pos:end="68:22">ver2</name><index pos:start="68:23" pos:end="68:25">[<expr pos:start="68:24" pos:end="68:24"><name pos:start="68:24" pos:end="68:24">u</name></expr>]</index></name><operator pos:start="68:26" pos:end="68:26">.</operator><call pos:start="68:27" pos:end="68:32"><name pos:start="68:27" pos:end="68:30">size</name><argument_list pos:start="68:31" pos:end="68:32">()</argument_list></call></expr>;</condition><incr pos:start="68:34" pos:end="68:36"><expr pos:start="68:34" pos:end="68:36"><name pos:start="68:34" pos:end="68:34">i</name><operator pos:start="68:35" pos:end="68:36">++</operator></expr></incr>)</control><block pos:start="68:38" pos:end="71:5">{<block_content pos:start="69:9" pos:end="70:30">
        <decl_stmt pos:start="69:9" pos:end="69:25"><decl pos:start="69:9" pos:end="69:24"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:13">v</name><init pos:start="69:14" pos:end="69:24">=<expr pos:start="69:15" pos:end="69:24"><name pos:start="69:15" pos:end="69:24"><name pos:start="69:15" pos:end="69:18">ver2</name><index pos:start="69:19" pos:end="69:21">[<expr pos:start="69:20" pos:end="69:20"><name pos:start="69:20" pos:end="69:20">u</name></expr>]</index><index pos:start="69:22" pos:end="69:24">[<expr pos:start="69:23" pos:end="69:23"><name pos:start="69:23" pos:end="69:23">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="70:9" pos:end="70:30"><expr pos:start="70:9" pos:end="70:29"><name pos:start="70:9" pos:end="70:12">maxx</name><operator pos:start="70:13" pos:end="70:13">=</operator><call pos:start="70:14" pos:end="70:29"><name pos:start="70:14" pos:end="70:16">max</name><argument_list pos:start="70:17" pos:end="70:29">(<argument pos:start="70:18" pos:end="70:21"><expr pos:start="70:18" pos:end="70:21"><name pos:start="70:18" pos:end="70:21">maxx</name></expr></argument>,<argument pos:start="70:23" pos:end="70:28"><expr pos:start="70:23" pos:end="70:28"><call pos:start="70:23" pos:end="70:28"><name pos:start="70:23" pos:end="70:25">dfs</name><argument_list pos:start="70:26" pos:end="70:28">(<argument pos:start="70:27" pos:end="70:27"><expr pos:start="70:27" pos:end="70:27"><name pos:start="70:27" pos:end="70:27">v</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="72:5" pos:end="72:14"><expr pos:start="72:5" pos:end="72:13"><name pos:start="72:5" pos:end="72:8"><name pos:start="72:5" pos:end="72:5">f</name><index pos:start="72:6" pos:end="72:8">[<expr pos:start="72:7" pos:end="72:7"><name pos:start="72:7" pos:end="72:7">u</name></expr>]</index></name><operator pos:start="72:9" pos:end="72:9">=</operator><name pos:start="72:10" pos:end="72:13">maxx</name></expr>;</expr_stmt>
    <return pos:start="73:5" pos:end="73:16">return <expr pos:start="73:12" pos:end="73:15"><name pos:start="73:12" pos:end="73:15">maxx</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="75:1" pos:end="165:1"><type pos:start="75:1" pos:end="75:3"><name pos:start="75:1" pos:end="75:3">int</name></type> <name pos:start="75:5" pos:end="75:8">main</name><parameter_list pos:start="75:9" pos:end="75:10">()</parameter_list><block pos:start="75:11" pos:end="165:1">{<block_content pos:start="76:5" pos:end="164:13">
    <expr_stmt pos:start="76:5" pos:end="76:37"><expr pos:start="76:5" pos:end="76:36"><call pos:start="76:5" pos:end="76:36"><name pos:start="76:5" pos:end="76:11">freopen</name><argument_list pos:start="76:12" pos:end="76:36">(<argument pos:start="76:13" pos:end="76:25"><expr pos:start="76:13" pos:end="76:25"><literal type="string" pos:start="76:13" pos:end="76:25">"treasure.in"</literal></expr></argument>,<argument pos:start="76:27" pos:end="76:29"><expr pos:start="76:27" pos:end="76:29"><literal type="string" pos:start="76:27" pos:end="76:29">"r"</literal></expr></argument>,<argument pos:start="76:31" pos:end="76:35"><expr pos:start="76:31" pos:end="76:35"><name pos:start="76:31" pos:end="76:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="77:5" pos:end="77:39"><expr pos:start="77:5" pos:end="77:38"><call pos:start="77:5" pos:end="77:38"><name pos:start="77:5" pos:end="77:11">freopen</name><argument_list pos:start="77:12" pos:end="77:38">(<argument pos:start="77:13" pos:end="77:26"><expr pos:start="77:13" pos:end="77:26"><literal type="string" pos:start="77:13" pos:end="77:26">"treasure.out"</literal></expr></argument>,<argument pos:start="77:28" pos:end="77:30"><expr pos:start="77:28" pos:end="77:30"><literal type="string" pos:start="77:28" pos:end="77:30">"w"</literal></expr></argument>,<argument pos:start="77:32" pos:end="77:37"><expr pos:start="77:32" pos:end="77:37"><name pos:start="77:32" pos:end="77:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="78:5" pos:end="78:15"><expr pos:start="78:5" pos:end="78:14"><call pos:start="78:5" pos:end="78:14"><name pos:start="78:5" pos:end="78:11"><name pos:start="78:5" pos:end="78:7">cin</name><operator pos:start="78:8" pos:end="78:8">.</operator><name pos:start="78:9" pos:end="78:11">tie</name></name><argument_list pos:start="78:12" pos:end="78:14">(<argument pos:start="78:13" pos:end="78:13"><expr pos:start="78:13" pos:end="78:13"><literal type="number" pos:start="78:13" pos:end="78:13">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="79:5" pos:end="79:16"><expr pos:start="79:5" pos:end="79:15"><call pos:start="79:5" pos:end="79:15"><name pos:start="79:5" pos:end="79:12"><name pos:start="79:5" pos:end="79:8">cout</name><operator pos:start="79:9" pos:end="79:9">.</operator><name pos:start="79:10" pos:end="79:12">tie</name></name><argument_list pos:start="79:13" pos:end="79:15">(<argument pos:start="79:14" pos:end="79:14"><expr pos:start="79:14" pos:end="79:14"><literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="80:5" pos:end="80:14"><expr pos:start="80:5" pos:end="80:13"><name pos:start="80:5" pos:end="80:7">cin</name><operator pos:start="80:8" pos:end="80:9">&gt;&gt;</operator><name pos:start="80:10" pos:end="80:10">n</name><operator pos:start="80:11" pos:end="80:12">&gt;&gt;</operator><name pos:start="80:13" pos:end="80:13">m</name></expr>;</expr_stmt>
    <for pos:start="81:5" pos:end="85:5">for<control pos:start="81:8" pos:end="81:25">(<init pos:start="81:9" pos:end="81:16"><decl pos:start="81:9" pos:end="81:15"><type pos:start="81:9" pos:end="81:11"><name pos:start="81:9" pos:end="81:11">int</name></type> <name pos:start="81:13" pos:end="81:13">i</name><init pos:start="81:14" pos:end="81:15">=<expr pos:start="81:15" pos:end="81:15"><literal type="number" pos:start="81:15" pos:end="81:15">1</literal></expr></init></decl>;</init><condition pos:start="81:17" pos:end="81:21"><expr pos:start="81:17" pos:end="81:20"><name pos:start="81:17" pos:end="81:17">i</name><operator pos:start="81:18" pos:end="81:19">&lt;=</operator><name pos:start="81:20" pos:end="81:20">n</name></expr>;</condition><incr pos:start="81:22" pos:end="81:24"><expr pos:start="81:22" pos:end="81:24"><name pos:start="81:22" pos:end="81:22">i</name><operator pos:start="81:23" pos:end="81:24">++</operator></expr></incr>)</control><block pos:start="81:26" pos:end="85:5">{<block_content pos:start="82:9" pos:end="84:9">
        <for pos:start="82:9" pos:end="84:9">for<control pos:start="82:12" pos:end="82:29">(<init pos:start="82:13" pos:end="82:20"><decl pos:start="82:13" pos:end="82:19"><type pos:start="82:13" pos:end="82:15"><name pos:start="82:13" pos:end="82:15">int</name></type> <name pos:start="82:17" pos:end="82:17">j</name><init pos:start="82:18" pos:end="82:19">=<expr pos:start="82:19" pos:end="82:19"><literal type="number" pos:start="82:19" pos:end="82:19">1</literal></expr></init></decl>;</init><condition pos:start="82:21" pos:end="82:25"><expr pos:start="82:21" pos:end="82:24"><name pos:start="82:21" pos:end="82:21">j</name><operator pos:start="82:22" pos:end="82:23">&lt;=</operator><name pos:start="82:24" pos:end="82:24">m</name></expr>;</condition><incr pos:start="82:26" pos:end="82:28"><expr pos:start="82:26" pos:end="82:28"><name pos:start="82:26" pos:end="82:26">j</name><operator pos:start="82:27" pos:end="82:28">++</operator></expr></incr>)</control><block pos:start="82:30" pos:end="84:9">{<block_content pos:start="83:13" pos:end="83:25">
            <expr_stmt pos:start="83:13" pos:end="83:25"><expr pos:start="83:13" pos:end="83:24"><name pos:start="83:13" pos:end="83:15">cin</name><operator pos:start="83:16" pos:end="83:17">&gt;&gt;</operator><name pos:start="83:18" pos:end="83:24"><name pos:start="83:18" pos:end="83:18">a</name><index pos:start="83:19" pos:end="83:21">[<expr pos:start="83:20" pos:end="83:20"><name pos:start="83:20" pos:end="83:20">i</name></expr>]</index><index pos:start="83:22" pos:end="83:24">[<expr pos:start="83:23" pos:end="83:23"><name pos:start="83:23" pos:end="83:23">j</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <decl_stmt pos:start="86:5" pos:end="86:14"><decl pos:start="86:5" pos:end="86:13"><type pos:start="86:5" pos:end="86:7"><name pos:start="86:5" pos:end="86:7">int</name></type> <name pos:start="86:9" pos:end="86:11">tot</name><init pos:start="86:12" pos:end="86:13">=<expr pos:start="86:13" pos:end="86:13"><literal type="number" pos:start="86:13" pos:end="86:13">1</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="87:5" pos:end="92:5">for<control pos:start="87:8" pos:end="87:25">(<init pos:start="87:9" pos:end="87:16"><decl pos:start="87:9" pos:end="87:15"><type pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:11">int</name></type> <name pos:start="87:13" pos:end="87:13">i</name><init pos:start="87:14" pos:end="87:15">=<expr pos:start="87:15" pos:end="87:15"><literal type="number" pos:start="87:15" pos:end="87:15">1</literal></expr></init></decl>;</init><condition pos:start="87:17" pos:end="87:21"><expr pos:start="87:17" pos:end="87:20"><name pos:start="87:17" pos:end="87:17">i</name><operator pos:start="87:18" pos:end="87:19">&lt;=</operator><name pos:start="87:20" pos:end="87:20">n</name></expr>;</condition><incr pos:start="87:22" pos:end="87:24"><expr pos:start="87:22" pos:end="87:24"><name pos:start="87:22" pos:end="87:22">i</name><operator pos:start="87:23" pos:end="87:24">++</operator></expr></incr>)</control><block pos:start="87:26" pos:end="92:5">{<block_content pos:start="88:9" pos:end="91:9">
        <for pos:start="88:9" pos:end="91:9">for<control pos:start="88:12" pos:end="88:29">(<init pos:start="88:13" pos:end="88:20"><decl pos:start="88:13" pos:end="88:19"><type pos:start="88:13" pos:end="88:15"><name pos:start="88:13" pos:end="88:15">int</name></type> <name pos:start="88:17" pos:end="88:17">j</name><init pos:start="88:18" pos:end="88:19">=<expr pos:start="88:19" pos:end="88:19"><literal type="number" pos:start="88:19" pos:end="88:19">1</literal></expr></init></decl>;</init><condition pos:start="88:21" pos:end="88:25"><expr pos:start="88:21" pos:end="88:24"><name pos:start="88:21" pos:end="88:21">j</name><operator pos:start="88:22" pos:end="88:23">&lt;=</operator><name pos:start="88:24" pos:end="88:24">m</name></expr>;</condition><incr pos:start="88:26" pos:end="88:28"><expr pos:start="88:26" pos:end="88:28"><name pos:start="88:26" pos:end="88:26">j</name><operator pos:start="88:27" pos:end="88:28">++</operator></expr></incr>)</control><block pos:start="88:30" pos:end="91:9">{<block_content pos:start="89:13" pos:end="90:18">
            <expr_stmt pos:start="89:13" pos:end="89:24"><expr pos:start="89:13" pos:end="89:23"><name pos:start="89:13" pos:end="89:19"><name pos:start="89:13" pos:end="89:13">b</name><index pos:start="89:14" pos:end="89:16">[<expr pos:start="89:15" pos:end="89:15"><name pos:start="89:15" pos:end="89:15">i</name></expr>]</index><index pos:start="89:17" pos:end="89:19">[<expr pos:start="89:18" pos:end="89:18"><name pos:start="89:18" pos:end="89:18">j</name></expr>]</index></name><operator pos:start="89:20" pos:end="89:20">=</operator><name pos:start="89:21" pos:end="89:23">tot</name></expr>;</expr_stmt>
            <expr_stmt pos:start="90:13" pos:end="90:18"><expr pos:start="90:13" pos:end="90:17"><name pos:start="90:13" pos:end="90:15">tot</name><operator pos:start="90:16" pos:end="90:17">++</operator></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <decl_stmt pos:start="93:5" pos:end="93:14"><decl pos:start="93:5" pos:end="93:10"><type pos:start="93:5" pos:end="93:7"><name pos:start="93:5" pos:end="93:7">int</name></type> <name pos:start="93:9" pos:end="93:10">t1</name></decl>,<decl pos:start="93:12" pos:end="93:13"><type ref="prev" pos:start="93:5" pos:end="93:7"/><name pos:start="93:12" pos:end="93:13">t2</name></decl>;</decl_stmt>
    <while pos:start="94:5" pos:end="99:5">while<condition pos:start="94:10" pos:end="94:22">(<expr pos:start="94:11" pos:end="94:21"><name pos:start="94:11" pos:end="94:13">cin</name><operator pos:start="94:14" pos:end="94:15">&gt;&gt;</operator><name pos:start="94:16" pos:end="94:17">t1</name><operator pos:start="94:18" pos:end="94:19">&gt;&gt;</operator><name pos:start="94:20" pos:end="94:21">t2</name></expr>)</condition><block pos:start="94:23" pos:end="99:5">{<block_content pos:start="95:9" pos:end="98:14">
        <expr_stmt pos:start="95:9" pos:end="95:18"><expr pos:start="95:9" pos:end="95:12"><name pos:start="95:9" pos:end="95:10">t1</name><operator pos:start="95:11" pos:end="95:12">++</operator></expr><operator pos:start="95:13" pos:end="95:13">,</operator><expr pos:start="95:14" pos:end="95:17"><name pos:start="95:14" pos:end="95:15">t2</name><operator pos:start="95:16" pos:end="95:17">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="96:9" pos:end="96:18"><expr pos:start="96:9" pos:end="96:17"><name pos:start="96:9" pos:end="96:14"><name pos:start="96:9" pos:end="96:9">x</name><index pos:start="96:10" pos:end="96:14">[<expr pos:start="96:11" pos:end="96:13"><name pos:start="96:11" pos:end="96:13">top</name></expr>]</index></name><operator pos:start="96:15" pos:end="96:15">=</operator><name pos:start="96:16" pos:end="96:17">t1</name></expr>;</expr_stmt>
        <expr_stmt pos:start="97:9" pos:end="97:18"><expr pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:14"><name pos:start="97:9" pos:end="97:9">y</name><index pos:start="97:10" pos:end="97:14">[<expr pos:start="97:11" pos:end="97:13"><name pos:start="97:11" pos:end="97:13">top</name></expr>]</index></name><operator pos:start="97:15" pos:end="97:15">=</operator><name pos:start="97:16" pos:end="97:17">t2</name></expr>;</expr_stmt>
        <expr_stmt pos:start="98:9" pos:end="98:14"><expr pos:start="98:9" pos:end="98:13"><name pos:start="98:9" pos:end="98:11">top</name><operator pos:start="98:12" pos:end="98:13">++</operator></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="100:5" pos:end="100:10"><expr pos:start="100:5" pos:end="100:9"><name pos:start="100:5" pos:end="100:7">top</name><operator pos:start="100:8" pos:end="100:9">--</operator></expr>;</expr_stmt>
    <for pos:start="101:5" pos:end="147:5">for<control pos:start="101:8" pos:end="101:25">(<init pos:start="101:9" pos:end="101:16"><decl pos:start="101:9" pos:end="101:15"><type pos:start="101:9" pos:end="101:11"><name pos:start="101:9" pos:end="101:11">int</name></type> <name pos:start="101:13" pos:end="101:13">i</name><init pos:start="101:14" pos:end="101:15">=<expr pos:start="101:15" pos:end="101:15"><literal type="number" pos:start="101:15" pos:end="101:15">1</literal></expr></init></decl>;</init><condition pos:start="101:17" pos:end="101:21"><expr pos:start="101:17" pos:end="101:20"><name pos:start="101:17" pos:end="101:17">i</name><operator pos:start="101:18" pos:end="101:19">&lt;=</operator><name pos:start="101:20" pos:end="101:20">n</name></expr>;</condition><incr pos:start="101:22" pos:end="101:24"><expr pos:start="101:22" pos:end="101:24"><name pos:start="101:22" pos:end="101:22">i</name><operator pos:start="101:23" pos:end="101:24">++</operator></expr></incr>)</control><block pos:start="101:26" pos:end="147:5">{<block_content pos:start="102:9" pos:end="146:9">
        <for pos:start="102:9" pos:end="146:9">for<control pos:start="102:12" pos:end="102:29">(<init pos:start="102:13" pos:end="102:20"><decl pos:start="102:13" pos:end="102:19"><type pos:start="102:13" pos:end="102:15"><name pos:start="102:13" pos:end="102:15">int</name></type> <name pos:start="102:17" pos:end="102:17">j</name><init pos:start="102:18" pos:end="102:19">=<expr pos:start="102:19" pos:end="102:19"><literal type="number" pos:start="102:19" pos:end="102:19">1</literal></expr></init></decl>;</init><condition pos:start="102:21" pos:end="102:25"><expr pos:start="102:21" pos:end="102:24"><name pos:start="102:21" pos:end="102:21">j</name><operator pos:start="102:22" pos:end="102:23">&lt;=</operator><name pos:start="102:24" pos:end="102:24">m</name></expr>;</condition><incr pos:start="102:26" pos:end="102:28"><expr pos:start="102:26" pos:end="102:28"><name pos:start="102:26" pos:end="102:26">j</name><operator pos:start="102:27" pos:end="102:28">++</operator></expr></incr>)</control><block pos:start="102:30" pos:end="146:9">{<block_content pos:start="103:13" pos:end="145:13">
            <decl_stmt pos:start="103:13" pos:end="103:26"><decl pos:start="103:13" pos:end="103:25"><type pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:15">int</name></type> <name pos:start="103:17" pos:end="103:17">t</name><init pos:start="103:18" pos:end="103:25">=<expr pos:start="103:19" pos:end="103:25"><name pos:start="103:19" pos:end="103:25"><name pos:start="103:19" pos:end="103:19">b</name><index pos:start="103:20" pos:end="103:22">[<expr pos:start="103:21" pos:end="103:21"><name pos:start="103:21" pos:end="103:21">i</name></expr>]</index><index pos:start="103:23" pos:end="103:25">[<expr pos:start="103:24" pos:end="103:24"><name pos:start="103:24" pos:end="103:24">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="104:13" pos:end="119:13"><if pos:start="104:13" pos:end="119:13">if<condition pos:start="104:15" pos:end="104:42">(<expr pos:start="104:16" pos:end="104:41"><name pos:start="104:16" pos:end="104:22"><name pos:start="104:16" pos:end="104:16">a</name><index pos:start="104:17" pos:end="104:19">[<expr pos:start="104:18" pos:end="104:18"><name pos:start="104:18" pos:end="104:18">i</name></expr>]</index><index pos:start="104:20" pos:end="104:22">[<expr pos:start="104:21" pos:end="104:21"><name pos:start="104:21" pos:end="104:21">j</name></expr>]</index></name><operator pos:start="104:23" pos:end="104:24">&lt;=</operator><literal type="char" pos:start="104:25" pos:end="104:27">'9'</literal><operator pos:start="104:28" pos:end="104:29">&amp;&amp;</operator><name pos:start="104:30" pos:end="104:36"><name pos:start="104:30" pos:end="104:30">a</name><index pos:start="104:31" pos:end="104:33">[<expr pos:start="104:32" pos:end="104:32"><name pos:start="104:32" pos:end="104:32">i</name></expr>]</index><index pos:start="104:34" pos:end="104:36">[<expr pos:start="104:35" pos:end="104:35"><name pos:start="104:35" pos:end="104:35">j</name></expr>]</index></name><operator pos:start="104:37" pos:end="104:38">&gt;=</operator><literal type="char" pos:start="104:39" pos:end="104:41">'1'</literal></expr>)</condition><block pos:start="104:43" pos:end="119:13">{<block_content pos:start="105:17" pos:end="118:17">
                <if_stmt pos:start="105:17" pos:end="111:17"><if pos:start="105:17" pos:end="111:17">if<condition pos:start="105:19" pos:end="105:24">(<expr pos:start="105:20" pos:end="105:23"><name pos:start="105:20" pos:end="105:20">i</name><operator pos:start="105:21" pos:end="105:22">!=</operator><name pos:start="105:23" pos:end="105:23">n</name></expr>)</condition><block pos:start="105:25" pos:end="111:17">{<block_content pos:start="106:21" pos:end="110:21">
                    <if_stmt pos:start="106:21" pos:end="110:21"><if pos:start="106:21" pos:end="110:21">if<condition pos:start="106:23" pos:end="106:38">(<expr pos:start="106:24" pos:end="106:37"><name pos:start="106:24" pos:end="106:32"><name pos:start="106:24" pos:end="106:24">a</name><index pos:start="106:25" pos:end="106:29">[<expr pos:start="106:26" pos:end="106:28"><name pos:start="106:26" pos:end="106:26">i</name><operator pos:start="106:27" pos:end="106:27">+</operator><literal type="number" pos:start="106:28" pos:end="106:28">1</literal></expr>]</index><index pos:start="106:30" pos:end="106:32">[<expr pos:start="106:31" pos:end="106:31"><name pos:start="106:31" pos:end="106:31">j</name></expr>]</index></name><operator pos:start="106:33" pos:end="106:34">!=</operator><literal type="char" pos:start="106:35" pos:end="106:37">'#'</literal></expr>)</condition><block pos:start="106:39" pos:end="110:21">{<block_content pos:start="107:25" pos:end="109:57">
                        <decl_stmt pos:start="107:25" pos:end="107:41"><decl pos:start="107:25" pos:end="107:40"><type pos:start="107:25" pos:end="107:27"><name pos:start="107:25" pos:end="107:27">int</name></type> <name pos:start="107:29" pos:end="107:30">tt</name><init pos:start="107:31" pos:end="107:40">=<expr pos:start="107:32" pos:end="107:40"><name pos:start="107:32" pos:end="107:40"><name pos:start="107:32" pos:end="107:32">b</name><index pos:start="107:33" pos:end="107:37">[<expr pos:start="107:34" pos:end="107:36"><name pos:start="107:34" pos:end="107:34">i</name><operator pos:start="107:35" pos:end="107:35">+</operator><literal type="number" pos:start="107:36" pos:end="107:36">1</literal></expr>]</index><index pos:start="107:38" pos:end="107:40">[<expr pos:start="107:39" pos:end="107:39"><name pos:start="107:39" pos:end="107:39">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="108:25" pos:end="108:45"><expr pos:start="108:25" pos:end="108:44"><name pos:start="108:25" pos:end="108:30"><name pos:start="108:25" pos:end="108:27">ver</name><index pos:start="108:28" pos:end="108:30">[<expr pos:start="108:29" pos:end="108:29"><name pos:start="108:29" pos:end="108:29">t</name></expr>]</index></name><operator pos:start="108:31" pos:end="108:31">.</operator><call pos:start="108:32" pos:end="108:44"><name pos:start="108:32" pos:end="108:40">push_back</name><argument_list pos:start="108:41" pos:end="108:44">(<argument pos:start="108:42" pos:end="108:43"><expr pos:start="108:42" pos:end="108:43"><name pos:start="108:42" pos:end="108:43">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="109:25" pos:end="109:57"><expr pos:start="109:25" pos:end="109:56"><name pos:start="109:25" pos:end="109:31"><name pos:start="109:25" pos:end="109:28">ver1</name><index pos:start="109:29" pos:end="109:31">[<expr pos:start="109:30" pos:end="109:30"><name pos:start="109:30" pos:end="109:30">t</name></expr>]</index></name><operator pos:start="109:32" pos:end="109:32">.</operator><call pos:start="109:33" pos:end="109:56"><name pos:start="109:33" pos:end="109:41">push_back</name><argument_list pos:start="109:42" pos:end="109:56">(<argument pos:start="109:43" pos:end="109:55"><expr pos:start="109:43" pos:end="109:55"><name pos:start="109:43" pos:end="109:51"><name pos:start="109:43" pos:end="109:43">a</name><index pos:start="109:44" pos:end="109:48">[<expr pos:start="109:45" pos:end="109:47"><name pos:start="109:45" pos:end="109:45">i</name><operator pos:start="109:46" pos:end="109:46">+</operator><literal type="number" pos:start="109:47" pos:end="109:47">1</literal></expr>]</index><index pos:start="109:49" pos:end="109:51">[<expr pos:start="109:50" pos:end="109:50"><name pos:start="109:50" pos:end="109:50">j</name></expr>]</index></name><operator pos:start="109:52" pos:end="109:52">-</operator><literal type="char" pos:start="109:53" pos:end="109:55">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt pos:start="112:17" pos:end="118:17"><if pos:start="112:17" pos:end="118:17">if<condition pos:start="112:19" pos:end="112:24">(<expr pos:start="112:20" pos:end="112:23"><name pos:start="112:20" pos:end="112:20">j</name><operator pos:start="112:21" pos:end="112:22">!=</operator><name pos:start="112:23" pos:end="112:23">m</name></expr>)</condition><block pos:start="112:25" pos:end="118:17">{<block_content pos:start="113:21" pos:end="117:21">
                    <if_stmt pos:start="113:21" pos:end="117:21"><if pos:start="113:21" pos:end="117:21">if<condition pos:start="113:23" pos:end="113:38">(<expr pos:start="113:24" pos:end="113:37"><name pos:start="113:24" pos:end="113:32"><name pos:start="113:24" pos:end="113:24">a</name><index pos:start="113:25" pos:end="113:27">[<expr pos:start="113:26" pos:end="113:26"><name pos:start="113:26" pos:end="113:26">i</name></expr>]</index><index pos:start="113:28" pos:end="113:32">[<expr pos:start="113:29" pos:end="113:31"><name pos:start="113:29" pos:end="113:29">j</name><operator pos:start="113:30" pos:end="113:30">+</operator><literal type="number" pos:start="113:31" pos:end="113:31">1</literal></expr>]</index></name><operator pos:start="113:33" pos:end="113:34">!=</operator><literal type="char" pos:start="113:35" pos:end="113:37">'#'</literal></expr>)</condition><block pos:start="113:39" pos:end="117:21">{<block_content pos:start="114:25" pos:end="116:57">
                        <decl_stmt pos:start="114:25" pos:end="114:41"><decl pos:start="114:25" pos:end="114:40"><type pos:start="114:25" pos:end="114:27"><name pos:start="114:25" pos:end="114:27">int</name></type> <name pos:start="114:29" pos:end="114:30">tt</name><init pos:start="114:31" pos:end="114:40">=<expr pos:start="114:32" pos:end="114:40"><name pos:start="114:32" pos:end="114:40"><name pos:start="114:32" pos:end="114:32">b</name><index pos:start="114:33" pos:end="114:35">[<expr pos:start="114:34" pos:end="114:34"><name pos:start="114:34" pos:end="114:34">i</name></expr>]</index><index pos:start="114:36" pos:end="114:40">[<expr pos:start="114:37" pos:end="114:39"><name pos:start="114:37" pos:end="114:37">j</name><operator pos:start="114:38" pos:end="114:38">+</operator><literal type="number" pos:start="114:39" pos:end="114:39">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="115:25" pos:end="115:45"><expr pos:start="115:25" pos:end="115:44"><name pos:start="115:25" pos:end="115:30"><name pos:start="115:25" pos:end="115:27">ver</name><index pos:start="115:28" pos:end="115:30">[<expr pos:start="115:29" pos:end="115:29"><name pos:start="115:29" pos:end="115:29">t</name></expr>]</index></name><operator pos:start="115:31" pos:end="115:31">.</operator><call pos:start="115:32" pos:end="115:44"><name pos:start="115:32" pos:end="115:40">push_back</name><argument_list pos:start="115:41" pos:end="115:44">(<argument pos:start="115:42" pos:end="115:43"><expr pos:start="115:42" pos:end="115:43"><name pos:start="115:42" pos:end="115:43">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="116:25" pos:end="116:57"><expr pos:start="116:25" pos:end="116:56"><name pos:start="116:25" pos:end="116:31"><name pos:start="116:25" pos:end="116:28">ver1</name><index pos:start="116:29" pos:end="116:31">[<expr pos:start="116:30" pos:end="116:30"><name pos:start="116:30" pos:end="116:30">t</name></expr>]</index></name><operator pos:start="116:32" pos:end="116:32">.</operator><call pos:start="116:33" pos:end="116:56"><name pos:start="116:33" pos:end="116:41">push_back</name><argument_list pos:start="116:42" pos:end="116:56">(<argument pos:start="116:43" pos:end="116:55"><expr pos:start="116:43" pos:end="116:55"><name pos:start="116:43" pos:end="116:51"><name pos:start="116:43" pos:end="116:43">a</name><index pos:start="116:44" pos:end="116:46">[<expr pos:start="116:45" pos:end="116:45"><name pos:start="116:45" pos:end="116:45">i</name></expr>]</index><index pos:start="116:47" pos:end="116:51">[<expr pos:start="116:48" pos:end="116:50"><name pos:start="116:48" pos:end="116:48">j</name><operator pos:start="116:49" pos:end="116:49">+</operator><literal type="number" pos:start="116:50" pos:end="116:50">1</literal></expr>]</index></name><operator pos:start="116:52" pos:end="116:52">-</operator><literal type="char" pos:start="116:53" pos:end="116:55">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="120:13" pos:end="145:13"><if pos:start="120:13" pos:end="145:13">if<condition pos:start="120:15" pos:end="120:28">(<expr pos:start="120:16" pos:end="120:27"><name pos:start="120:16" pos:end="120:22"><name pos:start="120:16" pos:end="120:16">a</name><index pos:start="120:17" pos:end="120:19">[<expr pos:start="120:18" pos:end="120:18"><name pos:start="120:18" pos:end="120:18">i</name></expr>]</index><index pos:start="120:20" pos:end="120:22">[<expr pos:start="120:21" pos:end="120:21"><name pos:start="120:21" pos:end="120:21">j</name></expr>]</index></name><operator pos:start="120:23" pos:end="120:24">==</operator><literal type="char" pos:start="120:25" pos:end="120:27">'*'</literal></expr>)</condition><block pos:start="120:29" pos:end="145:13">{<block_content pos:start="121:17" pos:end="144:17">
                <for pos:start="121:17" pos:end="130:17">for<control pos:start="121:20" pos:end="121:39">(<init pos:start="121:21" pos:end="121:28"><decl pos:start="121:21" pos:end="121:27"><type pos:start="121:21" pos:end="121:23"><name pos:start="121:21" pos:end="121:23">int</name></type> <name pos:start="121:25" pos:end="121:25">k</name><init pos:start="121:26" pos:end="121:27">=<expr pos:start="121:27" pos:end="121:27"><literal type="number" pos:start="121:27" pos:end="121:27">1</literal></expr></init></decl>;</init><condition pos:start="121:29" pos:end="121:35"><expr pos:start="121:29" pos:end="121:34"><name pos:start="121:29" pos:end="121:29">k</name><operator pos:start="121:30" pos:end="121:31">&lt;=</operator><name pos:start="121:32" pos:end="121:34">top</name></expr>;</condition><incr pos:start="121:36" pos:end="121:38"><expr pos:start="121:36" pos:end="121:38"><name pos:start="121:36" pos:end="121:36">k</name><operator pos:start="121:37" pos:end="121:38">++</operator></expr></incr>)</control><block pos:start="121:40" pos:end="130:17">{<block_content pos:start="122:21" pos:end="129:58">
                    <decl_stmt pos:start="122:21" pos:end="122:40"><decl pos:start="122:21" pos:end="122:31"><type pos:start="122:21" pos:end="122:23"><name pos:start="122:21" pos:end="122:23">int</name></type> <name pos:start="122:25" pos:end="122:26">xx</name><init pos:start="122:27" pos:end="122:31">=<expr pos:start="122:28" pos:end="122:31"><name pos:start="122:28" pos:end="122:31"><name pos:start="122:28" pos:end="122:28">x</name><index pos:start="122:29" pos:end="122:31">[<expr pos:start="122:30" pos:end="122:30"><name pos:start="122:30" pos:end="122:30">k</name></expr>]</index></name></expr></init></decl>,<decl pos:start="122:33" pos:end="122:39"><type ref="prev" pos:start="122:21" pos:end="122:23"/><name pos:start="122:33" pos:end="122:34">yy</name><init pos:start="122:35" pos:end="122:39">=<expr pos:start="122:36" pos:end="122:39"><name pos:start="122:36" pos:end="122:39"><name pos:start="122:36" pos:end="122:36">y</name><index pos:start="122:37" pos:end="122:39">[<expr pos:start="122:38" pos:end="122:38"><name pos:start="122:38" pos:end="122:38">k</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                    <if_stmt pos:start="123:21" pos:end="125:21"><if pos:start="123:21" pos:end="125:21">if<condition pos:start="123:23" pos:end="123:38">(<expr pos:start="123:24" pos:end="123:37"><name pos:start="123:24" pos:end="123:32"><name pos:start="123:24" pos:end="123:24">a</name><index pos:start="123:25" pos:end="123:28">[<expr pos:start="123:26" pos:end="123:27"><name pos:start="123:26" pos:end="123:27">xx</name></expr>]</index><index pos:start="123:29" pos:end="123:32">[<expr pos:start="123:30" pos:end="123:31"><name pos:start="123:30" pos:end="123:31">yy</name></expr>]</index></name><operator pos:start="123:33" pos:end="123:34">==</operator><literal type="char" pos:start="123:35" pos:end="123:37">'#'</literal></expr>)</condition><block pos:start="123:39" pos:end="125:21">{<block_content pos:start="124:25" pos:end="124:33">
                        <continue pos:start="124:25" pos:end="124:33">continue;</continue>
                    </block_content>}</block></if></if_stmt>
                    <decl_stmt pos:start="126:21" pos:end="126:37"><decl pos:start="126:21" pos:end="126:36"><type pos:start="126:21" pos:end="126:23"><name pos:start="126:21" pos:end="126:23">int</name></type> <name pos:start="126:25" pos:end="126:26">tt</name><init pos:start="126:27" pos:end="126:36">=<expr pos:start="126:28" pos:end="126:36"><name pos:start="126:28" pos:end="126:36"><name pos:start="126:28" pos:end="126:28">b</name><index pos:start="126:29" pos:end="126:32">[<expr pos:start="126:30" pos:end="126:31"><name pos:start="126:30" pos:end="126:31">xx</name></expr>]</index><index pos:start="126:33" pos:end="126:36">[<expr pos:start="126:34" pos:end="126:35"><name pos:start="126:34" pos:end="126:35">yy</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                    <expr_stmt pos:start="127:21" pos:end="127:41"><expr pos:start="127:21" pos:end="127:40"><name pos:start="127:21" pos:end="127:26"><name pos:start="127:21" pos:end="127:23">ver</name><index pos:start="127:24" pos:end="127:26">[<expr pos:start="127:25" pos:end="127:25"><name pos:start="127:25" pos:end="127:25">t</name></expr>]</index></name><operator pos:start="127:27" pos:end="127:27">.</operator><call pos:start="127:28" pos:end="127:40"><name pos:start="127:28" pos:end="127:36">push_back</name><argument_list pos:start="127:37" pos:end="127:40">(<argument pos:start="127:38" pos:end="127:39"><expr pos:start="127:38" pos:end="127:39"><name pos:start="127:38" pos:end="127:39">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if_stmt pos:start="128:21" pos:end="129:58"><if pos:start="128:21" pos:end="128:60">if<condition pos:start="128:23" pos:end="128:38">(<expr pos:start="128:24" pos:end="128:37"><name pos:start="128:24" pos:end="128:32"><name pos:start="128:24" pos:end="128:24">a</name><index pos:start="128:25" pos:end="128:28">[<expr pos:start="128:26" pos:end="128:27"><name pos:start="128:26" pos:end="128:27">xx</name></expr>]</index><index pos:start="128:29" pos:end="128:32">[<expr pos:start="128:30" pos:end="128:31"><name pos:start="128:30" pos:end="128:31">yy</name></expr>]</index></name><operator pos:start="128:33" pos:end="128:34">==</operator><literal type="char" pos:start="128:35" pos:end="128:37">'*'</literal></expr>)</condition><block type="pseudo" pos:start="128:40" pos:end="128:60"><block_content pos:start="128:40" pos:end="128:60"> <expr_stmt pos:start="128:40" pos:end="128:60"><expr pos:start="128:40" pos:end="128:59"><name pos:start="128:40" pos:end="128:46"><name pos:start="128:40" pos:end="128:43">ver1</name><index pos:start="128:44" pos:end="128:46">[<expr pos:start="128:45" pos:end="128:45"><name pos:start="128:45" pos:end="128:45">t</name></expr>]</index></name><operator pos:start="128:47" pos:end="128:47">.</operator><call pos:start="128:48" pos:end="128:59"><name pos:start="128:48" pos:end="128:56">push_back</name><argument_list pos:start="128:57" pos:end="128:59">(<argument pos:start="128:58" pos:end="128:58"><expr pos:start="128:58" pos:end="128:58"><literal type="number" pos:start="128:58" pos:end="128:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                    <else pos:start="129:21" pos:end="129:58">else<block type="pseudo" pos:start="129:26" pos:end="129:58"><block_content pos:start="129:26" pos:end="129:58"> <expr_stmt pos:start="129:26" pos:end="129:58"><expr pos:start="129:26" pos:end="129:57"><name pos:start="129:26" pos:end="129:32"><name pos:start="129:26" pos:end="129:29">ver1</name><index pos:start="129:30" pos:end="129:32">[<expr pos:start="129:31" pos:end="129:31"><name pos:start="129:31" pos:end="129:31">t</name></expr>]</index></name><operator pos:start="129:33" pos:end="129:33">.</operator><call pos:start="129:34" pos:end="129:57"><name pos:start="129:34" pos:end="129:42">push_back</name><argument_list pos:start="129:43" pos:end="129:57">(<argument pos:start="129:44" pos:end="129:56"><expr pos:start="129:44" pos:end="129:56"><name pos:start="129:44" pos:end="129:52"><name pos:start="129:44" pos:end="129:44">a</name><index pos:start="129:45" pos:end="129:48">[<expr pos:start="129:46" pos:end="129:47"><name pos:start="129:46" pos:end="129:47">xx</name></expr>]</index><index pos:start="129:49" pos:end="129:52">[<expr pos:start="129:50" pos:end="129:51"><name pos:start="129:50" pos:end="129:51">yy</name></expr>]</index></name><operator pos:start="129:53" pos:end="129:53">-</operator><literal type="char" pos:start="129:54" pos:end="129:56">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                </block_content>}</block></for>
                <if_stmt pos:start="131:17" pos:end="137:17"><if pos:start="131:17" pos:end="137:17">if<condition pos:start="131:19" pos:end="131:24">(<expr pos:start="131:20" pos:end="131:23"><name pos:start="131:20" pos:end="131:20">i</name><operator pos:start="131:21" pos:end="131:22">!=</operator><name pos:start="131:23" pos:end="131:23">n</name></expr>)</condition><block pos:start="131:25" pos:end="137:17">{<block_content pos:start="132:21" pos:end="136:21">
                    <if_stmt pos:start="132:21" pos:end="136:21"><if pos:start="132:21" pos:end="136:21">if<condition pos:start="132:23" pos:end="132:38">(<expr pos:start="132:24" pos:end="132:37"><name pos:start="132:24" pos:end="132:32"><name pos:start="132:24" pos:end="132:24">a</name><index pos:start="132:25" pos:end="132:29">[<expr pos:start="132:26" pos:end="132:28"><name pos:start="132:26" pos:end="132:26">i</name><operator pos:start="132:27" pos:end="132:27">+</operator><literal type="number" pos:start="132:28" pos:end="132:28">1</literal></expr>]</index><index pos:start="132:30" pos:end="132:32">[<expr pos:start="132:31" pos:end="132:31"><name pos:start="132:31" pos:end="132:31">j</name></expr>]</index></name><operator pos:start="132:33" pos:end="132:34">!=</operator><literal type="char" pos:start="132:35" pos:end="132:37">'#'</literal></expr>)</condition><block pos:start="132:39" pos:end="136:21">{<block_content pos:start="133:25" pos:end="135:57">
                        <decl_stmt pos:start="133:25" pos:end="133:41"><decl pos:start="133:25" pos:end="133:40"><type pos:start="133:25" pos:end="133:27"><name pos:start="133:25" pos:end="133:27">int</name></type> <name pos:start="133:29" pos:end="133:30">tt</name><init pos:start="133:31" pos:end="133:40">=<expr pos:start="133:32" pos:end="133:40"><name pos:start="133:32" pos:end="133:40"><name pos:start="133:32" pos:end="133:32">b</name><index pos:start="133:33" pos:end="133:37">[<expr pos:start="133:34" pos:end="133:36"><name pos:start="133:34" pos:end="133:34">i</name><operator pos:start="133:35" pos:end="133:35">+</operator><literal type="number" pos:start="133:36" pos:end="133:36">1</literal></expr>]</index><index pos:start="133:38" pos:end="133:40">[<expr pos:start="133:39" pos:end="133:39"><name pos:start="133:39" pos:end="133:39">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="134:25" pos:end="134:45"><expr pos:start="134:25" pos:end="134:44"><name pos:start="134:25" pos:end="134:30"><name pos:start="134:25" pos:end="134:27">ver</name><index pos:start="134:28" pos:end="134:30">[<expr pos:start="134:29" pos:end="134:29"><name pos:start="134:29" pos:end="134:29">t</name></expr>]</index></name><operator pos:start="134:31" pos:end="134:31">.</operator><call pos:start="134:32" pos:end="134:44"><name pos:start="134:32" pos:end="134:40">push_back</name><argument_list pos:start="134:41" pos:end="134:44">(<argument pos:start="134:42" pos:end="134:43"><expr pos:start="134:42" pos:end="134:43"><name pos:start="134:42" pos:end="134:43">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="135:25" pos:end="135:57"><expr pos:start="135:25" pos:end="135:56"><name pos:start="135:25" pos:end="135:31"><name pos:start="135:25" pos:end="135:28">ver1</name><index pos:start="135:29" pos:end="135:31">[<expr pos:start="135:30" pos:end="135:30"><name pos:start="135:30" pos:end="135:30">t</name></expr>]</index></name><operator pos:start="135:32" pos:end="135:32">.</operator><call pos:start="135:33" pos:end="135:56"><name pos:start="135:33" pos:end="135:41">push_back</name><argument_list pos:start="135:42" pos:end="135:56">(<argument pos:start="135:43" pos:end="135:55"><expr pos:start="135:43" pos:end="135:55"><name pos:start="135:43" pos:end="135:51"><name pos:start="135:43" pos:end="135:43">a</name><index pos:start="135:44" pos:end="135:48">[<expr pos:start="135:45" pos:end="135:47"><name pos:start="135:45" pos:end="135:45">i</name><operator pos:start="135:46" pos:end="135:46">+</operator><literal type="number" pos:start="135:47" pos:end="135:47">1</literal></expr>]</index><index pos:start="135:49" pos:end="135:51">[<expr pos:start="135:50" pos:end="135:50"><name pos:start="135:50" pos:end="135:50">j</name></expr>]</index></name><operator pos:start="135:52" pos:end="135:52">-</operator><literal type="char" pos:start="135:53" pos:end="135:55">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt pos:start="138:17" pos:end="144:17"><if pos:start="138:17" pos:end="144:17">if<condition pos:start="138:19" pos:end="138:24">(<expr pos:start="138:20" pos:end="138:23"><name pos:start="138:20" pos:end="138:20">j</name><operator pos:start="138:21" pos:end="138:22">!=</operator><name pos:start="138:23" pos:end="138:23">m</name></expr>)</condition><block pos:start="138:25" pos:end="144:17">{<block_content pos:start="139:21" pos:end="143:21">
                    <if_stmt pos:start="139:21" pos:end="143:21"><if pos:start="139:21" pos:end="143:21">if<condition pos:start="139:23" pos:end="139:38">(<expr pos:start="139:24" pos:end="139:37"><name pos:start="139:24" pos:end="139:32"><name pos:start="139:24" pos:end="139:24">a</name><index pos:start="139:25" pos:end="139:27">[<expr pos:start="139:26" pos:end="139:26"><name pos:start="139:26" pos:end="139:26">i</name></expr>]</index><index pos:start="139:28" pos:end="139:32">[<expr pos:start="139:29" pos:end="139:31"><name pos:start="139:29" pos:end="139:29">j</name><operator pos:start="139:30" pos:end="139:30">+</operator><literal type="number" pos:start="139:31" pos:end="139:31">1</literal></expr>]</index></name><operator pos:start="139:33" pos:end="139:34">!=</operator><literal type="char" pos:start="139:35" pos:end="139:37">'#'</literal></expr>)</condition><block pos:start="139:39" pos:end="143:21">{<block_content pos:start="140:25" pos:end="142:57">
                        <decl_stmt pos:start="140:25" pos:end="140:41"><decl pos:start="140:25" pos:end="140:40"><type pos:start="140:25" pos:end="140:27"><name pos:start="140:25" pos:end="140:27">int</name></type> <name pos:start="140:29" pos:end="140:30">tt</name><init pos:start="140:31" pos:end="140:40">=<expr pos:start="140:32" pos:end="140:40"><name pos:start="140:32" pos:end="140:40"><name pos:start="140:32" pos:end="140:32">b</name><index pos:start="140:33" pos:end="140:35">[<expr pos:start="140:34" pos:end="140:34"><name pos:start="140:34" pos:end="140:34">i</name></expr>]</index><index pos:start="140:36" pos:end="140:40">[<expr pos:start="140:37" pos:end="140:39"><name pos:start="140:37" pos:end="140:37">j</name><operator pos:start="140:38" pos:end="140:38">+</operator><literal type="number" pos:start="140:39" pos:end="140:39">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="141:25" pos:end="141:45"><expr pos:start="141:25" pos:end="141:44"><name pos:start="141:25" pos:end="141:30"><name pos:start="141:25" pos:end="141:27">ver</name><index pos:start="141:28" pos:end="141:30">[<expr pos:start="141:29" pos:end="141:29"><name pos:start="141:29" pos:end="141:29">t</name></expr>]</index></name><operator pos:start="141:31" pos:end="141:31">.</operator><call pos:start="141:32" pos:end="141:44"><name pos:start="141:32" pos:end="141:40">push_back</name><argument_list pos:start="141:41" pos:end="141:44">(<argument pos:start="141:42" pos:end="141:43"><expr pos:start="141:42" pos:end="141:43"><name pos:start="141:42" pos:end="141:43">tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="142:25" pos:end="142:57"><expr pos:start="142:25" pos:end="142:56"><name pos:start="142:25" pos:end="142:31"><name pos:start="142:25" pos:end="142:28">ver1</name><index pos:start="142:29" pos:end="142:31">[<expr pos:start="142:30" pos:end="142:30"><name pos:start="142:30" pos:end="142:30">t</name></expr>]</index></name><operator pos:start="142:32" pos:end="142:32">.</operator><call pos:start="142:33" pos:end="142:56"><name pos:start="142:33" pos:end="142:41">push_back</name><argument_list pos:start="142:42" pos:end="142:56">(<argument pos:start="142:43" pos:end="142:55"><expr pos:start="142:43" pos:end="142:55"><name pos:start="142:43" pos:end="142:51"><name pos:start="142:43" pos:end="142:43">a</name><index pos:start="142:44" pos:end="142:46">[<expr pos:start="142:45" pos:end="142:45"><name pos:start="142:45" pos:end="142:45">i</name></expr>]</index><index pos:start="142:47" pos:end="142:51">[<expr pos:start="142:48" pos:end="142:50"><name pos:start="142:48" pos:end="142:48">j</name><operator pos:start="142:49" pos:end="142:49">+</operator><literal type="number" pos:start="142:50" pos:end="142:50">1</literal></expr>]</index></name><operator pos:start="142:52" pos:end="142:52">-</operator><literal type="char" pos:start="142:53" pos:end="142:55">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="148:5" pos:end="148:14"><expr pos:start="148:5" pos:end="148:13"><call pos:start="148:5" pos:end="148:13"><name pos:start="148:5" pos:end="148:10">tarjan</name><argument_list pos:start="148:11" pos:end="148:13">(<argument pos:start="148:12" pos:end="148:12"><expr pos:start="148:12" pos:end="148:12"><literal type="number" pos:start="148:12" pos:end="148:12">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="149:5" pos:end="160:5">for<control pos:start="149:8" pos:end="149:31">(<init pos:start="149:9" pos:end="149:16"><decl pos:start="149:9" pos:end="149:15"><type pos:start="149:9" pos:end="149:11"><name pos:start="149:9" pos:end="149:11">int</name></type> <name pos:start="149:13" pos:end="149:13">i</name><init pos:start="149:14" pos:end="149:15">=<expr pos:start="149:15" pos:end="149:15"><literal type="number" pos:start="149:15" pos:end="149:15">1</literal></expr></init></decl>;</init><condition pos:start="149:17" pos:end="149:27"><expr pos:start="149:17" pos:end="149:26"><name pos:start="149:17" pos:end="149:17">i</name><operator pos:start="149:18" pos:end="149:19">&lt;=</operator><name pos:start="149:20" pos:end="149:26"><name pos:start="149:20" pos:end="149:20">b</name><index pos:start="149:21" pos:end="149:23">[<expr pos:start="149:22" pos:end="149:22"><name pos:start="149:22" pos:end="149:22">n</name></expr>]</index><index pos:start="149:24" pos:end="149:26">[<expr pos:start="149:25" pos:end="149:25"><name pos:start="149:25" pos:end="149:25">m</name></expr>]</index></name></expr>;</condition><incr pos:start="149:28" pos:end="149:30"><expr pos:start="149:28" pos:end="149:30"><name pos:start="149:28" pos:end="149:28">i</name><operator pos:start="149:29" pos:end="149:30">++</operator></expr></incr>)</control><block pos:start="149:32" pos:end="160:5">{<block_content pos:start="150:9" pos:end="159:9">
        <decl_stmt pos:start="150:9" pos:end="150:16"><decl pos:start="150:9" pos:end="150:15"><type pos:start="150:9" pos:end="150:11"><name pos:start="150:9" pos:end="150:11">int</name></type> <name pos:start="150:13" pos:end="150:13">u</name><init pos:start="150:14" pos:end="150:15">=<expr pos:start="150:15" pos:end="150:15"><name pos:start="150:15" pos:end="150:15">i</name></expr></init></decl>;</decl_stmt>
        <for pos:start="151:9" pos:end="159:9">for<control pos:start="151:12" pos:end="151:40">(<init pos:start="151:13" pos:end="151:20"><decl pos:start="151:13" pos:end="151:19"><type pos:start="151:13" pos:end="151:15"><name pos:start="151:13" pos:end="151:15">int</name></type> <name pos:start="151:17" pos:end="151:17">j</name><init pos:start="151:18" pos:end="151:19">=<expr pos:start="151:19" pos:end="151:19"><literal type="number" pos:start="151:19" pos:end="151:19">0</literal></expr></init></decl>;</init><condition pos:start="151:21" pos:end="151:36"><expr pos:start="151:21" pos:end="151:35"><name pos:start="151:21" pos:end="151:21">j</name><operator pos:start="151:22" pos:end="151:22">&lt;</operator><name pos:start="151:23" pos:end="151:28"><name pos:start="151:23" pos:end="151:25">ver</name><index pos:start="151:26" pos:end="151:28">[<expr pos:start="151:27" pos:end="151:27"><name pos:start="151:27" pos:end="151:27">u</name></expr>]</index></name><operator pos:start="151:29" pos:end="151:29">.</operator><call pos:start="151:30" pos:end="151:35"><name pos:start="151:30" pos:end="151:33">size</name><argument_list pos:start="151:34" pos:end="151:35">()</argument_list></call></expr>;</condition><incr pos:start="151:37" pos:end="151:39"><expr pos:start="151:37" pos:end="151:39"><name pos:start="151:37" pos:end="151:37">j</name><operator pos:start="151:38" pos:end="151:39">++</operator></expr></incr>)</control><block pos:start="151:41" pos:end="159:9">{<block_content pos:start="152:13" pos:end="158:13">
            <decl_stmt pos:start="152:13" pos:end="152:20"><decl pos:start="152:13" pos:end="152:19"><type pos:start="152:13" pos:end="152:15"><name pos:start="152:13" pos:end="152:15">int</name></type> <name pos:start="152:17" pos:end="152:17">v</name><init pos:start="152:18" pos:end="152:19">=<expr pos:start="152:19" pos:end="152:19"><name pos:start="152:19" pos:end="152:19">j</name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="153:13" pos:end="158:13"><if pos:start="153:13" pos:end="155:13">if<condition pos:start="153:15" pos:end="153:32">(<expr pos:start="153:16" pos:end="153:31"><name pos:start="153:16" pos:end="153:22"><name pos:start="153:16" pos:end="153:19">sum1</name><index pos:start="153:20" pos:end="153:22">[<expr pos:start="153:21" pos:end="153:21"><name pos:start="153:21" pos:end="153:21">u</name></expr>]</index></name><operator pos:start="153:23" pos:end="153:24">==</operator><name pos:start="153:25" pos:end="153:31"><name pos:start="153:25" pos:end="153:28">sum1</name><index pos:start="153:29" pos:end="153:31">[<expr pos:start="153:30" pos:end="153:30"><name pos:start="153:30" pos:end="153:30">v</name></expr>]</index></name></expr>)</condition><block pos:start="153:33" pos:end="155:13">{<block_content pos:start="154:17" pos:end="154:42">
                <expr_stmt pos:start="154:17" pos:end="154:42"><expr pos:start="154:17" pos:end="154:41"><name pos:start="154:17" pos:end="154:29"><name pos:start="154:17" pos:end="154:20">sum2</name><index pos:start="154:21" pos:end="154:29">[<expr pos:start="154:22" pos:end="154:28"><name pos:start="154:22" pos:end="154:28"><name pos:start="154:22" pos:end="154:25">sum1</name><index pos:start="154:26" pos:end="154:28">[<expr pos:start="154:27" pos:end="154:27"><name pos:start="154:27" pos:end="154:27">u</name></expr>]</index></name></expr>]</index></name><operator pos:start="154:30" pos:end="154:31">+=</operator><name pos:start="154:32" pos:end="154:41"><name pos:start="154:32" pos:end="154:35">ver1</name><index pos:start="154:36" pos:end="154:38">[<expr pos:start="154:37" pos:end="154:37"><name pos:start="154:37" pos:end="154:37">u</name></expr>]</index><index pos:start="154:39" pos:end="154:41">[<expr pos:start="154:40" pos:end="154:40"><name pos:start="154:40" pos:end="154:40">j</name></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="156:13" pos:end="158:13">else<block pos:start="156:17" pos:end="158:13">{<block_content pos:start="157:17" pos:end="157:49">
                <expr_stmt pos:start="157:17" pos:end="157:49"><expr pos:start="157:17" pos:end="157:48"><name pos:start="157:17" pos:end="157:29"><name pos:start="157:17" pos:end="157:20">ver2</name><index pos:start="157:21" pos:end="157:29">[<expr pos:start="157:22" pos:end="157:28"><name pos:start="157:22" pos:end="157:28"><name pos:start="157:22" pos:end="157:25">sum1</name><index pos:start="157:26" pos:end="157:28">[<expr pos:start="157:27" pos:end="157:27"><name pos:start="157:27" pos:end="157:27">u</name></expr>]</index></name></expr>]</index></name><operator pos:start="157:30" pos:end="157:30">.</operator><call pos:start="157:31" pos:end="157:48"><name pos:start="157:31" pos:end="157:39">push_back</name><argument_list pos:start="157:40" pos:end="157:48">(<argument pos:start="157:41" pos:end="157:47"><expr pos:start="157:41" pos:end="157:47"><name pos:start="157:41" pos:end="157:47"><name pos:start="157:41" pos:end="157:44">sum2</name><index pos:start="157:45" pos:end="157:47">[<expr pos:start="157:46" pos:end="157:46"><name pos:start="157:46" pos:end="157:46">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <decl_stmt pos:start="161:5" pos:end="161:23"><decl pos:start="161:5" pos:end="161:22"><type pos:start="161:5" pos:end="161:7"><name pos:start="161:5" pos:end="161:7">int</name></type> <name pos:start="161:9" pos:end="161:11">ans</name><init pos:start="161:12" pos:end="161:22">=<expr pos:start="161:13" pos:end="161:22"><call pos:start="161:13" pos:end="161:22"><name pos:start="161:13" pos:end="161:15">dfs</name><argument_list pos:start="161:16" pos:end="161:22">(<argument pos:start="161:17" pos:end="161:21"><expr pos:start="161:17" pos:end="161:21"><name pos:start="161:17" pos:end="161:21">flag1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="162:5" pos:end="162:23"><expr pos:start="162:5" pos:end="162:22"><name pos:start="162:5" pos:end="162:7">ans</name><operator pos:start="162:8" pos:end="162:9">+=</operator><operator pos:start="162:10" pos:end="162:10">(</operator><name pos:start="162:11" pos:end="162:17"><name pos:start="162:11" pos:end="162:11">a</name><index pos:start="162:12" pos:end="162:14">[<expr pos:start="162:13" pos:end="162:13"><literal type="number" pos:start="162:13" pos:end="162:13">1</literal></expr>]</index><index pos:start="162:15" pos:end="162:17">[<expr pos:start="162:16" pos:end="162:16"><literal type="number" pos:start="162:16" pos:end="162:16">1</literal></expr>]</index></name><operator pos:start="162:18" pos:end="162:18">-</operator><literal type="char" pos:start="162:19" pos:end="162:21">'0'</literal><operator pos:start="162:22" pos:end="162:22">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="163:5" pos:end="163:20"><expr pos:start="163:5" pos:end="163:19"><name pos:start="163:5" pos:end="163:8">cout</name><operator pos:start="163:9" pos:end="163:10">&lt;&lt;</operator><name pos:start="163:11" pos:end="163:13">ans</name><operator pos:start="163:14" pos:end="163:15">&lt;&lt;</operator><literal type="string" pos:start="163:16" pos:end="163:19">"\n"</literal></expr>;</expr_stmt>
    <return pos:start="164:5" pos:end="164:13">return <expr pos:start="164:12" pos:end="164:12"><literal type="number" pos:start="164:12" pos:end="164:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
