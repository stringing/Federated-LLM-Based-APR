<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/196/196.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:15">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:15">&lt;queue&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:16">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:16">&lt;string&gt;</cpp:file></cpp:include>
<using pos:start="4:1" pos:end="4:20">using <namespace pos:start="4:7" pos:end="4:20">namespace <name pos:start="4:17" pos:end="4:19">std</name>;</namespace></using>
<decl_stmt pos:start="5:1" pos:end="5:50"><decl pos:start="5:1" pos:end="5:49"><type pos:start="5:1" pos:end="5:9"><specifier pos:start="5:1" pos:end="5:5">const</specifier> <name pos:start="5:7" pos:end="5:9">int</name></type> <name pos:start="5:11" pos:end="5:19"><name pos:start="5:11" pos:end="5:13">dir</name><index pos:start="5:14" pos:end="5:16">[<expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">4</literal></expr>]</index><index pos:start="5:17" pos:end="5:19">[<expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">2</literal></expr>]</index></name> <init pos:start="5:21" pos:end="5:49">= <expr pos:start="5:23" pos:end="5:49"><block pos:start="5:23" pos:end="5:49">{<expr pos:start="5:24" pos:end="5:29"><block pos:start="5:24" pos:end="5:29">{<expr pos:start="5:25" pos:end="5:25"><literal type="number" pos:start="5:25" pos:end="5:25">0</literal></expr>,<expr pos:start="5:27" pos:end="5:28"><operator pos:start="5:27" pos:end="5:27">-</operator><literal type="number" pos:start="5:28" pos:end="5:28">1</literal></expr>}</block></expr>,<expr pos:start="5:31" pos:end="5:35"><block pos:start="5:31" pos:end="5:35">{<expr pos:start="5:32" pos:end="5:32"><literal type="number" pos:start="5:32" pos:end="5:32">0</literal></expr>,<expr pos:start="5:34" pos:end="5:34"><literal type="number" pos:start="5:34" pos:end="5:34">1</literal></expr>}</block></expr>,<expr pos:start="5:37" pos:end="5:42"><block pos:start="5:37" pos:end="5:42">{<expr pos:start="5:38" pos:end="5:39"><operator pos:start="5:38" pos:end="5:38">-</operator><literal type="number" pos:start="5:39" pos:end="5:39">1</literal></expr>,<expr pos:start="5:41" pos:end="5:41"><literal type="number" pos:start="5:41" pos:end="5:41">0</literal></expr>}</block></expr>,<expr pos:start="5:44" pos:end="5:48"><block pos:start="5:44" pos:end="5:48">{<expr pos:start="5:45" pos:end="5:45"><literal type="number" pos:start="5:45" pos:end="5:45">1</literal></expr>,<expr pos:start="5:47" pos:end="5:47"><literal type="number" pos:start="5:47" pos:end="5:47">0</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:10"><decl pos:start="6:1" pos:end="6:5"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:5">n</name></decl>,<decl pos:start="6:7" pos:end="6:7"><type ref="prev" pos:start="6:1" pos:end="6:3"/><name pos:start="6:7" pos:end="6:7">m</name></decl>,<decl pos:start="6:9" pos:end="6:9"><type ref="prev" pos:start="6:1" pos:end="6:3"/><name pos:start="6:9" pos:end="6:9">t</name></decl>;</decl_stmt>
<decl_stmt pos:start="7:1" pos:end="7:17"><decl pos:start="7:1" pos:end="7:16"><type pos:start="7:1" pos:end="7:4"><name pos:start="7:1" pos:end="7:4">char</name></type> <name pos:start="7:6" pos:end="7:16"><name pos:start="7:6" pos:end="7:6">c</name><index pos:start="7:7" pos:end="7:11">[<expr pos:start="7:8" pos:end="7:10"><literal type="number" pos:start="7:8" pos:end="7:10">105</literal></expr>]</index><index pos:start="7:12" pos:end="7:16">[<expr pos:start="7:13" pos:end="7:15"><literal type="number" pos:start="7:13" pos:end="7:15">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="8:1" pos:end="8:22"><decl pos:start="8:1" pos:end="8:21"><type pos:start="8:1" pos:end="8:4"><name pos:start="8:1" pos:end="8:4">bool</name></type> <name pos:start="8:6" pos:end="8:21"><name pos:start="8:6" pos:end="8:8">vis</name><index pos:start="8:9" pos:end="8:13">[<expr pos:start="8:10" pos:end="8:12"><literal type="number" pos:start="8:10" pos:end="8:12">105</literal></expr>]</index><index pos:start="8:14" pos:end="8:18">[<expr pos:start="8:15" pos:end="8:17"><literal type="number" pos:start="8:15" pos:end="8:17">105</literal></expr>]</index><index pos:start="8:19" pos:end="8:21">[<expr pos:start="8:20" pos:end="8:20"><literal type="number" pos:start="8:20" pos:end="8:20">6</literal></expr>]</index></name></decl>;</decl_stmt>
<struct pos:start="9:1" pos:end="14:10">struct <name pos:start="9:8" pos:end="9:11">node</name><block pos:start="9:12" pos:end="14:1">{<public type="default" pos:start="10:5" pos:end="13:5">
    <decl_stmt pos:start="10:5" pos:end="10:16"><decl pos:start="10:5" pos:end="10:9"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">t</name></decl>,<decl pos:start="10:11" pos:end="10:11"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:11" pos:end="10:11">x</name></decl>,<decl pos:start="10:13" pos:end="10:13"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:13" pos:end="10:13">y</name></decl>,<decl pos:start="10:15" pos:end="10:15"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:15" pos:end="10:15">k</name></decl>;</decl_stmt>
    <function type="operator" pos:start="11:5" pos:end="13:5"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:18">operator<name pos:start="11:18" pos:end="11:18">&lt;</name></name><parameter_list pos:start="11:19" pos:end="11:33">(<parameter pos:start="11:20" pos:end="11:32"><decl pos:start="11:20" pos:end="11:32"><type pos:start="11:20" pos:end="11:31"><specifier pos:start="11:20" pos:end="11:24">const</specifier> <name pos:start="11:26" pos:end="11:29">node</name> <modifier pos:start="11:31" pos:end="11:31">&amp;</modifier></type><name pos:start="11:32" pos:end="11:32">a</name></decl></parameter>)</parameter_list><specifier pos:start="11:34" pos:end="11:38">const</specifier><block pos:start="11:39" pos:end="13:5">{<block_content pos:start="12:9" pos:end="12:21">
        <return pos:start="12:9" pos:end="12:21">return <expr pos:start="12:16" pos:end="12:20"><name pos:start="12:16" pos:end="12:16">t</name><operator pos:start="12:17" pos:end="12:17">&gt;</operator><name pos:start="12:18" pos:end="12:20"><name pos:start="12:18" pos:end="12:18">a</name><operator pos:start="12:19" pos:end="12:19">.</operator><name pos:start="12:20" pos:end="12:20">t</name></name></expr>;</return>
    </block_content>}</block></function>
</public>}</block><decl pos:start="14:2" pos:end="14:4"><name pos:start="14:2" pos:end="14:4">tmp</name></decl>,<decl pos:start="14:6" pos:end="14:9"><type ref="prev" pos:start="11:20" pos:end="11:31"/><name pos:start="14:6" pos:end="14:9">temp</name></decl>;</struct>
<function pos:start="15:1" pos:end="21:1"><type pos:start="15:1" pos:end="15:4"><name pos:start="15:1" pos:end="15:4">node</name></type> <name pos:start="15:6" pos:end="15:10">mnode</name><parameter_list pos:start="15:11" pos:end="15:35">(<parameter pos:start="15:12" pos:end="15:16"><decl pos:start="15:12" pos:end="15:16"><type pos:start="15:12" pos:end="15:16"><name pos:start="15:12" pos:end="15:14">int</name></type> <name pos:start="15:16" pos:end="15:16">t</name></decl></parameter>,<parameter pos:start="15:18" pos:end="15:22"><decl pos:start="15:18" pos:end="15:22"><type pos:start="15:18" pos:end="15:22"><name pos:start="15:18" pos:end="15:20">int</name></type> <name pos:start="15:22" pos:end="15:22">x</name></decl></parameter>,<parameter pos:start="15:24" pos:end="15:28"><decl pos:start="15:24" pos:end="15:28"><type pos:start="15:24" pos:end="15:28"><name pos:start="15:24" pos:end="15:26">int</name></type> <name pos:start="15:28" pos:end="15:28">y</name></decl></parameter>,<parameter pos:start="15:30" pos:end="15:34"><decl pos:start="15:30" pos:end="15:34"><type pos:start="15:30" pos:end="15:34"><name pos:start="15:30" pos:end="15:32">int</name></type> <name pos:start="15:34" pos:end="15:34">k</name></decl></parameter>)</parameter_list><block pos:start="15:36" pos:end="21:1">{<block_content pos:start="16:5" pos:end="20:16">
    <expr_stmt pos:start="16:5" pos:end="16:15"><expr pos:start="16:5" pos:end="16:14"><name pos:start="16:5" pos:end="16:10"><name pos:start="16:5" pos:end="16:8">temp</name><operator pos:start="16:9" pos:end="16:9">.</operator><name pos:start="16:10" pos:end="16:10">t</name></name> <operator pos:start="16:12" pos:end="16:12">=</operator> <name pos:start="16:14" pos:end="16:14">t</name></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:15"><expr pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">temp</name><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:10">x</name></name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:14">x</name></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:15"><expr pos:start="18:5" pos:end="18:14"><name pos:start="18:5" pos:end="18:10"><name pos:start="18:5" pos:end="18:8">temp</name><operator pos:start="18:9" pos:end="18:9">.</operator><name pos:start="18:10" pos:end="18:10">y</name></name> <operator pos:start="18:12" pos:end="18:12">=</operator> <name pos:start="18:14" pos:end="18:14">y</name></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:15"><expr pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8">temp</name><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:10">k</name></name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:14">k</name></expr>;</expr_stmt>
    <return pos:start="20:5" pos:end="20:16">return <expr pos:start="20:12" pos:end="20:15"><name pos:start="20:12" pos:end="20:15">temp</name></expr>;</return>
</block_content>}</block></function>
<decl_stmt pos:start="22:1" pos:end="22:23"><decl pos:start="22:1" pos:end="22:22"><type pos:start="22:1" pos:end="22:20"><name pos:start="22:1" pos:end="22:20"><name pos:start="22:1" pos:end="22:14">priority_queue</name><argument_list type="generic" pos:start="22:15" pos:end="22:20">&lt;<argument pos:start="22:16" pos:end="22:19"><expr pos:start="22:16" pos:end="22:19"><name pos:start="22:16" pos:end="22:19">node</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="22:22" pos:end="22:22">q</name></decl>;</decl_stmt>
<function pos:start="23:1" pos:end="65:1"><type pos:start="23:1" pos:end="23:3"><name pos:start="23:1" pos:end="23:3">int</name></type> <name pos:start="23:5" pos:end="23:8">main</name><parameter_list pos:start="23:9" pos:end="23:10">()</parameter_list><block pos:start="23:11" pos:end="65:1">{<block_content pos:start="24:5" pos:end="64:13">
    <expr_stmt pos:start="24:5" pos:end="24:35"><expr pos:start="24:5" pos:end="24:34"><call pos:start="24:5" pos:end="24:34"><name pos:start="24:5" pos:end="24:11">freopen</name><argument_list pos:start="24:12" pos:end="24:34">(<argument pos:start="24:13" pos:end="24:21"><expr pos:start="24:13" pos:end="24:21"><literal type="string" pos:start="24:13" pos:end="24:21">"maze.in"</literal></expr></argument>, <argument pos:start="24:24" pos:end="24:26"><expr pos:start="24:24" pos:end="24:26"><literal type="string" pos:start="24:24" pos:end="24:26">"r"</literal></expr></argument>, <argument pos:start="24:29" pos:end="24:33"><expr pos:start="24:29" pos:end="24:33"><name pos:start="24:29" pos:end="24:33">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><call pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:11">freopen</name><argument_list pos:start="25:12" pos:end="25:36">(<argument pos:start="25:13" pos:end="25:22"><expr pos:start="25:13" pos:end="25:22"><literal type="string" pos:start="25:13" pos:end="25:22">"maze.out"</literal></expr></argument>, <argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><literal type="string" pos:start="25:25" pos:end="25:27">"w"</literal></expr></argument>, <argument pos:start="25:30" pos:end="25:35"><expr pos:start="25:30" pos:end="25:35"><name pos:start="25:30" pos:end="25:35">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:11"><expr pos:start="26:5" pos:end="26:10"><name pos:start="26:5" pos:end="26:7">cin</name><operator pos:start="26:8" pos:end="26:9">&gt;&gt;</operator><name pos:start="26:10" pos:end="26:10">t</name></expr>;</expr_stmt>
    <decl_stmt pos:start="27:5" pos:end="27:22"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">k</name></decl>,<decl pos:start="27:11" pos:end="27:12"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:11" pos:end="27:12">x1</name></decl>,<decl pos:start="27:14" pos:end="27:15"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:14" pos:end="27:15">x2</name></decl>,<decl pos:start="27:17" pos:end="27:18"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:17" pos:end="27:18">y1</name></decl>,<decl pos:start="27:20" pos:end="27:21"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:20" pos:end="27:21">y2</name></decl>;</decl_stmt>
    <while pos:start="28:5" pos:end="63:5">while<condition pos:start="28:10" pos:end="28:14">(<expr pos:start="28:11" pos:end="28:13"><name pos:start="28:11" pos:end="28:11">t</name><operator pos:start="28:12" pos:end="28:13">--</operator></expr>)</condition><block pos:start="28:15" pos:end="63:5">{<block_content pos:start="29:9" pos:end="62:9">
        <expr_stmt pos:start="29:9" pos:end="29:22"><expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:11">cin</name> <operator pos:start="29:13" pos:end="29:14">&gt;&gt;</operator> <name pos:start="29:16" pos:end="29:16">n</name> <operator pos:start="29:18" pos:end="29:19">&gt;&gt;</operator> <name pos:start="29:21" pos:end="29:21">m</name></expr>;</expr_stmt>
        <expr_stmt pos:start="30:9" pos:end="30:34"><expr pos:start="30:9" pos:end="30:33"><call pos:start="30:9" pos:end="30:33"><name pos:start="30:9" pos:end="30:14">memset</name><argument_list pos:start="30:15" pos:end="30:33">(<argument pos:start="30:16" pos:end="30:18"><expr pos:start="30:16" pos:end="30:18"><name pos:start="30:16" pos:end="30:18">vis</name></expr></argument>,<argument pos:start="30:20" pos:end="30:20"><expr pos:start="30:20" pos:end="30:20"><literal type="number" pos:start="30:20" pos:end="30:20">0</literal></expr></argument>,<argument pos:start="30:22" pos:end="30:32"><expr pos:start="30:22" pos:end="30:32"><sizeof pos:start="30:22" pos:end="30:32">sizeof<argument_list pos:start="30:28" pos:end="30:32">(<argument pos:start="30:29" pos:end="30:31"><expr pos:start="30:29" pos:end="30:31"><name pos:start="30:29" pos:end="30:31">vis</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="31:9" pos:end="33:9">for<control pos:start="31:12" pos:end="31:34">(<init pos:start="31:13" pos:end="31:22"><decl pos:start="31:13" pos:end="31:21"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:17">i</name> <init pos:start="31:19" pos:end="31:21">= <expr pos:start="31:21" pos:end="31:21"><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr></init></decl>;</init><condition pos:start="31:23" pos:end="31:29"><expr pos:start="31:23" pos:end="31:28"><name pos:start="31:23" pos:end="31:23">i</name> <operator pos:start="31:25" pos:end="31:26">&lt;=</operator> <name pos:start="31:28" pos:end="31:28">n</name></expr>;</condition><incr pos:start="31:30" pos:end="31:33"><expr pos:start="31:30" pos:end="31:33"><name pos:start="31:30" pos:end="31:30">i</name> <operator pos:start="31:32" pos:end="31:33">++</operator></expr></incr>)</control><block pos:start="31:35" pos:end="33:9">{<block_content pos:start="32:13" pos:end="32:31">
            <expr_stmt pos:start="32:13" pos:end="32:31"><expr pos:start="32:13" pos:end="32:30"><call pos:start="32:13" pos:end="32:30"><name pos:start="32:13" pos:end="32:17">scanf</name><argument_list pos:start="32:18" pos:end="32:30">(<argument pos:start="32:19" pos:end="32:22"><expr pos:start="32:19" pos:end="32:22"><literal type="string" pos:start="32:19" pos:end="32:22">"%s"</literal></expr></argument>,<argument pos:start="32:24" pos:end="32:29"><expr pos:start="32:24" pos:end="32:29"><name pos:start="32:24" pos:end="32:27"><name pos:start="32:24" pos:end="32:24">c</name><index pos:start="32:25" pos:end="32:27">[<expr pos:start="32:26" pos:end="32:26"><name pos:start="32:26" pos:end="32:26">i</name></expr>]</index></name><operator pos:start="32:28" pos:end="32:28">+</operator><literal type="number" pos:start="32:29" pos:end="32:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="34:9" pos:end="34:47"><expr pos:start="34:9" pos:end="34:46"><call pos:start="34:9" pos:end="34:46"><name pos:start="34:9" pos:end="34:13">scanf</name><argument_list pos:start="34:14" pos:end="34:46">(<argument pos:start="34:15" pos:end="34:26"><expr pos:start="34:15" pos:end="34:26"><literal type="string" pos:start="34:15" pos:end="34:26">"%d%d%d%d%d"</literal></expr></argument>,<argument pos:start="34:28" pos:end="34:29"><expr pos:start="34:28" pos:end="34:29"><operator pos:start="34:28" pos:end="34:28">&amp;</operator><name pos:start="34:29" pos:end="34:29">k</name></expr></argument>,<argument pos:start="34:31" pos:end="34:33"><expr pos:start="34:31" pos:end="34:33"><operator pos:start="34:31" pos:end="34:31">&amp;</operator><name pos:start="34:32" pos:end="34:33">x1</name></expr></argument>,<argument pos:start="34:35" pos:end="34:37"><expr pos:start="34:35" pos:end="34:37"><operator pos:start="34:35" pos:end="34:35">&amp;</operator><name pos:start="34:36" pos:end="34:37">y1</name></expr></argument>,<argument pos:start="34:39" pos:end="34:41"><expr pos:start="34:39" pos:end="34:41"><operator pos:start="34:39" pos:end="34:39">&amp;</operator><name pos:start="34:40" pos:end="34:41">x2</name></expr></argument>,<argument pos:start="34:43" pos:end="34:45"><expr pos:start="34:43" pos:end="34:45"><operator pos:start="34:43" pos:end="34:43">&amp;</operator><name pos:start="34:44" pos:end="34:45">y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><call pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:9">q</name><operator pos:start="35:10" pos:end="35:10">.</operator><name pos:start="35:11" pos:end="35:14">push</name></name><argument_list pos:start="35:15" pos:end="35:32">(<argument pos:start="35:16" pos:end="35:31"><expr pos:start="35:16" pos:end="35:31"><call pos:start="35:16" pos:end="35:31"><name pos:start="35:16" pos:end="35:20">mnode</name><argument_list pos:start="35:21" pos:end="35:31">(<argument pos:start="35:22" pos:end="35:22"><expr pos:start="35:22" pos:end="35:22"><literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr></argument>,<argument pos:start="35:24" pos:end="35:25"><expr pos:start="35:24" pos:end="35:25"><name pos:start="35:24" pos:end="35:25">x1</name></expr></argument>,<argument pos:start="35:27" pos:end="35:28"><expr pos:start="35:27" pos:end="35:28"><name pos:start="35:27" pos:end="35:28">y1</name></expr></argument>,<argument pos:start="35:30" pos:end="35:30"><expr pos:start="35:30" pos:end="35:30"><literal type="number" pos:start="35:30" pos:end="35:30">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="36:9" pos:end="36:20"><decl pos:start="36:9" pos:end="36:19"><type pos:start="36:9" pos:end="36:11"><name pos:start="36:9" pos:end="36:11">int</name></type> <name pos:start="36:13" pos:end="36:15">ans</name> <init pos:start="36:17" pos:end="36:19">= <expr pos:start="36:19" pos:end="36:19"><literal type="number" pos:start="36:19" pos:end="36:19">0</literal></expr></init></decl>;</decl_stmt>
        <while pos:start="37:9" pos:end="57:9">while<condition pos:start="37:14" pos:end="37:23">(<expr pos:start="37:15" pos:end="37:22"><call pos:start="37:15" pos:end="37:22"><name pos:start="37:15" pos:end="37:20"><name pos:start="37:15" pos:end="37:15">q</name><operator pos:start="37:16" pos:end="37:16">.</operator><name pos:start="37:17" pos:end="37:20">size</name></name><argument_list pos:start="37:21" pos:end="37:22">()</argument_list></call></expr>)</condition><block pos:start="37:24" pos:end="57:9">{<block_content pos:start="38:13" pos:end="56:13">
            <expr_stmt pos:start="38:13" pos:end="38:26"><expr pos:start="38:13" pos:end="38:25"><name pos:start="38:13" pos:end="38:15">tmp</name> <operator pos:start="38:17" pos:end="38:17">=</operator> <call pos:start="38:19" pos:end="38:25"><name pos:start="38:19" pos:end="38:23"><name pos:start="38:19" pos:end="38:19">q</name><operator pos:start="38:20" pos:end="38:20">.</operator><name pos:start="38:21" pos:end="38:23">top</name></name><argument_list pos:start="38:24" pos:end="38:25">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="39:13" pos:end="39:20"><expr pos:start="39:13" pos:end="39:19"><call pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:17"><name pos:start="39:13" pos:end="39:13">q</name><operator pos:start="39:14" pos:end="39:14">.</operator><name pos:start="39:15" pos:end="39:17">pop</name></name><argument_list pos:start="39:18" pos:end="39:19">()</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="40:13" pos:end="40:49"><if pos:start="40:13" pos:end="40:49">if<condition pos:start="40:15" pos:end="40:40">(<expr pos:start="40:16" pos:end="40:39"><name pos:start="40:16" pos:end="40:39"><name pos:start="40:16" pos:end="40:18">vis</name><index pos:start="40:19" pos:end="40:25">[<expr pos:start="40:20" pos:end="40:24"><name pos:start="40:20" pos:end="40:24"><name pos:start="40:20" pos:end="40:22">tmp</name><operator pos:start="40:23" pos:end="40:23">.</operator><name pos:start="40:24" pos:end="40:24">x</name></name></expr>]</index><index pos:start="40:26" pos:end="40:32">[<expr pos:start="40:27" pos:end="40:31"><name pos:start="40:27" pos:end="40:31"><name pos:start="40:27" pos:end="40:29">tmp</name><operator pos:start="40:30" pos:end="40:30">.</operator><name pos:start="40:31" pos:end="40:31">y</name></name></expr>]</index><index pos:start="40:33" pos:end="40:39">[<expr pos:start="40:34" pos:end="40:38"><name pos:start="40:34" pos:end="40:38"><name pos:start="40:34" pos:end="40:36">tmp</name><operator pos:start="40:37" pos:end="40:37">.</operator><name pos:start="40:38" pos:end="40:38">k</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="40:41" pos:end="40:49"><block_content pos:start="40:41" pos:end="40:49"><continue pos:start="40:41" pos:end="40:49">continue;</continue></block_content></block></if></if_stmt>
            <expr_stmt pos:start="41:13" pos:end="41:41"><expr pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:15">vis</name><index pos:start="41:16" pos:end="41:22">[<expr pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:19">tmp</name><operator pos:start="41:20" pos:end="41:20">.</operator><name pos:start="41:21" pos:end="41:21">x</name></name></expr>]</index><index pos:start="41:23" pos:end="41:29">[<expr pos:start="41:24" pos:end="41:28"><name pos:start="41:24" pos:end="41:28"><name pos:start="41:24" pos:end="41:26">tmp</name><operator pos:start="41:27" pos:end="41:27">.</operator><name pos:start="41:28" pos:end="41:28">y</name></name></expr>]</index><index pos:start="41:30" pos:end="41:36">[<expr pos:start="41:31" pos:end="41:35"><name pos:start="41:31" pos:end="41:35"><name pos:start="41:31" pos:end="41:33">tmp</name><operator pos:start="41:34" pos:end="41:34">.</operator><name pos:start="41:35" pos:end="41:35">k</name></name></expr>]</index></name> <operator pos:start="41:38" pos:end="41:38">=</operator> <literal type="number" pos:start="41:40" pos:end="41:40">1</literal></expr>;</expr_stmt>
            <if_stmt pos:start="42:13" pos:end="44:13"><if pos:start="42:13" pos:end="44:13">if<condition pos:start="42:15" pos:end="42:40">(<expr pos:start="42:16" pos:end="42:39"><name pos:start="42:16" pos:end="42:20"><name pos:start="42:16" pos:end="42:18">tmp</name><operator pos:start="42:19" pos:end="42:19">.</operator><name pos:start="42:20" pos:end="42:20">x</name></name> <operator pos:start="42:22" pos:end="42:23">==</operator> <name pos:start="42:25" pos:end="42:26">x2</name><operator pos:start="42:27" pos:end="42:28">&amp;&amp;</operator><name pos:start="42:29" pos:end="42:33"><name pos:start="42:29" pos:end="42:31">tmp</name><operator pos:start="42:32" pos:end="42:32">.</operator><name pos:start="42:33" pos:end="42:33">y</name></name> <operator pos:start="42:35" pos:end="42:36">==</operator> <name pos:start="42:38" pos:end="42:39">y2</name></expr>)</condition><block pos:start="42:41" pos:end="44:13">{<block_content pos:start="43:17" pos:end="43:37">
                <expr_stmt pos:start="43:17" pos:end="43:37"><expr pos:start="43:17" pos:end="43:36"><name pos:start="43:17" pos:end="43:19">ans</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="43:36"><name pos:start="43:23" pos:end="43:25">min</name><argument_list pos:start="43:26" pos:end="43:36">(<argument pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:29">ans</name></expr></argument>,<argument pos:start="43:31" pos:end="43:35"><expr pos:start="43:31" pos:end="43:35"><name pos:start="43:31" pos:end="43:35"><name pos:start="43:31" pos:end="43:33">tmp</name><operator pos:start="43:34" pos:end="43:34">.</operator><name pos:start="43:35" pos:end="43:35">t</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <for pos:start="45:13" pos:end="56:13">for<control pos:start="45:16" pos:end="45:37">(<init pos:start="45:17" pos:end="45:26"><decl pos:start="45:17" pos:end="45:25"><type pos:start="45:17" pos:end="45:19"><name pos:start="45:17" pos:end="45:19">int</name></type> <name pos:start="45:21" pos:end="45:21">i</name> <init pos:start="45:23" pos:end="45:25">= <expr pos:start="45:25" pos:end="45:25"><literal type="number" pos:start="45:25" pos:end="45:25">0</literal></expr></init></decl>;</init><condition pos:start="45:27" pos:end="45:32"><expr pos:start="45:27" pos:end="45:31"><name pos:start="45:27" pos:end="45:27">i</name> <operator pos:start="45:29" pos:end="45:29">&lt;</operator> <literal type="number" pos:start="45:31" pos:end="45:31">4</literal></expr>;</condition><incr pos:start="45:33" pos:end="45:36"><expr pos:start="45:33" pos:end="45:36"><name pos:start="45:33" pos:end="45:33">i</name> <operator pos:start="45:35" pos:end="45:36">++</operator></expr></incr>)</control><block pos:start="45:38" pos:end="56:13">{<block_content pos:start="46:17" pos:end="55:17">
                <decl_stmt pos:start="46:17" pos:end="46:42"><decl pos:start="46:17" pos:end="46:41"><type pos:start="46:17" pos:end="46:19"><name pos:start="46:17" pos:end="46:19">int</name></type> <name pos:start="46:21" pos:end="46:21">x</name> <init pos:start="46:23" pos:end="46:41">= <expr pos:start="46:25" pos:end="46:41"><name pos:start="46:25" pos:end="46:29"><name pos:start="46:25" pos:end="46:27">tmp</name><operator pos:start="46:28" pos:end="46:28">.</operator><name pos:start="46:29" pos:end="46:29">x</name></name> <operator pos:start="46:31" pos:end="46:31">+</operator> <name pos:start="46:33" pos:end="46:41"><name pos:start="46:33" pos:end="46:35">dir</name><index pos:start="46:36" pos:end="46:38">[<expr pos:start="46:37" pos:end="46:37"><name pos:start="46:37" pos:end="46:37">i</name></expr>]</index><index pos:start="46:39" pos:end="46:41">[<expr pos:start="46:40" pos:end="46:40"><literal type="number" pos:start="46:40" pos:end="46:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="47:17" pos:end="47:42"><decl pos:start="47:17" pos:end="47:41"><type pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:19">int</name></type> <name pos:start="47:21" pos:end="47:21">y</name> <init pos:start="47:23" pos:end="47:41">= <expr pos:start="47:25" pos:end="47:41"><name pos:start="47:25" pos:end="47:29"><name pos:start="47:25" pos:end="47:27">tmp</name><operator pos:start="47:28" pos:end="47:28">.</operator><name pos:start="47:29" pos:end="47:29">y</name></name> <operator pos:start="47:31" pos:end="47:31">+</operator> <name pos:start="47:33" pos:end="47:41"><name pos:start="47:33" pos:end="47:35">dir</name><index pos:start="47:36" pos:end="47:38">[<expr pos:start="47:37" pos:end="47:37"><name pos:start="47:37" pos:end="47:37">i</name></expr>]</index><index pos:start="47:39" pos:end="47:41">[<expr pos:start="47:40" pos:end="47:40"><literal type="number" pos:start="47:40" pos:end="47:40">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="48:17" pos:end="48:60"><if pos:start="48:17" pos:end="48:60">if<condition pos:start="48:19" pos:end="48:51">(<expr pos:start="48:20" pos:end="48:50"><name pos:start="48:20" pos:end="48:20">x</name> <operator pos:start="48:22" pos:end="48:22">&gt;</operator> <name pos:start="48:24" pos:end="48:24">n</name> <operator pos:start="48:26" pos:end="48:27">||</operator><name pos:start="48:28" pos:end="48:39"><name pos:start="48:28" pos:end="48:28">x</name> <argument_list type="generic" pos:start="48:30" pos:end="48:39">&lt; <argument pos:start="48:32" pos:end="48:37"><expr pos:start="48:32" pos:end="48:37"><literal type="number" pos:start="48:32" pos:end="48:32">1</literal> <operator pos:start="48:34" pos:end="48:35">||</operator> <name pos:start="48:37" pos:end="48:37">y</name></expr></argument> &gt;</argument_list></name> <name pos:start="48:41" pos:end="48:41">m</name> <operator pos:start="48:43" pos:end="48:44">||</operator> <name pos:start="48:46" pos:end="48:46">y</name> <operator pos:start="48:48" pos:end="48:48">&lt;</operator> <literal type="number" pos:start="48:50" pos:end="48:50">1</literal></expr>)</condition><block type="pseudo" pos:start="48:52" pos:end="48:60"><block_content pos:start="48:52" pos:end="48:60"><continue pos:start="48:52" pos:end="48:60">continue;</continue></block_content></block></if></if_stmt>
                <if_stmt pos:start="49:17" pos:end="49:43"><if pos:start="49:17" pos:end="49:43">if<condition pos:start="49:19" pos:end="49:34">(<expr pos:start="49:20" pos:end="49:33"><name pos:start="49:20" pos:end="49:33"><name pos:start="49:20" pos:end="49:22">vis</name><index pos:start="49:23" pos:end="49:25">[<expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">x</name></expr>]</index><index pos:start="49:26" pos:end="49:28">[<expr pos:start="49:27" pos:end="49:27"><name pos:start="49:27" pos:end="49:27">y</name></expr>]</index><index pos:start="49:29" pos:end="49:33">[<expr pos:start="49:30" pos:end="49:32"><name pos:start="49:30" pos:end="49:30">i</name><operator pos:start="49:31" pos:end="49:31">+</operator><literal type="number" pos:start="49:32" pos:end="49:32">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="49:35" pos:end="49:43"><block_content pos:start="49:35" pos:end="49:43"><continue pos:start="49:35" pos:end="49:43">continue;</continue></block_content></block></if></if_stmt>
                <if_stmt pos:start="50:17" pos:end="50:43"><if pos:start="50:17" pos:end="50:43">if<condition pos:start="50:19" pos:end="50:34">(<expr pos:start="50:20" pos:end="50:33"><name pos:start="50:20" pos:end="50:26"><name pos:start="50:20" pos:end="50:20">c</name><index pos:start="50:21" pos:end="50:23">[<expr pos:start="50:22" pos:end="50:22"><name pos:start="50:22" pos:end="50:22">x</name></expr>]</index><index pos:start="50:24" pos:end="50:26">[<expr pos:start="50:25" pos:end="50:25"><name pos:start="50:25" pos:end="50:25">y</name></expr>]</index></name> <operator pos:start="50:28" pos:end="50:29">==</operator> <literal type="char" pos:start="50:31" pos:end="50:33">'*'</literal></expr>)</condition><block type="pseudo" pos:start="50:35" pos:end="50:43"><block_content pos:start="50:35" pos:end="50:43"><continue pos:start="50:35" pos:end="50:43">continue;</continue></block_content></block></if></if_stmt>
                <if_stmt pos:start="51:17" pos:end="55:17"><if pos:start="51:17" pos:end="53:17">if<condition pos:start="51:19" pos:end="51:36">(<expr pos:start="51:20" pos:end="51:35"><name pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:22">tmp</name><operator pos:start="51:23" pos:end="51:23">.</operator><name pos:start="51:24" pos:end="51:24">k</name></name><operator pos:start="51:25" pos:end="51:25">%</operator><operator pos:start="51:26" pos:end="51:26">(</operator><name pos:start="51:27" pos:end="51:27">i</name><operator pos:start="51:28" pos:end="51:28">+</operator><literal type="number" pos:start="51:29" pos:end="51:29">1</literal><operator pos:start="51:30" pos:end="51:30">)</operator> <operator pos:start="51:32" pos:end="51:33">==</operator> <literal type="number" pos:start="51:35" pos:end="51:35">0</literal></expr>)</condition><block pos:start="51:37" pos:end="53:17">{<block_content pos:start="52:21" pos:end="52:49">
                    <expr_stmt pos:start="52:21" pos:end="52:49"><expr pos:start="52:21" pos:end="52:48"><call pos:start="52:21" pos:end="52:48"><name pos:start="52:21" pos:end="52:26"><name pos:start="52:21" pos:end="52:21">q</name><operator pos:start="52:22" pos:end="52:22">.</operator><name pos:start="52:23" pos:end="52:26">push</name></name><argument_list pos:start="52:27" pos:end="52:48">(<argument pos:start="52:28" pos:end="52:47"><expr pos:start="52:28" pos:end="52:47"><call pos:start="52:28" pos:end="52:47"><name pos:start="52:28" pos:end="52:32">mnode</name><argument_list pos:start="52:33" pos:end="52:47">(<argument pos:start="52:34" pos:end="52:38"><expr pos:start="52:34" pos:end="52:38"><name pos:start="52:34" pos:end="52:38"><name pos:start="52:34" pos:end="52:36">tmp</name><operator pos:start="52:37" pos:end="52:37">.</operator><name pos:start="52:38" pos:end="52:38">t</name></name></expr></argument>,<argument pos:start="52:40" pos:end="52:40"><expr pos:start="52:40" pos:end="52:40"><name pos:start="52:40" pos:end="52:40">x</name></expr></argument>,<argument pos:start="52:42" pos:end="52:42"><expr pos:start="52:42" pos:end="52:42"><name pos:start="52:42" pos:end="52:42">y</name></expr></argument>,<argument pos:start="52:44" pos:end="52:46"><expr pos:start="52:44" pos:end="52:46"><name pos:start="52:44" pos:end="52:44">i</name><operator pos:start="52:45" pos:end="52:45">+</operator><literal type="number" pos:start="52:46" pos:end="52:46">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if><else pos:start="53:18" pos:end="55:17">else<block pos:start="53:22" pos:end="55:17">{<block_content pos:start="54:21" pos:end="54:53">
                    <expr_stmt pos:start="54:21" pos:end="54:53"><expr pos:start="54:21" pos:end="54:52"><call pos:start="54:21" pos:end="54:52"><name pos:start="54:21" pos:end="54:26"><name pos:start="54:21" pos:end="54:21">q</name><operator pos:start="54:22" pos:end="54:22">.</operator><name pos:start="54:23" pos:end="54:26">push</name></name><argument_list pos:start="54:27" pos:end="54:52">(<argument pos:start="54:28" pos:end="54:51"><expr pos:start="54:28" pos:end="54:51"><call pos:start="54:28" pos:end="54:51"><name pos:start="54:28" pos:end="54:32">mnode</name><argument_list pos:start="54:33" pos:end="54:51">(<argument pos:start="54:34" pos:end="54:42"><expr pos:start="54:34" pos:end="54:42"><name pos:start="54:34" pos:end="54:38"><name pos:start="54:34" pos:end="54:36">tmp</name><operator pos:start="54:37" pos:end="54:37">.</operator><name pos:start="54:38" pos:end="54:38">t</name></name> <operator pos:start="54:40" pos:end="54:40">+</operator> <literal type="number" pos:start="54:42" pos:end="54:42">1</literal></expr></argument>,<argument pos:start="54:44" pos:end="54:44"><expr pos:start="54:44" pos:end="54:44"><name pos:start="54:44" pos:end="54:44">x</name></expr></argument>,<argument pos:start="54:46" pos:end="54:46"><expr pos:start="54:46" pos:end="54:46"><name pos:start="54:46" pos:end="54:46">y</name></expr></argument>,<argument pos:start="54:48" pos:end="54:50"><expr pos:start="54:48" pos:end="54:50"><name pos:start="54:48" pos:end="54:48">i</name><operator pos:start="54:49" pos:end="54:49">+</operator><literal type="number" pos:start="54:50" pos:end="54:50">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></while>
        <if_stmt pos:start="58:9" pos:end="62:9"><if pos:start="58:9" pos:end="60:9">if<condition pos:start="58:11" pos:end="58:20">(<expr pos:start="58:12" pos:end="58:19"><name pos:start="58:12" pos:end="58:14">ans</name> <operator pos:start="58:16" pos:end="58:17">&lt;=</operator> <name pos:start="58:19" pos:end="58:19">k</name></expr>)</condition><block pos:start="58:21" pos:end="60:9">{<block_content pos:start="59:13" pos:end="59:26">
            <expr_stmt pos:start="59:13" pos:end="59:26"><expr pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:16">cout</name><operator pos:start="59:17" pos:end="59:18">&lt;&lt;</operator><literal type="string" pos:start="59:19" pos:end="59:25">"yes\n"</literal></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="60:10" pos:end="62:9">else<block pos:start="60:14" pos:end="62:9">{<block_content pos:start="61:13" pos:end="61:25">
            <expr_stmt pos:start="61:13" pos:end="61:25"><expr pos:start="61:13" pos:end="61:24"><name pos:start="61:13" pos:end="61:16">cout</name><operator pos:start="61:17" pos:end="61:18">&lt;&lt;</operator><literal type="string" pos:start="61:19" pos:end="61:24">"no\n"</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <return pos:start="64:5" pos:end="64:13">return <expr pos:start="64:12" pos:end="64:12"><literal type="number" pos:start="64:12" pos:end="64:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
