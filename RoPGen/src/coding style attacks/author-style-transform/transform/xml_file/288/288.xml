<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/288/288.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="21:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list> <block pos:start="3:12" pos:end="21:1">{<block_content pos:start="4:5" pos:end="20:13">
    <expr_stmt pos:start="4:5" pos:end="4:37"><expr pos:start="4:5" pos:end="4:36"><call pos:start="4:5" pos:end="4:36"><name pos:start="4:5" pos:end="4:11">freopen</name><argument_list pos:start="4:12" pos:end="4:36">(<argument pos:start="4:13" pos:end="4:23"><expr pos:start="4:13" pos:end="4:23"><literal type="string" pos:start="4:13" pos:end="4:23">"square.in"</literal></expr></argument>, <argument pos:start="4:26" pos:end="4:28"><expr pos:start="4:26" pos:end="4:28"><literal type="string" pos:start="4:26" pos:end="4:28">"r"</literal></expr></argument>, <argument pos:start="4:31" pos:end="4:35"><expr pos:start="4:31" pos:end="4:35"><name pos:start="4:31" pos:end="4:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:39"><expr pos:start="5:5" pos:end="5:38"><call pos:start="5:5" pos:end="5:38"><name pos:start="5:5" pos:end="5:11">freopen</name><argument_list pos:start="5:12" pos:end="5:38">(<argument pos:start="5:13" pos:end="5:24"><expr pos:start="5:13" pos:end="5:24"><literal type="string" pos:start="5:13" pos:end="5:24">"square.out"</literal></expr></argument>, <argument pos:start="5:27" pos:end="5:29"><expr pos:start="5:27" pos:end="5:29"><literal type="string" pos:start="5:27" pos:end="5:29">"w"</literal></expr></argument>, <argument pos:start="5:32" pos:end="5:37"><expr pos:start="5:32" pos:end="5:37"><name pos:start="5:32" pos:end="5:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:21"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">n</name></decl>, <decl pos:start="6:12" pos:end="6:20"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:12" pos:end="6:14">ans</name> <init pos:start="6:16" pos:end="6:20">= <expr pos:start="6:18" pos:end="6:20"><literal type="number" pos:start="6:18" pos:end="6:20">1e9</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:13"><expr pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">cin</name> <operator pos:start="7:9" pos:end="7:10">&gt;&gt;</operator> <name pos:start="7:12" pos:end="7:12">n</name></expr>;</expr_stmt>
    <for pos:start="8:5" pos:end="18:5">for <control pos:start="8:9" pos:end="8:36">(<init pos:start="8:10" pos:end="8:19"><decl pos:start="8:10" pos:end="8:18"><type pos:start="8:10" pos:end="8:12"><name pos:start="8:10" pos:end="8:12">int</name></type> <name pos:start="8:14" pos:end="8:14">a</name> <init pos:start="8:16" pos:end="8:18">= <expr pos:start="8:18" pos:end="8:18"><literal type="number" pos:start="8:18" pos:end="8:18">0</literal></expr></init></decl>;</init> <condition pos:start="8:21" pos:end="8:31"><expr pos:start="8:21" pos:end="8:30"><name pos:start="8:21" pos:end="8:21">a</name> <operator pos:start="8:23" pos:end="8:23">*</operator> <name pos:start="8:25" pos:end="8:25">a</name> <operator pos:start="8:27" pos:end="8:28">&lt;=</operator> <name pos:start="8:30" pos:end="8:30">n</name></expr>;</condition> <incr pos:start="8:33" pos:end="8:35"><expr pos:start="8:33" pos:end="8:35"><name pos:start="8:33" pos:end="8:33">a</name><operator pos:start="8:34" pos:end="8:35">++</operator></expr></incr>)</control> <block pos:start="8:38" pos:end="18:5">{<block_content pos:start="9:9" pos:end="17:9">
        <for pos:start="9:9" pos:end="17:9">for <control pos:start="9:13" pos:end="9:48">(<init pos:start="9:14" pos:end="9:23"><decl pos:start="9:14" pos:end="9:22"><type pos:start="9:14" pos:end="9:16"><name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">b</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><name pos:start="9:22" pos:end="9:22">a</name></expr></init></decl>;</init> <condition pos:start="9:25" pos:end="9:43"><expr pos:start="9:25" pos:end="9:42"><name pos:start="9:25" pos:end="9:25">b</name> <operator pos:start="9:27" pos:end="9:27">*</operator> <name pos:start="9:29" pos:end="9:29">b</name> <operator pos:start="9:31" pos:end="9:31">+</operator> <name pos:start="9:33" pos:end="9:33">a</name> <operator pos:start="9:35" pos:end="9:35">*</operator> <name pos:start="9:37" pos:end="9:37">a</name> <operator pos:start="9:39" pos:end="9:40">&lt;=</operator> <name pos:start="9:42" pos:end="9:42">n</name></expr>;</condition> <incr pos:start="9:45" pos:end="9:47"><expr pos:start="9:45" pos:end="9:47"><name pos:start="9:45" pos:end="9:45">b</name><operator pos:start="9:46" pos:end="9:47">++</operator></expr></incr>)</control> <block pos:start="9:50" pos:end="17:9">{<block_content pos:start="10:13" pos:end="16:13">
            <for pos:start="10:13" pos:end="16:13">for <control pos:start="10:17" pos:end="10:60">(<init pos:start="10:18" pos:end="10:27"><decl pos:start="10:18" pos:end="10:26"><type pos:start="10:18" pos:end="10:20"><name pos:start="10:18" pos:end="10:20">int</name></type> <name pos:start="10:22" pos:end="10:22">c</name> <init pos:start="10:24" pos:end="10:26">= <expr pos:start="10:26" pos:end="10:26"><name pos:start="10:26" pos:end="10:26">b</name></expr></init></decl>;</init> <condition pos:start="10:29" pos:end="10:55"><expr pos:start="10:29" pos:end="10:54"><name pos:start="10:29" pos:end="10:29">a</name> <operator pos:start="10:31" pos:end="10:31">*</operator> <name pos:start="10:33" pos:end="10:33">a</name> <operator pos:start="10:35" pos:end="10:35">+</operator> <name pos:start="10:37" pos:end="10:37">b</name> <operator pos:start="10:39" pos:end="10:39">*</operator> <name pos:start="10:41" pos:end="10:41">b</name> <operator pos:start="10:43" pos:end="10:43">+</operator> <name pos:start="10:45" pos:end="10:45">c</name> <operator pos:start="10:47" pos:end="10:47">*</operator> <name pos:start="10:49" pos:end="10:49">c</name> <operator pos:start="10:51" pos:end="10:52">&lt;=</operator> <name pos:start="10:54" pos:end="10:54">n</name></expr>;</condition> <incr pos:start="10:57" pos:end="10:59"><expr pos:start="10:57" pos:end="10:59"><name pos:start="10:57" pos:end="10:57">c</name><operator pos:start="10:58" pos:end="10:59">++</operator></expr></incr>)</control> <block pos:start="10:62" pos:end="16:13">{<block_content pos:start="11:17" pos:end="15:17">
                <decl_stmt pos:start="11:17" pos:end="11:22"><decl pos:start="11:17" pos:end="11:21"><type pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:19">int</name></type> <name pos:start="11:21" pos:end="11:21">d</name></decl>;</decl_stmt>
                <expr_stmt pos:start="12:17" pos:end="12:52"><expr pos:start="12:17" pos:end="12:51"><name pos:start="12:17" pos:end="12:17">d</name> <operator pos:start="12:19" pos:end="12:19">=</operator> <call pos:start="12:21" pos:end="12:51"><name pos:start="12:21" pos:end="12:24">sqrt</name><argument_list pos:start="12:25" pos:end="12:51">(<argument pos:start="12:26" pos:end="12:50"><expr pos:start="12:26" pos:end="12:50"><name pos:start="12:26" pos:end="12:26">n</name> <operator pos:start="12:28" pos:end="12:28">-</operator> <name pos:start="12:30" pos:end="12:30">a</name> <operator pos:start="12:32" pos:end="12:32">*</operator> <name pos:start="12:34" pos:end="12:34">a</name> <operator pos:start="12:36" pos:end="12:36">-</operator> <name pos:start="12:38" pos:end="12:38">b</name> <operator pos:start="12:40" pos:end="12:40">*</operator> <name pos:start="12:42" pos:end="12:42">b</name> <operator pos:start="12:44" pos:end="12:44">-</operator> <name pos:start="12:46" pos:end="12:46">c</name> <operator pos:start="12:48" pos:end="12:48">*</operator> <name pos:start="12:50" pos:end="12:50">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="13:17" pos:end="15:17"><if pos:start="13:17" pos:end="15:17">if <condition pos:start="13:20" pos:end="13:55">(<expr pos:start="13:21" pos:end="13:54"><name pos:start="13:21" pos:end="13:21">d</name> <operator pos:start="13:23" pos:end="13:23">*</operator> <name pos:start="13:25" pos:end="13:25">d</name> <operator pos:start="13:27" pos:end="13:27">+</operator> <name pos:start="13:29" pos:end="13:29">a</name> <operator pos:start="13:31" pos:end="13:31">*</operator> <name pos:start="13:33" pos:end="13:33">a</name> <operator pos:start="13:35" pos:end="13:35">+</operator> <name pos:start="13:37" pos:end="13:37">b</name> <operator pos:start="13:39" pos:end="13:39">*</operator> <name pos:start="13:41" pos:end="13:41">b</name> <operator pos:start="13:43" pos:end="13:43">+</operator> <name pos:start="13:45" pos:end="13:45">c</name> <operator pos:start="13:47" pos:end="13:47">*</operator> <name pos:start="13:49" pos:end="13:49">c</name> <operator pos:start="13:51" pos:end="13:52">==</operator> <name pos:start="13:54" pos:end="13:54">n</name></expr>)</condition> <block pos:start="13:57" pos:end="15:17">{<block_content pos:start="14:21" pos:end="14:84">
                    <expr_stmt pos:start="14:21" pos:end="14:84"><expr pos:start="14:21" pos:end="14:83"><name pos:start="14:21" pos:end="14:23">ans</name> <operator pos:start="14:25" pos:end="14:25">=</operator> <call pos:start="14:27" pos:end="14:83"><name pos:start="14:27" pos:end="14:29">min</name><argument_list pos:start="14:30" pos:end="14:83">(<argument pos:start="14:31" pos:end="14:33"><expr pos:start="14:31" pos:end="14:33"><name pos:start="14:31" pos:end="14:33">ans</name></expr></argument>, <argument pos:start="14:36" pos:end="14:82"><expr pos:start="14:36" pos:end="14:82"><call pos:start="14:36" pos:end="14:44"><name pos:start="14:36" pos:end="14:38">min</name><argument_list pos:start="14:39" pos:end="14:44">(<argument pos:start="14:40" pos:end="14:40"><expr pos:start="14:40" pos:end="14:40"><name pos:start="14:40" pos:end="14:40">a</name></expr></argument>, <argument pos:start="14:43" pos:end="14:43"><expr pos:start="14:43" pos:end="14:43"><name pos:start="14:43" pos:end="14:43">d</name></expr></argument>)</argument_list></call> <operator pos:start="14:46" pos:end="14:46">*</operator> <literal type="number" pos:start="14:48" pos:end="14:53">1000</literal> <operator pos:start="14:53" pos:end="14:53">+</operator> <call pos:start="14:55" pos:end="14:63"><name pos:start="14:55" pos:end="14:57">max</name><argument_list pos:start="14:58" pos:end="14:63">(<argument pos:start="14:59" pos:end="14:59"><expr pos:start="14:59" pos:end="14:59"><name pos:start="14:59" pos:end="14:59">a</name></expr></argument>, <argument pos:start="14:62" pos:end="14:62"><expr pos:start="14:62" pos:end="14:62"><name pos:start="14:62" pos:end="14:62">d</name></expr></argument>)</argument_list></call> <operator pos:start="14:65" pos:end="14:65">*</operator> <literal type="number" pos:start="14:67" pos:end="14:71">100</literal> <operator pos:start="14:71" pos:end="14:71">+</operator> <name pos:start="14:73" pos:end="14:73">b</name> <operator pos:start="14:75" pos:end="14:75">*</operator> <literal type="number" pos:start="14:77" pos:end="14:80">10</literal> <operator pos:start="14:80" pos:end="14:80">+</operator> <name pos:start="14:82" pos:end="14:82">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="19:5" pos:end="19:95"><expr pos:start="19:5" pos:end="19:93"><name pos:start="19:5" pos:end="19:8">cout</name> <operator pos:start="19:10" pos:end="19:11">&lt;&lt;</operator> <name pos:start="19:13" pos:end="19:15">ans</name> <operator pos:start="19:17" pos:end="19:17">/</operator> <literal type="number" pos:start="19:19" pos:end="19:22">1000</literal> <operator pos:start="19:24" pos:end="19:25">&lt;&lt;</operator> <literal type="string" pos:start="19:27" pos:end="19:29">" "</literal> <operator pos:start="19:31" pos:end="19:32">&lt;&lt;</operator> <name pos:start="19:34" pos:end="19:36">ans</name> <operator pos:start="19:38" pos:end="19:38">%</operator> <literal type="number" pos:start="19:40" pos:end="19:43">1000</literal> <operator pos:start="19:45" pos:end="19:45">/</operator> <literal type="number" pos:start="19:47" pos:end="19:49">100</literal> <operator pos:start="19:51" pos:end="19:52">&lt;&lt;</operator> <literal type="string" pos:start="19:54" pos:end="19:56">" "</literal> <operator pos:start="19:58" pos:end="19:59">&lt;&lt;</operator> <name pos:start="19:61" pos:end="19:63">ans</name> <operator pos:start="19:65" pos:end="19:65">%</operator> <literal type="number" pos:start="19:67" pos:end="19:69">100</literal> <operator pos:start="19:71" pos:end="19:71">/</operator> <literal type="number" pos:start="19:73" pos:end="19:74">10</literal> <operator pos:start="19:76" pos:end="19:77">&lt;&lt;</operator> <literal type="string" pos:start="19:79" pos:end="19:81">" "</literal> <operator pos:start="19:83" pos:end="19:84">&lt;&lt;</operator> <name pos:start="19:86" pos:end="19:88">ans</name> <operator pos:start="19:90" pos:end="19:90">%</operator> <literal type="number" pos:start="19:92" pos:end="19:93">10</literal></expr> ;</expr_stmt> 
    <return pos:start="20:5" pos:end="20:13">return <expr pos:start="20:12" pos:end="20:12"><literal type="number" pos:start="20:12" pos:end="20:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
