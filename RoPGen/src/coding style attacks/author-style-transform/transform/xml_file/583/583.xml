<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/583/583.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="25:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name> <parameter_list pos:start="3:10" pos:end="3:11">()</parameter_list> <block pos:start="3:13" pos:end="25:1">{<block_content pos:start="4:5" pos:end="24:13">
    <expr_stmt pos:start="4:5" pos:end="4:37"><expr pos:start="4:5" pos:end="4:36"><call pos:start="4:5" pos:end="4:36"><name pos:start="4:5" pos:end="4:11">freopen</name> <argument_list pos:start="4:13" pos:end="4:36">(<argument pos:start="4:14" pos:end="4:21"><expr pos:start="4:14" pos:end="4:21"><literal type="string" pos:start="4:14" pos:end="4:21">"zip.in"</literal></expr></argument> , <argument pos:start="4:25" pos:end="4:27"><expr pos:start="4:25" pos:end="4:27"><literal type="string" pos:start="4:25" pos:end="4:27">"r"</literal></expr></argument> , <argument pos:start="4:31" pos:end="4:35"><expr pos:start="4:31" pos:end="4:35"><name pos:start="4:31" pos:end="4:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:39"><expr pos:start="5:5" pos:end="5:38"><call pos:start="5:5" pos:end="5:38"><name pos:start="5:5" pos:end="5:11">freopen</name> <argument_list pos:start="5:13" pos:end="5:38">(<argument pos:start="5:14" pos:end="5:22"><expr pos:start="5:14" pos:end="5:22"><literal type="string" pos:start="5:14" pos:end="5:22">"zip.out"</literal></expr></argument> , <argument pos:start="5:26" pos:end="5:28"><expr pos:start="5:26" pos:end="5:28"><literal type="string" pos:start="5:26" pos:end="5:28">"w"</literal></expr></argument> , <argument pos:start="5:32" pos:end="5:37"><expr pos:start="5:32" pos:end="5:37"><name pos:start="5:32" pos:end="5:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:14"><decl pos:start="6:5" pos:end="6:13"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">n</name> <init pos:start="6:11" pos:end="6:13">= <expr pos:start="6:13" pos:end="6:13"><literal type="number" pos:start="6:13" pos:end="6:13">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">string</name></type> <name pos:start="7:12" pos:end="7:12">a</name> <init pos:start="7:14" pos:end="7:17">= <expr pos:start="7:16" pos:end="7:17"><literal type="string" pos:start="7:16" pos:end="7:17">""</literal></expr></init></decl> , <decl pos:start="7:21" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:21" pos:end="7:21">s</name></decl>;</decl_stmt>
    <while pos:start="8:5" pos:end="11:5">while <condition pos:start="8:11" pos:end="8:20">(<expr pos:start="8:12" pos:end="8:19"><name pos:start="8:12" pos:end="8:14">cin</name> <operator pos:start="8:16" pos:end="8:17">&gt;&gt;</operator> <name pos:start="8:19" pos:end="8:19">a</name></expr>)</condition> <block pos:start="8:22" pos:end="11:5">{<block_content pos:start="9:9" pos:end="10:12">
        <expr_stmt pos:start="9:9" pos:end="9:15"><expr pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:9">s</name> <operator pos:start="9:11" pos:end="9:12">+=</operator> <name pos:start="9:14" pos:end="9:14">a</name></expr>;</expr_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:12"><expr pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:9">n</name><operator pos:start="10:10" pos:end="10:11">++</operator></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="12:5" pos:end="12:21"><expr pos:start="12:5" pos:end="12:20"><name pos:start="12:5" pos:end="12:8">cout</name> <operator pos:start="12:10" pos:end="12:11">&lt;&lt;</operator> <name pos:start="12:13" pos:end="12:13">n</name> <operator pos:start="12:15" pos:end="12:16">&lt;&lt;</operator> <literal type="char" pos:start="12:18" pos:end="12:20">' '</literal></expr>;</expr_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:13">flag</name> <init pos:start="13:15" pos:end="13:20">= <expr pos:start="13:17" pos:end="13:20"><name pos:start="13:17" pos:end="13:20"><name pos:start="13:17" pos:end="13:17">s</name><index pos:start="13:18" pos:end="13:20">[<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:16"><decl pos:start="14:5" pos:end="14:15"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:11">cnt</name> <init pos:start="14:13" pos:end="14:15">= <expr pos:start="14:15" pos:end="14:15"><literal type="number" pos:start="14:15" pos:end="14:15">1</literal></expr></init></decl>;</decl_stmt>
    <for pos:start="15:5" pos:end="23:5">for <control pos:start="15:9" pos:end="15:38">(<init pos:start="15:10" pos:end="15:19"><decl pos:start="15:10" pos:end="15:18"><type pos:start="15:10" pos:end="15:12"><name pos:start="15:10" pos:end="15:12">int</name></type> <name pos:start="15:14" pos:end="15:14">i</name> <init pos:start="15:16" pos:end="15:18">= <expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr></init></decl>;</init> <condition pos:start="15:21" pos:end="15:33"><expr pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <call pos:start="15:25" pos:end="15:32"><name pos:start="15:25" pos:end="15:30"><name pos:start="15:25" pos:end="15:25">s</name><operator pos:start="15:26" pos:end="15:26">.</operator><name pos:start="15:27" pos:end="15:30">size</name></name><argument_list pos:start="15:31" pos:end="15:32">()</argument_list></call></expr>;</condition> <incr pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:35">i</name><operator pos:start="15:36" pos:end="15:37">++</operator></expr></incr>)</control> <block pos:start="15:40" pos:end="23:5">{<block_content pos:start="16:9" pos:end="22:9">
        <if_stmt pos:start="16:9" pos:end="22:9"><if pos:start="16:9" pos:end="20:9">if <condition pos:start="16:12" pos:end="16:25">(<expr pos:start="16:13" pos:end="16:24"><name pos:start="16:13" pos:end="16:16"><name pos:start="16:13" pos:end="16:13">s</name><index pos:start="16:14" pos:end="16:16">[<expr pos:start="16:15" pos:end="16:15"><name pos:start="16:15" pos:end="16:15">i</name></expr>]</index></name> <operator pos:start="16:18" pos:end="16:19">!=</operator> <name pos:start="16:21" pos:end="16:24">flag</name></expr>)</condition> <block pos:start="16:27" pos:end="20:9">{<block_content pos:start="17:13" pos:end="19:20">
            <expr_stmt pos:start="17:13" pos:end="17:31"><expr pos:start="17:13" pos:end="17:30"><name pos:start="17:13" pos:end="17:16">cout</name> <operator pos:start="17:18" pos:end="17:19">&lt;&lt;</operator> <name pos:start="17:21" pos:end="17:23">cnt</name> <operator pos:start="17:25" pos:end="17:26">&lt;&lt;</operator> <literal type="char" pos:start="17:28" pos:end="17:30">' '</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:24"><expr pos:start="18:13" pos:end="18:23"><name pos:start="18:13" pos:end="18:16">flag</name> <operator pos:start="18:18" pos:end="18:18">=</operator> <name pos:start="18:20" pos:end="18:23"><name pos:start="18:20" pos:end="18:20">s</name><index pos:start="18:21" pos:end="18:23">[<expr pos:start="18:22" pos:end="18:22"><name pos:start="18:22" pos:end="18:22">i</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:20"><expr pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:15">cnt</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <literal type="number" pos:start="19:19" pos:end="19:19">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="20:11" pos:end="22:9">else <block pos:start="20:16" pos:end="22:9">{<block_content pos:start="21:13" pos:end="21:18">
            <expr_stmt pos:start="21:13" pos:end="21:18"><expr pos:start="21:13" pos:end="21:17"><name pos:start="21:13" pos:end="21:15">cnt</name><operator pos:start="21:16" pos:end="21:17">++</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <return pos:start="24:5" pos:end="24:13">return <expr pos:start="24:12" pos:end="24:12"><literal type="number" pos:start="24:12" pos:end="24:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
