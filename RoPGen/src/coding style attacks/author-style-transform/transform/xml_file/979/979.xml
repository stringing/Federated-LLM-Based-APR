<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/979/979.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:15">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive><cpp:file pos:start="2:9" pos:end="2:15">&lt;stack&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:18">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive><cpp:file pos:start="3:9" pos:end="3:18">&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:16">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive><cpp:file pos:start="4:9" pos:end="4:16">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:define pos:start="5:1" pos:end="5:14">#<cpp:directive pos:start="5:2" pos:end="5:7">define</cpp:directive> <cpp:macro pos:start="5:9" pos:end="5:10"><name pos:start="5:9" pos:end="5:10">nn</name></cpp:macro> <cpp:value pos:start="5:12" pos:end="5:14">105</cpp:value></cpp:define>
<cpp:define pos:start="6:1" pos:end="6:17">#<cpp:directive pos:start="6:2" pos:end="6:7">define</cpp:directive> <cpp:macro pos:start="6:9" pos:end="6:9"><name pos:start="6:9" pos:end="6:9">N</name></cpp:macro> <cpp:value pos:start="6:11" pos:end="6:17">105*105</cpp:value></cpp:define>
<using pos:start="7:1" pos:end="7:20">using <namespace pos:start="7:7" pos:end="7:20">namespace <name pos:start="7:17" pos:end="7:19">std</name>;</namespace></using>
<struct pos:start="8:1" pos:end="10:15">struct <name pos:start="8:8" pos:end="8:8">c</name><block pos:start="8:9" pos:end="10:1">{<public type="default" pos:start="9:5" pos:end="9:14">
    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">v</name></decl>,<decl pos:start="9:11" pos:end="9:13"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:11" pos:end="9:13">nxt</name></decl>;</decl_stmt>
</public>}</block><decl pos:start="10:2" pos:end="10:7"><name pos:start="10:2" pos:end="10:7"><name pos:start="10:2" pos:end="10:2">e</name><index pos:start="10:3" pos:end="10:7">[<expr pos:start="10:4" pos:end="10:6"><name pos:start="10:4" pos:end="10:4">N</name><operator pos:start="10:5" pos:end="10:5">*</operator><literal type="number" pos:start="10:6" pos:end="10:6">2</literal></expr>]</index></name></decl>,<decl pos:start="10:9" pos:end="10:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="10:9" pos:end="10:14"><name pos:start="10:9" pos:end="10:9">E</name><index pos:start="10:10" pos:end="10:14">[<expr pos:start="10:11" pos:end="10:13"><name pos:start="10:11" pos:end="10:11">N</name><operator pos:start="10:12" pos:end="10:12">*</operator><literal type="number" pos:start="10:13" pos:end="10:13">2</literal></expr>]</index></name></decl>;</struct>
<decl_stmt pos:start="11:1" pos:end="11:63"><decl pos:start="11:1" pos:end="11:8"><type pos:start="11:1" pos:end="11:3"><name pos:start="11:1" pos:end="11:3">int</name></type> <name pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:5">h</name><index pos:start="11:6" pos:end="11:8">[<expr pos:start="11:7" pos:end="11:7"><name pos:start="11:7" pos:end="11:7">N</name></expr>]</index></name></decl>,<decl pos:start="11:10" pos:end="11:15"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:10" pos:end="11:15"><name pos:start="11:10" pos:end="11:12">dfn</name><index pos:start="11:13" pos:end="11:15">[<expr pos:start="11:14" pos:end="11:14"><name pos:start="11:14" pos:end="11:14">N</name></expr>]</index></name></decl>,<decl pos:start="11:17" pos:end="11:22"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:17" pos:end="11:22"><name pos:start="11:17" pos:end="11:19">low</name><index pos:start="11:20" pos:end="11:22">[<expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">N</name></expr>]</index></name></decl>,<decl pos:start="11:24" pos:end="11:26"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:24" pos:end="11:26">idx</name></decl>,<decl pos:start="11:28" pos:end="11:30"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:28" pos:end="11:30">idr</name></decl>,<decl pos:start="11:32" pos:end="11:35"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:32" pos:end="11:35"><name pos:start="11:32" pos:end="11:32">H</name><index pos:start="11:33" pos:end="11:35">[<expr pos:start="11:34" pos:end="11:34"><name pos:start="11:34" pos:end="11:34">N</name></expr>]</index></name></decl>,<decl pos:start="11:37" pos:end="11:39"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:37" pos:end="11:39">idX</name></decl>,<decl pos:start="11:41" pos:end="11:43"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:41" pos:end="11:43">cnt</name></decl>,<decl pos:start="11:45" pos:end="11:45"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:45" pos:end="11:45">n</name></decl>,<decl pos:start="11:47" pos:end="11:47"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:47" pos:end="11:47">m</name></decl>,<decl pos:start="11:49" pos:end="11:50"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:49" pos:end="11:50">tt</name></decl>,<decl pos:start="11:52" pos:end="11:56"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:52" pos:end="11:56"><name pos:start="11:52" pos:end="11:53">dp</name><index pos:start="11:54" pos:end="11:56">[<expr pos:start="11:55" pos:end="11:55"><name pos:start="11:55" pos:end="11:55">N</name></expr>]</index></name></decl>,<decl pos:start="11:58" pos:end="11:59"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:58" pos:end="11:59">be</name></decl>,<decl pos:start="11:61" pos:end="11:62"><type ref="prev" pos:start="11:1" pos:end="11:3"/><name pos:start="11:61" pos:end="11:62">en</name></decl>;</decl_stmt>
<decl_stmt pos:start="12:1" pos:end="12:12"><decl pos:start="12:1" pos:end="12:11"><type pos:start="12:1" pos:end="12:4"><name pos:start="12:1" pos:end="12:4">bool</name></type> <name pos:start="12:6" pos:end="12:11"><name pos:start="12:6" pos:end="12:8">ins</name><index pos:start="12:9" pos:end="12:11">[<expr pos:start="12:10" pos:end="12:10"><name pos:start="12:10" pos:end="12:10">N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="13:1" pos:end="13:17"><decl pos:start="13:1" pos:end="13:8"><type pos:start="13:1" pos:end="13:3"><name pos:start="13:1" pos:end="13:3">int</name></type> <name pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:5">w</name><index pos:start="13:6" pos:end="13:8">[<expr pos:start="13:7" pos:end="13:7"><name pos:start="13:7" pos:end="13:7">N</name></expr>]</index></name></decl>,<decl pos:start="13:10" pos:end="13:16"><type ref="prev" pos:start="13:1" pos:end="13:3"/><name pos:start="13:10" pos:end="13:16"><name pos:start="13:10" pos:end="13:13">be_l</name><index pos:start="13:14" pos:end="13:16">[<expr pos:start="13:15" pos:end="13:15"><name pos:start="13:15" pos:end="13:15">N</name></expr>]</index></name></decl>;</decl_stmt>



<decl_stmt pos:start="17:1" pos:end="17:14"><decl pos:start="17:1" pos:end="17:13"><type pos:start="17:1" pos:end="17:11"><name pos:start="17:1" pos:end="17:11"><name pos:start="17:1" pos:end="17:5">stack</name> <argument_list type="generic" pos:start="17:7" pos:end="17:11">&lt;<argument pos:start="17:8" pos:end="17:10"><expr pos:start="17:8" pos:end="17:10"><name pos:start="17:8" pos:end="17:10">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="17:13" pos:end="17:13">S</name></decl>;</decl_stmt>
<decl_stmt pos:start="18:1" pos:end="18:18"><decl pos:start="18:1" pos:end="18:17"><type pos:start="18:1" pos:end="18:12"><name pos:start="18:1" pos:end="18:12"><name pos:start="18:1" pos:end="18:6">vector</name> <argument_list type="generic" pos:start="18:8" pos:end="18:12">&lt;<argument pos:start="18:9" pos:end="18:11"><expr pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="18:14" pos:end="18:17"><name pos:start="18:14" pos:end="18:14">G</name><index pos:start="18:15" pos:end="18:17">[<expr pos:start="18:16" pos:end="18:16"><name pos:start="18:16" pos:end="18:16">N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="19:1" pos:end="19:16"><decl pos:start="19:1" pos:end="19:15"><type pos:start="19:1" pos:end="19:4"><name pos:start="19:1" pos:end="19:4">char</name></type> <name pos:start="19:6" pos:end="19:15"><name pos:start="19:6" pos:end="19:7">mp</name><index pos:start="19:8" pos:end="19:11">[<expr pos:start="19:9" pos:end="19:10"><name pos:start="19:9" pos:end="19:10">nn</name></expr>]</index><index pos:start="19:12" pos:end="19:15">[<expr pos:start="19:13" pos:end="19:14"><name pos:start="19:13" pos:end="19:14">nn</name></expr>]</index></name></decl>;</decl_stmt><decl_stmt pos:start="19:17" pos:end="19:25"><decl pos:start="19:17" pos:end="19:24"><type pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">int</name></type> <name pos:start="19:21" pos:end="19:24"><name pos:start="19:21" pos:end="19:21">K</name><index pos:start="19:22" pos:end="19:24">[<expr pos:start="19:23" pos:end="19:23"><name pos:start="19:23" pos:end="19:23">N</name></expr>]</index></name></decl>;</decl_stmt>


<struct pos:start="22:1" pos:end="24:6">struct <name pos:start="22:8" pos:end="22:10">ccc</name><block pos:start="22:11" pos:end="24:1">{<public type="default" pos:start="23:5" pos:end="23:12">
    <decl_stmt pos:start="23:5" pos:end="23:12"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">x</name></decl>,<decl pos:start="23:11" pos:end="23:11"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:11" pos:end="23:11">y</name></decl>;</decl_stmt>
</public>}</block><decl pos:start="24:2" pos:end="24:5"><name pos:start="24:2" pos:end="24:5"><name pos:start="24:2" pos:end="24:2">s</name><index pos:start="24:3" pos:end="24:5">[<expr pos:start="24:4" pos:end="24:4"><name pos:start="24:4" pos:end="24:4">N</name></expr>]</index></name></decl>;</struct>
<function pos:start="25:1" pos:end="27:1"><type pos:start="25:1" pos:end="25:3"><name pos:start="25:1" pos:end="25:3">int</name></type> <name pos:start="25:5" pos:end="25:8">turn</name><parameter_list pos:start="25:9" pos:end="25:21">(<parameter pos:start="25:10" pos:end="25:14"><decl pos:start="25:10" pos:end="25:14"><type pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:12">int</name></type> <name pos:start="25:14" pos:end="25:14">x</name></decl></parameter>,<parameter pos:start="25:16" pos:end="25:20"><decl pos:start="25:16" pos:end="25:20"><type pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:18">int</name></type> <name pos:start="25:20" pos:end="25:20">y</name></decl></parameter>)</parameter_list><block pos:start="25:22" pos:end="27:1">{<block_content pos:start="26:5" pos:end="26:21">
    <return pos:start="26:5" pos:end="26:21">return <expr pos:start="26:12" pos:end="26:20"><operator pos:start="26:12" pos:end="26:12">(</operator><name pos:start="26:13" pos:end="26:13">x</name><operator pos:start="26:14" pos:end="26:14">-</operator><literal type="number" pos:start="26:15" pos:end="26:15">1</literal><operator pos:start="26:16" pos:end="26:16">)</operator><operator pos:start="26:17" pos:end="26:17">*</operator><name pos:start="26:18" pos:end="26:18">m</name><operator pos:start="26:19" pos:end="26:19">+</operator><name pos:start="26:20" pos:end="26:20">y</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="28:1" pos:end="30:1"><type pos:start="28:1" pos:end="28:4"><name pos:start="28:1" pos:end="28:4">void</name></type> <name pos:start="28:6" pos:end="28:8">add</name><parameter_list pos:start="28:9" pos:end="28:21">(<parameter pos:start="28:10" pos:end="28:14"><decl pos:start="28:10" pos:end="28:14"><type pos:start="28:10" pos:end="28:14"><name pos:start="28:10" pos:end="28:12">int</name></type> <name pos:start="28:14" pos:end="28:14">u</name></decl></parameter>,<parameter pos:start="28:16" pos:end="28:20"><decl pos:start="28:16" pos:end="28:20"><type pos:start="28:16" pos:end="28:20"><name pos:start="28:16" pos:end="28:18">int</name></type> <name pos:start="28:20" pos:end="28:20">v</name></decl></parameter>)</parameter_list><block pos:start="28:22" pos:end="30:1">{<block_content pos:start="29:5" pos:end="29:31">
    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:5">e</name><index pos:start="29:6" pos:end="29:12">[<expr pos:start="29:7" pos:end="29:11"><operator pos:start="29:7" pos:end="29:8">++</operator><name pos:start="29:9" pos:end="29:11">idx</name></expr>]</index></name><operator pos:start="29:13" pos:end="29:13">=</operator><block pos:start="29:14" pos:end="29:21">{<expr pos:start="29:15" pos:end="29:15"><name pos:start="29:15" pos:end="29:15">v</name></expr>,<expr pos:start="29:17" pos:end="29:20"><name pos:start="29:17" pos:end="29:20"><name pos:start="29:17" pos:end="29:17">h</name><index pos:start="29:18" pos:end="29:20">[<expr pos:start="29:19" pos:end="29:19"><name pos:start="29:19" pos:end="29:19">u</name></expr>]</index></name></expr>}</block></expr>;</expr_stmt><expr_stmt pos:start="29:23" pos:end="29:31"><expr pos:start="29:23" pos:end="29:30"><name pos:start="29:23" pos:end="29:26"><name pos:start="29:23" pos:end="29:23">h</name><index pos:start="29:24" pos:end="29:26">[<expr pos:start="29:25" pos:end="29:25"><name pos:start="29:25" pos:end="29:25">u</name></expr>]</index></name><operator pos:start="29:27" pos:end="29:27">=</operator><name pos:start="29:28" pos:end="29:30">idx</name></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="31:1" pos:end="33:1"><type pos:start="31:1" pos:end="31:4"><name pos:start="31:1" pos:end="31:4">void</name></type> <name pos:start="31:6" pos:end="31:8">adD</name><parameter_list pos:start="31:9" pos:end="31:21">(<parameter pos:start="31:10" pos:end="31:14"><decl pos:start="31:10" pos:end="31:14"><type pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:12">int</name></type> <name pos:start="31:14" pos:end="31:14">u</name></decl></parameter>,<parameter pos:start="31:16" pos:end="31:20"><decl pos:start="31:16" pos:end="31:20"><type pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:18">int</name></type> <name pos:start="31:20" pos:end="31:20">v</name></decl></parameter>)</parameter_list><block pos:start="31:22" pos:end="33:1">{<block_content pos:start="32:5" pos:end="32:31">
    <expr_stmt pos:start="32:5" pos:end="32:22"><expr pos:start="32:5" pos:end="32:21"><name pos:start="32:5" pos:end="32:12"><name pos:start="32:5" pos:end="32:5">E</name><index pos:start="32:6" pos:end="32:12">[<expr pos:start="32:7" pos:end="32:11"><operator pos:start="32:7" pos:end="32:8">++</operator><name pos:start="32:9" pos:end="32:11">idX</name></expr>]</index></name><operator pos:start="32:13" pos:end="32:13">=</operator><block pos:start="32:14" pos:end="32:21">{<expr pos:start="32:15" pos:end="32:15"><name pos:start="32:15" pos:end="32:15">v</name></expr>,<expr pos:start="32:17" pos:end="32:20"><name pos:start="32:17" pos:end="32:20"><name pos:start="32:17" pos:end="32:17">H</name><index pos:start="32:18" pos:end="32:20">[<expr pos:start="32:19" pos:end="32:19"><name pos:start="32:19" pos:end="32:19">u</name></expr>]</index></name></expr>}</block></expr>;</expr_stmt><expr_stmt pos:start="32:23" pos:end="32:31"><expr pos:start="32:23" pos:end="32:30"><name pos:start="32:23" pos:end="32:26"><name pos:start="32:23" pos:end="32:23">H</name><index pos:start="32:24" pos:end="32:26">[<expr pos:start="32:25" pos:end="32:25"><name pos:start="32:25" pos:end="32:25">u</name></expr>]</index></name><operator pos:start="32:27" pos:end="32:27">=</operator><name pos:start="32:28" pos:end="32:30">idX</name></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="34:1" pos:end="55:1"><type pos:start="34:1" pos:end="34:4"><name pos:start="34:1" pos:end="34:4">void</name></type> <name pos:start="34:6" pos:end="34:11">tarjan</name><parameter_list pos:start="34:12" pos:end="34:18">(<parameter pos:start="34:13" pos:end="34:17"><decl pos:start="34:13" pos:end="34:17"><type pos:start="34:13" pos:end="34:15"><name pos:start="34:13" pos:end="34:15">int</name></type> <name pos:start="34:17" pos:end="34:17">u</name></decl></parameter>)</parameter_list><block pos:start="34:19" pos:end="55:1">{<block_content pos:start="35:5" pos:end="54:11">
    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:10"><name pos:start="35:5" pos:end="35:7">dfn</name><index pos:start="35:8" pos:end="35:10">[<expr pos:start="35:9" pos:end="35:9"><name pos:start="35:9" pos:end="35:9">u</name></expr>]</index></name><operator pos:start="35:11" pos:end="35:11">=</operator><name pos:start="35:12" pos:end="35:17"><name pos:start="35:12" pos:end="35:14">low</name><index pos:start="35:15" pos:end="35:17">[<expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">u</name></expr>]</index></name><operator pos:start="35:18" pos:end="35:18">=</operator><operator pos:start="35:19" pos:end="35:20">++</operator><name pos:start="35:21" pos:end="35:23">idr</name></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:16"><expr pos:start="36:5" pos:end="36:15"><name pos:start="36:5" pos:end="36:10"><name pos:start="36:5" pos:end="36:7">ins</name><index pos:start="36:8" pos:end="36:10">[<expr pos:start="36:9" pos:end="36:9"><name pos:start="36:9" pos:end="36:9">u</name></expr>]</index></name><operator pos:start="36:11" pos:end="36:11">=</operator><literal type="boolean" pos:start="36:12" pos:end="36:15">true</literal></expr>;</expr_stmt><expr_stmt pos:start="36:17" pos:end="36:26"><expr pos:start="36:17" pos:end="36:25"><call pos:start="36:17" pos:end="36:25"><name pos:start="36:17" pos:end="36:22"><name pos:start="36:17" pos:end="36:17">S</name><operator pos:start="36:18" pos:end="36:18">.</operator><name pos:start="36:19" pos:end="36:22">push</name></name><argument_list pos:start="36:23" pos:end="36:25">(<argument pos:start="36:24" pos:end="36:24"><expr pos:start="36:24" pos:end="36:24"><name pos:start="36:24" pos:end="36:24">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="37:5" pos:end="42:5">for <control pos:start="37:9" pos:end="37:33">(<init pos:start="37:10" pos:end="37:20"><decl pos:start="37:10" pos:end="37:19"><type pos:start="37:10" pos:end="37:12"><name pos:start="37:10" pos:end="37:12">int</name></type> <name pos:start="37:14" pos:end="37:14">i</name><init pos:start="37:15" pos:end="37:19">=<expr pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:16">h</name><index pos:start="37:17" pos:end="37:19">[<expr pos:start="37:18" pos:end="37:18"><name pos:start="37:18" pos:end="37:18">u</name></expr>]</index></name></expr></init></decl>;</init><condition pos:start="37:21" pos:end="37:22"><expr pos:start="37:21" pos:end="37:21"><name pos:start="37:21" pos:end="37:21">i</name></expr>;</condition><incr pos:start="37:23" pos:end="37:32"><expr pos:start="37:23" pos:end="37:32"><name pos:start="37:23" pos:end="37:23">i</name><operator pos:start="37:24" pos:end="37:24">=</operator><name pos:start="37:25" pos:end="37:28"><name pos:start="37:25" pos:end="37:25">e</name><index pos:start="37:26" pos:end="37:28">[<expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">i</name></expr>]</index></name><operator pos:start="37:29" pos:end="37:29">.</operator><name pos:start="37:30" pos:end="37:32">nxt</name></expr></incr>)</control><block pos:start="37:34" pos:end="42:5">{<block_content pos:start="38:9" pos:end="41:52">
        <decl_stmt pos:start="38:9" pos:end="38:21"><decl pos:start="38:9" pos:end="38:20"><type pos:start="38:9" pos:end="38:11"><name pos:start="38:9" pos:end="38:11">int</name></type> <name pos:start="38:13" pos:end="38:13">v</name><init pos:start="38:14" pos:end="38:20">=<expr pos:start="38:15" pos:end="38:20"><name pos:start="38:15" pos:end="38:18"><name pos:start="38:15" pos:end="38:15">e</name><index pos:start="38:16" pos:end="38:18">[<expr pos:start="38:17" pos:end="38:17"><name pos:start="38:17" pos:end="38:17">i</name></expr>]</index></name><operator pos:start="38:19" pos:end="38:19">.</operator><name pos:start="38:20" pos:end="38:20">v</name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="39:9" pos:end="41:52"><if pos:start="39:9" pos:end="41:9">if <condition pos:start="39:12" pos:end="39:20">(<expr pos:start="39:13" pos:end="39:19"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:19"><name pos:start="39:14" pos:end="39:16">dfn</name><index pos:start="39:17" pos:end="39:19">[<expr pos:start="39:18" pos:end="39:18"><name pos:start="39:18" pos:end="39:18">v</name></expr>]</index></name></expr>)</condition><block pos:start="39:21" pos:end="41:9">{<block_content pos:start="40:13" pos:end="40:48">
            <expr_stmt pos:start="40:13" pos:end="40:22"><expr pos:start="40:13" pos:end="40:21"><call pos:start="40:13" pos:end="40:21"><name pos:start="40:13" pos:end="40:18">tarjan</name><argument_list pos:start="40:19" pos:end="40:21">(<argument pos:start="40:20" pos:end="40:20"><expr pos:start="40:20" pos:end="40:20"><name pos:start="40:20" pos:end="40:20">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt pos:start="40:23" pos:end="40:48"><expr pos:start="40:23" pos:end="40:47"><name pos:start="40:23" pos:end="40:28"><name pos:start="40:23" pos:end="40:25">low</name><index pos:start="40:26" pos:end="40:28">[<expr pos:start="40:27" pos:end="40:27"><name pos:start="40:27" pos:end="40:27">u</name></expr>]</index></name><operator pos:start="40:29" pos:end="40:29">=</operator><call pos:start="40:30" pos:end="40:47"><name pos:start="40:30" pos:end="40:32">min</name><argument_list pos:start="40:33" pos:end="40:47">(<argument pos:start="40:34" pos:end="40:39"><expr pos:start="40:34" pos:end="40:39"><name pos:start="40:34" pos:end="40:39"><name pos:start="40:34" pos:end="40:36">low</name><index pos:start="40:37" pos:end="40:39">[<expr pos:start="40:38" pos:end="40:38"><name pos:start="40:38" pos:end="40:38">u</name></expr>]</index></name></expr></argument>,<argument pos:start="40:41" pos:end="40:46"><expr pos:start="40:41" pos:end="40:46"><name pos:start="40:41" pos:end="40:46"><name pos:start="40:41" pos:end="40:43">low</name><index pos:start="40:44" pos:end="40:46">[<expr pos:start="40:45" pos:end="40:45"><name pos:start="40:45" pos:end="40:45">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="41:10" pos:end="41:52">else if <condition pos:start="41:18" pos:end="41:25">(<expr pos:start="41:19" pos:end="41:24"><name pos:start="41:19" pos:end="41:24"><name pos:start="41:19" pos:end="41:21">ins</name><index pos:start="41:22" pos:end="41:24">[<expr pos:start="41:23" pos:end="41:23"><name pos:start="41:23" pos:end="41:23">v</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="41:27" pos:end="41:52"><block_content pos:start="41:27" pos:end="41:52"> <expr_stmt pos:start="41:27" pos:end="41:52"><expr pos:start="41:27" pos:end="41:51"><name pos:start="41:27" pos:end="41:32"><name pos:start="41:27" pos:end="41:29">low</name><index pos:start="41:30" pos:end="41:32">[<expr pos:start="41:31" pos:end="41:31"><name pos:start="41:31" pos:end="41:31">u</name></expr>]</index></name><operator pos:start="41:33" pos:end="41:33">=</operator><call pos:start="41:34" pos:end="41:51"><name pos:start="41:34" pos:end="41:36">min</name><argument_list pos:start="41:37" pos:end="41:51">(<argument pos:start="41:38" pos:end="41:43"><expr pos:start="41:38" pos:end="41:43"><name pos:start="41:38" pos:end="41:43"><name pos:start="41:38" pos:end="41:40">low</name><index pos:start="41:41" pos:end="41:43">[<expr pos:start="41:42" pos:end="41:42"><name pos:start="41:42" pos:end="41:42">u</name></expr>]</index></name></expr></argument>,<argument pos:start="41:45" pos:end="41:50"><expr pos:start="41:45" pos:end="41:50"><name pos:start="41:45" pos:end="41:50"><name pos:start="41:45" pos:end="41:47">dfn</name><index pos:start="41:48" pos:end="41:50">[<expr pos:start="41:49" pos:end="41:49"><name pos:start="41:49" pos:end="41:49">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="43:5" pos:end="53:5"><if pos:start="43:5" pos:end="53:5">if <condition pos:start="43:8" pos:end="43:23">(<expr pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:11">low</name><index pos:start="43:12" pos:end="43:14">[<expr pos:start="43:13" pos:end="43:13"><name pos:start="43:13" pos:end="43:13">u</name></expr>]</index></name><operator pos:start="43:15" pos:end="43:16">==</operator><name pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:19">dfn</name><index pos:start="43:20" pos:end="43:22">[<expr pos:start="43:21" pos:end="43:21"><name pos:start="43:21" pos:end="43:21">u</name></expr>]</index></name></expr>)</condition><block pos:start="43:24" pos:end="53:5">{<block_content pos:start="44:9" pos:end="52:9">
        <expr_stmt pos:start="44:9" pos:end="44:14"><expr pos:start="44:9" pos:end="44:13"><operator pos:start="44:9" pos:end="44:10">++</operator><name pos:start="44:11" pos:end="44:13">cnt</name></expr>;</expr_stmt>
        <while pos:start="45:9" pos:end="52:9">while<condition pos:start="45:14" pos:end="45:25">(<expr pos:start="45:15" pos:end="45:24"><operator pos:start="45:15" pos:end="45:15">!</operator><call pos:start="45:16" pos:end="45:24"><name pos:start="45:16" pos:end="45:22"><name pos:start="45:16" pos:end="45:16">S</name><operator pos:start="45:17" pos:end="45:17">.</operator><name pos:start="45:18" pos:end="45:22">empty</name></name><argument_list pos:start="45:23" pos:end="45:24">()</argument_list></call></expr>)</condition><block pos:start="45:26" pos:end="52:9">{<block_content pos:start="46:13" pos:end="51:29">
            <decl_stmt pos:start="46:13" pos:end="46:27"><decl pos:start="46:13" pos:end="46:26"><type pos:start="46:13" pos:end="46:15"><name pos:start="46:13" pos:end="46:15">int</name></type> <name pos:start="46:17" pos:end="46:18">tm</name><init pos:start="46:19" pos:end="46:26">=<expr pos:start="46:20" pos:end="46:26"><call pos:start="46:20" pos:end="46:26"><name pos:start="46:20" pos:end="46:24"><name pos:start="46:20" pos:end="46:20">S</name><operator pos:start="46:21" pos:end="46:21">.</operator><name pos:start="46:22" pos:end="46:24">top</name></name><argument_list pos:start="46:25" pos:end="46:26">()</argument_list></call></expr></init></decl>;</decl_stmt><expr_stmt pos:start="46:28" pos:end="46:35"><expr pos:start="46:28" pos:end="46:34"><call pos:start="46:28" pos:end="46:34"><name pos:start="46:28" pos:end="46:32"><name pos:start="46:28" pos:end="46:28">S</name><operator pos:start="46:29" pos:end="46:29">.</operator><name pos:start="46:30" pos:end="46:32">pop</name></name><argument_list pos:start="46:33" pos:end="46:34">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="47:13" pos:end="47:26"><expr pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:15">ins</name><index pos:start="47:16" pos:end="47:19">[<expr pos:start="47:17" pos:end="47:18"><name pos:start="47:17" pos:end="47:18">tm</name></expr>]</index></name><operator pos:start="47:20" pos:end="47:20">=</operator><literal type="boolean" pos:start="47:21" pos:end="47:25">false</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="48:13" pos:end="48:25"><expr pos:start="48:13" pos:end="48:24"><name pos:start="48:13" pos:end="48:20"><name pos:start="48:13" pos:end="48:16">be_l</name><index pos:start="48:17" pos:end="48:20">[<expr pos:start="48:18" pos:end="48:19"><name pos:start="48:18" pos:end="48:19">tm</name></expr>]</index></name><operator pos:start="48:21" pos:end="48:21">=</operator><name pos:start="48:22" pos:end="48:24">cnt</name></expr>;</expr_stmt>
            <expr_stmt pos:start="49:13" pos:end="49:26"><expr pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:18"><name pos:start="49:13" pos:end="49:13">w</name><index pos:start="49:14" pos:end="49:18">[<expr pos:start="49:15" pos:end="49:17"><name pos:start="49:15" pos:end="49:17">cnt</name></expr>]</index></name><operator pos:start="49:19" pos:end="49:20">+=</operator><name pos:start="49:21" pos:end="49:25"><name pos:start="49:21" pos:end="49:21">K</name><index pos:start="49:22" pos:end="49:25">[<expr pos:start="49:23" pos:end="49:24"><name pos:start="49:23" pos:end="49:24">tm</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="50:13" pos:end="50:33"><expr pos:start="50:13" pos:end="50:32"><name pos:start="50:13" pos:end="50:18"><name pos:start="50:13" pos:end="50:13">G</name><index pos:start="50:14" pos:end="50:18">[<expr pos:start="50:15" pos:end="50:17"><name pos:start="50:15" pos:end="50:17">cnt</name></expr>]</index></name><operator pos:start="50:19" pos:end="50:19">.</operator><call pos:start="50:20" pos:end="50:32"><name pos:start="50:20" pos:end="50:28">push_back</name><argument_list pos:start="50:29" pos:end="50:32">(<argument pos:start="50:30" pos:end="50:31"><expr pos:start="50:30" pos:end="50:31"><name pos:start="50:30" pos:end="50:31">tm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="51:13" pos:end="51:29"><if pos:start="51:13" pos:end="51:29">if <condition pos:start="51:16" pos:end="51:22">(<expr pos:start="51:17" pos:end="51:21"><name pos:start="51:17" pos:end="51:18">tm</name><operator pos:start="51:19" pos:end="51:20">==</operator><name pos:start="51:21" pos:end="51:21">u</name></expr>)</condition><block type="pseudo" pos:start="51:24" pos:end="51:29"><block_content pos:start="51:24" pos:end="51:29"> <break pos:start="51:24" pos:end="51:29">break;</break></block_content></block></if></if_stmt>
        </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
    <return pos:start="54:5" pos:end="54:11">return;</return>
</block_content>}</block></function>
<function pos:start="56:1" pos:end="67:1"><type pos:start="56:1" pos:end="56:4"><name pos:start="56:1" pos:end="56:4">void</name></type> <name pos:start="56:6" pos:end="56:7">Do</name><parameter_list pos:start="56:8" pos:end="56:9">()</parameter_list><block pos:start="56:10" pos:end="67:1">{<block_content pos:start="57:5" pos:end="66:5">
    <expr_stmt pos:start="57:5" pos:end="57:15"><expr pos:start="57:5" pos:end="57:14"><name pos:start="57:5" pos:end="57:6">be</name><operator pos:start="57:7" pos:end="57:7">=</operator><name pos:start="57:8" pos:end="57:14"><name pos:start="57:8" pos:end="57:11">be_l</name><index pos:start="57:12" pos:end="57:14">[<expr pos:start="57:13" pos:end="57:13"><literal type="number" pos:start="57:13" pos:end="57:13">1</literal></expr>]</index></name></expr>;</expr_stmt><expr_stmt pos:start="57:16" pos:end="57:28"><expr pos:start="57:16" pos:end="57:27"><name pos:start="57:16" pos:end="57:17">en</name><operator pos:start="57:18" pos:end="57:18">=</operator><name pos:start="57:19" pos:end="57:27"><name pos:start="57:19" pos:end="57:22">be_l</name><index pos:start="57:23" pos:end="57:27">[<expr pos:start="57:24" pos:end="57:26"><name pos:start="57:24" pos:end="57:24">n</name><operator pos:start="57:25" pos:end="57:25">*</operator><name pos:start="57:26" pos:end="57:26">m</name></expr>]</index></name></expr>;</expr_stmt>
    <for pos:start="58:5" pos:end="66:5">for <control pos:start="58:9" pos:end="58:28">(<init pos:start="58:10" pos:end="58:17"><decl pos:start="58:10" pos:end="58:16"><type pos:start="58:10" pos:end="58:12"><name pos:start="58:10" pos:end="58:12">int</name></type> <name pos:start="58:14" pos:end="58:14">u</name><init pos:start="58:15" pos:end="58:16">=<expr pos:start="58:16" pos:end="58:16"><literal type="number" pos:start="58:16" pos:end="58:16">1</literal></expr></init></decl>;</init><condition pos:start="58:18" pos:end="58:24"><expr pos:start="58:18" pos:end="58:23"><name pos:start="58:18" pos:end="58:18">u</name><operator pos:start="58:19" pos:end="58:20">&lt;=</operator><name pos:start="58:21" pos:end="58:21">n</name><operator pos:start="58:22" pos:end="58:22">*</operator><name pos:start="58:23" pos:end="58:23">m</name></expr>;</condition><incr pos:start="58:25" pos:end="58:27"><expr pos:start="58:25" pos:end="58:27"><operator pos:start="58:25" pos:end="58:26">++</operator><name pos:start="58:27" pos:end="58:27">u</name></expr></incr>)</control><block pos:start="58:29" pos:end="66:5">{<block_content pos:start="59:9" pos:end="65:9">
        <for pos:start="59:9" pos:end="65:9">for <control pos:start="59:13" pos:end="59:37">(<init pos:start="59:14" pos:end="59:24"><decl pos:start="59:14" pos:end="59:23"><type pos:start="59:14" pos:end="59:16"><name pos:start="59:14" pos:end="59:16">int</name></type> <name pos:start="59:18" pos:end="59:18">i</name><init pos:start="59:19" pos:end="59:23">=<expr pos:start="59:20" pos:end="59:23"><name pos:start="59:20" pos:end="59:23"><name pos:start="59:20" pos:end="59:20">h</name><index pos:start="59:21" pos:end="59:23">[<expr pos:start="59:22" pos:end="59:22"><name pos:start="59:22" pos:end="59:22">u</name></expr>]</index></name></expr></init></decl>;</init><condition pos:start="59:25" pos:end="59:26"><expr pos:start="59:25" pos:end="59:25"><name pos:start="59:25" pos:end="59:25">i</name></expr>;</condition><incr pos:start="59:27" pos:end="59:36"><expr pos:start="59:27" pos:end="59:36"><name pos:start="59:27" pos:end="59:27">i</name><operator pos:start="59:28" pos:end="59:28">=</operator><name pos:start="59:29" pos:end="59:32"><name pos:start="59:29" pos:end="59:29">e</name><index pos:start="59:30" pos:end="59:32">[<expr pos:start="59:31" pos:end="59:31"><name pos:start="59:31" pos:end="59:31">i</name></expr>]</index></name><operator pos:start="59:33" pos:end="59:33">.</operator><name pos:start="59:34" pos:end="59:36">nxt</name></expr></incr>)</control><block pos:start="59:38" pos:end="65:9">{<block_content pos:start="60:13" pos:end="64:13">
            <decl_stmt pos:start="60:13" pos:end="60:25"><decl pos:start="60:13" pos:end="60:24"><type pos:start="60:13" pos:end="60:15"><name pos:start="60:13" pos:end="60:15">int</name></type> <name pos:start="60:17" pos:end="60:17">v</name><init pos:start="60:18" pos:end="60:24">=<expr pos:start="60:19" pos:end="60:24"><name pos:start="60:19" pos:end="60:22"><name pos:start="60:19" pos:end="60:19">e</name><index pos:start="60:20" pos:end="60:22">[<expr pos:start="60:21" pos:end="60:21"><name pos:start="60:21" pos:end="60:21">i</name></expr>]</index></name><operator pos:start="60:23" pos:end="60:23">.</operator><name pos:start="60:24" pos:end="60:24">v</name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="61:13" pos:end="64:13"><if pos:start="61:13" pos:end="64:13">if <condition pos:start="61:16" pos:end="61:33">(<expr pos:start="61:17" pos:end="61:32"><name pos:start="61:17" pos:end="61:23"><name pos:start="61:17" pos:end="61:20">be_l</name><index pos:start="61:21" pos:end="61:23">[<expr pos:start="61:22" pos:end="61:22"><name pos:start="61:22" pos:end="61:22">u</name></expr>]</index></name><operator pos:start="61:24" pos:end="61:25">!=</operator><name pos:start="61:26" pos:end="61:32"><name pos:start="61:26" pos:end="61:29">be_l</name><index pos:start="61:30" pos:end="61:32">[<expr pos:start="61:31" pos:end="61:31"><name pos:start="61:31" pos:end="61:31">v</name></expr>]</index></name></expr>)</condition><block pos:start="61:34" pos:end="64:13">{<block_content pos:start="63:17" pos:end="63:37">
                
                <expr_stmt pos:start="63:17" pos:end="63:37"><expr pos:start="63:17" pos:end="63:36"><call pos:start="63:17" pos:end="63:36"><name pos:start="63:17" pos:end="63:19">adD</name><argument_list pos:start="63:20" pos:end="63:36">(<argument pos:start="63:21" pos:end="63:27"><expr pos:start="63:21" pos:end="63:27"><name pos:start="63:21" pos:end="63:27"><name pos:start="63:21" pos:end="63:24">be_l</name><index pos:start="63:25" pos:end="63:27">[<expr pos:start="63:26" pos:end="63:26"><name pos:start="63:26" pos:end="63:26">u</name></expr>]</index></name></expr></argument>,<argument pos:start="63:29" pos:end="63:35"><expr pos:start="63:29" pos:end="63:35"><name pos:start="63:29" pos:end="63:35"><name pos:start="63:29" pos:end="63:32">be_l</name><index pos:start="63:33" pos:end="63:35">[<expr pos:start="63:34" pos:end="63:34"><name pos:start="63:34" pos:end="63:34">v</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="68:1" pos:end="71:1"><type pos:start="68:1" pos:end="68:3"><name pos:start="68:1" pos:end="68:3">ccc</name></type> <name pos:start="68:5" pos:end="68:9">turnb</name><parameter_list pos:start="68:10" pos:end="68:16">(<parameter pos:start="68:11" pos:end="68:15"><decl pos:start="68:11" pos:end="68:15"><type pos:start="68:11" pos:end="68:13"><name pos:start="68:11" pos:end="68:13">int</name></type> <name pos:start="68:15" pos:end="68:15">u</name></decl></parameter>)</parameter_list><block pos:start="68:17" pos:end="71:1">{<block_content pos:start="69:5" pos:end="70:17">
    <decl_stmt pos:start="69:5" pos:end="69:32"><decl pos:start="69:5" pos:end="69:19"><type pos:start="69:5" pos:end="69:7"><name pos:start="69:5" pos:end="69:7">int</name></type> <name pos:start="69:9" pos:end="69:9">x</name><init pos:start="69:10" pos:end="69:19">=<expr pos:start="69:11" pos:end="69:19"><operator pos:start="69:11" pos:end="69:11">(</operator><name pos:start="69:12" pos:end="69:12">u</name><operator pos:start="69:13" pos:end="69:13">-</operator><literal type="number" pos:start="69:14" pos:end="69:14">1</literal><operator pos:start="69:15" pos:end="69:15">)</operator><operator pos:start="69:16" pos:end="69:16">/</operator><name pos:start="69:17" pos:end="69:17">n</name><operator pos:start="69:18" pos:end="69:18">+</operator><literal type="number" pos:start="69:19" pos:end="69:19">1</literal></expr></init></decl>,<decl pos:start="69:21" pos:end="69:31"><type ref="prev" pos:start="69:5" pos:end="69:7"/><name pos:start="69:21" pos:end="69:21">y</name><init pos:start="69:22" pos:end="69:31">=<expr pos:start="69:23" pos:end="69:31"><operator pos:start="69:23" pos:end="69:23">(</operator><name pos:start="69:24" pos:end="69:24">u</name><operator pos:start="69:25" pos:end="69:25">-</operator><literal type="number" pos:start="69:26" pos:end="69:26">1</literal><operator pos:start="69:27" pos:end="69:27">)</operator><operator pos:start="69:28" pos:end="69:28">%</operator><name pos:start="69:29" pos:end="69:29">n</name><operator pos:start="69:30" pos:end="69:30">+</operator><literal type="number" pos:start="69:31" pos:end="69:31">1</literal></expr></init></decl>;</decl_stmt>
    <return pos:start="70:5" pos:end="70:17">return <expr pos:start="70:12" pos:end="70:16"><block pos:start="70:12" pos:end="70:16">{<expr pos:start="70:13" pos:end="70:13"><name pos:start="70:13" pos:end="70:13">x</name></expr>,<expr pos:start="70:15" pos:end="70:15"><name pos:start="70:15" pos:end="70:15">y</name></expr>}</block></expr>;</return>
</block_content>}</block></function>
<function pos:start="72:1" pos:end="81:1"><type pos:start="72:1" pos:end="72:3"><name pos:start="72:1" pos:end="72:3">int</name></type> <name pos:start="72:5" pos:end="72:7">dfs</name><parameter_list pos:start="72:8" pos:end="72:14">(<parameter pos:start="72:9" pos:end="72:13"><decl pos:start="72:9" pos:end="72:13"><type pos:start="72:9" pos:end="72:11"><name pos:start="72:9" pos:end="72:11">int</name></type> <name pos:start="72:13" pos:end="72:13">u</name></decl></parameter>)</parameter_list><block pos:start="72:15" pos:end="81:1">{<block_content pos:start="73:5" pos:end="80:19">
    <if_stmt pos:start="73:5" pos:end="73:32"><if pos:start="73:5" pos:end="73:32">if <condition pos:start="73:8" pos:end="73:18">(<expr pos:start="73:9" pos:end="73:17"><name pos:start="73:9" pos:end="73:13"><name pos:start="73:9" pos:end="73:10">dp</name><index pos:start="73:11" pos:end="73:13">[<expr pos:start="73:12" pos:end="73:12"><name pos:start="73:12" pos:end="73:12">u</name></expr>]</index></name><operator pos:start="73:14" pos:end="73:15">!=</operator><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>)</condition><block type="pseudo" pos:start="73:20" pos:end="73:32"><block_content pos:start="73:20" pos:end="73:32"> <return pos:start="73:20" pos:end="73:32">return <expr pos:start="73:27" pos:end="73:31"><name pos:start="73:27" pos:end="73:31"><name pos:start="73:27" pos:end="73:28">dp</name><index pos:start="73:29" pos:end="73:31">[<expr pos:start="73:30" pos:end="73:30"><name pos:start="73:30" pos:end="73:30">u</name></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="74:5" pos:end="74:34"><if pos:start="74:5" pos:end="74:34">if <condition pos:start="74:8" pos:end="74:14">(<expr pos:start="74:9" pos:end="74:13"><name pos:start="74:9" pos:end="74:9">u</name><operator pos:start="74:10" pos:end="74:11">==</operator><name pos:start="74:12" pos:end="74:13">en</name></expr>)</condition><block type="pseudo" pos:start="74:16" pos:end="74:34"><block_content pos:start="74:16" pos:end="74:34"> <return pos:start="74:16" pos:end="74:34">return <expr pos:start="74:23" pos:end="74:33"><name pos:start="74:23" pos:end="74:27"><name pos:start="74:23" pos:end="74:24">dp</name><index pos:start="74:25" pos:end="74:27">[<expr pos:start="74:26" pos:end="74:26"><name pos:start="74:26" pos:end="74:26">u</name></expr>]</index></name><operator pos:start="74:28" pos:end="74:28">=</operator><name pos:start="74:29" pos:end="74:33"><name pos:start="74:29" pos:end="74:29">w</name><index pos:start="74:30" pos:end="74:33">[<expr pos:start="74:31" pos:end="74:32"><name pos:start="74:31" pos:end="74:32">en</name></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>
    <decl_stmt pos:start="75:5" pos:end="75:15"><decl pos:start="75:5" pos:end="75:14"><type pos:start="75:5" pos:end="75:7"><name pos:start="75:5" pos:end="75:7">int</name></type> <name pos:start="75:9" pos:end="75:9">p</name><init pos:start="75:10" pos:end="75:14">=<expr pos:start="75:11" pos:end="75:14"><name pos:start="75:11" pos:end="75:14"><name pos:start="75:11" pos:end="75:11">w</name><index pos:start="75:12" pos:end="75:14">[<expr pos:start="75:13" pos:end="75:13"><name pos:start="75:13" pos:end="75:13">u</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <for pos:start="76:5" pos:end="79:5">for <control pos:start="76:9" pos:end="76:33">(<init pos:start="76:10" pos:end="76:20"><decl pos:start="76:10" pos:end="76:19"><type pos:start="76:10" pos:end="76:12"><name pos:start="76:10" pos:end="76:12">int</name></type> <name pos:start="76:14" pos:end="76:14">i</name><init pos:start="76:15" pos:end="76:19">=<expr pos:start="76:16" pos:end="76:19"><name pos:start="76:16" pos:end="76:19"><name pos:start="76:16" pos:end="76:16">H</name><index pos:start="76:17" pos:end="76:19">[<expr pos:start="76:18" pos:end="76:18"><name pos:start="76:18" pos:end="76:18">u</name></expr>]</index></name></expr></init></decl>;</init><condition pos:start="76:21" pos:end="76:22"><expr pos:start="76:21" pos:end="76:21"><name pos:start="76:21" pos:end="76:21">i</name></expr>;</condition><incr pos:start="76:23" pos:end="76:32"><expr pos:start="76:23" pos:end="76:32"><name pos:start="76:23" pos:end="76:23">i</name><operator pos:start="76:24" pos:end="76:24">=</operator><name pos:start="76:25" pos:end="76:28"><name pos:start="76:25" pos:end="76:25">E</name><index pos:start="76:26" pos:end="76:28">[<expr pos:start="76:27" pos:end="76:27"><name pos:start="76:27" pos:end="76:27">i</name></expr>]</index></name><operator pos:start="76:29" pos:end="76:29">.</operator><name pos:start="76:30" pos:end="76:32">nxt</name></expr></incr>)</control><block pos:start="76:34" pos:end="79:5">{<block_content pos:start="77:9" pos:end="78:29">
        <decl_stmt pos:start="77:9" pos:end="77:21"><decl pos:start="77:9" pos:end="77:20"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:13">v</name><init pos:start="77:14" pos:end="77:20">=<expr pos:start="77:15" pos:end="77:20"><name pos:start="77:15" pos:end="77:18"><name pos:start="77:15" pos:end="77:15">E</name><index pos:start="77:16" pos:end="77:18">[<expr pos:start="77:17" pos:end="77:17"><name pos:start="77:17" pos:end="77:17">i</name></expr>]</index></name><operator pos:start="77:19" pos:end="77:19">.</operator><name pos:start="77:20" pos:end="77:20">v</name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="78:9" pos:end="78:29"><expr pos:start="78:9" pos:end="78:28"><name pos:start="78:9" pos:end="78:9">p</name><operator pos:start="78:10" pos:end="78:10">=</operator><call pos:start="78:11" pos:end="78:28"><name pos:start="78:11" pos:end="78:13">max</name><argument_list pos:start="78:14" pos:end="78:28">(<argument pos:start="78:15" pos:end="78:15"><expr pos:start="78:15" pos:end="78:15"><name pos:start="78:15" pos:end="78:15">p</name></expr></argument>,<argument pos:start="78:17" pos:end="78:27"><expr pos:start="78:17" pos:end="78:27"><name pos:start="78:17" pos:end="78:20"><name pos:start="78:17" pos:end="78:17">w</name><index pos:start="78:18" pos:end="78:20">[<expr pos:start="78:19" pos:end="78:19"><name pos:start="78:19" pos:end="78:19">u</name></expr>]</index></name><operator pos:start="78:21" pos:end="78:21">+</operator><call pos:start="78:22" pos:end="78:27"><name pos:start="78:22" pos:end="78:24">dfs</name><argument_list pos:start="78:25" pos:end="78:27">(<argument pos:start="78:26" pos:end="78:26"><expr pos:start="78:26" pos:end="78:26"><name pos:start="78:26" pos:end="78:26">v</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="80:5" pos:end="80:19">return <expr pos:start="80:12" pos:end="80:18"><name pos:start="80:12" pos:end="80:16"><name pos:start="80:12" pos:end="80:13">dp</name><index pos:start="80:14" pos:end="80:16">[<expr pos:start="80:15" pos:end="80:15"><name pos:start="80:15" pos:end="80:15">u</name></expr>]</index></name><operator pos:start="80:17" pos:end="80:17">=</operator><name pos:start="80:18" pos:end="80:18">p</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="82:1" pos:end="84:1"><type pos:start="82:1" pos:end="82:4"><name pos:start="82:1" pos:end="82:4">bool</name></type> <name pos:start="82:6" pos:end="82:9">cant</name><parameter_list pos:start="82:10" pos:end="82:22">(<parameter pos:start="82:11" pos:end="82:15"><decl pos:start="82:11" pos:end="82:15"><type pos:start="82:11" pos:end="82:15"><name pos:start="82:11" pos:end="82:13">int</name></type> <name pos:start="82:15" pos:end="82:15">x</name></decl></parameter>,<parameter pos:start="82:17" pos:end="82:21"><decl pos:start="82:17" pos:end="82:21"><type pos:start="82:17" pos:end="82:21"><name pos:start="82:17" pos:end="82:19">int</name></type> <name pos:start="82:21" pos:end="82:21">y</name></decl></parameter>)</parameter_list><block pos:start="82:23" pos:end="84:1">{<block_content pos:start="83:5" pos:end="83:45">
    <return pos:start="83:5" pos:end="83:45">return <expr pos:start="83:12" pos:end="83:44"><name pos:start="83:12" pos:end="83:18"><name pos:start="83:12" pos:end="83:12">x</name><argument_list type="generic" pos:start="83:13" pos:end="83:18">&lt;<argument pos:start="83:14" pos:end="83:17"><expr pos:start="83:14" pos:end="83:17"><literal type="number" pos:start="83:14" pos:end="83:14">1</literal><operator pos:start="83:15" pos:end="83:16">||</operator><name pos:start="83:17" pos:end="83:17">x</name></expr></argument>&gt;</argument_list></name><name pos:start="83:19" pos:end="83:19">n</name><operator pos:start="83:20" pos:end="83:21">||</operator><name pos:start="83:22" pos:end="83:28"><name pos:start="83:22" pos:end="83:22">y</name><argument_list type="generic" pos:start="83:23" pos:end="83:28">&lt;<argument pos:start="83:24" pos:end="83:27"><expr pos:start="83:24" pos:end="83:27"><literal type="number" pos:start="83:24" pos:end="83:24">1</literal><operator pos:start="83:25" pos:end="83:26">||</operator><name pos:start="83:27" pos:end="83:27">y</name></expr></argument>&gt;</argument_list></name><name pos:start="83:29" pos:end="83:29">m</name><operator pos:start="83:30" pos:end="83:31">||</operator><name pos:start="83:32" pos:end="83:39"><name pos:start="83:32" pos:end="83:33">mp</name><index pos:start="83:34" pos:end="83:36">[<expr pos:start="83:35" pos:end="83:35"><name pos:start="83:35" pos:end="83:35">x</name></expr>]</index><index pos:start="83:37" pos:end="83:39">[<expr pos:start="83:38" pos:end="83:38"><name pos:start="83:38" pos:end="83:38">y</name></expr>]</index></name><operator pos:start="83:40" pos:end="83:41">==</operator><literal type="char" pos:start="83:42" pos:end="83:44">'#'</literal></expr>;</return>
</block_content>}</block></function>
<function pos:start="85:1" pos:end="125:1"><name pos:start="85:1" pos:end="85:4">main</name><parameter_list pos:start="85:5" pos:end="85:6">()</parameter_list><block pos:start="85:7" pos:end="125:1">{<block_content pos:start="86:5" pos:end="124:13">
    <expr_stmt pos:start="86:5" pos:end="86:37"><expr pos:start="86:5" pos:end="86:36"><call pos:start="86:5" pos:end="86:36"><name pos:start="86:5" pos:end="86:11">freopen</name><argument_list pos:start="86:12" pos:end="86:36">(<argument pos:start="86:13" pos:end="86:25"><expr pos:start="86:13" pos:end="86:25"><literal type="string" pos:start="86:13" pos:end="86:25">"treasure.in"</literal></expr></argument>,<argument pos:start="86:27" pos:end="86:29"><expr pos:start="86:27" pos:end="86:29"><literal type="string" pos:start="86:27" pos:end="86:29">"r"</literal></expr></argument>,<argument pos:start="86:31" pos:end="86:35"><expr pos:start="86:31" pos:end="86:35"><name pos:start="86:31" pos:end="86:35">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="87:5" pos:end="87:39"><expr pos:start="87:5" pos:end="87:38"><call pos:start="87:5" pos:end="87:38"><name pos:start="87:5" pos:end="87:11">freopen</name><argument_list pos:start="87:12" pos:end="87:38">(<argument pos:start="87:13" pos:end="87:26"><expr pos:start="87:13" pos:end="87:26"><literal type="string" pos:start="87:13" pos:end="87:26">"treasure.out"</literal></expr></argument>,<argument pos:start="87:28" pos:end="87:30"><expr pos:start="87:28" pos:end="87:30"><literal type="string" pos:start="87:28" pos:end="87:30">"w"</literal></expr></argument>,<argument pos:start="87:32" pos:end="87:37"><expr pos:start="87:32" pos:end="87:37"><name pos:start="87:32" pos:end="87:37">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="88:5" pos:end="88:28"><expr pos:start="88:5" pos:end="88:27"><call pos:start="88:5" pos:end="88:27"><name pos:start="88:5" pos:end="88:10">memset</name><argument_list pos:start="88:11" pos:end="88:27">(<argument pos:start="88:12" pos:end="88:13"><expr pos:start="88:12" pos:end="88:13"><name pos:start="88:12" pos:end="88:13">dp</name></expr></argument>,<argument pos:start="88:15" pos:end="88:16"><expr pos:start="88:15" pos:end="88:16"><operator pos:start="88:15" pos:end="88:15">-</operator><literal type="number" pos:start="88:16" pos:end="88:16">1</literal></expr></argument>,<argument pos:start="88:18" pos:end="88:26"><expr pos:start="88:18" pos:end="88:26"><sizeof pos:start="88:18" pos:end="88:26">sizeof <name pos:start="88:25" pos:end="88:26">dp</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="89:5" pos:end="89:24"><expr pos:start="89:5" pos:end="89:23"><call pos:start="89:5" pos:end="89:23"><name pos:start="89:5" pos:end="89:9">scanf</name><argument_list pos:start="89:10" pos:end="89:23">(<argument pos:start="89:11" pos:end="89:16"><expr pos:start="89:11" pos:end="89:16"><literal type="string" pos:start="89:11" pos:end="89:16">"%d%d"</literal></expr></argument>,<argument pos:start="89:18" pos:end="89:19"><expr pos:start="89:18" pos:end="89:19"><operator pos:start="89:18" pos:end="89:18">&amp;</operator><name pos:start="89:19" pos:end="89:19">n</name></expr></argument>,<argument pos:start="89:21" pos:end="89:22"><expr pos:start="89:21" pos:end="89:22"><operator pos:start="89:21" pos:end="89:21">&amp;</operator><name pos:start="89:22" pos:end="89:22">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="90:5" pos:end="92:5">for <control pos:start="90:9" pos:end="90:26">(<init pos:start="90:10" pos:end="90:17"><decl pos:start="90:10" pos:end="90:16"><type pos:start="90:10" pos:end="90:12"><name pos:start="90:10" pos:end="90:12">int</name></type> <name pos:start="90:14" pos:end="90:14">i</name><init pos:start="90:15" pos:end="90:16">=<expr pos:start="90:16" pos:end="90:16"><literal type="number" pos:start="90:16" pos:end="90:16">1</literal></expr></init></decl>;</init><condition pos:start="90:18" pos:end="90:22"><expr pos:start="90:18" pos:end="90:21"><name pos:start="90:18" pos:end="90:18">i</name><operator pos:start="90:19" pos:end="90:20">&lt;=</operator><name pos:start="90:21" pos:end="90:21">n</name></expr>;</condition><incr pos:start="90:23" pos:end="90:25"><expr pos:start="90:23" pos:end="90:25"><operator pos:start="90:23" pos:end="90:24">++</operator><name pos:start="90:25" pos:end="90:25">i</name></expr></incr>)</control><block pos:start="90:27" pos:end="92:5">{<block_content pos:start="91:9" pos:end="91:28">
        <expr_stmt pos:start="91:9" pos:end="91:28"><expr pos:start="91:9" pos:end="91:27"><call pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:13">scanf</name><argument_list pos:start="91:14" pos:end="91:27">(<argument pos:start="91:15" pos:end="91:18"><expr pos:start="91:15" pos:end="91:18"><literal type="string" pos:start="91:15" pos:end="91:18">"%s"</literal></expr></argument>,<argument pos:start="91:20" pos:end="91:26"><expr pos:start="91:20" pos:end="91:26"><name pos:start="91:20" pos:end="91:24"><name pos:start="91:20" pos:end="91:21">mp</name><index pos:start="91:22" pos:end="91:24">[<expr pos:start="91:23" pos:end="91:23"><name pos:start="91:23" pos:end="91:23">i</name></expr>]</index></name><operator pos:start="91:25" pos:end="91:25">+</operator><literal type="number" pos:start="91:26" pos:end="91:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="93:5" pos:end="108:5">for <control pos:start="93:9" pos:end="93:26">(<init pos:start="93:10" pos:end="93:17"><decl pos:start="93:10" pos:end="93:16"><type pos:start="93:10" pos:end="93:12"><name pos:start="93:10" pos:end="93:12">int</name></type> <name pos:start="93:14" pos:end="93:14">i</name><init pos:start="93:15" pos:end="93:16">=<expr pos:start="93:16" pos:end="93:16"><literal type="number" pos:start="93:16" pos:end="93:16">1</literal></expr></init></decl>;</init><condition pos:start="93:18" pos:end="93:22"><expr pos:start="93:18" pos:end="93:21"><name pos:start="93:18" pos:end="93:18">i</name><operator pos:start="93:19" pos:end="93:20">&lt;=</operator><name pos:start="93:21" pos:end="93:21">n</name></expr>;</condition><incr pos:start="93:23" pos:end="93:25"><expr pos:start="93:23" pos:end="93:25"><operator pos:start="93:23" pos:end="93:24">++</operator><name pos:start="93:25" pos:end="93:25">i</name></expr></incr>)</control><block pos:start="93:27" pos:end="108:5">{<block_content pos:start="94:9" pos:end="107:9">
        <for pos:start="94:9" pos:end="107:9">for <control pos:start="94:13" pos:end="94:30">(<init pos:start="94:14" pos:end="94:21"><decl pos:start="94:14" pos:end="94:20"><type pos:start="94:14" pos:end="94:16"><name pos:start="94:14" pos:end="94:16">int</name></type> <name pos:start="94:18" pos:end="94:18">j</name><init pos:start="94:19" pos:end="94:20">=<expr pos:start="94:20" pos:end="94:20"><literal type="number" pos:start="94:20" pos:end="94:20">1</literal></expr></init></decl>;</init><condition pos:start="94:22" pos:end="94:26"><expr pos:start="94:22" pos:end="94:25"><name pos:start="94:22" pos:end="94:22">j</name><operator pos:start="94:23" pos:end="94:24">&lt;=</operator><name pos:start="94:25" pos:end="94:25">m</name></expr>;</condition><incr pos:start="94:27" pos:end="94:29"><expr pos:start="94:27" pos:end="94:29"><operator pos:start="94:27" pos:end="94:28">++</operator><name pos:start="94:29" pos:end="94:29">j</name></expr></incr>)</control><block pos:start="94:31" pos:end="107:9">{<block_content pos:start="95:13" pos:end="106:45">
            <if_stmt pos:start="95:13" pos:end="97:13"><if pos:start="95:13" pos:end="97:13">if <condition pos:start="95:16" pos:end="95:34">(<expr pos:start="95:17" pos:end="95:33"><call pos:start="95:17" pos:end="95:33"><name pos:start="95:17" pos:end="95:23">isdigit</name><argument_list pos:start="95:24" pos:end="95:33">(<argument pos:start="95:25" pos:end="95:32"><expr pos:start="95:25" pos:end="95:32"><name pos:start="95:25" pos:end="95:32"><name pos:start="95:25" pos:end="95:26">mp</name><index pos:start="95:27" pos:end="95:29">[<expr pos:start="95:28" pos:end="95:28"><name pos:start="95:28" pos:end="95:28">i</name></expr>]</index><index pos:start="95:30" pos:end="95:32">[<expr pos:start="95:31" pos:end="95:31"><name pos:start="95:31" pos:end="95:31">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="95:35" pos:end="97:13">{<block_content pos:start="96:17" pos:end="96:42">
                <expr_stmt pos:start="96:17" pos:end="96:42"><expr pos:start="96:17" pos:end="96:41"><name pos:start="96:17" pos:end="96:28"><name pos:start="96:17" pos:end="96:17">K</name><index pos:start="96:18" pos:end="96:28">[<expr pos:start="96:19" pos:end="96:27"><call pos:start="96:19" pos:end="96:27"><name pos:start="96:19" pos:end="96:22">turn</name><argument_list pos:start="96:23" pos:end="96:27">(<argument pos:start="96:24" pos:end="96:24"><expr pos:start="96:24" pos:end="96:24"><name pos:start="96:24" pos:end="96:24">i</name></expr></argument>,<argument pos:start="96:26" pos:end="96:26"><expr pos:start="96:26" pos:end="96:26"><name pos:start="96:26" pos:end="96:26">j</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="96:29" pos:end="96:29">=</operator><name pos:start="96:30" pos:end="96:37"><name pos:start="96:30" pos:end="96:31">mp</name><index pos:start="96:32" pos:end="96:34">[<expr pos:start="96:33" pos:end="96:33"><name pos:start="96:33" pos:end="96:33">i</name></expr>]</index><index pos:start="96:35" pos:end="96:37">[<expr pos:start="96:36" pos:end="96:36"><name pos:start="96:36" pos:end="96:36">j</name></expr>]</index></name><operator pos:start="96:38" pos:end="96:38">-</operator><literal type="char" pos:start="96:39" pos:end="96:41">'0'</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="98:13" pos:end="98:40"><if pos:start="98:13" pos:end="98:40">if <condition pos:start="98:16" pos:end="98:30">(<expr pos:start="98:17" pos:end="98:29"><name pos:start="98:17" pos:end="98:24"><name pos:start="98:17" pos:end="98:18">mp</name><index pos:start="98:19" pos:end="98:21">[<expr pos:start="98:20" pos:end="98:20"><name pos:start="98:20" pos:end="98:20">i</name></expr>]</index><index pos:start="98:22" pos:end="98:24">[<expr pos:start="98:23" pos:end="98:23"><name pos:start="98:23" pos:end="98:23">j</name></expr>]</index></name><operator pos:start="98:25" pos:end="98:26">==</operator><literal type="char" pos:start="98:27" pos:end="98:29">'#'</literal></expr>)</condition><block type="pseudo" pos:start="98:32" pos:end="98:40"><block_content pos:start="98:32" pos:end="98:40"> <continue pos:start="98:32" pos:end="98:40">continue;</continue></block_content></block></if></if_stmt>
            <if_stmt pos:start="99:13" pos:end="102:13"><if pos:start="99:13" pos:end="102:13">if <condition pos:start="99:16" pos:end="99:29">(<expr pos:start="99:17" pos:end="99:28"><operator pos:start="99:17" pos:end="99:17">!</operator><call pos:start="99:18" pos:end="99:28"><name pos:start="99:18" pos:end="99:21">cant</name><argument_list pos:start="99:22" pos:end="99:28">(<argument pos:start="99:23" pos:end="99:25"><expr pos:start="99:23" pos:end="99:25"><name pos:start="99:23" pos:end="99:23">i</name><operator pos:start="99:24" pos:end="99:24">+</operator><literal type="number" pos:start="99:25" pos:end="99:25">1</literal></expr></argument>,<argument pos:start="99:27" pos:end="99:27"><expr pos:start="99:27" pos:end="99:27"><name pos:start="99:27" pos:end="99:27">j</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="99:30" pos:end="102:13">{<block_content pos:start="100:17" pos:end="100:43">
                <expr_stmt pos:start="100:17" pos:end="100:43"><expr pos:start="100:17" pos:end="100:42"><call pos:start="100:17" pos:end="100:42"><name pos:start="100:17" pos:end="100:19">add</name><argument_list pos:start="100:20" pos:end="100:42">(<argument pos:start="100:21" pos:end="100:29"><expr pos:start="100:21" pos:end="100:29"><call pos:start="100:21" pos:end="100:29"><name pos:start="100:21" pos:end="100:24">turn</name><argument_list pos:start="100:25" pos:end="100:29">(<argument pos:start="100:26" pos:end="100:26"><expr pos:start="100:26" pos:end="100:26"><name pos:start="100:26" pos:end="100:26">i</name></expr></argument>,<argument pos:start="100:28" pos:end="100:28"><expr pos:start="100:28" pos:end="100:28"><name pos:start="100:28" pos:end="100:28">j</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="100:31" pos:end="100:41"><expr pos:start="100:31" pos:end="100:41"><call pos:start="100:31" pos:end="100:41"><name pos:start="100:31" pos:end="100:34">turn</name><argument_list pos:start="100:35" pos:end="100:41">(<argument pos:start="100:36" pos:end="100:38"><expr pos:start="100:36" pos:end="100:38"><name pos:start="100:36" pos:end="100:36">i</name><operator pos:start="100:37" pos:end="100:37">+</operator><literal type="number" pos:start="100:38" pos:end="100:38">1</literal></expr></argument>,<argument pos:start="100:40" pos:end="100:40"><expr pos:start="100:40" pos:end="100:40"><name pos:start="100:40" pos:end="100:40">j</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="103:13" pos:end="105:13"><if pos:start="103:13" pos:end="105:13">if <condition pos:start="103:16" pos:end="103:29">(<expr pos:start="103:17" pos:end="103:28"><operator pos:start="103:17" pos:end="103:17">!</operator><call pos:start="103:18" pos:end="103:28"><name pos:start="103:18" pos:end="103:21">cant</name><argument_list pos:start="103:22" pos:end="103:28">(<argument pos:start="103:23" pos:end="103:23"><expr pos:start="103:23" pos:end="103:23"><name pos:start="103:23" pos:end="103:23">i</name></expr></argument>,<argument pos:start="103:25" pos:end="103:27"><expr pos:start="103:25" pos:end="103:27"><name pos:start="103:25" pos:end="103:25">j</name><operator pos:start="103:26" pos:end="103:26">+</operator><literal type="number" pos:start="103:27" pos:end="103:27">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="103:30" pos:end="105:13">{<block_content pos:start="104:17" pos:end="104:43">
                <expr_stmt pos:start="104:17" pos:end="104:43"><expr pos:start="104:17" pos:end="104:42"><call pos:start="104:17" pos:end="104:42"><name pos:start="104:17" pos:end="104:19">add</name><argument_list pos:start="104:20" pos:end="104:42">(<argument pos:start="104:21" pos:end="104:29"><expr pos:start="104:21" pos:end="104:29"><call pos:start="104:21" pos:end="104:29"><name pos:start="104:21" pos:end="104:24">turn</name><argument_list pos:start="104:25" pos:end="104:29">(<argument pos:start="104:26" pos:end="104:26"><expr pos:start="104:26" pos:end="104:26"><name pos:start="104:26" pos:end="104:26">i</name></expr></argument>,<argument pos:start="104:28" pos:end="104:28"><expr pos:start="104:28" pos:end="104:28"><name pos:start="104:28" pos:end="104:28">j</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="104:31" pos:end="104:41"><expr pos:start="104:31" pos:end="104:41"><call pos:start="104:31" pos:end="104:41"><name pos:start="104:31" pos:end="104:34">turn</name><argument_list pos:start="104:35" pos:end="104:41">(<argument pos:start="104:36" pos:end="104:36"><expr pos:start="104:36" pos:end="104:36"><name pos:start="104:36" pos:end="104:36">i</name></expr></argument>,<argument pos:start="104:38" pos:end="104:40"><expr pos:start="104:38" pos:end="104:40"><name pos:start="104:38" pos:end="104:38">j</name><operator pos:start="104:39" pos:end="104:39">+</operator><literal type="number" pos:start="104:40" pos:end="104:40">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>                   
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="106:13" pos:end="106:45"><if pos:start="106:13" pos:end="106:45">if <condition pos:start="106:16" pos:end="106:30">(<expr pos:start="106:17" pos:end="106:29"><name pos:start="106:17" pos:end="106:24"><name pos:start="106:17" pos:end="106:18">mp</name><index pos:start="106:19" pos:end="106:21">[<expr pos:start="106:20" pos:end="106:20"><name pos:start="106:20" pos:end="106:20">i</name></expr>]</index><index pos:start="106:22" pos:end="106:24">[<expr pos:start="106:23" pos:end="106:23"><name pos:start="106:23" pos:end="106:23">j</name></expr>]</index></name><operator pos:start="106:25" pos:end="106:26">==</operator><literal type="char" pos:start="106:27" pos:end="106:29">'*'</literal></expr>)</condition><block type="pseudo" pos:start="106:32" pos:end="106:45"><block_content pos:start="106:32" pos:end="106:45"> <expr_stmt pos:start="106:32" pos:end="106:45"><expr pos:start="106:32" pos:end="106:44"><name pos:start="106:32" pos:end="106:38"><name pos:start="106:32" pos:end="106:32">s</name><index pos:start="106:33" pos:end="106:38">[<expr pos:start="106:34" pos:end="106:37"><operator pos:start="106:34" pos:end="106:35">++</operator><name pos:start="106:36" pos:end="106:37">tt</name></expr>]</index></name><operator pos:start="106:39" pos:end="106:39">=</operator><block pos:start="106:40" pos:end="106:44">{<expr pos:start="106:41" pos:end="106:41"><name pos:start="106:41" pos:end="106:41">i</name></expr>,<expr pos:start="106:43" pos:end="106:43"><name pos:start="106:43" pos:end="106:43">j</name></expr>}</block></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="109:5" pos:end="114:5">for <control pos:start="109:9" pos:end="109:27">(<init pos:start="109:10" pos:end="109:17"><decl pos:start="109:10" pos:end="109:16"><type pos:start="109:10" pos:end="109:12"><name pos:start="109:10" pos:end="109:12">int</name></type> <name pos:start="109:14" pos:end="109:14">i</name><init pos:start="109:15" pos:end="109:16">=<expr pos:start="109:16" pos:end="109:16"><literal type="number" pos:start="109:16" pos:end="109:16">1</literal></expr></init></decl>;</init><condition pos:start="109:18" pos:end="109:23"><expr pos:start="109:18" pos:end="109:22"><name pos:start="109:18" pos:end="109:18">i</name><operator pos:start="109:19" pos:end="109:20">&lt;=</operator><name pos:start="109:21" pos:end="109:22">tt</name></expr>;</condition><incr pos:start="109:24" pos:end="109:26"><expr pos:start="109:24" pos:end="109:26"><operator pos:start="109:24" pos:end="109:25">++</operator><name pos:start="109:26" pos:end="109:26">i</name></expr></incr>)</control><block pos:start="109:28" pos:end="114:5">{<block_content pos:start="110:9" pos:end="112:47">
        <decl_stmt pos:start="110:9" pos:end="110:16"><decl pos:start="110:9" pos:end="110:13"><type pos:start="110:9" pos:end="110:11"><name pos:start="110:9" pos:end="110:11">int</name></type> <name pos:start="110:13" pos:end="110:13">x</name></decl>,<decl pos:start="110:15" pos:end="110:15"><type ref="prev" pos:start="110:9" pos:end="110:11"/><name pos:start="110:15" pos:end="110:15">y</name></decl>;</decl_stmt>
        <expr_stmt pos:start="111:9" pos:end="111:28"><expr pos:start="111:9" pos:end="111:27"><call pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:13">scanf</name><argument_list pos:start="111:14" pos:end="111:27">(<argument pos:start="111:15" pos:end="111:20"><expr pos:start="111:15" pos:end="111:20"><literal type="string" pos:start="111:15" pos:end="111:20">"%d%d"</literal></expr></argument>,<argument pos:start="111:22" pos:end="111:23"><expr pos:start="111:22" pos:end="111:23"><operator pos:start="111:22" pos:end="111:22">&amp;</operator><name pos:start="111:23" pos:end="111:23">x</name></expr></argument>,<argument pos:start="111:25" pos:end="111:26"><expr pos:start="111:25" pos:end="111:26"><operator pos:start="111:25" pos:end="111:25">&amp;</operator><name pos:start="111:26" pos:end="111:26">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="112:9" pos:end="112:47"><expr pos:start="112:9" pos:end="112:46"><call pos:start="112:9" pos:end="112:46"><name pos:start="112:9" pos:end="112:11">add</name><argument_list pos:start="112:12" pos:end="112:46">(<argument pos:start="112:13" pos:end="112:31"><expr pos:start="112:13" pos:end="112:31"><call pos:start="112:13" pos:end="112:31"><name pos:start="112:13" pos:end="112:16">turn</name><argument_list pos:start="112:17" pos:end="112:31">(<argument pos:start="112:18" pos:end="112:23"><expr pos:start="112:18" pos:end="112:23"><name pos:start="112:18" pos:end="112:21"><name pos:start="112:18" pos:end="112:18">s</name><index pos:start="112:19" pos:end="112:21">[<expr pos:start="112:20" pos:end="112:20"><name pos:start="112:20" pos:end="112:20">i</name></expr>]</index></name><operator pos:start="112:22" pos:end="112:22">.</operator><name pos:start="112:23" pos:end="112:23">x</name></expr></argument>,<argument pos:start="112:25" pos:end="112:30"><expr pos:start="112:25" pos:end="112:30"><name pos:start="112:25" pos:end="112:28"><name pos:start="112:25" pos:end="112:25">s</name><index pos:start="112:26" pos:end="112:28">[<expr pos:start="112:27" pos:end="112:27"><name pos:start="112:27" pos:end="112:27">i</name></expr>]</index></name><operator pos:start="112:29" pos:end="112:29">.</operator><name pos:start="112:30" pos:end="112:30">y</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="112:33" pos:end="112:45"><expr pos:start="112:33" pos:end="112:45"><call pos:start="112:33" pos:end="112:45"><name pos:start="112:33" pos:end="112:36">turn</name><argument_list pos:start="112:37" pos:end="112:45">(<argument pos:start="112:38" pos:end="112:40"><expr pos:start="112:38" pos:end="112:40"><name pos:start="112:38" pos:end="112:38">x</name><operator pos:start="112:39" pos:end="112:39">+</operator><literal type="number" pos:start="112:40" pos:end="112:40">1</literal></expr></argument>,<argument pos:start="112:42" pos:end="112:44"><expr pos:start="112:42" pos:end="112:44"><name pos:start="112:42" pos:end="112:42">y</name><operator pos:start="112:43" pos:end="112:43">+</operator><literal type="number" pos:start="112:44" pos:end="112:44">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
    </block_content>}</block></for>
    <for pos:start="115:5" pos:end="115:51">for <control pos:start="115:9" pos:end="115:28">(<init pos:start="115:10" pos:end="115:17"><decl pos:start="115:10" pos:end="115:16"><type pos:start="115:10" pos:end="115:12"><name pos:start="115:10" pos:end="115:12">int</name></type> <name pos:start="115:14" pos:end="115:14">i</name><init pos:start="115:15" pos:end="115:16">=<expr pos:start="115:16" pos:end="115:16"><literal type="number" pos:start="115:16" pos:end="115:16">1</literal></expr></init></decl>;</init><condition pos:start="115:18" pos:end="115:24"><expr pos:start="115:18" pos:end="115:23"><name pos:start="115:18" pos:end="115:18">i</name><operator pos:start="115:19" pos:end="115:20">&lt;=</operator><name pos:start="115:21" pos:end="115:21">n</name><operator pos:start="115:22" pos:end="115:22">*</operator><name pos:start="115:23" pos:end="115:23">m</name></expr>;</condition><incr pos:start="115:25" pos:end="115:27"><expr pos:start="115:25" pos:end="115:27"><operator pos:start="115:25" pos:end="115:26">++</operator><name pos:start="115:27" pos:end="115:27">i</name></expr></incr>)</control><block type="pseudo" pos:start="115:30" pos:end="115:51"><block_content pos:start="115:30" pos:end="115:51"> <if_stmt pos:start="115:30" pos:end="115:51"><if pos:start="115:30" pos:end="115:51">if <condition pos:start="115:33" pos:end="115:41">(<expr pos:start="115:34" pos:end="115:40"><operator pos:start="115:34" pos:end="115:34">!</operator><name pos:start="115:35" pos:end="115:40"><name pos:start="115:35" pos:end="115:37">dfn</name><index pos:start="115:38" pos:end="115:40">[<expr pos:start="115:39" pos:end="115:39"><name pos:start="115:39" pos:end="115:39">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="115:42" pos:end="115:51"><block_content pos:start="115:42" pos:end="115:51"><expr_stmt pos:start="115:42" pos:end="115:51"><expr pos:start="115:42" pos:end="115:50"><call pos:start="115:42" pos:end="115:50"><name pos:start="115:42" pos:end="115:47">tarjan</name><argument_list pos:start="115:48" pos:end="115:50">(<argument pos:start="115:49" pos:end="115:49"><expr pos:start="115:49" pos:end="115:49"><name pos:start="115:49" pos:end="115:49">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for><expr_stmt pos:start="115:52" pos:end="115:56"><expr pos:start="115:52" pos:end="115:55"><call pos:start="115:52" pos:end="115:55"><name pos:start="115:52" pos:end="115:53">Do</name><argument_list pos:start="115:54" pos:end="115:55">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="116:5" pos:end="116:12"><expr pos:start="116:5" pos:end="116:11"><call pos:start="116:5" pos:end="116:11"><name pos:start="116:5" pos:end="116:7">dfs</name><argument_list pos:start="116:8" pos:end="116:11">(<argument pos:start="116:9" pos:end="116:10"><expr pos:start="116:9" pos:end="116:10"><name pos:start="116:9" pos:end="116:10">be</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    



    <expr_stmt pos:start="121:5" pos:end="121:23"><expr pos:start="121:5" pos:end="121:22"><name pos:start="121:5" pos:end="121:8">cout</name><operator pos:start="121:9" pos:end="121:10">&lt;&lt;</operator><name pos:start="121:11" pos:end="121:16"><name pos:start="121:11" pos:end="121:12">dp</name><index pos:start="121:13" pos:end="121:16">[<expr pos:start="121:14" pos:end="121:15"><name pos:start="121:14" pos:end="121:15">be</name></expr>]</index></name><operator pos:start="121:17" pos:end="121:18">&lt;&lt;</operator><name pos:start="121:19" pos:end="121:22">endl</name></expr>;</expr_stmt>
    
    
    <return pos:start="124:5" pos:end="124:13">return <expr pos:start="124:12" pos:end="124:12"><literal type="number" pos:start="124:12" pos:end="124:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
