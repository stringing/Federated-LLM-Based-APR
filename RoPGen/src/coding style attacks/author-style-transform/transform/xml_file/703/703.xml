<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/703/703.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:18">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="13:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:8">main</name><parameter_list pos:start="3:9" pos:end="3:10">()</parameter_list><block pos:start="3:11" pos:end="13:1">{<block_content pos:start="4:5" pos:end="12:13">
    <decl_stmt pos:start="4:5" pos:end="4:19"><decl pos:start="4:5" pos:end="4:12"><type pos:start="4:5" pos:end="4:10"><name pos:start="4:5" pos:end="4:10">double</name></type> <name pos:start="4:12" pos:end="4:12">a</name></decl>, <decl pos:start="4:15" pos:end="4:15"><type ref="prev" pos:start="4:5" pos:end="4:10"/><name pos:start="4:15" pos:end="4:15">b</name></decl>, <decl pos:start="4:18" pos:end="4:18"><type ref="prev" pos:start="4:5" pos:end="4:10"/><name pos:start="4:18" pos:end="4:18">n</name></decl>;</decl_stmt>   
    <expr_stmt pos:start="5:5" pos:end="5:17"><expr pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:7">cin</name><operator pos:start="5:8" pos:end="5:9">&gt;&gt;</operator><name pos:start="5:10" pos:end="5:10">a</name><operator pos:start="5:11" pos:end="5:12">&gt;&gt;</operator><name pos:start="5:13" pos:end="5:13">b</name><operator pos:start="5:14" pos:end="5:15">&gt;&gt;</operator><name pos:start="5:16" pos:end="5:16">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:31"><decl pos:start="6:5" pos:end="6:30"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">double</name></type> <name pos:start="6:12" pos:end="6:14">min</name><init pos:start="6:15" pos:end="6:30">=<expr pos:start="6:16" pos:end="6:30"><operator pos:start="6:16" pos:end="6:16">(</operator><name pos:start="6:17" pos:end="6:17">n</name><operator pos:start="6:18" pos:end="6:18">*</operator><name pos:start="6:19" pos:end="6:19">a</name><operator pos:start="6:20" pos:end="6:20">-</operator><literal type="number" pos:start="6:21" pos:end="6:23">600</literal><operator pos:start="6:24" pos:end="6:24">)</operator><operator pos:start="6:25" pos:end="6:25">/</operator><operator pos:start="6:26" pos:end="6:26">(</operator><name pos:start="6:27" pos:end="6:27">a</name><operator pos:start="6:28" pos:end="6:28">-</operator><name pos:start="6:29" pos:end="6:29">b</name><operator pos:start="6:30" pos:end="6:30">)</operator></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">minn</name><init pos:start="7:13" pos:end="7:16">=<expr pos:start="7:14" pos:end="7:16"><name pos:start="7:14" pos:end="7:16">min</name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="8:5" pos:end="10:5"><if pos:start="8:5" pos:end="10:5">if<condition pos:start="8:7" pos:end="8:17">(<expr pos:start="8:8" pos:end="8:16"><name pos:start="8:8" pos:end="8:11">minn</name><operator pos:start="8:12" pos:end="8:13">!=</operator><name pos:start="8:14" pos:end="8:16">min</name></expr>)</condition><block pos:start="8:18" pos:end="10:5">{<block_content pos:start="9:9" pos:end="9:15">
        <expr_stmt pos:start="9:9" pos:end="9:15"><expr pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:12">minn</name><operator pos:start="9:13" pos:end="9:14">++</operator></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:8">cout</name><operator pos:start="11:9" pos:end="11:10">&lt;&lt;</operator><name pos:start="11:11" pos:end="11:14">minn</name><operator pos:start="11:15" pos:end="11:16">&lt;&lt;</operator><name pos:start="11:17" pos:end="11:20">endl</name></expr>;</expr_stmt>
    <return pos:start="12:5" pos:end="12:13">return <expr pos:start="12:12" pos:end="12:12"><literal type="number" pos:start="12:12" pos:end="12:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
