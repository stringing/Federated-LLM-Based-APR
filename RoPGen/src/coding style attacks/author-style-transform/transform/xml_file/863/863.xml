<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/863/863.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:24">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:24">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<function pos:start="3:1" pos:end="21:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">cmp</name> <parameter_list pos:start="3:9" pos:end="3:22">(<parameter pos:start="3:10" pos:end="3:14"><decl pos:start="3:10" pos:end="3:14"><type pos:start="3:10" pos:end="3:14"><name pos:start="3:10" pos:end="3:12">int</name></type> <name pos:start="3:14" pos:end="3:14">a</name></decl></parameter>, <parameter pos:start="3:17" pos:end="3:21"><decl pos:start="3:17" pos:end="3:21"><type pos:start="3:17" pos:end="3:21"><name pos:start="3:17" pos:end="3:19">int</name></type> <name pos:start="3:21" pos:end="3:21">b</name></decl></parameter>)</parameter_list> <block pos:start="3:24" pos:end="21:1">{<block_content pos:start="4:5" pos:end="20:5">
    <decl_stmt pos:start="4:5" pos:end="4:27"><decl pos:start="4:5" pos:end="4:16"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:12">suma</name> <init pos:start="4:14" pos:end="4:16">= <expr pos:start="4:16" pos:end="4:16"><literal type="number" pos:start="4:16" pos:end="4:16">0</literal></expr></init></decl>, <decl pos:start="4:19" pos:end="4:26"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:19" pos:end="4:22">sumb</name> <init pos:start="4:24" pos:end="4:26">= <expr pos:start="4:26" pos:end="4:26"><literal type="number" pos:start="4:26" pos:end="4:26">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">aa</name> <init pos:start="5:12" pos:end="5:14">= <expr pos:start="5:14" pos:end="5:14"><name pos:start="5:14" pos:end="5:14">a</name></expr></init></decl>, <decl pos:start="5:17" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:18">bb</name> <init pos:start="5:20" pos:end="5:22">= <expr pos:start="5:22" pos:end="5:22"><name pos:start="5:22" pos:end="5:22">b</name></expr></init></decl>;</decl_stmt>
    <while pos:start="6:5" pos:end="9:5">while <condition pos:start="6:11" pos:end="6:18">(<expr pos:start="6:12" pos:end="6:17"><name pos:start="6:12" pos:end="6:13">aa</name> <operator pos:start="6:15" pos:end="6:15">&gt;</operator> <literal type="number" pos:start="6:17" pos:end="6:17">0</literal></expr>)</condition> <block pos:start="6:20" pos:end="9:5">{<block_content pos:start="7:9" pos:end="8:17">
        <expr_stmt pos:start="7:9" pos:end="7:24"><expr pos:start="7:9" pos:end="7:23"><name pos:start="7:9" pos:end="7:12">suma</name> <operator pos:start="7:14" pos:end="7:15">+=</operator> <name pos:start="7:17" pos:end="7:18">aa</name> <operator pos:start="7:20" pos:end="7:20">%</operator> <literal type="number" pos:start="7:22" pos:end="7:23">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:17"><expr pos:start="8:9" pos:end="8:16"><name pos:start="8:9" pos:end="8:10">aa</name> <operator pos:start="8:12" pos:end="8:13">/=</operator> <literal type="number" pos:start="8:15" pos:end="8:16">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <while pos:start="10:5" pos:end="13:5">while <condition pos:start="10:11" pos:end="10:18">(<expr pos:start="10:12" pos:end="10:17"><name pos:start="10:12" pos:end="10:13">bb</name> <operator pos:start="10:15" pos:end="10:15">&gt;</operator> <literal type="number" pos:start="10:17" pos:end="10:17">0</literal></expr>)</condition> <block pos:start="10:20" pos:end="13:5">{<block_content pos:start="11:9" pos:end="12:17">
        <expr_stmt pos:start="11:9" pos:end="11:24"><expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:12">sumb</name> <operator pos:start="11:14" pos:end="11:15">+=</operator> <name pos:start="11:17" pos:end="11:18">bb</name> <operator pos:start="11:20" pos:end="11:20">%</operator> <literal type="number" pos:start="11:22" pos:end="11:23">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:17"><expr pos:start="12:9" pos:end="12:16"><name pos:start="12:9" pos:end="12:10">bb</name> <operator pos:start="12:12" pos:end="12:13">/=</operator> <literal type="number" pos:start="12:15" pos:end="12:16">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <if_stmt pos:start="14:5" pos:end="20:5"><if pos:start="14:5" pos:end="16:5">if <condition pos:start="14:8" pos:end="14:20">(<expr pos:start="14:9" pos:end="14:19"><name pos:start="14:9" pos:end="14:12">suma</name> <operator pos:start="14:14" pos:end="14:14">&lt;</operator> <name pos:start="14:16" pos:end="14:19">sumb</name></expr>)</condition> <block pos:start="14:22" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:21">
        <return pos:start="15:9" pos:end="15:21">return <expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:16">a</name> <operator pos:start="15:18" pos:end="15:18">&lt;</operator> <name pos:start="15:20" pos:end="15:20">b</name></expr>;</return>
    </block_content>}</block></if> <if type="elseif" pos:start="16:7" pos:end="18:5">else if <condition pos:start="16:15" pos:end="16:27">(<expr pos:start="16:16" pos:end="16:26"><name pos:start="16:16" pos:end="16:19">suma</name> <operator pos:start="16:21" pos:end="16:21">&gt;</operator> <name pos:start="16:23" pos:end="16:26">sumb</name></expr>)</condition> <block pos:start="16:29" pos:end="18:5">{<block_content pos:start="17:9" pos:end="17:21">
        <return pos:start="17:9" pos:end="17:21">return <expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:16">a</name> <operator pos:start="17:18" pos:end="17:18">&gt;</operator> <name pos:start="17:20" pos:end="17:20">b</name></expr>;</return>
    </block_content>}</block></if> <else pos:start="18:7" pos:end="20:5">else <block pos:start="18:12" pos:end="20:5">{<block_content pos:start="19:9" pos:end="19:21">
        <return pos:start="19:9" pos:end="19:21">return <expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:16">a</name> <operator pos:start="19:18" pos:end="19:18">&lt;</operator> <name pos:start="19:20" pos:end="19:20">b</name></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<function pos:start="22:1" pos:end="34:1"><type pos:start="22:1" pos:end="22:3"><name pos:start="22:1" pos:end="22:3">int</name></type> <name pos:start="22:5" pos:end="22:8">main</name> <parameter_list pos:start="22:10" pos:end="22:11">()</parameter_list> <block pos:start="22:13" pos:end="34:1">{<block_content pos:start="23:5" pos:end="33:13">
    <decl_stmt pos:start="23:5" pos:end="23:10"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:13"><expr pos:start="24:5" pos:end="24:12"><name pos:start="24:5" pos:end="24:7">cin</name> <operator pos:start="24:9" pos:end="24:10">&gt;&gt;</operator> <name pos:start="24:12" pos:end="24:12">n</name></expr>;</expr_stmt>
    <decl_stmt pos:start="25:5" pos:end="25:15"><decl pos:start="25:5" pos:end="25:14"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:9">x</name><index pos:start="25:10" pos:end="25:14">[<expr pos:start="25:11" pos:end="25:13"><literal type="number" pos:start="25:11" pos:end="25:13">100</literal></expr>]</index></name></decl>;</decl_stmt>
    <for pos:start="26:5" pos:end="28:5">for <control pos:start="26:9" pos:end="26:31">(<init pos:start="26:10" pos:end="26:19"><decl pos:start="26:10" pos:end="26:18"><type pos:start="26:10" pos:end="26:12"><name pos:start="26:10" pos:end="26:12">int</name></type> <name pos:start="26:14" pos:end="26:14">i</name> <init pos:start="26:16" pos:end="26:18">= <expr pos:start="26:18" pos:end="26:18"><literal type="number" pos:start="26:18" pos:end="26:18">0</literal></expr></init></decl>;</init> <condition pos:start="26:21" pos:end="26:26"><expr pos:start="26:21" pos:end="26:25"><name pos:start="26:21" pos:end="26:21">i</name> <operator pos:start="26:23" pos:end="26:23">&lt;</operator> <name pos:start="26:25" pos:end="26:25">n</name></expr>;</condition> <incr pos:start="26:28" pos:end="26:30"><expr pos:start="26:28" pos:end="26:30"><name pos:start="26:28" pos:end="26:28">i</name><operator pos:start="26:29" pos:end="26:30">++</operator></expr></incr>)</control> <block pos:start="26:33" pos:end="28:5">{<block_content pos:start="27:9" pos:end="27:20">
        <expr_stmt pos:start="27:9" pos:end="27:20"><expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:11">cin</name> <operator pos:start="27:13" pos:end="27:14">&gt;&gt;</operator> <name pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:16">x</name><index pos:start="27:17" pos:end="27:19">[<expr pos:start="27:18" pos:end="27:18"><name pos:start="27:18" pos:end="27:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><call pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:8">sort</name><argument_list pos:start="29:9" pos:end="29:23">(<argument pos:start="29:10" pos:end="29:10"><expr pos:start="29:10" pos:end="29:10"><name pos:start="29:10" pos:end="29:10">x</name></expr></argument>, <argument pos:start="29:13" pos:end="29:17"><expr pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:13">x</name> <operator pos:start="29:15" pos:end="29:15">+</operator> <name pos:start="29:17" pos:end="29:17">n</name></expr></argument>, <argument pos:start="29:20" pos:end="29:22"><expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="30:5" pos:end="32:5">for <control pos:start="30:9" pos:end="30:31">(<init pos:start="30:10" pos:end="30:19"><decl pos:start="30:10" pos:end="30:18"><type pos:start="30:10" pos:end="30:12"><name pos:start="30:10" pos:end="30:12">int</name></type> <name pos:start="30:14" pos:end="30:14">i</name> <init pos:start="30:16" pos:end="30:18">= <expr pos:start="30:18" pos:end="30:18"><literal type="number" pos:start="30:18" pos:end="30:18">0</literal></expr></init></decl>;</init> <condition pos:start="30:21" pos:end="30:26"><expr pos:start="30:21" pos:end="30:25"><name pos:start="30:21" pos:end="30:21">i</name> <operator pos:start="30:23" pos:end="30:23">&lt;</operator> <name pos:start="30:25" pos:end="30:25">n</name></expr>;</condition> <incr pos:start="30:28" pos:end="30:30"><expr pos:start="30:28" pos:end="30:30"><name pos:start="30:28" pos:end="30:28">i</name><operator pos:start="30:29" pos:end="30:30">++</operator></expr></incr>)</control> <block pos:start="30:33" pos:end="32:5">{<block_content pos:start="31:9" pos:end="31:28">
        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:12">cout</name> <operator pos:start="31:14" pos:end="31:15">&lt;&lt;</operator> <name pos:start="31:17" pos:end="31:20"><name pos:start="31:17" pos:end="31:17">x</name><index pos:start="31:18" pos:end="31:20">[<expr pos:start="31:19" pos:end="31:19"><name pos:start="31:19" pos:end="31:19">i</name></expr>]</index></name> <operator pos:start="31:22" pos:end="31:23">&lt;&lt;</operator> <literal type="string" pos:start="31:25" pos:end="31:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
