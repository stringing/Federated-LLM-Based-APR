<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/382/382.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:20">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:20">&lt;algorithm&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<decl_stmt pos:start="4:1" pos:end="4:13"><decl pos:start="4:1" pos:end="4:12"><type pos:start="4:1" pos:end="4:3"><name pos:start="4:1" pos:end="4:3">int</name></type> <name pos:start="4:5" pos:end="4:12"><name pos:start="4:5" pos:end="4:5">a</name><index pos:start="4:6" pos:end="4:12">[<expr pos:start="4:7" pos:end="4:11"><literal type="number" pos:start="4:7" pos:end="4:11">10001</literal></expr>]</index></name></decl>;</decl_stmt>
<function pos:start="5:1" pos:end="13:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:7">sum</name> <parameter_list pos:start="5:9" pos:end="5:15">(<parameter pos:start="5:10" pos:end="5:14"><decl pos:start="5:10" pos:end="5:14"><type pos:start="5:10" pos:end="5:12"><name pos:start="5:10" pos:end="5:12">int</name></type> <name pos:start="5:14" pos:end="5:14">x</name></decl></parameter>)</parameter_list> <block pos:start="5:17" pos:end="13:1">{<block_content pos:start="6:5" pos:end="12:15">
    <decl_stmt pos:start="6:5" pos:end="6:16"><decl pos:start="6:5" pos:end="6:15"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">ans</name> <init pos:start="6:13" pos:end="6:15">= <expr pos:start="6:15" pos:end="6:15"><literal type="number" pos:start="6:15" pos:end="6:15">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="7:5" pos:end="11:5">while<condition pos:start="7:10" pos:end="7:12">(<expr pos:start="7:11" pos:end="7:11"><name pos:start="7:11" pos:end="7:11">x</name></expr>)</condition>
    <block pos:start="8:5" pos:end="11:5">{<block_content pos:start="9:9" pos:end="10:14">
        <expr_stmt pos:start="9:9" pos:end="9:18"><expr pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:11">ans</name><operator pos:start="9:12" pos:end="9:13">+=</operator><name pos:start="9:14" pos:end="9:14">x</name><operator pos:start="9:15" pos:end="9:15">%</operator><literal type="number" pos:start="9:16" pos:end="9:17">10</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:14"><expr pos:start="10:9" pos:end="10:13"><name pos:start="10:9" pos:end="10:9">x</name><operator pos:start="10:10" pos:end="10:11">/=</operator><literal type="number" pos:start="10:12" pos:end="10:13">10</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="12:5" pos:end="12:15">return <expr pos:start="12:12" pos:end="12:14"><name pos:start="12:12" pos:end="12:14">ans</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="14:1" pos:end="24:1"><type pos:start="14:1" pos:end="14:4"><name pos:start="14:1" pos:end="14:4">bool</name></type> <name pos:start="14:6" pos:end="14:8">cmp</name> <parameter_list pos:start="14:10" pos:end="14:23">(<parameter pos:start="14:11" pos:end="14:15"><decl pos:start="14:11" pos:end="14:15"><type pos:start="14:11" pos:end="14:15"><name pos:start="14:11" pos:end="14:13">int</name></type> <name pos:start="14:15" pos:end="14:15">x</name></decl></parameter>, <parameter pos:start="14:18" pos:end="14:22"><decl pos:start="14:18" pos:end="14:22"><type pos:start="14:18" pos:end="14:22"><name pos:start="14:18" pos:end="14:20">int</name></type> <name pos:start="14:22" pos:end="14:22">y</name></decl></parameter>)</parameter_list> <block pos:start="14:25" pos:end="24:1">{<block_content pos:start="15:5" pos:end="23:15">
    <if_stmt pos:start="15:5" pos:end="18:5"><if pos:start="15:5" pos:end="18:5">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><call pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:11">sum</name><argument_list pos:start="15:12" pos:end="15:14">(<argument pos:start="15:13" pos:end="15:13"><expr pos:start="15:13" pos:end="15:13"><name pos:start="15:13" pos:end="15:13">x</name></expr></argument>)</argument_list></call><operator pos:start="15:15" pos:end="15:16">!=</operator><call pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:19">sum</name><argument_list pos:start="15:20" pos:end="15:22">(<argument pos:start="15:21" pos:end="15:21"><expr pos:start="15:21" pos:end="15:21"><name pos:start="15:21" pos:end="15:21">y</name></expr></argument>)</argument_list></call></expr>)</condition>
    <block pos:start="16:5" pos:end="18:5">{<block_content pos:start="17:9" pos:end="17:29">
        <return pos:start="17:9" pos:end="17:29">return <expr pos:start="17:16" pos:end="17:28"><call pos:start="17:16" pos:end="17:21"><name pos:start="17:16" pos:end="17:18">sum</name><argument_list pos:start="17:19" pos:end="17:21">(<argument pos:start="17:20" pos:end="17:20"><expr pos:start="17:20" pos:end="17:20"><name pos:start="17:20" pos:end="17:20">x</name></expr></argument>)</argument_list></call><operator pos:start="17:22" pos:end="17:22">&lt;</operator><call pos:start="17:23" pos:end="17:28"><name pos:start="17:23" pos:end="17:25">sum</name><argument_list pos:start="17:26" pos:end="17:28">(<argument pos:start="17:27" pos:end="17:27"><expr pos:start="17:27" pos:end="17:27"><name pos:start="17:27" pos:end="17:27">y</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="19:5" pos:end="22:5"><if pos:start="19:5" pos:end="22:5">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:9">x</name><operator pos:start="19:10" pos:end="19:10">&gt;</operator><name pos:start="19:11" pos:end="19:11">y</name></expr>)</condition>
    <block pos:start="20:5" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:19">
        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:16">x</name><operator pos:start="21:17" pos:end="21:17">&gt;</operator><name pos:start="21:18" pos:end="21:18">y</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="23:5" pos:end="23:15">return <expr pos:start="23:12" pos:end="23:14"><name pos:start="23:12" pos:end="23:12">x</name><operator pos:start="23:13" pos:end="23:13">&lt;</operator><name pos:start="23:14" pos:end="23:14">y</name></expr>;</return>
</block_content>}</block></function>
<function pos:start="25:1" pos:end="36:1"><type pos:start="25:1" pos:end="25:3"><name pos:start="25:1" pos:end="25:3">int</name></type> <name pos:start="25:5" pos:end="25:8">main</name><parameter_list pos:start="25:9" pos:end="25:10">()</parameter_list> <block pos:start="25:12" pos:end="36:1">{<block_content pos:start="26:5" pos:end="35:13">
    <decl_stmt pos:start="26:5" pos:end="26:10"><decl pos:start="26:5" pos:end="26:9"><type pos:start="26:5" pos:end="26:7"><name pos:start="26:5" pos:end="26:7">int</name></type> <name pos:start="26:9" pos:end="26:9">n</name></decl>;</decl_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:13"><expr pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:7">cin</name> <operator pos:start="27:9" pos:end="27:10">&gt;&gt;</operator> <name pos:start="27:12" pos:end="27:12">n</name></expr>;</expr_stmt>
    <for pos:start="28:5" pos:end="30:5">for <control pos:start="28:9" pos:end="28:31">(<init pos:start="28:10" pos:end="28:19"><decl pos:start="28:10" pos:end="28:18"><type pos:start="28:10" pos:end="28:12"><name pos:start="28:10" pos:end="28:12">int</name></type> <name pos:start="28:14" pos:end="28:14">i</name> <init pos:start="28:16" pos:end="28:18">= <expr pos:start="28:18" pos:end="28:18"><literal type="number" pos:start="28:18" pos:end="28:18">0</literal></expr></init></decl>;</init> <condition pos:start="28:21" pos:end="28:26"><expr pos:start="28:21" pos:end="28:25"><name pos:start="28:21" pos:end="28:21">i</name> <operator pos:start="28:23" pos:end="28:23">&lt;</operator> <name pos:start="28:25" pos:end="28:25">n</name></expr>;</condition> <incr pos:start="28:28" pos:end="28:30"><expr pos:start="28:28" pos:end="28:30"><name pos:start="28:28" pos:end="28:28">i</name><operator pos:start="28:29" pos:end="28:30">++</operator></expr></incr>)</control> <block pos:start="28:33" pos:end="30:5">{<block_content pos:start="29:9" pos:end="29:20">
        <expr_stmt pos:start="29:9" pos:end="29:20"><expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:11">cin</name> <operator pos:start="29:13" pos:end="29:14">&gt;&gt;</operator> <name pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:16">a</name><index pos:start="29:17" pos:end="29:19">[<expr pos:start="29:18" pos:end="29:18"><name pos:start="29:18" pos:end="29:18">i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><call pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:8">sort</name><argument_list pos:start="31:9" pos:end="31:23">(<argument pos:start="31:10" pos:end="31:10"><expr pos:start="31:10" pos:end="31:10"><name pos:start="31:10" pos:end="31:10">a</name></expr></argument>, <argument pos:start="31:13" pos:end="31:17"><expr pos:start="31:13" pos:end="31:17"><name pos:start="31:13" pos:end="31:13">a</name> <operator pos:start="31:15" pos:end="31:15">+</operator> <name pos:start="31:17" pos:end="31:17">n</name></expr></argument>, <argument pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="32:5" pos:end="34:5">for <control pos:start="32:9" pos:end="32:31">(<init pos:start="32:10" pos:end="32:19"><decl pos:start="32:10" pos:end="32:18"><type pos:start="32:10" pos:end="32:12"><name pos:start="32:10" pos:end="32:12">int</name></type> <name pos:start="32:14" pos:end="32:14">i</name> <init pos:start="32:16" pos:end="32:18">= <expr pos:start="32:18" pos:end="32:18"><literal type="number" pos:start="32:18" pos:end="32:18">0</literal></expr></init></decl>;</init> <condition pos:start="32:21" pos:end="32:26"><expr pos:start="32:21" pos:end="32:25"><name pos:start="32:21" pos:end="32:21">i</name> <operator pos:start="32:23" pos:end="32:23">&lt;</operator> <name pos:start="32:25" pos:end="32:25">n</name></expr>;</condition> <incr pos:start="32:28" pos:end="32:30"><expr pos:start="32:28" pos:end="32:30"><name pos:start="32:28" pos:end="32:28">i</name><operator pos:start="32:29" pos:end="32:30">++</operator></expr></incr>)</control> <block pos:start="32:33" pos:end="34:5">{<block_content pos:start="33:9" pos:end="33:28">
        <expr_stmt pos:start="33:9" pos:end="33:28"><expr pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:12">cout</name> <operator pos:start="33:14" pos:end="33:15">&lt;&lt;</operator> <name pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:17">a</name><index pos:start="33:18" pos:end="33:20">[<expr pos:start="33:19" pos:end="33:19"><name pos:start="33:19" pos:end="33:19">i</name></expr>]</index></name> <operator pos:start="33:22" pos:end="33:23">&lt;&lt;</operator> <literal type="string" pos:start="33:25" pos:end="33:27">" "</literal></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>
</block_content>}</block></function>

</unit>
