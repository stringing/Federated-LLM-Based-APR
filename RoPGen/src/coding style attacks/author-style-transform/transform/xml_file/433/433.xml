<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/433/433.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:25"><decl pos:start="3:1" pos:end="3:11"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">ans</name><init pos:start="3:8" pos:end="3:11">=<expr pos:start="3:9" pos:end="3:11"><literal type="number" pos:start="3:9" pos:end="3:11">1e9</literal></expr></init></decl>,<decl pos:start="3:13" pos:end="3:17"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:13" pos:end="3:17"><name pos:start="3:13" pos:end="3:13">a</name><index pos:start="3:14" pos:end="3:17">[<expr pos:start="3:15" pos:end="3:16"><literal type="number" pos:start="3:15" pos:end="3:16">15</literal></expr>]</index></name></decl>,<decl pos:start="3:19" pos:end="3:19"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:19" pos:end="3:19">n</name></decl>,<decl pos:start="3:21" pos:end="3:21"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:21" pos:end="3:21">l</name></decl>,<decl pos:start="3:23" pos:end="3:24"><type ref="prev" pos:start="3:1" pos:end="3:3"/><name pos:start="3:23" pos:end="3:24">ll</name></decl>;</decl_stmt>
<function pos:start="4:1" pos:end="12:1"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">void</name></type> <name pos:start="4:6" pos:end="4:8">dfs</name><parameter_list pos:start="4:9" pos:end="4:21">(<parameter pos:start="4:10" pos:end="4:14"><decl pos:start="4:10" pos:end="4:14"><type pos:start="4:10" pos:end="4:14"><name pos:start="4:10" pos:end="4:12">int</name></type> <name pos:start="4:14" pos:end="4:14">i</name></decl></parameter>,<parameter pos:start="4:16" pos:end="4:20"><decl pos:start="4:16" pos:end="4:20"><type pos:start="4:16" pos:end="4:20"><name pos:start="4:16" pos:end="4:18">int</name></type> <name pos:start="4:20" pos:end="4:20">s</name></decl></parameter>)</parameter_list><block pos:start="4:22" pos:end="12:1">{<block_content pos:start="5:5" pos:end="11:15">
    <expr_stmt pos:start="5:5" pos:end="5:18"><expr pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:8">cout</name><operator pos:start="5:9" pos:end="5:10">&lt;&lt;</operator><name pos:start="5:11" pos:end="5:11">s</name><operator pos:start="5:12" pos:end="5:13">&lt;&lt;</operator><name pos:start="5:14" pos:end="5:17">endl</name></expr>;</expr_stmt>
    <if_stmt pos:start="6:5" pos:end="9:5"><if pos:start="6:5" pos:end="9:5">if<condition pos:start="6:7" pos:end="6:12">(<expr pos:start="6:8" pos:end="6:11"><name pos:start="6:8" pos:end="6:8">i</name><operator pos:start="6:9" pos:end="6:10">==</operator><name pos:start="6:11" pos:end="6:11">n</name></expr>)</condition><block pos:start="6:13" pos:end="9:5">{<block_content pos:start="7:9" pos:end="8:16">
        <if_stmt pos:start="7:9" pos:end="7:33"><if pos:start="7:9" pos:end="7:33">if<condition pos:start="7:11" pos:end="7:27">(<expr pos:start="7:12" pos:end="7:26"><call pos:start="7:12" pos:end="7:17"><name pos:start="7:12" pos:end="7:14">abs</name><argument_list pos:start="7:15" pos:end="7:17">(<argument pos:start="7:16" pos:end="7:16"><expr pos:start="7:16" pos:end="7:16"><name pos:start="7:16" pos:end="7:16">s</name></expr></argument>)</argument_list></call><operator pos:start="7:18" pos:end="7:18">&lt;</operator><call pos:start="7:19" pos:end="7:26"><name pos:start="7:19" pos:end="7:21">abs</name><argument_list pos:start="7:22" pos:end="7:26">(<argument pos:start="7:23" pos:end="7:25"><expr pos:start="7:23" pos:end="7:25"><name pos:start="7:23" pos:end="7:25">ans</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="7:28" pos:end="7:33"><block_content pos:start="7:28" pos:end="7:33"><expr_stmt pos:start="7:28" pos:end="7:33"><expr pos:start="7:28" pos:end="7:32"><name pos:start="7:28" pos:end="7:30">ans</name><operator pos:start="7:31" pos:end="7:31">=</operator><name pos:start="7:32" pos:end="7:32">s</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <return pos:start="8:9" pos:end="8:16">return ;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:20"><expr pos:start="10:5" pos:end="10:19"><call pos:start="10:5" pos:end="10:19"><name pos:start="10:5" pos:end="10:7">dfs</name><argument_list pos:start="10:8" pos:end="10:19">(<argument pos:start="10:9" pos:end="10:11"><expr pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:9">i</name><operator pos:start="10:10" pos:end="10:10">+</operator><literal type="number" pos:start="10:11" pos:end="10:11">1</literal></expr></argument>,<argument pos:start="10:13" pos:end="10:18"><expr pos:start="10:13" pos:end="10:18"><name pos:start="10:13" pos:end="10:13">s</name><operator pos:start="10:14" pos:end="10:14">+</operator><name pos:start="10:15" pos:end="10:18"><name pos:start="10:15" pos:end="10:15">a</name><index pos:start="10:16" pos:end="10:18">[<expr pos:start="10:17" pos:end="10:17"><name pos:start="10:17" pos:end="10:17">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:15"><expr pos:start="11:5" pos:end="11:14"><call pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:7">dfs</name><argument_list pos:start="11:8" pos:end="11:14">(<argument pos:start="11:9" pos:end="11:11"><expr pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:9">i</name><operator pos:start="11:10" pos:end="11:10">+</operator><literal type="number" pos:start="11:11" pos:end="11:11">1</literal></expr></argument>,<argument pos:start="11:13" pos:end="11:13"><expr pos:start="11:13" pos:end="11:13"><name pos:start="11:13" pos:end="11:13">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function pos:start="13:1" pos:end="24:1"><type pos:start="13:1" pos:end="13:3"><name pos:start="13:1" pos:end="13:3">int</name></type> <name pos:start="13:5" pos:end="13:8">main</name><parameter_list pos:start="13:9" pos:end="13:10">()</parameter_list><block pos:start="13:11" pos:end="24:1">{<block_content pos:start="14:5" pos:end="23:13">
    <expr_stmt pos:start="14:5" pos:end="14:34"><expr pos:start="14:5" pos:end="14:33"><call pos:start="14:5" pos:end="14:33"><name pos:start="14:5" pos:end="14:11">freopen</name><argument_list pos:start="14:12" pos:end="14:33">(<argument pos:start="14:13" pos:end="14:22"><expr pos:start="14:13" pos:end="14:22"><literal type="string" pos:start="14:13" pos:end="14:22">"stone.in"</literal></expr></argument>,<argument pos:start="14:24" pos:end="14:26"><expr pos:start="14:24" pos:end="14:26"><literal type="string" pos:start="14:24" pos:end="14:26">"r"</literal></expr></argument>,<argument pos:start="14:28" pos:end="14:32"><expr pos:start="14:28" pos:end="14:32"><name pos:start="14:28" pos:end="14:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><call pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:11">freopen</name><argument_list pos:start="15:12" pos:end="15:35">(<argument pos:start="15:13" pos:end="15:23"><expr pos:start="15:13" pos:end="15:23"><literal type="string" pos:start="15:13" pos:end="15:23">"stone.out"</literal></expr></argument>,<argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><literal type="string" pos:start="15:25" pos:end="15:27">"w"</literal></expr></argument>,<argument pos:start="15:29" pos:end="15:34"><expr pos:start="15:29" pos:end="15:34"><name pos:start="15:29" pos:end="15:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:11"><expr pos:start="16:5" pos:end="16:10"><name pos:start="16:5" pos:end="16:7">cin</name><operator pos:start="16:8" pos:end="16:9">&gt;&gt;</operator><name pos:start="16:10" pos:end="16:10">n</name></expr>;</expr_stmt>
    <for pos:start="17:5" pos:end="20:5">for<control pos:start="17:8" pos:end="17:25">(<init pos:start="17:9" pos:end="17:16"><decl pos:start="17:9" pos:end="17:15"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">i</name><init pos:start="17:14" pos:end="17:15">=<expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">1</literal></expr></init></decl>;</init><condition pos:start="17:17" pos:end="17:21"><expr pos:start="17:17" pos:end="17:20"><name pos:start="17:17" pos:end="17:17">i</name><operator pos:start="17:18" pos:end="17:19">&lt;=</operator><name pos:start="17:20" pos:end="17:20">n</name></expr>;</condition><incr pos:start="17:22" pos:end="17:24"><expr pos:start="17:22" pos:end="17:24"><name pos:start="17:22" pos:end="17:22">i</name><operator pos:start="17:23" pos:end="17:24">++</operator></expr></incr>)</control><block pos:start="17:26" pos:end="20:5">{<block_content pos:start="18:9" pos:end="19:18">
        <expr_stmt pos:start="18:9" pos:end="18:19"><expr pos:start="18:9" pos:end="18:18"><name pos:start="18:9" pos:end="18:11">cin</name><operator pos:start="18:12" pos:end="18:13">&gt;&gt;</operator><name pos:start="18:14" pos:end="18:14">l</name><operator pos:start="18:15" pos:end="18:16">&gt;&gt;</operator><name pos:start="18:17" pos:end="18:18">ll</name></expr>;</expr_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:18"><expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:12"><name pos:start="19:9" pos:end="19:9">a</name><index pos:start="19:10" pos:end="19:12">[<expr pos:start="19:11" pos:end="19:11"><name pos:start="19:11" pos:end="19:11">i</name></expr>]</index></name><operator pos:start="19:13" pos:end="19:13">=</operator><name pos:start="19:14" pos:end="19:15">ll</name><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:17">l</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="21:5" pos:end="21:13"><expr pos:start="21:5" pos:end="21:12"><call pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:7">dfs</name><argument_list pos:start="21:8" pos:end="21:12">(<argument pos:start="21:9" pos:end="21:9"><expr pos:start="21:9" pos:end="21:9"><literal type="number" pos:start="21:9" pos:end="21:9">0</literal></expr></argument>,<argument pos:start="21:11" pos:end="21:11"><expr pos:start="21:11" pos:end="21:11"><literal type="number" pos:start="21:11" pos:end="21:11">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:19"><expr pos:start="22:5" pos:end="22:18"><name pos:start="22:5" pos:end="22:8">cout</name><operator pos:start="22:9" pos:end="22:10">&lt;&lt;</operator><call pos:start="22:11" pos:end="22:18"><name pos:start="22:11" pos:end="22:13">abs</name><argument_list pos:start="22:14" pos:end="22:18">(<argument pos:start="22:15" pos:end="22:17"><expr pos:start="22:15" pos:end="22:17"><name pos:start="22:15" pos:end="22:17">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="23:5" pos:end="23:13">return <expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
