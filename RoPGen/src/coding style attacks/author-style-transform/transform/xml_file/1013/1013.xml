<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/1013/1013.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;vector&gt;</cpp:file></cpp:include>
<using pos:start="3:1" pos:end="3:20">using <namespace pos:start="3:7" pos:end="3:20">namespace <name pos:start="3:17" pos:end="3:19">std</name>;</namespace></using>
<struct pos:start="4:1" pos:end="8:2">struct <name pos:start="4:8" pos:end="4:11">Node</name><block pos:start="4:12" pos:end="8:1">{<public type="default" pos:start="5:5" pos:end="7:14">
    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">du</name> <init pos:start="5:12" pos:end="5:14">= <expr pos:start="5:14" pos:end="5:14"><literal type="number" pos:start="5:14" pos:end="5:14">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:17"><decl pos:start="6:5" pos:end="6:16"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:12">F_du</name> <init pos:start="6:14" pos:end="6:16">= <expr pos:start="6:16" pos:end="6:16"><literal type="number" pos:start="6:16" pos:end="6:16">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">F</name> <init pos:start="7:11" pos:end="7:13">= <expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr></init></decl>;</decl_stmt>
</public>}</block>;</struct>
<function pos:start="9:1" pos:end="45:1"><type pos:start="9:1" pos:end="9:3"><name pos:start="9:1" pos:end="9:3">int</name></type> <name pos:start="9:5" pos:end="9:8">main</name><parameter_list pos:start="9:9" pos:end="9:10">()</parameter_list><block pos:start="9:11" pos:end="45:1">{<block_content pos:start="10:5" pos:end="44:13">
    <expr_stmt pos:start="10:5" pos:end="10:32"><expr pos:start="10:5" pos:end="10:31"><call pos:start="10:5" pos:end="10:31"><name pos:start="10:5" pos:end="10:11">freopen</name><argument_list pos:start="10:12" pos:end="10:31">(<argument pos:start="10:13" pos:end="10:18"><expr pos:start="10:13" pos:end="10:18"><literal type="string" pos:start="10:13" pos:end="10:18">"p.in"</literal></expr></argument>, <argument pos:start="10:21" pos:end="10:23"><expr pos:start="10:21" pos:end="10:23"><literal type="string" pos:start="10:21" pos:end="10:23">"r"</literal></expr></argument>, <argument pos:start="10:26" pos:end="10:30"><expr pos:start="10:26" pos:end="10:30"><name pos:start="10:26" pos:end="10:30">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:34"><expr pos:start="11:5" pos:end="11:33"><call pos:start="11:5" pos:end="11:33"><name pos:start="11:5" pos:end="11:11">freopen</name><argument_list pos:start="11:12" pos:end="11:33">(<argument pos:start="11:13" pos:end="11:19"><expr pos:start="11:13" pos:end="11:19"><literal type="string" pos:start="11:13" pos:end="11:19">"p.out"</literal></expr></argument>, <argument pos:start="11:22" pos:end="11:24"><expr pos:start="11:22" pos:end="11:24"><literal type="string" pos:start="11:22" pos:end="11:24">"w"</literal></expr></argument>, <argument pos:start="11:27" pos:end="11:32"><expr pos:start="11:27" pos:end="11:32"><name pos:start="11:27" pos:end="11:32">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:10"><decl pos:start="12:5" pos:end="12:9"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:9">t</name></decl>;</decl_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:13"><expr pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:7">cin</name> <operator pos:start="13:9" pos:end="13:10">&gt;&gt;</operator> <name pos:start="13:12" pos:end="13:12">t</name></expr>;</expr_stmt>
    <while pos:start="14:5" pos:end="43:5">while<condition pos:start="14:10" pos:end="14:14">(<expr pos:start="14:11" pos:end="14:13"><name pos:start="14:11" pos:end="14:11">t</name><operator pos:start="14:12" pos:end="14:13">--</operator></expr>)</condition><block pos:start="14:15" pos:end="43:5">{<block_content pos:start="15:9" pos:end="42:26">
        <decl_stmt pos:start="15:9" pos:end="15:14"><decl pos:start="15:9" pos:end="15:13"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">n</name></decl>;</decl_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:17"><expr pos:start="16:9" pos:end="16:16"><name pos:start="16:9" pos:end="16:11">cin</name> <operator pos:start="16:13" pos:end="16:14">&gt;&gt;</operator> <name pos:start="16:16" pos:end="16:16">n</name></expr>;</expr_stmt>
        <decl_stmt pos:start="17:9" pos:end="17:27"><decl pos:start="17:9" pos:end="17:26"><type pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:14">vector</name><argument_list type="generic" pos:start="17:15" pos:end="17:19">&lt;<argument pos:start="17:16" pos:end="17:18"><expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="17:21" pos:end="17:26"><name pos:start="17:21" pos:end="17:21">G</name><index pos:start="17:22" pos:end="17:26">[<expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:23">n</name><operator pos:start="17:24" pos:end="17:24">+</operator><literal type="number" pos:start="17:25" pos:end="17:25">1</literal></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="18:9" pos:end="18:30"><decl pos:start="18:9" pos:end="18:29"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:23"><name pos:start="18:13" pos:end="18:18">G_size</name><index pos:start="18:19" pos:end="18:23">[<expr pos:start="18:20" pos:end="18:22"><name pos:start="18:20" pos:end="18:20">n</name><operator pos:start="18:21" pos:end="18:21">+</operator><literal type="number" pos:start="18:22" pos:end="18:22">1</literal></expr>]</index></name> <init pos:start="18:25" pos:end="18:29">= <expr pos:start="18:27" pos:end="18:29"><block pos:start="18:27" pos:end="18:29">{<expr pos:start="18:28" pos:end="18:28"><literal type="number" pos:start="18:28" pos:end="18:28">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="19:9" pos:end="19:20"><decl pos:start="19:9" pos:end="19:19"><type pos:start="19:9" pos:end="19:12"><name pos:start="19:9" pos:end="19:12">Node</name></type> <name pos:start="19:14" pos:end="19:19"><name pos:start="19:14" pos:end="19:14">g</name><index pos:start="19:15" pos:end="19:19">[<expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:16">n</name><operator pos:start="19:17" pos:end="19:17">+</operator><literal type="number" pos:start="19:18" pos:end="19:18">1</literal></expr>]</index></name></decl>;</decl_stmt>
        <for pos:start="20:9" pos:end="28:9">for<control pos:start="20:12" pos:end="20:36">(<init pos:start="20:13" pos:end="20:22"><decl pos:start="20:13" pos:end="20:21"><type pos:start="20:13" pos:end="20:15"><name pos:start="20:13" pos:end="20:15">int</name></type> <name pos:start="20:17" pos:end="20:17">i</name> <init pos:start="20:19" pos:end="20:21">= <expr pos:start="20:21" pos:end="20:21"><literal type="number" pos:start="20:21" pos:end="20:21">0</literal></expr></init></decl>;</init><condition pos:start="20:23" pos:end="20:32"><expr pos:start="20:23" pos:end="20:31"><name pos:start="20:23" pos:end="20:23">i</name> <operator pos:start="20:25" pos:end="20:25">&lt;</operator> <name pos:start="20:27" pos:end="20:27">n</name> <operator pos:start="20:29" pos:end="20:29">-</operator> <literal type="number" pos:start="20:31" pos:end="20:31">1</literal></expr>;</condition><incr pos:start="20:33" pos:end="20:35"><expr pos:start="20:33" pos:end="20:35"><name pos:start="20:33" pos:end="20:33">i</name><operator pos:start="20:34" pos:end="20:35">++</operator></expr></incr>)</control><block pos:start="20:37" pos:end="28:9">{<block_content pos:start="21:13" pos:end="27:27">
            <decl_stmt pos:start="21:13" pos:end="21:20"><decl pos:start="21:13" pos:end="21:17"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:17">x</name></decl>,<decl pos:start="21:19" pos:end="21:19"><type ref="prev" pos:start="21:13" pos:end="21:15"/><name pos:start="21:19" pos:end="21:19">y</name></decl>;</decl_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:26"><expr pos:start="22:13" pos:end="22:25"><name pos:start="22:13" pos:end="22:15">cin</name> <operator pos:start="22:17" pos:end="22:18">&gt;&gt;</operator> <name pos:start="22:20" pos:end="22:20">x</name> <operator pos:start="22:22" pos:end="22:23">&gt;&gt;</operator> <name pos:start="22:25" pos:end="22:25">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:30"><expr pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:16"><name pos:start="23:13" pos:end="23:13">G</name><index pos:start="23:14" pos:end="23:16">[<expr pos:start="23:15" pos:end="23:15"><name pos:start="23:15" pos:end="23:15">x</name></expr>]</index></name><operator pos:start="23:17" pos:end="23:17">.</operator><call pos:start="23:18" pos:end="23:29"><name pos:start="23:18" pos:end="23:26">push_back</name><argument_list pos:start="23:27" pos:end="23:29">(<argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="24:13" pos:end="24:25"><expr pos:start="24:13" pos:end="24:24"><name pos:start="24:13" pos:end="24:16"><name pos:start="24:13" pos:end="24:13">g</name><index pos:start="24:14" pos:end="24:16">[<expr pos:start="24:15" pos:end="24:15"><name pos:start="24:15" pos:end="24:15">x</name></expr>]</index></name><operator pos:start="24:17" pos:end="24:17">.</operator><name pos:start="24:18" pos:end="24:19">du</name> <operator pos:start="24:21" pos:end="24:22">+=</operator> <literal type="number" pos:start="24:24" pos:end="24:24">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="25:13" pos:end="25:27"><expr pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:16"><name pos:start="25:13" pos:end="25:13">g</name><index pos:start="25:14" pos:end="25:16">[<expr pos:start="25:15" pos:end="25:15"><name pos:start="25:15" pos:end="25:15">y</name></expr>]</index></name><operator pos:start="25:17" pos:end="25:17">.</operator><name pos:start="25:18" pos:end="25:21">F_du</name> <operator pos:start="25:23" pos:end="25:24">+=</operator> <literal type="number" pos:start="25:26" pos:end="25:26">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="26:13" pos:end="26:23"><expr pos:start="26:13" pos:end="26:22"><name pos:start="26:13" pos:end="26:16"><name pos:start="26:13" pos:end="26:13">g</name><index pos:start="26:14" pos:end="26:16">[<expr pos:start="26:15" pos:end="26:15"><name pos:start="26:15" pos:end="26:15">y</name></expr>]</index></name><operator pos:start="26:17" pos:end="26:17">.</operator><name pos:start="26:18" pos:end="26:18">F</name> <operator pos:start="26:20" pos:end="26:20">=</operator> <name pos:start="26:22" pos:end="26:22">x</name></expr>;</expr_stmt>
            <expr_stmt pos:start="27:13" pos:end="27:27"><expr pos:start="27:13" pos:end="27:26"><name pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:18">G_size</name><index pos:start="27:19" pos:end="27:21">[<expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">x</name></expr>]</index></name> <operator pos:start="27:23" pos:end="27:24">+=</operator> <literal type="number" pos:start="27:26" pos:end="27:26">1</literal></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="29:9" pos:end="29:18"><decl pos:start="29:9" pos:end="29:17"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:13">p</name> <init pos:start="29:15" pos:end="29:17">= <expr pos:start="29:17" pos:end="29:17"><literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="30:9" pos:end="41:9">for<control pos:start="30:12" pos:end="30:33">(<init pos:start="30:13" pos:end="30:22"><decl pos:start="30:13" pos:end="30:21"><type pos:start="30:13" pos:end="30:15"><name pos:start="30:13" pos:end="30:15">int</name></type> <name pos:start="30:17" pos:end="30:17">i</name> <init pos:start="30:19" pos:end="30:21">= <expr pos:start="30:21" pos:end="30:21"><literal type="number" pos:start="30:21" pos:end="30:21">1</literal></expr></init></decl>;</init><condition pos:start="30:23" pos:end="30:29"><expr pos:start="30:23" pos:end="30:28"><name pos:start="30:23" pos:end="30:23">i</name> <operator pos:start="30:25" pos:end="30:26">&lt;=</operator> <name pos:start="30:28" pos:end="30:28">n</name></expr>;</condition><incr pos:start="30:30" pos:end="30:32"><expr pos:start="30:30" pos:end="30:32"><name pos:start="30:30" pos:end="30:30">i</name><operator pos:start="30:31" pos:end="30:32">++</operator></expr></incr>)</control><block pos:start="30:34" pos:end="41:9">{<block_content pos:start="31:13" pos:end="40:19">
            <decl_stmt pos:start="31:13" pos:end="31:23"><decl pos:start="31:13" pos:end="31:22"><type pos:start="31:13" pos:end="31:16"><name pos:start="31:13" pos:end="31:16">bool</name></type> <name pos:start="31:18" pos:end="31:18">P</name> <init pos:start="31:20" pos:end="31:22">= <expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">1</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="32:13" pos:end="36:13">for<control pos:start="32:16" pos:end="32:45">(<init pos:start="32:17" pos:end="32:26"><decl pos:start="32:17" pos:end="32:25"><type pos:start="32:17" pos:end="32:19"><name pos:start="32:17" pos:end="32:19">int</name></type> <name pos:start="32:21" pos:end="32:21">j</name> <init pos:start="32:23" pos:end="32:25">= <expr pos:start="32:25" pos:end="32:25"><literal type="number" pos:start="32:25" pos:end="32:25">1</literal></expr></init></decl>;</init><condition pos:start="32:27" pos:end="32:41"><expr pos:start="32:27" pos:end="32:40"><name pos:start="32:27" pos:end="32:27">j</name> <operator pos:start="32:29" pos:end="32:30">&lt;=</operator> <name pos:start="32:32" pos:end="32:40"><name pos:start="32:32" pos:end="32:37">G_size</name><index pos:start="32:38" pos:end="32:40">[<expr pos:start="32:39" pos:end="32:39"><name pos:start="32:39" pos:end="32:39">i</name></expr>]</index></name></expr>;</condition><incr pos:start="32:42" pos:end="32:44"><expr pos:start="32:42" pos:end="32:44"><name pos:start="32:42" pos:end="32:42">j</name><operator pos:start="32:43" pos:end="32:44">++</operator></expr></incr>)</control><block pos:start="32:46" pos:end="36:13">{<block_content pos:start="33:17" pos:end="35:17">
                <if_stmt pos:start="33:17" pos:end="35:17"><if pos:start="33:17" pos:end="35:17">if<condition pos:start="33:19" pos:end="33:44">(<expr pos:start="33:20" pos:end="33:43"><name pos:start="33:20" pos:end="33:29"><name pos:start="33:20" pos:end="33:20">g</name><index pos:start="33:21" pos:end="33:29">[<expr pos:start="33:22" pos:end="33:28"><name pos:start="33:22" pos:end="33:28"><name pos:start="33:22" pos:end="33:22">G</name><index pos:start="33:23" pos:end="33:25">[<expr pos:start="33:24" pos:end="33:24"><name pos:start="33:24" pos:end="33:24">i</name></expr>]</index><index pos:start="33:26" pos:end="33:28">[<expr pos:start="33:27" pos:end="33:27"><name pos:start="33:27" pos:end="33:27">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="33:30" pos:end="33:30">.</operator><name pos:start="33:31" pos:end="33:32">du</name> <operator pos:start="33:34" pos:end="33:35">&gt;=</operator> <name pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:37">g</name><index pos:start="33:38" pos:end="33:40">[<expr pos:start="33:39" pos:end="33:39"><name pos:start="33:39" pos:end="33:39">i</name></expr>]</index></name><operator pos:start="33:41" pos:end="33:41">.</operator><name pos:start="33:42" pos:end="33:43">du</name></expr>)</condition><block pos:start="33:45" pos:end="35:17">{<block_content pos:start="34:21" pos:end="34:26">
                    <expr_stmt pos:start="34:21" pos:end="34:26"><expr pos:start="34:21" pos:end="34:25"><name pos:start="34:21" pos:end="34:21">P</name> <operator pos:start="34:23" pos:end="34:23">=</operator> <literal type="number" pos:start="34:25" pos:end="34:25">0</literal></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="37:13" pos:end="39:13"><if pos:start="37:13" pos:end="39:13">if<condition pos:start="37:15" pos:end="37:39">(<expr pos:start="37:16" pos:end="37:38"><name pos:start="37:16" pos:end="37:24"><name pos:start="37:16" pos:end="37:16">g</name><index pos:start="37:17" pos:end="37:24">[<expr pos:start="37:18" pos:end="37:23"><name pos:start="37:18" pos:end="37:21"><name pos:start="37:18" pos:end="37:18">g</name><index pos:start="37:19" pos:end="37:21">[<expr pos:start="37:20" pos:end="37:20"><name pos:start="37:20" pos:end="37:20">i</name></expr>]</index></name><operator pos:start="37:22" pos:end="37:22">.</operator><name pos:start="37:23" pos:end="37:23">F</name></expr>]</index></name><operator pos:start="37:25" pos:end="37:25">.</operator><name pos:start="37:26" pos:end="37:27">du</name> <operator pos:start="37:29" pos:end="37:30">&gt;=</operator> <name pos:start="37:32" pos:end="37:35"><name pos:start="37:32" pos:end="37:32">g</name><index pos:start="37:33" pos:end="37:35">[<expr pos:start="37:34" pos:end="37:34"><name pos:start="37:34" pos:end="37:34">i</name></expr>]</index></name><operator pos:start="37:36" pos:end="37:36">.</operator><name pos:start="37:37" pos:end="37:38">du</name></expr>)</condition><block pos:start="37:40" pos:end="39:13">{<block_content pos:start="38:17" pos:end="38:22">
                <expr_stmt pos:start="38:17" pos:end="38:22"><expr pos:start="38:17" pos:end="38:21"><name pos:start="38:17" pos:end="38:17">P</name> <operator pos:start="38:19" pos:end="38:19">=</operator> <literal type="number" pos:start="38:21" pos:end="38:21">0</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="40:13" pos:end="40:19"><expr pos:start="40:13" pos:end="40:18"><name pos:start="40:13" pos:end="40:13">p</name> <operator pos:start="40:15" pos:end="40:16">+=</operator> <name pos:start="40:18" pos:end="40:18">P</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="42:9" pos:end="42:26"><expr pos:start="42:9" pos:end="42:25"><name pos:start="42:9" pos:end="42:12">cout</name> <operator pos:start="42:14" pos:end="42:15">&lt;&lt;</operator> <name pos:start="42:17" pos:end="42:17">p</name> <operator pos:start="42:19" pos:end="42:20">&lt;&lt;</operator> <name pos:start="42:22" pos:end="42:25">endl</name></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="44:5" pos:end="44:13">return <expr pos:start="44:12" pos:end="44:12"><literal type="number" pos:start="44:12" pos:end="44:12">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
