<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="program_file/target_author_file/58/58.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:23">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive><cpp:file pos:start="1:9" pos:end="1:23">&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using pos:start="2:1" pos:end="2:20">using <namespace pos:start="2:7" pos:end="2:20">namespace <name pos:start="2:17" pos:end="2:19">std</name>;</namespace></using>
<decl_stmt pos:start="3:1" pos:end="3:6"><decl pos:start="3:1" pos:end="3:5"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:5">n</name></decl>;</decl_stmt>
<decl_stmt pos:start="4:1" pos:end="4:27"><decl pos:start="4:1" pos:end="4:12"><type pos:start="4:1" pos:end="4:4"><name pos:start="4:1" pos:end="4:4">bool</name></type> <name pos:start="4:6" pos:end="4:12"><name pos:start="4:6" pos:end="4:8">row</name><index pos:start="4:9" pos:end="4:12">[<expr pos:start="4:10" pos:end="4:11"><literal type="number" pos:start="4:10" pos:end="4:11">15</literal></expr>]</index></name></decl>,<decl pos:start="4:14" pos:end="4:19"><type ref="prev" pos:start="4:1" pos:end="4:4"/><name pos:start="4:14" pos:end="4:19"><name pos:start="4:14" pos:end="4:15">x1</name><index pos:start="4:16" pos:end="4:19">[<expr pos:start="4:17" pos:end="4:18"><literal type="number" pos:start="4:17" pos:end="4:18">30</literal></expr>]</index></name></decl>,<decl pos:start="4:21" pos:end="4:26"><type ref="prev" pos:start="4:1" pos:end="4:4"/><name pos:start="4:21" pos:end="4:26"><name pos:start="4:21" pos:end="4:22">x2</name><index pos:start="4:23" pos:end="4:26">[<expr pos:start="4:24" pos:end="4:25"><literal type="number" pos:start="4:24" pos:end="4:25">30</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="5:1" pos:end="5:18"><decl pos:start="5:1" pos:end="5:17"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:9">value</name><index pos:start="5:10" pos:end="5:13">[<expr pos:start="5:11" pos:end="5:12"><literal type="number" pos:start="5:11" pos:end="5:12">15</literal></expr>]</index><index pos:start="5:14" pos:end="5:17">[<expr pos:start="5:15" pos:end="5:16"><literal type="number" pos:start="5:15" pos:end="5:16">15</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt pos:start="6:1" pos:end="6:12"><decl pos:start="6:1" pos:end="6:11"><type pos:start="6:1" pos:end="6:3"><name pos:start="6:1" pos:end="6:3">int</name></type> <name pos:start="6:5" pos:end="6:7">ans</name> <init pos:start="6:9" pos:end="6:11">= <expr pos:start="6:11" pos:end="6:11"><literal type="number" pos:start="6:11" pos:end="6:11">0</literal></expr></init></decl>;</decl_stmt>
 <function pos:start="7:2" pos:end="9:2"><type pos:start="7:2" pos:end="7:5"><name pos:start="7:2" pos:end="7:5">bool</name></type> <name pos:start="7:7" pos:end="7:11">check</name><parameter_list pos:start="7:12" pos:end="7:24">(<parameter pos:start="7:13" pos:end="7:17"><decl pos:start="7:13" pos:end="7:17"><type pos:start="7:13" pos:end="7:17"><name pos:start="7:13" pos:end="7:15">int</name></type> <name pos:start="7:17" pos:end="7:17">i</name></decl></parameter>,<parameter pos:start="7:19" pos:end="7:23"><decl pos:start="7:19" pos:end="7:23"><type pos:start="7:19" pos:end="7:23"><name pos:start="7:19" pos:end="7:21">int</name></type> <name pos:start="7:23" pos:end="7:23">c</name></decl></parameter>)</parameter_list> <block pos:start="7:26" pos:end="9:2">{<block_content pos:start="8:4" pos:end="8:70">
   <return pos:start="8:4" pos:end="8:70">return <expr pos:start="8:11" pos:end="8:69"><operator pos:start="8:11" pos:end="8:11">!</operator><name pos:start="8:12" pos:end="8:17"><name pos:start="8:12" pos:end="8:14">row</name><index pos:start="8:15" pos:end="8:17">[<expr pos:start="8:16" pos:end="8:16"><name pos:start="8:16" pos:end="8:16">i</name></expr>]</index></name> <operator pos:start="8:19" pos:end="8:20">&amp;&amp;</operator> <operator pos:start="8:22" pos:end="8:22">!</operator><name pos:start="8:23" pos:end="8:31"><name pos:start="8:23" pos:end="8:24">x1</name><index pos:start="8:25" pos:end="8:31">[<expr pos:start="8:26" pos:end="8:30"><name pos:start="8:26" pos:end="8:26">i</name> <operator pos:start="8:28" pos:end="8:28">+</operator> <name pos:start="8:30" pos:end="8:30">c</name></expr>]</index></name> <operator pos:start="8:33" pos:end="8:34">&amp;&amp;</operator> <operator pos:start="8:36" pos:end="8:36">!</operator><name pos:start="8:37" pos:end="8:49"><name pos:start="8:37" pos:end="8:38">x2</name><index pos:start="8:39" pos:end="8:49">[<expr pos:start="8:40" pos:end="8:48"><name pos:start="8:40" pos:end="8:40">i</name> <operator pos:start="8:42" pos:end="8:42">-</operator> <name pos:start="8:44" pos:end="8:44">c</name> <operator pos:start="8:46" pos:end="8:46">+</operator> <name pos:start="8:48" pos:end="8:48">n</name></expr>]</index></name> <operator pos:start="8:51" pos:end="8:52">&amp;&amp;</operator> <name pos:start="8:54" pos:end="8:64"><name pos:start="8:54" pos:end="8:58">value</name><index pos:start="8:59" pos:end="8:61">[<expr pos:start="8:60" pos:end="8:60"><name pos:start="8:60" pos:end="8:60">i</name></expr>]</index><index pos:start="8:62" pos:end="8:64">[<expr pos:start="8:63" pos:end="8:63"><name pos:start="8:63" pos:end="8:63">c</name></expr>]</index></name> <operator pos:start="8:66" pos:end="8:67">==</operator> <literal type="number" pos:start="8:69" pos:end="8:69">1</literal></expr>;</return>
 </block_content>}</block></function>
<function pos:start="10:1" pos:end="31:1"><type pos:start="10:1" pos:end="10:4"><name pos:start="10:1" pos:end="10:4">void</name></type> <name pos:start="10:6" pos:end="10:8">dfs</name><parameter_list pos:start="10:9" pos:end="10:22">(<parameter pos:start="10:10" pos:end="10:14"><decl pos:start="10:10" pos:end="10:14"><type pos:start="10:10" pos:end="10:14"><name pos:start="10:10" pos:end="10:12">int</name></type> <name pos:start="10:14" pos:end="10:14">c</name></decl></parameter>,<parameter pos:start="10:16" pos:end="10:21"><decl pos:start="10:16" pos:end="10:21"><type pos:start="10:16" pos:end="10:21"><name pos:start="10:16" pos:end="10:18">int</name></type> <name pos:start="10:20" pos:end="10:21">op</name></decl></parameter>)</parameter_list> <block pos:start="10:24" pos:end="31:1">{<block_content pos:start="11:3" pos:end="30:3">
  <if_stmt pos:start="11:3" pos:end="14:3"><if pos:start="11:3" pos:end="14:3">if<condition pos:start="11:5" pos:end="11:13">(<expr pos:start="11:6" pos:end="11:12"><name pos:start="11:6" pos:end="11:7">op</name> <operator pos:start="11:9" pos:end="11:10">==</operator> <literal type="number" pos:start="11:12" pos:end="11:12">3</literal></expr>)</condition> <block pos:start="11:15" pos:end="14:3">{<block_content pos:start="12:5" pos:end="13:11">
    <expr_stmt pos:start="12:5" pos:end="12:10"><expr pos:start="12:5" pos:end="12:9"><name pos:start="12:5" pos:end="12:7">ans</name><operator pos:start="12:8" pos:end="12:9">++</operator></expr>;</expr_stmt>
    <return pos:start="13:5" pos:end="13:11">return;</return>
  </block_content>}</block></if></if_stmt> 
  <if_stmt pos:start="15:3" pos:end="21:3"><if pos:start="15:3" pos:end="21:3">if<condition pos:start="15:5" pos:end="15:12">(<expr pos:start="15:6" pos:end="15:11"><name pos:start="15:6" pos:end="15:6">c</name> <operator pos:start="15:8" pos:end="15:9">==</operator> <name pos:start="15:11" pos:end="15:11">n</name></expr>)</condition> <block pos:start="15:14" pos:end="21:3">{<block_content pos:start="16:5" pos:end="20:11">
    <expr_stmt pos:start="16:5" pos:end="16:30"><expr pos:start="16:5" pos:end="16:29"><call pos:start="16:5" pos:end="16:29"><name pos:start="16:5" pos:end="16:10">memset</name><argument_list pos:start="16:11" pos:end="16:29">(<argument pos:start="16:12" pos:end="16:14"><expr pos:start="16:12" pos:end="16:14"><name pos:start="16:12" pos:end="16:14">row</name></expr></argument>,<argument pos:start="16:16" pos:end="16:16"><expr pos:start="16:16" pos:end="16:16"><literal type="number" pos:start="16:16" pos:end="16:16">0</literal></expr></argument>,<argument pos:start="16:18" pos:end="16:28"><expr pos:start="16:18" pos:end="16:28"><sizeof pos:start="16:18" pos:end="16:28">sizeof<argument_list pos:start="16:24" pos:end="16:28">(<argument pos:start="16:25" pos:end="16:27"><expr pos:start="16:25" pos:end="16:27"><name pos:start="16:25" pos:end="16:27">row</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><call pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:27">(<argument pos:start="17:12" pos:end="17:13"><expr pos:start="17:12" pos:end="17:13"><name pos:start="17:12" pos:end="17:13">x1</name></expr></argument>,<argument pos:start="17:15" pos:end="17:15"><expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></argument>,<argument pos:start="17:17" pos:end="17:26"><expr pos:start="17:17" pos:end="17:26"><sizeof pos:start="17:17" pos:end="17:26">sizeof<argument_list pos:start="17:23" pos:end="17:26">(<argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><name pos:start="17:24" pos:end="17:25">x1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:28"><expr pos:start="18:5" pos:end="18:27"><call pos:start="18:5" pos:end="18:27"><name pos:start="18:5" pos:end="18:10">memset</name><argument_list pos:start="18:11" pos:end="18:27">(<argument pos:start="18:12" pos:end="18:13"><expr pos:start="18:12" pos:end="18:13"><name pos:start="18:12" pos:end="18:13">x2</name></expr></argument>,<argument pos:start="18:15" pos:end="18:15"><expr pos:start="18:15" pos:end="18:15"><literal type="number" pos:start="18:15" pos:end="18:15">0</literal></expr></argument>,<argument pos:start="18:17" pos:end="18:26"><expr pos:start="18:17" pos:end="18:26"><sizeof pos:start="18:17" pos:end="18:26">sizeof<argument_list pos:start="18:23" pos:end="18:26">(<argument pos:start="18:24" pos:end="18:25"><expr pos:start="18:24" pos:end="18:25"><name pos:start="18:24" pos:end="18:25">x2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:18"><expr pos:start="19:5" pos:end="19:17"><call pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:7">dfs</name><argument_list pos:start="19:8" pos:end="19:17">(<argument pos:start="19:9" pos:end="19:9"><expr pos:start="19:9" pos:end="19:9"><literal type="number" pos:start="19:9" pos:end="19:9">0</literal></expr></argument>,<argument pos:start="19:11" pos:end="19:16"><expr pos:start="19:11" pos:end="19:16"><name pos:start="19:11" pos:end="19:12">op</name> <operator pos:start="19:14" pos:end="19:14">+</operator> <literal type="number" pos:start="19:16" pos:end="19:16">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="20:5" pos:end="20:11">return;</return>
  </block_content>}</block></if></if_stmt>
  <for pos:start="22:3" pos:end="30:3">for<control pos:start="22:6" pos:end="22:28">(<init pos:start="22:7" pos:end="22:16"><decl pos:start="22:7" pos:end="22:15"><type pos:start="22:7" pos:end="22:9"><name pos:start="22:7" pos:end="22:9">int</name></type> <name pos:start="22:11" pos:end="22:11">i</name> <init pos:start="22:13" pos:end="22:15">= <expr pos:start="22:15" pos:end="22:15"><literal type="number" pos:start="22:15" pos:end="22:15">0</literal></expr></init></decl>;</init> <condition pos:start="22:18" pos:end="22:23"><expr pos:start="22:18" pos:end="22:22"><name pos:start="22:18" pos:end="22:18">i</name> <operator pos:start="22:20" pos:end="22:20">&lt;</operator> <name pos:start="22:22" pos:end="22:22">n</name></expr>;</condition> <incr pos:start="22:25" pos:end="22:27"><expr pos:start="22:25" pos:end="22:27"><name pos:start="22:25" pos:end="22:25">i</name><operator pos:start="22:26" pos:end="22:27">++</operator></expr></incr>)</control> <block pos:start="22:30" pos:end="30:3">{<block_content pos:start="23:5" pos:end="29:5">
    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if<condition pos:start="23:7" pos:end="23:18">(<expr pos:start="23:8" pos:end="23:17"><call pos:start="23:8" pos:end="23:17"><name pos:start="23:8" pos:end="23:12">check</name><argument_list pos:start="23:13" pos:end="23:17">(<argument pos:start="23:14" pos:end="23:14"><expr pos:start="23:14" pos:end="23:14"><name pos:start="23:14" pos:end="23:14">i</name></expr></argument>,<argument pos:start="23:16" pos:end="23:16"><expr pos:start="23:16" pos:end="23:16"><name pos:start="23:16" pos:end="23:16">c</name></expr></argument>)</argument_list></call></expr>)</condition>  <block pos:start="23:21" pos:end="29:5">{<block_content pos:start="24:7" pos:end="28:49">
      <expr_stmt pos:start="24:7" pos:end="24:48"><expr pos:start="24:7" pos:end="24:47"><name pos:start="24:7" pos:end="24:12"><name pos:start="24:7" pos:end="24:9">row</name><index pos:start="24:10" pos:end="24:12">[<expr pos:start="24:11" pos:end="24:11"><name pos:start="24:11" pos:end="24:11">i</name></expr>]</index></name> <operator pos:start="24:14" pos:end="24:14">=</operator> <name pos:start="24:16" pos:end="24:24"><name pos:start="24:16" pos:end="24:17">x1</name><index pos:start="24:18" pos:end="24:24">[<expr pos:start="24:19" pos:end="24:23"><name pos:start="24:19" pos:end="24:19">i</name> <operator pos:start="24:21" pos:end="24:21">+</operator> <name pos:start="24:23" pos:end="24:23">c</name></expr>]</index></name> <operator pos:start="24:26" pos:end="24:26">=</operator> <name pos:start="24:28" pos:end="24:40"><name pos:start="24:28" pos:end="24:29">x2</name><index pos:start="24:30" pos:end="24:40">[<expr pos:start="24:31" pos:end="24:39"><name pos:start="24:31" pos:end="24:31">i</name> <operator pos:start="24:33" pos:end="24:33">-</operator> <name pos:start="24:35" pos:end="24:35">c</name> <operator pos:start="24:37" pos:end="24:37">+</operator> <name pos:start="24:39" pos:end="24:39">n</name></expr>]</index></name> <operator pos:start="24:42" pos:end="24:42">=</operator> <literal type="boolean" pos:start="24:44" pos:end="24:47">true</literal></expr>;</expr_stmt>
      <expr_stmt pos:start="25:7" pos:end="25:22"><expr pos:start="25:7" pos:end="25:21"><name pos:start="25:7" pos:end="25:17"><name pos:start="25:7" pos:end="25:11">value</name><index pos:start="25:12" pos:end="25:14">[<expr pos:start="25:13" pos:end="25:13"><name pos:start="25:13" pos:end="25:13">i</name></expr>]</index><index pos:start="25:15" pos:end="25:17">[<expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">c</name></expr>]</index></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr>;</expr_stmt>
      <expr_stmt pos:start="26:7" pos:end="26:20"><expr pos:start="26:7" pos:end="26:19"><call pos:start="26:7" pos:end="26:19"><name pos:start="26:7" pos:end="26:9">dfs</name><argument_list pos:start="26:10" pos:end="26:19">(<argument pos:start="26:11" pos:end="26:15"><expr pos:start="26:11" pos:end="26:15"><name pos:start="26:11" pos:end="26:11">c</name> <operator pos:start="26:13" pos:end="26:13">+</operator> <literal type="number" pos:start="26:15" pos:end="26:15">1</literal></expr></argument>,<argument pos:start="26:17" pos:end="26:18"><expr pos:start="26:17" pos:end="26:18"><name pos:start="26:17" pos:end="26:18">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="27:9" pos:end="27:24"><expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:13">value</name><index pos:start="27:14" pos:end="27:16">[<expr pos:start="27:15" pos:end="27:15"><name pos:start="27:15" pos:end="27:15">i</name></expr>]</index><index pos:start="27:17" pos:end="27:19">[<expr pos:start="27:18" pos:end="27:18"><name pos:start="27:18" pos:end="27:18">c</name></expr>]</index></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <literal type="number" pos:start="27:23" pos:end="27:23">1</literal></expr>;</expr_stmt>      
      <expr_stmt pos:start="28:7" pos:end="28:49"><expr pos:start="28:7" pos:end="28:48"><name pos:start="28:7" pos:end="28:12"><name pos:start="28:7" pos:end="28:9">row</name><index pos:start="28:10" pos:end="28:12">[<expr pos:start="28:11" pos:end="28:11"><name pos:start="28:11" pos:end="28:11">i</name></expr>]</index></name> <operator pos:start="28:14" pos:end="28:14">=</operator> <name pos:start="28:16" pos:end="28:24"><name pos:start="28:16" pos:end="28:17">x1</name><index pos:start="28:18" pos:end="28:24">[<expr pos:start="28:19" pos:end="28:23"><name pos:start="28:19" pos:end="28:19">i</name> <operator pos:start="28:21" pos:end="28:21">+</operator> <name pos:start="28:23" pos:end="28:23">c</name></expr>]</index></name> <operator pos:start="28:26" pos:end="28:26">=</operator> <name pos:start="28:28" pos:end="28:40"><name pos:start="28:28" pos:end="28:29">x2</name><index pos:start="28:30" pos:end="28:40">[<expr pos:start="28:31" pos:end="28:39"><name pos:start="28:31" pos:end="28:31">i</name> <operator pos:start="28:33" pos:end="28:33">-</operator> <name pos:start="28:35" pos:end="28:35">c</name> <operator pos:start="28:37" pos:end="28:37">+</operator> <name pos:start="28:39" pos:end="28:39">n</name></expr>]</index></name> <operator pos:start="28:42" pos:end="28:42">=</operator> <literal type="boolean" pos:start="28:44" pos:end="28:48">false</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></for>
</block_content>}</block></function>
<function pos:start="32:1" pos:end="44:1"><type pos:start="32:1" pos:end="32:3"><name pos:start="32:1" pos:end="32:3">int</name></type> <name pos:start="32:5" pos:end="32:8">main</name><parameter_list pos:start="32:9" pos:end="32:10">()</parameter_list> <block pos:start="32:12" pos:end="44:1">{<block_content pos:start="33:3" pos:end="43:13">
  <expr_stmt pos:start="33:3" pos:end="33:34"><expr pos:start="33:3" pos:end="33:33"><call pos:start="33:3" pos:end="33:33"><name pos:start="33:3" pos:end="33:9">freopen</name><argument_list pos:start="33:10" pos:end="33:33">(<argument pos:start="33:11" pos:end="33:20"><expr pos:start="33:11" pos:end="33:20"><literal type="string" pos:start="33:11" pos:end="33:20">"queen.in"</literal></expr></argument>, <argument pos:start="33:23" pos:end="33:25"><expr pos:start="33:23" pos:end="33:25"><literal type="string" pos:start="33:23" pos:end="33:25">"r"</literal></expr></argument>, <argument pos:start="33:28" pos:end="33:32"><expr pos:start="33:28" pos:end="33:32"><name pos:start="33:28" pos:end="33:32">stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt pos:start="34:3" pos:end="34:36"><expr pos:start="34:3" pos:end="34:35"><call pos:start="34:3" pos:end="34:35"><name pos:start="34:3" pos:end="34:9">freopen</name><argument_list pos:start="34:10" pos:end="34:35">(<argument pos:start="34:11" pos:end="34:21"><expr pos:start="34:11" pos:end="34:21"><literal type="string" pos:start="34:11" pos:end="34:21">"queen.out"</literal></expr></argument>, <argument pos:start="34:24" pos:end="34:26"><expr pos:start="34:24" pos:end="34:26"><literal type="string" pos:start="34:24" pos:end="34:26">"w"</literal></expr></argument>, <argument pos:start="34:29" pos:end="34:34"><expr pos:start="34:29" pos:end="34:34"><name pos:start="34:29" pos:end="34:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt pos:start="35:3" pos:end="35:11"><expr pos:start="35:3" pos:end="35:10"><name pos:start="35:3" pos:end="35:5">cin</name> <operator pos:start="35:7" pos:end="35:8">&gt;&gt;</operator> <name pos:start="35:10" pos:end="35:10">n</name></expr>;</expr_stmt>
  <for pos:start="36:3" pos:end="40:3">for<control pos:start="36:6" pos:end="36:28">(<init pos:start="36:7" pos:end="36:16"><decl pos:start="36:7" pos:end="36:15"><type pos:start="36:7" pos:end="36:9"><name pos:start="36:7" pos:end="36:9">int</name></type> <name pos:start="36:11" pos:end="36:11">i</name> <init pos:start="36:13" pos:end="36:15">= <expr pos:start="36:15" pos:end="36:15"><literal type="number" pos:start="36:15" pos:end="36:15">0</literal></expr></init></decl>;</init> <condition pos:start="36:18" pos:end="36:23"><expr pos:start="36:18" pos:end="36:22"><name pos:start="36:18" pos:end="36:18">i</name> <operator pos:start="36:20" pos:end="36:20">&lt;</operator> <name pos:start="36:22" pos:end="36:22">n</name></expr>;</condition> <incr pos:start="36:25" pos:end="36:27"><expr pos:start="36:25" pos:end="36:27"><name pos:start="36:25" pos:end="36:25">i</name><operator pos:start="36:26" pos:end="36:27">++</operator></expr></incr>)</control> <block pos:start="36:30" pos:end="40:3">{<block_content pos:start="37:5" pos:end="39:5">
    <for pos:start="37:5" pos:end="39:5">for<control pos:start="37:8" pos:end="37:30">(<init pos:start="37:9" pos:end="37:18"><decl pos:start="37:9" pos:end="37:17"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:13">j</name> <init pos:start="37:15" pos:end="37:17">= <expr pos:start="37:17" pos:end="37:17"><literal type="number" pos:start="37:17" pos:end="37:17">0</literal></expr></init></decl>;</init> <condition pos:start="37:20" pos:end="37:25"><expr pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:20">j</name> <operator pos:start="37:22" pos:end="37:22">&lt;</operator> <name pos:start="37:24" pos:end="37:24">n</name></expr>;</condition> <incr pos:start="37:27" pos:end="37:29"><expr pos:start="37:27" pos:end="37:29"><name pos:start="37:27" pos:end="37:27">j</name><operator pos:start="37:28" pos:end="37:29">++</operator></expr></incr>)</control> <block pos:start="37:32" pos:end="39:5">{<block_content pos:start="38:7" pos:end="38:25">
      <expr_stmt pos:start="38:7" pos:end="38:25"><expr pos:start="38:7" pos:end="38:24"><name pos:start="38:7" pos:end="38:9">cin</name> <operator pos:start="38:11" pos:end="38:12">&gt;&gt;</operator> <name pos:start="38:14" pos:end="38:24"><name pos:start="38:14" pos:end="38:18">value</name><index pos:start="38:19" pos:end="38:21">[<expr pos:start="38:20" pos:end="38:20"><name pos:start="38:20" pos:end="38:20">i</name></expr>]</index><index pos:start="38:22" pos:end="38:24">[<expr pos:start="38:23" pos:end="38:23"><name pos:start="38:23" pos:end="38:23">j</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
  </block_content>}</block></for>
    <expr_stmt pos:start="41:5" pos:end="41:13"><expr pos:start="41:5" pos:end="41:12"><call pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:7">dfs</name><argument_list pos:start="41:8" pos:end="41:12">(<argument pos:start="41:9" pos:end="41:9"><expr pos:start="41:9" pos:end="41:9"><literal type="number" pos:start="41:9" pos:end="41:9">0</literal></expr></argument>,<argument pos:start="41:11" pos:end="41:11"><expr pos:start="41:11" pos:end="41:11"><literal type="number" pos:start="41:11" pos:end="41:11">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt pos:start="42:3" pos:end="42:22"><expr pos:start="42:3" pos:end="42:21"><name pos:start="42:3" pos:end="42:6">cout</name> <operator pos:start="42:8" pos:end="42:9">&lt;&lt;</operator> <name pos:start="42:11" pos:end="42:13">ans</name> <operator pos:start="42:15" pos:end="42:16">&lt;&lt;</operator> <name pos:start="42:18" pos:end="42:21">endl</name></expr>;</expr_stmt>
    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>    
</block_content>}</block></function>
</unit>
